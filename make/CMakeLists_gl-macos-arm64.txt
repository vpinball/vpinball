cmake_minimum_required(VERSION 3.25)

option(ENABLE_SANITIZERS "Enable AddressSanitizer and UBSan" OFF)

message(STATUS "ENABLE_SANITIZERS: ${ENABLE_SANITIZERS}")

file(READ src/core/vpversion.h version)
string(REGEX MATCH "VP_VERSION_MAJOR[ ]+([0-9]+)" _tmp ${version})
set(VERSION_MAJOR "${CMAKE_MATCH_1}")
string(REGEX MATCH "VP_VERSION_MINOR[ ]+([0-9]+)" _tmp ${version})
set(VERSION_MINOR "${CMAKE_MATCH_1}")
string(REGEX MATCH "VP_VERSION_REV[ ]+([0-9]+)" _tmp ${version})
set(VERSION_REV "${CMAKE_MATCH_1}")
set(APP_NAME "VPinballX_GL")

project(vpinball VERSION "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_REV}")

include("${CMAKE_SOURCE_DIR}/make/CMakeLists_common_standalone.txt")

set(CMAKE_OSX_DEPLOYMENT_TARGET 14.0)
set(CMAKE_OSX_ARCHITECTURES arm64)

set(CMAKE_BUILD_WITH_INSTALL_RPATH TRUE)
set(CMAKE_INSTALL_RPATH "@executable_path/../Frameworks")

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_C_STANDARD 99)

if(ENABLE_SANITIZERS)
   add_compile_options(-fsanitize=address)
   add_link_options(-fsanitize=address)

   add_compile_options(-fsanitize=undefined)
   add_link_options(-fsanitize=undefined)
endif()

add_library(glad
   third-party/include/glad/src/gl.c
)

target_include_directories(glad PUBLIC
   third-party/include/glad/include
)

find_package(BISON 3.8.2 REQUIRED)
bison_target(vbsparser ${CMAKE_SOURCE_DIR}/standalone/inc/wine/dlls/vbscript/parser.y ${CMAKE_SOURCE_DIR}/standalone/inc/wine/dlls/vbscript/parser.tab.c 
	     DEFINES_FILE ${CMAKE_SOURCE_DIR}/standalone/inc/wine/dlls/vbscript/parser.tab.h)

add_executable(vpinball 
   ${VPX_STANDALONE_SOURCES}

   src/input/OpenPinDevHandler.h
   src/input/OpenPinDevHandler.cpp

   standalone/macos/main.mm

   third-party/include/imgui/imgui_impl_opengl3.cpp
   third-party/include/imgui/imgui_impl_opengl3.h
   third-party/include/imgui/imgui_impl_sdl3.cpp
   third-party/include/imgui/imgui_impl_sdl3.h
)

target_include_directories(vpinball PUBLIC
   ${CMAKE_SOURCE_DIR}/third-party/include
   ${CMAKE_SOURCE_DIR}
   standalone/inc/wine/include
   standalone/inc/wine/dlls/atl
   standalone/inc/wine/dlls/vbscript
   standalone/inc/wine/dlls/oleaut32
   standalone/inc/wine/dlls/kernelbase
   media
   pin
   src
   src/plugins
)

target_precompile_headers(vpinball PUBLIC
)

target_compile_definitions(vpinball PRIVATE
   __STANDALONE__

   ENABLE_OPENGL
   ENABLE_SDL_VIDEO
   ENABLE_SDL_INPUT

   __WINESRC__
   WINE_UNICODE_NATIVE

   WINE_NO_TRACE_MSGS
   WINE_NO_DEBUG_MSGS

   "__forceinline=__attribute__((always_inline)) inline"
)

target_compile_options(vpinball PUBLIC
   -fvisibility=hidden
   -Wno-inconsistent-missing-override
   -Wno-missing-exception-spec
   $<$<OR:$<CXX_COMPILER_ID:Clang>,$<CXX_COMPILER_ID:AppleClang>>:
      -fdenormal-fp-math=preserve-sign
      -freciprocal-math
      -fassociative-math
      -fapprox-func
      -fno-math-errno
      -fno-trapping-math
      -ffp-contract=off
      -Wno-shorten-64-to-32>
   $<$<CXX_COMPILER_ID:GNU>:
      -ffast-math
      -ffp-contract=off>
)

target_link_directories(vpinball PUBLIC
   "${CMAKE_SOURCE_DIR}/third-party/runtime-libs/macos-arm64"
)

target_link_libraries(vpinball PUBLIC
   glad
   SDL3
   SDL3_image
   SDL3_ttf
   freeimage
   hidapi
   pinmame
   altsound
   dmdutil
   dof
   avcodec
   avdevice
   avfilter
   avformat
   avutil
   swresample
   swscale
   zip
   "-framework AppKit"
   "-framework CoreVideo"
   "-framework CoreMedia"
   "-framework VideoToolbox"
   "-framework AudioToolbox"
   "-framework Security"
)

set_target_properties(vpinball PROPERTIES
   RUNTIME_OUTPUT_NAME "${APP_NAME}"
   MACOSX_BUNDLE YES
   MACOSX_BUNDLE_INFO_PLIST "${CMAKE_SOURCE_DIR}/standalone/macos/Info_GL.plist"
)

add_custom_command(TARGET vpinball POST_BUILD
   COMMAND "${CMAKE_COMMAND}" -E copy_directory "${CMAKE_SOURCE_DIR}/src/assets" "$<TARGET_FILE_DIR:vpinball>/../Resources/assets"
   COMMAND "${CMAKE_COMMAND}" -E copy_directory "${CMAKE_SOURCE_DIR}/scripts" "$<TARGET_FILE_DIR:vpinball>/../Resources/scripts"
   COMMAND "${CMAKE_COMMAND}" -E copy_directory "${CMAKE_SOURCE_DIR}/tables" "$<TARGET_FILE_DIR:vpinball>/../Resources/tables"
   COMMAND "${CMAKE_COMMAND}" -E copy_directory "${CMAKE_SOURCE_DIR}/docs" "$<TARGET_FILE_DIR:vpinball>/../Resources/docs"
   COMMAND "${CMAKE_COMMAND}" -E make_directory "$<TARGET_FILE_DIR:vpinball>/../Resources/shaders-${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_REV}"
   COMMAND "${CMAKE_COMMAND}" -E copy "${CMAKE_SOURCE_DIR}/src/shaders/hlsl_glsl/BasicShader.glfx" "$<TARGET_FILE_DIR:vpinball>/../Resources/shaders-${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_REV}"
   COMMAND "${CMAKE_COMMAND}" -E copy "${CMAKE_SOURCE_DIR}/src/shaders/hlsl_glsl/DMDShader.glfx" "$<TARGET_FILE_DIR:vpinball>/../Resources/shaders-${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_REV}"
   COMMAND "${CMAKE_COMMAND}" -E copy "${CMAKE_SOURCE_DIR}/src/shaders/hlsl_glsl/FBShader.glfx" "$<TARGET_FILE_DIR:vpinball>/../Resources/shaders-${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_REV}"
   COMMAND "${CMAKE_COMMAND}" -E copy "${CMAKE_SOURCE_DIR}/src/shaders/hlsl_glsl/SMAA.glfx" "$<TARGET_FILE_DIR:vpinball>/../Resources/shaders-${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_REV}"  
   COMMAND "${CMAKE_COMMAND}" -E copy "${CMAKE_SOURCE_DIR}/src/shaders/hlsl_glsl/FlasherShader.glfx" "$<TARGET_FILE_DIR:vpinball>/../Resources/shaders-${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_REV}"
   COMMAND "${CMAKE_COMMAND}" -E copy "${CMAKE_SOURCE_DIR}/src/shaders/hlsl_glsl/LightShader.glfx" "$<TARGET_FILE_DIR:vpinball>/../Resources/shaders-${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_REV}"
   COMMAND "${CMAKE_COMMAND}" -E copy "${CMAKE_SOURCE_DIR}/src/shaders/hlsl_glsl/BallShader.glfx" "$<TARGET_FILE_DIR:vpinball>/../Resources/shaders-${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_REV}"
   COMMAND "${CMAKE_COMMAND}" -E copy "${CMAKE_SOURCE_DIR}/src/shaders/hlsl_glsl/ClassicLightShader.glfx" "$<TARGET_FILE_DIR:vpinball>/../Resources/shaders-${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_REV}"
   COMMAND "${CMAKE_COMMAND}" -E copy "${CMAKE_SOURCE_DIR}/src/shaders/hlsl_glsl/StereoShader.glfx" "$<TARGET_FILE_DIR:vpinball>/../Resources/shaders-${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_REV}"
   COMMAND "${CMAKE_COMMAND}" -E copy "${CMAKE_SOURCE_DIR}/src/shaders/hlsl_glsl/Helpers.fxh" "$<TARGET_FILE_DIR:vpinball>/../Resources/shaders-${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_REV}"
   COMMAND "${CMAKE_COMMAND}" -E copy "${CMAKE_SOURCE_DIR}/src/shaders/hlsl_glsl/FBShader.fxh" "$<TARGET_FILE_DIR:vpinball>/../Resources/shaders-${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_REV}"
   COMMAND "${CMAKE_COMMAND}" -E copy "${CMAKE_SOURCE_DIR}/src/shaders/hlsl_glsl/Material_GL.fxh" "$<TARGET_FILE_DIR:vpinball>/../Resources/shaders-${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_REV}"
   COMMAND "${CMAKE_COMMAND}" -E copy "${CMAKE_SOURCE_DIR}/src/shaders/hlsl_glsl/BallShadows.fxh" "$<TARGET_FILE_DIR:vpinball>/../Resources/shaders-${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_REV}"
   COMMAND "${CMAKE_COMMAND}" -E copy "${CMAKE_SOURCE_DIR}/src/shaders/hlsl_glsl/SMAA.fxh" "$<TARGET_FILE_DIR:vpinball>/../Resources/shaders-${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_REV}"
   COMMAND "${CMAKE_COMMAND}" -E copy "${CMAKE_SOURCE_DIR}/src/shaders/hlsl_glsl/FXAAStereoAO_GL.fxh" "$<TARGET_FILE_DIR:vpinball>/../Resources/shaders-${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_REV}"
   COMMAND "${CMAKE_COMMAND}" -E copy "${CMAKE_SOURCE_DIR}/src/shaders/hlsl_glsl/SSR_GL.fxh" "$<TARGET_FILE_DIR:vpinball>/../Resources/shaders-${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_REV}"
   COMMAND "${CMAKE_COMMAND}" -E copy "${CMAKE_SOURCE_DIR}/src/shaders/hlsl_glsl/Stereo.fxh" "$<TARGET_FILE_DIR:vpinball>/../Resources/shaders-${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_REV}"
   COMMAND "${CMAKE_COMMAND}" -E make_directory "$<TARGET_FILE_DIR:vpinball>/../Frameworks"
   COMMAND cp -a "${CMAKE_SOURCE_DIR}/third-party/runtime-libs/macos-arm64/*.dylib" "$<TARGET_FILE_DIR:vpinball>/../Frameworks"
   COMMAND "${CMAKE_COMMAND}" -E copy "${CMAKE_SOURCE_DIR}/standalone/macos/VPinballX.icns" "$<TARGET_FILE_DIR:vpinball>/../Resources"
   COMMAND /usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString ${CMAKE_PROJECT_VERSION}" $<TARGET_FILE_DIR:vpinball>/../Info.plist
   COMMAND /usr/libexec/PlistBuddy -c "Set :CFBundleVersion ${CMAKE_PROJECT_VERSION}" $<TARGET_FILE_DIR:vpinball>/../Info.plist
)

set(PluginPlatform "macos")
set(PluginArch "arm64")
include("${CMAKE_SOURCE_DIR}/make/CMakeLists_plugins.txt")
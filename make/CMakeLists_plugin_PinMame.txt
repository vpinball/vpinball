# plugin CMake file to be included in main project CMakelists

# --- PinMame plugin ---

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_C_STANDARD 99)

add_library(PinMamePlugin MODULE
   plugins/pinmame/common.cpp
   plugins/pinmame/PinMamePlugin.cpp
   plugins/pinmame/Controller.cpp
   plugins/pinmame/ControllerSettings.cpp
   plugins/pinmame/Game.cpp
   plugins/pinmame/Games.cpp
   plugins/pinmame/GameSettings.cpp
   plugins/pinmame/Rom.cpp
   plugins/pinmame/Roms.cpp
   plugins/pinmame/Settings.cpp

   plugins/pinmame/common.h
   plugins/pinmame/Controller.h
   plugins/pinmame/ControllerSettings.h
   plugins/pinmame/Game.h
   plugins/pinmame/Games.h
   plugins/pinmame/GameSettings.h
   plugins/pinmame/Rom.h
   plugins/pinmame/Roms.h
   plugins/pinmame/Settings.h
)

target_include_directories(PinMamePlugin PUBLIC
   plugins/pinmame
   ${CMAKE_SOURCE_DIR}/third-party/include
   src/plugins
)

if(PluginPlatform STREQUAL "windows")
   add_compile_options(
      $<$<CONFIG:RELEASE>:/Ob2>
      $<$<CONFIG:RELEASE>:/O2>
      $<$<CONFIG:RELEASE>:/Oi>
      $<$<CONFIG:RELEASE>:/arch:SSE2>
      $<$<CONFIG:RELEASE>:/fp:fast>
      $<$<CONFIG:RELEASE>:/fp:except->
      $<$<CONFIG:RELEASE>:/Ot>
      $<$<CONFIG:RELEASE>:/GF>
      $<$<CONFIG:RELEASE>:/GS->
      $<$<CONFIG:RELEASE>:/Gy>
      $<$<CONFIG:RELEASE>:/GR>
      $<$<CONFIG:RELEASE>:/Oy>
      $<$<CONFIG:RELEASE>:/GT>
      $<$<CONFIG:RELEASE>:/GL>
   )
   set_target_properties(PinMamePlugin PROPERTIES
       MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:DEBUG>:Debug>"
   )
   target_compile_options(PinMamePlugin PUBLIC
      $<$<CONFIG:RELEASE>:$<$<COMPILE_LANGUAGE:CXX>:${OPT_COMMON}>>
      $<$<CONFIG:RELEASE>:$<$<COMPILE_LANGUAGE:C>:${OPT_COMMON}>>
   )
   target_link_options(PinMamePlugin PUBLIC
      $<$<CONFIG:RELEASE>:/INCREMENTAL:NO>
      $<$<CONFIG:RELEASE>:/OPT:REF>
      $<$<CONFIG:RELEASE>:/OPT:ICF>
      $<$<CONFIG:RELEASE>:/LTCG>
   )
   if (PluginArch STREQUAL "x64")
      set_target_properties(PinMamePlugin PROPERTIES
         OUTPUT_NAME "plugin-pinmame64"
      )
      target_link_directories(PinMamePlugin PUBLIC ${CMAKE_SOURCE_DIR}/third-party/build-libs/windows-x64)
      target_link_libraries(PinMamePlugin pinmame64.lib)
   else()
      set_target_properties(PinMamePlugin PROPERTIES
         OUTPUT_NAME "plugin-pinmame"
      )
      target_link_directories(PinMamePlugin PUBLIC ${CMAKE_SOURCE_DIR}/third-party/build-libs/windows-x86)
      target_link_libraries(PinMamePlugin pinmame.lib)
   endif()
else()
   set_target_properties(PinMamePlugin PROPERTIES
      PREFIX ""
      OUTPUT_NAME "plugin-pinmame"
   )
   target_link_directories(PinMamePlugin PUBLIC
      ${CMAKE_SOURCE_DIR}/third-party/runtime-libs/${PluginPlatform}-${PluginArch}
   )
   target_link_libraries(PinMamePlugin PUBLIC pinmame)
endif()

add_custom_command(TARGET PinMamePlugin POST_BUILD
   COMMAND "${CMAKE_COMMAND}" -E copy "${CMAKE_SOURCE_DIR}/plugins/pinmame/plugin.cfg" "${PLUGINS_DIR}/pinmame/plugin.cfg"
   COMMAND "${CMAKE_COMMAND}" -E copy "$<TARGET_FILE:PinMamePlugin>" "${PLUGINS_DIR}/pinmame"
   COMMAND "${CMAKE_COMMAND}" -E rm "$<TARGET_FILE:PinMamePlugin>"
)

if(PluginPlatform STREQUAL "windows")
   if (PluginArch STREQUAL "x64")
      add_custom_command(TARGET PinMamePlugin POST_BUILD
         COMMAND "${CMAKE_COMMAND}" -E copy "${CMAKE_SOURCE_DIR}/third-party/runtime-libs/windows-x64/pinmame64.dll" "${PLUGINS_DIR}/pinmame/pinmame64.dll"
      )
   elseif (PluginArch STREQUAL "x86")
      add_custom_command(TARGET PinMamePlugin POST_BUILD
         COMMAND "${CMAKE_COMMAND}" -E copy "${CMAKE_SOURCE_DIR}/third-party/runtime-libs/windows-x86/pinmame.dll" "${PLUGINS_DIR}/pinmame/pinmame.dll"
      )
   endif()
endif()

; #######################################################
; #  Visual Pinball X 10.8.1 - Complete Configuration File
; #  with exact default values extracted from source code
; #
; # This file contains all Visual Pinball settings with
; # real default values and detailed explanations.
; #
; # When a property is not defined (nothing after the '=' sign),
; # VPX will use the default value indicated in the comments.
; #
; #######################################################

; #######################################################
; # Section [Standalone] - Standalone Configuration
; # Settings for standalone mode and external plugins
[Standalone]

; === REGISTRY PATH ===
VPRegPath = 
; Path to VPX registry settings (optional)
; Default: (empty - uses standard Windows registry)

; === PINMAME ===
PinMAMEPath = 
; Path to PinMAME folder
; Default: ~/.pinmame (default user folder)
; Example: C:\Visual Pinball\PinMAME

; === ALTSOUND ===
AltSound = 
; Enable/disable AltSound for enhanced audio
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: AltSound allows using higher quality OGG/WAV audio files

AltColor = 
; Enable/disable AltColor for colorized DMD
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: AltColor adds colors to monochrome DMDs

; === B2S (BACKGLASS SERVER) ===
B2SHideGrill = 
; Hide B2S backglass decorative grill
; Default: 0 (show grill if it exists)
; Values: 0 = show, 1 = hide
; Info: Grill simulates the look of real backglass with metal structure

B2SHideB2SDMD = 
; Hide B2S extra DMD frame
; Default: 0 (show DMD frame if it exists)
; Values: 0 = show, 1 = hide
; Info: Some B2S backglasses include decorative frame around DMD

B2SHideB2SBackglass = 
; Hide B2S backglass completely
; Default: 0 (show backglass)
; Values: 0 = show, 1 = hide
; Info: Allows disabling backglass display without uninstalling B2S

B2SHideDMD = 
; Hide DMD in B2S backglass
; Default: 0 (show DMD)
; Values: 0 = show, 1 = hide
; Info: Useful if you're using a separate physical DMD

B2SDualMode = 
; B2S dual mode (dual display)
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Allows displaying backglass on two screens simultaneously

B2SWindows = 
; Global control for B2S windows display
; Default: 1 (show according to other settings)
; Values: 0 = hide all B2S windows, 1 = show according to other settings
; Info: Master switch for all B2S elements

B2SDMDFlipY = 
; Flip B2S DMD vertically
; Default: 0 (normal)
; Values: 0 = normal, 1 = flipped
; Info: Useful for certain cabinet configurations with inverted DMD

B2SPlugins = 
; Enable additional B2S plugins
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Allows using third-party plugins for B2S

; === PUP (PINUP PLAYER) ===
PUPCapture = 
; Enable screen capture for PUP
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Allows PUP to capture and modify VPX display

PUPPlugin = 
; Enable main PUP plugin
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: PinUP Player is an advanced multi-screen display management system

PUPWindows = 
; Enable PUP windows display
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled

; PUP screen configuration
PUPTopperScreen = 
; Screen number for PUP topper
; Default: 0 (main screen)
; Values: 0, 1, 2... (Windows screen number)

PUPTopperWindow = 
; Enable PUP topper window
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled

PUPBackglassScreen = 
; Screen number for PUP backglass
; Default: 0 (main screen)
; Values: 0, 1, 2... (Windows screen number)

PUPBackglassWindow = 
; Enable PUP backglass window
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled

PUPDMDScreen = 
; Screen number for PUP DMD
; Default: 0 (main screen)
; Values: 0, 1, 2... (Windows screen number)

PUPDMDWindow = 
; Enable PUP DMD window
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled

PUPPlayfieldScreen = 
; Screen number for PUP playfield
; Default: 0 (main screen)
; Values: 0, 1, 2... (Windows screen number)

PUPPlayfieldWindow = 
; Enable PUP playfield window
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled

PUPFullDMDScreen = 
; Screen number for PUP full DMD
; Default: 0 (main screen)
; Values: 0, 1, 2... (Windows screen number)

PUPFullDMDWindow = 
; Enable PUP full DMD window
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled

; === DOF (DIRECT OUTPUT FRAMEWORK) ===
DOFPlugin = 
; Enable DOF plugin for haptic feedback
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: DOF controls shakers, contactors, LED lighting, solenoids, etc.

; === ZEDMD (MODERN LED DMD) ===
ZeDMD = 
; Enable ZeDMD support
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: ZeDMD is a modern physical DMD with high-resolution LED matrix

ZeDMDDevice = 
; ZeDMD device to use
; Default: AUTO (automatic detection)
; Values: AUTO, COM1, COM2, COM3, etc.
; Info: Serial or USB port for ZeDMD communication

ZeDMDDebug = 
; ZeDMD debug mode for diagnostics
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Enables detailed logging to troubleshoot ZeDMD issues

ZeDMDBrightness = 
; ZeDMD brightness
; Default: 15 (maximum brightness)
; Values: 0-15 (0 = very dim, 15 = very bright)
; Info: Adjusts overall LED matrix brightness

ZeDMDWiFi = 
; Enable WiFi connection for ZeDMD
; Default: 0 (disabled - uses USB/serial)
; Values: 0 = disabled, 1 = enabled
; Info: Allows connecting ZeDMD via WiFi instead of USB

ZeDMDWiFiAddr = 
; ZeDMD WiFi IP address
; Default: 192.168.4.1 (default ZeDMD address)
; Format: IP address (e.g., 192.168.1.100)
; Info: ZeDMD IP in access point mode or local network

; === PIXELCADE ===
Pixelcade = 
; Enable Pixelcade support (LED display for cabinet)
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Pixelcade is a programmable LED display system

PixelcadeDevice = 
; Pixelcade device to use
; Default: AUTO (automatic detection)
; Values: AUTO, COM1, COM2, COM3, etc.
; Info: Serial port for Pixelcade communication

; === DMD UTILS AND SERVER ===
DumpDMDTxt = 
; Save DMD content as text format
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Useful for debugging - creates .txt files with DMD content

DumpDMDRaw = 
; Save DMD content in raw format
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Saves binary DMD data for analysis

FindDisplays = 
; Automatic discovery of connected displays
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Automatically detects all screens for multi-monitor configuration

DMDServer = 
; Enable network DMD server
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Allows sharing DMD via network to other applications

DMDServerAddr = 
; DMD server address
; Default: localhost (127.0.0.1)
; Format: IP address or hostname
; Info: Address where DMD server listens for connections

DMDServerPort = 
; DMD server port
; Default: 6789
; Values: 1-65535 (TCP/IP port)
; Info: Network port for DMD server connections

; === RENDERING ===
RenderingModeOverride = 
; Force specific rendering mode
; Default: 2 (for mobile/embedded version)
; Values: 0 = automatic, 1 = force software, 2 = force hardware
; Info: Overrides automatically detected rendering mode

; === MOBILE SETTINGS ===
TableListMode = 
; Table list display mode on mobile
; Default: 0 (text list)
; Values: 0 = list, 1 = grid with thumbnails
; Info: Touch interface - list or grid for table selection

TableListSort = 
; Table list sorting criteria
; Default: 0 (sort by name)
; Values: 0 = name, 1 = modification date, 2 = author
; Info: Determines table display order

Haptics = 
; Haptic feedback on mobile devices
; Default: 1 (enabled)
; Values: 0 = disabled, 1 = enabled
; Info: Vibrations during touch interactions (flipper, bumper, etc.)

LiveUIOverride = 
; Force mobile/touch interface
; Default: 0 (automatic detection)
; Values: 0 = auto, 1 = force mobile interface
; Info: Enables touch interface even on desktop

TouchOverlay = 
; Display touch control overlay
; Default: 1 (enabled on mobile)
; Values: 0 = disabled, 1 = enabled
; Info: Virtual on-screen buttons for flipper, plunger, etc.

TouchInstructions = 
; Display touch control instructions
; Default: 1 (enabled)
; Values: 0 = disabled, 1 = enabled
; Info: Help messages explaining touch gestures

ResetLogOnPlay = 
; Reset logs at each game start
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Clears log file at the beginning of each table

; === INTEGRATED WEB SERVER ===
WebServer = 
; Enable integrated web server for remote control
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Web interface to control VPX from browser

WebServerAddr = 
; Web server listen address
; Default: 0.0.0.0 (all network interfaces)
; Format: IP address (0.0.0.0 = all, 127.0.0.1 = local only)
; Info: Determines who can access the web server

WebServerPort = 
; Web server port
; Default: 8080
; Values: 1-65535 (TCP/IP port)
; Info: Port to access web interface (e.g., http://localhost:8080)

WebServerDebug = 
; Web server debug mode
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Detailed logging for integrated web server

; #######################################################
; # Sections [Plugin.*] - Plugin Configuration
; # Activation and specific settings for each plugin
; #######################################################

[Plugin.AlphaDMD]
Enable = 
; Enable AlphaDMD plugin for alphanumeric displays
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Manages segment displays (scores, text) from electromechanical machines

[Plugin.B2S]
Enable = 
; Enable B2S (Backglass Server) plugin
; Default: 1 (enabled)
; Values: 0 = disabled, 1 = enabled
; Info: Main plugin for animated and interactive backglasses

[Plugin.DMDUtil]
Enable = 
; Enable DMDUtil plugin for advanced DMD tools
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Utilities for DMD manipulation and colorization

; Luminosity tint parameters (RGB)
LumTintR = 
LumTintG = 
LumTintB = 
; RGB luminosity tint for DMD
; Default: 255, 255, 255 (pure white)
; Values: 0-255 (Red, Green, Blue components)
; Info: Allows adding color tint to DMD (e.g., orange = 255,128,0)

; ZeDMD parameters in DMDUtil (duplicated from Standalone)
ZeDMD = 
ZeDMDDevice = 
ZeDMDDebug = 
ZeDMDBrightness = 
ZeDMDWiFi = 
ZeDMDWiFiAddr = 
Pixelcade = 
PixelcadeDevice = 
DumpDMDTxt = 
DumpDMDRaw = 
FindDisplays = 
DMDServer = 
DMDServerAddr = 
DMDServerPort = 
; See Standalone section for detailed descriptions

[Plugin.DOF]
Enable = 
; Enable DOF (Direct Output Framework) plugin
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Interface with cabinet hardware (shakers, contactors, LEDs, solenoids)

[Plugin.FlexDMD]
Enable = 
; Enable FlexDMD plugin for flexible DMD
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Programmable DMD with animations, effects and custom content

[Plugin.PinMAME]
Enable = 
; Enable PinMAME plugin for ROM emulation
; Default: 1 (enabled)
; Values: 0 = disabled, 1 = enabled
; Info: Emulator for pinball ROMs (sounds, DMD, game logic)

PinMAMEPath = 
; Path to PinMAME specific to this plugin
; Default: (uses global PinMAMEPath from Standalone section)
; Info: Allows having different PinMAME path for plugin

[Plugin.PUP]
Enable = 
; Enable PUP (Pinup Player) plugin
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Advanced multi-screen management system with videos and animations

[Plugin.RemoteControl]
Enable = 
; Enable remote control plugin
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Allows controlling VPX from external application (smartphone, etc.)

[Plugin.Serum]
Enable = 
; Enable Serum plugin for advanced DMD colorization
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Colorizes monochrome DMDs with sophisticated palettes

CRZFolder = 
; Folder containing Serum files (.crz)
; Default: (Serum folder in VPX)
; Example: C:\Visual Pinball\Serum
; Info: .crz files contain colorization data per table

[Plugin.ScoreView]
Enable = 
; Enable ScoreView plugin for score display
; Default: 1 (enabled on mobile/embedded version)
; Values: 0 = disabled, 1 = enabled
; Info: Dedicated display for scores and game information

; #######################################################
; # Secondary Display Configuration Sections
; #######################################################

[Backglass]
BackglassDisplay = 
; Screen number for backglass
; Default: 0 (main screen)
; Values: 0, 1, 2... (Windows screen number)
; Info: Screen to display backglass (usually secondary screen in cabinet)

BackglassFullScreen = 
; Full screen mode for backglass
; Default: 0 (windowed)
; Values: 0 = windowed, 1 = full screen
; Info: In cabinet, usually full screen to cover entire vertical screen

BackglassOutput = 
; Backglass output mode
; Default: 1 (native window on mobile version)
; Values:
;   0 = Disabled
;   1 = Embedded in another output
;   2 = Native system window (window, exclusive fullscreen, VR headset...)
; Info: Determines how backglass is displayed

BackglassWndX = 
BackglassWndY = 
; Backglass window position
; Default: 0, 160 (slightly offset vertically)
; Values: coordinates in pixels
; Info: Position on screen, useful for precise placement in multi-monitor

BackglassWidth = 
BackglassHeight = 
; Backglass window size
; Default: 640, 480 (standard 4:3 resolution)
; Values: width x height in pixels
; Info: Window dimensions, adapted to backglass screen resolution

[ScoreView]
ScoreViewDisplay = 
; Screen for ScoreView display
; Default: 0 (main screen)
; Values: 0, 1, 2... (Windows screen number)
; Info: Screen dedicated to scores (often small LCD screen in cabinet)

ScoreViewFullScreen = 
; Full screen mode for ScoreView
; Default: 0 (windowed)
; Values: 0 = windowed, 1 = full screen
; Info: Usually windowed as ScoreView occupies small area

ScoreViewOutput = 
; ScoreView output mode
; Default: 1 (native window on mobile version)
; Values: 0 = disabled, 1 = embedded, 2 = native window
; Info: How to display score information

ScoreViewWndX = 
ScoreViewWndY = 
; ScoreView window position
; Default: 0, 0 (top-left corner)
; Values: coordinates in pixels
; Info: Score display placement

ScoreViewWidth = 
ScoreViewHeight = 
; ScoreView window size
; Default: 640, 160 (wide and short format)
; Values: width x height in pixels
; Info: Score display area, credits, player number

[Topper]
TopperDisplay = 
; Screen for topper (upper display)
; Default: 0 (main screen)
; Values: 0, 1, 2... (Windows screen number)
; Info: Screen above backglass for animations and effects

TopperFullScreen = 
; Full screen mode for topper
; Default: 0 (windowed)
; Values: 0 = windowed, 1 = full screen
; Info: Usually full screen to cover entire topper screen

TopperOutput = 
; Topper output mode
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = embedded, 2 = native window
; Info: Topper is optional and not present on all cabinets

TopperWndX = 
TopperWndY = 
; Topper window position
; Default: 0, 0
; Values: coordinates in pixels
; Info: Topper display position

TopperWidth = 
TopperHeight = 
; Topper window size
; Default: 1024, 256 (panoramic format)
; Values: width x height in pixels
; Info: Topper is usually a wide screen that's not very tall

; #######################################################
; # Section [Player] - Player Configuration
; # Audio, controls, physics and interface settings
; #######################################################

[Player]

; === MAIN AUDIO ===
Sound3D = 
; 3D audio and surround mode
; Default: 0 (standard 2-channel stereo)
; Values:
;   0 = Standard 2-channel stereo
;   1 = Surround (all effects to rear channels)
;   2 = Surround (front is rear of cabinet)
;   3 = Surround (front is front of cabinet)
;   4 = 7.1 Surround (front is rear, back is side, backbox is front)
;   5 = 7.1 SSF (Sound Feedback exaggerated for cabinet with exciters)
; Info: SSF (mode 5) amplifies positional effects for cabinets with transducers

SoundDevice = 
; Main audio device
; Default: (system default device)
; Info: Use "VPinballX -listsnd" command line to get device IDs
; Example: "Speakers (Realtek High Definition Audio)"

SoundDeviceBG = 
; Secondary audio device for backglass
; Default: (same as SoundDevice)
; Info: Allows having backglass audio on different device
; Useful in cabinet to separate audio sources

PlayMusic = 
; Enable table music playback
; Default: 1 (enabled)
; Values: 0 = disabled, 1 = enabled
; Info: Background music and table melodies

MusicVolume = 
; Music volume
; Default: 100 (maximum volume)
; Values: 0-100 (percentage)
; Info: Music-specific volume, independent from sound effects

PlaySound = 
; Enable sound effects playback
; Default: 1 (enabled)
; Values: 0 = disabled, 1 = enabled
; Info: Sounds from bumpers, flippers, balls, mechanisms

SoundVolume = 
; Sound effects volume
; Default: 100 (maximum volume)
; Values: 0-100 (percentage)
; Info: Game effects volume, independent from music

; === CONTROLS AND NUDGE ===
LRAxis = 
; Left-right axis for nudge (joystick/accelerometer)
; Default: 0 (first axis)
; Values: 0-7 (controller axis number)
; Info: Horizontal axis for lateral table nudge

LRAxisFlip = 
; Invert left-right axis
; Default: 0 (normal)
; Values: 0 = normal, 1 = inverted
; Info: If nudge goes wrong direction, invert this axis

UDAxis = 
; Up-down axis for nudge
; Default: 1 (second axis)
; Values: 0-7 (controller axis number)
; Info: Vertical axis for forward/backward table nudge

UDAxisFlip = 
; Invert up-down axis
; Default: 0 (normal)
; Values: 0 = normal, 1 = inverted
; Info: If nudge goes wrong direction, invert this axis

; === PBW (PINBALL WIZARD ACCELEROMETER) CONFIGURATION ===
PBWEnabled = 
; Enable PBW accelerometer support
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Uses physical accelerometer to detect cabinet movements

PBWNormalMount = 
; Normal accelerometer mounting
; Default: 1 (normal mounting)
; Values: 0 = inverted, 1 = normal
; Info: Depends on physical accelerometer orientation in cabinet

PBWDefaultLayout = 
; Disable default layout of recognized Pincab controllers (DirectInput only)
; Default: 0 (default layout enabled)
; Values: 0 = enabled, 1 = disabled
; Info: VPX recognizes certain cabinet controllers and applies automatic mapping

PBWRotationCB = 
; PBW rotation calibration
; Default: 0 (no calibration)
; Values: 0 = disabled, 1 = enabled
; Info: Calibrates accelerometer orientation

PBWRotationvalue = 
; PBW rotation value in degrees
; Default: 0.0 (no rotation)
; Values: -180.0 to +180.0 (degrees)
; Info: Compensates accelerometer mounting angle

PBWAccelGainX = 
PBWAccelGainY = 
; Accelerometer X/Y gain (sensitivity)
; Default: 1.5 (moderate sensitivity)
; Values: 0.0-10.0 (recommended: 1.0-3.0)
; Info: Multiplies sensitivity - higher = more sensitive to movements

PBWAccelMaxX = 
PBWAccelMaxY = 
; Maximum X/Y acceleration (threshold)
; Default: 2.0 (moderate threshold)
; Values: 0.0-10.0
; Info: Max acceleration value considered - prevents excessive jolts

EnableNudgeFilter = 
; Enable nudge smoothing filter
; Default: 1 (enabled)
; Values: 0 = disabled, 1 = enabled
; Info: Filters sudden movements for more natural nudge

EnableLegacyNudge = 
; Enable legacy nudge system (backward compatibility)
; Default: 0 (disabled - uses new system)
; Values: 0 = new system, 1 = legacy system
; Info: For old tables that depend on legacy behavior

LegacyNudgeStrength = 
; Legacy nudge force
; Default: 1.0 (normal force)
; Values: 0.0-10.0
; Info: Nudge intensity in legacy mode only

AccelVelocityInput = 
; Use accelerometer velocity
; Default: 0 (uses acceleration)
; Values: 0 = acceleration, 1 = velocity
; Info: Movement calculation method - velocity smoother but less responsive

; === TILT CONFIGURATION ===
TiltSensCB = 
; Enable tilt sensitivity calibration
; Default: 0 (uses fixed value)
; Values: 0 = fixed value, 1 = active calibration
; Info: Allows dynamic tilt sensitivity adjustment

TiltSensValue = 
; Tilt sensitivity (trigger threshold)
; Default: 0.4 (moderate sensitivity)
; Values: 0.1-10.0 (lower = more sensitive)
; Info: Force needed to trigger tilt - adjust according to cabinet

TiltInertia = 
; Tilt inertia (damping)
; Default: 1.0 (normal inertia)
; Values: 0.1-5.0
; Info: Simulates ball inertia in table during nudges

; === PLUNGER ===
PlungerAxis = 
; Analog plunger axis
; Default: 2 (third axis, often Z or RZ)
; Values: 0-7 (controller axis number)
; Info: Analog axis to control plunger force

ReversePlungerAxis = 
; Invert plunger axis
; Default: 0 (normal)
; Values: 0 = normal, 1 = inverted
; Info: If pull = release and vice versa, invert this axis

DeadZone = 
; Plunger dead zone (percentage of axis ignored)
; Default: 0 (no dead zone)
; Values: 0-100 (percentage)
; Info: Prevents micro-movements - 5-10% typical for mechanical plunger

PlungerRetract = 
; Plunger retraction percentage
; Default: 0 (no forced retraction)
; Values: 0-100 (percentage)
; Info: Forces plunger rest position - useful for certain mechanisms

; === INTERFACE BEHAVIOR ===
EnableMouseInPlayer = 
; Enable mouse during gameplay
; Default: 0 (mouse disabled in game)
; Values: 0 = disabled, 1 = enabled
; Info: Usually disabled to prevent accidental clicks

EnableCameraModeFlyAround = 
; Enable free camera with Tweak menu (replaced by LiveUI)
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Legacy mode - replaced by LiveUI fly mode

; === INPUT API ===
InputApi = 
; Main input API for controllers
; Default: 0 (DirectInput)
; Values: 0 = DirectInput, 1 = XInput, 2 = Windows Gaming Input
; Info: DirectInput = more compatibility, XInput = Xbox controllers, WGI = modern

; === EXIT CONFIRMATION ===
Exitconfirm = 
; Long ESC press duration to directly close app
; Default: 120 (2 seconds * 60)
; Values: 0 to 1800 (0-30 minutes, expressed as seconds * 60)
; Info: Short press = return to menu, long press = immediate close

DisableESC = 
; Disable ESC key as exit action button
; Default: 0 (ESC enabled)
; Values: 0 = ESC enabled, 1 = ESC disabled
; Info: Useful to prevent accidental exits in cabinet

; === PERFORMANCE OVERLAY ===
ShowFPS = 
; Performance overlay display mode
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = FPS only, 2 = full information
; Info: Displays FPS, frame time, memory usage, etc.

; #######################################################
; # Section [Player] - Keyboard Mappings (continued)
; # All keyboard controls with DirectInput codes
; #######################################################

; === MAIN KEYBOARD MAPPINGS ===
; DirectInput codes (DIK_*) - See correspondence table at end of section

; === FLIPPERS ===
LFlipKey = 
; Left flipper
; Default: 42 (DIK_LSHIFT = Left Shift)
; Values: 0x00-0xFFFF (DirectInput codes)
; Info: Main left flipper key - Left Shift by default

RFlipKey = 
; Right flipper
; Default: 54 (DIK_RSHIFT = Right Shift)
; Values: 0x00-0xFFFF (DirectInput codes)
; Info: Main right flipper key - Right Shift by default

StagedLFlipKey = 
; Left staged flipper
; Default: 219 (DIK_LWIN = Left Windows Key)
; Values: 0x00-0xFFFF (DirectInput codes)
; Info: Flipper with 2 positions - low and high power

StagedRFlipKey = 
; Right staged flipper
; Default: 184 (DIK_RALT = Right Alt)
; Values: 0x00-0xFFFF (DirectInput codes)
; Info: Flipper with 2 positions - low and high power

; === NUDGE (TILT) ===
LTiltKey = 
; Left nudge
; Default: 44 (DIK_Z = Z)
; Values: 0x00-0xFFFF (DirectInput codes)
; Info: Nudges table to the left to influence ball trajectory

RTiltKey = 
; Right nudge
; Default: 53 (DIK_SLASH = /)
; Values: 0x00-0xFFFF (DirectInput codes)
; Info: Nudges table to the right to influence ball trajectory

CTiltKey = 
; Center nudge (forward/backward)
; Default: 57 (DIK_SPACE = Space)
; Values: 0x00-0xFFFF (DirectInput codes)
; Info: Nudges table forward or backward

; === PLUNGER ===
PlungerKey = 
; Plunger (digital ball launcher)
; Default: 28 (DIK_RETURN = Enter)
; Values: 0x00-0xFFFF (DirectInput codes)
; Info: Digital ball launcher (on/off) - different from analog plunger

; === GAME CONTROLS ===
StartGameKey = 
; Start a game
; Default: 2 (DIK_1 = 1)
; Values: 0x00-0xFFFF (DirectInput codes)
; Info: Equivalent of Start button on real pinball machine

AddCreditKey = 
; Add credit (main coin)
; Default: 6 (DIK_5 = 5)
; Values: 0x00-0xFFFF (DirectInput codes)
; Info: Simulates inserting coin into coin mechanism

AddCreditKey2 = 
; Add credit (secondary coin)
; Default: 5 (DIK_4 = 4)
; Values: 0x00-0xFFFF (DirectInput codes)
; Info: Second coin type (quarter vs token for example)

; === MAGNASAVE ===
LMagnaSave = 
; Left MagnaSave
; Default: 29 (DIK_LCONTROL = Left Ctrl)
; Values: 0x00-0xFFFF (DirectInput codes)
; Info: Special button present on certain tables (magnetic save)

RMagnaSave = 
; Right MagnaSave
; Default: 157 (DIK_RCONTROL = Right Ctrl)
; Values: 0x00-0xFFFF (DirectInput codes)
; Info: Right-side MagnaSave - temporarily holds ball

; === SYSTEM AND NAVIGATION ===
ExitGame = 
; Exit game/table
; Default: 16 (DIK_Q = Q)
; Values: 0x00-0xFFFF (DirectInput codes)
; Info: Returns to main menu or closes table

EscapeKey = 
; Escape key
; Default: 1 (DIK_ESCAPE = Escape)
; Values: 0x00-0xFFFF (DirectInput codes)
; Info: Pause menu, exit confirmation according to configuration

PauseKey = 
; Pause
; Default: 25 (DIK_P = P)
; Values: 0x00-0xFFFF (DirectInput codes)
; Info: Pauses/resumes current game

; === AUDIO ===
VolumeUp = 
; Increase volume
; Default: 13 (DIK_EQUALS = =)
; Values: 0x00-0xFFFF (DirectInput codes)
; Info: Increases overall game volume

VolumeDown = 
; Decrease volume
; Default: 12 (DIK_MINUS = -)
; Values: 0x00-0xFFFF (DirectInput codes)
; Info: Decreases overall game volume

; === CAMERA AND VIEW ===
Enable3DKey = 
; Toggle 3D/stereo mode
; Default: 68 (DIK_F10 = F10)
; Values: 0x00-0xFFFF (DirectInput codes)
; Info: Enables/disables stereoscopic rendering if configured

TableRecenterKey = 
; Recenter table view
; Default: 76 (DIK_NUMPAD5 = Numpad 5)
; Values: 0x00-0xFFFF (DirectInput codes)
; Info: Resets camera to default position

TableUpKey = 
; Table view up
; Default: 72 (DIK_NUMPAD8 = Numpad 8)
; Values: 0x00-0xFFFF (DirectInput codes)
; Info: Moves view toward top of table

TableDownKey = 
; Table view down
; Default: 80 (DIK_NUMPAD2 = Numpad 2)
; Values: 0x00-0xFFFF (DirectInput codes)
; Info: Moves view toward bottom of table

; === SPECIAL MECHANICS ===
MechTilt = 
; Mechanical tilt
; Default: 20 (DIK_T = T)
; Values: 0x00-0xFFFF (DirectInput codes)
; Info: Triggers immediate tilt (for old electromechanical tables)

LockbarKey = 
; Lockbar
; Default: 56 (DIK_LALT = Left Alt)
; Values: 0x00-0xFFFF (DirectInput codes)
; Info: Controls bar that blocks/releases balls (certain tables)

; === DEBUG AND DEVELOPMENT ===
FrameCount = 
; Display FPS counter
; Default: 87 (DIK_F11 = F11) on PC, 59 (DIK_F1 = F1) on Mac/Android
; Values: 0x00-0xFFFF (DirectInput codes)
; Info: Toggles performance information display

DebugBalls = 
; Ball debug mode
; Default: 24 (DIK_O = O)
; Values: 0x00-0xFFFF (DirectInput codes)
; Info: Shows debug information about balls (trajectory, speed)

Debugger = 
; Open script debugger
; Default: 32 (DIK_D = D)
; Values: 0x00-0xFFFF (DirectInput codes)
; Info: Launches debugger for table VBScript

TweakKey = 
; Tweak/adjustment mode
; Default: 88 (DIK_F12 = F12)
; Values: 0x00-0xFFFF (DirectInput codes)
; Info: Opens real-time settings menu (LiveUI)

; === CUSTOM KEYS ===
JoyCustom1Key = 
JoyCustom2Key = 
JoyCustom3Key = 
JoyCustom4Key = 
; Custom keys 1-4
; Default: (undefined)
; Values: 0x00-0xFFFF (DirectInput codes)
; Info: Free keys for custom functions or table scripts

; #######################################################
; # DIRECTINPUT CODE CORRESPONDENCE TABLE
; # Main codes used in VPX
; #######################################################
;
; LETTERS:
; A=30, B=48, C=46, D=32, E=18, F=33, G=34, H=35, I=23, J=36
; K=37, L=38, M=50, N=49, O=24, P=25, Q=16, R=19, S=31, T=20
; U=22, V=47, W=17, X=45, Y=21, Z=44
;
; NUMBERS (main row):
; 1=2, 2=3, 3=4, 4=5, 5=6, 6=7, 7=8, 8=9, 9=10, 0=11
;
; NUMPAD:
; NUM0=82, NUM1=79, NUM2=80, NUM3=81, NUM4=75, NUM5=76
; NUM6=77, NUM7=71, NUM8=72, NUM9=73
;
; SPECIAL KEYS:
; SPACE=57, RETURN=28, ESCAPE=1, TAB=15, BACKSPACE=14
; LSHIFT=42, RSHIFT=54, LCONTROL=29, RCONTROL=157
; LALT=56, RALT=184, LWIN=219, RWIN=220
;
; FUNCTION KEYS:
; F1=59, F2=60, F3=61, F4=62, F5=63, F6=64
; F7=65, F8=66, F9=67, F10=68, F11=87, F12=88
;
; SYMBOLS:
; MINUS=12, EQUALS=13, LBRACKET=26, RBRACKET=27
; SEMICOLON=39, APOSTROPHE=40, GRAVE=41, BACKSLASH=43
; COMMA=51, PERIOD=52, SLASH=53
;
; ARROWS:
; UP=200, DOWN=208, LEFT=203, RIGHT=205
;
; OTHERS:
; INSERT=210, DELETE=211, HOME=199, END=207
; PGUP=201, PGDN=209, PAUSE=197, SCROLL=70

; #######################################################
; # Section [Player] - Gamepad/Joystick Mappings (continued)
; # Button and axis configuration for Xbox/PlayStation/generic controllers
; #######################################################

; === GAMEPAD/JOYSTICK MAPPINGS ===
; Values depend on SDL vs DirectInput compilation
; SDL: standard Xbox buttons +1, DirectInput: 0 by default

; === FLIPPERS ===
JoyLFlipKey = 
; Left flipper on gamepad
; Default: 5 (SDL: Left Shoulder + 1 = LB/L1)
; Default DirectInput: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: Left rear trigger (LB on Xbox, L1 on PlayStation)

JoyRFlipKey = 
; Right flipper on gamepad
; Default: 6 (SDL: Right Shoulder + 1 = RB/R1)
; Default DirectInput: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: Right rear trigger (RB on Xbox, R1 on PlayStation)

JoyStagedLFlipKey = 
; Left staged flipper on gamepad
; Default: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: Advanced feature - flipper with two power levels

JoyStagedRFlipKey = 
; Right staged flipper on gamepad
; Default: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: Advanced feature - flipper with two power levels

; === NUDGE (TILT) ===
JoyLTiltKey = 
; Left nudge on gamepad
; Default: 14 (SDL: D-Pad Left + 1)
; Default DirectInput: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: D-Pad left

JoyRTiltKey = 
; Right nudge on gamepad
; Default: 12 (SDL: D-Pad Right + 1)
; Default DirectInput: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: D-Pad right

JoyCTiltKey = 
; Center nudge on gamepad
; Default: 11 (SDL: D-Pad Up + 1)
; Default DirectInput: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: D-Pad up for forward/backward nudge

; === PLUNGER ===
JoyPlungerKey = 
; Plunger (digital ball launcher) on gamepad
; Default: 13 (SDL: D-Pad Down + 1)
; Default DirectInput: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: D-Pad down - digital ball launcher (different from analog axis)

; === GAME CONTROLS ===
JoyStartGameKey = 
; Start game on gamepad
; Default: 2 (SDL: East Button + 1 = B on Xbox, Circle on PlayStation)
; Default DirectInput: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: Right button of main cluster (B/Circle)

JoyAddCreditKey = 
; Add credit on gamepad
; Default: 1 (SDL: South Button + 1 = A on Xbox, X on PlayStation)
; Default DirectInput: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: Bottom button of main cluster (A/X)

JoyAddCredit2Key = 
; Add credit (2nd type) on gamepad
; Default: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: Second coin type - unmapped by default

; === MAGNASAVE ===
JoyLMagnaSave = 
; Left MagnaSave on gamepad
; Default: 9 (SDL: Left Stick Button + 1 = LS on Xbox, L3 on PlayStation)
; Default DirectInput: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: Left analog stick click

JoyRMagnaSave = 
; Right MagnaSave on gamepad
; Default: 10 (SDL: Right Stick Button + 1 = RS on Xbox, R3 on PlayStation)
; Default DirectInput: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: Right analog stick click

; === SYSTEM AND NAVIGATION ===
JoyExitGameKey = 
; Exit game on gamepad
; Default: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: Return to menu - usually Start or Select

JoyPauseKey = 
; Pause on gamepad
; Default: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: Pause current game

; === AUDIO ===
JoyVolumeUp = 
; Increase volume on gamepad
; Default: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: Volume control via gamepad

JoyVolumeDown = 
; Decrease volume on gamepad
; Default: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: Volume control via gamepad

; === CAMERA AND VIEW ===
JoyTableRecenterKey = 
; Recenter table view on gamepad
; Default: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: Reset camera to default position

JoyTableUpKey = 
; Table view up on gamepad
; Default: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: Move view toward top

JoyTableDownKey = 
; Table view down on gamepad
; Default: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: Move view toward bottom

; === SPECIAL MECHANICS ===
JoyMechTiltKey = 
; Mechanical tilt on gamepad
; Default: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: Trigger immediate tilt

JoyLockbarKey = 
; Lockbar on gamepad
; Default: 7 (SDL: Guide Button + 1 = Xbox button, PS button)
; Default DirectInput: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: Central gamepad button (Xbox/PlayStation logo)

; === DEBUG AND DEVELOPMENT ===
JoyFrameCount = 
; Display FPS on gamepad
; Default: 4 (SDL: West Button + 1 = Y on Xbox, Triangle on PlayStation)
; Default DirectInput: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: Top button of main cluster (Y/Triangle)

JoyDebugKey = 
; Debug mode on gamepad
; Default: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: General debug functions

JoyDebuggerKey = 
; Script debugger on gamepad
; Default: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: Launch VBScript debugger

JoyTweakKey = 
; Tweak mode on gamepad
; Default: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: Open LiveUI settings menu

; === CUSTOM BUTTONS ===
JoyCustom1 = 
JoyCustom2 = 
JoyCustom3 = 
JoyCustom4 = 
; Custom buttons 1-4 on gamepad
; Default: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: Free buttons for custom functions

; === PINBALL MANAGER CONTROLS ===
; Integrated management system (table/credit interface)
JoyPMBuyIn = 
; Buy-in Pinball Manager
; Default: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: Purchase additional credits

JoyPMCoin3 = 
JoyPMCoin4 = 
; Coins 3 and 4 Pinball Manager
; Default: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: Additional coin types

JoyPMCoinDoor = 
; Coin door Pinball Manager
; Default: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: Access to coin mechanism

JoyPMCancel = 
; Cancel Pinball Manager
; Default: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: Cancel current operation

JoyPMDown = 
JoyPMUp = 
; Navigation up/down Pinball Manager
; Default: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: Navigate through PM menus

JoyPMEnter = 
; Confirm Pinball Manager
; Default: 0 (unmapped)
; Values: 1-32 (button number, 0 = unmapped)
; Info: Validate selection in PM menus

; === VIBRATION/RUMBLE ===
RumbleMode = 
; Gamepad vibration mode
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Haptic feedback via gamepad vibration (bumpers, flippers, etc.)

; #######################################################
; # STANDARD GAMEPAD BUTTON CORRESPONDENCE
; # Based on SDL GameController mapping
; #######################################################
;
; MAIN CLUSTER (face buttons):
; South = 1 (A on Xbox, X on PlayStation)
; East  = 2 (B on Xbox, Circle on PlayStation)
; West  = 4 (Y on Xbox, Triangle on PlayStation)
; North = 3 (X on Xbox, Square on PlayStation)
;
; TRIGGERS/BUMPERS:
; Left Shoulder  = 5 (LB on Xbox, L1 on PlayStation)
; Right Shoulder = 6 (RB on Xbox, R1 on PlayStation)
;
; SYSTEM BUTTONS:
; Back  = 7 (View on Xbox, Share on PlayStation)
; Guide = 7 (Xbox button, PS button)
; Start = 8 (Menu on Xbox, Options on PlayStation)
;
; ANALOG STICKS:
; Left Stick  = 9 (LS, L3)
; Right Stick = 10 (RS, R3)
;
; D-PAD (directional pad):
; D-Pad Up    = 11
; D-Pad Down  = 13
; D-Pad Left  = 14
; D-Pad Right = 12
;
; ANALOG TRIGGERS:
; Usually handled as axes, not buttons
; Left Trigger = axis (not button)
; Right Trigger = axis (not button)
;
; Note: SDL values are incremented by +1 in VPX
; DirectInput uses different numbering depending on driver

; #######################################################
; # Section [Player] - Video and Rendering Settings (continued)
; # Graphics configuration, performance and visual quality
; #######################################################

; === MAIN DISPLAY CONFIGURATION ===
PlayfieldDisplay = 
; Screen number for playfield
; Default: 0 (main screen)
; Values: 0, 1, 2... (Windows screen number)
; Info: In cabinet, usually the horizontal screen where gameplay happens

PlayfieldFullScreen = 
; Full screen mode for playfield
; Default: 0 (windowed)
; Values: 0 = windowed, 1 = full screen
; Info: Full screen recommended for cabinet, windowed for desktop

PlayfieldWndX = 
PlayfieldWndY = 
; Playfield window position (windowed mode)
; Default: 0, 0 (top-left corner)
; Values: coordinates in pixels
; Info: Window position if not in full screen

PlayfieldAspectRatio = 
; Forced playfield aspect ratio
; Default: 0.0 (automatic based on resolution)
; Values: ratio (e.g., 1.333 for 4:3, 1.777 for 16:9)
; Info: Forces specific ratio, 0.0 = uses native resolution

PlayfieldWidth = 
PlayfieldHeight = 
; Playfield rendering resolution
; Default: 1024x768 (base resolution)
; Values: width x height in pixels
; Info: Rendering resolution - higher = better quality but less performance

PlayfieldRender10Bit = 
; 10-bit rendering for playfield
; Default: 0 (standard 8-bit)
; Values: 0 = 8-bit, 1 = 10-bit
; Info: 10-bit offers more color nuances but requires compatible hardware

PlayfieldColorDepth = 
; Playfield color depth
; Default: 32 (32-bit color)
; Values: 16, 24, 32 (bits per pixel)
; Info: 32-bit = maximum quality, 16-bit = performance on old hardware

PlayfieldRefreshRate = 
; Playfield refresh rate
; Default: 0 (screen default rate)
; Values: Hz (60, 75, 120, 144, etc.)
; Info: Must match your screen capabilities

; === VR PREVIEW CONFIGURATION ===
PreviewDisplay = 
; Screen for VR preview
; Default: 0 (main screen)
; Values: 0, 1, 2... (screen number)
; Info: 2D display of what VR player sees

PreviewFullScreen = 
; Full screen for VR preview
; Default: 0 (windowed)
; Values: 0 = windowed, 1 = full screen
; Info: Usually windowed for monitoring

PreviewWndX = 
PreviewWndY = 
; VR preview position
; Default: 0, 0
; Values: coordinates in pixels

PreviewAspectRatio = 
; VR preview aspect ratio
; Default: 0.0 (automatic)
; Values: ratio

PreviewWidth = 
PreviewHeight = 
; VR preview size
; Default: 512x384 (reduced resolution)
; Values: width x height in pixels
; Info: Smaller than main playfield to save resources

PreviewRender10Bit = 
; 10-bit rendering VR preview
; Default: 0 (8-bit)
; Values: 0 = 8-bit, 1 = 10-bit

PreviewColorDepth = 
; VR preview color depth
; Default: 32 (32-bit)
; Values: 16, 24, 32

PreviewRefreshRate = 
; VR preview refresh rate
; Default: 0 (automatic)
; Values: Hz

; === DISPLAY MODES ===
BGSet = 
; Main view mode
; Default: 0 (Desktop view)
; Values:
;   0 = Desktop (standard desktop view in landscape)
;   1 = Full screen cabinet (top-down view for cabinet)
;   2 = FSS (Full Single Screen - complete machine with backglass on top)
; Info: FSS combines playfield + backglass on single vertical screen

; === SYNCHRONIZATION AND FRAMERATE ===
SyncMode = 
; Video synchronization mode
; Default: 0 (No synchronization)
; Values:
;   0 = None (custom synchronization via MaxFramerate)
;   1 = Vertical Sync (avoids tearing, increases latency)
;   2 = Adaptive Sync (OpenGL only, deprecated)
;   3 = Frame Pacing (OpenGL only, deprecated)
; Info: Mode 0 recommended with BGFX multithreading

MaxFramerate = 
; Maximum playfield framerate
; Default: -1.0 (limited to screen refresh rate)
; Values:
;   -1 = Playfield screen refresh rate
;    0 = Unlimited framerate
;   >0 = Specific FPS (minimum 24 FPS)
; Info: -1 recommended to avoid tearing without vertical sync

VisualLatencyCorrection = 
; Visual latency correction in milliseconds
; Default: -1 (automatically derived from target FPS)
; Values:
;   -1 = Automatic based on FPS
;    0 = Disabled
;   >0 = Manual correction in ms
; Info: Compensates display delay, improves visual accuracy

MaxPrerenderedFrames = 
; Maximum frames queued in GPU
; Default: 0 (system default)
; Values: 0-8 (0 = system default, 1-3 = reduced latency)
; Info: Lower = less latency but possible stutters

; === ANTIALIASING ===
FXAA = 
; Post-processing antialiasing type
; Default: 0 (disabled)
; Values:
;   0 = Disabled
;   1 = Fast FXAA (low performance impact)
;   2 = Standard FXAA (quality/performance balance)
;   3 = Quality FXAA (better quality, heavier)
;   4 = Fast NFAA (Normal Filter AA)
;   5 = Standard DLLA (Deep Learning AA)
;   6 = Quality SMAA (Subpixel Morphological AA - best)
; Info: SMAA offers best quality, FXAA best compromise

MSAASamples = 
; MSAA (multisampling) samples
; Default: 0 (disabled)
; Values: 0 = none, 4, 6, 8 samples
; Info: MSAA very heavy, use FXAA/SMAA instead

AAFactor = 
; Supersampling antialiasing factor
; Default: 1.0 (no supersampling)
; Values: 0.5-2.0 (>1.0 = better quality, <1.0 = performance)
; Info: 1.5-2.0 = excellent rendering but very heavy

; === SHARPENING AND FILTERING ===
Sharpen = 
; Sharpening algorithm
; Default: 0 (disabled)
; Values:
;   0 = Disabled
;   1 = CAS (Contrast Adaptive Sharpening)
;   2 = Bilateral CAS (softer)
; Info: Improves sharpness without creating artifacts

ForceAnisotropicFiltering = 
; Force anisotropic filtering
; Default: 1 (enabled)
; Values: 0 = disabled, 1 = enabled
; Info: Improves texture quality in perspective, minimal impact

; === TEXTURES ===
MaxTexDimension = 
; Maximum texture dimension
; Default: 0 (unlimited on PC), 1536 (on mobile)
; Values: 0 = unlimited, >0 = max size in pixels
; Info: Larger images are automatically resized

CompressTextures = 
; Texture compression
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Reduces memory usage but may degrade quality

ScaleFXDMD = 
; FX scaling for DMD
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Applies scaling effects to DMD

; === OCCLUSION AND LIGHTING ===
DisableAO = 
; Disable ambient occlusion
; Default: 0 (occlusion enabled)
; Values: 0 = enabled, 1 = disabled
; Info: AO adds subtle shadows in corners

DynamicAO = 
; Ambient occlusion type
; Default: 0 (static)
; Values: 0 = static (faster), 1 = dynamic (more realistic)
; Info: Dynamic follows object movement

; === REFLECTIONS ===
SSRefl = 
; Screen space reflections
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Real-time reflections, very performance expensive

PFReflection = 
; Playfield reflections
; Default: 0 (disabled)
; Values:
;   0 = Disabled
;   1 = Balls only
;   2 = Static only (fixed elements)
;   3 = Static and balls
;   4 = Static and unsynchronized dynamics
;   5 = Full dynamic (more realistic but heavy)
; Info: Playfield reflections add much to realism

; === VISUAL EFFECTS ===
ForceBloomOff = 
; Disable bloom effects (light halos)
; Default: 0 (bloom enabled)
; Values: 0 = enabled, 1 = disabled
; Info: Bloom adds halos around bright lights

ForceMotionBlurOff = 
; Disable ball motion blur
; Default: 0 (motion blur enabled)
; Values: 0 = enabled, 1 = disabled
; Info: Motion blur makes ball movement visually smoother

; === EMISSION AND SCENE LIGHTING ===
EmissionScale = 
; Global scene emission scale
; Default: 0.5 (moderate emission)
; Values: 0.0-1.0 (0 = dark, 1 = very bright)
; Info: Controls overall brightness of emissive elements

OverrideTableEmissionScale = 
; Override table emission scale
; Default: 0 (uses table settings)
; Values: 0 = table, 1 = use global EmissionScale
; Info: Forces use of global setting instead of table's

DynamicDayNight = 
; Dynamic day/night cycle
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Automatically adjusts lighting based on time and geographic position

Latitude = 
Longitude = 
; Geographic coordinates for day/night cycle
; Default: 52.52, 13.405 (Berlin)
; Values: -90 to +90 (latitude), -180 to +180 (longitude)
; Info: Geographic position to calculate realistic day/night cycle

; === HDR AND TONE MAPPING ===
HDRDisableToneMapper = 
; Disable HDR tone mapping
; Default: 0 (tone mapping enabled)
; Values: 0 = enabled, 1 = disabled
; Info: Tone mapping adapts HDR colors to standard displays

HDRGlobalExposure = 
; Global HDR exposure
; Default: 1.0 (normal exposure)
; Values: 0.1-5.0
; Info: Controls overall brightness in HDR mode

; === GRAPHICS BACKEND ===
GfxBackend = 
; Graphics rendering backend (BGFX only)
; Default: "Default" (automatic detection), "OpenGLES" on Android
; Values: Noop, Agc, Direct3D11, Direct3D12, Gnm, Metal, Nvn,
;          OpenGLES, OpenGL, Vulkan, Default
; Notes:
;   - Direct3D11/12 = Windows only
;   - Metal = macOS and iOS only
;   - Vulkan = modern, better performance
;   - OpenGL = wide compatibility
;   - Default = automatic optimal choice

; === COMPATIBILITY AND OPTIMIZATION ===
DisableDWM = 
; Disable Desktop Window Manager (Windows)
; Default: 0 (DWM enabled)
; Values: 0 = enabled, 1 = disabled
; Info: Disabling DWM may improve performance on old hardware

UseNVidiaAPI = 
; Use NVIDIA-specific API
; Default: 0 (standard API)
; Values: 0 = standard API, 1 = NVIDIA API
; Info: NVIDIA-specific optimizations for NVIDIA cards

SoftwareVertexProcessing = 
; Force CPU vertex processing
; Default: 0 (GPU processing)
; Values: 0 = GPU (recommended), 1 = CPU (compatibility)
; Info: Useful only on very old hardware

; #######################################################
; # Section [Player] - Stereo 3D, Balls and Miscellaneous Settings (continued)
; # 3D configuration, ball rendering, cabinet and advanced options
; #######################################################

; === STEREOSCOPIC 3D RENDERING ===
Stereo3DEnabled = 
; Allow temporarily disabling stereo rendering
; Default: 1 (stereo rendering allowed)
; Values: 0 = disabled, 1 = enabled
; Info: Master switch for all 3D stereo functions

Stereo3D = 
; Stereoscopic rendering mode
; Default: 0 (STEREO_OFF - no stereo)
; Values: 0 to 10 (different stereo modes)
;   0 = STEREO_OFF (disabled)
;   1-10 = various stereo and anaglyph modes
; Info: 3D output mode (glasses, VR headset, red/cyan anaglyph, etc.)

Stereo3DFake = 
; Fake 3D stereo mode
; Default: 0 (true stereo)
; Values: 0 = true stereo, 1 = simulated 3D effect
; Info: Simulates 3D effect without true stereoscopic rendering

; === ANAGLYPH PARAMETERS (red/cyan glasses) ===
Stereo3DBrightness = 
; Brightness in anaglyph mode
; Default: 1.0 (normal brightness)
; Values: 0.0-2.0
; Info: Compensates brightness loss from colored glasses

Stereo3DSaturation = 
; Saturation in anaglyph mode
; Default: 1.0 (normal saturation)
; Values: 0.0-2.0
; Info: Adjusts color intensity for better 3D effect

Stereo3DDefocus = 
; Defocus in anaglyph mode
; Default: 0.0 (no defocus)
; Values: 0.0-1.0
; Info: Adds slight blur to soften anaglyph effect

; === TRUE STEREO PARAMETERS (VR headsets, 3D projectors) ===
Stereo3DEyeSeparation = 
; Eye separation in stereo (interpupillary distance)
; Default: 63.0 (average adult distance in mm)
; Values: 50.0-80.0 (mm)
; Info: Distance between your eyes - adjust for optimal comfort

; === PARALLAX PARAMETERS (depth effect) ===
Stereo3DYAxis = 
; Enable Y axis for stereo parallax
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Adds vertical parallax effect

Stereo3DOffset = 
; Base offset in stereo parallax
; Default: 0.0 (no offset)
; Values: -10.0 to +10.0
; Info: Adjusts base position of 3D effect

Stereo3DMaxSeparation = 
; Maximum separation in stereo
; Default: 0.03 (moderate separation)
; Values: 0.0-0.1
; Info: Limits maximum 3D effect to prevent eye strain

Stereo3DZPD = 
; ZPD (Zero Parallax Distance) - convergence plane
; Default: 0.5 (median plane)
; Values: 0.1-2.0
; Info: Distance where objects appear exactly on screen (neither in front nor behind)

; === BALL RENDERING ===
DisableLightingForBalls = 
; Disable lighting for balls
; Default: 0 (lighting enabled)
; Values: 0 = normal lighting, 1 = balls unlit
; Info: Can improve performance on weak hardware

BallAntiStretch = 
; Anti-stretch for moving balls
; Default: 0 (stretching allowed)
; Values: 0 = natural stretching, 1 = forced spherical shape
; Info: Maintains round shape even at high speed

OverwriteBallImage = 
; Override table ball images
; Default: 0 (uses table image)
; Values: 0 = table image, 1 = use global BallImage
; Info: Forces use of custom ball texture

BallImage = 
; Ball image file name for custom balls
; Default: (empty - uses table balls)
; Example: "chrome_ball.jpg"
; Info: Texture applied to all balls if OverwriteBallImage=1

DecalImage = 
; Ball decal image
; Default: (empty - no decal)
; Example: "ball_logo.png"
; Info: Logo or pattern applied to ball surface

BallTrail = 
; Ball visual trail
; Default: 0 (no trail) on standalone version
; Values: 0 = disabled, 1 = enabled
; Info: Visual effect that follows ball movement

BallTrailStrength = 
; Ball trail intensity
; Default: 0.0 (no trail)
; Values: 0.0-10.0
; Info: Trail force and length

; === LEVEL OF DETAIL ===
AlphaRampAccuracy = 
; Alpha ramp precision (geometric level of detail)
; Default: 10 (standard quality)
; Values: 1-50 (higher = more geometric details)
; Info: Affects curve and ramp fineness - impacts performance

; === VISUAL NUDGE STRENGTH ===
NudgeStrength = 
; Visual nudge effect intensity
; Default: 1.0 (normal intensity)
; Values: 0.0-5.0
; Info: Camera movement amplitude during nudges

; === PHYSICAL SCREEN CONFIGURATION (CABINET) ===
ScreenWidth = 
; Physical screen width in centimeters
; Default: 95.89 cm (typical 43" 16:9 screen)
; Values: 1.0-500.0 cm
; Info: Real dimension of your screen for perspective calculations

ScreenHeight = 
; Physical screen height in centimeters
; Default: 53.94 cm (typical 43" 16:9 screen)
; Values: 1.0-500.0 cm
; Info: Real dimension of your screen for perspective calculations

ScreenInclination = 
; Playfield screen inclination in degrees
; Default: 0.0 (horizontal screen)
; Values: -15.0 to +15.0 degrees
; Info: Physical tilt angle of screen in cabinet

; === PLAYER POSITION RELATIVE TO SCREEN ===
ScreenPlayerX = 
; Player horizontal position (cm)
; Default: 0.0 (centered)
; Values: -100.0 to +100.0 cm
; Info: Left/right offset of player from screen center

ScreenPlayerY = 
; Player forward/backward position (cm)
; Default: 0.0 (standard)
; Values: -100.0 to +100.0 cm
; Info: Forward/backward distance of player from screen

ScreenPlayerZ = 
; Player eye height (cm)
; Default: 70.0 cm (standard standing height)
; Values: -100.0 to +200.0 cm
; Info: Eye height from ground - affects perspective

; === LOCKBAR DIMENSIONS (cabinet) ===
LockbarWidth = 
; Lockbar width in cm
; Default: 70.0 cm (standard cabinet size)
; Values: 10.0-150.0 cm
; Info: Physical width of cabinet front bar

LockbarHeight = 
; Lockbar height in cm
; Default: 85.0 cm (standard cabinet height)
; Values: 0.0-250.0 cm
; Info: Height from ground to top of lockbar

; === EXTERNAL CAPTURE ===
CaptureExternalDMD = 
; Enable DMD capture from external applications
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Captures DMD from PinMAME or other emulators

DMDSource = 
; DMD source for external capture
; Default: (empty - automatic detection)
; Values: window name or process
; Info: Name of source application to capture DMD from

CapturePUP = 
; Enable PUP (Pinup Player) capture
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Captures PUP elements for integration

BGSource = 
; Backglass source for external capture
; Default: (empty)
; Values: window name or process
; Info: Source application for backglass capture

; === HEAD TRACKING ===
BAMHeadTracking = 
; BAM (Better Arcade Mode) head tracking support
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Tracks head movement to adjust perspective

; === USER INTERFACE ===
NumberOfTimesToShowTouchMessage = 
; Number of times to show touch help message
; Default: 3 (shows 3 times then hides)
; Values: 0-10
; Info: How many times to display touch instructions on mobile

TouchOverlay = 
; Display touch control overlay
; Default: 1 (enabled on touch devices)
; Values: 0 = hidden, 1 = displayed
; Info: Virtual on-screen buttons for mobile/tablet

; === CACHE AND PERFORMANCE ===
CacheMode = 
; Cache mode to reduce stutters and speed up loading
; Default: 1 (cache enabled)
; Values: 0 = disabled, 1 = enabled
; Info: Caches textures and data for faster loading

; #######################################################
; # Sections [DMD] and [Alpha] - Display Configuration
; # Dot Matrix Display and alphanumeric segmented displays
; #######################################################

; #######################################################
; # Section [DMD] - Dot Matrix Display
; # Configuration for dot matrix displays
; # 7 predefined profiles for different DMD types
; #######################################################

[DMD]

; === PROFILE 1 - LEGACY (backward compatibility) ===
Profile.1.Legacy = 1
; Legacy mode for old DMD code
; Default: 1 (enabled for profile 1 only)
; Values: 0 = modern mode, 1 = legacy mode
; Info: Compatibility with older VPX tables

Profile.1.ScaleFX = 0
; Advanced scaling effects
; Default: 0 (disabled)
; Values: 0 = disabled, 1 = enabled
; Info: Upscaling algorithms to improve low-resolution DMDs

Profile.1.DotTint = 0x002D52FF
; Color tint of lit dots
; Default: 0x002D52FF (classic plasma orange)
; Values: 0x00000000-0x00FFFFFF (BGR hex format)
; Info: Characteristic DMD color - vintage plasma orange

Profile.1.UnlitDotColor = 0x00404040
; Color of unlit dots (background matrix)
; Default: 0x00404040 (dark gray)
; Values: 0x00000000-0x00FFFFFF (BGR hex format)
; Info: Color of dot matrix background, visible behind content

Profile.1.DotBrightness = 25.0
; Brightness of lit dots
; Default: 25.0 (high brightness)
; Values: 0.001-100.0 (intensity units)
; Info: Light intensity - real plasma DMDs were very bright

Profile.1.DotSize = 0.75
; Relative size of dots
; Default: 0.75 (large dots for plasma)
; Values: 0.001-1.0 (1.0 = dots touching)
; Info: Size of individual dots in matrix

Profile.1.DotSharpness = 0.90
; Sharpness of dot edges
; Default: 0.90 (sharp edges)
; Values: 0.0-1.0 (0 = blurry, 1 = very sharp)
; Info: Definition of dot contours

Profile.1.DiffuseGlow = 0.10
; Diffuse glow around dots
; Default: 0.10 (light glow)
; Values: 0.0-10.0
; Info: Glow effect characteristic of plasma technology

; === PROFILE 2 - CLASSIC NEON PLASMA (WPC) ===
Profile.2.Legacy = 0
Profile.2.ScaleFX = 0
Profile.2.DotTint = 0x002D52FF
; Classic plasma orange color
; Info: Plasma DMD from Williams/Bally machines of the 90s

Profile.2.UnlitDotColor = 0x00404040
Profile.2.DotBrightness = 25.0
Profile.2.DotSize = 0.6
; Reduced size for WPC & GTS3 plasma
; Info: Neon plasma DMDs had smaller dots

Profile.2.DotSharpness = 0.90
Profile.2.DiffuseGlow = 0.10

; === PROFILE 3 - RED LED (post-RoHS) ===
Profile.3.Legacy = 0
Profile.3.ScaleFX = 0
Profile.3.DotTint = 0x001523FF
; Red LED color
; Info: Red LED DMD used after RoHS regulation (lead ban)

Profile.3.UnlitDotColor = 0x00404040
Profile.3.DotBrightness = 25.0
Profile.3.DotSize = 0.75
; Normal size for Stern LED
; Info: Stern LED DMDs have larger dots than plasma

Profile.3.DotSharpness = 0.90
Profile.3.DiffuseGlow = 0.10

; === PROFILE 4 - GREEN LED ===
Profile.4.Legacy = 0
Profile.4.ScaleFX = 0
Profile.4.DotTint = 0x0023FF15
; Green LED color
; Info: Green DMD less common, used on some special machines

Profile.4.UnlitDotColor = 0x00404040
Profile.4.DotBrightness = 25.0
Profile.4.DotSize = 0.75
Profile.4.DotSharpness = 0.90
Profile.4.DiffuseGlow = 0.10

; === PROFILE 5 - YELLOW LED ===
Profile.5.Legacy = 0
Profile.5.ScaleFX = 0
Profile.5.DotTint = 0x0023FFFF
; Yellow LED color
; Info: Yellow DMD rare, vintage effect or customization

Profile.5.UnlitDotColor = 0x00404040
Profile.5.DotBrightness = 25.0
Profile.5.DotSize = 0.75
Profile.5.DotSharpness = 0.90
Profile.5.DiffuseGlow = 0.10

; === PROFILE 6 - GENERIC PLASMA ===
Profile.6.Legacy = 0
Profile.6.ScaleFX = 0
Profile.6.DotTint = 0x00FFFFFF
; Generic white color
; Info: Neutral profile for custom plasma

Profile.6.UnlitDotColor = 0x00404040
Profile.6.DotBrightness = 25.0
Profile.6.DotSize = 0.6
; Plasma size (like profile 2)
Profile.6.DotSharpness = 0.90
Profile.6.DiffuseGlow = 0.10

; === PROFILE 7 - GENERIC LED ===
Profile.7.Legacy = 0
Profile.7.ScaleFX = 0
Profile.7.DotTint = 0x00FFFFFF
; Generic white color
; Info: Neutral profile for custom LED

Profile.7.UnlitDotColor = 0x00404040
Profile.7.DotBrightness = 25.0
Profile.7.DotSize = 0.75
; LED size (like profile 3)
Profile.7.DotSharpness = 0.90
Profile.7.DiffuseGlow = 0.10

; #######################################################
; # Section [Alpha] - Alphanumeric Displays
; # Configuration for segment displays (scores, text)
; # 8 profiles for different types of segmented display
; #######################################################

[Alpha]

; === PROFILE 1 - NEON PLASMA ===
Profile.1.Color = 0x001E96FF
; Neon plasma orange color
; Default: 0x001E96FF (characteristic plasma orange)
; Values: 0x00000000-0x00FFFFFF (BGR hex format)
; Info: Typical color of plasma segment displays

Profile.1.Unlit = 0x00404040
; Color of unlit segments
; Default: 0x00404040 (dark gray)
; Values: 0x00000000-0x00FFFFFF (BGR hex format)
; Info: Unlit segments visible in background

Profile.1.Brightness = 5.0
; Segment brightness
; Default: 5.0 (moderate brightness)
; Values: 0.001-100.0
; Info: Light intensity of lit segments

Profile.1.DiffuseGlow = 1.0
; Diffuse glow around segments
; Default: 1.0 (standard glow)
; Values: 0.0-10.0
; Info: Light dispersion effect around segments

; === PROFILE 2 - VFD BLUISH ===
Profile.2.Color = 0x00FFEF3F
; Cyan-yellow VFD color
; Info: Vacuum Fluorescent Display - characteristic blue-green color

Profile.2.Unlit = 0x00404040
Profile.2.Brightness = 5.0
Profile.2.DiffuseGlow = 1.0

; === PROFILE 3 - VFD GREENISH ===
Profile.3.Color = 0x00ECFF48
; Yellow-green VFD color
; Info: VFD variant with greener tint

Profile.3.Unlit = 0x00404040
Profile.3.Brightness = 5.0
Profile.3.DiffuseGlow = 1.0

; === PROFILE 4 - RED LED ===
Profile.4.Color = 0x001523FF
; Red LED color
; Info: Modern red LED display, very common

Profile.4.Unlit = 0x00404040
Profile.4.Brightness = 5.0
Profile.4.DiffuseGlow = 1.0

; === PROFILE 5 - GREEN LED ===
Profile.5.Color = 0x0023FF15
; Green LED color
; Info: Green LED for high visibility

Profile.5.Unlit = 0x00404040
Profile.5.Brightness = 5.0
Profile.5.DiffuseGlow = 1.0

; === PROFILE 6 - YELLOW LED ===
Profile.6.Color = 0x0023FFFF
; Yellow LED color
; Info: Yellow/amber LED for good contrast

Profile.6.Unlit = 0x00404040
Profile.6.Brightness = 5.0
Profile.6.DiffuseGlow = 1.0

; === PROFILE 7 - GENERIC PLASMA ===
Profile.7.Color = 0x00FFFFFF
; Generic white color
; Info: Neutral profile for custom plasma

Profile.7.Unlit = 0x00404040
Profile.7.Brightness = 5.0
Profile.7.DiffuseGlow = 1.0

; === PROFILE 8 - GENERIC LED ===
Profile.8.Color = 0x00FFFFFF
; Generic white color
; Info: Neutral profile for custom LED

Profile.8.Unlit = 0x00404040
Profile.8.Brightness = 5.0
Profile.8.DiffuseGlow = 1.0

; #######################################################
; # DISPLAY TECHNOLOGY GUIDE
; #######################################################
;
; DMD (Dot Matrix Display):
; - Dot matrix 128x32 or 192x64
; - Plasma: Orange luminous dots (90s)
; - LED: Red/green/white dots (2000s+)
; - Dot size: 0.6 plasma, 0.75 LED
;
; ALPHA (Segmented displays):
; - 7, 14 or 16 segments for digits/letters
; - Plasma: Orange/red intense
; - VFD: Blue-green fluorescent
; - LED: Red/green/yellow/white
;
; COLORS (BGR hex format):
; - 0x002D52FF = Classic plasma orange
; - 0x001523FF = Modern red LED
; - 0x0023FF15 = Green LED
; - 0x0023FFFF = Yellow LED
; - 0x00FFEF3F = Cyan VFD
; - 0x00FFFFFF = Generic white
;
; HISTORY:
; - 80s-90s: Plasma dominant (orange)
; - 2000s: Transition to LED (RoHS)
; - Modern: Colored LED, LCD/OLED screens

; #######################################################
; # Section [PlayerVR] - Virtual Reality Configuration
; # Settings for VR headsets (Oculus, HTC Vive, Windows Mixed Reality)
; #######################################################

[PlayerVR]

; === VR ACTIVATION ===
AskToTurnOn = 
; Ask for VR activation at startup
; Default: 1 (ask for confirmation)
; Values: 0 = don't ask, 1 = ask
; Info: Shows dialog box to enable VR mode

; === OPENXR SETTINGS (MODERN STANDARD) ===
ResFactor = 
; OpenXR resolution factor (supersampling)
; Default: 1.0 (headset native resolution)
; Values: 0.5-2.0 (0.5 = performance, 2.0 = maximum quality)
; Info: Multiplies rendering resolution - higher = sharper but heavier

; === OPENVR SETTINGS (STEAM VR LEGACY) ===
ScaleToFixedWidth = 
; Scale to fixed width OpenVR
; Default: 0 (proportional scaling)
; Values: 0 = proportional, 1 = fixed width
; Info: Scaling mode for SteamVR compatibility

ScaleAbsolute = 
; Absolute scale OpenVR
; Default: 1.0 (normal scale)
; Values: 0.1-5.0
; Info: Global scale factor for VR environment

ScaleRelative = 
; Relative scale OpenVR
; Default: 1.0 (normal scale)
; Values: 0.1-5.0
; Info: Relative scale compared to environment

NearPlane = 
; VR near rendering plane
; Default: 6.0 (minimum rendering distance)
; Values: 1.0-50.0 (VPX units)
; Info: Minimum distance before which objects are not rendered

EyeFBFormat = 
; Framebuffer format for each eye
; Default: 0 (automatic format)
; Values: 0-3 (different texture formats)
; Info: Rendering format to optimize quality/performance

; === TABLE POSITION IN VR ===
Slope = 
; VR table inclination in degrees
; Default: 6.5 (realistic pinball inclination)
; Values: 0.0-15.0 degrees
; Info: Table tilt angle - 6.5° = standard pinball inclination

Orientation = 
; VR table orientation/rotation in degrees
; Default: 0.0 (normal orientation)
; Values: -45.0 to +45.0 degrees
; Info: Table rotation in VR space

TableX = 
; VR table horizontal X position (cm)
; Default: 0.0 (horizontally centered)
; Values: -300.0 to +300.0 cm
; Info: Left/right offset of table in VR space

TableY = 
; VR table horizontal Y position (cm)
; Default: 0.0 (standard position)
; Values: -300.0 to +300.0 cm
; Info: Forward/backward offset of table

TableZ = 
; VR table vertical Z position (cm)
; Default: 0.0 (standard height)
; Values: -300.0 to +300.0 cm
; Info: Table height - adjust according to your height

; === VR PREVIEW ===
VRPreviewDisabled = 
; Completely disable VR preview
; Default: 0 (preview enabled)
; Values: 0 = enabled, 1 = disabled
; Info: Disables 2D preview window

VRPreview = 
; Enable VR preview window
; Default: 1 (enabled)
; Values: 0 = disabled, 1 = enabled
; Info: Shows 2D window of what VR player sees

ShrinkPreview = 
; Shrink preview size
; Default: 0 (normal size)
; Values: 0 = normal size, 1 = reduced size
; Info: Smaller window to save resources

WindowPosX = 
WindowPosY = 
; VR preview window position
; Default: 0, 0 (top-left corner)
; Values: coordinates in pixels
; Info: Where to place preview window on screen

PreviewWidth = 
PreviewHeight = 
; VR preview window size
; Default: 512x384 (reduced resolution)
; Values: width x height in pixels
; Info: Window size - smaller = less CPU load

; #######################################################
; # Section [Controller] - DOF and Haptic Feedback Configuration
; # Direct Output Framework for cabinet hardware
; #######################################################

[Controller]

; === B2S CONTROL ===
ForceDisableB2S = 
; Force B2S disabling
; Default: 0 (uses normal B2S settings)
; Values: 0 = use B2S settings, 1 = force disable
; Info: Overrides all B2S settings to disable it

; === DOF COMPONENT ACTIVATION ===
; Each component can be enabled/disabled individually

DOFContactors = 
; Enable DOF contactors (mechanical clicks)
; Default: 1 (enabled)
; Values: 0 = disabled, 1 = enabled
; Info: Simulates electromechanical contactor sounds (pop bumpers, etc.)

DOFKnocker = 
; Enable DOF knocker (punch)
; Default: 1 (enabled)
; Values: 0 = disabled, 1 = enabled
; Info: Simulates knocker - big electromagnet that hits the cabinet

DOFChimes = 
; Enable DOF chimes
; Default: 1 (enabled)
; Values: 0 = disabled, 1 = enabled
; Info: Simulates metal chimes from old machines

DOFBell = 
; Enable DOF bell
; Default: 1 (enabled)
; Values: 0 = disabled, 1 = enabled
; Info: Simulates bells present on certain tables

DOFGear = 
; Enable DOF gears/mechanisms
; Default: 1 (enabled)
; Values: 0 = disabled, 1 = enabled
; Info: Simulates motorized mechanism and gear sounds

DOFShaker = 
; Enable DOF shaker (main vibrator)
; Default: 1 (enabled)
; Values: 0 = disabled, 1 = enabled
; Info: Main vibrator under table for big impacts

DOFFlippers = 
; Enable DOF flipper feedback
; Default: 1 (enabled)
; Values: 0 = disabled, 1 = enabled
; Info: Haptic feedback when activating flippers

DOFTargets = 
; Enable DOF targets
; Default: 1 (enabled)
; Values: 0 = disabled, 1 = enabled
; Info: Haptic feedback when hitting fixed targets

DOFDroptargets = 
; Enable DOF drop targets
; Default: 1 (enabled)
; Values: 0 = disabled, 1 = enabled
; Info: Specific haptic feedback for drop targets

; #######################################################
; # DOF (DIRECT OUTPUT FRAMEWORK) GUIDE
; #######################################################
;
; DOF is a system that interfaces VPX with physical hardware
; to create haptic and visual feedback in a cabinet.
;
; TYPICAL DOF HARDWARE:
; - Shaker: Main vibrator under table
; - Contactors: Solenoids for click simulation
; - Knocker: Big electromagnet for violent hits
; - LED strips: Reactive lighting to events
; - Fans: Wind effects
; - Gear motors: Motorized mechanisms
;
; REQUIRED CONFIGURATION:
; - DOF controller board (Sainsmart, Pinscape, etc.)
; - Per-table configuration files (.directb2s.ini)
; - DOF software configured and calibrated
;
; SAFETY:
; - Use appropriate power supplies
; - Respect current limits
; - Securely mount all mechanisms
; - Provide protection fuses
;
; TYPICAL SETTINGS:
; - All enabled (1) for complete experience
; - Disable Shaker if too violent
; - Adjust intensity via DOF software
;
; VR AND DOF:
; - DOF works perfectly in VR
; - Greatly enhances immersion
; - Allows "feeling" impacts in VR

; #######################################################
; # Section [Editor] - VPX Editor Configuration
; # Settings for table creation and modification
; #######################################################

[Editor]

; === SECURITY ===
DisableHash = 
; Disable file integrity validation
; Default: 0 (validation enabled)
; Values: 0 = validation enabled, 1 = validation disabled
; Info: WARNING - Disabling exposes to security risks!
; Validation checks that tables haven't been corrupted or maliciously modified

; === GENERAL BEHAVIOR ===
SelectTableOnStart = 
; Automatically select table at editor startup
; Default: 1 (automatic selection)
; Values: 0 = no selection, 1 = auto selection
; Info: Automatically opens last used table

SelectTableOnPlayerClose = 
; Select table when player closes
; Default: 1 (return to editor)
; Values: 0 = stay at menu, 1 = return to editor
; Info: Automatically returns to editor after testing a table

; === LOGGING AND DEBUG ===
EnableLog = 
; Enable general logging
; Default: 1 (logs enabled)
; Values: 0 = logs disabled, 1 = logs enabled
; Info: Writes to vpinball.log file for diagnostics and debugging

LogScriptOutput = 
; Log script output to logs
; Default: 0 (script output not logged)
; Values: 0 = no script logging, 1 = log script output
; Info: Records Debug.Print messages and VBScript errors

; === VIEWPORT SETTINGS (WORK AREA) ===
ShowDragPoints = 
; Display draggable control points
; Default: 1 (points visible)
; Values: 0 = hidden, 1 = visible
; Info: Control points for modifying object shapes (ramps, walls, etc.)

DrawLightCenters = 
; Draw light centers
; Default: 0 (centers hidden)
; Values: 0 = hidden, 1 = visible
; Info: Shows a point at each light center for precise positioning

GridSize = 
; Positioning grid size
; Default: 50 (VPX units)
; Values: 1-200 (VPX units)
; Info: Magnetic grid spacing for object alignment

RenderSolid = 
; Object rendering mode
; Default: 1 (solid rendering)
; Values: 0 = wireframe, 1 = solid rendering
; Info: Wireframe faster but less readable

; === INTERFACE COLORS ===
BackgroundColor = 
; Editor background color
; Default: 0x003C64 (dark blue)
; Values: RGB hex color (0x000000 to 0xFFFFFF)
; Info: Work area background color

FillColor = 
; Default fill color
; Default: 0x808080 (gray)
; Values: RGB hex color
; Info: Color used for shape filling

ElementSelectColor = 
; Selected element color
; Default: 0x00FF00 (bright green)
; Values: RGB hex color
; Info: Outline of selected objects

ElementSelectLockedColor = 
; Locked selected element color
; Default: 0xFF0000 (bright red)
; Values: RGB hex color
; Info: Outline of locked objects when selected

DefaultMaterialColor = 
; Default material color
; Default: 0xFFFFFF (white)
; Values: RGB hex color
; Info: Base color for new materials

; === ORGANIZATION ===
GroupElementsInCollection = 
; Automatically group elements in collections
; Default: 1 (grouping enabled)
; Values: 0 = no grouping, 1 = auto grouping
; Info: Automatically organizes similar objects into collections

Units = 
; Measurement display units
; Default: 0 (VPX units)
; Values: 0 = VPX units, 1 = inches, 2 = millimeters
; Info: Units displayed in properties and rulers

; === AUTO SAVE ===
AutoSaveOn = 
; Enable automatic saving
; Default: 1 (auto save enabled)
; Values: 0 = disabled, 1 = enabled
; Info: Periodic automatic save to prevent losses

AutoSaveTime = 
; Auto save interval
; Default: 10 (minutes)
; Values: 1-60 (minutes)
; Info: Frequency of automatic saves

; === DEBUG TOOLS ===
ThrowBallsAlwaysOn = 
; Ball throwing tool always active
; Default: 0 (manual activation)
; Values: 0 = manual activation, 1 = always active
; Info: Permanent test mode to throw balls during editing

ThrowBallSize = 
; Test ball size
; Default: 25.0 (standard radius)
; Values: 10.0-100.0 (radius in VPX units)
; Info: Size of balls thrown with test tool

ThrowBallMass = 
; Test ball mass
; Default: 1.0 (standard mass)
; Values: 0.1-10.0 (relative mass)
; Info: Ball mass - affects physics and bounces

BallControlAlwaysOn = 
; Ball control always active
; Default: 0 (manual activation)
; Values: 0 = manual activation, 1 = always active
; Info: Allows moving balls with mouse during tests

; === WINDOW POSITIONS ===
; Multi-window interface configuration

; Main window
WindowMaximized = 
; Main window maximized at startup
; Default: 0 (normal size)
; Values: 0 = normal size, 1 = maximized
; Info: Main window state at launch

WindowLeft = 
WindowTop = 
WindowRight = 
WindowBottom = 
; Main window position and size
; Default: 100, 100, 1024, 768 (position and dimensions)
; Values: coordinates and dimensions in pixels
; Info: Main window rectangle (left, top, right, bottom)

; Properties window
PropertiesVisible = 
; Properties window visible
; Default: 1 (visible)
; Values: 0 = hidden, 1 = visible
; Info: Display of object properties window

PropertiesFloating = 
; Properties window floating
; Default: 0 (docked)
; Values: 0 = docked, 1 = floating
; Info: Properties window display mode

; Script window
AlwaysViewScript = 
; Always show script window
; Default: 0 (on demand)
; Values: 0 = on demand, 1 = always visible
; Info: Keeps script window open permanently

CodeViewPosX = 
CodeViewPosY = 
CodeViewPosWidth = 
CodeViewPosHeight = 
; Script editor position and size
; Default: 200, 200, 640, 480
; Values: x, y, width, height in pixels
; Info: VBScript editing window geometry

; Search/Select window
SearchSelectPosX = 
SearchSelectPosY = 
SearchSelectWidth = 
SearchSelectHeight = 
; Search window position and size
; Default: 300, 300, 400, 300
; Values: x, y, width, height in pixels
; Info: Window for searching and selecting objects

; Image manager
ImageMngPosX = 
ImageMngPosY = 
ImageMngWidth = 
ImageMngHeight = 
; Image manager position and size
; Default: 150, 150, 500, 400
; Values: x, y, width, height in pixels
; Info: Texture and image management window

; Debugger
DebuggerPosX = 
DebuggerPosY = 
DebuggerWidth = 
DebuggerHeight = 
; Script debugger position and size
; Default: 250, 250, 600, 400
; Values: x, y, width, height in pixels
; Info: VBScript debug window with breakpoints

; Collection manager
CollectionMngPosX = 
CollectionMngPosY = 
; Collection manager position
; Default: 350, 350
; Values: x, y in pixels
; Info: Object collection organization window

; Material manager
MaterialMngPosX = 
MaterialMngPosY = 
MaterialMngWidth = 
MaterialMngHeight = 
; Material manager position and size
; Default: 180, 180, 450, 350
; Values: x, y, width, height in pixels
; Info: Material and texture management window

; Sound manager
SoundMngPosX = 
SoundMngPosY = 
; Sound manager position
; Default: 220, 220
; Values: x, y in pixels
; Info: Audio file management window

; Render probe manager
RenderProbeMngPosX = 
RenderProbeMngPosY = 
RenderProbeMngWidth = 
RenderProbeMngHeight = 
; Render probe manager position and size
; Default: 280, 280, 400, 300
; Values: x, y, width, height in pixels
; Info: Render probe management window for advanced lighting

; #######################################################
; # RECOMMENDED EDITOR WORKFLOW
; #######################################################
;
; SECURITY:
; - Keep DisableHash = 0 (except specific debug)
; - Enable AutoSave with short interval (5-10 min)
; - Make regular manual backups
;
; PERFORMANCE:
; - RenderSolid = 1 for better visualization
; - GridSize = 25-50 depending on needed precision
; - ShowDragPoints = 1 for precise editing
;
; DEBUG:
; - EnableLog = 1 for diagnostics
; - LogScriptOutput = 1 if script problems
; - ThrowBallsAlwaysOn = 1 for physics testing
;
; INTERFACE:
; - PropertiesVisible = 1 (essential)
; - Adjust window positions according to screen
; - Use contrasting colors for selection
;
; ADVANCED TOOLS:
; - Render probes for realistic lighting
; - Collections for organization
; - Custom materials for rendering

; #######################################################
; # Section [CVEdit] - Script Editor Configuration
; # Syntax highlighting and appearance of VBScript editor
; #######################################################

[CVEdit]

; === GENERAL APPEARANCE ===
BackGroundColor = 
; Script editor background color
; Default: 0xFFFFFF (white)
; Values: RGB hex color (0x000000 to 0xFFFFFF)
; Info: Background color of code editing area

BackGroundSelectionColor = 
; Selection background color
; Default: 0x0080FF (light blue)
; Values: RGB hex color
; Info: Highlight color for selected text

; === AUTOCOMPLETION ===
DisplayAutoComplete = 
; Enable autocompletion display
; Default: 1 (enabled)
; Values: 0 = disabled, 1 = enabled
; Info: Automatic suggestions while typing

DisplayAutoCompleteAfter = 
; Number of characters before triggering autocompletion
; Default: 3 (after 3 characters)
; Values: 1-10 (number of characters)
; Info: Delay before showing suggestions

; === TOOLTIPS ===
DwellDisplay = 
; Enable tooltip display
; Default: 1 (enabled)
; Values: 0 = disabled, 1 = enabled
; Info: Help bubbles on cursor hover

DwellHelp = 
; Enable help in tooltips
; Default: 1 (enabled)
; Values: 0 = disabled, 1 = enabled
; Info: Detailed help content in bubbles

DwellDisplayTime = 
; Tooltip display delay (milliseconds)
; Default: 1000 (1 second)
; Values: 100-5000 (ms)
; Info: Wait time before showing tooltip

; #######################################################
; # SYNTAX HIGHLIGHTING - TEXT STYLES
; # Each language element has its own style
; #######################################################

; === DEFAULT STYLE (normal text) ===
Default = 
; Display default style
; Default: 1 (enabled)
; Values: 0 = hidden, 1 = displayed
; Info: Normal text without specific category

Default_color = 
; Default text color
; Default: 0x000000 (black)
; Values: RGB hex color
; Info: Color for normal text

Default_FontPointSize = 
; Default font size
; Default: 10 (points)
; Values: 6-72 (point size)
; Info: Base size for all text

Default_Font = 
; Default font
; Default: "Courier New" (monospace font)
; Values: system font name
; Info: Monospace font recommended for code alignment

Default_FontWeight = 
; Default font weight
; Default: 400 (normal)
; Values: 100-900 (100=thin, 400=normal, 700=bold, 900=black)
; Info: Character thickness

Default_FontItalic = 
; Default italic style
; Default: 0 (normal)
; Values: 0 = normal, 1 = italic
; Info: Text slant

Default_FontUnderline = 
; Default underline
; Default: 0 (not underlined)
; Values: 0 = normal, 1 = underlined
; Info: Text underlining

Default_FontStrike = 
; Default strikethrough
; Default: 0 (not struck)
; Values: 0 = normal, 1 = strikethrough
; Info: Line through text

; === VBSCRIPT KEYWORDS ===
ShowVBS = 
; Display VBScript coloring
; Default: 1 (enabled)
; Values: 0 = hidden, 1 = displayed

ShowVBS_color = 
; VBScript keyword color
; Default: 0x0000FF (blue)
; Values: RGB hex color
; Info: Keywords: If, Then, Else, For, While, Function, Sub, etc.

ShowVBS_FontPointSize = 
ShowVBS_Font = 
ShowVBS_FontWeight = 
ShowVBS_FontItalic = 
ShowVBS_FontUnderline = 
ShowVBS_FontStrike = 
; Font parameters for VBScript keywords
; Default: 10, Courier New, 700 (bold), 0, 0, 0
; Info: Usually bold for distinction

; === VPX COMPONENTS ===
ShowComponents = 
; Display VPX component coloring
; Default: 1 (enabled)
; Values: 0 = hidden, 1 = displayed

ShowComponents_color = 
; VPX component color
; Default: 0x008000 (green)
; Values: RGB hex color
; Info: VPX objects: Bumper1, LeftFlipper, Plunger, etc.

ShowComponents_FontPointSize = 
ShowComponents_Font = 
ShowComponents_FontWeight = 
ShowComponents_FontItalic = 
ShowComponents_FontUnderline = 
ShowComponents_FontStrike = 
; Font parameters for VPX components
; Default: 10, Courier New, 400 (normal), 0, 0, 0

; === SUBROUTINES AND FUNCTIONS ===
ShowSubs = 
; Display subroutine coloring
; Default: 1 (enabled)
; Values: 0 = hidden, 1 = displayed

ShowSubs_color = 
; Subroutine color
; Default: 0x800080 (purple/magenta)
; Values: RGB hex color
; Info: User-defined Sub and Function names

ShowSubs_FontPointSize = 
ShowSubs_Font = 
ShowSubs_FontWeight = 
ShowSubs_FontItalic = 
ShowSubs_FontUnderline = 
ShowSubs_FontStrike = 
; Font parameters for subroutines
; Default: 10, Courier New, 600 (semi-bold), 0, 0, 0

; === COMMENTS ===
ShowRemarks = 
; Display comment coloring
; Default: 1 (enabled)
; Values: 0 = hidden, 1 = displayed

ShowRemarks_color = 
; Comment color
; Default: 0x008000 (green)
; Values: RGB hex color
; Info: Lines starting with ' or REM

ShowRemarks_FontPointSize = 
ShowRemarks_Font = 
ShowRemarks_FontWeight = 
ShowRemarks_FontItalic = 
ShowRemarks_FontUnderline = 
ShowRemarks_FontStrike = 
; Font parameters for comments
; Default: 10, Courier New, 400 (normal), 1 (italic), 0, 0
; Info: Usually italic for distinction

; === LITERALS (strings and numbers) ===
ShowLiterals = 
; Display literal coloring
; Default: 1 (enabled)
; Values: 0 = hidden, 1 = displayed

ShowLiterals_color = 
; Literal color
; Default: 0xFF0000 (red)
; Values: RGB hex color
; Info: Strings "text", numbers 123, constants True/False

ShowLiterals_FontPointSize = 
ShowLiterals_Font = 
ShowLiterals_FontWeight = 
ShowLiterals_FontItalic = 
ShowLiterals_FontUnderline = 
ShowLiterals_FontStrike = 
; Font parameters for literals
; Default: 10, Courier New, 400 (normal), 0, 0, 0

; === VPX CORE FUNCTIONS ===
ShowVPcore = 
; Display VPX core function coloring
; Default: 1 (enabled)
; Values: 0 = hidden, 1 = displayed

ShowVPcore_color = 
; VPX core function color
; Default: 0x0080C0 (cyan/blue-green)
; Values: RGB hex color
; Info: Built-in functions: PlaySound, DOF, CreateBall, etc.

ShowVPcore_FontPointSize = 
ShowVPcore_Font = 
ShowVPcore_FontWeight = 
ShowVPcore_FontItalic = 
ShowVPcore_FontUnderline = 
ShowVPcore_FontStrike = 
; Font parameters for VPX core functions
; Default: 10, Courier New, 700 (bold), 0, 0, 0
; Info: Bold to emphasize importance

; === EVERYTHING ELSE ===
EverythingElse = 
; Display coloring for everything else
; Default: 1 (enabled)
; Values: 0 = hidden, 1 = displayed

EverythingElse_color = 
; Color for everything else
; Default: 0x000000 (black)
; Values: RGB hex color
; Info: Uncategorized elements

EverythingElse_FontPointSize = 
EverythingElse_Font = 
EverythingElse_FontWeight = 
EverythingElse_FontItalic = 
EverythingElse_FontUnderline = 
EverythingElse_FontStrike = 
; Font parameters for everything else
; Default: 10, Courier New, 400 (normal), 0, 0, 0

; #######################################################
; # SYNTAX HIGHLIGHTING GUIDE
; #######################################################
;
; RECOMMENDED COLORS:
; - Background: White (0xFFFFFF) or very light gray
; - VBS Keywords: Blue (0x0000FF) - universal standard
; - Comments: Green (0x008000) in italic
; - Strings/Numbers: Red (0xFF0000) - tradition
; - VPX Components: Dark green (0x008000)
; - Core functions: Cyan (0x0080C0) in bold
; - Subroutines: Purple (0x800080) semi-bold
;
; FONTS:
; - Courier New: Classic monospace font
; - Consolas: Modern Microsoft font
; - Fira Code: Font with ligatures (if installed)
; - Size 10-12: Optimal for readability
;
; STYLES:
; - Keywords: Bold for importance
; - Comments: Italic for distinction
; - Literals: Normal but vivid color
; - Functions: Bold for important APIs
;
; ALTERNATIVE THEMES:
; - Dark background: 0x2D2D30 with light text
; - High contrast: Strict black/white
; - Colorblind friendly: Avoid red/green together
;
; EXAMPLE OF COLORIZED CODE:
; Sub LeftFlipper_Hit()          ' purple (subroutine)
;    PlaySound "flip_hit"        ' cyan bold (core VPX)
;    If ActiveBall.VelY > 5 Then ' blue bold (keywords)
;       ' Fast ball              ' green italic (comment)
;       DOF 101, DOFOn          ' cyan bold (core VPX)
;    End If                      ' blue bold (keywords)
; End Sub                        ' blue bold (keywords)

; #######################################################
; # Section [RecentDir] - Recent Directories
; # History of last used folders and files
; #######################################################

[RecentDir]

; === WORKING DIRECTORIES ===
LoadDir = 
; Last table loading directory
; Default: (VPX installation directory)
; Example: C:\Visual Pinball\Tables
; Info: Default folder for "Open Table"

ImageDir = 
; Last images/textures directory
; Default: (VPX installation directory)
; Example: C:\Visual Pinball\Images
; Info: Default folder for importing images

ImportDir = 
; Last import files directory
; Default: (VPX installation directory)
; Example: C:\Visual Pinball\Import
; Info: Default folder for importing external elements

SoundDir = 
; Last audio files directory
; Default: (VPX installation directory)
; Example: C:\Visual Pinball\Music
; Info: Default folder for WAV/OGG files

MaterialDir = 
; Last materials directory
; Default: (VPX installation directory)
; Example: C:\Visual Pinball\Materials
; Info: Default folder for material files (.mat)

POVDir = 
; Last POV (Point of View) directory
; Default: (VPX installation directory)
; Example: C:\Visual Pinball\POV
; Info: Folder for saved camera settings

PhysicsDir = 
; Last physics settings directory
; Default: (VPX installation directory)
; Example: C:\Visual Pinball\Physics
; Info: Folder for custom physics configurations

; === FILE HISTORY ===
TableFileName0 = 
TableFileName1 = 
TableFileName2 = 
TableFileName3 = 
TableFileName4 = 
TableFileName5 = 
TableFileName6 = 
TableFileName7 = 
; List of last 8 opened table files
; Default: (empty at first launch)
; Values: full paths to .vpx files
; Info: "Recent Files" menu - 0 = most recent, 7 = oldest
; Example: C:\Visual Pinball\Tables\Medieval Madness.vpx

; #######################################################
; # Section [TableOverride] - Table Property Override
; # Forces certain settings for all tables
; #######################################################

[TableOverride]

; === GLOBAL SETTINGS ===
Difficulty = 
; Forced global difficulty
; Default: (uses each table's difficulty)
; Values: 0.0-1.0 (0.0 = very easy, 1.0 = very difficult)
; Info: Overrides difficulty defined by table author

ToneMapper = 
; Forced tone mapping type
; Default: (uses each table's tone mapper)
; Values: 0-4 (different rendering algorithms)
; Info: Algorithm for HDR to SDR color conversion

Exposure = 
; Forced global exposure
; Default: (uses each table's exposure)
; Values: 0.1-5.0 (1.0 = normal, >1.0 = brighter)
; Info: Controls overall brightness of all tables

; === DESKTOP VIEW POINT ===
ViewDTMode = 
; Forced desktop view mode
; Default: (uses each table's mode)
; Values: 0-2 (different camera modes)
; Info: Camera type for desktop view

ViewDTScaleX = 
ViewDTScaleY = 
ViewDTScaleZ = 
; Forced desktop view scale
; Default: (uses each table's scale)
; Values: 0.1-10.0 (1.0 = normal size)
; Info: Scaling factor X, Y, Z

ViewDTPlayerX = 
ViewDTPlayerY = 
ViewDTPlayerZ = 
; Forced desktop player position
; Default: (uses each table's position)
; Values: coordinates in VPX units
; Info: Player viewpoint in 3D space

ViewDTLookAt = 
; Forced desktop look-at point
; Default: (uses each table's look-at)
; Values: look-at height in VPX units
; Info: Where camera looks vertically

ViewDTRotation = 
; Forced desktop view rotation
; Default: (uses each table's rotation)
; Values: 0.0-360.0 (degrees)
; Info: Camera rotation around table

ViewDTFOV = 
; Forced desktop field of view
; Default: (uses each table's FOV)
; Values: 10.0-120.0 (degrees)
; Info: Camera viewing angle (wider = more distortion)

ViewDTLayback = 
; Forced desktop layback inclination
; Default: (uses each table's layback)
; Values: 0.0-45.0 (degrees)
; Info: Camera backward tilt

ViewDTHOfs = 
ViewDTVOfs = 
; Forced desktop horizontal/vertical offsets
; Default: (uses each table's offsets)
; Values: -500.0 to +500.0 (VPX units)
; Info: Fine camera position adjustments

ViewDTWindowTop = 
ViewDTWindowBot = 
; Forced desktop window top/bottom limits
; Default: (uses each table's limits)
; Values: 0.0-2000.0 (VPX units)
; Info: Visible vertical area of table

; === CABINET VIEW POINT ===
ViewCabMode = 
ViewCabScaleX = 
ViewCabScaleY = 
ViewCabScaleZ = 
ViewCabPlayerX = 
ViewCabPlayerY = 
ViewCabPlayerZ = 
ViewCabLookAt = 
ViewCabRotation = 
ViewCabFOV = 
ViewCabLayback = 
ViewCabHOfs = 
ViewCabVOfs = 
ViewCabWindowTop = 
ViewCabWindowBot = 
; Forced cabinet view parameters
; Same principle as desktop view but for cabinet configuration
; Info: View optimized for cabinet with horizontal screen

; === FULL SINGLE SCREEN VIEW POINT ===
ViewFSSMode = 
ViewFSSScaleX = 
ViewFSSScaleY = 
ViewFSSScaleZ = 
ViewFSSPlayerX = 
ViewFSSPlayerY = 
ViewFSSPlayerZ = 
ViewFSSLookAt = 
ViewFSSRotation = 
ViewFSSFOV = 
ViewFSSLayback = 
ViewFSSHOfs = 
ViewFSSVOfs = 
ViewFSSWindowTop = 
ViewFSSWindowBot = 
; Forced FSS view parameters
; Same principle as desktop view but for Full Single Screen mode
; Info: View optimized for single vertical screen (playfield + backglass)

; #######################################################
; # Section [Defaults\Camera] - Default Camera
; # Default camera settings for new projects
; #######################################################

[Defaults\Camera]

; === DESKTOP MODE (LANDSCAPE) ===
DesktopMode = 
; Default desktop camera mode
; Default: 0 (standard mode)
; Values: 0-2 (different camera algorithms)
; Info: Basic desktop camera behavior

DesktopFov = 
; Default desktop field of view
; Default: 45.0 (moderate angle)
; Values: 10.0-120.0 (degrees)
; Info: 45° = natural view, 90° = very wide, 30° = zoom

DesktopLookAt = 
; Default desktop look-at point
; Default: 0.0 (table center)
; Values: -1000.0 to +1000.0 (VPX units)
; Info: Height of focal point on table

DesktopViewVOfs = 
; Default desktop vertical view offset
; Default: 0.0 (no offset)
; Values: -500.0 to +500.0 (VPX units)
; Info: Fine vertical view adjustment

DesktopCamX = 
DesktopCamY = 
DesktopCamZ = 
; Default desktop camera position
; Default: 0.0, 1000.0, 2000.0 (distant elevated view)
; Values: coordinates in VPX units
; Info: 3D camera position (X=side, Y=front/back, Z=height)

DesktopScaleX = 
DesktopScaleY = 
DesktopScaleZ = 
; Default desktop scale
; Default: 1.0, 1.0, 1.0 (normal size)
; Values: 0.1-10.0
; Info: Scale factors for view (geometric zoom)

; === FULL SINGLE SCREEN MODE (PORTRAIT WITH BACKGLASS) ===
FSSMode = 
; Default FSS camera mode
; Default: 1 (standard FSS mode)
; Values: 0-2 (different FSS algorithms)
; Info: Optimized for single vertical screen

FSSFov = 
; Default FSS field of view
; Default: 45.0 (similar to desktop)
; Values: 10.0-120.0 (degrees)
; Info: Viewing angle for portrait mode

FSSLookAt = 
; Default FSS look-at point
; Default: 0.0 (table center)
; Values: -1000.0 to +1000.0
; Info: Vertical focal point for FSS

FSSViewVOfs = 
; Default FSS vertical view offset
; Default: 0.0 (centered)
; Values: -500.0 to +500.0
; Info: Adjustment to balance playfield/backglass

FSSCamX = 
FSSCamY = 
FSSCamZ = 
; Default FSS camera position
; Default: 0.0, 500.0, 1500.0 (closer than desktop)
; Values: coordinates in VPX units
; Info: Position optimized for complete portrait view

FSSScaleX = 
FSSScaleY = 
FSSScaleZ = 
; Default FSS scale
; Default: 1.0, 1.0, 1.0 (normal size)
; Values: 0.1-10.0
; Info: Scale for portrait view with backglass

; #######################################################
; # VIEW AND CAMERA GUIDE
; #######################################################
;
; VIEW TYPES:
; - Desktop: Landscape view on desktop (horizontal screen)
; - Cabinet: Cabinet view on integrated horizontal screen
; - FSS: Complete portrait view (playfield + backglass)
;
; CAMERA PARAMETERS:
; - FOV: 30-60° = natural, 70-90° = wide, >90° = fish-eye
; - Position Y: negative = in front of table, positive = behind
; - Position Z: eye height (70cm typical standing)
; - LookAt: vertical focal point on table
; - Layback: visual comfort inclination
;
; RECOMMENDED CONFIGURATION:
; - Desktop: FOV 45°, high and distant camera
; - Cabinet: FOV 50°, camera at real player position
; - FSS: FOV 45°, camera adjusted to see playfield+backglass
;
; OVERRIDE vs DEFAULTS:
; - Defaults: Values for new tables
; - Override: Forces values on all existing tables
; - Override useful to standardize cabinet experience

; #######################################################
; # Sections [DefaultProps\*] - Default Object Properties
; # Default values for each object type in the editor
; # These values are applied when creating new objects
; #######################################################

; #######################################################
; # BUMPERS - Elastic shock absorbers
; #######################################################

[DefaultProps\Bumper]

; === PHYSICS ===
Force = 
; Bumper force on impact
; Default: 15.0 (moderate force)
; Values: 0.0-50.0 (higher = more violent bounce)
; Info: Force applied to ball on contact

Scatter = 
; Random bounce dispersion
; Default: 0.0 (predictable bounce)
; Values: 0.0-10.0 (higher = more random trajectory)
; Info: Adds variability to bounce for realism

HeightScale = 
; Bumper height scale
; Default: 90.0 (normal height)
; Values: 10.0-200.0 (percentage of standard height)
; Info: Adjusts visual height of bumper

RingSpeed = 
; Ring animation speed
; Default: 0.5 (moderate speed)
; Values: 0.0-2.0 (0 = no animation, 2 = very fast)
; Info: Speed of ring animation on impact

Orientation = 
; Bumper orientation in degrees
; Default: 0.0 (standard orientation)
; Values: 0.0-359.9 (rotation in degrees)
; Info: Rotation of bumper around its vertical axis

Threshold = 
; Trigger threshold
; Default: 1.0 (normal sensitivity)
; Values: 0.1-10.0 (lower = more sensitive)
; Info: Minimum force needed to trigger bumper

Surface = 
; Associated surface (name)
; Default: (no surface)
; Values: name of existing surface
; Info: Surface on which bumper is positioned

; === TIMER ===
TimerEnabled = 
TimerInterval = 
; Built-in timer configuration
; Default: 0 (disabled), 100 (100ms if enabled)
; Info: Timer for animations or periodic effects

; === VISIBILITY ===
CapVisible = 
; Top cap visibility
; Default: 1 (visible)
; Values: 0 = invisible, 1 = visible
; Info: Upper part of bumper

BaseVisible = 
; Base visibility
; Default: 1 (visible)
; Values: 0 = invisible, 1 = visible
; Info: Bumper socket

RingVisible = 
; Animated ring visibility
; Default: 1 (visible)
; Values: 0 = invisible, 1 = visible
; Info: Ring that animates on impact

SkirtVisible = 
; Skirt visibility (flared part)
; Default: 1 (visible)
; Values: 0 = invisible, 1 = visible
; Info: Flared part around base

ReflectionEnabled = 
; Enable reflections on bumper
; Default: 1 (reflections enabled)
; Values: 0 = no reflections, 1 = reflections enabled
; Info: Bumper appears in playfield reflections

; === EVENTS ===
HasHitEvent = 
; Generate event on impact
; Default: 1 (event enabled)
; Values: 0 = no event, 1 = event generated
; Info: Allows capturing Bumper_Hit() event in script

Collidable = 
; Physical collision enabled
; Default: 1 (collision enabled)
; Values: 0 = passes through, 1 = solid collision
; Info: Ball bounces or passes through object

; #######################################################
; # FLIPPERS - Main control elements
; #######################################################

[DefaultProps\Flipper]

; === MAIN PHYSICS ===
Scatter = 
; Flipper bounce dispersion
; Default: 0.0 (predictable bounce)
; Values: 0.0-10.0 (randomness for realism)
; Info: Trajectory variability on contact

Strength = 
; Flipper force (motor power)
; Default: 2200.0 (modern standard force)
; Values: 500-5000 (1500-2500 typical, higher = more powerful)
; Info: Solenoid power - affects speed and distance

EOSTorque = 
; End Of Stroke torque
; Default: 0.75 (moderate torque)
; Values: 0.0-2.0 (holding force in up position)
; Info: Holding force when flipper is raised

EOSTorqueAngle = 
; EOS torque application angle
; Default: 6.0 (near end of stroke)
; Values: 0.0-45.0 (degrees before end)
; Info: How far before end the torque applies

ReturnStrength = 
; Return force (spring)
; Default: 0.058 (moderate return)
; Values: 0.0-1.0 (speed of return to down position)
; Info: Return spring power

Mass = 
; Flipper mass (inertia)
; Default: 1.0 (standard mass)
; Values: 0.1-10.0 (heavier = more inertia)
; Info: Affects acceleration and responsiveness

Speed = 
; Movement speed
; Default: 0.3 (moderate speed)
; Values: 0.1-1.0 (higher = faster movement)
; Info: Speed of up/down movement

Elasticity = 
; Elasticity (bounce)
; Default: 0.8 (strong bounce)
; Values: 0.0-1.0 (0 = absorption, 1 = perfect bounce)
; Info: Bounce capacity on impact

ElasticityFalloff = 
; Elasticity decrease
; Default: 0.43 (moderate decrease)
; Values: 0.0-1.0 (how elasticity diminishes)
; Info: Elasticity loss based on impact force

Friction = 
; Surface friction
; Default: 0.6 (moderate friction)
; Values: 0.0-1.0 (0 = slippery, 1 = very rough)
; Info: Ball sliding resistance

RampUp = 
; Power ramp-up
; Default: 3.0 (fast ramp-up)
; Values: 0.0-10.0 (acceleration time)
; Info: Time to reach maximum power

; === GEOMETRY ===
StartAngle = 
EndAngle = 
; Start and end stroke angles
; Default: 121.0 (rest), 70.0 (active)
; Values: -180 to +180 (degrees, clockwise)
; Info: Down and up positions of flipper

BaseRadius = 
EndRadius = 
; Base and tip radii
; Default: 21.5 (base), 13.0 (tip)
; Values: 1-50 (VPX units)
; Info: Flipper thickness at base and tip

Length = 
; Flipper length
; Default: 130.0 (standard length)
; Values: 10-200 (VPX units)
; Info: Distance from pivot to tip

MaxDifLength = 
; Maximum length difference
; Default: 0.0 (fixed length)
; Values: 0.0-50.0 (length variation)
; Info: Possible flipper extension (rare)

Height = 
; Height above playfield
; Default: 50.0 (standard height)
; Values: 0.0-200.0 (VPX units)
; Info: Flipper elevation from surface

; === RUBBER ===
RubberThickness = 
RubberHeight = 
RubberWidth = 
; Protective rubber dimensions
; Default: 7.0, 19.0, 24.0 (thickness, height, width)
; Values: 1.0-50.0 (VPX units)
; Info: Black rubber protecting flipper tip

; === VISUAL ===
TimerEnabled = 
TimerInterval = 
; Built-in timer
; Default: 0 (disabled), 100 (100ms)

Color = 
; Metal flipper color
; Default: 0x909090 (metallic gray)
; Values: RGB hex color
; Info: Color of metal part

RubberColor = 
; Rubber color
; Default: 0x000000 (black)
; Values: RGB hex color
; Info: Color of protective rubber

Surface = 
; Associated surface
; Default: (none)
; Values: surface name

Visible = 
; Flipper visibility
; Default: 1 (visible)
; Values: 0 = invisible, 1 = visible

Enabled = 
; Flipper enabled (responds to commands)
; Default: 1 (enabled)
; Values: 0 = inactive, 1 = active
; Info: Can be temporarily disabled in game

ReflectionEnabled = 
; Reflections enabled
; Default: 1 (reflections)
; Values: 0 = no reflections, 1 = reflections

; #######################################################
; # OTHER OBJECTS - Summary of main properties
; #######################################################

[DefaultProps\Decal]
; DECALS - Images applied to surfaces
Width = 
Height = 
; Decal dimensions
; Default: 100.0x100.0 (standard size)

Rotation = 
; Rotation in degrees
; Default: 0.0 (no rotation)

Image = 
; Image file used
; Default: (none)

Surface = 
; Target surface for application
; Default: (none)

DecalType = 
; Decal type
; Default: 0 (image), 1 = text

Text = 
; Text (if DecalType = 1)
; Default: (empty)

Color = 
; Base color
; Default: 0xFFFFFF (white)

[DefaultProps\Gate]
; GATES - Oscillating elements
Elasticity = 
Friction = 
; Basic physical properties

Length = 
Height = 
; Gate dimensions

AngleMin = 
AngleMax = 
; Minimum and maximum oscillation angles

TwoWay = 
; Bidirectional oscillation
; Default: 0 (unidirectional)

[DefaultProps\Kicker]
; KICKERS - Ball ejectors
HitAccuracy = 
; Ejection accuracy
; Default: 0.7 (fairly accurate)

HitHeight = 
; Ejection height
; Default: (surface height + 25)

Scatter = 
; Ejection dispersion
; Default: 0 (accurate)

KickerType = 
; Kicker type
; Default: 0 (standard kicker)

[DefaultProps\Light]
; LIGHTS - Decorative and functional lighting
Falloff = 
; Light attenuation
; Default: 50 (normal attenuation)

FalloffPower = 
; Attenuation power
; Default: 2.0 (quadratic attenuation)

Intensity = 
; Light intensity
; Default: 1.0 (normal intensity)

Color = 
ColorFull = 
; Off and on colors
; Default: white for both

BlinkPattern = 
; Blink pattern
; Default: "10" (simple on/off)

BlinkInterval = 
; Blink interval
; Default: 125 (milliseconds)

[DefaultProps\Plunger]
; PLUNGER - Launch mechanism
Height = 
Width = 
; Plunger dimensions

Stroke = 
; Plunger stroke (travel distance)
; Default: 80 (standard stroke)

PullSpeed = 
ReleaseSpeed = 
; Pull and release speeds

PlungerType = 
; Plunger type
; Default: 0 (modern), 1 = classic

MechPlunger = 
; Mechanical plunger (vs solenoid)
; Default: 0 (solenoid)

AutoPlunger = 
; Automatic launch
; Default: 0 (manual)

ScatterVelocity = 
; Velocity dispersion
; Default: 0 (accurate)

[DefaultProps\Rubber]
; RUBBERS - Elastic bounces
Height = 
; Rubber height
; Default: 25 (standard height)

Thickness = 
; Thickness
; Default: 8 (normal thickness)

Elasticity = 
; Bounce elasticity
; Default: 0.8 (strong bounce)

[DefaultProps\Wall]
; WALLS - Fixed obstacles
HeightBottom = 
HeightTop = 
; Wall bottom and top heights
; Default: 0, 50 (50-unit wall)

SlingshotForce = 
; Slingshot force (if enabled)
; Default: 80 (moderate force)

SlingshotThreshold = 
; Slingshot trigger threshold
; Default: 2.0 (normal sensitivity)

; #######################################################
; # DEFAULT PROPERTIES TIPS
; #######################################################
;
; FLIPPERS:
; - Strength 2200 = modern, 1800 = vintage
; - Elasticity 0.8 = realistic bounce
; - Speed 0.3 = correct responsiveness
; - EOSTorque 0.75 = hold up position
;
; BUMPERS:
; - Force 15 = moderate and controllable bounce
; - Scatter 0 = accuracy, 2-5 = realistic variability
; - All visual elements visible by default
;
; LIGHTS:
; - Intensity 1.0 = standard brightness
; - Falloff 50 = normal range
; - BlinkInterval 125ms = natural blinking
;
; RUBBERS:
; - Elasticity 0.8 = authentic bounce
; - Height 25 = standard flipper height
; - Thickness 8 = realistic thickness
;
; MODIFICATION:
; - These values apply to new objects
; - Existing objects keep their values
; - Modify here to standardize your workflow
; - Save different profiles for different table styles

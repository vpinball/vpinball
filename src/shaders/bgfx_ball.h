// Ball Shaders

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of vertex shader from vs_ball.sc to vs_ball with options: NOSTEREO
static const uint8_t vs_ball_mtl[1446] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x13, 0x17, 0xa9, 0x6c, 0x04, 0x00, 0x0b, 0x6f, // VSH........l...o
	0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x04, 0x01, 0x00, 0x00, 0x04, 0x00, // rientation......
	0x00, 0x00, 0x00, 0x00, 0x13, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, // .....matWorldVie
	0x77, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x04, 0x01, 0x80, 0x00, 0x04, 0x00, 0x00, 0x00, // wInverse........
	0x00, 0x00, 0x0c, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x04, // ...matWorldView.
	0x01, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, // .@........matWor
	0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x04, 0x01, 0xc0, 0x00, 0x04, 0x00, // ldViewProj......
	0x00, 0x00, 0x00, 0x00, 0x24, 0x05, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, // ....$...#include
	0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, //  <metal_stdlib>.
	0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, // #include <simd/s
	0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, // imd.h>..using na
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, // mespace metal;..
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, // struct _Global.{
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x6f, 0x72, // .    float4x4 or
	0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // ientation;.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, // loat4x4 matWorld
	0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // View;.    float4
	0x78, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x49, // x4 matWorldViewI
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // nverse;.    floa
	0x74, 0x34, 0x78, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, // t4x4 matWorldVie
	0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, // wProj;.};..struc
	0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, // t xlatMtlMain_ou
	0x74, 0x0a, 0x7b, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, // t.{..float bgfx_
	0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x20, // metal_pointSize 
	0x5b, 0x5b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5d, 0x5d, 0x20, 0x3d, // [[point_size]] =
	0x20, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //  1;.    float3 _
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, // entryPointOutput
	0x5f, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, // _v_normal [[user
	0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // (locn0)]];.    f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, // loat2 _entryPoin
	0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, // tOutput_v_texcoo
	0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, // rd0 [[user(locn1
	0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // )]];.    float3 
	0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, // _entryPointOutpu
	0x74, 0x5f, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x20, 0x5b, 0x5b, 0x75, // t_v_worldPos [[u
	0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x32, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, // ser(locn2)]];.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, //   float4 gl_Posi
	0x74, 0x69, 0x6f, 0x6e, 0x20, 0x5b, 0x5b, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5d, // tion [[position]
	0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, // ];.};..struct xl
	0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, // atMtlMain_in.{. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, //    float3 a_norm
	0x61, 0x6c, 0x20, 0x5b, 0x5b, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x28, 0x30, // al [[attribute(0
	0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // )]];.    float3 
	0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x5b, 0x5b, 0x61, 0x74, 0x74, // a_position [[att
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, // ribute(1)]];.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, //  float2 a_texcoo
	0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x28, // rd0 [[attribute(
	0x32, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, // 2)]];.};..vertex
	0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, //  xlatMtlMain_out
	0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, //  xlatMtlMain(xla
	0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, // tMtlMain_in in [
	0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, // [stage_in]], con
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, // stant _Global& _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, // mtl_u [[buffer(0
	0x29, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // )]]).{.    xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, // tlMain_out out =
	0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, //  {};.    float4 
	0x5f, 0x31, 0x36, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x69, 0x6e, // _162 = float4(in
	0x2e, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, // .a_position, 1.0
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, // );.    float4 _1
	0x36, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6f, 0x72, 0x69, 0x65, // 66 = _mtl_u.orie
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x36, 0x32, 0x3b, 0x0a, // ntation * _162;.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x33, 0x39, 0x20, //     float4 _239 
	0x3d, 0x20, 0x5f, 0x31, 0x36, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x39, // = _162;.    _239
	0x2e, 0x78, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, // .x = _166.x;.   
	0x20, 0x5f, 0x32, 0x33, 0x39, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x2e, 0x79, //  _239.y = _166.y
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x39, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x5f, // ;.    _239.z = _
	0x31, 0x36, 0x36, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x67, // 166.z;.    out.g
	0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, // l_Position = _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, // l_u.matWorldView
	0x50, 0x72, 0x6f, 0x6a, 0x20, 0x2a, 0x20, 0x5f, 0x32, 0x33, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, // Proj * _239;.   
	0x20, 0x6f, 0x75, 0x74, 0x2e, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, //  out._entryPoint
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, // Output_v_normal 
	0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, // = fast::normaliz
	0x65, 0x28, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // e((float4((_mtl_
	0x75, 0x2e, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x2a, 0x20, // u.orientation * 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x69, 0x6e, 0x2e, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // float4(in.a_norm
	0x61, 0x6c, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x30, // al, 0.0)).xyz, 0
	0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, // .0) * _mtl_u.mat
	0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, // WorldViewInverse
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, // ).xyz);.    out.
	0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, // _entryPointOutpu
	0x74, 0x5f, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3d, 0x20, // t_v_texcoord0 = 
	0x69, 0x6e, 0x2e, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, // in.a_texcoord0;.
	0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, //     out._entryPo
	0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // intOutput_v_worl
	0x64, 0x50, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, // dPos = (_mtl_u.m
	0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x5f, 0x32, // atWorldView * _2
	0x33, 0x39, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, // 39).xyz;.    ret
	0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x03, 0x02, 0x00, // urn out;.}......
	0x01, 0x00, 0x10, 0x00, 0x00, 0x01,                                                             // ......
};
static const uint8_t vs_ball_essl[6908] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0xe9, 0x1a, // VSH........l....
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // s.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x75, 0x74, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, // arying out.preci
	0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // sion highp float
	0x3b, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, // ;.precision high
	0x70, 0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, // p int;.#define s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // hadow2D(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // e(_sampler, _coo
	0x72, 0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, // rd).#define shad
	0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ow2DProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // r, _coord) textu
	0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // reProj(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, //  _coord).attribu
	0x74, 0x65, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // te vec3 a_normal
	0x3b, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x76, 0x65, 0x63, 0x33, // ;.attribute vec3
	0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x61, 0x74, 0x74, //  a_position;.att
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x61, 0x5f, 0x74, 0x65, // ribute vec2 a_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // xcoord0;.varying
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, //  vec3 v_normal;.
	0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, // varying vec2 v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // excoord0;.varyin
	0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, // g vec3 v_worldPo
	0x73, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, // s;.vec3 instMul(
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, // vec3 _vec, mat3 
	0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, // _mtx) { return (
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, //  (_vec) * (_mtx)
	0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, //  ); }.vec3 instM
	0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, // ul(mat3 _mtx, ve
	0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // c3 _vec) { retur
	0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, // n ( (_mtx) * (_v
	0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, // ec) ); }.vec4 in
	0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, // stMul(vec4 _vec,
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, //  mat4 _mtx) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, // turn ( (_vec) * 
	0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // (_mtx) ); }.vec4
	0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, //  instMul(mat4 _m
	0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, // tx, vec4 _vec) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, //  return ( (_mtx)
	0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, //  * (_vec) ); }.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // loat rcp(float _
	0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, // a) { return 1.0/
	0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, // _a; }.vec2 rcp(v
	0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec2 _a) { return
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, //  vec2(1.0)/_a; }
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // .vec3 rcp(vec3 _
	0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, // a) { return vec3
	0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // (1.0)/_a; }.vec4
	0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, //  rcp(vec4 _a) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, // return vec4(1.0)
	0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, // /_a; }.vec2 vec2
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, // _splat(float _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, //  { return vec2(_
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // x, _x); }.vec3 v
	0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ec3_splat(float 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _x) { return vec
	0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // 3(_x, _x, _x); }
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // .vec4 vec4_splat
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // (float _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // urn vec4(_x, _x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, //  _x, _x); }.uvec
	0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, // 2 uvec2_splat(ui
	0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // nt _x) { return 
	0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // uvec2(_x, _x); }
	0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, // .uvec3 uvec3_spl
	0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // at(uint _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // turn uvec3(_x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, // x, _x); }.uvec4 
	0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec4_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, //  _x) { return uv
	0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, // ec4(_x, _x, _x, 
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, // _x); }.mat4 mtxF
	0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, // romRows(vec4 _0,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, //  vec4 _1, vec4 _
	0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 2, vec4 _3).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, // turn transpose(m
	0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, // at4(_0, _1, _2, 
	0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, // _3) );.}.mat4 mt
	0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // xFromCols(vec4 _
	0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // 0, vec4 _1, vec4
	0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, //  _2, vec4 _3).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, // return mat4(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, // _1, _2, _3);.}.m
	0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, // at3 mtxFromRows(
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, // vec3 _0, vec3 _1
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // , vec3 _2).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, // urn transpose(ma
	0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, // t3(_0, _1, _2) )
	0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, // ;.}.mat3 mtxFrom
	0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, // Cols(vec3 _0, ve
	0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, // c3 _1, vec3 _2).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, // {.return mat3(_0
	0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, // , _1, _2);.}.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, // form vec4 u_view
	0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // Rect;.uniform ve
	0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, // c4 u_viewTexel;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, // uniform mat4 u_v
	0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, // iew;.uniform mat
	0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // 4 u_invView;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, // form mat4 u_proj
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // _invProj;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, // m mat4 u_viewPro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, // u_invViewProj;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, // niform mat4 u_mo
	0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // del[32];.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, //  mat4 u_modelVie
	0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // w;.uniform mat4 
	0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, // u_modelViewProj;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, // .uniform vec4 u_
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // alphaRef4;.float
	0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  sqr(const float
	0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, //  v).{.return v*v
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, // ;.}.vec2 sqr(con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // st vec2 v).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // urn v*v;.}.vec3 
	0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // sqr(const vec3 v
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, // ).{.return v*v;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x63, 0x6f, // }.vec3 mul_w1(co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // nst vec3 v, cons
	0x74, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // t mat4 m).{.retu
	0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // rn v.x*m[0].xyz 
	0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // + (v.y*m[1].xyz 
	0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // + (v.z*m[2].xyz 
	0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // + m[3].xyz));.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, // float acos_appro
	0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // x_divPI(const fl
	0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // oat v).{.const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, // loat x = abs(v);
	0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, // .if(1. - x <= 0.
	0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, // 00006103515625).
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, // return (v >= 0.)
	0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, //  ? 0. : 1.;.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, // t float res = ((
	0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, // -0.155972/3.1415
	0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, // 9265358979323846
	0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, // 26433832795) * x
	0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, //  + (1.56467/3.14
	0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, // 1592653589793238
	0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, // 4626433832795) )
	0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, //  * sqrt(1. - x);
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, // .return (v >= 0.
	0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, // ) ? res : 1. - r
	0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, // es;.}.float atan
	0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, // 2_approx_div2PI(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x63, // const float y, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, // onst float x).{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, // const float abs_
	0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // y = abs(y);.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, // t float abs_x = 
	0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, // abs(x);.if(abs_x
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, //  <= 0.0000610351
	0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, // 5625 && abs_y <=
	0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, //  0.0000610351562
	0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, // 5).return 0.;.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, // nst float r = (a
	0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, // bs_x - abs_y) / 
	0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, // (abs_x + abs_y);
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, // .const float ang
	0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // le = ((x < 0.) ?
	0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, //  (3./8.) : (1./8
	0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, // .)).+ (0.211868 
	0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, // /(2.*3.141592653
	0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, // 5897932384626433
	0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, // 832795) * r * r 
	0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, // - 0.987305 /(2.*
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, // 5)) * ((x < 0.) 
	0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // ? -r : r);.retur
	0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, // n (y < 0.) ? -an
	0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // gle : angle;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, // loat asin_approx
	0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // _divPI(const flo
	0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // at v).{.const fl
	0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, // oat x = abs(v);.
	0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, // if(1. - x <= 0.0
	0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, // 0006103515625).r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, // eturn (v >= 0.) 
	0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x63, 0x6f, // ? 0.5 : -0.5;.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, // nst float res = 
	0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, // ((-0.155972/3.14
	0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, // 1592653589793238
	0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, // 4626433832795) *
	0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, //  x + (1.56467/3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, //  ) * sqrt(1. - x
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, // );.return (v >= 
	0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, // 0.) ? 0.5 - res 
	0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, // : -0.5 + res;.}.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, // vec2 ray_to_equi
	0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x63, // rectangular_uv(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, // onst vec3 ray).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, // .return vec2(.0.
	0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, // 5 + atan2_approx
	0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, // _div2PI(ray.y, r
	0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, // ay.x),.acos_appr
	0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, // ox_divPI(ray.z))
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, // ;.}.float InvsRG
	0x42, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, // B(const float co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // lor).{.if (color
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, //  <= 0.04045).ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, // urn color * (1.0
	0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, // /12.92);.else.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // turn pow(color *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, //  (1.0/1.055) + (
	0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, // 0.055/1.055), 2.
	0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, // 4);.}.float InvR
	0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ec709(const floa
	0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, // t color).{.if (c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, // olor <= 0.081).r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, // eturn color * (1
	0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, // .0/4.5);.else.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // turn pow(color *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, //  (1.0/1.099) + (
	0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, // 0.099/1.099), 1.
	0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0/0.45);.}.float
	0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  InvGamma(const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // float color).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, // eturn InvsRGB(co
	0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, // lor);.}.vec3 Inv
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, // Gamma(const vec3
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  color).{.return
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, //  vec3(InvGamma(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, // olor.x),InvGamma
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // (color.y),InvGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // ma(color.z));.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, // vec3 InvToneMap(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // const vec3 color
	0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ).{.const float 
	0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, // inv_2bh = 0.5/0.
	0x32, 0x35, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 25;.const float 
	0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, // bh = 4.0*0.25 - 
	0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, // 2.0;.return (col
	0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // or - 1.0 + sqrt(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, // color*(color + b
	0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, // h) + 1.0))*inv_2
	0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, // bh;.}.float sRGB
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, // (const float f).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, // {.float s;.if (f
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, //  <= 0.0031308).s
	0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, //  = 12.92 * f;.el
	0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, // se.s = 1.055 * p
	0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, // ow(f, 1.0/2.4) -
	0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, //  0.055;.return s
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, // ;.}.float Rec709
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, // (const float f).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, // {.float s;.if (f
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, //  <= 0.018).s = 4
	0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, // .5 * f;.else.s =
	0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, //  1.099 * pow(f, 
	0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, // 0.45) - 0.099;.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // eturn s;.}.float
	0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, //  FBGamma(const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // loat color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // turn sRGB(color)
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, // ;.}.vec2 FBGamma
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // (const vec2 colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, // r).{.return vec2
	0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, // (FBGamma(color.x
	0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // ),FBGamma(color.
	0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, // y));.}.vec3 FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // mma(const vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // olor).{.return v
	0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // ec3(FBGamma(colo
	0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, // r.x),FBGamma(col
	0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, // or.y),FBGamma(co
	0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // lor.z));.}.float
	0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, //  FBToneMap(const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  float l).{.retu
	0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, // rn l * ((l*0.25 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, // + 1.0) / (l + 1.
	0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, // 0));.}.vec2 FBTo
	0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, // neMap(const vec2
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  color).{.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, // float l = dot(co
	0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, // lor,vec2(0.17620
	0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, // 4+0.0108109*0.5,
	0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, // 0.812985+0.01081
	0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 09*0.5));.return
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, //  color * ((l*0.2
	0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, // 5 + 1.0) / (l + 
	0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, // 1.0));.}.vec3 FB
	0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // ToneMap(const ve
	0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // c3 color).{.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, // t float l = dot(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, // color,vec3(0.176
	0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, // 204,0.812985,0.0
	0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 108109));.return
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, //  color * ((l*0.2
	0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, // 5 + 1.0) / (l + 
	0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, // 1.0));.}.vec4 Ad
	0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // ditive(const vec
	0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // 4 cBase, const v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // ec4 cBlend, cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, // t float percent)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, // .{.return cBase 
	0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, // + cBlend*percent
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, // ;.}.vec3 Screen 
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, // (const vec3 cBas
	0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, // e, const vec3 cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, // lend).{.return 1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, // .0 - (1.0 - cBas
	0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, // e) * (1.0 - cBle
	0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, // nd);.}.vec4 Scre
	0x65, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // en (const vec4 c
	0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, // Base, const vec4
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  cBlend).{.retur
	0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, // n 1.0 - (1.0 - c
	0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, // Base) * (1.0 - c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, // Blend);.}.vec3 S
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // creenHDR (const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // vec3 cBase, cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, // t vec3 cBlend).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, // .return max(1.0 
	0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, // - (1.0 - cBase) 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // * (1.0 - cBlend)
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, // , vec3(0.,0.,0.)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, // );.}.vec4 Screen
	0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // HDR (const vec4 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // cBase, const vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 4 cBlend).{.retu
	0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, // rn max(1.0 - (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // 0 - cBase) * (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, // 0 - cBlend), vec
	0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, // 4(0.,0.,0.,0.));
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, // .}.vec4 Multiply
	0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, //  (const vec4 cBa
	0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // se, const vec4 c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // Blend, const flo
	0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // at percent).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, // turn cBase * cBl
	0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // end*percent;.}.v
	0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x63, 0x6f, 0x6e, // ec4 Overlay (con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, // st vec4 cBase, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // onst vec4 cBlend
	0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, // ).{.vec4 cNew = 
	0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, // step(0.5, cBase)
	0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, // ;.cNew = mix(cBa
	0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, // se*cBlend*2.0, 1
	0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, // .0-2.0*(1.0-cBas
	0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, // e)*(1.0-cBlend),
	0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, //  cNew);.return c
	0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, // New;.}.vec4 Over
	0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // layHDR (const ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // c4 cBase, const 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, // vec4 cBlend).{.v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, // ec4 cNew = step(
	0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, // 0.5, cBase);.cNe
	0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, // w = max(mix(cBas
	0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, // e*cBlend*2.0, 1.
	0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, // 0-2.0*(1.0-cBase
	0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, // )*(1.0-cBlend), 
	0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, // cNew), vec4(0.,0
	0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // .,0.,0.));.retur
	0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // n cNew;.}.vec3 c
	0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, // os_hemisphere_sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, // mple(const vec2 
	0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // t).{.const float
	0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, //  phi = t.y * (2.
	0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, // 0*3.141592653589
	0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, // 7932384626433832
	0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 795);.const floa
	0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, // t cosTheta = sqr
	0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x63, 0x6f, // t(1.0 - t.x);.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, // nst float sinThe
	0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, // ta = sqrt(t.x);.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x73, 0x69, 0x6e, // float sp,cp;.sin
	0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x2c, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x29, 0x3b, 0x0a, // cos(phi,sp,cp);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, // return vec3(cp *
	0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, //  sinTheta, cosTh
	0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, // eta, sp * sinThe
	0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, // ta);.}.vec3 rota
	0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, // te_to_vector_upp
	0x65, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, // er(const vec3 ve
	0x63, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, // c, const vec3 no
	0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // rmal).{.if(norma
	0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, // l.y > -0.99999).
	0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, // {.const float h 
	0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // = 1.0/(1.0+norma
	0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // l.y);.const floa
	0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // t hz = h*normal.
	0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, // z;.const float h
	0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // zx = hz*normal.x
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, // ;.return vec3(.v
	0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, // ec.x * (normal.y
	0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, // +hz*normal.z) + 
	0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // vec.y * normal.x
	0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, //  - vec.z * hzx,.
	0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, // vec.y * normal.y
	0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, //  - vec.x * norma
	0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, // l.x - vec.z * no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, // rmal.z,.vec.y * 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, // normal.z - vec.x
	0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, //  * hzx + vec.z *
	0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, //  (normal.y+h*nor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, // mal.x*normal.x))
	0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // ;.}.else return 
	0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // -vec;.}.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, // mat4 orientation
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, // ;.uniform mat4 m
	0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // atWorldView;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, // form mat4 matWor
	0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x3b, 0x0a, 0x75, // ldViewInverse;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, // niform mat4 matW
	0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x76, 0x6f, // orldViewProj;.vo
	0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, // id main().{.vec4
	0x20, 0x70, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x61, 0x5f, 0x70, 0x6f, //  pos = vec4(a_po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x70, 0x6f, // sition, 1.0);.po
	0x73, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6f, 0x72, 0x69, 0x65, 0x6e, // s.xyz = ( (orien
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x70, 0x6f, 0x73, 0x29, 0x20, // tation) * (pos) 
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // ).xyz;.const vec
	0x33, 0x20, 0x6e, 0x73, 0x70, 0x69, 0x6e, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6f, 0x72, 0x69, // 3 nspin = ( (ori
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, // entation) * (vec
	0x34, 0x28, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, // 4(a_normal, 0.0)
	0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // ) ).xyz;.v_norma
	0x6c, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x20, // l = normalize(( 
	0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x6e, 0x73, 0x70, 0x69, 0x6e, 0x2c, 0x20, 0x30, 0x2e, 0x30, // (vec4(nspin, 0.0
	0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, // )) * (matWorldVi
	0x65, 0x77, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, // ewInverse) ).xyz
	0x29, 0x3b, 0x0a, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3d, // );.v_texcoord0 =
	0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x5f, //  a_texcoord0;.v_
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, // worldPos = ( (ma
	0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x70, // tWorldView) * (p
	0x6f, 0x73, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x50, 0x6f, // os) ).xyz;.gl_Po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, // sition = ( (matW
	0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x29, 0x20, 0x2a, 0x20, // orldViewProj) * 
	0x28, 0x70, 0x6f, 0x73, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,                         // (pos) );.}..
};
static const uint8_t vs_ball_glsl[7252] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x41, 0x1c, // VSH........l..A.
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x23, // ..#version 440.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, //           textur
	0x65, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // e.#define textur
	0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, // e2DLod       tex
	0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // tureLod.#define 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, // texture2DGrad   
	0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, //    textureGrad.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x50, 0x72, 0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // ProjLod   textur
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, // eProjLod.#define
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, //  texture2DProjGr
	0x61, 0x64, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, // ad  textureProjG
	0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, // rad.#define text
	0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, // ureCubeLod     t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, // extureLod.#defin
	0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, // e textureCubeGra
	0x64, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, // d    textureGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x33, 0x44, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // 3D          text
	0x75, 0x72, 0x65, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, // ure.#define text
	0x75, 0x72, 0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, // ure2DLodOffset t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, // extureLodOffset.
	0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, // #define attribut
	0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, // e in.#define var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x75, 0x74, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, // ying out.#define
	0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, //  bgfxShadow2D(_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, // ampler, _coord) 
	0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, //     vec4_splat(t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // exture(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, //  _coord) ).#defi
	0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, // ne bgfxShadow2DP
	0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, // roj(_sampler, _c
	0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // oord) vec4_splat
	0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, // (textureProj(_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, // mpler, _coord) )
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // .attribute vec3 
	0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // a_normal;.attrib
	0x75, 0x74, 0x65, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, // ute vec3 a_posit
	0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x76, // ion;.attribute v
	0x65, 0x63, 0x32, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, // ec2 a_texcoord0;
	0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, // .varying vec3 v_
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, // normal;.varying 
	0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, // vec2 v_texcoord0
	0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // ;.varying vec3 v
	0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // _worldPos;.vec3 
	0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, // instMul(vec3 _ve
	0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, // c, mat3 _mtx) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, // return ( (_vec) 
	0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, // * (_mtx) ); }.ve
	0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, // c3 instMul(mat3 
	0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, // _mtx, vec3 _vec)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, //  { return ( (_mt
	0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, // x) * (_vec) ); }
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, // .vec4 instMul(ve
	0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, // c4 _vec, mat4 _m
	0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, // tx) { return ( (
	0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, // _vec) * (_mtx) )
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, // ; }.vec4 instMul
	0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // (mat4 _mtx, vec4
	0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _vec) { return 
	0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, // ( (_mtx) * (_vec
	0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, // ) ); }.float rcp
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // (float _a) { ret
	0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, // urn 1.0/_a; }.ve
	0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, // c2 rcp(vec2 _a) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, // { return vec2(1.
	0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, // 0)/_a; }.vec3 rc
	0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // p(vec3 _a) { ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, // urn vec3(1.0)/_a
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, // ; }.vec4 rcp(vec
	0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // 4 _a) { return v
	0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // ec4(1.0)/_a; }.v
	0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, // ec2 vec2_splat(f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // loat _x) { retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, // n vec2(_x, _x); 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, // }.vec3 vec3_spla
	0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // t(float _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // turn vec3(_x, _x
	0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, // , _x); }.vec4 ve
	0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // c4_splat(float _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, // x) { return vec4
	0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, // (_x, _x, _x, _x)
	0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, // ; }.uvec2 uvec2_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // splat(uint _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, //  return uvec2(_x
	0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, // , _x); }.uvec3 u
	0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, // vec3_splat(uint 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, // _x) { return uve
	0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, // c3(_x, _x, _x); 
	0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, // }.uvec4 uvec4_sp
	0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // lat(uint _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, // eturn uvec4(_x, 
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, // _x, _x, _x); }.m
	0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, // at4 mtxFromRows(
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, // vec4 _0, vec4 _1
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // , vec4 _2, vec4 
	0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, // _3).{.return tra
	0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, // nspose(mat4(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, // _1, _2, _3) );.}
	0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, // .mat4 mtxFromCol
	0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // s(vec4 _0, vec4 
	0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, // _1, vec4 _2, vec
	0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, // 4 _3).{.return m
	0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, // at4(_0, _1, _2, 
	0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, // _3);.}.mat3 mtxF
	0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, // romRows(vec3 _0,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, //  vec3 _1, vec3 _
	0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, // 2).{.return tran
	0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, // spose(mat3(_0, _
	0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, // 1, _2) );.}.mat3
	0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, //  mtxFromCols(vec
	0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, // 3 _0, vec3 _1, v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec3 _2).{.return
	0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, //  mat3(_0, _1, _2
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, // );.}.uniform vec
	0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, // 4 u_viewRect;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // iform vec4 u_vie
	0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // wTexel;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // mat4 u_view;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, // form mat4 u_invV
	0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, // iew;.uniform mat
	0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // 4 u_proj;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, // m mat4 u_invProj
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // _viewProj;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, // rm mat4 u_invVie
	0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // wProj;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, // at4 u_model[32];
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // modelView;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, // rm mat4 u_modelV
	0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // iewProj;.uniform
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, //  vec4 u_alphaRef
	0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, // 4;.float sqr(con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // st float v).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, // turn v*v;.}.vec2
	0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, //  sqr(const vec2 
	0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, // v).{.return v*v;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, // .}.vec3 sqr(cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // t vec3 v).{.retu
	0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, // rn v*v;.}.vec3 m
	0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, // ul_w1(const vec3
	0x20, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, //  v, const mat4 m
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, // ).{.return v.x*m
	0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, // [0].xyz + (v.y*m
	0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, // [1].xyz + (v.z*m
	0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, // [2].xyz + m[3].x
	0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, // yz));.}.float ac
	0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, // os_approx_divPI(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, // const float v).{
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, // .const float x =
	0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, //  abs(v);.if(1. -
	0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, //  x <= 0.00006103
	0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, // 515625).return (
	0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, // v >= 0.) ? 0. : 
	0x31, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 1.;.const float 
	0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, // res = ((-0.15597
	0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, // 2/3.141592653589
	0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, // 7932384626433832
	0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, // 795) * x + (1.56
	0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, // 467/3.1415926535
	0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, // 8979323846264338
	0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // 32795) ) * sqrt(
	0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 1. - x);.return 
	0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, // (v >= 0.) ? res 
	0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // : 1. - res;.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, // oat atan2_approx
	0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // _div2PI(const fl
	0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // oat y, const flo
	0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // at x).{.const fl
	0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, // oat abs_y = abs(
	0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // y);.const float 
	0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, // abs_x = abs(x);.
	0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, // if(abs_x <= 0.00
	0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, // 006103515625 && 
	0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, // abs_y <= 0.00006
	0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // 103515625).retur
	0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // n 0.;.const floa
	0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, // t r = (abs_x - a
	0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, // bs_y) / (abs_x +
	0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, //  abs_y);.const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, // loat angle = ((x
	0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, //  < 0.) ? (3./8.)
	0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, //  : (1./8.)).+ (0
	0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, // .211868 /(2.*3.1
	0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, // 4159265358979323
	0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, // 84626433832795) 
	0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, // * r * r - 0.9873
	0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, // 05 /(2.*3.141592
	0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, // 6535897932384626
	0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, // 433832795)) * ((
	0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, // x < 0.) ? -r : r
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, // );.return (y < 0
	0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, // .) ? -angle : an
	0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, 0x69, // gle;.}.float asi
	0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x63, // n_approx_divPI(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, // onst float v).{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, // const float x = 
	0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, // abs(v);.if(1. - 
	0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, // x <= 0.000061035
	0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, // 15625).return (v
	0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, //  >= 0.) ? 0.5 : 
	0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // -0.5;.const floa
	0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, // t res = ((-0.155
	0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, // 972/3.1415926535
	0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, // 8979323846264338
	0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, // 32795) * x + (1.
	0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, // 56467/3.14159265
	0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, // 3589793238462643
	0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, // 3832795) ) * sqr
	0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // t(1. - x);.retur
	0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, // n (v >= 0.) ? 0.
	0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, // 5 - res : -0.5 +
	0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, 0x79, //  res;.}.vec2 ray
	0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, // _to_equirectangu
	0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // lar_uv(const vec
	0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 3 ray).{.return 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, // vec2(.0.5 + atan
	0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, // 2_approx_div2PI(
	0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, // ray.y, ray.x),.a
	0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, // cos_approx_divPI
	0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // (ray.z));.}.floa
	0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // t InvsRGB(const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, // float color).{.i
	0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, // f (color <= 0.04
	0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // 045).return colo
	0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, // r * (1.0/12.92);
	0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, // .else.return pow
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, // (color * (1.0/1.
	0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, // 055) + (0.055/1.
	0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // 055), 2.4);.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x63, 0x6f, // oat InvRec709(co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // nst float color)
	0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, // .{.if (color <= 
	0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, // 0.081).return co
	0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, // lor * (1.0/4.5);
	0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, // .else.return pow
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, // (color * (1.0/1.
	0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, // 099) + (0.099/1.
	0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, // 099), 1.0/0.45);
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, // .}.float InvGamm
	0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, // a(const float co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, // lor).{.return In
	0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // vsRGB(color);.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, // vec3 InvGamma(co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // nst vec3 color).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, // {.return vec3(In
	0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, // vGamma(color.x),
	0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, // InvGamma(color.y
	0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // ),InvGamma(color
	0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, // .z));.}.vec3 Inv
	0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // ToneMap(const ve
	0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // c3 color).{.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, // t float inv_2bh 
	0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // = 0.5/0.25;.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, // t float bh = 4.0
	0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, // *0.25 - 2.0;.ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, // urn (color - 1.0
	0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, //  + sqrt(color*(c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, // olor + bh) + 1.0
	0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // ))*inv_2bh;.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // oat sRGB(const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // loat f).{.float 
	0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, // s;.if (f <= 0.00
	0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, // 31308).s = 12.92
	0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, //  * f;.else.s = 1
	0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, // .055 * pow(f, 1.
	0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, // 0/2.4) - 0.055;.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // return s;.}.floa
	0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // t Rec709(const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // loat f).{.float 
	0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, // s;.if (f <= 0.01
	0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, // 8).s = 4.5 * f;.
	0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, // else.s = 1.099 *
	0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, //  pow(f, 0.45) - 
	0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, // 0.099;.return s;
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, // .}.float FBGamma
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, // (const float col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, // or).{.return sRG
	0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, // B(color);.}.vec2
	0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, //  FBGamma(const v
	0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // ec2 color).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, // urn vec2(FBGamma
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // (color.x),FBGamm
	0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // a(color.y));.}.v
	0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, // ec3 FBGamma(cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // t vec3 color).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, // return vec3(FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, // mma(color.x),FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, // amma(color.y),FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, // Gamma(color.z));
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, // .}.float FBToneM
	0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, // ap(const float l
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, // ).{.return l * (
	0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, // (l*0.25 + 1.0) /
	0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, //  (l + 1.0));.}.v
	0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, // ec2 FBToneMap(co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // nst vec2 color).
	0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, // {.const float l 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, // = dot(color,vec2
	0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, // (0.176204+0.0108
	0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, // 109*0.5,0.812985
	0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, // +0.0108109*0.5))
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // ;.return color *
	0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, //  ((l*0.25 + 1.0)
	0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, //  / (l + 1.0));.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, // .vec3 FBToneMap(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // const vec3 color
	0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ).{.const float 
	0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, // l = dot(color,ve
	0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, // c3(0.176204,0.81
	0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, // 2985,0.0108109))
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // ;.return color *
	0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, //  ((l*0.25 + 1.0)
	0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, //  / (l + 1.0));.}
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x63, // .vec4 Additive(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // onst vec4 cBase,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, //  const vec4 cBle
	0x6e, 0x64, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // nd, const float 
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // percent).{.retur
	0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // n cBase + cBlend
	0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // *percent;.}.vec3
	0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, //  Screen (const v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, // ec3 cBase, const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, //  vec3 cBlend).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, // return 1.0 - (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // 0 - cBase) * (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // 0 - cBlend);.}.v
	0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, // ec4 Screen (cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, // t vec4 cBase, co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // nst vec4 cBlend)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // .{.return 1.0 - 
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, // (1.0 - cBase) * 
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, // (1.0 - cBlend);.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, // }.vec3 ScreenHDR
	0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, //  (const vec3 cBa
	0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // se, const vec3 c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // Blend).{.return 
	0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // max(1.0 - (1.0 -
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, //  cBase) * (1.0 -
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, //  cBlend), vec3(0
	0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // .,0.,0.));.}.vec
	0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, // 4 ScreenHDR (con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, // st vec4 cBase, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // onst vec4 cBlend
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, // ).{.return max(1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, // .0 - (1.0 - cBas
	0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, // e) * (1.0 - cBle
	0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, // nd), vec4(0.,0.,
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // 0.,0.));.}.vec4 
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // Multiply (const 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // vec4 cBase, cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x63, // t vec4 cBlend, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, // onst float perce
	0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, // nt).{.return cBa
	0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, // se * cBlend*perc
	0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, // ent;.}.vec4 Over
	0x6c, 0x61, 0x79, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // lay (const vec4 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // cBase, const vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, // 4 cBlend).{.vec4
	0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, //  cNew = step(0.5
	0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, // , cBase);.cNew =
	0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, //  mix(cBase*cBlen
	0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, // d*2.0, 1.0-2.0*(
	0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, // 1.0-cBase)*(1.0-
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, // cBlend), cNew);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // return cNew;.}.v
	0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, // ec4 OverlayHDR (
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // const vec4 cBase
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, // , const vec4 cBl
	0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, // end).{.vec4 cNew
	0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, //  = step(0.5, cBa
	0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, // se);.cNew = max(
	0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // mix(cBase*cBlend
	0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, // *2.0, 1.0-2.0*(1
	0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, // .0-cBase)*(1.0-c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, // Blend), cNew), v
	0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, // ec4(0.,0.,0.,0.)
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, // );.return cNew;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, // }.vec3 cos_hemis
	0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x63, 0x6f, 0x6e, // phere_sample(con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, // st vec2 t).{.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, // st float phi = t
	0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, // .y * (2.0*3.1415
	0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, // 9265358979323846
	0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x63, 0x6f, // 26433832795);.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, // nst float cosThe
	0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // ta = sqrt(1.0 - 
	0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // t.x);.const floa
	0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, // t sinTheta = sqr
	0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, // t(t.x);.float sp
	0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x73, 0x69, 0x6e, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x2c, // ,cp;.sincos(phi,
	0x73, 0x70, 0x2c, 0x63, 0x70, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // sp,cp);.return v
	0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, // ec3(cp * sinThet
	0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, // a, cosTheta, sp 
	0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // * sinTheta);.}.v
	0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, // ec3 rotate_to_ve
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // ctor_upper(const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, //  vec3 vec, const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, //  vec3 normal).{.
	0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, // if(normal.y > -0
	0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // .99999).{.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, // float h = 1.0/(1
	0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, // .0+normal.y);.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, // nst float hz = h
	0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // *normal.z;.const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, //  float hzx = hz*
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // normal.x;.return
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, //  vec3(.vec.x * (
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, // normal.y+hz*norm
	0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, // al.z) + vec.y * 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, // normal.x - vec.z
	0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, //  * hzx,.vec.y * 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, // normal.y - vec.x
	0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, //  * normal.x - ve
	0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, // c.z * normal.z,.
	0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, // vec.y * normal.z
	0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, //  - vec.x * hzx +
	0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, //  vec.z * (normal
	0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, // .y+h*normal.x*no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, // rmal.x));.}.else
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, //  return -vec;.}.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6f, 0x72, 0x69, // uniform mat4 ori
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // entation;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, // m mat4 matWorldV
	0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, // iew;.uniform mat
	0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, // 4 matWorldViewIn
	0x76, 0x65, 0x72, 0x73, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // verse;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, // at4 matWorldView
	0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, // Proj;.void main(
	0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x76, // ).{.vec4 pos = v
	0x65, 0x63, 0x34, 0x28, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, // ec4(a_position, 
	0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x70, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, // 1.0);.pos.xyz = 
	0x28, 0x20, 0x28, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x29, 0x20, // ( (orientation) 
	0x2a, 0x20, 0x28, 0x70, 0x6f, 0x73, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, // * (pos) ).xyz;.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x73, 0x70, 0x69, 0x6e, 0x20, // onst vec3 nspin 
	0x3d, 0x20, 0x28, 0x20, 0x28, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, // = ( (orientation
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // ) * (vec4(a_norm
	0x61, 0x6c, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // al, 0.0)) ).xyz;
	0x0a, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // .v_normal = norm
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x6e, 0x73, // alize(( (vec4(ns
	0x70, 0x69, 0x6e, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, // pin, 0.0)) * (ma
	0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, // tWorldViewInvers
	0x65, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x76, 0x5f, 0x74, 0x65, 0x78, // e) ).xyz);.v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // coord0 = a_texco
	0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, // ord0;.v_worldPos
	0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, //  = ( (matWorldVi
	0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x70, 0x6f, 0x73, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, // ew) * (pos) ).xy
	0x7a, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, // z;.gl_Position =
	0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, //  ( (matWorldView
	0x50, 0x72, 0x6f, 0x6a, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x70, 0x6f, 0x73, 0x29, 0x20, 0x29, 0x3b, // Proj) * (pos) );
	0x0a, 0x7d, 0x0a, 0x00,                                                                         // .}..
};
static const uint8_t vs_ball_dx11[1302] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x13, 0x17, 0xa9, 0x6c, 0x04, 0x00, 0x0b, 0x6f, // VSH........l...o
	0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, // rientation......
	0x00, 0x00, 0x00, 0x00, 0x0c, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, // .....matWorldVie
	0x77, 0x04, 0x00, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x6d, 0x61, 0x74, 0x57, // w..@........matW
	0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x04, // orldViewInverse.
	0x00, 0x80, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, // ..........matWor
	0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x04, 0x00, 0xc0, 0x00, 0x04, 0x00, // ldViewProj......
	0x00, 0x00, 0x00, 0x00, 0x94, 0x04, 0x00, 0x00, 0x44, 0x58, 0x42, 0x43, 0xd5, 0xec, 0x9f, 0x06, // ........DXBC....
	0xf4, 0x68, 0xbf, 0x83, 0x5f, 0x68, 0x2a, 0x68, 0x59, 0x64, 0x67, 0x2b, 0x01, 0x00, 0x00, 0x00, // .h.._h*hYdg+....
	0x94, 0x04, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, // ........,.......
	0x2c, 0x01, 0x00, 0x00, 0x49, 0x53, 0x47, 0x4e, 0x6c, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ,...ISGNl.......
	0x08, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....P...........
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, // ............W...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x07, 0x07, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....`...........
	0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x4e, 0x4f, 0x52, 0x4d, // ............NORM
	0x41, 0x4c, 0x00, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, 0x43, // AL.POSITION.TEXC
	0x4f, 0x4f, 0x52, 0x44, 0x00, 0xab, 0xab, 0xab, 0x4f, 0x53, 0x47, 0x4e, 0x84, 0x00, 0x00, 0x00, // OORD....OSGN....
	0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........h.......
	0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, // ................
	0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // t...............
	0x01, 0x00, 0x00, 0x00, 0x07, 0x08, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........{.......
	0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x0c, 0x00, 0x00, // ................
	0x7b, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // {...............
	0x03, 0x00, 0x00, 0x00, 0x07, 0x08, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, // ........SV_POSIT
	0x49, 0x4f, 0x4e, 0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, // ION.NORMAL.TEXCO
	0x4f, 0x52, 0x44, 0x00, 0x53, 0x48, 0x45, 0x58, 0x60, 0x03, 0x00, 0x00, 0x50, 0x00, 0x01, 0x00, // ORD.SHEX`...P...
	0xd8, 0x00, 0x00, 0x00, 0x6a, 0x08, 0x00, 0x01, 0x59, 0x00, 0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, // ....j...Y...F. .
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0x72, 0x10, 0x10, 0x00, // ........_...r...
	0x00, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0x72, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ...._...r.......
	0x5f, 0x00, 0x00, 0x03, 0x32, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x04, // _...2.......g...
	0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, // . ..........e...
	0x72, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0x32, 0x20, 0x10, 0x00, // r ......e...2 ..
	0x02, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0x72, 0x20, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....e...r ......
	0x68, 0x00, 0x00, 0x02, 0x03, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, // h.......8...r...
	0x00, 0x00, 0x00, 0x00, 0x56, 0x15, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // ....V.......F. .
	0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, // ........2...r...
	0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....F. .........
	0x06, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........F.......
	0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // 2...r.......F. .
	0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa6, 0x1a, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, // F...........r...
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // ....F.......F. .
	0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, // ........8.......
	0x01, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, // ....V.......F. .
	0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, // ........2.......
	0x01, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, // ....F. .........
	0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........F.......
	0x32, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, // 2...........F. .
	0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xf2, 0x20, 0x10, 0x00, // F............ ..
	0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, // ....F.......F. .
	0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, // ........8...r...
	0x01, 0x00, 0x00, 0x00, 0x56, 0x15, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // ....V.......F. .
	0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, // ........2...r...
	0x01, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....F. .........
	0x06, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........F.......
	0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // 2...r.......F. .
	0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa6, 0x1a, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x08, 0x12, 0x00, 0x10, 0x00, // F...............
	0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // ....F.......F. .
	0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x08, 0x22, 0x00, 0x10, 0x00, // ............"...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // ....F.......F. .
	0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x08, 0x42, 0x00, 0x10, 0x00, // ............B...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // ....F.......F. .
	0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x02, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....D...........
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x20, 0x10, 0x00, // :.......8...r ..
	0x01, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x02, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x32, 0x20, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....6...2 ......
	0x46, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, // F.......8...r...
	0x01, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // ....V.......F. .
	0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0xb2, 0x00, 0x10, 0x00, // ........2.......
	0x00, 0x00, 0x00, 0x00, 0x46, 0x88, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // ....F. .........
	0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x08, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........F.......
	0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // 2...r.......F. .
	0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x46, 0x03, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x20, 0x10, 0x00, // F...........r ..
	0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // ....F.......F. .
	0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x01, 0x00, 0x03, 0x02, 0x00, // ........>.......
	0x01, 0x00, 0x10, 0x00, 0x00, 0x01,                                                             // ......
};
static const uint8_t vs_ball_spv[2386] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x13, 0x17, 0xa9, 0x6c, 0x04, 0x00, 0x0b, 0x6f, // VSH........l...o
	0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x04, 0x01, 0x00, 0x00, 0x04, 0x00, // rientation......
	0x00, 0x00, 0x00, 0x00, 0x13, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, // .....matWorldVie
	0x77, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x04, 0x01, 0x80, 0x00, 0x04, 0x00, 0x00, 0x00, // wInverse........
	0x00, 0x00, 0x0c, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x04, // ...matWorldView.
	0x01, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, // .@........matWor
	0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x04, 0x01, 0xc0, 0x00, 0x04, 0x00, // ldViewProj......
	0x00, 0x00, 0x00, 0x00, 0xd0, 0x08, 0x00, 0x00, 0x03, 0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, // ..........#.....
	0x0b, 0x00, 0x08, 0x00, 0xf4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, // ............GLSL
	0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, // .std.450........
	0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00, // ....main....e...
	0x68, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, // h...l...w...{...
	0x7f, 0x00, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x05, 0x00, 0x00, 0x00, // ................
	0xf4, 0x01, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, // ............main
	0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x55, 0x6e, 0x69, 0x66, // ........*...Unif
	0x6f, 0x72, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, // ormBlock........
	0x2a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, // *.......orientat
	0x69, 0x6f, 0x6e, 0x00, 0x06, 0x00, 0x07, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ion.....*.......
	0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x00, 0x00, 0x00, 0x00, // matWorldView....
	0x06, 0x00, 0x08, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x57, // ....*.......matW
	0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x00, // orldViewInverse.
	0x06, 0x00, 0x08, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x57, // ....*.......matW
	0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x00, 0x00, 0x00, 0x00, // orldViewProj....
	0x05, 0x00, 0x03, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, // ....,...........
	0x65, 0x00, 0x00, 0x00, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x00, 0x00, 0x00, 0x00, // e...a_normal....
	0x05, 0x00, 0x05, 0x00, 0x68, 0x00, 0x00, 0x00, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, // ....h...a_positi
	0x6f, 0x6e, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x61, 0x5f, 0x74, 0x65, // on......l...a_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x05, 0x00, 0x0a, 0x00, 0x77, 0x00, 0x00, 0x00, // xcoord0.....w...
	0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, // @entryPointOutpu
	0x74, 0x2e, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x00, // t.gl_Position...
	0x05, 0x00, 0x09, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, // ....{...@entryPo
	0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // intOutput.v_norm
	0x61, 0x6c, 0x00, 0x00, 0x05, 0x00, 0x0a, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x40, 0x65, 0x6e, 0x74, // al..........@ent
	0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x76, 0x5f, // ryPointOutput.v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x00, 0x00, 0x05, 0x00, 0x0a, 0x00, // texcoord0.......
	0x82, 0x00, 0x00, 0x00, 0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, // ....@entryPointO
	0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, // utput.v_worldPos
	0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....H...*.......
	0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....H...*.......
	0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2a, 0x00, 0x00, 0x00, // #.......H...*...
	0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, // ............H...
	0x2a, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, // *...........H...
	0x2a, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // *.......#...@...
	0x48, 0x00, 0x05, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, // H...*...........
	0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ....H...*.......
	0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ....H...*.......
	0x23, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2a, 0x00, 0x00, 0x00, // #.......H...*...
	0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, // ............H...
	0x2a, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, // *...........H...
	0x2a, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, // *.......#.......
	0x48, 0x00, 0x05, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, // H...*...........
	0x10, 0x00, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ....G...*.......
	0x47, 0x00, 0x04, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // G...,...".......
	0x47, 0x00, 0x04, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // G...,...!.......
	0x47, 0x00, 0x04, 0x00, 0x65, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // G...e...........
	0x47, 0x00, 0x04, 0x00, 0x68, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // G...h...........
	0x47, 0x00, 0x04, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // G...l...........
	0x47, 0x00, 0x04, 0x00, 0x77, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // G...w...........
	0x47, 0x00, 0x04, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // G...{...........
	0x47, 0x00, 0x04, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // G...............
	0x47, 0x00, 0x04, 0x00, 0x82, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // G...............
	0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x21, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, // ........!.......
	0x02, 0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00, 0x06, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, // ............ ...
	0x17, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ................
	0x17, 0x00, 0x04, 0x00, 0x09, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x17, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // ................
	0x15, 0x00, 0x04, 0x00, 0x15, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ........ .......
	0x2b, 0x00, 0x04, 0x00, 0x15, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // +...............
	0x2b, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // +...............
	0x2b, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // +..............?
	0x2b, 0x00, 0x04, 0x00, 0x15, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // +...............
	0x2b, 0x00, 0x04, 0x00, 0x15, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // +...............
	0x18, 0x00, 0x04, 0x00, 0x29, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // ....)...........
	0x1e, 0x00, 0x06, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, // ....*...)...)...
	0x29, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x2b, 0x00, 0x00, 0x00, // )...)... ...+...
	0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x2b, 0x00, 0x00, 0x00, // ....*...;...+...
	0x2c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x15, 0x00, 0x00, 0x00, // ,.......+.......
	0x2d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x2e, 0x00, 0x00, 0x00, // -....... .......
	0x02, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x64, 0x00, 0x00, 0x00, // ....)... ...d...
	0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x64, 0x00, 0x00, 0x00, // ........;...d...
	0x65, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x64, 0x00, 0x00, 0x00, // e.......;...d...
	0x68, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x6b, 0x00, 0x00, 0x00, // h....... ...k...
	0x01, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x6b, 0x00, 0x00, 0x00, // ........;...k...
	0x6c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x76, 0x00, 0x00, 0x00, // l....... ...v...
	0x03, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x76, 0x00, 0x00, 0x00, // ........;...v...
	0x77, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x7a, 0x00, 0x00, 0x00, // w....... ...z...
	0x03, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x7a, 0x00, 0x00, 0x00, // ........;...z...
	0x7b, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x7e, 0x00, 0x00, 0x00, // {....... ...~...
	0x03, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x7e, 0x00, 0x00, 0x00, // ........;...~...
	0x7f, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x7a, 0x00, 0x00, 0x00, // ........;...z...
	0x82, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, // ........6.......
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, // ................
	0x05, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, // ....=.......f...
	0x65, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x69, 0x00, 0x00, 0x00, // e...=.......i...
	0x68, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x09, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00, // h...=.......m...
	0x6c, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x9f, 0x00, 0x00, 0x00, // l...Q...........
	0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, // i.......Q.......
	0xa0, 0x00, 0x00, 0x00, 0x69, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // ....i.......Q...
	0x06, 0x00, 0x00, 0x00, 0xa1, 0x00, 0x00, 0x00, 0x69, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ........i.......
	0x50, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xa2, 0x00, 0x00, 0x00, 0x9f, 0x00, 0x00, 0x00, // P...............
	0xa0, 0x00, 0x00, 0x00, 0xa1, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, // ............A...
	0x2e, 0x00, 0x00, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00, // ........,...-...
	0x3d, 0x00, 0x04, 0x00, 0x29, 0x00, 0x00, 0x00, 0xa5, 0x00, 0x00, 0x00, 0xa4, 0x00, 0x00, 0x00, // =...)...........
	0x90, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x00, 0x00, 0xa2, 0x00, 0x00, 0x00, // ................
	0xa5, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x00, 0x00, // ....Q...........
	0xa6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x00, 0x00, // ........R.......
	0xef, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x00, 0x00, 0xa2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xab, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x00, 0x00, // Q...............
	0x01, 0x00, 0x00, 0x00, 0x52, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xf1, 0x00, 0x00, 0x00, // ....R...........
	0xab, 0x00, 0x00, 0x00, 0xef, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // ............Q...
	0x06, 0x00, 0x00, 0x00, 0xad, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x52, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xf3, 0x00, 0x00, 0x00, 0xad, 0x00, 0x00, 0x00, // R...............
	0xf1, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, // ........Q.......
	0xaf, 0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // ....f.......Q...
	0x06, 0x00, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ........f.......
	0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, // Q...........f...
	0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, // ....P...........
	0xaf, 0x00, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, // ................
	0x41, 0x00, 0x05, 0x00, 0x2e, 0x00, 0x00, 0x00, 0xb3, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, // A...........,...
	0x2d, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x29, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, // -...=...).......
	0xb3, 0x00, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, // ................
	0xb2, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x2e, 0x00, 0x00, 0x00, // ........A.......
	0xb7, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, // ....,.......=...
	0x29, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0xb7, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // )...........Q...
	0x06, 0x00, 0x00, 0x00, 0xba, 0x00, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xbb, 0x00, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, // Q...............
	0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x00, 0x00, // ....Q...........
	0xb5, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, // ........P.......
	0xbd, 0x00, 0x00, 0x00, 0xba, 0x00, 0x00, 0x00, 0xbb, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x00, 0x00, // ................
	0x17, 0x00, 0x00, 0x00, 0x91, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xbe, 0x00, 0x00, 0x00, // ................
	0xb8, 0x00, 0x00, 0x00, 0xbd, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, // ........O.......
	0xbf, 0x00, 0x00, 0x00, 0xbe, 0x00, 0x00, 0x00, 0xbe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, // ................
	0xc0, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, 0x00, // ........E.......
	0x41, 0x00, 0x05, 0x00, 0x2e, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, // A...........,...
	0x16, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x29, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, // ....=...).......
	0xc5, 0x00, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, // ................
	0xf3, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, // ........O.......
	0xc8, 0x00, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x2e, 0x00, 0x00, 0x00, // ........A.......
	0xcb, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, // ....,.......=...
	0x29, 0x00, 0x00, 0x00, 0xcc, 0x00, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, // )...............
	0x0b, 0x00, 0x00, 0x00, 0xcd, 0x00, 0x00, 0x00, 0xf3, 0x00, 0x00, 0x00, 0xcc, 0x00, 0x00, 0x00, // ................
	0x3e, 0x00, 0x03, 0x00, 0x77, 0x00, 0x00, 0x00, 0xcd, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, // >...w.......>...
	0x7b, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x7f, 0x00, 0x00, 0x00, // {.......>.......
	0x6d, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x82, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, // m...>...........
	0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00, 0x00, 0x03, 0x02, 0x00, 0x01, 0x00, 0x10, 0x00, // ....8...........
	0x00, 0x01,                                                                                     // ..
};
static const bgfx::EmbeddedShader vs_ball = BGFX_EMBEDDED_SHADER(vs_ball);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of fragment shader from fs_ball_trail.sc to fs_ball_trail with options: NOSTEREO
static const uint8_t fs_ball_trail_mtl[1245] =
{
	0x46, 0x53, 0x48, 0x0b, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x15, 0x74, // FSH....l.......t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, // ex_ball_colorSam
	0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x74, // pler...........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x65, 0x78, // ex_ball_colorTex
	0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x77, // ture...........w
	0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, // _h_disableLighti
	0x6e, 0x67, 0x12, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x63, 0x42, 0x61, // ng...........cBa
	0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x01, 0x20, 0x00, 0x01, 0x00, 0x00, 0x00, // se_Alpha.. .....
	0x00, 0x00, 0x1a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, // ...fenvEmissionS
	0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x01, 0x10, // cale_TexWidth...
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // ........tex_ball
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // _color..........
	0x15, 0x04, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, // ....#include <me
	0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, // tal_stdlib>.#inc
	0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, // lude <simd/simd.
	0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, // h>..using namesp
	0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, // ace metal;..stru
	0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, // ct _Global.{.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, //  float4 w_h_disa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x3b, 0x0a, 0x20, 0x20, 0x20, // bleLighting;.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, //  float4 fenvEmis
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, // sionScale_TexWid
	0x74, 0x68, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x63, // th;.    float4 c
	0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, // Base_Alpha;.};..
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // struct xlatMtlMa
	0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // in_out.{.    flo
	0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, // at4 bgfx_FragDat
	0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, // a0 [[color(0)]];
	0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, // .};..struct xlat
	0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, // MtlMain_in.{.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, //  float3 v_normal
	0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, //  [[user(locn0)]]
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x5f, 0x74, // ;.    float2 v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, // excoord0 [[user(
	0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x5b, 0x5b, // locn1)]];.};..[[
	0x20, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, //  early_fragment_
	0x74, 0x65, 0x73, 0x74, 0x73, 0x20, 0x5d, 0x5d, 0x20, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, // tests ]] fragmen
	0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, // t xlatMtlMain_ou
	0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, // t xlatMtlMain(xl
	0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, // atMtlMain_in in 
	0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, // [[stage_in]], co
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, // nstant _Global& 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, // _mtl_u [[buffer(
	0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, // 0)]], texture2d<
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // float> tex_ball_
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, // color [[texture(
	0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, 0x65, // 0)]], sampler te
	0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, 0x70, // x_ball_colorSamp
	0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, // ler [[sampler(0)
	0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, // ]]).{.    xlatMt
	0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, // lMain_out out = 
	0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, // {};.    float4 _
	0x32, 0x31, 0x38, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, // 218 = tex_ball_c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, // olor.sample(tex_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ball_colorSample
	0x72, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, // r, in.v_texcoord
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, // 0);.    float4 _
	0x32, 0x32, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, // 226;.    if (_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // l_u.w_h_disableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x7a, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, // ighting.z != 0.0
	0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ).    {.        
	0x5f, 0x32, 0x32, 0x36, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x32, // _226 = float4(_2
	0x31, 0x38, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, // 18.xyz, in.v_nor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, // mal.x);.    }.  
	0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //   else.    {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x32, 0x36, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, //      _226 = floa
	0x74, 0x34, 0x28, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x42, 0x61, 0x73, // t4(((_mtl_u.cBas
	0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, // e_Alpha.xyz * 0.
	0x30, 0x31, 0x38, 0x37, 0x35, 0x30, 0x30, 0x30, 0x30, 0x37, 0x34, 0x35, 0x30, 0x35, 0x38, 0x30, // 0187500007450580
	0x35, 0x39, 0x36, 0x39, 0x32, 0x33, 0x38, 0x32, 0x38, 0x31, 0x32, 0x35, 0x29, 0x20, 0x2b, 0x20, // 596923828125) + 
	0x5f, 0x32, 0x31, 0x38, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // _218.xyz) * _mtl
	0x5f, 0x75, 0x2e, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, // _u.fenvEmissionS
	0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x2c, // cale_TexWidth.x,
	0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x3b, //  in.v_normal.x);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, // .    }.    out.b
	0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, // gfx_FragData0 = 
	0x5f, 0x32, 0x32, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // _226;.    return
	0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, 0x50, 0x00,                   //  out;.}....P.
};
static const uint8_t fs_ball_trail_essl[2202] =
{
	0x46, 0x53, 0x48, 0x0b, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87, 0x08, // FSH....l........
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // s.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, // arying in.precis
	0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3b, // ion highp float;
	0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // .precision highp
	0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, //  int;.#define sh
	0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adow2D(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //  _coord) texture
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // (_sampler, _coor
	0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, // d).#define shado
	0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // w2DProj(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // eProj(_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x6f, 0x75, 0x74, 0x20, 0x6d, 0x65, 0x64, 0x69, // _coord).out medi
	0x75, 0x6d, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, // ump vec4 bgfx_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // agColor;.varying
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, //  vec3 v_normal;.
	0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, // varying vec2 v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // excoord0;.varyin
	0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, // g vec3 v_worldPo
	0x73, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, // s;.vec3 instMul(
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, // vec3 _vec, mat3 
	0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, // _mtx) { return (
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, //  (_vec) * (_mtx)
	0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, //  ); }.vec3 instM
	0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, // ul(mat3 _mtx, ve
	0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // c3 _vec) { retur
	0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, // n ( (_mtx) * (_v
	0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, // ec) ); }.vec4 in
	0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, // stMul(vec4 _vec,
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, //  mat4 _mtx) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, // turn ( (_vec) * 
	0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // (_mtx) ); }.vec4
	0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, //  instMul(mat4 _m
	0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, // tx, vec4 _vec) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, //  return ( (_mtx)
	0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, //  * (_vec) ); }.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // loat rcp(float _
	0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, // a) { return 1.0/
	0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, // _a; }.vec2 rcp(v
	0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec2 _a) { return
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, //  vec2(1.0)/_a; }
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // .vec3 rcp(vec3 _
	0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, // a) { return vec3
	0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // (1.0)/_a; }.vec4
	0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, //  rcp(vec4 _a) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, // return vec4(1.0)
	0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, // /_a; }.vec2 vec2
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, // _splat(float _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, //  { return vec2(_
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // x, _x); }.vec3 v
	0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ec3_splat(float 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _x) { return vec
	0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // 3(_x, _x, _x); }
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // .vec4 vec4_splat
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // (float _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // urn vec4(_x, _x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, //  _x, _x); }.uvec
	0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, // 2 uvec2_splat(ui
	0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // nt _x) { return 
	0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // uvec2(_x, _x); }
	0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, // .uvec3 uvec3_spl
	0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // at(uint _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // turn uvec3(_x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, // x, _x); }.uvec4 
	0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec4_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, //  _x) { return uv
	0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, // ec4(_x, _x, _x, 
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, // _x); }.mat4 mtxF
	0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, // romRows(vec4 _0,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, //  vec4 _1, vec4 _
	0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 2, vec4 _3).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, // turn transpose(m
	0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, // at4(_0, _1, _2, 
	0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, // _3) );.}.mat4 mt
	0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // xFromCols(vec4 _
	0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // 0, vec4 _1, vec4
	0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, //  _2, vec4 _3).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, // return mat4(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, // _1, _2, _3);.}.m
	0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, // at3 mtxFromRows(
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, // vec3 _0, vec3 _1
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // , vec3 _2).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, // urn transpose(ma
	0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, // t3(_0, _1, _2) )
	0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, // ;.}.mat3 mtxFrom
	0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, // Cols(vec3 _0, ve
	0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, // c3 _1, vec3 _2).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, // {.return mat3(_0
	0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, // , _1, _2);.}.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, // form vec4 u_view
	0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // Rect;.uniform ve
	0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, // c4 u_viewTexel;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, // uniform mat4 u_v
	0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, // iew;.uniform mat
	0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // 4 u_invView;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, // form mat4 u_proj
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // _invProj;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, // m mat4 u_viewPro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, // u_invViewProj;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, // niform mat4 u_mo
	0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // del[32];.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, //  mat4 u_modelVie
	0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // w;.uniform mat4 
	0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, // u_modelViewProj;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, // .uniform vec4 u_
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // alphaRef4;.unifo
	0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, // rm sampler2D tex
	0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // _ball_color;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, // form vec4 w_h_di
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x3b, 0x0a, 0x75, // sableLighting;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x65, 0x6e, 0x76, // niform vec4 fenv
	0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, // EmissionScale_Te
	0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // xWidth;.uniform 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, // vec4 cBase_Alpha
	0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, // ;.void main().{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x49, // const vec3 ballI
	0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, // mageColor = text
	0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, // ure(tex_ball_col
	0x6f, 0x72, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, // or, v_texcoord0.
	0x78, 0x79, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x77, 0x5f, 0x68, // xy).rgb;.if (w_h
	0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, // _disableLighting
	0x2e, 0x7a, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, // .z != 0.).bgfx_F
	0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // ragColor = vec4(
	0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, // ballImageColor, 
	0x28, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x65, // (v_normal.x));.e
	0x6c, 0x73, 0x65, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, // lse.bgfx_FragCol
	0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, // or = vec4((cBase
	0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x2a, 0x28, 0x30, 0x2e, 0x30, 0x37, // _Alpha.rgb*(0.07
	0x35, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, // 5*0.25) + ballIm
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, // ageColor)*fenvEm
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, // issionScale_TexW
	0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // idth.x, (v_norma
	0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,                                     // l.x));.}..
};
static const uint8_t fs_ball_trail_glsl[2570] =
{
	0x46, 0x53, 0x48, 0x0b, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf7, 0x09, // FSH....l........
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x6f, // ..#version 440.o
	0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, // ut vec4 bgfx_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // gColor;.#define 
	0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x62, 0x67, 0x66, // gl_FragColor bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x0a, 0x23, 0x64, 0x65, 0x66, // x_FragColor.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x20, 0x20, // ine texture2D   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, //        texture.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // Lod       textur
	0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, // eLod.#define tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ture2DGrad      
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, // textureGrad.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, // ine texture2DPro
	0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, // jLod   texturePr
	0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // ojLod.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, // xture2DProjGrad 
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, //  textureProjGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // CubeLod     text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, // ureLod.#define t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, // extureCubeGrad  
	0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, //   textureGrad.#d
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, // efine texture3D 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //          texture
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, 0x65, 0x78, 0x74, // 2DLodOffset text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, // ureLodOffset.#de
	0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, // fine attribute i
	0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // n.#define varyin
	0x67, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, // g in.#define bgf
	0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // xShadow2D(_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, // er, _coord)     
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // vec4_splat(textu
	0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // re(_sampler, _co
	0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, // ord) ).#define b
	0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, // gfxShadow2DProj(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, // ) vec4_splat(tex
	0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // tureProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x76, 0x61, 0x72, // r, _coord) ).var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // ying vec3 v_norm
	0x61, 0x6c, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, // al;.varying vec2
	0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, //  v_texcoord0;.va
	0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, // rying vec3 v_wor
	0x6c, 0x64, 0x50, 0x6f, 0x73, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, // ldPos;.vec3 inst
	0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, // Mul(vec3 _vec, m
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // at3 _mtx) { retu
	0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, // rn ( (_vec) * (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, // mtx) ); }.vec3 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, // nstMul(mat3 _mtx
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, // , vec3 _vec) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, // eturn ( (_mtx) *
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, //  (_vec) ); }.vec
	0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // 4 instMul(vec4 _
	0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, // vec, mat4 _mtx) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, // { return ( (_vec
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // ) * (_mtx) ); }.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, // vec4 instMul(mat
	0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, // 4 _mtx, vec4 _ve
	0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, // c) { return ( (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, // mtx) * (_vec) );
	0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, //  }.float rcp(flo
	0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // at _a) { return 
	0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, // 1.0/_a; }.vec2 r
	0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // cp(vec2 _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, // turn vec2(1.0)/_
	0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, // a; }.vec3 rcp(ve
	0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c3 _a) { return 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, // vec3(1.0)/_a; }.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, // vec4 rcp(vec4 _a
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // ) { return vec4(
	0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // 1.0)/_a; }.vec2 
	0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // vec2_splat(float
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, //  _x) { return ve
	0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, // c2(_x, _x); }.ve
	0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, // c3 vec3_splat(fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // oat _x) { return
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, //  vec3(_x, _x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, // ); }.vec4 vec4_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // plat(float _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, //  return vec4(_x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, //  _x, _x, _x); }.
	0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, // uvec2 uvec2_spla
	0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // t(uint _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // urn uvec2(_x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, // ); }.uvec3 uvec3
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // _splat(uint _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, // { return uvec3(_
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, // x, _x, _x); }.uv
	0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // ec4 uvec4_splat(
	0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // uint _x) { retur
	0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, // n uvec4(_x, _x, 
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, // _x, _x); }.mat4 
	0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, // mtxFromRows(vec4
	0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, //  _0, vec4 _1, ve
	0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, // c4 _2, vec4 _3).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, // {.return transpo
	0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, // se(mat4(_0, _1, 
	0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, // _2, _3) );.}.mat
	0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, // 4 mtxFromCols(ve
	0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, // c4 _0, vec4 _1, 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, // vec4 _2, vec4 _3
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, // ).{.return mat4(
	0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, // _0, _1, _2, _3);
	0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, // .}.mat3 mtxFromR
	0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, // ows(vec3 _0, vec
	0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, // 3 _1, vec3 _2).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, // .return transpos
	0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, // e(mat3(_0, _1, _
	0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, // 2) );.}.mat3 mtx
	0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, // FromCols(vec3 _0
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // , vec3 _1, vec3 
	0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, // _2).{.return mat
	0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, // 3(_0, _1, _2);.}
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, // .uniform vec4 u_
	0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // viewRect;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, // m vec4 u_viewTex
	0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // el;.uniform mat4
	0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, //  u_view;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, //  mat4 u_invView;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // proj;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, // t4 u_invProj;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // iform mat4 u_vie
	0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // wProj;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, // at4 u_invViewPro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // u_model[32];.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, // form mat4 u_mode
	0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // lView;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, // at4 u_modelViewP
	0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, // roj;.uniform vec
	0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x75, // 4 u_alphaRef4;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // niform sampler2D
	0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, //  tex_ball_color;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x77, 0x5f, // .uniform vec4 w_
	0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, // h_disableLightin
	0x67, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // g;.uniform vec4 
	0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, // fenvEmissionScal
	0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // e_TexWidth;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, // orm vec4 cBase_A
	0x6c, 0x70, 0x68, 0x61, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, // lpha;.void main(
	0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, // ).{.const vec3 b
	0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, // allImageColor = 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // texture(tex_ball
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, // _color, v_texcoo
	0x72, 0x64, 0x30, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x69, 0x66, 0x20, // rd0.xy).rgb;.if 
	0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, // (w_h_disableLigh
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x7a, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x0a, 0x67, 0x6c, // ting.z != 0.).gl
	0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, // _FragColor = vec
	0x34, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // 4(ballImageColor
	0x2c, 0x20, 0x28, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, // , (v_normal.x));
	0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, // .else.gl_FragCol
	0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, // or = vec4((cBase
	0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x2a, 0x28, 0x30, 0x2e, 0x30, 0x37, // _Alpha.rgb*(0.07
	0x35, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, // 5*0.25) + ballIm
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, // ageColor)*fenvEm
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, // issionScale_TexW
	0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // idth.x, (v_norma
	0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,                                     // l.x));.}..
};
static const uint8_t fs_ball_trail_dx11[725] =
{
	0x46, 0x53, 0x48, 0x0b, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x13, 0x77, // FSH....l.......w
	0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, // _h_disableLighti
	0x6e, 0x67, 0x12, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x65, 0x6e, // ng...........fen
	0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, // vEmissionScale_T
	0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // exWidth.........
	0x00, 0x0b, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x00, 0x20, // ..cBase_Alpha.. 
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // ........tex_ball
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // _color0.........
	0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, // .tex_ball_color0
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x02, 0x00, 0x00, 0x44, 0x58, 0x42, // .........4...DXB
	0x43, 0x11, 0xa5, 0x13, 0x32, 0x84, 0x44, 0xb6, 0x23, 0xe9, 0xfa, 0x76, 0x4d, 0xc7, 0xae, 0x64, // C...2.D.#..vM..d
	0x88, 0x01, 0x00, 0x00, 0x00, 0x34, 0x02, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, // .....4.......,..
	0x00, 0xb8, 0x00, 0x00, 0x00, 0xec, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x4e, 0x84, 0x00, 0x00, // .........ISGN...
	0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........h......
	0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, // ................
	0x00, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // .t..............
	0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x01, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........{......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, // ................
	0x00, 0x7b, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // .{..............
	0x00, 0x03, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, // .........SV_POSI
	0x54, 0x49, 0x4f, 0x4e, 0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x54, 0x45, 0x58, 0x43, // TION.NORMAL.TEXC
	0x4f, 0x4f, 0x52, 0x44, 0x00, 0x4f, 0x53, 0x47, 0x4e, 0x2c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // OORD.OSGN,......
	0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ..... ..........
	0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, // .............SV_
	0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x00, 0xab, 0xab, 0x53, 0x48, 0x45, 0x58, 0x40, 0x01, 0x00, // TARGET...SHEX@..
	0x00, 0x50, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x6a, 0x28, 0x00, 0x01, 0x59, 0x00, 0x00, // .P...P...j(..Y..
	0x04, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, // .F. .........Z..
	0x03, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, // ..`......X....p.
	0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x12, 0x10, 0x10, // .....UU..b......
	0x00, 0x01, 0x00, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x32, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, // .....b...2......
	0x00, 0x65, 0x00, 0x00, 0x03, 0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, // .e.... ......h..
	0x02, 0x02, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x08, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, // .....9..........
	0x00, 0x2a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, // .*. ..........@.
	0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, // .....E.......CU.
	0x00, 0xe2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, // .........F......
	0x00, 0x36, 0x79, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, // .6y.......`.....
	0x00, 0x32, 0x00, 0x00, 0x0d, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, // .2...r.......F. 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x9a, 0x99, 0x99, // ..........@.....
	0x3c, 0x9a, 0x99, 0x99, 0x3c, 0x9a, 0x99, 0x99, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, // <...<...<.......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, // .....8...r......
	0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, // .F......... ....
	0x00, 0x01, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, // .....7...r .....
	0x00, 0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x20, 0x10, // .F.......6.... .
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, // .............>..
	0x01, 0x00, 0x00, 0x30, 0x00,                                                                   // ...0.
};
static const uint8_t fs_ball_trail_spv[2016] =
{
	0x46, 0x53, 0x48, 0x0b, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x13, 0x77, // FSH....l.......w
	0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, // _h_disableLighti
	0x6e, 0x67, 0x12, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x63, 0x42, 0x61, // ng...........cBa
	0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x01, 0x20, 0x00, 0x01, 0x00, 0x00, 0x00, // se_Alpha.. .....
	0x00, 0x00, 0x1a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, // ...fenvEmissionS
	0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x01, 0x10, // cale_TexWidth...
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // ........tex_ball
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, // _color0.......".
	0x58, 0x07, 0x00, 0x00, 0x03, 0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x0b, 0x00, 0x08, 0x00, // X.....#.........
	0xe3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x0b, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, // ........GLSL.std
	0x2e, 0x34, 0x35, 0x30, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, // .450............
	0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x08, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // ................
	0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x7a, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, // main....z...~...
	0x90, 0x00, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, // ................
	0x10, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, // ................
	0x05, 0x00, 0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, // ................
	0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x26, 0x00, 0x00, 0x00, // main........&...
	0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, // tex_ball_colorSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x29, 0x00, 0x00, 0x00, // mpler.......)...
	0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x65, // tex_ball_colorTe
	0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x4d, 0x00, 0x00, 0x00, // xture.......M...
	0x55, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00, 0x00, // UniformBlock....
	0x06, 0x00, 0x08, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0x5f, 0x68, 0x5f, // ....M.......w_h_
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x00, // disableLighting.
	0x06, 0x00, 0x0a, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x66, 0x65, 0x6e, 0x76, // ....M.......fenv
	0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, // EmissionScale_Te
	0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x4d, 0x00, 0x00, 0x00, // xWidth......M...
	0x02, 0x00, 0x00, 0x00, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x00, // ....cBase_Alpha.
	0x05, 0x00, 0x03, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, // ....O...........
	0x7a, 0x00, 0x00, 0x00, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x00, 0x00, 0x00, 0x00, // z...v_normal....
	0x05, 0x00, 0x05, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, // ....~...v_texcoo
	0x72, 0x64, 0x30, 0x00, 0x05, 0x00, 0x06, 0x00, 0x90, 0x00, 0x00, 0x00, 0x62, 0x67, 0x66, 0x78, // rd0.........bgfx
	0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // _FragData0..G...
	0x26, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // &...".......G...
	0x26, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // &...!.......G...
	0x29, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // )...".......G...
	0x29, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, // )...!.......H...
	0x4d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // M.......#.......
	0x48, 0x00, 0x05, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, // H...M.......#...
	0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ....H...M.......
	0x23, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00, 0x4d, 0x00, 0x00, 0x00, // #... ...G...M...
	0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, // ....G...O..."...
	0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, // ....G...O...!...
	0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x7a, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, // ....G...z.......
	0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, // ....G...~.......
	0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x90, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, // ....G...........
	0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x21, 0x00, 0x03, 0x00, // ............!...
	0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00, // ................
	0x16, 0x00, 0x03, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x19, 0x00, 0x09, 0x00, // ........ .......
	0x08, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x17, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x17, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // ................
	0x17, 0x00, 0x04, 0x00, 0x19, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ................
	0x20, 0x00, 0x04, 0x00, 0x25, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, //  ...%...........
	0x3b, 0x00, 0x04, 0x00, 0x25, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ;...%...&.......
	0x20, 0x00, 0x04, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, //  ...(...........
	0x3b, 0x00, 0x04, 0x00, 0x28, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ;...(...).......
	0x15, 0x00, 0x04, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ....,... .......
	0x2b, 0x00, 0x04, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // +...,...-.......
	0x2b, 0x00, 0x04, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // +...,...1.......
	0x1b, 0x00, 0x03, 0x00, 0x35, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, // ....5.......+...
	0x07, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x05, 0x00, // ....C...........
	0x4d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, // M...............
	0x20, 0x00, 0x04, 0x00, 0x4e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00, //  ...N.......M...
	0x3b, 0x00, 0x04, 0x00, 0x4e, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ;...N...O.......
	0x15, 0x00, 0x04, 0x00, 0x50, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....P... .......
	0x2b, 0x00, 0x04, 0x00, 0x50, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // +...P...Q.......
	0x20, 0x00, 0x04, 0x00, 0x52, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, //  ...R...........
	0x14, 0x00, 0x02, 0x00, 0x55, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x50, 0x00, 0x00, 0x00, // ....U...+...P...
	0x5a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x2c, 0x00, 0x00, 0x00, // Z.......+...,...
	0x62, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x63, 0x00, 0x00, 0x00, // b....... ...c...
	0x02, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, // ........+.......
	0x67, 0x00, 0x00, 0x00, 0x9a, 0x99, 0x99, 0x3c, 0x20, 0x00, 0x04, 0x00, 0x79, 0x00, 0x00, 0x00, // g......< ...y...
	0x01, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x79, 0x00, 0x00, 0x00, // ........;...y...
	0x7a, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x7d, 0x00, 0x00, 0x00, // z....... ...}...
	0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x7d, 0x00, 0x00, 0x00, // ........;...}...
	0x7e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x8f, 0x00, 0x00, 0x00, // ~....... .......
	0x03, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x8f, 0x00, 0x00, 0x00, // ........;.......
	0x90, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, // ........6.......
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, // ................
	0x05, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, // ....=.......'...
	0x26, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, // &...=.......*...
	0x29, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x19, 0x00, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, // )...=.......{...
	0x7a, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, // z...=...........
	0x7e, 0x00, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x35, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, // ~...V...5.......
	0x2a, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, // *...'...W.......
	0xda, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, // ............O...
	0x19, 0x00, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0xda, 0x00, 0x00, 0x00, 0xda, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, // ............A...
	0x52, 0x00, 0x00, 0x00, 0xaf, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, // R.......O...1...
	0x51, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, // Q...=...........
	0xaf, 0x00, 0x00, 0x00, 0xb7, 0x00, 0x05, 0x00, 0x55, 0x00, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, // ........U.......
	0xb0, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xca, 0x00, 0x00, 0x00, // ....C...........
	0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xb1, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, // ................
	0xba, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // ............Q...
	0x07, 0x00, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........{.......
	0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb6, 0x00, 0x00, 0x00, 0xda, 0x00, 0x00, 0x00, // Q...............
	0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb7, 0x00, 0x00, 0x00, // ....Q...........
	0xda, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, // ........Q.......
	0xb8, 0x00, 0x00, 0x00, 0xda, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, // ............P...
	0x0d, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xb6, 0x00, 0x00, 0x00, 0xb7, 0x00, 0x00, 0x00, // ................
	0xb8, 0x00, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xca, 0x00, 0x00, 0x00, // ................
	0xf8, 0x00, 0x02, 0x00, 0xba, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x63, 0x00, 0x00, 0x00, // ........A...c...
	0xbb, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, // ....O...b...=...
	0x0d, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x00, 0x00, 0xbb, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, // ............O...
	0x19, 0x00, 0x00, 0x00, 0xbd, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, // ................
	0x19, 0x00, 0x00, 0x00, 0xbe, 0x00, 0x00, 0x00, 0xbd, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x00, // ............g...
	0x81, 0x00, 0x05, 0x00, 0x19, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xbe, 0x00, 0x00, 0x00, // ................
	0xae, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x52, 0x00, 0x00, 0x00, 0xc1, 0x00, 0x00, 0x00, // ....A...R.......
	0x4f, 0x00, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, // O...-...Z...=...
	0x07, 0x00, 0x00, 0x00, 0xc2, 0x00, 0x00, 0x00, 0xc1, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, // ................
	0x19, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xc2, 0x00, 0x00, 0x00, // ................
	0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, // Q...........{...
	0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, // ....Q...........
	0xc3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, // ........Q.......
	0xc7, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // ............Q...
	0x07, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xc9, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, // P...............
	0xc7, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, // ................
	0xca, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xca, 0x00, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, // ................
	0x0d, 0x00, 0x00, 0x00, 0xe2, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, // ................
	0xc9, 0x00, 0x00, 0x00, 0xba, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x90, 0x00, 0x00, 0x00, // ........>.......
	0xe2, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00, 0x00, 0x00, 0x30, 0x00, // ........8.....0.
};
static const bgfx::EmbeddedShader fs_ball_trail = BGFX_EMBEDDED_SHADER(fs_ball_trail);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of fragment shader from fs_ball_debug.sc to fs_ball_debug with options: NOSTEREO
static const uint8_t fs_ball_debug_mtl[318] =
{
	0x46, 0x53, 0x48, 0x0b, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x01, // FSH....l......(.
	0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, // ..#include <meta
	0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, // l_stdlib>.#inclu
	0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, // de <simd/simd.h>
	0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, // ..using namespac
	0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, // e metal;..struct
	0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, //  xlatMtlMain_out
	0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, // .{.    float4 bg
	0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, // fx_FragData0 [[c
	0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x5b, // olor(0)]];.};..[
	0x5b, 0x20, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, // [ early_fragment
	0x5f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x20, 0x5d, 0x5d, 0x20, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, // _tests ]] fragme
	0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, // nt xlatMtlMain_o
	0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x29, // ut xlatMtlMain()
	0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // .{.    xlatMtlMa
	0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, // in_out out = {};
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, // .    out.bgfx_Fr
	0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // agData0 = float4
	0x28, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // (1.0);.    retur
	0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, 0x00, 0x00,             // n out;.}......
};
static const uint8_t fs_ball_debug_essl[1822] =
{
	0x46, 0x53, 0x48, 0x0b, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x07, // FSH....l........
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // s.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, // arying in.precis
	0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3b, // ion highp float;
	0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // .precision highp
	0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, //  int;.#define sh
	0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adow2D(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //  _coord) texture
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // (_sampler, _coor
	0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, // d).#define shado
	0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // w2DProj(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // eProj(_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x6f, 0x75, 0x74, 0x20, 0x6d, 0x65, 0x64, 0x69, // _coord).out medi
	0x75, 0x6d, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, // ump vec4 bgfx_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // agColor;.varying
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, //  vec3 v_normal;.
	0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, // varying vec2 v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // excoord0;.varyin
	0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, // g vec3 v_worldPo
	0x73, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, // s;.vec3 instMul(
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, // vec3 _vec, mat3 
	0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, // _mtx) { return (
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, //  (_vec) * (_mtx)
	0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, //  ); }.vec3 instM
	0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, // ul(mat3 _mtx, ve
	0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // c3 _vec) { retur
	0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, // n ( (_mtx) * (_v
	0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, // ec) ); }.vec4 in
	0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, // stMul(vec4 _vec,
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, //  mat4 _mtx) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, // turn ( (_vec) * 
	0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // (_mtx) ); }.vec4
	0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, //  instMul(mat4 _m
	0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, // tx, vec4 _vec) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, //  return ( (_mtx)
	0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, //  * (_vec) ); }.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // loat rcp(float _
	0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, // a) { return 1.0/
	0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, // _a; }.vec2 rcp(v
	0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec2 _a) { return
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, //  vec2(1.0)/_a; }
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // .vec3 rcp(vec3 _
	0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, // a) { return vec3
	0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // (1.0)/_a; }.vec4
	0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, //  rcp(vec4 _a) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, // return vec4(1.0)
	0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, // /_a; }.vec2 vec2
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, // _splat(float _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, //  { return vec2(_
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // x, _x); }.vec3 v
	0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ec3_splat(float 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _x) { return vec
	0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // 3(_x, _x, _x); }
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // .vec4 vec4_splat
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // (float _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // urn vec4(_x, _x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, //  _x, _x); }.uvec
	0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, // 2 uvec2_splat(ui
	0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // nt _x) { return 
	0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // uvec2(_x, _x); }
	0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, // .uvec3 uvec3_spl
	0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // at(uint _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // turn uvec3(_x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, // x, _x); }.uvec4 
	0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec4_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, //  _x) { return uv
	0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, // ec4(_x, _x, _x, 
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, // _x); }.mat4 mtxF
	0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, // romRows(vec4 _0,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, //  vec4 _1, vec4 _
	0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 2, vec4 _3).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, // turn transpose(m
	0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, // at4(_0, _1, _2, 
	0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, // _3) );.}.mat4 mt
	0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // xFromCols(vec4 _
	0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // 0, vec4 _1, vec4
	0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, //  _2, vec4 _3).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, // return mat4(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, // _1, _2, _3);.}.m
	0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, // at3 mtxFromRows(
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, // vec3 _0, vec3 _1
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // , vec3 _2).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, // urn transpose(ma
	0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, // t3(_0, _1, _2) )
	0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, // ;.}.mat3 mtxFrom
	0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, // Cols(vec3 _0, ve
	0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, // c3 _1, vec3 _2).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, // {.return mat3(_0
	0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, // , _1, _2);.}.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, // form vec4 u_view
	0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // Rect;.uniform ve
	0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, // c4 u_viewTexel;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, // uniform mat4 u_v
	0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, // iew;.uniform mat
	0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // 4 u_invView;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, // form mat4 u_proj
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // _invProj;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, // m mat4 u_viewPro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, // u_invViewProj;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, // niform mat4 u_mo
	0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // del[32];.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, //  mat4 u_modelVie
	0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // w;.uniform mat4 
	0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, // u_modelViewProj;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, // .uniform vec4 u_
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, // alphaRef4;.void 
	0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, // main().{.bgfx_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, // agColor = vec4_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,             // plat(1.0);.}..
};
static const uint8_t fs_ball_debug_glsl[2192] =
{
	0x46, 0x53, 0x48, 0x0b, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7d, 0x08, // FSH....l......}.
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x6f, // ..#version 440.o
	0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, // ut vec4 bgfx_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // gColor;.#define 
	0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x62, 0x67, 0x66, // gl_FragColor bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x0a, 0x23, 0x64, 0x65, 0x66, // x_FragColor.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x20, 0x20, // ine texture2D   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, //        texture.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // Lod       textur
	0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, // eLod.#define tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ture2DGrad      
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, // textureGrad.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, // ine texture2DPro
	0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, // jLod   texturePr
	0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // ojLod.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, // xture2DProjGrad 
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, //  textureProjGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // CubeLod     text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, // ureLod.#define t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, // extureCubeGrad  
	0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, //   textureGrad.#d
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, // efine texture3D 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //          texture
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, 0x65, 0x78, 0x74, // 2DLodOffset text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, // ureLodOffset.#de
	0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, // fine attribute i
	0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // n.#define varyin
	0x67, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, // g in.#define bgf
	0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // xShadow2D(_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, // er, _coord)     
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // vec4_splat(textu
	0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // re(_sampler, _co
	0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, // ord) ).#define b
	0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, // gfxShadow2DProj(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, // ) vec4_splat(tex
	0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // tureProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x76, 0x61, 0x72, // r, _coord) ).var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // ying vec3 v_norm
	0x61, 0x6c, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, // al;.varying vec2
	0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, //  v_texcoord0;.va
	0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, // rying vec3 v_wor
	0x6c, 0x64, 0x50, 0x6f, 0x73, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, // ldPos;.vec3 inst
	0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, // Mul(vec3 _vec, m
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // at3 _mtx) { retu
	0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, // rn ( (_vec) * (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, // mtx) ); }.vec3 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, // nstMul(mat3 _mtx
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, // , vec3 _vec) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, // eturn ( (_mtx) *
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, //  (_vec) ); }.vec
	0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // 4 instMul(vec4 _
	0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, // vec, mat4 _mtx) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, // { return ( (_vec
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // ) * (_mtx) ); }.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, // vec4 instMul(mat
	0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, // 4 _mtx, vec4 _ve
	0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, // c) { return ( (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, // mtx) * (_vec) );
	0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, //  }.float rcp(flo
	0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // at _a) { return 
	0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, // 1.0/_a; }.vec2 r
	0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // cp(vec2 _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, // turn vec2(1.0)/_
	0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, // a; }.vec3 rcp(ve
	0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c3 _a) { return 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, // vec3(1.0)/_a; }.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, // vec4 rcp(vec4 _a
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // ) { return vec4(
	0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // 1.0)/_a; }.vec2 
	0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // vec2_splat(float
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, //  _x) { return ve
	0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, // c2(_x, _x); }.ve
	0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, // c3 vec3_splat(fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // oat _x) { return
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, //  vec3(_x, _x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, // ); }.vec4 vec4_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // plat(float _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, //  return vec4(_x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, //  _x, _x, _x); }.
	0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, // uvec2 uvec2_spla
	0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // t(uint _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // urn uvec2(_x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, // ); }.uvec3 uvec3
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // _splat(uint _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, // { return uvec3(_
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, // x, _x, _x); }.uv
	0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // ec4 uvec4_splat(
	0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // uint _x) { retur
	0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, // n uvec4(_x, _x, 
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, // _x, _x); }.mat4 
	0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, // mtxFromRows(vec4
	0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, //  _0, vec4 _1, ve
	0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, // c4 _2, vec4 _3).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, // {.return transpo
	0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, // se(mat4(_0, _1, 
	0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, // _2, _3) );.}.mat
	0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, // 4 mtxFromCols(ve
	0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, // c4 _0, vec4 _1, 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, // vec4 _2, vec4 _3
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, // ).{.return mat4(
	0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, // _0, _1, _2, _3);
	0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, // .}.mat3 mtxFromR
	0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, // ows(vec3 _0, vec
	0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, // 3 _1, vec3 _2).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, // .return transpos
	0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, // e(mat3(_0, _1, _
	0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, // 2) );.}.mat3 mtx
	0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, // FromCols(vec3 _0
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // , vec3 _1, vec3 
	0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, // _2).{.return mat
	0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, // 3(_0, _1, _2);.}
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, // .uniform vec4 u_
	0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // viewRect;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, // m vec4 u_viewTex
	0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // el;.uniform mat4
	0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, //  u_view;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, //  mat4 u_invView;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // proj;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, // t4 u_invProj;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // iform mat4 u_vie
	0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // wProj;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, // at4 u_invViewPro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // u_model[32];.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, // form mat4 u_mode
	0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // lView;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, // at4 u_modelViewP
	0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, // roj;.uniform vec
	0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x76, // 4 u_alphaRef4;.v
	0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x67, 0x6c, 0x5f, // oid main().{.gl_
	0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, // FragColor = vec4
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00, // _splat(1.0);.}..
};
static const uint8_t fs_ball_debug_dx11[326] =
{
	0x46, 0x53, 0x48, 0x0b, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x01, // FSH....l......0.
	0x00, 0x00, 0x44, 0x58, 0x42, 0x43, 0xd9, 0x38, 0x14, 0x7f, 0xb5, 0x0a, 0xa5, 0x25, 0x5b, 0x27, // ..DXBC.8.....%['
	0x48, 0xd0, 0xb6, 0x76, 0x85, 0xff, 0x01, 0x00, 0x00, 0x00, 0x30, 0x01, 0x00, 0x00, 0x03, 0x00, // H..v......0.....
	0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0xec, 0x00, 0x00, 0x00, 0x49, 0x53, // ..,...........IS
	0x47, 0x4e, 0x84, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x68, 0x00, // GN............h.
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ......t.........
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7b, 0x00, // ..............{.
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, // ................
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, // ......{.........
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x53, 0x56, // ..............SV
	0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, // _POSITION.NORMAL
	0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x4f, 0x53, 0x47, 0x4e, 0x2c, 0x00, // .TEXCOORD.OSGN,.
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // .......... .....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, // ................
	0x00, 0x00, 0x53, 0x56, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x00, 0xab, 0xab, 0x53, 0x48, // ..SV_TARGET...SH
	0x45, 0x58, 0x3c, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x6a, 0x28, // EX<...P.......j(
	0x00, 0x01, 0x65, 0x00, 0x00, 0x03, 0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, // ..e.... ......6.
	0x00, 0x08, 0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, // ... .......@....
	0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x3e, 0x00, // .?...?...?...?>.
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00,                                                             // ......
};
static const uint8_t fs_ball_debug_spv[374] =
{
	0x46, 0x53, 0x48, 0x0b, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x01, // FSH....l......`.
	0x00, 0x00, 0x03, 0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x0b, 0x00, 0x08, 0x00, 0x72, 0x00, // ....#.........r.
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, // ................
	0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, // ......GLSL.std.4
	0x35, 0x30, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, // 50..............
	0x00, 0x00, 0x0f, 0x00, 0x06, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, // ..............ma
	0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00, // in....D.........
	0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x09, 0x00, // ................
	0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, 0x05, 0x00, // ................
	0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, // ......main......
	0x06, 0x00, 0x44, 0x00, 0x00, 0x00, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, // ..D...bgfx_FragD
	0x61, 0x74, 0x61, 0x30, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x44, 0x00, 0x00, 0x00, 0x1e, 0x00, // ata0..G...D.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x21, 0x00, // ..............!.
	0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00, 0x06, 0x00, // ................
	0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x06, 0x00, // .. .............
	0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x25, 0x00, // ......+.......%.
	0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x20, 0x00, 0x04, 0x00, 0x43, 0x00, 0x00, 0x00, 0x03, 0x00, // .....? ...C.....
	0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x43, 0x00, 0x00, 0x00, 0x44, 0x00, // ......;...C...D.
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x07, 0x00, 0x08, 0x00, 0x00, 0x00, 0x71, 0x00, // ......,.......q.
	0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x25, 0x00, // ..%...%...%...%.
	0x00, 0x00, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, // ..6.............
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00, 0x3e, 0x00, // ..............>.
	0x03, 0x00, 0x44, 0x00, 0x00, 0x00, 0x71, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, // ..D...q.......8.
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00,                                                             // ......
};
static const bgfx::EmbeddedShader fs_ball_debug = BGFX_EMBEDDED_SHADER(fs_ball_debug);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of fragment shader from fs_ball.sc to fs_ball_equirectangular_decal with options: NOSTEREO EQUIRECTANGULAR DECAL
static const uint8_t fs_ball_equirectangular_decal_mtl[11309] =
{
	0x46, 0x53, 0x48, 0x0b, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x15, 0x74, // FSH....l.......t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, // ex_ball_colorSam
	0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x74, // pler...........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x65, 0x78, // ex_ball_colorTex
	0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, // ture...........t
	0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, // ex_envSampler...
	0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x54, // ........tex_envT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // exture..........
	0x16, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, // .tex_diffuse_env
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Sampler.........
	0x00, 0x16, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, // ..tex_diffuse_en
	0x76, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // vTexture........
	0x00, 0x00, 0x15, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, // ...tex_ball_deca
	0x6c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // lSampler........
	0x00, 0x00, 0x15, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, // ...tex_ball_deca
	0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // lTexture........
	0x00, 0x00, 0x19, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, // ...tex_ball_play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, // fieldSampler....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // .......tex_ball_
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // playfieldTexture
	0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x62, 0x61, 0x6c, 0x6c, 0x4c, // ...........ballL
	0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x0a, 0xc0, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, // ightPos.........
	0x00, 0x07, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x14, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, // ..matView.......
	0x00, 0x00, 0x00, 0x1e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, // ....Roughness_Wr
	0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, // apL_Edge_Thickne
	0x73, 0x73, 0x12, 0x01, 0x40, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x63, 0x41, 0x6d, // ss..@........cAm
	0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, // bient_LightRange
	0x12, 0x01, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x62, 0x61, 0x6c, 0x6c, 0x4c, // ...........ballL
	0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0a, 0x60, 0x01, // ightEmission..`.
	0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // .......fDisableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, // ighting_top_belo
	0x77, 0x12, 0x01, 0x20, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x65, 0x6e, 0x76, // w.. ........fenv
	0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, // EmissionScale_Te
	0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x01, 0x10, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // xWidth..........
	0x13, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, // .w_h_disableLigh
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x01, 0x60, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x63, // ting..`........c
	0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x01, 0x30, 0x02, 0x01, 0x00, // Base_Alpha..0...
	0x00, 0x00, 0x00, 0x00, 0x0c, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, // .....matWorldVie
	0x77, 0x14, 0x01, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x6d, 0x61, 0x74, 0x50, // w..@........matP
	0x72, 0x6f, 0x6a, 0x14, 0x01, 0x80, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x69, 0x6e, // roj...........in
	0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, // vTableRes_reflec
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x01, 0x50, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, // tion..P........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x10, 0x00, 0x00, // ex_ball_color...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, // ........tex_diff
	0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // use_env.........
	0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, // ..tex_ball_decal
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x74, 0x65, 0x78, 0x5f, 0x62, // ...........tex_b
	0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x10, 0x00, 0x00, // all_playfield...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x29, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, // ........)..#incl
	0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, // ude <metal_stdli
	0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, // b>.#include <sim
	0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, // d/simd.h>..using
	0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, //  namespace metal
	0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, // ;..struct _Globa
	0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, // l.{.    float4x4
	0x20, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //  matView;.    fl
	0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, // oat4x4 matWorldV
	0x69, 0x65, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, // iew;.    float4x
	0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // 4 matProj;.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, // loat4 ballLightP
	0x6f, 0x73, 0x5b, 0x31, 0x30, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // os[10];.    floa
	0x74, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, // t4 ballLightEmis
	0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x31, 0x30, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // sion[10];.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, // oat4 cAmbient_Li
	0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // ghtRange;.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, // oat4 fenvEmissio
	0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x3b, // nScale_TexWidth;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x66, 0x44, 0x69, 0x73, // .    float4 fDis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, // ableLighting_top
	0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // _below;.    floa
	0x74, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x0a, // t4 cBase_Alpha;.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, //     float4 Rough
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, // ness_WrapL_Edge_
	0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // Thickness;.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, // loat4 invTableRe
	0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x20, 0x20, // s_reflection;.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, //   float4 w_h_dis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x3b, 0x0a, 0x7d, 0x3b, // ableLighting;.};
	0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, // ..struct xlatMtl
	0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // Main_out.{.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, // loat4 bgfx_FragD
	0x61, 0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, // ata0 [[color(0)]
	0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, // ];.};..struct xl
	0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, // atMtlMain_in.{. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, //    float3 v_norm
	0x61, 0x6c, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, // al [[user(locn0)
	0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, // ]];.    float2 v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, // _texcoord0 [[use
	0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // r(locn1)]];.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, // float3 v_worldPo
	0x73, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x32, 0x29, 0x5d, // s [[user(locn2)]
	0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x5b, 0x5b, 0x20, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x5f, // ];.};..[[ early_
	0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x20, 0x5d, // fragment_tests ]
	0x5d, 0x20, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // ] fragment xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // tlMain_out xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // tlMain(xlatMtlMa
	0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, // in_in in [[stage
	0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, // _in]], constant 
	0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, // _Global& _mtl_u 
	0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, // [[buffer(0)]], t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, // exture2d<float> 
	0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x5b, // tex_ball_color [
	0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, // [texture(0)]], t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, // exture2d<float> 
	0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x20, // tex_diffuse_env 
	0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, // [[texture(2)]], 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, // texture2d<float>
	0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x20, //  tex_ball_decal 
	0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x33, 0x29, 0x5d, 0x5d, 0x2c, 0x20, // [[texture(3)]], 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, // texture2d<float>
	0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, //  tex_ball_playfi
	0x65, 0x6c, 0x64, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x34, 0x29, // eld [[texture(4)
	0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, 0x65, 0x78, 0x5f, // ]], sampler tex_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ball_colorSample
	0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, // r [[sampler(0)]]
	0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, // , sampler tex_di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ffuse_envSampler
	0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, //  [[sampler(2)]],
	0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, //  sampler tex_bal
	0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, // l_decalSampler [
	0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x33, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, // [sampler(3)]], s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // ampler tex_ball_
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // playfieldSampler
	0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x34, 0x29, 0x5d, 0x5d, 0x29, //  [[sampler(4)]])
	0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // .{.    xlatMtlMa
	0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, // in_out out = {};
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x37, 0x35, // .    float4 _175
	0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, // 7;.    do.    {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x39, 0x34, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, // 940 = fast::norm
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x2d, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // alize(-in.v_worl
	0x64, 0x50, 0x6f, 0x73, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // dPos);.        f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x39, 0x34, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, // loat3 _942 = fas
	0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x69, 0x6e, 0x2e, // t::normalize(in.
	0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // v_normal);.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x39, 0x34, 0x35, 0x20, 0x3d, //    float3 _945 =
	0x20, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x5f, 0x39, 0x34, 0x30, 0x2c, 0x20, 0x5f, //  reflect(_940, _
	0x39, 0x34, 0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // 942);.        fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x39, 0x34, 0x38, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, // oat _948 = dot(_
	0x39, 0x34, 0x30, 0x2c, 0x20, 0x5f, 0x39, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 940, _945);.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x39, 0x36, 0x33, 0x20, //     float4 _963 
	0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x2d, 0x5f, 0x39, 0x34, 0x35, 0x2c, 0x20, // = float4(-_945, 
	0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, // 0.0) * _mtl_u.ma
	0x74, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // tView;.        f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x31, 0x34, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x39, 0x36, // loat _1146 = _96
	0x33, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // 3.y;.        flo
	0x61, 0x74, 0x20, 0x5f, 0x31, 0x31, 0x34, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x39, 0x36, 0x33, 0x2e, // at _1147 = _963.
	0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // x;.        float
	0x20, 0x5f, 0x31, 0x37, 0x32, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1728;.        
	0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, // do.        {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, //          float _
	0x31, 0x31, 0x36, 0x32, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x31, 0x31, 0x34, 0x36, // 1162 = abs(_1146
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // );.            f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x31, 0x36, 0x33, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, // loat _1163 = abs
	0x28, 0x5f, 0x31, 0x31, 0x34, 0x37, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // (_1147);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x31, 0x36, 0x33, 0x20, //      if ((_1163 
	0x3c, 0x3d, 0x20, 0x36, 0x2e, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x65, 0x2d, // <= 6.103515625e-
	0x30, 0x35, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x36, 0x32, 0x20, 0x3c, 0x3d, // 05) && (_1162 <=
	0x20, 0x36, 0x2e, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x65, 0x2d, 0x30, 0x35, //  6.103515625e-05
	0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, // )).            {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x5f, 0x31, 0x37, 0x32, 0x38, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, //  _1728 = 0.0;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, //               br
	0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // eak;.           
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //  }.            f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x31, 0x37, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, // loat _1177 = (_1
	0x31, 0x36, 0x33, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x31, 0x36, 0x32, 0x29, 0x20, 0x2f, 0x20, 0x28, // 163 - _1162) / (
	0x5f, 0x31, 0x31, 0x36, 0x33, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x31, 0x36, 0x32, 0x29, 0x3b, 0x0a, // _1163 + _1162);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //             floa
	0x74, 0x20, 0x5f, 0x31, 0x31, 0x39, 0x31, 0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x66, 0x6d, // t _1191 = fma(fm
	0x61, 0x28, 0x30, 0x2e, 0x30, 0x33, 0x33, 0x37, 0x31, 0x39, 0x38, 0x33, 0x37, 0x36, 0x36, 0x35, // a(0.033719837665
	0x35, 0x35, 0x37, 0x38, 0x36, 0x31, 0x33, 0x32, 0x38, 0x31, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x5f, // 557861328125 * _
	0x31, 0x31, 0x37, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x31, 0x37, 0x37, 0x2c, 0x20, 0x2d, 0x30, 0x2e, // 1177, _1177, -0.
	0x31, 0x35, 0x37, 0x31, 0x33, 0x34, 0x34, 0x37, 0x33, 0x33, 0x32, 0x33, 0x38, 0x32, 0x32, 0x30, // 1571344733238220
	0x32, 0x31, 0x34, 0x38, 0x34, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x34, // 21484375), (_114
	0x37, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x2d, 0x5f, 0x31, 0x31, // 7 < 0.0) ? (-_11
	0x37, 0x37, 0x29, 0x20, 0x3a, 0x20, 0x5f, 0x31, 0x31, 0x37, 0x37, 0x2c, 0x20, 0x28, 0x5f, 0x31, // 77) : _1177, (_1
	0x31, 0x34, 0x37, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x33, // 147 < 0.0) ? 0.3
	0x37, 0x35, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x31, 0x32, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 75 : 0.125);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x32, 0x38, 0x20, 0x3d, //          _1728 =
	0x20, 0x28, 0x5f, 0x31, 0x31, 0x34, 0x36, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, //  (_1146 < 0.0) ?
	0x20, 0x28, 0x2d, 0x5f, 0x31, 0x31, 0x39, 0x31, 0x29, 0x20, 0x3a, 0x20, 0x5f, 0x31, 0x31, 0x39, //  (-_1191) : _119
	0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, // 1;.            b
	0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, // reak;.        } 
	0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, // while(false);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x31, 0x35, //       float _115
	0x30, 0x20, 0x3d, 0x20, 0x5f, 0x39, 0x36, 0x33, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 0 = _963.z;.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x37, 0x32, 0x39, 0x3b, //     float _1729;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, // .        do.    
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x30, 0x36, 0x20, 0x3d, 0x20, //   float _1206 = 
	0x61, 0x62, 0x73, 0x28, 0x5f, 0x31, 0x31, 0x35, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // abs(_1150);.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x31, 0x2e, 0x30, //         if ((1.0
	0x20, 0x2d, 0x20, 0x5f, 0x31, 0x32, 0x30, 0x36, 0x29, 0x20, 0x3c, 0x3d, 0x20, 0x36, 0x2e, 0x31, //  - _1206) <= 6.1
	0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x0a, 0x20, 0x20, // 03515625e-05).  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //           {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x32, //             _172
	0x39, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x35, 0x30, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, // 9 = (_1150 >= 0.
	0x30, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x30, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, // 0) ? 0.0 : 1.0;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // break;.         
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    }.           
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x31, 0x36, 0x20, 0x3d, 0x20, 0x66, //  float _1216 = f
	0x6d, 0x61, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x34, 0x39, 0x36, 0x34, 0x37, 0x34, 0x32, 0x38, 0x30, // ma(-0.0496474280
	0x39, 0x35, 0x33, 0x34, 0x30, 0x37, 0x32, 0x38, 0x37, 0x35, 0x39, 0x37, 0x36, 0x35, 0x36, 0x32, // 9534072875976562
	0x35, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x30, 0x36, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x39, 0x38, 0x30, // 5, _1206, 0.4980
	0x34, 0x39, 0x39, 0x31, 0x34, 0x38, 0x33, 0x36, 0x38, 0x38, 0x33, 0x35, 0x34, 0x34, 0x39, 0x32, // 4991483688354492
	0x31, 0x38, 0x37, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1875);.         
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x31, 0x39, 0x20, 0x3d, //    float _1219 =
	0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x32, 0x30, //  sqrt(1.0 - _120
	0x36, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 6);.            
	0x5f, 0x31, 0x37, 0x32, 0x39, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x35, 0x30, 0x20, 0x3e, // _1729 = (_1150 >
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x5f, 0x31, 0x32, 0x31, 0x36, 0x20, // = 0.0) ? (_1216 
	0x2a, 0x20, 0x5f, 0x31, 0x32, 0x31, 0x39, 0x29, 0x20, 0x3a, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x2d, // * _1219) : fma(-
	0x5f, 0x31, 0x32, 0x31, 0x36, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x31, 0x39, 0x2c, 0x20, 0x31, 0x2e, // _1216, _1219, 1.
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0);.            
	0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, // break;.        }
	0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, //  while(false);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, //        float4 _1
	0x32, 0x34, 0x36, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, // 246 = tex_ball_d
	0x65, 0x63, 0x61, 0x6c, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, // ecal.sample(tex_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ball_decalSample
	0x72, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, // r, in.v_texcoord
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 0);.        floa
	0x74, 0x33, 0x20, 0x5f, 0x31, 0x32, 0x35, 0x36, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, // t3 _1256 = fast:
	0x3a, 0x6d, 0x61, 0x78, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, // :max(fma(tex_bal
	0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, // l_color.sample(t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, // ex_ball_colorSam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, // pler, float2(0.5
	0x20, 0x2b, 0x20, 0x5f, 0x31, 0x37, 0x32, 0x38, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x32, 0x39, 0x29, //  + _1728, _1729)
	0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x28, 0x5f, 0x39, 0x34, 0x38, 0x20, 0x3e, 0x20, // , level((_948 > 
	0x30, 0x2e, 0x36, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, 0x31, 0x38, 0x35, // 0.60000002384185
	0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x20, 0x3f, 0x20, 0x66, 0x6d, 0x61, // 791015625) ? fma
	0x28, 0x5f, 0x39, 0x34, 0x38, 0x2c, 0x20, 0x31, 0x35, 0x2e, 0x30, 0x2c, 0x20, 0x2d, 0x39, 0x2e, // (_948, 15.0, -9.
	0x30, 0x29, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, // 0) : 0.0)).xyz -
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x66, 0x6c, //  float3(1.0), fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x32, 0x34, // oat3(1.0) - _124
	0x36, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, // 6.xyz, float3(1.
	0x30, 0x29, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, // 0)), float3(0.0)
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, // );.        if (_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, // mtl_u.w_h_disabl
	0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x7a, 0x20, 0x21, 0x3d, 0x20, 0x30, // eLighting.z != 0
	0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, // .0).        {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x35, 0x37, 0x20, //           _1757 
	0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x32, 0x35, 0x36, 0x2c, 0x20, // = float4(_1256, 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, // _mtl_u.cBase_Alp
	0x68, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ha.w);.         
	0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    break;.      
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //   }.        floa
	0x74, 0x33, 0x20, 0x5f, 0x39, 0x39, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x35, 0x36, 0x20, // t3 _996 = _1256 
	0x2a, 0x20, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // * (0.5 * _mtl_u.
	0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, // fenvEmissionScal
	0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, // e_TexWidth.x);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, //        float3 _1
	0x30, 0x30, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, // 000 = (_mtl_u.ma
	0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, // tWorldView * flo
	0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, // at4(0.0, 0.0, 1.
	0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, // 0, 0.0)).xyz;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x30, 0x30, //       float _100
	0x33, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x30, 0x30, 0x30, 0x2c, 0x20, 0x5f, // 3 = dot(_1000, _
	0x39, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // 945);.        fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x30, 0x31, 0x34, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, // oat _1014 = dot(
	0x5f, 0x31, 0x30, 0x30, 0x30, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // _1000, in.v_worl
	0x64, 0x50, 0x6f, 0x73, 0x20, 0x2d, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, // dPos - (_mtl_u.m
	0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, // atWorldView * fl
	0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, // oat4(0.0, 0.0, 0
	0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2f, // .0, 1.0)).xyz) /
	0x20, 0x5f, 0x31, 0x30, 0x30, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1003;.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x30, 0x32, 0x37, 0x20, 0x3d, 0x20, 0x5f, // float4 _1027 = _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x20, 0x2a, 0x20, // mtl_u.matProj * 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // float4(in.v_worl
	0x64, 0x50, 0x6f, 0x73, 0x20, 0x2d, 0x20, 0x28, 0x5f, 0x39, 0x34, 0x35, 0x20, 0x2a, 0x20, 0x5f, // dPos - (_945 * _
	0x31, 0x30, 0x31, 0x34, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 1014), 1.0);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x31, 0x30, 0x33, //      float2 _103
	0x38, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, // 8 = float2(0.5) 
	0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x31, 0x30, 0x32, 0x37, 0x2e, // + (float2(_1027.
	0x78, 0x2c, 0x20, 0x2d, 0x5f, 0x31, 0x30, 0x32, 0x37, 0x2e, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x28, // x, -_1027.y) * (
	0x30, 0x2e, 0x35, 0x20, 0x2f, 0x20, 0x5f, 0x31, 0x30, 0x32, 0x37, 0x2e, 0x77, 0x29, 0x29, 0x3b, // 0.5 / _1027.w));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // .        float4 
	0x5f, 0x31, 0x32, 0x36, 0x35, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // _1265 = tex_ball
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // _playfield.sampl
	0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, // e(tex_ball_playf
	0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, // ieldSampler, (_1
	0x30, 0x33, 0x38, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, // 038 + float2(_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // l_u.w_h_disableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // ighting.x, 0.0))
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // );.        float
	0x34, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x34, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, // 4 _1274 = tex_ba
	0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x73, 0x61, 0x6d, // ll_playfield.sam
	0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, // ple(tex_ball_pla
	0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, // yfieldSampler, (
	0x5f, 0x31, 0x30, 0x33, 0x38, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, // _1038 - float2(_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, // mtl_u.w_h_disabl
	0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x30, // eLighting.x, 0.0
	0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // )));.        flo
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x32, 0x38, 0x33, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, // at4 _1283 = tex_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x73, // ball_playfield.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, // ample(tex_ball_p
	0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // layfieldSampler,
	0x20, 0x28, 0x5f, 0x31, 0x30, 0x33, 0x38, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, //  (_1038 + float2
	0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, // (0.0, _mtl_u.w_h
	0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, // _disableLighting
	0x2e, 0x79, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // .y)));.        f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x32, 0x39, 0x32, 0x20, 0x3d, 0x20, 0x74, 0x65, // loat4 _1292 = te
	0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, // x_ball_playfield
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // .sample(tex_ball
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // _playfieldSample
	0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x33, 0x38, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, // r, (_1038 - floa
	0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, // t2(0.0, _mtl_u.w
	0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, // _h_disableLighti
	0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ng.y)));.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x30, 0x3b, 0x0a, 0x20, //  float3 _1730;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x21, 0x28, 0x28, 0x28, //        if ((!(((
	0x28, 0x5f, 0x31, 0x30, 0x33, 0x38, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, // (_1038.x < 0.0) 
	0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x33, 0x38, 0x2e, 0x78, 0x20, 0x3e, 0x20, 0x31, 0x2e, // || (_1038.x > 1.
	0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x33, 0x38, 0x2e, 0x79, 0x20, // 0)) || (_1038.y 
	0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x33, // < 0.0)) || (_103
	0x38, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x26, 0x26, 0x20, // 8.y > 1.0))) && 
	0x28, 0x21, 0x28, 0x5f, 0x31, 0x30, 0x31, 0x34, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, // (!(_1014 <= 0.0)
	0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, // )).        {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x30, 0x20, 0x3d, //          _1730 =
	0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x39, 0x39, 0x36, 0x2c, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x31, //  mix(_996, (((_1
	0x32, 0x36, 0x35, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x34, 0x2e, // 265.xyz + _1274.
	0x78, 0x79, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x32, 0x38, 0x33, 0x2e, 0x78, 0x79, 0x7a, // xyz) + _1283.xyz
	0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x32, 0x39, 0x32, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, // ) + _1292.xyz) *
	0x20, 0x30, 0x2e, 0x32, 0x35, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x73, 0x6d, //  0.25, float3(sm
	0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, // oothstep(0.0, 0.
	0x31, 0x35, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x35, 0x39, 0x36, 0x30, 0x34, 0x36, 0x34, 0x34, // 1500000059604644
	0x37, 0x37, 0x35, 0x33, 0x39, 0x30, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x30, 0x33, // 775390625, _1003
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x69, 0x6e, 0x76, 0x54, 0x61, // ) * _mtl_u.invTa
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, // bleRes_reflectio
	0x6e, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, // n.z));.        }
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, // .        else.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x39, 0x39, 0x36, //     _1730 = _996
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, // ;.        }.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x31, 0x30, 0x37, //     float3 _1107
	0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x37, //  = fast::min(_17
	0x33, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x35, 0x2e, 0x30, 0x29, // 30, float3(15.0)
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // );.        float
	0x33, 0x20, 0x5f, 0x31, 0x31, 0x31, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 3 _1111 = _mtl_u
	0x2e, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, // .cBase_Alpha.xyz
	0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x37, 0x35, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x39, 0x38, //  * 0.07500000298
	0x30, 0x32, 0x33, 0x32, 0x32, 0x33, 0x38, 0x37, 0x36, 0x39, 0x35, 0x33, 0x31, 0x32, 0x35, 0x3b, // 023223876953125;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // .        float3 
	0x5f, 0x31, 0x31, 0x31, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, // _1114 = fast::ma
	0x78, 0x28, 0x5f, 0x31, 0x31, 0x31, 0x31, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x66, // x(_1111 * 2.0, f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, // loat3(0.10000000
	0x31, 0x34, 0x39, 0x30, 0x31, 0x31, 0x36, 0x31, 0x31, 0x39, 0x33, 0x38, 0x34, 0x37, 0x36, 0x35, // 1490116119384765
	0x36, 0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // 625));.        f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x31, 0x31, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x31, // loat3 _1119 = _1
	0x31, 0x30, 0x37, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x42, 0x61, // 107 * _mtl_u.cBa
	0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, // se_Alpha.xyz;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x30, //       float _130
	0x39, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, // 9 = fast::max(_1
	0x31, 0x31, 0x31, 0x2e, 0x78, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, // 111.x, fast::max
	0x28, 0x5f, 0x31, 0x31, 0x31, 0x31, 0x2e, 0x79, 0x2c, 0x20, 0x5f, 0x31, 0x31, 0x31, 0x31, 0x2e, // (_1111.y, _1111.
	0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // z));.        flo
	0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x31, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, // at _1317 = fast:
	0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x31, 0x31, 0x34, 0x2e, 0x78, 0x2c, 0x20, 0x66, 0x61, // :max(_1114.x, fa
	0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x31, 0x31, 0x34, 0x2e, 0x79, 0x2c, // st::max(_1114.y,
	0x20, 0x5f, 0x31, 0x31, 0x31, 0x34, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  _1114.z));.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x32, 0x35, 0x20, //     float _1325 
	0x3d, 0x20, 0x5f, 0x31, 0x33, 0x30, 0x39, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x33, 0x31, 0x37, 0x3b, // = _1309 + _1317;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // .        float3 
	0x5f, 0x31, 0x37, 0x33, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // _1733;.        f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, // loat3 _1744;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x31, 0x33, 0x32, 0x35, 0x20, 0x3e, //      if (_1325 >
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, //  1.0).        {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //             floa
	0x74, 0x20, 0x5f, 0x31, 0x33, 0x33, 0x30, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, // t _1330 = 1.0 / 
	0x5f, 0x31, 0x33, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _1325;.         
	0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x31, 0x31, 0x34, //    _1744 = _1114
	0x20, 0x2a, 0x20, 0x5f, 0x31, 0x33, 0x33, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  * _1330;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x31, //       _1733 = _1
	0x31, 0x31, 0x31, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x33, 0x33, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 111 * _1330;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, //      }.        e
	0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, // lse.        {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x34, 0x20, //           _1744 
	0x3d, 0x20, 0x5f, 0x31, 0x31, 0x31, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // = _1114;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x31, //      _1733 = _11
	0x31, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, // 11;.        }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, //       float3 _17
	0x33, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, // 39;.        if (
	0x28, 0x74, 0x72, 0x75, 0x65, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x33, 0x30, 0x39, 0x20, // (true && (_1309 
	0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x33, 0x31, // > 0.0)) || (_131
	0x37, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 7 > 0.0)).      
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   {.            
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x30, 0x3b, 0x0a, 0x20, 0x20, // float3 _1740;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x30, 0x20, //           _1740 
	0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, // = float3(0.0);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x33, 0x20, 0x5f, 0x31, 0x33, 0x36, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 3 _1360;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x31, //      for (int _1
	0x37, 0x33, 0x31, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x31, 0x20, 0x3c, // 731 = 0; _1731 <
	0x20, 0x31, 0x30, 0x3b, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x33, //  10; _1740 = _13
	0x36, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x31, 0x2b, 0x2b, 0x29, 0x0a, 0x20, 0x20, 0x20, // 60, _1731++).   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x33, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 3 _1748;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, //          do.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, //             {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x34, 0x32, 0x34, 0x20, 0x3d, //   float3 _1424 =
	0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, //  (_mtl_u.matView
	0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, //  * float4(_mtl_u
	0x2e, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x5f, 0x31, // .ballLightPos[_1
	0x37, 0x33, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2e, // 731].xyz, 1.0)).
	0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, // xyz - in.v_world
	0x50, 0x6f, 0x73, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // Pos;.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, //          float3 
	0x5f, 0x31, 0x34, 0x32, 0x36, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, // _1426 = fast::no
	0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x31, 0x34, 0x32, 0x34, 0x29, 0x3b, 0x0a, // rmalize(_1424);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, 0x32, 0x38, 0x20, //     float _1428 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x39, 0x34, 0x32, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x32, // = dot(_942, _142
	0x36, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 6);.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x31, 0x37, 0x34, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1745;.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x74, 0x72, //           if (tr
	0x75, 0x65, 0x20, 0x26, 0x26, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x34, 0x32, 0x38, 0x20, 0x2b, 0x20, // ue && ((_1428 + 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, // _mtl_u.Roughness
	0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, // _WrapL_Edge_Thic
	0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // kness.y) > 0.0))
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, 0x34, 0x33, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, // loat _1443 = 1.0
	0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, //  + _mtl_u.Roughn
	0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, // ess_WrapL_Edge_T
	0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // hickness.y;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, 0x33, //     _1745 = _173
	0x33, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x34, 0x32, 0x38, 0x20, 0x2b, 0x20, 0x5f, 0x6d, // 3 * ((_1428 + _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, // tl_u.Roughness_W
	0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, // rapL_Edge_Thickn
	0x65, 0x73, 0x73, 0x2e, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x31, 0x34, 0x34, 0x33, 0x20, // ess.y) / (_1443 
	0x2a, 0x20, 0x5f, 0x31, 0x34, 0x34, 0x33, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // * _1443));.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, //                }
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      else.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, //               {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x35, 0x20, 0x3d, 0x20, //         _1745 = 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // float3(0.0);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  }.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, //        float3 _1
	0x37, 0x34, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 746;.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x31, 0x34, //          if (_14
	0x32, 0x38, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 28 > 0.0).      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, //               {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x31, 0x34, 0x35, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, // 1453 = fast::nor
	0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x31, 0x34, 0x32, 0x36, 0x20, 0x2b, 0x20, 0x5f, // malize(_1426 + _
	0x39, 0x34, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 940);.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x35, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, // oat _1455 = dot(
	0x5f, 0x39, 0x34, 0x32, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x33, 0x29, 0x3b, 0x0a, 0x20, 0x20, // _942, _1453);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, 0x35, //       float _145
	0x38, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x34, 0x32, 0x36, 0x2c, 0x20, 0x5f, // 8 = dot(_1426, _
	0x31, 0x34, 0x35, 0x33, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1453);.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, 0x36, 0x30, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // loat _1460 = dot
	0x28, 0x5f, 0x39, 0x34, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x33, 0x29, 0x3b, 0x0a, 0x20, // (_940, _1453);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, //        float3 _1
	0x37, 0x34, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 747;.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, //              if 
	0x28, 0x28, 0x28, 0x5f, 0x31, 0x34, 0x35, 0x35, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, // (((_1455 > 0.0) 
	0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x34, 0x35, 0x38, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, // && (_1458 > 0.0)
	0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x34, 0x36, 0x30, 0x20, 0x3e, 0x20, 0x30, 0x2e, // ) && (_1460 > 0.
	0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0)).            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, //             {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x37, 0x20, //           _1747 
	0x3d, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x35, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x37, 0x34, // = _1745 + ((_174
	0x34, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, // 4 + ((float3(1.0
	0x29, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x34, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, // ) - _1744) * pow
	0x72, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x38, 0x2c, 0x20, 0x35, // r(1.0 - _1458, 5
	0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // .0))) * (((_mtl_
	0x75, 0x2e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, // u.Roughness_Wrap
	0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, // L_Edge_Thickness
	0x2e, 0x78, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x38, 0x2e, 0x30, // .x + 1.0) / (8.0
	0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x36, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, //  * _1460)) * pow
	0x72, 0x28, 0x5f, 0x31, 0x34, 0x35, 0x35, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // r(_1455, _mtl_u.
	0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, // Roughness_WrapL_
	0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, // Edge_Thickness.x
	0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // )));.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, //              }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, //        else.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x35, 0x3b, //   _1747 = _1745;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          }.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x37, //    _1746 = _1747
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, //             else
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //                _
	0x31, 0x37, 0x34, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x35, 0x3b, 0x0a, 0x20, 0x20, // 1746 = _1745;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   }.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, //         float _1
	0x34, 0x38, 0x36, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x34, 0x32, 0x34, 0x2c, // 486 = dot(_1424,
	0x20, 0x5f, 0x31, 0x34, 0x32, 0x34, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1424);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, //              flo
	0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x30, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, // at _1503 = fast:
	0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x28, 0x5f, // :clamp(1.0 - ((_
	0x31, 0x34, 0x38, 0x36, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x38, 0x36, 0x29, 0x20, 0x2f, 0x20, // 1486 * _1486) / 
	0x28, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, // (((_mtl_u.cAmbie
	0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x20, // nt_LightRange.w 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, // * _mtl_u.cAmbien
	0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x29, 0x20, // t_LightRange.w) 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, // * _mtl_u.cAmbien
	0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x29, 0x20, // t_LightRange.w) 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, // * _mtl_u.cAmbien
	0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x29, 0x29, // t_LightRange.w))
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // , 0.0, 1.0);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x35, 0x32, 0x37, 0x20, 0x3d, 0x20, //  float3 _1527 = 
	0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x37, 0x34, 0x34, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x37, 0x33, // fma(_1744 + _173
	0x33, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, // 3, _mtl_u.cAmbie
	0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x78, 0x79, // nt_LightRange.xy
	0x7a, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x37, 0x34, 0x36, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // z, (_1746 * _mtl
	0x5f, 0x75, 0x2e, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, // _u.ballLightEmis
	0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x5f, 0x31, 0x37, 0x33, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, // sion[_1731].xyz)
	0x20, 0x2a, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x35, 0x30, 0x33, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x35, //  * ((_1503 * _15
	0x30, 0x33, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x31, 0x34, 0x38, 0x36, 0x20, 0x2b, 0x20, 0x31, // 03) / (_1486 + 1
	0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .0)));.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, //            if (_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, // mtl_u.fDisableLi
	0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, // ghting_top_below
	0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .x != 0.0).     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, //                {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x38, 0x20, 0x3d, //          _1748 =
	0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x31, 0x35, 0x32, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x33, //  mix(_1527, _173
	0x33, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 3, float3(_mtl_u
	0x2e, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, // .fDisableLightin
	0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x29, 0x29, 0x3b, // g_top_below.x));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, //          break;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     }.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, //           else. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, //              _17
	0x34, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x32, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 48 = _1527;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //     break;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, //                }
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, //      break; // u
	0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, // nreachable worka
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // round.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, //       } while(fa
	0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // lse);.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x33, 0x36, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, //       _1360 = _1
	0x37, 0x34, 0x30, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 740 + _1748;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          }.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x39, 0x20, 0x3d, 0x20, 0x5f, //        _1739 = _
	0x31, 0x37, 0x34, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, // 1740;.        }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, //         else.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x39, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //    _1739 = float
	0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 3(0.0);.        
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // }.        float3
	0x20, 0x5f, 0x31, 0x37, 0x34, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1741;.        
	0x69, 0x66, 0x20, 0x28, 0x74, 0x72, 0x75, 0x65, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x33, // if (true && (_13
	0x30, 0x39, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 09 > 0.0)).     
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x33, 0x38, 0x30, 0x20, 0x3d, 0x20, //  float3 _1380 = 
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // fast::normalize(
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x20, // (_mtl_u.matView 
	0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x39, 0x34, 0x32, 0x2c, 0x20, 0x30, // * float4(_942, 0
	0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .0)).xyz);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, //        float _15
	0x37, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x33, 0x38, 0x30, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, // 76 = _1380.y;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //           float 
	0x5f, 0x31, 0x35, 0x37, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x33, 0x38, 0x30, 0x2e, 0x78, 0x3b, // _1577 = _1380.x;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // .            flo
	0x61, 0x74, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // at _1735;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       do.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, //        float _15
	0x39, 0x32, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x31, 0x35, 0x37, 0x36, 0x29, 0x3b, // 92 = abs(_1576);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x39, 0x33, 0x20, 0x3d, 0x20, 0x61, //  float _1593 = a
	0x62, 0x73, 0x28, 0x5f, 0x31, 0x35, 0x37, 0x37, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // bs(_1577);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, //            if ((
	0x5f, 0x31, 0x35, 0x39, 0x33, 0x20, 0x3c, 0x3d, 0x20, 0x36, 0x2e, 0x31, 0x30, 0x33, 0x35, 0x31, // _1593 <= 6.10351
	0x35, 0x36, 0x32, 0x35, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, // 5625e-05) && (_1
	0x35, 0x39, 0x32, 0x20, 0x3c, 0x3d, 0x20, 0x36, 0x2e, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, // 592 <= 6.1035156
	0x32, 0x35, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 25e-05)).       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //                _
	0x31, 0x37, 0x33, 0x35, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 1735 = 0.0;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // break;.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        }.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, //          float _
	0x31, 0x36, 0x30, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x39, 0x33, 0x20, 0x2d, 0x20, // 1607 = (_1593 - 
	0x5f, 0x31, 0x35, 0x39, 0x32, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x39, 0x33, 0x20, // _1592) / (_1593 
	0x2b, 0x20, 0x5f, 0x31, 0x35, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // + _1592);.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //           float 
	0x5f, 0x31, 0x36, 0x32, 0x31, 0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x66, 0x6d, 0x61, 0x28, // _1621 = fma(fma(
	0x30, 0x2e, 0x30, 0x33, 0x33, 0x37, 0x31, 0x39, 0x38, 0x33, 0x37, 0x36, 0x36, 0x35, 0x35, 0x35, // 0.03371983766555
	0x37, 0x38, 0x36, 0x31, 0x33, 0x32, 0x38, 0x31, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x36, // 7861328125 * _16
	0x30, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x30, 0x37, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x31, 0x35, // 07, _1607, -0.15
	0x37, 0x31, 0x33, 0x34, 0x34, 0x37, 0x33, 0x33, 0x32, 0x33, 0x38, 0x32, 0x32, 0x30, 0x32, 0x31, // 7134473323822021
	0x34, 0x38, 0x34, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x37, 0x37, 0x20, // 484375), (_1577 
	0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x2d, 0x5f, 0x31, 0x36, 0x30, 0x37, // < 0.0) ? (-_1607
	0x29, 0x20, 0x3a, 0x20, 0x5f, 0x31, 0x36, 0x30, 0x37, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x37, // ) : _1607, (_157
	0x37, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x33, 0x37, 0x35, // 7 < 0.0) ? 0.375
	0x20, 0x3a, 0x20, 0x30, 0x2e, 0x31, 0x32, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //  : 0.125);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x35, //            _1735
	0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x37, 0x36, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, //  = (_1576 < 0.0)
	0x20, 0x3f, 0x20, 0x28, 0x2d, 0x5f, 0x31, 0x36, 0x32, 0x31, 0x29, 0x20, 0x3a, 0x20, 0x5f, 0x31, //  ? (-_1621) : _1
	0x36, 0x32, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 621;.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //      break;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, //         } while(
	0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // false);.        
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x30, 0x20, //     float _1580 
	0x3d, 0x20, 0x5f, 0x31, 0x33, 0x38, 0x30, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // = _1380.z;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x37, //        float _17
	0x33, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 36;.            
	0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, // do.            {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x33, 0x36, 0x20, 0x3d, 0x20, 0x61, //  float _1636 = a
	0x62, 0x73, 0x28, 0x5f, 0x31, 0x35, 0x38, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // bs(_1580);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, //            if ((
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x36, 0x33, 0x36, 0x29, 0x20, 0x3c, 0x3d, 0x20, // 1.0 - _1636) <= 
	0x36, 0x2e, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x65, 0x2d, 0x30, 0x35, 0x29, // 6.103515625e-05)
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  {.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x36, 0x20, 0x3d, 0x20, 0x28, //        _1736 = (
	0x5f, 0x31, 0x35, 0x38, 0x30, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, // _1580 >= 0.0) ? 
	0x30, 0x2e, 0x30, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 0.0 : 1.0;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, //                b
	0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // reak;.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, //         float _1
	0x36, 0x34, 0x36, 0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x34, 0x39, // 646 = fma(-0.049
	0x36, 0x34, 0x37, 0x34, 0x32, 0x38, 0x30, 0x39, 0x35, 0x33, 0x34, 0x30, 0x37, 0x32, 0x38, 0x37, // 6474280953407287
	0x35, 0x39, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x33, 0x36, 0x2c, // 59765625, _1636,
	0x20, 0x30, 0x2e, 0x34, 0x39, 0x38, 0x30, 0x34, 0x39, 0x39, 0x31, 0x34, 0x38, 0x33, 0x36, 0x38, //  0.4980499148368
	0x38, 0x33, 0x35, 0x34, 0x34, 0x39, 0x32, 0x31, 0x38, 0x37, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, // 83544921875);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x34, 0x39, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, // oat _1649 = sqrt
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x36, 0x33, 0x36, 0x29, 0x3b, 0x0a, 0x20, // (1.0 - _1636);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //                _
	0x31, 0x37, 0x33, 0x36, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x38, 0x30, 0x20, 0x3e, 0x3d, // 1736 = (_1580 >=
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x5f, 0x31, 0x36, 0x34, 0x36, 0x20, 0x2a, //  0.0) ? (_1646 *
	0x20, 0x5f, 0x31, 0x36, 0x34, 0x39, 0x29, 0x20, 0x3a, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x2d, 0x5f, //  _1649) : fma(-_
	0x31, 0x36, 0x34, 0x36, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x34, 0x39, 0x2c, 0x20, 0x31, 0x2e, 0x30, // 1646, _1649, 1.0
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    break;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, //       } while(fa
	0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // lse);.          
	0x20, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x39, 0x20, //   _1741 = _1739 
	0x2b, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x37, 0x33, 0x33, 0x20, 0x2a, 0x20, 0x74, 0x65, 0x78, 0x5f, // + ((_1733 * tex_
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x2e, 0x73, 0x61, 0x6d, 0x70, // diffuse_env.samp
	0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, // le(tex_diffuse_e
	0x6e, 0x76, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // nvSampler, float
	0x32, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x35, 0x2c, 0x20, 0x5f, // 2(0.5 + _1735, _
	0x31, 0x37, 0x33, 0x36, 0x29, 0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x30, 0x2e, 0x30, // 1736), level(0.0
	0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // )).xyz) * _mtl_u
	0x2e, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, // .fenvEmissionSca
	0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x29, 0x3b, 0x0a, // le_TexWidth.x);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, //   else.        {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, // .            _17
	0x34, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 41 = _1739;.    
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //     }.        fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // oat3 _1742;.    
	0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, //     if (fast::ma
	0x78, 0x28, 0x5f, 0x31, 0x31, 0x31, 0x39, 0x2e, 0x78, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, // x(_1119.x, fast:
	0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x31, 0x31, 0x39, 0x2e, 0x79, 0x2c, 0x20, 0x5f, 0x31, // :max(_1119.y, _1
	0x31, 0x31, 0x39, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, // 119.z)) > 0.0). 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, //      _1742 = fma
	0x28, 0x5f, 0x31, 0x31, 0x30, 0x37, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, // (_1107, _mtl_u.c
	0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, // Base_Alpha.xyz, 
	0x5f, 0x31, 0x37, 0x34, 0x31, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _1741);.        
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, // }.        else. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, //      _1742 = _17
	0x34, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, // 41;.        }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x35, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x6c, //       _1757 = fl
	0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x37, 0x34, 0x32, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // oat4(_1742, _mtl
	0x5f, 0x75, 0x2e, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, // _u.cBase_Alpha.w
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, // );.        break
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, // ;.    } while(fa
	0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, // lse);.    out.bg
	0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x5f, // fx_FragData0 = _
	0x31, 0x37, 0x35, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 1757;.    return
	0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, 0x10, 0x03,                   //  out;.}......
};
static const uint8_t fs_ball_equirectangular_decal_essl[14050] =
{
	0x46, 0x53, 0x48, 0x0b, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xcf, 0x36, // FSH....l.......6
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // s.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, // arying in.precis
	0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3b, // ion highp float;
	0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // .precision highp
	0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, //  int;.#define sh
	0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adow2D(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //  _coord) texture
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // (_sampler, _coor
	0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, // d).#define shado
	0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // w2DProj(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // eProj(_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x6f, 0x75, 0x74, 0x20, 0x6d, 0x65, 0x64, 0x69, // _coord).out medi
	0x75, 0x6d, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, // ump vec4 bgfx_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // agColor;.varying
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, //  vec3 v_normal;.
	0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, // varying vec2 v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // excoord0;.varyin
	0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, // g vec3 v_worldPo
	0x73, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, // s;.vec3 instMul(
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, // vec3 _vec, mat3 
	0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, // _mtx) { return (
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, //  (_vec) * (_mtx)
	0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, //  ); }.vec3 instM
	0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, // ul(mat3 _mtx, ve
	0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // c3 _vec) { retur
	0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, // n ( (_mtx) * (_v
	0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, // ec) ); }.vec4 in
	0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, // stMul(vec4 _vec,
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, //  mat4 _mtx) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, // turn ( (_vec) * 
	0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // (_mtx) ); }.vec4
	0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, //  instMul(mat4 _m
	0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, // tx, vec4 _vec) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, //  return ( (_mtx)
	0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, //  * (_vec) ); }.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // loat rcp(float _
	0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, // a) { return 1.0/
	0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, // _a; }.vec2 rcp(v
	0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec2 _a) { return
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, //  vec2(1.0)/_a; }
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // .vec3 rcp(vec3 _
	0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, // a) { return vec3
	0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // (1.0)/_a; }.vec4
	0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, //  rcp(vec4 _a) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, // return vec4(1.0)
	0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, // /_a; }.vec2 vec2
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, // _splat(float _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, //  { return vec2(_
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // x, _x); }.vec3 v
	0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ec3_splat(float 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _x) { return vec
	0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // 3(_x, _x, _x); }
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // .vec4 vec4_splat
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // (float _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // urn vec4(_x, _x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, //  _x, _x); }.uvec
	0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, // 2 uvec2_splat(ui
	0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // nt _x) { return 
	0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // uvec2(_x, _x); }
	0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, // .uvec3 uvec3_spl
	0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // at(uint _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // turn uvec3(_x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, // x, _x); }.uvec4 
	0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec4_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, //  _x) { return uv
	0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, // ec4(_x, _x, _x, 
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, // _x); }.mat4 mtxF
	0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, // romRows(vec4 _0,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, //  vec4 _1, vec4 _
	0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 2, vec4 _3).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, // turn transpose(m
	0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, // at4(_0, _1, _2, 
	0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, // _3) );.}.mat4 mt
	0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // xFromCols(vec4 _
	0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // 0, vec4 _1, vec4
	0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, //  _2, vec4 _3).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, // return mat4(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, // _1, _2, _3);.}.m
	0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, // at3 mtxFromRows(
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, // vec3 _0, vec3 _1
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // , vec3 _2).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, // urn transpose(ma
	0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, // t3(_0, _1, _2) )
	0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, // ;.}.mat3 mtxFrom
	0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, // Cols(vec3 _0, ve
	0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, // c3 _1, vec3 _2).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, // {.return mat3(_0
	0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, // , _1, _2);.}.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, // form vec4 u_view
	0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // Rect;.uniform ve
	0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, // c4 u_viewTexel;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, // uniform mat4 u_v
	0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, // iew;.uniform mat
	0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // 4 u_invView;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, // form mat4 u_proj
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // _invProj;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, // m mat4 u_viewPro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, // u_invViewProj;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, // niform mat4 u_mo
	0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // del[32];.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, //  mat4 u_modelVie
	0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // w;.uniform mat4 
	0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, // u_modelViewProj;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, // .uniform vec4 u_
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // alphaRef4;.float
	0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  sqr(const float
	0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, //  v).{.return v*v
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, // ;.}.vec2 sqr(con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // st vec2 v).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // urn v*v;.}.vec3 
	0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // sqr(const vec3 v
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, // ).{.return v*v;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x63, 0x6f, // }.vec3 mul_w1(co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // nst vec3 v, cons
	0x74, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // t mat4 m).{.retu
	0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // rn v.x*m[0].xyz 
	0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // + (v.y*m[1].xyz 
	0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // + (v.z*m[2].xyz 
	0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // + m[3].xyz));.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, // float acos_appro
	0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // x_divPI(const fl
	0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // oat v).{.const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, // loat x = abs(v);
	0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, // .if(1. - x <= 0.
	0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, // 00006103515625).
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, // return (v >= 0.)
	0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, //  ? 0. : 1.;.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, // t float res = ((
	0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, // -0.155972/3.1415
	0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, // 9265358979323846
	0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, // 26433832795) * x
	0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, //  + (1.56467/3.14
	0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, // 1592653589793238
	0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, // 4626433832795) )
	0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, //  * sqrt(1. - x);
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, // .return (v >= 0.
	0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, // ) ? res : 1. - r
	0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, // es;.}.float atan
	0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, // 2_approx_div2PI(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x63, // const float y, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, // onst float x).{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, // const float abs_
	0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // y = abs(y);.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, // t float abs_x = 
	0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, // abs(x);.if(abs_x
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, //  <= 0.0000610351
	0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, // 5625 && abs_y <=
	0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, //  0.0000610351562
	0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, // 5).return 0.;.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, // nst float r = (a
	0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, // bs_x - abs_y) / 
	0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, // (abs_x + abs_y);
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, // .const float ang
	0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // le = ((x < 0.) ?
	0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, //  (3./8.) : (1./8
	0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, // .)).+ (0.211868 
	0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, // /(2.*3.141592653
	0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, // 5897932384626433
	0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, // 832795) * r * r 
	0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, // - 0.987305 /(2.*
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, // 5)) * ((x < 0.) 
	0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // ? -r : r);.retur
	0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, // n (y < 0.) ? -an
	0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // gle : angle;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, // loat asin_approx
	0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // _divPI(const flo
	0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // at v).{.const fl
	0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, // oat x = abs(v);.
	0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, // if(1. - x <= 0.0
	0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, // 0006103515625).r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, // eturn (v >= 0.) 
	0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x63, 0x6f, // ? 0.5 : -0.5;.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, // nst float res = 
	0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, // ((-0.155972/3.14
	0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, // 1592653589793238
	0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, // 4626433832795) *
	0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, //  x + (1.56467/3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, //  ) * sqrt(1. - x
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, // );.return (v >= 
	0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, // 0.) ? 0.5 - res 
	0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, // : -0.5 + res;.}.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, // vec2 ray_to_equi
	0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x63, // rectangular_uv(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, // onst vec3 ray).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, // .return vec2(.0.
	0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, // 5 + atan2_approx
	0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, // _div2PI(ray.y, r
	0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, // ay.x),.acos_appr
	0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, // ox_divPI(ray.z))
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, // ;.}.float InvsRG
	0x42, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, // B(const float co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // lor).{.if (color
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, //  <= 0.04045).ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, // urn color * (1.0
	0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, // /12.92);.else.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // turn pow(color *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, //  (1.0/1.055) + (
	0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, // 0.055/1.055), 2.
	0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, // 4);.}.float InvR
	0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ec709(const floa
	0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, // t color).{.if (c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, // olor <= 0.081).r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, // eturn color * (1
	0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, // .0/4.5);.else.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // turn pow(color *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, //  (1.0/1.099) + (
	0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, // 0.099/1.099), 1.
	0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0/0.45);.}.float
	0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  InvGamma(const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // float color).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, // eturn InvsRGB(co
	0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, // lor);.}.vec3 Inv
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, // Gamma(const vec3
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  color).{.return
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, //  vec3(InvGamma(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, // olor.x),InvGamma
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // (color.y),InvGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // ma(color.z));.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, // vec3 InvToneMap(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // const vec3 color
	0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ).{.const float 
	0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, // inv_2bh = 0.5/0.
	0x32, 0x35, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 25;.const float 
	0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, // bh = 4.0*0.25 - 
	0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, // 2.0;.return (col
	0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // or - 1.0 + sqrt(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, // color*(color + b
	0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, // h) + 1.0))*inv_2
	0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, // bh;.}.float sRGB
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, // (const float f).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, // {.float s;.if (f
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, //  <= 0.0031308).s
	0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, //  = 12.92 * f;.el
	0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, // se.s = 1.055 * p
	0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, // ow(f, 1.0/2.4) -
	0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, //  0.055;.return s
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, // ;.}.float Rec709
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, // (const float f).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, // {.float s;.if (f
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, //  <= 0.018).s = 4
	0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, // .5 * f;.else.s =
	0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, //  1.099 * pow(f, 
	0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, // 0.45) - 0.099;.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // eturn s;.}.float
	0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, //  FBGamma(const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // loat color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // turn sRGB(color)
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, // ;.}.vec2 FBGamma
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // (const vec2 colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, // r).{.return vec2
	0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, // (FBGamma(color.x
	0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // ),FBGamma(color.
	0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, // y));.}.vec3 FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // mma(const vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // olor).{.return v
	0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // ec3(FBGamma(colo
	0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, // r.x),FBGamma(col
	0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, // or.y),FBGamma(co
	0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // lor.z));.}.float
	0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, //  FBToneMap(const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  float l).{.retu
	0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, // rn l * ((l*0.25 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, // + 1.0) / (l + 1.
	0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, // 0));.}.vec2 FBTo
	0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, // neMap(const vec2
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  color).{.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, // float l = dot(co
	0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, // lor,vec2(0.17620
	0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, // 4+0.0108109*0.5,
	0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, // 0.812985+0.01081
	0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 09*0.5));.return
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, //  color * ((l*0.2
	0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, // 5 + 1.0) / (l + 
	0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, // 1.0));.}.vec3 FB
	0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // ToneMap(const ve
	0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // c3 color).{.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, // t float l = dot(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, // color,vec3(0.176
	0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, // 204,0.812985,0.0
	0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 108109));.return
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, //  color * ((l*0.2
	0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, // 5 + 1.0) / (l + 
	0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, // 1.0));.}.vec4 Ad
	0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // ditive(const vec
	0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // 4 cBase, const v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // ec4 cBlend, cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, // t float percent)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, // .{.return cBase 
	0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, // + cBlend*percent
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, // ;.}.vec3 Screen 
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, // (const vec3 cBas
	0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, // e, const vec3 cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, // lend).{.return 1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, // .0 - (1.0 - cBas
	0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, // e) * (1.0 - cBle
	0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, // nd);.}.vec4 Scre
	0x65, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // en (const vec4 c
	0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, // Base, const vec4
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  cBlend).{.retur
	0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, // n 1.0 - (1.0 - c
	0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, // Base) * (1.0 - c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, // Blend);.}.vec3 S
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // creenHDR (const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // vec3 cBase, cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, // t vec3 cBlend).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, // .return max(1.0 
	0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, // - (1.0 - cBase) 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // * (1.0 - cBlend)
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, // , vec3(0.,0.,0.)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, // );.}.vec4 Screen
	0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // HDR (const vec4 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // cBase, const vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 4 cBlend).{.retu
	0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, // rn max(1.0 - (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // 0 - cBase) * (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, // 0 - cBlend), vec
	0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, // 4(0.,0.,0.,0.));
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, // .}.vec4 Multiply
	0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, //  (const vec4 cBa
	0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // se, const vec4 c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // Blend, const flo
	0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // at percent).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, // turn cBase * cBl
	0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // end*percent;.}.v
	0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x63, 0x6f, 0x6e, // ec4 Overlay (con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, // st vec4 cBase, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // onst vec4 cBlend
	0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, // ).{.vec4 cNew = 
	0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, // step(0.5, cBase)
	0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, // ;.cNew = mix(cBa
	0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, // se*cBlend*2.0, 1
	0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, // .0-2.0*(1.0-cBas
	0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, // e)*(1.0-cBlend),
	0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, //  cNew);.return c
	0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, // New;.}.vec4 Over
	0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // layHDR (const ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // c4 cBase, const 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, // vec4 cBlend).{.v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, // ec4 cNew = step(
	0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, // 0.5, cBase);.cNe
	0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, // w = max(mix(cBas
	0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, // e*cBlend*2.0, 1.
	0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, // 0-2.0*(1.0-cBase
	0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, // )*(1.0-cBlend), 
	0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, // cNew), vec4(0.,0
	0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // .,0.,0.));.retur
	0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // n cNew;.}.vec3 c
	0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, // os_hemisphere_sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, // mple(const vec2 
	0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // t).{.const float
	0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, //  phi = t.y * (2.
	0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, // 0*3.141592653589
	0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, // 7932384626433832
	0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 795);.const floa
	0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, // t cosTheta = sqr
	0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x63, 0x6f, // t(1.0 - t.x);.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, // nst float sinThe
	0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, // ta = sqrt(t.x);.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x73, 0x69, 0x6e, // float sp,cp;.sin
	0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x2c, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x29, 0x3b, 0x0a, // cos(phi,sp,cp);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, // return vec3(cp *
	0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, //  sinTheta, cosTh
	0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, // eta, sp * sinThe
	0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, // ta);.}.vec3 rota
	0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, // te_to_vector_upp
	0x65, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, // er(const vec3 ve
	0x63, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, // c, const vec3 no
	0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // rmal).{.if(norma
	0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, // l.y > -0.99999).
	0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, // {.const float h 
	0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // = 1.0/(1.0+norma
	0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // l.y);.const floa
	0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // t hz = h*normal.
	0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, // z;.const float h
	0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // zx = hz*normal.x
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, // ;.return vec3(.v
	0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, // ec.x * (normal.y
	0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, // +hz*normal.z) + 
	0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // vec.y * normal.x
	0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, //  - vec.z * hzx,.
	0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, // vec.y * normal.y
	0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, //  - vec.x * norma
	0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, // l.x - vec.z * no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, // rmal.z,.vec.y * 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, // normal.z - vec.x
	0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, //  * hzx + vec.z *
	0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, //  (normal.y+h*nor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, // mal.x*normal.x))
	0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // ;.}.else return 
	0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // -vec;.}.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, // mat4 matView;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, // iform mat4 matWo
	0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // rldView;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, //  mat4 matWorldVi
	0x65, 0x77, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // ewInverse;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, // rm mat4 matWorld
	0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // ViewProj;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, // m mat4 matProj;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, // uniform sampler2
	0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // D tex_ball_color
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ;.uniform sample
	0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // r2D tex_env;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, // form sampler2D t
	0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x3b, 0x0a, // ex_diffuse_env;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, // uniform sampler2
	0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, // D tex_ball_decal
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ;.uniform sample
	0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, // r2D tex_ball_pla
	0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // yfield;.uniform 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x68, 0x61, // vec4 u_basic_sha
	0x64, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // de_mode;.uniform
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, //  vec4 ballLightP
	0x6f, 0x73, 0x5b, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // os[2 + 8];.unifo
	0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, // rm vec4 ballLigh
	0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x5d, // tEmission[2 + 8]
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // ;.uniform vec4 c
	0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, // Ambient_LightRan
	0x67, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // ge;.uniform vec4
	0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, //  fenvEmissionSca
	0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // le_TexWidth;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, // form vec4 fDisab
	0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, // leLighting_top_b
	0x65, 0x6c, 0x6f, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // elow;.uniform ve
	0x63, 0x34, 0x20, 0x66, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x3b, 0x0a, // c4 fSceneScale;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, // uniform vec4 cBa
	0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // se_Alpha;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, // m vec4 Roughness
	0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, // _WrapL_Edge_Thic
	0x6b, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x47, 0x65, 0x6f, // kness;.float Geo
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x28, 0x63, 0x6f, // metricOpacity(co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, // nst float NdotV,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6c, 0x70, //  const float alp
	0x68, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ha, const float 
	0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // blending, const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, // float thickness)
	0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, // .{.const float x
	0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x29, 0x3b, 0x0a, 0x63, //  = abs(NdotV);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x20, 0x3d, 0x20, 0x62, // onst float g = b
	0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // lending * (1.0 -
	0x20, 0x28, 0x78, 0x20, 0x2f, 0x20, 0x28, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, //  (x / (x * (1.0 
	0x2d, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, 0x20, 0x2b, 0x20, 0x74, // - thickness) + t
	0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // hickness)));.ret
	0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2c, 0x20, 0x31, // urn mix(alpha, 1
	0x2e, 0x30, 0x2c, 0x20, 0x67, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, // .0, g);.}.vec3 F
	0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, 0x6b, 0x28, 0x63, 0x6f, // resnelSchlick(co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x2c, 0x20, 0x63, // nst vec3 spec, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, // onst float LdotH
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, // , const float ed
	0x67, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x70, 0x65, // ge).{.return spe
	0x63, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x65, // c + (vec3(edge,e
	0x64, 0x67, 0x65, 0x2c, 0x65, 0x64, 0x67, 0x65, 0x29, 0x20, 0x2d, 0x20, 0x73, 0x70, 0x65, 0x63, // dge,edge) - spec
	0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x4c, 0x64, // ) * pow(1.0 - Ld
	0x6f, 0x74, 0x48, 0x2c, 0x20, 0x35, 0x2e, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // otH, 5.);.}.vec3
	0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x63, 0x6f, //  DoPointLight(co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x63, 0x6f, // nst vec3 pos, co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // nst vec3 N, cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // t vec3 V, const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, // vec3 diffuse, co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, // nst vec3 glossy,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, //  const float edg
	0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, // e, const float g
	0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // lossyPower, cons
	0x74, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x62, // t int i, const b
	0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, // ool is_metal).{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, // const vec3 light
	0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, // Dir = ( ( (matVi
	0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x62, 0x61, 0x6c, 0x6c, // ew) * (vec4(ball
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, // LightPos[i].xyz,
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, //  1.0)) ) ).xyz -
	0x20, 0x70, 0x6f, 0x73, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, //  pos;.const vec3
	0x20, 0x4c, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x6c, //  L = normalize(l
	0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // ightDir);.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x3d, 0x20, 0x64, 0x6f, // float NdotL = do
	0x74, 0x28, 0x4e, 0x2c, 0x20, 0x4c, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4f, 0x75, // t(N, L);.vec3 Ou
	0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, // t = vec3(0.0,0.0
	0x2c, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, // ,0.0);.if (!is_m
	0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x2b, // etal && (NdotL +
	0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, //  Roughness_WrapL
	0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, // _Edge_Thickness.
	0x79, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x4f, 0x75, 0x74, 0x20, 0x3d, 0x20, // y > 0.0)).Out = 
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x4e, 0x64, 0x6f, 0x74, // diffuse * ((Ndot
	0x4c, 0x20, 0x2b, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, // L + Roughness_Wr
	0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, // apL_Edge_Thickne
	0x73, 0x73, 0x2e, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x73, 0x71, 0x72, 0x28, 0x31, 0x2e, 0x30, 0x2b, // ss.y) / sqr(1.0+
	0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, // Roughness_WrapL_
	0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, // Edge_Thickness.y
	0x29, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x3e, 0x20, // ));.if (NdotL > 
	0x30, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // 0.0).{.const vec
	0x33, 0x20, 0x48, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // 3 H = normalize(
	0x4c, 0x20, 0x2b, 0x20, 0x56, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // L + V);.const fl
	0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, // oat NdotH = dot(
	0x4e, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // N, H);.const flo
	0x61, 0x74, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4c, // at LdotH = dot(L
	0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // , H);.const floa
	0x74, 0x20, 0x56, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x56, 0x2c, // t VdotH = dot(V,
	0x20, 0x48, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x20, //  H);.if ((NdotH 
	0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x4c, 0x64, 0x6f, 0x74, 0x48, // > 0.0) && (LdotH
	0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x56, 0x64, 0x6f, 0x74, //  > 0.0) && (Vdot
	0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x4f, 0x75, 0x74, 0x20, 0x2b, 0x3d, // H > 0.0)).Out +=
	0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, 0x6b, 0x28, //  FresnelSchlick(
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x65, // glossy, LdotH, e
	0x64, 0x67, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, // dge) * (((glossy
	0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, // Power + 1.0) / (
	0x38, 0x2e, 0x30, 0x2a, 0x56, 0x64, 0x6f, 0x74, 0x48, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, // 8.0*VdotH)) * po
	0x77, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, // w(NdotH, glossyP
	0x6f, 0x77, 0x65, 0x72, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // ower));.}.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // float sqrl_light
	0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, // Dir = dot(lightD
	0x69, 0x72, 0x2c, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x29, 0x3b, 0x0a, 0x66, 0x6c, // ir,lightDir);.fl
	0x6f, 0x61, 0x74, 0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x3d, 0x20, 0x63, 0x6c, 0x61, // oat fAtten = cla
	0x6d, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, // mp(1.0 - sqrl_li
	0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2a, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, // ghtDir*sqrl_ligh
	0x74, 0x44, 0x69, 0x72, 0x2f, 0x28, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, // tDir/(cAmbient_L
	0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, // ightRange.w*cAmb
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, // ient_LightRange.
	0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, // w*cAmbient_Light
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, // Range.w*cAmbient
	0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x29, 0x2c, 0x20, // _LightRange.w), 
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x66, 0x41, 0x74, 0x74, 0x65, // 0.0, 1.0);.fAtte
	0x6e, 0x20, 0x3d, 0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x2a, 0x66, 0x41, 0x74, 0x74, 0x65, // n = fAtten*fAtte
	0x6e, 0x2f, 0x28, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, // n/(sqrl_lightDir
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x6d, //  + 1.0);.vec3 am
	0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x3b, 0x0a, // bient = glossy;.
	0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x61, // if (!is_metal).a
	0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x2b, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // mbient += diffus
	0x65, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x65, // e;.const vec3 re
	0x73, 0x75, 0x6c, 0x74, 0x20, 0x3d, 0x20, 0x4f, 0x75, 0x74, 0x20, 0x2a, 0x20, 0x62, 0x61, 0x6c, // sult = Out * bal
	0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x69, // lLightEmission[i
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x2b, // ].xyz * fAtten +
	0x20, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x2a, 0x20, 0x63, 0x41, 0x6d, 0x62, 0x69, //  ambient * cAmbi
	0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x78, // ent_LightRange.x
	0x79, 0x7a, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // yz;.if (fDisable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, // Lighting_top_bel
	0x6f, 0x77, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x72, 0x65, 0x74, // ow.x != 0.0).ret
	0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2c, 0x64, // urn mix(result,d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // iffuse,fDisableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, // ighting_top_belo
	0x77, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // w.x);.else.retur
	0x6e, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // n result;.}.vec3
	0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, //  DoEnvmapDiffuse
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, // (const vec3 N, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // onst vec3 diffus
	0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // e).{.const vec3 
	0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, // env = textureLod
	0x28, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, // (tex_diffuse_env
	0x2c, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, // , ray_to_equirec
	0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x4e, 0x29, 0x2c, 0x20, // tangular_uv(N), 
	0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 0.0).xyz;.return
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, //  diffuse * env*f
	0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, // envEmissionScale
	0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // _TexWidth.x;.}.v
	0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x47, 0x6c, 0x6f, 0x73, // ec3 DoEnvmapGlos
	0x73, 0x79, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, // sy(const vec3 N,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x63, //  const vec3 V, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x63, // onst vec2 Ruv, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, // onst vec3 glossy
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, // , const float gl
	0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, // ossyPower).{.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x69, 0x70, 0x20, 0x3d, 0x20, 0x6d, // st float mip = m
	0x69, 0x6e, 0x28, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, // in(log2(fenvEmis
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, // sionScale_TexWid
	0x74, 0x68, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x33, 0x2e, 0x30, 0x29, // th.y * sqrt(3.0)
	0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x35, 0x2a, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x67, 0x6c, 0x6f, // ) - 0.5*log2(glo
	0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x2c, // ssyPower + 1.0),
	0x20, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, //  log2(fenvEmissi
	0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, // onScale_TexWidth
	0x2e, 0x79, 0x29, 0x2d, 0x31, 0x2e, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // .y)-1.);.const v
	0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // ec3 env = textur
	0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x2c, 0x20, 0x52, 0x75, // eLod(tex_env, Ru
	0x76, 0x2c, 0x20, 0x6d, 0x69, 0x70, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x72, 0x65, 0x74, // v, mip).xyz;.ret
	0x75, 0x72, 0x6e, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, 0x20, 0x65, 0x6e, 0x76, // urn glossy * env
	0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, // *fenvEmissionSca
	0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x7d, // le_TexWidth.x;.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x32, 0x6e, // .vec3 DoEnvmap2n
	0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // dLayer(const vec
	0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x31, 0x73, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2c, // 3 color1stLayer,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, //  const vec3 pos,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, //  const vec3 N, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, // onst vec3 V, con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, // st float NdotV, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, // const vec2 Ruv, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, // const vec3 specu
	0x6c, 0x61, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // lar).{.const vec
	0x33, 0x20, 0x77, 0x20, 0x3d, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, // 3 w = FresnelSch
	0x6c, 0x69, 0x63, 0x6b, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x4e, // lick(specular, N
	0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, // dotV, Roughness_
	0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, // WrapL_Edge_Thick
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // ness.z);.const v
	0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // ec3 env = textur
	0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x2c, 0x20, 0x52, 0x75, // eLod(tex_env, Ru
	0x76, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x72, 0x65, 0x74, // v, 0.0).xyz;.ret
	0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x31, 0x73, 0x74, // urn mix(color1st
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x2c, 0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, // Layer, env*fenvE
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, // missionScale_Tex
	0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x2c, 0x20, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // Width.x, w);.}.v
	0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x63, 0x6f, // ec3 lightLoop(co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x76, 0x65, // nst vec3 pos, ve
	0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, // c3 N, const vec3
	0x20, 0x56, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, //  V, vec3 diffuse
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, // , vec3 glossy, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, // onst vec3 specul
	0x61, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ar, const float 
	0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, // edge, const bool
	0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, //  is_metal).{.vec
	0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, // 3 color = vec3_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // plat(0.0);.float
	0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x56, //  NdotV = dot(N,V
	0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3c, 0x20, 0x30, // );.if (NdotV < 0
	0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x4e, 0x20, 0x3d, 0x20, 0x2d, 0x4e, 0x3b, 0x0a, 0x4e, 0x64, // .0).{.N = -N;.Nd
	0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x2d, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x3b, 0x0a, 0x7d, 0x0a, // otV = -NdotV;.}.
	0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, 0x4e, 0x64, 0x6f, 0x74, // NdotV = min(Ndot
	0x56, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // V, 1.0);.const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, // loat diffuseMax 
	0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x78, 0x2c, // = max(diffuse.x,
	0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x79, 0x2c, 0x64, 0x69, // max(diffuse.y,di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // ffuse.z));.const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, //  float glossyMax
	0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x78, 0x2c, //  = max(glossy.x,
	0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x79, 0x2c, 0x67, 0x6c, 0x6f, // max(glossy.y,glo
	0x73, 0x73, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // ssy.z));.const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, // loat specularMax
	0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, //  = max(specular.
	0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x79, // x,max(specular.y
	0x2c, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, // ,specular.z));.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x75, 0x6d, 0x20, 0x3d, // onst float sum =
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x2b, 0x20, 0x67, 0x6c, //  diffuseMax + gl
	0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x73, 0x75, // ossyMax ;.if (su
	0x6d, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x26, 0x26, 0x20, 0x66, 0x44, 0x69, 0x73, 0x61, // m > 1.0 && fDisa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, // bleLighting_top_
	0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x7b, // below.x < 1.0).{
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, // .const float inv
	0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x64, // sum = 1.0/sum;.d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, // iffuse *= invsum
	0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, // ;.glossy *= invs
	0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, // um;.}.if ((!is_m
	0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // etal && (diffuse
	0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, // Max > 0.0)) || (
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, // glossyMax > 0.0)
	0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // ).{.if (fDisable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, // Lighting_top_bel
	0x6f, 0x77, 0x2e, 0x78, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, // ow.x == 1.0).col
	0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x32, 0x29, 0x20, 0x2a, // or += float(2) *
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x66, //  diffuse;.else f
	0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x69, // or (int i = 0; i
	0x20, 0x3c, 0x20, 0x32, 0x3b, 0x20, 0x69, 0x2b, 0x2b, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, //  < 2; i++).color
	0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, //  += DoPointLight
	0x28, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, // (pos, N, V, diff
	0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x65, 0x64, 0x67, // use, glossy, edg
	0x65, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, // e, Roughness_Wra
	0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, // pL_Edge_Thicknes
	0x73, 0x2e, 0x78, 0x2c, 0x20, 0x69, 0x2c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, // s.x, i, is_metal
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, // );.}.if (!is_met
	0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, // al && (diffuseMa
	0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // x > 0.0)).color 
	0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, 0x66, 0x75, // += DoEnvmapDiffu
	0x73, 0x65, 0x28, 0x20, 0x28, 0x28, 0x20, 0x28, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x4e, // se( (( ( (vec4(N
	0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, // ,0.0)) * (matVie
	0x77, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x64, 0x69, 0x66, // w) ) ).xyz), dif
	0x66, 0x75, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x67, 0x6c, 0x6f, 0x73, // fuse);.if ((glos
	0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, // syMax > 0.0) || 
	0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, // (specularMax > 0
	0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x52, 0x20, 0x3d, 0x20, // .0)).{.vec3 R = 
	0x28, 0x32, 0x2e, 0x30, 0x2a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x29, 0x2a, 0x4e, 0x20, 0x2d, 0x20, // (2.0*NdotV)*N - 
	0x56, 0x3b, 0x0a, 0x52, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x20, 0x28, 0x20, 0x28, 0x76, 0x65, 0x63, // V;.R = (( ( (vec
	0x34, 0x28, 0x52, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, 0x74, // 4(R,0.0)) * (mat
	0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, // View) ) ).xyz);.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, 0x75, 0x76, 0x20, 0x3d, // const vec2 Ruv =
	0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, //  ray_to_equirect
	0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x52, 0x29, 0x3b, 0x0a, 0x69, // angular_uv(R);.i
	0x66, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, // f (glossyMax > 0
	0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, // .0).color += DoE
	0x6e, 0x76, 0x6d, 0x61, 0x70, 0x47, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x28, 0x4e, 0x2c, 0x20, 0x56, // nvmapGlossy(N, V
	0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x52, // , Ruv, glossy, R
	0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, // oughness_WrapL_E
	0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x29, // dge_Thickness.x)
	0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, // ;.if (specularMa
	0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, // x > 0.0).color =
	0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x32, 0x6e, 0x64, 0x4c, 0x61, 0x79, 0x65, //  DoEnvmap2ndLaye
	0x72, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, 0x2c, // r(color, pos, N,
	0x20, 0x56, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, //  V, NdotV, Ruv, 
	0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x72, 0x65, 0x74, // specular);.}.ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, // urn color ;.}.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x76, 0x54, 0x61, // iform vec4 invTa
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, // bleRes_reflectio
	0x6e, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // n;.uniform vec4 
	0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, // w_h_disableLight
	0x69, 0x6e, 0x67, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, // ing;.vec3 ballLi
	0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // ghtLoop(const ve
	0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, // c3 pos, vec3 N, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, // vec3 V, vec3 dif
	0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // fuse, vec3 gloss
	0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, // y, const vec3 sp
	0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // ecular, const fl
	0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // oat edge, const 
	0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x7b, // bool is_metal).{
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, 0x66, // .const float dif
	0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, // fuseMax = max(di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, // ffuse.x,max(diff
	0x75, 0x73, 0x65, 0x2e, 0x79, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x7a, 0x29, // use.y,diffuse.z)
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, // );.const float g
	0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x67, // lossyMax = max(g
	0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, // lossy.x,max(glos
	0x73, 0x79, 0x2e, 0x79, 0x2c, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, // sy.y,glossy.z));
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x65, // .const float spe
	0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x73, // cularMax = max(s
	0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, // pecular.x,max(sp
	0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x79, 0x2c, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, // ecular.y,specula
	0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // r.z));.const flo
	0x61, 0x74, 0x20, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // at sum = diffuse
	0x4d, 0x61, 0x78, 0x20, 0x2b, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x3b, // Max + glossyMax;
	0x0a, 0x69, 0x66, 0x28, 0x73, 0x75, 0x6d, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x7b, // .if(sum > 1.0).{
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, // .const float inv
	0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x64, // sum = 1.0/sum;.d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, // iffuse *= invsum
	0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, // ;.glossy *= invs
	0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // um;.}.vec3 color
	0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, //  = vec3(0.0, 0.0
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x28, 0x21, 0x69, 0x73, 0x5f, // , 0.0);.if((!is_
	0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // metal && (diffus
	0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, // eMax > 0.0)) || 
	0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, // (glossyMax > 0.0
	0x29, 0x29, 0x0a, 0x66, 0x6f, 0x72, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, 0x30, // )).for(int i = 0
	0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x3b, 0x20, 0x69, 0x2b, 0x2b, // ; i < 2 + 8; i++
	0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, // ).color += DoPoi
	0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, 0x2c, 0x20, // ntLight(pos, N, 
	0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, // V, diffuse, glos
	0x73, 0x79, 0x2c, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, // sy, edge, Roughn
	0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, // ess_WrapL_Edge_T
	0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x2c, 0x20, 0x69, 0x2c, 0x20, 0x69, // hickness.x, i, i
	0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x21, 0x69, 0x73, // s_metal);.if(!is
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, // _metal && (diffu
	0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x63, 0x6f, // seMax > 0.0)).co
	0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, // lor += DoEnvmapD
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, // iffuse(normalize
	0x28, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, // (( (matView) * (
	0x76, 0x65, 0x63, 0x34, 0x28, 0x4e, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x2e, // vec4(N, 0.0)) ).
	0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x3b, 0x0a, // xyz), diffuse);.
	0x69, 0x66, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3e, // if(specularMax >
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x73, //  0.0).color += s
	0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // pecular;.return 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, // color;.}.void ma
	0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // in().{.const vec
	0x33, 0x20, 0x56, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // 3 V = normalize(
	0x20, 0x2d, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, //  -v_worldPos.xyz
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x20, // );.const vec3 N 
	0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x76, 0x5f, 0x6e, 0x6f, // = normalize(v_no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // rmal.xyz);.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x52, 0x20, 0x3d, 0x20, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, //  vec3 R = reflec
	0x74, 0x28, 0x56, 0x2c, 0x20, 0x4e, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x61, // t(V, N);.vec3 ba
	0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x63, 0x6f, // llImageColor;.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x20, 0x3d, // nst float edge =
	0x20, 0x64, 0x6f, 0x74, 0x28, 0x56, 0x2c, 0x20, 0x52, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, //  dot(V, R);.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x6f, 0x64, 0x20, 0x3d, 0x20, 0x28, 0x65, // t float lod = (e
	0x64, 0x67, 0x65, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x36, 0x29, 0x20, 0x3f, 0x20, 0x65, 0x64, 0x67, // dge > 0.6) ? edg
	0x65, 0x2a, 0x28, 0x36, 0x2e, 0x30, 0x2a, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x29, 0x2d, // e*(6.0*1.0/0.4)-
	0x28, 0x36, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x36, 0x2f, 0x30, 0x2e, 0x34, 0x29, 0x20, 0x3a, 0x20, // (6.0*0.6/0.4) : 
	0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // 0.0;.const vec3 
	0x72, 0x76, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x2d, 0x52, // rv = (( (vec4(-R
	0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, // ,0.0)) * (matVie
	0x77, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // w) ).xyz);.const
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x20, 0x3d, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, //  vec2 uv = ray_t
	0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, // o_equirectangula
	0x72, 0x5f, 0x75, 0x76, 0x28, 0x72, 0x76, 0x29, 0x3b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, // r_uv(rv);.ballIm
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // ageColor = textu
	0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, // reLod(tex_ball_c
	0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x75, 0x76, 0x2c, 0x20, 0x6c, 0x6f, 0x64, 0x29, 0x2e, 0x72, // olor, uv, lod).r
	0x67, 0x62, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x64, // gb;.const vec4 d
	0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, // ecalColorT = tex
	0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, // ture(tex_ball_de
	0x63, 0x61, 0x6c, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, // cal, v_texcoord0
	0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, // );.vec3 decalCol
	0x6f, 0x72, 0x20, 0x3d, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, // or = decalColorT
	0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, // .rgb;.ballImageC
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, // olor = ScreenHDR
	0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, // (ballImageColor,
	0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x69, 0x66, //  decalColor);.if
	0x20, 0x28, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, //  ((w_h_disableLi
	0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x7a, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x29, // ghting.z != 0.))
	0x0a, 0x7b, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, // .{.bgfx_FragColo
	0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, // r = vec4(ballIma
	0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, // geColor,cBase_Al
	0x70, 0x68, 0x61, 0x2e, 0x61, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x3b, 0x0a, // pha.a);.return;.
	0x7d, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // }.ballImageColor
	0x20, 0x2a, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, //  *= 0.5*fenvEmis
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, // sionScale_TexWid
	0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, // th.x;.const vec3
	0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, //  playfield_norma
	0x6c, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, // l = ( (matWorldV
	0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, // iew) * (float4(0
	0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x31, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x20, 0x29, 0x2e, 0x78, // .,0.,1.,0.)) ).x
	0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // yz;.const float 
	0x4e, 0x64, 0x6f, 0x74, 0x52, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x70, 0x6c, 0x61, 0x79, // NdotR = dot(play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x52, 0x29, // field_normal, R)
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, // ;.const vec3 pla
	0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, // yfield_p0 = ( (m
	0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, // atWorldView) * (
	0x76, 0x65, 0x63, 0x34, 0x28, 0x20, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x31, // vec4( 0.,0.,0.,1
	0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // .0)) ).xyz;.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, // t float t = dot(
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // playfield_normal
	0x2c, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, // , v_worldPos.xyz
	0x20, 0x2d, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x30, 0x29, //  - playfield_p0)
	0x20, 0x2f, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  / NdotR;.const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x68, // vec3 playfield_h
	0x69, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, // it = v_worldPos.
	0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x74, 0x20, 0x2a, 0x20, 0x52, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // xyz - t * R;.con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x20, 0x3d, 0x20, 0x28, // st vec4 proj = (
	0x20, 0x28, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, //  (matProj) * (ve
	0x63, 0x34, 0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x68, 0x69, 0x74, // c4(playfield_hit
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // , 1.0)) );.const
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x70, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, //  vec2 uvp = vec2
	0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, // (0.5, 0.5) + vec
	0x32, 0x28, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x78, 0x2c, 0x20, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x2e, // 2(proj.x, -proj.
	0x79, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2f, 0x20, 0x70, 0x72, 0x6f, 0x6a, // y) * (0.5 / proj
	0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // .w);.const vec3 
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, // playfieldColor =
	0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x28, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, //  0.25 * (.textur
	0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, // e(tex_ball_playf
	0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, // ield, uvp + vec2
	0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, // (w_h_disableLigh
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, // ting.x, 0.)).rgb
	0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, // .+ texture(tex_b
	0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x75, // all_playfield, u
	0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, // vp - vec2(w_h_di
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, // sableLighting.x,
	0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, //  0.)).rgb.+ text
	0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, // ure(tex_ball_pla
	0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, // yfield, uvp + ve
	0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, // c2(0., w_h_disab
	0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x72, // leLighting.y)).r
	0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, // gb.+ texture(tex
	0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, // _ball_playfield,
	0x20, 0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, //  uvp - vec2(0., 
	0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, // w_h_disableLight
	0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x29, 0x3b, 0x0a, 0x69, // ing.y)).rgb.);.i
	0x66, 0x20, 0x28, 0x21, 0x28, 0x75, 0x76, 0x70, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x20, // f (!(uvp.x < 0. 
	0x7c, 0x7c, 0x20, 0x75, 0x76, 0x70, 0x2e, 0x78, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x20, 0x7c, 0x7c, // || uvp.x > 1. ||
	0x20, 0x75, 0x76, 0x70, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x20, 0x7c, 0x7c, 0x20, 0x75, //  uvp.y < 0. || u
	0x76, 0x70, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x29, 0x0a, 0x26, 0x26, 0x20, 0x21, 0x28, // vp.y > 1.).&& !(
	0x74, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, // t <= 0.)).{.ball
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x6c, 0x65, 0x72, // ImageColor = ler
	0x70, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // p(ballImageColor
	0x2c, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // , playfieldColor
	0x2c, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x30, // , smoothstep(0.0
	0x2c, 0x20, 0x30, 0x2e, 0x31, 0x35, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x29, 0x20, 0x2a, // , 0.15, NdotR) *
	0x20, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, //  invTableRes_ref
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x62, 0x61, // lection.z);.}.ba
	0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x6d, // llImageColor = m
	0x69, 0x6e, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, // in(ballImageColo
	0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x35, 0x2e, 0x2c, 0x20, 0x31, // r, float3(15., 1
	0x35, 0x2e, 0x2c, 0x20, 0x31, 0x35, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // 5., 15.));.vec3 
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x3d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, // diffuse = cBase_
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x2a, 0x30, 0x2e, 0x30, 0x37, 0x35, 0x3b, // Alpha.rgb*0.075;
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, // .const vec3 glos
	0x73, 0x79, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // sy = max(diffuse
	0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x2c, 0x30, // *2.0, vec3(0.1,0
	0x2e, 0x31, 0x2c, 0x30, 0x2e, 0x31, 0x29, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, // .1,0.1));.vec3 s
	0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x20, 0x3d, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, // pecular = ballIm
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // ageColor * cBase
	0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x62, 0x67, 0x66, 0x78, // _Alpha.rgb;.bgfx
	0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x72, 0x67, 0x62, 0x20, 0x3d, // _FragColor.rgb =
	0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x76, //  ballLightLoop(v
	0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x4e, // _worldPos.xyz, N
	0x2c, 0x20, 0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, // , V, diffuse, gl
	0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, // ossy, specular, 
	0x31, 0x2e, 0x30, 0x2c, 0x20, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x62, 0x67, 0x66, // 1.0, false);.bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x61, 0x20, 0x3d, 0x20, // x_FragColor.a = 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x61, 0x3b, 0x0a, 0x7d, // cBase_Alpha.a;.}
	0x0a, 0x00,                                                                                     // ..
};
static const uint8_t fs_ball_equirectangular_decal_glsl[14416] =
{
	0x46, 0x53, 0x48, 0x0b, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3d, 0x38, // FSH....l......=8
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x6f, // ..#version 440.o
	0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, // ut vec4 bgfx_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // gColor;.#define 
	0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x62, 0x67, 0x66, // gl_FragColor bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x0a, 0x23, 0x64, 0x65, 0x66, // x_FragColor.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x20, 0x20, // ine texture2D   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, //        texture.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // Lod       textur
	0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, // eLod.#define tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ture2DGrad      
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, // textureGrad.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, // ine texture2DPro
	0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, // jLod   texturePr
	0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // ojLod.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, // xture2DProjGrad 
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, //  textureProjGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // CubeLod     text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, // ureLod.#define t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, // extureCubeGrad  
	0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, //   textureGrad.#d
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, // efine texture3D 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //          texture
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, 0x65, 0x78, 0x74, // 2DLodOffset text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, // ureLodOffset.#de
	0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, // fine attribute i
	0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // n.#define varyin
	0x67, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, // g in.#define bgf
	0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // xShadow2D(_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, // er, _coord)     
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // vec4_splat(textu
	0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // re(_sampler, _co
	0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, // ord) ).#define b
	0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, // gfxShadow2DProj(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, // ) vec4_splat(tex
	0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // tureProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x76, 0x61, 0x72, // r, _coord) ).var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // ying vec3 v_norm
	0x61, 0x6c, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, // al;.varying vec2
	0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, //  v_texcoord0;.va
	0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, // rying vec3 v_wor
	0x6c, 0x64, 0x50, 0x6f, 0x73, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, // ldPos;.vec3 inst
	0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, // Mul(vec3 _vec, m
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // at3 _mtx) { retu
	0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, // rn ( (_vec) * (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, // mtx) ); }.vec3 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, // nstMul(mat3 _mtx
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, // , vec3 _vec) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, // eturn ( (_mtx) *
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, //  (_vec) ); }.vec
	0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // 4 instMul(vec4 _
	0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, // vec, mat4 _mtx) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, // { return ( (_vec
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // ) * (_mtx) ); }.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, // vec4 instMul(mat
	0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, // 4 _mtx, vec4 _ve
	0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, // c) { return ( (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, // mtx) * (_vec) );
	0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, //  }.float rcp(flo
	0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // at _a) { return 
	0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, // 1.0/_a; }.vec2 r
	0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // cp(vec2 _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, // turn vec2(1.0)/_
	0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, // a; }.vec3 rcp(ve
	0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c3 _a) { return 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, // vec3(1.0)/_a; }.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, // vec4 rcp(vec4 _a
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // ) { return vec4(
	0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // 1.0)/_a; }.vec2 
	0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // vec2_splat(float
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, //  _x) { return ve
	0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, // c2(_x, _x); }.ve
	0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, // c3 vec3_splat(fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // oat _x) { return
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, //  vec3(_x, _x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, // ); }.vec4 vec4_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // plat(float _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, //  return vec4(_x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, //  _x, _x, _x); }.
	0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, // uvec2 uvec2_spla
	0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // t(uint _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // urn uvec2(_x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, // ); }.uvec3 uvec3
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // _splat(uint _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, // { return uvec3(_
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, // x, _x, _x); }.uv
	0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // ec4 uvec4_splat(
	0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // uint _x) { retur
	0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, // n uvec4(_x, _x, 
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, // _x, _x); }.mat4 
	0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, // mtxFromRows(vec4
	0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, //  _0, vec4 _1, ve
	0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, // c4 _2, vec4 _3).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, // {.return transpo
	0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, // se(mat4(_0, _1, 
	0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, // _2, _3) );.}.mat
	0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, // 4 mtxFromCols(ve
	0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, // c4 _0, vec4 _1, 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, // vec4 _2, vec4 _3
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, // ).{.return mat4(
	0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, // _0, _1, _2, _3);
	0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, // .}.mat3 mtxFromR
	0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, // ows(vec3 _0, vec
	0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, // 3 _1, vec3 _2).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, // .return transpos
	0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, // e(mat3(_0, _1, _
	0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, // 2) );.}.mat3 mtx
	0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, // FromCols(vec3 _0
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // , vec3 _1, vec3 
	0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, // _2).{.return mat
	0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, // 3(_0, _1, _2);.}
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, // .uniform vec4 u_
	0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // viewRect;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, // m vec4 u_viewTex
	0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // el;.uniform mat4
	0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, //  u_view;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, //  mat4 u_invView;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // proj;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, // t4 u_invProj;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // iform mat4 u_vie
	0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // wProj;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, // at4 u_invViewPro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // u_model[32];.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, // form mat4 u_mode
	0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // lView;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, // at4 u_modelViewP
	0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, // roj;.uniform vec
	0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, // 4 u_alphaRef4;.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // loat sqr(const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // loat v).{.return
	0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, //  v*v;.}.vec2 sqr
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, // (const vec2 v).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // .return v*v;.}.v
	0x65, 0x63, 0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // ec3 sqr(const ve
	0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // c3 v).{.return v
	0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, // *v;.}.vec3 mul_w
	0x31, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, // 1(const vec3 v, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, // const mat4 m).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, // return v.x*m[0].
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, // xyz + (v.y*m[1].
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, // xyz + (v.z*m[2].
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, // xyz + m[3].xyz))
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, // ;.}.float acos_a
	0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, // pprox_divPI(cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, // t float v).{.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, // st float x = abs
	0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, // (v);.if(1. - x <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, // = 0.000061035156
	0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, // 25).return (v >=
	0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, //  0.) ? 0. : 1.;.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, // const float res 
	0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, // = ((-0.155972/3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, //  * x + (1.56467/
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, // 5) ) * sqrt(1. -
	0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, //  x);.return (v >
	0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, // = 0.) ? res : 1.
	0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //  - res;.}.float 
	0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, // atan2_approx_div
	0x32, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 2PI(const float 
	0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, // y, const float x
	0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ).{.const float 
	0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, // abs_y = abs(y);.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, // const float abs_
	0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, // x = abs(x);.if(a
	0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, // bs_x <= 0.000061
	0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, // 03515625 && abs_
	0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, // y <= 0.000061035
	0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, // 15625).return 0.
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, // ;.const float r 
	0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, // = (abs_x - abs_y
	0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, // ) / (abs_x + abs
	0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _y);.const float
	0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, //  angle = ((x < 0
	0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, // .) ? (3./8.) : (
	0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, // 1./8.)).+ (0.211
	0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // 868 /(2.*3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, // 6433832795) * r 
	0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, // * r - 0.987305 /
	0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, // (2.*3.1415926535
	0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, // 8979323846264338
	0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, // 32795)) * ((x < 
	0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, // 0.) ? -r : r);.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // eturn (y < 0.) ?
	0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, //  -angle : angle;
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, // .}.float asin_ap
	0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // prox_divPI(const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, //  float v).{.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, // t float x = abs(
	0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, // v);.if(1. - x <=
	0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, //  0.0000610351562
	0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, // 5).return (v >= 
	0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, // 0.) ? 0.5 : -0.5
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, // ;.const float re
	0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, // s = ((-0.155972/
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, // 5) * x + (1.5646
	0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, // 7/3.141592653589
	0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, // 7932384626433832
	0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, // 795) ) * sqrt(1.
	0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, //  - x);.return (v
	0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, //  >= 0.) ? 0.5 - 
	0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, // res : -0.5 + res
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, // ;.}.vec2 ray_to_
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, // equirectangular_
	0x75, 0x76, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, // uv(const vec3 ra
	0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, // y).{.return vec2
	0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, // (.0.5 + atan2_ap
	0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, // prox_div2PI(ray.
	0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, // y, ray.x),.acos_
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, // approx_divPI(ray
	0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, // .z));.}.float In
	0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // vsRGB(const floa
	0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, // t color).{.if (c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, // olor <= 0.04045)
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, // .return color * 
	0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, // (1.0/12.92);.els
	0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, // e.return pow(col
	0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, // or * (1.0/1.055)
	0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, //  + (0.055/1.055)
	0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // , 2.4);.}.float 
	0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // InvRec709(const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, // float color).{.i
	0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, // f (color <= 0.08
	0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // 1).return color 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, // * (1.0/4.5);.els
	0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, // e.return pow(col
	0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, // or * (1.0/1.099)
	0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, //  + (0.099/1.099)
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // , 1.0/0.45);.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, // loat InvGamma(co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // nst float color)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, // .{.return InvsRG
	0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // B(color);.}.vec3
	0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  InvGamma(const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // vec3 color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // turn vec3(InvGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, // ma(color.x),InvG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, // amma(color.y),In
	0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, // vGamma(color.z))
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, // ;.}.vec3 InvTone
	0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // Map(const vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // olor).{.const fl
	0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, // oat inv_2bh = 0.
	0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // 5/0.25;.const fl
	0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, // oat bh = 4.0*0.2
	0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 5 - 2.0;.return 
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, // (color - 1.0 + s
	0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // qrt(color*(color
	0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, //  + bh) + 1.0))*i
	0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // nv_2bh;.}.float 
	0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // sRGB(const float
	0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, //  f).{.float s;.i
	0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, // f (f <= 0.003130
	0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, // 8).s = 12.92 * f
	0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, // ;.else.s = 1.055
	0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, //  * pow(f, 1.0/2.
	0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 4) - 0.055;.retu
	0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, // rn s;.}.float Re
	0x63, 0x37, 0x30, 0x39, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // c709(const float
	0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, //  f).{.float s;.i
	0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, // f (f <= 0.018).s
	0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, //  = 4.5 * f;.else
	0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, // .s = 1.099 * pow
	0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, // (f, 0.45) - 0.09
	0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // 9;.return s;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, // loat FBGamma(con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // st float color).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, // {.return sRGB(co
	0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, // lor);.}.vec2 FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, // amma(const vec2 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // color).{.return 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, // vec2(FBGamma(col
	0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, // or.x),FBGamma(co
	0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // lor.y));.}.vec3 
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // FBGamma(const ve
	0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // c3 color).{.retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, // rn vec3(FBGamma(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, // color.x),FBGamma
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // (color.y),FBGamm
	0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // a(color.z));.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, // loat FBToneMap(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, // onst float l).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, // return l * ((l*0
	0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, // .25 + 1.0) / (l 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // + 1.0));.}.vec2 
	0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // FBToneMap(const 
	0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, // vec2 color).{.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, // nst float l = do
	0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, // t(color,vec2(0.1
	0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, // 76204+0.0108109*
	0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, // 0.5,0.812985+0.0
	0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, // 108109*0.5));.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, // turn color * ((l
	0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, // *0.25 + 1.0) / (
	0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // l + 1.0));.}.vec
	0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, // 3 FBToneMap(cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // t vec3 color).{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, // const float l = 
	0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, // dot(color,vec3(0
	0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, // .176204,0.812985
	0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, // ,0.0108109));.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, // turn color * ((l
	0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, // *0.25 + 1.0) / (
	0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // l + 1.0));.}.vec
	0x34, 0x20, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // 4 Additive(const
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, //  vec4 cBase, con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, // st vec4 cBlend, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, // const float perc
	0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, // ent).{.return cB
	0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, // ase + cBlend*per
	0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, // cent;.}.vec3 Scr
	0x65, 0x65, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // een (const vec3 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // cBase, const vec
	0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 3 cBlend).{.retu
	0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // rn 1.0 - (1.0 - 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // cBase) * (1.0 - 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // cBlend);.}.vec4 
	0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // Screen (const ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // c4 cBase, const 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // vec4 cBlend).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, // eturn 1.0 - (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, //  - cBase) * (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, //  - cBlend);.}.ve
	0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, // c3 ScreenHDR (co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, // nst vec3 cBase, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // const vec3 cBlen
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, // d).{.return max(
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, // 1.0 - (1.0 - cBa
	0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, // se) * (1.0 - cBl
	0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, // end), vec3(0.,0.
	0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, // ,0.));.}.vec4 Sc
	0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // reenHDR (const v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, // ec4 cBase, const
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, //  vec4 cBlend).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // return max(1.0 -
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, //  (1.0 - cBase) *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, //  (1.0 - cBlend),
	0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, //  vec4(0.,0.,0.,0
	0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, // .));.}.vec4 Mult
	0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, // iply (const vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, //  cBase, const ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, // c4 cBlend, const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, //  float percent).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, // {.return cBase *
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, //  cBlend*percent;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, // .}.vec4 Overlay 
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, // (const vec4 cBas
	0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // e, const vec4 cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, // lend).{.vec4 cNe
	0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, // w = step(0.5, cB
	0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, // ase);.cNew = mix
	0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, // (cBase*cBlend*2.
	0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, // 0, 1.0-2.0*(1.0-
	0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, // cBase)*(1.0-cBle
	0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // nd), cNew);.retu
	0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // rn cNew;.}.vec4 
	0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, // OverlayHDR (cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, // t vec4 cBase, co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // nst vec4 cBlend)
	0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, // .{.vec4 cNew = s
	0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, // tep(0.5, cBase);
	0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, // .cNew = max(mix(
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, // cBase*cBlend*2.0
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, // , 1.0-2.0*(1.0-c
	0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, // Base)*(1.0-cBlen
	0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // d), cNew), vec4(
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, // 0.,0.,0.,0.));.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // eturn cNew;.}.ve
	0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, // c3 cos_hemispher
	0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // e_sample(const v
	0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // ec2 t).{.const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, // loat phi = t.y *
	0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, //  (2.0*3.14159265
	0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, // 3589793238462643
	0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // 3832795);.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, // float cosTheta =
	0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, //  sqrt(1.0 - t.x)
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, // ;.const float si
	0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, // nTheta = sqrt(t.
	0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, // x);.float sp,cp;
	0x0a, 0x73, 0x69, 0x6e, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x2c, 0x73, 0x70, 0x2c, 0x63, // .sincos(phi,sp,c
	0x70, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // p);.return vec3(
	0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, // cp * sinTheta, c
	0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, // osTheta, sp * si
	0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // nTheta);.}.vec3 
	0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, // rotate_to_vector
	0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // _upper(const vec
	0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // 3 vec, const vec
	0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, // 3 normal).{.if(n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, // ormal.y > -0.999
	0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 99).{.const floa
	0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, // t h = 1.0/(1.0+n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // ormal.y);.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, // float hz = h*nor
	0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // mal.z;.const flo
	0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, // at hzx = hz*norm
	0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // al.x;.return vec
	0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, // 3(.vec.x * (norm
	0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, // al.y+hz*normal.z
	0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // ) + vec.y * norm
	0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, // al.x - vec.z * h
	0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // zx,.vec.y * norm
	0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, // al.y - vec.x * n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, // ormal.x - vec.z 
	0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, // * normal.z,.vec.
	0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, // y * normal.z - v
	0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, // ec.x * hzx + vec
	0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, // .z * (normal.y+h
	0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // *normal.x*normal
	0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, // .x));.}.else ret
	0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, // urn -vec;.}.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, // orm mat4 matView
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, // ;.uniform mat4 m
	0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // atWorldView;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, // form mat4 matWor
	0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x3b, 0x0a, 0x75, // ldViewInverse;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, // niform mat4 matW
	0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, // orldViewProj;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, // iform mat4 matPr
	0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, // oj;.uniform samp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, // ler2D tex_ball_c
	0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, // olor;.uniform sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x3b, // mpler2D tex_env;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .uniform sampler
	0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, // 2D tex_diffuse_e
	0x6e, 0x76, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, // nv;.uniform samp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, // ler2D tex_ball_d
	0x65, 0x63, 0x61, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, // ecal;.uniform sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // mpler2D tex_ball
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // _playfield;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x62, 0x61, 0x73, 0x69, 0x63, // orm vec4 u_basic
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // _shade_mode;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, // form vec4 ballLi
	0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x5d, 0x3b, 0x0a, 0x75, // ghtPos[2 + 8];.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, // niform vec4 ball
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x32, 0x20, // LightEmission[2 
	0x2b, 0x20, 0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // + 8];.uniform ve
	0x63, 0x34, 0x20, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, // c4 cAmbient_Ligh
	0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // tRange;.uniform 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, // vec4 fenvEmissio
	0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x3b, // nScale_TexWidth;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x44, // .uniform vec4 fD
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, // isableLighting_t
	0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // op_below;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x53, 0x63, 0x61, // m vec4 fSceneSca
	0x6c, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // le;.uniform vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x0a, 0x75, 0x6e, //  cBase_Alpha;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, // iform vec4 Rough
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, // ness_WrapL_Edge_
	0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // Thickness;.float
	0x20, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, //  GeometricOpacit
	0x79, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, // y(const float Nd
	0x6f, 0x74, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // otV, const float
	0x20, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, //  alpha, const fl
	0x6f, 0x61, 0x74, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2c, 0x20, 0x63, 0x6f, // oat blending, co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, // nst float thickn
	0x65, 0x73, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // ess).{.const flo
	0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x56, // at x = abs(NdotV
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, // );.const float g
	0x20, 0x3d, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x2a, 0x20, 0x28, 0x31, //  = blending * (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x78, 0x20, 0x2f, 0x20, 0x28, 0x78, 0x20, 0x2a, 0x20, 0x28, // .0 - (x / (x * (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, // 1.0 - thickness)
	0x20, 0x2b, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, 0x29, 0x29, 0x3b, //  + thickness)));
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x61, 0x6c, 0x70, 0x68, // .return mix(alph
	0x61, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x67, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // a, 1.0, g);.}.ve
	0x63, 0x33, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, // c3 FresnelSchlic
	0x6b, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, // k(const vec3 spe
	0x63, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4c, // c, const float L
	0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // dotH, const floa
	0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // t edge).{.return
	0x20, 0x73, 0x70, 0x65, 0x63, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x65, 0x64, //  spec + (vec3(ed
	0x67, 0x65, 0x2c, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x65, 0x64, 0x67, 0x65, 0x29, 0x20, 0x2d, 0x20, // ge,edge,edge) - 
	0x73, 0x70, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x31, 0x2e, 0x30, 0x20, // spec) * pow(1.0 
	0x2d, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x35, 0x2e, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // - LdotH, 5.);.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, // vec3 DoPointLigh
	0x74, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, // t(const vec3 pos
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, // , const vec3 N, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x63, 0x6f, // const vec3 V, co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // nst vec3 diffuse
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, // , const vec3 glo
	0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ssy, const float
	0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, //  edge, const flo
	0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x2c, 0x20, // at glossyPower, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x2c, 0x20, 0x63, 0x6f, 0x6e, // const int i, con
	0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, // st bool is_metal
	0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, // ).{.const vec3 l
	0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x20, 0x28, 0x6d, // ightDir = ( ( (m
	0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, // atView) * (vec4(
	0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x69, 0x5d, 0x2e, // ballLightPos[i].
	0x78, 0x79, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, // xyz, 1.0)) ) ).x
	0x79, 0x7a, 0x20, 0x2d, 0x20, 0x70, 0x6f, 0x73, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // yz - pos;.const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x4c, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, // vec3 L = normali
	0x7a, 0x65, 0x28, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x29, 0x3b, 0x0a, 0x63, 0x6f, // ze(lightDir);.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, // nst float NdotL 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x20, 0x4c, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, // = dot(N, L);.vec
	0x33, 0x20, 0x4f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, // 3 Out = vec3(0.0
	0x2c, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, // ,0.0,0.0);.if (!
	0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x4e, 0x64, 0x6f, // is_metal && (Ndo
	0x74, 0x4c, 0x20, 0x2b, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, // tL + Roughness_W
	0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, // rapL_Edge_Thickn
	0x65, 0x73, 0x73, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x4f, 0x75, // ess.y > 0.0)).Ou
	0x74, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x28, 0x28, // t = diffuse * ((
	0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x2b, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, // NdotL + Roughnes
	0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, // s_WrapL_Edge_Thi
	0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x73, 0x71, 0x72, 0x28, // ckness.y) / sqr(
	0x31, 0x2e, 0x30, 0x2b, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, // 1.0+Roughness_Wr
	0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, // apL_Edge_Thickne
	0x73, 0x73, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, // ss.y));.if (Ndot
	0x4c, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // L > 0.0).{.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x48, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, //  vec3 H = normal
	0x69, 0x7a, 0x65, 0x28, 0x4c, 0x20, 0x2b, 0x20, 0x56, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // ize(L + V);.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, // t float NdotH = 
	0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // dot(N, H);.const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, //  float LdotH = d
	0x6f, 0x74, 0x28, 0x4c, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // ot(L, H);.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x56, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, 0x6f, // float VdotH = do
	0x74, 0x28, 0x56, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x4e, 0x64, // t(V, H);.if ((Nd
	0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x4c, // otH > 0.0) && (L
	0x64, 0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, // dotH > 0.0) && (
	0x56, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x4f, 0x75, // VdotH > 0.0)).Ou
	0x74, 0x20, 0x2b, 0x3d, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x6c, // t += FresnelSchl
	0x69, 0x63, 0x6b, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x4c, 0x64, 0x6f, 0x74, // ick(glossy, Ldot
	0x48, 0x2c, 0x20, 0x65, 0x64, 0x67, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x28, 0x67, 0x6c, // H, edge) * (((gl
	0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // ossyPower + 1.0)
	0x20, 0x2f, 0x20, 0x28, 0x38, 0x2e, 0x30, 0x2a, 0x56, 0x64, 0x6f, 0x74, 0x48, 0x29, 0x29, 0x20, //  / (8.0*VdotH)) 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x67, 0x6c, 0x6f, // * pow(NdotH, glo
	0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x63, 0x6f, // ssyPower));.}.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, // nst float sqrl_l
	0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x6c, 0x69, // ightDir = dot(li
	0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2c, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x29, // ghtDir,lightDir)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x3d, // ;.float fAtten =
	0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x73, 0x71, 0x72, //  clamp(1.0 - sqr
	0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2a, 0x73, 0x71, 0x72, 0x6c, 0x5f, // l_lightDir*sqrl_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2f, 0x28, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, // lightDir/(cAmbie
	0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, // nt_LightRange.w*
	0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, // cAmbient_LightRa
	0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, // nge.w*cAmbient_L
	0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, // ightRange.w*cAmb
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, // ient_LightRange.
	0x77, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x66, // w), 0.0, 1.0);.f
	0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x3d, 0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x2a, 0x66, // Atten = fAtten*f
	0x41, 0x74, 0x74, 0x65, 0x6e, 0x2f, 0x28, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, // Atten/(sqrl_ligh
	0x74, 0x44, 0x69, 0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, // tDir + 1.0);.vec
	0x33, 0x20, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x67, 0x6c, 0x6f, 0x73, // 3 ambient = glos
	0x73, 0x79, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, // sy;.if (!is_meta
	0x6c, 0x29, 0x0a, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x2b, 0x3d, 0x20, 0x64, 0x69, // l).ambient += di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // ffuse;.const vec
	0x33, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x20, 0x3d, 0x20, 0x4f, 0x75, 0x74, 0x20, 0x2a, // 3 result = Out *
	0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, //  ballLightEmissi
	0x6f, 0x6e, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x66, 0x41, 0x74, 0x74, // on[i].xyz * fAtt
	0x65, 0x6e, 0x20, 0x2b, 0x20, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x2a, 0x20, 0x63, // en + ambient * c
	0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, // Ambient_LightRan
	0x67, 0x65, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x44, 0x69, 0x73, // ge.xyz;.if (fDis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, // ableLighting_top
	0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, // _below.x != 0.0)
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x72, 0x65, 0x73, 0x75, // .return mix(resu
	0x6c, 0x74, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x66, 0x44, 0x69, 0x73, 0x61, // lt,diffuse,fDisa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, // bleLighting_top_
	0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, // below.x);.else.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, // eturn result;.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, // vec3 DoEnvmapDif
	0x66, 0x75, 0x73, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // fuse(const vec3 
	0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, // N, const vec3 di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // ffuse).{.const v
	0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // ec3 env = textur
	0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // eLod(tex_diffuse
	0x5f, 0x65, 0x6e, 0x76, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, // _env, ray_to_equ
	0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, // irectangular_uv(
	0x4e, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x72, 0x65, // N), 0.0).xyz;.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x65, // turn diffuse * e
	0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, // nv*fenvEmissionS
	0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, // cale_TexWidth.x;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, // .}.vec3 DoEnvmap
	0x47, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // Glossy(const vec
	0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // 3 N, const vec3 
	0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, 0x75, // V, const vec2 Ru
	0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, // v, const vec3 gl
	0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ossy, const floa
	0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x29, 0x0a, 0x7b, // t glossyPower).{
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x69, 0x70, // .const float mip
	0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x66, 0x65, 0x6e, 0x76, //  = min(log2(fenv
	0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, // EmissionScale_Te
	0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // xWidth.y * sqrt(
	0x33, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x35, 0x2a, 0x6c, 0x6f, 0x67, 0x32, // 3.0)) - 0.5*log2
	0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x2b, 0x20, 0x31, // (glossyPower + 1
	0x2e, 0x30, 0x29, 0x2c, 0x20, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, // .0), log2(fenvEm
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, // issionScale_TexW
	0x69, 0x64, 0x74, 0x68, 0x2e, 0x79, 0x29, 0x2d, 0x31, 0x2e, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // idth.y)-1.);.con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, // st vec3 env = te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, // xtureLod(tex_env
	0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x6d, 0x69, 0x70, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // , Ruv, mip).xyz;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, // .return glossy *
	0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, //  env*fenvEmissio
	0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, // nScale_TexWidth.
	0x78, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, // x;.}.vec3 DoEnvm
	0x61, 0x70, 0x32, 0x6e, 0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // ap2ndLayer(const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x31, 0x73, 0x74, 0x4c, 0x61, //  vec3 color1stLa
	0x79, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // yer, const vec3 
	0x70, 0x6f, 0x73, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // pos, const vec3 
	0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, // N, const vec3 V,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, //  const float Ndo
	0x74, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, // tV, const vec2 R
	0x75, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, // uv, const vec3 s
	0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // pecular).{.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x77, 0x20, 0x3d, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, //  vec3 w = Fresne
	0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, 0x6b, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, // lSchlick(specula
	0x72, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, // r, NdotV, Roughn
	0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, // ess_WrapL_Edge_T
	0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // hickness.z);.con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, // st vec3 env = te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, // xtureLod(tex_env
	0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // , Ruv, 0.0).xyz;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .return mix(colo
	0x72, 0x31, 0x73, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2c, 0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, // r1stLayer, env*f
	0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, // envEmissionScale
	0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x2c, 0x20, 0x77, 0x29, 0x3b, // _TexWidth.x, w);
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, // .}.vec3 lightLoo
	0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, // p(const vec3 pos
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // , vec3 N, const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, // vec3 V, vec3 dif
	0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // fuse, vec3 gloss
	0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, // y, const vec3 sp
	0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // ecular, const fl
	0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // oat edge, const 
	0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x7b, // bool is_metal).{
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, // .vec3 color = ve
	0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x66, // c3_splat(0.0);.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // loat NdotV = dot
	0x28, 0x4e, 0x2c, 0x56, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x56, // (N,V);.if (NdotV
	0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x4e, 0x20, 0x3d, 0x20, 0x2d, 0x4e, //  < 0.0).{.N = -N
	0x3b, 0x0a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x2d, 0x4e, 0x64, 0x6f, 0x74, 0x56, // ;.NdotV = -NdotV
	0x3b, 0x0a, 0x7d, 0x0a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, // ;.}.NdotV = min(
	0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // NdotV, 1.0);.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // st float diffuse
	0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // Max = max(diffus
	0x65, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, // e.x,max(diffuse.
	0x79, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, // y,diffuse.z));.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // onst float gloss
	0x79, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, // yMax = max(gloss
	0x79, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x79, // y.x,max(glossy.y
	0x2c, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // ,glossy.z));.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, // st float specula
	0x72, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, // rMax = max(specu
	0x6c, 0x61, 0x72, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, // lar.x,max(specul
	0x61, 0x72, 0x2e, 0x79, 0x2c, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x7a, 0x29, // ar.y,specular.z)
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // );.const float s
	0x75, 0x6d, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, // um = diffuseMax 
	0x2b, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3b, 0x0a, 0x69, 0x66, // + glossyMax ;.if
	0x20, 0x28, 0x73, 0x75, 0x6d, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x26, 0x26, 0x20, 0x66, //  (sum > 1.0 && f
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, // DisableLighting_
	0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x31, 0x2e, // top_below.x < 1.
	0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0).{.const float
	0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x73, 0x75, //  invsum = 1.0/su
	0x6d, 0x3b, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, // m;.diffuse *= in
	0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, 0x3d, 0x20, // vsum;.glossy *= 
	0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x21, // invsum;.}.if ((!
	0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, // is_metal && (dif
	0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, // fuseMax > 0.0)) 
	0x7c, 0x7c, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, // || (glossyMax > 
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x44, 0x69, 0x73, // 0.0)).{.if (fDis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, // ableLighting_top
	0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x29, // _below.x == 1.0)
	0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, // .color += float(
	0x32, 0x29, 0x20, 0x2a, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x3b, 0x0a, 0x65, 0x6c, // 2) * diffuse;.el
	0x73, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, // se for (int i = 
	0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x32, 0x3b, 0x20, 0x69, 0x2b, 0x2b, 0x29, 0x0a, 0x63, // 0; i < 2; i++).c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, // olor += DoPointL
	0x69, 0x67, 0x68, 0x74, 0x28, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, // ight(pos, N, V, 
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, // diffuse, glossy,
	0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, //  edge, Roughness
	0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, // _WrapL_Edge_Thic
	0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x2c, 0x20, 0x69, 0x2c, 0x20, 0x69, 0x73, 0x5f, 0x6d, // kness.x, i, is_m
	0x65, 0x74, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, // etal);.}.if (!is
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, // _metal && (diffu
	0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x63, 0x6f, // seMax > 0.0)).co
	0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, // lor += DoEnvmapD
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, 0x20, 0x28, 0x28, 0x20, 0x28, 0x20, 0x28, 0x76, 0x65, // iffuse( (( ( (ve
	0x63, 0x34, 0x28, 0x4e, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, // c4(N,0.0)) * (ma
	0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, // tView) ) ).xyz),
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, //  diffuse);.if ((
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, // glossyMax > 0.0)
	0x20, 0x7c, 0x7c, 0x20, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, //  || (specularMax
	0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, //  > 0.0)).{.vec3 
	0x52, 0x20, 0x3d, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x29, 0x2a, // R = (2.0*NdotV)*
	0x4e, 0x20, 0x2d, 0x20, 0x56, 0x3b, 0x0a, 0x52, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x20, 0x28, 0x20, // N - V;.R = (( ( 
	0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x52, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, // (vec4(R,0.0)) * 
	0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, // (matView) ) ).xy
	0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, // z);.const vec2 R
	0x75, 0x76, 0x20, 0x3d, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, // uv = ray_to_equi
	0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x52, // rectangular_uv(R
	0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, // );.if (glossyMax
	0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, //  > 0.0).color +=
	0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x47, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x28, //  DoEnvmapGlossy(
	0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // N, V, Ruv, gloss
	0x79, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, // y, Roughness_Wra
	0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, // pL_Edge_Thicknes
	0x73, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, // s.x);.if (specul
	0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, // arMax > 0.0).col
	0x6f, 0x72, 0x20, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x32, 0x6e, 0x64, // or = DoEnvmap2nd
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x70, 0x6f, 0x73, // Layer(color, pos
	0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x52, // , N, V, NdotV, R
	0x75, 0x76, 0x2c, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x29, 0x3b, 0x0a, 0x7d, // uv, specular);.}
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3b, 0x0a, // .return color ;.
	0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, // }.uniform vec4 i
	0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, // nvTableRes_refle
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // ction;.uniform v
	0x65, 0x63, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // ec4 w_h_disableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x61, // ighting;.vec3 ba
	0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, // llLightLoop(cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // t vec3 pos, vec3
	0x20, 0x4e, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, //  N, vec3 V, vec3
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, //  diffuse, vec3 g
	0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // lossy, const vec
	0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // 3 specular, cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, // t float edge, co
	0x6e, 0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, // nst bool is_meta
	0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // l).{.const float
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, //  diffuseMax = ma
	0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, // x(diffuse.x,max(
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x79, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // diffuse.y,diffus
	0x65, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // e.z));.const flo
	0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, // at glossyMax = m
	0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, // ax(glossy.x,max(
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x79, 0x2c, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, // glossy.y,glossy.
	0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // z));.const float
	0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, //  specularMax = m
	0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x78, 0x2c, 0x6d, 0x61, // ax(specular.x,ma
	0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x79, 0x2c, 0x73, 0x70, 0x65, // x(specular.y,spe
	0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // cular.z));.const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, //  float sum = dif
	0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x2b, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, // fuseMax + glossy
	0x4d, 0x61, 0x78, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x73, 0x75, 0x6d, 0x20, 0x3e, 0x20, 0x31, 0x2e, // Max;.if(sum > 1.
	0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0).{.const float
	0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x73, 0x75, //  invsum = 1.0/su
	0x6d, 0x3b, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, // m;.diffuse *= in
	0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, 0x3d, 0x20, // vsum;.glossy *= 
	0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // invsum;.}.vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, // olor = vec3(0.0,
	0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x28, //  0.0, 0.0);.if((
	0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, // !is_metal && (di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // ffuseMax > 0.0))
	0x20, 0x7c, 0x7c, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, //  || (glossyMax >
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x66, 0x6f, 0x72, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, //  0.0)).for(int i
	0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x3b, //  = 0; i < 2 + 8;
	0x20, 0x69, 0x2b, 0x2b, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, //  i++).color += D
	0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x70, 0x6f, 0x73, 0x2c, // oPointLight(pos,
	0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, //  N, V, diffuse, 
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x52, 0x6f, // glossy, edge, Ro
	0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, // ughness_WrapL_Ed
	0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x2c, 0x20, // ge_Thickness.x, 
	0x69, 0x2c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x69, 0x66, // i, is_metal);.if
	0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, // (!is_metal && (d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, // iffuseMax > 0.0)
	0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, // ).color += DoEnv
	0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // mapDiffuse(norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, // lize(( (matView)
	0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x4e, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, //  * (vec4(N, 0.0)
	0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // ) ).xyz), diffus
	0x65, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, // e);.if(specularM
	0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // ax > 0.0).color 
	0x2b, 0x3d, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x3b, 0x0a, 0x72, 0x65, 0x74, // += specular;.ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, 0x69, // urn color;.}.voi
	0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // d main().{.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, //  vec3 V = normal
	0x69, 0x7a, 0x65, 0x28, 0x20, 0x2d, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, // ize( -v_worldPos
	0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // .xyz);.const vec
	0x33, 0x20, 0x4e, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // 3 N = normalize(
	0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, // v_normal.xyz);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x52, 0x20, 0x3d, 0x20, 0x72, 0x65, // onst vec3 R = re
	0x66, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x56, 0x2c, 0x20, 0x4e, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, // flect(V, N);.vec
	0x33, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // 3 ballImageColor
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, // ;.const float ed
	0x67, 0x65, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x56, 0x2c, 0x20, 0x52, 0x29, 0x3b, 0x0a, // ge = dot(V, R);.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x6f, 0x64, 0x20, // const float lod 
	0x3d, 0x20, 0x28, 0x65, 0x64, 0x67, 0x65, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x36, 0x29, 0x20, 0x3f, // = (edge > 0.6) ?
	0x20, 0x65, 0x64, 0x67, 0x65, 0x2a, 0x28, 0x36, 0x2e, 0x30, 0x2a, 0x31, 0x2e, 0x30, 0x2f, 0x30, //  edge*(6.0*1.0/0
	0x2e, 0x34, 0x29, 0x2d, 0x28, 0x36, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x36, 0x2f, 0x30, 0x2e, 0x34, // .4)-(6.0*0.6/0.4
	0x29, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // ) : 0.0;.const v
	0x65, 0x63, 0x33, 0x20, 0x72, 0x76, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x20, 0x28, 0x76, 0x65, 0x63, // ec3 rv = (( (vec
	0x34, 0x28, 0x2d, 0x52, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, // 4(-R,0.0)) * (ma
	0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, // tView) ).xyz);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x20, 0x3d, 0x20, 0x72, // onst vec2 uv = r
	0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, // ay_to_equirectan
	0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x72, 0x76, 0x29, 0x3b, 0x0a, 0x62, 0x61, // gular_uv(rv);.ba
	0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x74, // llImageColor = t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, // extureLod(tex_ba
	0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x75, 0x76, 0x2c, 0x20, 0x6c, 0x6f, // ll_color, uv, lo
	0x64, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // d).rgb;.const ve
	0x63, 0x34, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x20, 0x3d, // c4 decalColorT =
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, //  texture(tex_bal
	0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // l_decal, v_texco
	0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x65, 0x63, 0x61, // ord0);.vec3 deca
	0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, // lColor = decalCo
	0x6c, 0x6f, 0x72, 0x54, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, // lorT.rgb;.ballIm
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, // ageColor = Scree
	0x6e, 0x48, 0x44, 0x52, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, // nHDR(ballImageCo
	0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // lor, decalColor)
	0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, // ;.if ((w_h_disab
	0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x7a, 0x20, 0x21, 0x3d, 0x20, // leLighting.z != 
	0x30, 0x2e, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, // 0.)).{.gl_FragCo
	0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, // lor = vec4(ballI
	0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, // mageColor,cBase_
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x61, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // Alpha.a);.return
	0x3b, 0x0a, 0x7d, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, // ;.}.ballImageCol
	0x6f, 0x72, 0x20, 0x2a, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, // or *= 0.5*fenvEm
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, // issionScale_TexW
	0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // idth.x;.const ve
	0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, // c3 playfield_nor
	0x6d, 0x61, 0x6c, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, // mal = ( (matWorl
	0x64, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // dView) * (float4
	0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x31, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x20, 0x29, // (0.,0.,1.,0.)) )
	0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // .xyz;.const floa
	0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x70, 0x6c, // t NdotR = dot(pl
	0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, // ayfield_normal, 
	0x52, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, // R);.const vec3 p
	0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x20, // layfield_p0 = ( 
	0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, // (matWorldView) *
	0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x20, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, //  (vec4( 0.,0.,0.
	0x2c, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, // ,1.0)) ).xyz;.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x20, 0x3d, 0x20, 0x64, 0x6f, // nst float t = do
	0x74, 0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // t(playfield_norm
	0x61, 0x6c, 0x2c, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, // al, v_worldPos.x
	0x79, 0x7a, 0x20, 0x2d, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, // yz - playfield_p
	0x30, 0x29, 0x20, 0x2f, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // 0) / NdotR;.cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, // t vec3 playfield
	0x5f, 0x68, 0x69, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, // _hit = v_worldPo
	0x73, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x74, 0x20, 0x2a, 0x20, 0x52, 0x3b, 0x0a, 0x63, // s.xyz - t * R;.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x20, 0x3d, // onst vec4 proj =
	0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x29, 0x20, 0x2a, 0x20, 0x28, //  ( (matProj) * (
	0x76, 0x65, 0x63, 0x34, 0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x68, // vec4(playfield_h
	0x69, 0x74, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // it, 1.0)) );.con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x70, 0x20, 0x3d, 0x20, 0x76, 0x65, // st vec2 uvp = ve
	0x63, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x76, // c2(0.5, 0.5) + v
	0x65, 0x63, 0x32, 0x28, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x78, 0x2c, 0x20, 0x2d, 0x70, 0x72, 0x6f, // ec2(proj.x, -pro
	0x6a, 0x2e, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2f, 0x20, 0x70, 0x72, // j.y) * (0.5 / pr
	0x6f, 0x6a, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // oj.w);.const vec
	0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // 3 playfieldColor
	0x20, 0x3d, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x28, 0x0a, 0x74, 0x65, 0x78, 0x74, //  = 0.25 * (.text
	0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, // ure(tex_ball_pla
	0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, // yfield, uvp + ve
	0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, // c2(w_h_disableLi
	0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x72, // ghting.x, 0.)).r
	0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, // gb.+ texture(tex
	0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, // _ball_playfield,
	0x20, 0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, //  uvp - vec2(w_h_
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, // disableLighting.
	0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, // x, 0.)).rgb.+ te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, // xture(tex_ball_p
	0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, // layfield, uvp + 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, // vec2(0., w_h_dis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, // ableLighting.y))
	0x2e, 0x72, 0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, // .rgb.+ texture(t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // ex_ball_playfiel
	0x64, 0x2c, 0x20, 0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, // d, uvp - vec2(0.
	0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, // , w_h_disableLig
	0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x29, 0x3b, // hting.y)).rgb.);
	0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x28, 0x75, 0x76, 0x70, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x30, // .if (!(uvp.x < 0
	0x2e, 0x20, 0x7c, 0x7c, 0x20, 0x75, 0x76, 0x70, 0x2e, 0x78, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x20, // . || uvp.x > 1. 
	0x7c, 0x7c, 0x20, 0x75, 0x76, 0x70, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x20, 0x7c, 0x7c, // || uvp.y < 0. ||
	0x20, 0x75, 0x76, 0x70, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x29, 0x0a, 0x26, 0x26, 0x20, //  uvp.y > 1.).&& 
	0x21, 0x28, 0x74, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x62, 0x61, // !(t <= 0.)).{.ba
	0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x6c, // llImageColor = l
	0x65, 0x72, 0x70, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, // erp(ballImageCol
	0x6f, 0x72, 0x2c, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6c, // or, playfieldCol
	0x6f, 0x72, 0x2c, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, // or, smoothstep(0
	0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x35, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x29, // .0, 0.15, NdotR)
	0x20, 0x2a, 0x20, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, //  * invTableRes_r
	0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // eflection.z);.}.
	0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, // ballImageColor =
	0x20, 0x6d, 0x69, 0x6e, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, //  min(ballImageCo
	0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x35, 0x2e, 0x2c, // lor, float3(15.,
	0x20, 0x31, 0x35, 0x2e, 0x2c, 0x20, 0x31, 0x35, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, //  15., 15.));.vec
	0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x3d, 0x20, 0x63, 0x42, 0x61, 0x73, // 3 diffuse = cBas
	0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x2a, 0x30, 0x2e, 0x30, 0x37, // e_Alpha.rgb*0.07
	0x35, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, // 5;.const vec3 gl
	0x6f, 0x73, 0x73, 0x79, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, // ossy = max(diffu
	0x73, 0x65, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, // se*2.0, vec3(0.1
	0x2c, 0x30, 0x2e, 0x31, 0x2c, 0x30, 0x2e, 0x31, 0x29, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, // ,0.1,0.1));.vec3
	0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x20, 0x3d, 0x20, 0x62, 0x61, 0x6c, 0x6c, //  specular = ball
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x61, // ImageColor * cBa
	0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x67, 0x6c, // se_Alpha.rgb;.gl
	0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x72, 0x67, 0x62, 0x20, 0x3d, // _FragColor.rgb =
	0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x76, //  ballLightLoop(v
	0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x4e, // _worldPos.xyz, N
	0x2c, 0x20, 0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, // , V, diffuse, gl
	0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, // ossy, specular, 
	0x31, 0x2e, 0x30, 0x2c, 0x20, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, // 1.0, false);.gl_
	0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x61, 0x20, 0x3d, 0x20, 0x63, 0x42, // FragColor.a = cB
	0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x61, 0x3b, 0x0a, 0x7d, 0x0a, 0x00, // ase_Alpha.a;.}..
};
static const uint8_t fs_ball_equirectangular_decal_dx11[8156] =
{
	0x46, 0x53, 0x48, 0x0b, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x07, 0x6d, // FSH....l.......m
	0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x14, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, // atView..........
	0x0c, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x14, 0x00, 0x40, // .matWorldView..@
	0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x14, // ........matProj.
	0x00, 0x80, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, // ..........ballLi
	0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x0a, 0xc0, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, // ghtPos..........
	0x11, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, // .ballLightEmissi
	0x6f, 0x6e, 0x12, 0x0a, 0x60, 0x01, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x63, 0x41, 0x6d, // on..`........cAm
	0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, // bient_LightRange
	0x12, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x65, 0x6e, 0x76, 0x45, // ...........fenvE
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, // missionScale_Tex
	0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x00, 0x10, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // Width...........
	0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, // fDisableLighting
	0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x12, 0x00, 0x20, 0x02, 0x01, 0x00, // _top_below.. ...
	0x00, 0x00, 0x00, 0x00, 0x0b, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, // .....cBase_Alpha
	0x12, 0x00, 0x30, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x52, 0x6f, 0x75, 0x67, 0x68, // ..0........Rough
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, // ness_WrapL_Edge_
	0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x00, 0x40, 0x02, 0x01, 0x00, 0x00, // Thickness..@....
	0x00, 0x00, 0x00, 0x16, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, // ....invTableRes_
	0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x00, 0x50, 0x02, 0x01, 0x00, // reflection..P...
	0x00, 0x00, 0x00, 0x00, 0x13, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // .....w_h_disable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x00, 0x60, 0x02, 0x01, 0x00, 0x00, 0x00, // Lighting..`.....
	0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // ...tex_ball_colo
	0x72, 0x30, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, // r0..........tex_
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x30, 0x01, 0x02, 0x00, 0x01, // diffuse_env0....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, // ......tex_ball_d
	0x65, 0x63, 0x61, 0x6c, 0x30, 0x01, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x74, // ecal0..........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // ex_ball_playfiel
	0x64, 0x30, 0x01, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, // d0..........tex_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x01, 0x00, 0x00, 0x01, 0x00, // ball_color0.....
	0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // .....tex_diffuse
	0x5f, 0x65, 0x6e, 0x76, 0x30, 0x01, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, // _env0..........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x30, 0x01, 0x03, // ex_ball_decal0..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // ........tex_ball
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x30, 0x01, 0x04, 0x00, 0x01, 0x00, // _playfield0.....
	0x00, 0x00, 0x00, 0x00, 0xa0, 0x1d, 0x00, 0x00, 0x44, 0x58, 0x42, 0x43, 0xb3, 0x80, 0xe6, 0x87, // ........DXBC....
	0xc4, 0xe4, 0x22, 0xe5, 0xe8, 0xe6, 0x2e, 0x5c, 0xd9, 0x5a, 0x57, 0x11, 0x01, 0x00, 0x00, 0x00, // .."......ZW.....
	0xa0, 0x1d, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, // ........,.......
	0xec, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x4e, 0x84, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // ....ISGN........
	0x08, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ....h...........
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, // ............t...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x07, 0x07, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....{...........
	0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, // ............{...
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ................
	0x07, 0x07, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, // ....SV_POSITION.
	0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, // NORMAL.TEXCOORD.
	0x4f, 0x53, 0x47, 0x4e, 0x2c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, // OSGN,...........
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, //  ...............
	0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, // ........SV_TARGE
	0x54, 0x00, 0xab, 0xab, 0x53, 0x48, 0x45, 0x58, 0xac, 0x1c, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, // T...SHEX....P...
	0x2b, 0x07, 0x00, 0x00, 0x6a, 0x28, 0x00, 0x01, 0x59, 0x08, 0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, // +...j(..Y...F. .
	0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, // ....'...Z....`..
	0x00, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....Z....`......
	0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, // Z....`......Z...
	0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, // .`......X....p..
	0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, // ....UU..X....p..
	0x02, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, // ....UU..X....p..
	0x03, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, // ....UU..X....p..
	0x04, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x72, 0x10, 0x10, 0x00, // ....UU..b...r...
	0x01, 0x00, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x32, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....b...2.......
	0x62, 0x10, 0x00, 0x03, 0x72, 0x10, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, // b...r.......e...
	0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x02, 0x0b, 0x00, 0x00, 0x00, // . ......h.......
	0x10, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x80, // ............F...
	0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // A.......F...A...
	0x03, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....D...........
	0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, // ........8...r...
	0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x80, // ............F...
	0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // A...............
	0x00, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, // ....F.......F...
	0x01, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....D...........
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // :.......8...r...
	0x01, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, // ............F...
	0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // F.......F.......
	0x00, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, // ....:.......2...
	0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // r.......F.......
	0xf6, 0x0f, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....A.......F...
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // F.......F.......
	0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // 1............@..
	0x9a, 0x99, 0x19, 0x3f, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, // ...?:.......2...
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........:.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x70, 0x41, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x10, 0xc1, // .@....pA.@......
	0x01, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x09, // ....:...........
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // ........F...A...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....F. .........
	0x10, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, // ............F...
	0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // A.......F. .....
	0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // F...A.......F. .
	0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x08, 0x22, 0x00, 0x10, 0x00, // ............"...
	0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, 0x3a, 0x00, 0x10, 0x80, // .....@.....8:...
	0x81, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x08, 0x42, 0x00, 0x10, 0x00, // ............B...
	0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, 0x3a, 0x00, 0x10, 0x80, // .....@.....8:...
	0x81, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, // ............"...
	0x03, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, // ....*...........
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x42, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ........B.......
	0x3a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x80, // :...........:...
	0xc1, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, // ................
	0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ....:...........
	0x3a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, // :...............
	0x42, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // B.......*.......
	0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // :.......1.......
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....:........@..
	0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....7...........
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x3e, // :........@.....>
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x38, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, // .@.....>8.......
	0x04, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // ....*.......*...
	0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ....2...........
	0x0a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0xd0, 0x1d, 0x0a, 0x3d, // .........@.....=
	0x01, 0x40, 0x00, 0x00, 0xdc, 0xe7, 0x20, 0xbe, 0x37, 0x00, 0x00, 0x0a, 0x82, 0x00, 0x10, 0x00, // .@.... .7.......
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x80, // ....:.......*...
	0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // A.......*.......
	0x32, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // 2...............
	0x04, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ....:.......:...
	0x03, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....1...........
	0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // :........@......
	0x37, 0x00, 0x00, 0x0a, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 7...........:...
	0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ....:...A.......
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // :...............
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....:........@..
	0x00, 0x00, 0x00, 0x3f, 0x37, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ...?7...........
	0x1a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, // .........@.....?
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, // :...............
	0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0xc1, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ................
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x1d, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // .@.....?........
	0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // .............@..
	0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....7...".......
	0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // :........@......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x31, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, // .@.....?1...B...
	0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, 0x3a, 0x00, 0x10, 0x00, // .....@.....8:...
	0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x12, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....2...........
	0x0a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // .............@..
	0x1a, 0x5b, 0x4b, 0xbd, 0x01, 0x40, 0x00, 0x00, 0x66, 0x00, 0xff, 0x3e, 0x4b, 0x00, 0x00, 0x05, // .[K..@..f..>K...
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........:.......
	0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 8...........:...
	0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, // ............2...
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // ............A...
	0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....:........@..
	0x00, 0x00, 0x80, 0x3f, 0x37, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ...?7...........
	0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // :.......:.......
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, // :.......7..."...
	0x04, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ....*.......:...
	0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, // ............H...
	0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....CU..r.......
	0x46, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // F.......F~......
	0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // .`......:.......
	0x45, 0x00, 0x00, 0x8b, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, // E.......CU..r...
	0x04, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, // ....F.......F~..
	0x03, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, // .....`..........
	0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // r.......F...A...
	0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, // .....@.....?...?
	0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x72, 0x00, 0x10, 0x00, // ...?........r...
	0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // ....F...A.......
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, // .@.....?...?...?
	0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0d, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....2...r.......
	0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // F...A.......F...
	0x04, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, // .....@.....?...?
	0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, // ...?....4...r...
	0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // ....F........@..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x39, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x80, 0x20, 0x00, // 9...........*. .
	0x00, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....&....@......
	0x1f, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, // ....:.......6...
	0x82, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // . ......:. .....
	0x23, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x72, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // #...6...r ......
	0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x01, 0x15, 0x00, 0x00, 0x01, // F.......>.......
	0x38, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x00, // 8............. .
	0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, // ....!....@.....?
	0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // 8...r...........
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x08, // ....F...........
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // ........F. .....
	0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, // ....F...........
	0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x82, 0x20, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, // F. .A...........
	0x10, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // ............F. .
	0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ........F.......
	0x0e, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, // ....:.......2...
	0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // r...........A...
	0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, // ....F.......F...
	0x03, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ....8...r.......
	0x56, 0x05, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x83, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // V.......F. .....
	0x09, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0xb2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....2...........
	0x46, 0x8c, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, // F. .............
	0x02, 0x00, 0x00, 0x00, 0x46, 0x08, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, // ....F.......2...
	0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x83, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // r.......F. .....
	0x0a, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x03, 0x10, 0x00, // ............F...
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........r.......
	0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x83, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // F.......F. .....
	0x0b, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........B.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x2a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // .@.....?*.......
	0x36, 0x00, 0x00, 0x06, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, // 6...............
	0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x32, 0x00, 0x10, 0x00, // A.......8...2...
	0x04, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x10, 0x00, // ................
	0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x32, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // ....2...2.......
	0xc6, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, // .@.....?...?....
	0x00, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x0a, 0xc2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // ....1...........
	0x06, 0x04, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........@......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x0a, // ............1...
	0x32, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // 2........@.....?
	0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, // ...?........F...
	0x05, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....<...".......
	0x2a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // *...............
	0x3c, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // <...".......:...
	0x05, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x07, // ............<...
	0x22, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // "...............
	0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x05, 0x22, 0x00, 0x10, 0x00, // ........;..."...
	0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, // ............1...
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........@......
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // :...............
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, // ....:...........
	0x02, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........:.......
	0x32, 0x00, 0x00, 0x0c, 0xc2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, 0x0c, 0x10, 0x00, // 2...............
	0x02, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // .............@..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, // ...........?...?
	0x36, 0x00, 0x00, 0x06, 0x52, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x00, // 6...R......... .
	0x00, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x08, 0xa2, 0x00, 0x10, 0x00, // ....&...6.......
	0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, // .....@.........?
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x32, 0x00, 0x10, 0x00, // ............2...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x66, 0x0a, 0x10, 0x00, // ....F.......f...
	0x04, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, // ....E.......CU..
	0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x7e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // F~.......`......
	0x00, 0x00, 0x00, 0x08, 0x32, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x80, // ....2...........
	0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // A.......F.......
	0x45, 0x00, 0x00, 0x8b, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, // E.......CU..r...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, // ....F.......F~..
	0x04, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // .....`..........
	0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x08, 0x52, 0x00, 0x10, 0x00, // F.......6...R...
	0x06, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, // .....@.....?....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0xa2, 0x00, 0x10, 0x00, // ........6.......
	0x06, 0x00, 0x00, 0x00, 0x56, 0x85, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, // ....V. .....&...
	0x00, 0x00, 0x00, 0x07, 0x32, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x10, 0x00, // ....2...........
	0x04, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, // ....F.......E...
	0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ....CU..r.......
	0x46, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // F.......F~......
	0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // .`..........r...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x32, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ........2.......
	0x46, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // F...........A...
	0x06, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, // ....E.......CU..
	0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x7e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // F~.......`......
	0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....r.......F...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x38, 0x20, 0x00, 0x07, // ....F.......8 ..
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........:.......
	0x01, 0x40, 0x00, 0x00, 0x55, 0x55, 0xd5, 0x40, 0x32, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, // .@..UU.@2.......
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....:........@..
	0x00, 0x00, 0x00, 0xc0, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, // .....@....@@8...
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........:.......
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // :.......8.......
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ....:.......:...
	0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....8...........
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // :.......*. .....
	0x25, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0d, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // %...2...r.......
	0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3e, // F........@.....>
	0x00, 0x00, 0x80, 0x3e, 0x00, 0x00, 0x80, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, // ...>...>....F...
	0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, // A.......2...r...
	0x03, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, // ....F...........
	0x33, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 3...r.......F...
	0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x70, 0x41, 0x00, 0x00, 0x70, 0x41, // .....@....pA..pA
	0x00, 0x00, 0x70, 0x41, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0b, 0x72, 0x00, 0x10, 0x00, // ..pA....8...r...
	0x03, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, // ....F. .....#...
	0x02, 0x40, 0x00, 0x00, 0x9a, 0x99, 0x99, 0x3d, 0x9a, 0x99, 0x99, 0x3d, 0x9a, 0x99, 0x99, 0x3d, // .@.....=...=...=
	0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0b, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ....8...r.......
	0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // F. .....#....@..
	0x9a, 0x99, 0x19, 0x3e, 0x9a, 0x99, 0x19, 0x3e, 0x9a, 0x99, 0x19, 0x3e, 0x00, 0x00, 0x00, 0x00, // ...>...>...>....
	0x34, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 4...r.......F...
	0x04, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xcd, 0xcc, 0xcc, 0x3d, 0xcd, 0xcc, 0xcc, 0x3d, // .....@.....=...=
	0xcd, 0xcc, 0xcc, 0x3d, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, // ...=....8...r...
	0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // ....F.......F. .
	0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ....#...4.......
	0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, // ....*...........
	0x03, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....4...........
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // :...............
	0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // 4...........*...
	0x04, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, // ............4...
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........:.......
	0x0a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ........4.......
	0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, // ....*...........
	0x05, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....4...........
	0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // :...............
	0x00, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, // ....:.......1...
	0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // .........@.....?
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0a, 0x82, 0x00, 0x10, 0x00, // :...............
	0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, // .....@.....?...?
	0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ...?...?:.......
	0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // 8...r...........
	0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ....F.......8...
	0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // r...............
	0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, // F.......7...r...
	0x03, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, // ....F.......7...
	0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // r...............
	0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // F.......F.......
	0x00, 0x00, 0x00, 0x0b, 0x32, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x16, 0x85, 0x20, 0x00, // ....2......... .
	0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // ....$....@.....?
	0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ...?........8...
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // ................
	0x0a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, // ........8.......
	0x03, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, // ....:. ..... ...
	0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, // :. ..... .......
	0xd2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // ............A...
	0x04, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, // .....@.....?....
	0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ...?...?8.......
	0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ....:.......:...
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ........r.......
	0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // F.......F.......
	0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 8...r.......F...
	0x06, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, // ....F. ..... ...
	0x39, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x00, // 9............. .
	0x00, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ...."....@......
	0x36, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // 6...r........@..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x36, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // 6............@..
	0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x01, 0x21, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ....0...!.......
	0x07, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....:........@..
	0x0a, 0x00, 0x00, 0x00, 0x03, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ........:.......
	0x38, 0x00, 0x00, 0x0b, 0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // 8...r.......F. .
	0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x56, 0x85, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, // ........V. .....
	0x0c, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0d, // ....:.......2...
	0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // r.......F. .....
	0x00, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, // ...... .........
	0x3a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // :.......F.......
	0x32, 0x00, 0x00, 0x0d, 0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // 2...r.......F. .
	0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa6, 0x8a, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, // .......... .....
	0x0c, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....:.......F...
	0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ........r.......
	0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // F.......F. .....
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ........r.......
	0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // F.......F...A...
	0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // F.......F.......
	0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // D...........:...
	0x07, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ....8...r.......
	0xf6, 0x0f, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ........F.......
	0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, // ....F...........
	0x12, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ........:.......
	0x1a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, // .. .....$...1...
	0x22, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // "........@......
	0x0a, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, // ................
	0x0a, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0xd2, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, // ....8...........
	0x06, 0x09, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, // ................
	0x01, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x86, 0x03, 0x10, 0x00, // ....r...........
	0x0a, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, // ....V.......1...
	0x82, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........@......
	0x3a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, // :...........:...
	0x09, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ....2...r.......
	0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // F...............
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // F...............
	0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x08, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ....D...........
	0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // :.......8...r...
	0x08, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // F.......F.......
	0x10, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, // ....F...........
	0x12, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........F.......
	0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, // F.......1..."...
	0x08, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // .....@......:...
	0x08, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ....1...B.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // .@..............
	0x01, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // ....".......*...
	0x08, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, // ............1...
	0x42, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // B........@......
	0x0a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, // ............"...
	0x08, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, // ....*...........
	0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x42, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ........B.......
	0x0a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....A........@..
	0x00, 0x00, 0x80, 0x3f, 0x38, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ...?8...........
	0x2a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // *.......*.......
	0x38, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // 8...............
	0x09, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ............8...
	0x42, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // B.......*.......
	0x0a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, // ........2...r...
	0x09, 0x00, 0x00, 0x00, 0x86, 0x03, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, // ................
	0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ....F.......8...
	0x12, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ................
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, // .@.....A........
	0x08, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ................
	0x08, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x05, 0x42, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ..../...B.......
	0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x42, 0x00, 0x10, 0x00, // :.......8...B...
	0x08, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x00, // ....*......... .
	0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x05, 0x42, 0x00, 0x10, 0x00, // ....$.......B...
	0x08, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ....*.......8...
	0x12, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ........*.......
	0x0a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xd2, 0x00, 0x10, 0x00, // ........2.......
	0x08, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, // ................
	0x08, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, // ............7...
	0x72, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // r.......V.......
	0x86, 0x03, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, // ........F.......
	0x15, 0x00, 0x00, 0x01, 0x38, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ....8...........
	0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // :.......:.......
	0x0e, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ................
	0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x08, // ....:........ ..
	0x12, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // ............A...
	0x08, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x38, 0x00, 0x00, 0x07, // .....@.....?8...
	0x12, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ................
	0x0a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ................
	0x07, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....:........@..
	0x00, 0x00, 0x80, 0x3f, 0x0e, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ...?............
	0x0a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ........:.......
	0x38, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 8...r.......F...
	0x0a, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, // ....F. .........
	0x3a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, // :.......2...r...
	0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // ....F...........
	0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, // ....F...........
	0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, // F...A.......2...
	0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // r......... .....
	0x22, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // "...F.......F...
	0x08, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ....7...r.......
	0xf6, 0x0f, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ........F.......
	0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // F...........r...
	0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x08, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ................
	0x3a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // :........@......
	0x16, 0x00, 0x00, 0x01, 0x31, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....1...........
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // .@......:.......
	0x1f, 0x00, 0x04, 0x03, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, // ............8...
	0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // r.......V.......
	0x16, 0x86, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, // .. .........2...
	0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x86, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // r......... .....
	0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....2...r.......
	0x16, 0x86, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, // .. .............
	0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, // ....F...........
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........F.......
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, // F.......D.......
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ....:.......8...
	0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // r...............
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x0b, 0x32, 0x00, 0x10, 0x00, // F...........2...
	0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, 0x00, 0x00, 0x80, 0x38, // .....@.....8...8
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x05, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x1a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, // ................
	0xc1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........".......
	0x0a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, // ................
	0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x0a, 0x32, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....1...2.......
	0x16, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........@......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, // ............7...
	0x22, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // "...............
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x3e, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, // .@.....>.@.....>
	0x38, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // 8...B...........
	0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, // ............2...
	0x42, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // B.......*.......
	0x01, 0x40, 0x00, 0x00, 0xd0, 0x1d, 0x0a, 0x3d, 0x01, 0x40, 0x00, 0x00, 0xdc, 0xe7, 0x20, 0xbe, // .@.....=.@.... .
	0x37, 0x00, 0x00, 0x0a, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // 7...............
	0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ........A.......
	0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, // ........2.......
	0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ....*...........
	0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x0a, // ............7...
	0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x0a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ....A...........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, // .........@.....?
	0x37, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 7...........:...
	0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x0a, 0x00, 0x10, 0x00, // .....@.....?....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x2a, 0x00, 0x10, 0x80, 0xc1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // *............@..
	0x00, 0x00, 0x80, 0x3f, 0x1d, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ...?............
	0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // *........@......
	0x37, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // 7..."...........
	0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // .....@.......@..
	0x00, 0x00, 0x80, 0x3f, 0x31, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ...?1...B.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // .@.....8:.......
	0x32, 0x00, 0x00, 0x0a, 0x42, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x80, // 2...B.......*...
	0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x1a, 0x5b, 0x4b, 0xbd, // .........@...[K.
	0x01, 0x40, 0x00, 0x00, 0x66, 0x00, 0xff, 0x3e, 0x4b, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, // .@..f..>K.......
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ....:.......8...
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........:.......
	0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x42, 0x00, 0x10, 0x00, // *.......2...B...
	0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....*...A.......
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // :........@.....?
	0x37, 0x00, 0x00, 0x09, 0x42, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // 7...B...........
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // ....:.......*...
	0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....7...".......
	0x2a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // *.......*.......
	0x1a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, // ........H.......
	0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, // CU..r.......F...
	0x00, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, // ....F~.......`..
	0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // .....@......8...
	0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, // F.......2...r...
	0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x00, // ....F......... .
	0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ....!...F.......
	0x15, 0x00, 0x00, 0x01, 0x31, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....1...........
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // .@......:.......
	0x32, 0x00, 0x00, 0x0a, 0xe2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, // 2...............
	0x02, 0x00, 0x00, 0x00, 0x06, 0x89, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, // ...... .....#...
	0x06, 0x09, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x20, 0x10, 0x00, // ........7...r ..
	0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, // ....F.......6...
	0x82, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // . ......:. .....
	0x23, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x01, 0x00, 0x00, 0x70, 0x02,                         // #...>.....p.
};
static const uint8_t fs_ball_equirectangular_decal_spv[12863] =
{
	0x46, 0x53, 0x48, 0x0b, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x0c, 0x62, // FSH....l.......b
	0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x0a, 0xc0, 0x00, 0x0a, // allLightPos.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x14, 0x01, 0x00, // ......matView...
	0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, // ........Roughnes
	0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, // s_WrapL_Edge_Thi
	0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x01, 0x40, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // ckness..@.......
	0x13, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, // .cAmbient_LightR
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x01, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x62, // ange...........b
	0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, // allLightEmission
	0x12, 0x0a, 0x60, 0x01, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x44, 0x69, 0x73, 0x61, // ..`........fDisa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, // bleLighting_top_
	0x62, 0x65, 0x6c, 0x6f, 0x77, 0x12, 0x01, 0x20, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // below.. ........
	0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, // fenvEmissionScal
	0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x01, 0x10, 0x02, 0x01, 0x00, // e_TexWidth......
	0x00, 0x00, 0x00, 0x00, 0x13, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // .....w_h_disable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x01, 0x60, 0x02, 0x01, 0x00, 0x00, 0x00, // Lighting..`.....
	0x00, 0x00, 0x0b, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x01, // ...cBase_Alpha..
	0x30, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, // 0........matWorl
	0x64, 0x56, 0x69, 0x65, 0x77, 0x14, 0x01, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // dView..@........
	0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x14, 0x01, 0x80, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, // matProj.........
	0x00, 0x16, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, // ..invTableRes_re
	0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x01, 0x50, 0x02, 0x01, 0x00, 0x00, 0x00, // flection..P.....
	0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // ...tex_ball_colo
	0x72, 0x30, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, // r0......."..tex_
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x30, 0x00, 0x04, 0x00, 0x00, // diffuse_env0....
	0x00, 0x00, 0x02, 0x22, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, // ..."..tex_ball_d
	0x65, 0x63, 0x61, 0x6c, 0x30, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0x12, 0x74, // ecal0......."..t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // ex_ball_playfiel
	0x64, 0x30, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0x6c, 0x30, 0x00, 0x00, 0x03, // d0.......".l0...
	0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x0b, 0x00, 0x08, 0x00, 0xde, 0x06, 0x00, 0x00, 0x00, // .#..............
	0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x06, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30, 0x00, // ...GLSL.std.450.
	0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, // ................
	0x00, 0x09, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, // ...........main.
	0x00, 0x00, 0x00, 0x3d, 0x03, 0x00, 0x00, 0x41, 0x03, 0x00, 0x00, 0x44, 0x03, 0x00, 0x00, 0x53, // ...=...A...D...S
	0x03, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, // ................
	0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x05, // ................
	0x00, 0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, // ...............m
	0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x74, // ain........j...t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, // ex_ball_colorSam
	0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x74, // pler.......m...t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x65, 0x78, // ex_ball_colorTex
	0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x77, 0x00, 0x00, 0x00, 0x74, // ture.......w...t
	0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x53, 0x61, // ex_diffuse_envSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x79, 0x00, 0x00, 0x00, 0x74, // mpler......y...t
	0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x54, 0x65, // ex_diffuse_envTe
	0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x7d, 0x00, 0x00, 0x00, 0x74, // xture......}...t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x53, 0x61, 0x6d, // ex_ball_decalSam
	0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x74, // pler...........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x54, 0x65, 0x78, // ex_ball_decalTex
	0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x09, 0x00, 0x83, 0x00, 0x00, 0x00, 0x74, // ture...........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // ex_ball_playfiel
	0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, 0x00, 0x09, 0x00, 0x85, // dSampler........
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, // ...tex_ball_play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, // fieldTexture....
	0x00, 0x06, 0x00, 0x23, 0x01, 0x00, 0x00, 0x55, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x6c, // ...#...UniformBl
	0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x05, 0x00, 0x23, 0x01, 0x00, 0x00, 0x00, // ock........#....
	0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x00, 0x06, 0x00, 0x07, 0x00, 0x23, // ...matView.....#
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, // .......matWorldV
	0x69, 0x65, 0x77, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x05, 0x00, 0x23, 0x01, 0x00, 0x00, 0x02, // iew........#....
	0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x00, 0x06, 0x00, 0x07, 0x00, 0x23, // ...matProj.....#
	0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, // .......ballLight
	0x50, 0x6f, 0x73, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x23, 0x01, 0x00, 0x00, 0x04, // Pos........#....
	0x00, 0x00, 0x00, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, // ...ballLightEmis
	0x73, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x23, 0x01, 0x00, 0x00, 0x05, // sion.......#....
	0x00, 0x00, 0x00, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, // ...cAmbient_Ligh
	0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x00, 0x06, 0x00, 0x0a, 0x00, 0x23, 0x01, 0x00, 0x00, 0x06, // tRange.....#....
	0x00, 0x00, 0x00, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, // ...fenvEmissionS
	0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x00, 0x00, 0x06, // cale_TexWidth...
	0x00, 0x0a, 0x00, 0x23, 0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x66, 0x44, 0x69, 0x73, 0x61, // ...#.......fDisa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, // bleLighting_top_
	0x62, 0x65, 0x6c, 0x6f, 0x77, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x23, 0x01, 0x00, 0x00, 0x08, // below......#....
	0x00, 0x00, 0x00, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x00, 0x06, // ...cBase_Alpha..
	0x00, 0x0b, 0x00, 0x23, 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x52, 0x6f, 0x75, 0x67, 0x68, // ...#.......Rough
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, // ness_WrapL_Edge_
	0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x00, 0x00, 0x06, 0x00, 0x09, 0x00, 0x23, // Thickness......#
	0x01, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, // .......invTableR
	0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x06, // es_reflection...
	0x00, 0x08, 0x00, 0x23, 0x01, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x77, 0x5f, 0x68, 0x5f, 0x64, // ...#.......w_h_d
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x00, 0x05, // isableLighting..
	0x00, 0x03, 0x00, 0x25, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0x3d, // ...%...........=
	0x03, 0x00, 0x00, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x05, // ...v_normal.....
	0x00, 0x05, 0x00, 0x41, 0x03, 0x00, 0x00, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // ...A...v_texcoor
	0x64, 0x30, 0x00, 0x05, 0x00, 0x05, 0x00, 0x44, 0x03, 0x00, 0x00, 0x76, 0x5f, 0x77, 0x6f, 0x72, // d0.....D...v_wor
	0x6c, 0x64, 0x50, 0x6f, 0x73, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x53, 0x03, 0x00, 0x00, 0x62, // ldPos......S...b
	0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x00, 0x00, 0x47, // gfx_FragData0..G
	0x00, 0x04, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // ...j...".......G
	0x00, 0x04, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x47, // ...j...!.......G
	0x00, 0x04, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // ...m...".......G
	0x00, 0x04, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, // ...m...!.......G
	0x00, 0x04, 0x00, 0x77, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // ...w...".......G
	0x00, 0x04, 0x00, 0x77, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x47, // ...w...!.......G
	0x00, 0x04, 0x00, 0x79, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // ...y...".......G
	0x00, 0x04, 0x00, 0x79, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x47, // ...y...!.......G
	0x00, 0x04, 0x00, 0x7d, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // ...}...".......G
	0x00, 0x04, 0x00, 0x7d, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x47, // ...}...!.......G
	0x00, 0x04, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // .......".......G
	0x00, 0x04, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x47, // .......!.......G
	0x00, 0x04, 0x00, 0x83, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // .......".......G
	0x00, 0x04, 0x00, 0x83, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x47, // .......!.......G
	0x00, 0x04, 0x00, 0x85, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // .......".......G
	0x00, 0x04, 0x00, 0x85, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x47, // .......!.......G
	0x00, 0x04, 0x00, 0x21, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x47, // ...!...........G
	0x00, 0x04, 0x00, 0x22, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, // ..."...........H
	0x00, 0x04, 0x00, 0x23, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, // ...#...........H
	0x00, 0x05, 0x00, 0x23, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, // ...#.......#....
	0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x23, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // ...H...#........
	0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, 0x23, 0x01, 0x00, 0x00, 0x01, // .......H...#....
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x23, 0x01, 0x00, 0x00, 0x01, // .......H...#....
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x23, // ...#...@...H...#
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, // ...............H
	0x00, 0x04, 0x00, 0x23, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, // ...#...........H
	0x00, 0x05, 0x00, 0x23, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x80, // ...#.......#....
	0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x23, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, // ...H...#........
	0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x23, 0x01, 0x00, 0x00, 0x03, // .......H...#....
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x23, // ...#.......H...#
	0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x60, 0x01, 0x00, 0x00, 0x48, // .......#...`...H
	0x00, 0x05, 0x00, 0x23, 0x01, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, // ...#.......#....
	0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x23, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x23, // ...H...#.......#
	0x00, 0x00, 0x00, 0x10, 0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x23, 0x01, 0x00, 0x00, 0x07, // .......H...#....
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x20, 0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x23, // ...#... ...H...#
	0x01, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x30, 0x02, 0x00, 0x00, 0x48, // .......#...0...H
	0x00, 0x05, 0x00, 0x23, 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x40, // ...#.......#...@
	0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x23, 0x01, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x23, // ...H...#.......#
	0x00, 0x00, 0x00, 0x50, 0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x23, 0x01, 0x00, 0x00, 0x0b, // ...P...H...#....
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00, 0x23, // ...#...`...G...#
	0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x25, 0x01, 0x00, 0x00, 0x22, // .......G...%..."
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x25, 0x01, 0x00, 0x00, 0x21, // .......G...%...!
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x3d, 0x03, 0x00, 0x00, 0x1e, // .......G...=....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x41, 0x03, 0x00, 0x00, 0x1e, // .......G...A....
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x44, 0x03, 0x00, 0x00, 0x1e, // .......G...D....
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x53, 0x03, 0x00, 0x00, 0x1e, // .......G...S....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x21, // ...............!
	0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x02, 0x00, 0x06, // ................
	0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x19, // ........... ....
	0x00, 0x09, 0x00, 0x08, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, // ................
	0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, 0x41, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, // .......A... ....
	0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x42, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x69, // .......B... ...i
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x69, // ...........;...i
	0x00, 0x00, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x6c, // ...j....... ...l
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x6c, // ...........;...l
	0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x69, // ...m.......;...i
	0x00, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x6c, // ...w.......;...l
	0x00, 0x00, 0x00, 0x79, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x69, // ...y.......;...i
	0x00, 0x00, 0x00, 0x7d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x6c, // ...}.......;...l
	0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x69, // ...........;...i
	0x00, 0x00, 0x00, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x6c, // ...........;...l
	0x00, 0x00, 0x00, 0x85, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x41, // ...........+...A
	0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x41, // ...........+...A
	0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x03, 0x00, 0x90, // ................
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb2, // .......+........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb5, // ......?+........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb9, // ......8+........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbe, // .......+........
	0x00, 0x00, 0x00, 0x1a, 0x5b, 0x4b, 0xbd, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc1, // ....[K.+........
	0x00, 0x00, 0x00, 0x66, 0x00, 0xff, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe4, // ...f..>+........
	0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe5, // ......>+........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe7, // ......>+........
	0x00, 0x00, 0x00, 0xd0, 0x1d, 0x0a, 0x3d, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xfc, // ......=+........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x15, 0x00, 0x04, 0x00, 0xfd, 0x00, 0x00, 0x00, 0x20, // ......?........ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0xfd, 0x00, 0x00, 0x00, 0xfe, // .......+........
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0xfd, 0x00, 0x00, 0x00, 0x00, // .......+........
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0xfd, 0x00, 0x00, 0x00, 0x04, // .......+........
	0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x11, // .......,........
	0x01, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x2b, // ...............+
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x18, 0x01, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x40, 0x18, // ..............@.
	0x00, 0x04, 0x00, 0x1f, 0x01, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2b, // ...............+
	0x00, 0x04, 0x00, 0xfd, 0x00, 0x00, 0x00, 0x20, 0x01, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x1c, // ....... ........
	0x00, 0x04, 0x00, 0x21, 0x01, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x20, 0x01, 0x00, 0x00, 0x1c, // ...!....... ....
	0x00, 0x04, 0x00, 0x22, 0x01, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x20, 0x01, 0x00, 0x00, 0x1e, // ..."....... ....
	0x00, 0x0e, 0x00, 0x23, 0x01, 0x00, 0x00, 0x1f, 0x01, 0x00, 0x00, 0x1f, 0x01, 0x00, 0x00, 0x1f, // ...#............
	0x01, 0x00, 0x00, 0x21, 0x01, 0x00, 0x00, 0x22, 0x01, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, // ...!..."........
	0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x24, 0x01, 0x00, 0x00, 0x02, // ....... ...$....
	0x00, 0x00, 0x00, 0x23, 0x01, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x24, 0x01, 0x00, 0x00, 0x25, // ...#...;...$...%
	0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x41, 0x00, 0x00, 0x00, 0x26, // .......+...A...&
	0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x27, 0x01, 0x00, 0x00, 0x02, // ....... ...'....
	0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x2f, 0x01, 0x00, 0x00, 0x02, // ....... .../....
	0x00, 0x00, 0x00, 0x1f, 0x01, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x41, 0x00, 0x00, 0x00, 0x3e, // .......+...A...>
	0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x3f, 0x01, 0x00, 0x00, 0x02, // ....... ...?....
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x70, // .......+.......p
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x2b, 0x00, 0x04, 0x00, 0x41, 0x00, 0x00, 0x00, 0x82, // ......A+...A....
	0x01, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0xfd, 0x00, 0x00, 0x00, 0x83, // .......+........
	0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x41, 0x00, 0x00, 0x00, 0xa0, // .......+...A....
	0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x41, 0x00, 0x00, 0x00, 0xad, // .......+...A....
	0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x41, 0x00, 0x00, 0x00, 0xca, // .......+...A....
	0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x41, 0x00, 0x00, 0x00, 0x0b, // .......+...A....
	0x02, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4a, // .......+.......J
	0x02, 0x00, 0x00, 0x9a, 0x99, 0x19, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4d, // ......?+.......M
	0x02, 0x00, 0x00, 0x00, 0x00, 0x70, 0x41, 0x2b, 0x00, 0x04, 0x00, 0x41, 0x00, 0x00, 0x00, 0x75, // .....pA+...A...u
	0x02, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x41, 0x00, 0x00, 0x00, 0x7c, // .......+...A...|
	0x02, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x8a, // .......,........
	0x02, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0xb9, // ................
	0x00, 0x00, 0x00, 0x2c, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x94, 0x02, 0x00, 0x00, 0xb9, // ...,............
	0x00, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x2b, // ...............+
	0x00, 0x04, 0x00, 0x41, 0x00, 0x00, 0x00, 0xad, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2c, // ...A...........,
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xb2, 0x02, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0xfc, // ................
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbf, 0x02, 0x00, 0x00, 0x00, // ...+............
	0x00, 0x80, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04, 0x03, 0x00, 0x00, 0x9a, // ..>+............
	0x99, 0x19, 0x3e, 0x2c, 0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x0d, 0x03, 0x00, 0x00, 0x4d, // ..>,...........M
	0x02, 0x00, 0x00, 0x4d, 0x02, 0x00, 0x00, 0x4d, 0x02, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...M...M...+....
	0x00, 0x00, 0x00, 0x13, 0x03, 0x00, 0x00, 0x9a, 0x99, 0x99, 0x3d, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........=+....
	0x00, 0x00, 0x00, 0x17, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........@+....
	0x00, 0x00, 0x00, 0x19, 0x03, 0x00, 0x00, 0xcd, 0xcc, 0xcc, 0x3d, 0x2c, 0x00, 0x06, 0x00, 0x1a, // ..........=,....
	0x00, 0x00, 0x00, 0x1a, 0x03, 0x00, 0x00, 0x19, 0x03, 0x00, 0x00, 0x19, 0x03, 0x00, 0x00, 0x19, // ................
	0x03, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x3c, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, // ... ...<........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x3c, 0x03, 0x00, 0x00, 0x3d, 0x03, 0x00, 0x00, 0x01, // ...;...<...=....
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x40, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, // ... ...@........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x40, 0x03, 0x00, 0x00, 0x41, 0x03, 0x00, 0x00, 0x01, // ...;...@...A....
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x3c, 0x03, 0x00, 0x00, 0x44, 0x03, 0x00, 0x00, 0x01, // ...;...<...D....
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x52, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, // ... ...R........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x52, 0x03, 0x00, 0x00, 0x53, 0x03, 0x00, 0x00, 0x03, // ...;...R...S....
	0x00, 0x00, 0x00, 0x29, 0x00, 0x03, 0x00, 0x42, 0x00, 0x00, 0x00, 0x6e, 0x03, 0x00, 0x00, 0x2c, // ...)...B...n...,
	0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xb9, 0x06, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0xb2, // ................
	0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbe, // .......+........
	0x06, 0x00, 0x00, 0x00, 0x00, 0x10, 0xc1, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbf, // .......+........
	0x06, 0x00, 0x00, 0xdc, 0xe7, 0x20, 0xbe, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, // ..... .6........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, // ................
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x6a, // ...=.......k...j
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x6d, // ...=.......n...m
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x77, // ...=.......x...w
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x7a, 0x00, 0x00, 0x00, 0x79, // ...=.......z...y
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x7d, // ...=.......~...}
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x7f, // ...=............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x83, // ...=............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x86, 0x00, 0x00, 0x00, 0x85, // ...=............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x3e, 0x03, 0x00, 0x00, 0x3d, // ...=.......>...=
	0x03, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x42, 0x03, 0x00, 0x00, 0x41, // ...=.......B...A
	0x03, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x45, 0x03, 0x00, 0x00, 0x44, // ...=.......E...D
	0x03, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x70, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, // .......p........
	0x00, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0xa8, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xa8, // ................
	0x03, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xab, 0x03, 0x00, 0x00, 0x45, // ...............E
	0x03, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xac, 0x03, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0xab, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1a, // ...E............
	0x00, 0x00, 0x00, 0xae, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x3e, // ...........E...>
	0x03, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xb1, 0x03, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0xac, 0x03, 0x00, 0x00, 0xae, 0x03, 0x00, 0x00, 0x94, // ...G............
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb4, 0x03, 0x00, 0x00, 0xac, 0x03, 0x00, 0x00, 0xb1, // ................
	0x03, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0xb6, 0x03, 0x00, 0x00, 0xb4, // .......B........
	0x03, 0x00, 0x00, 0x4a, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb9, // ...J............
	0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xb4, 0x03, 0x00, 0x00, 0x4d, // .......2.......M
	0x02, 0x00, 0x00, 0xbe, 0x06, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xba, // ................
	0x03, 0x00, 0x00, 0xb6, 0x03, 0x00, 0x00, 0xb9, 0x03, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x05, 0x00, 0x2f, 0x01, 0x00, 0x00, 0xbb, 0x03, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x8c, // .../.......%....
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x1f, 0x01, 0x00, 0x00, 0xbc, 0x03, 0x00, 0x00, 0xbb, // ...=............
	0x03, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xbe, 0x03, 0x00, 0x00, 0xb1, // ................
	0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbf, 0x03, 0x00, 0x00, 0xbe, // ...Q............
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc0, // .......Q........
	0x03, 0x00, 0x00, 0xbe, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xc1, 0x03, 0x00, 0x00, 0xbe, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, // ...............P
	0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xc2, 0x03, 0x00, 0x00, 0xbf, 0x03, 0x00, 0x00, 0xc0, // ................
	0x03, 0x00, 0x00, 0xc1, 0x03, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x91, 0x00, 0x05, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0xc3, 0x03, 0x00, 0x00, 0xbc, 0x03, 0x00, 0x00, 0xc2, 0x03, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7a, 0x04, 0x00, 0x00, 0xc3, 0x03, 0x00, 0x00, 0x01, // .......z........
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7b, 0x04, 0x00, 0x00, 0xc3, // ...Q.......{....
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xad, 0x04, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x89, 0x04, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0x89, 0x04, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8a, // ................
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x7a, 0x04, 0x00, 0x00, 0x0c, // ...........z....
	0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8b, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0x7b, 0x04, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x8d, // ...{.......B....
	0x04, 0x00, 0x00, 0x8b, 0x04, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x42, // ...............B
	0x00, 0x00, 0x00, 0x8f, 0x04, 0x00, 0x00, 0x8a, 0x04, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xa7, // ................
	0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x90, 0x04, 0x00, 0x00, 0x8d, 0x04, 0x00, 0x00, 0x8f, // ...B............
	0x04, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x92, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // ................
	0x00, 0x04, 0x00, 0x90, 0x04, 0x00, 0x00, 0x91, 0x04, 0x00, 0x00, 0x92, 0x04, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0x91, 0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xad, 0x04, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0x92, 0x04, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x95, // ................
	0x04, 0x00, 0x00, 0x8b, 0x04, 0x00, 0x00, 0x8a, 0x04, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x98, 0x04, 0x00, 0x00, 0x8b, 0x04, 0x00, 0x00, 0x8a, 0x04, 0x00, 0x00, 0x88, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x99, 0x04, 0x00, 0x00, 0x95, 0x04, 0x00, 0x00, 0x98, // ................
	0x04, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x9a, 0x04, 0x00, 0x00, 0x7b, // .......B.......{
	0x04, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9b, // ................
	0x04, 0x00, 0x00, 0x9a, 0x04, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0x85, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9d, 0x04, 0x00, 0x00, 0xe7, 0x00, 0x00, 0x00, 0x99, // ................
	0x04, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa0, 0x04, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x9d, 0x04, 0x00, 0x00, 0x99, 0x04, 0x00, 0x00, 0xbf, // ...2............
	0x06, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0xa1, 0x04, 0x00, 0x00, 0x7b, // .......B.......{
	0x04, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa3, // ................
	0x04, 0x00, 0x00, 0x99, 0x04, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa5, // ................
	0x04, 0x00, 0x00, 0xa1, 0x04, 0x00, 0x00, 0xa3, 0x04, 0x00, 0x00, 0x99, 0x04, 0x00, 0x00, 0x0c, // ................
	0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa7, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // ...............2
	0x00, 0x00, 0x00, 0xa0, 0x04, 0x00, 0x00, 0xa5, 0x04, 0x00, 0x00, 0x9b, 0x04, 0x00, 0x00, 0xb8, // ................
	0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0xa8, 0x04, 0x00, 0x00, 0x7a, 0x04, 0x00, 0x00, 0xb9, // ...B.......z....
	0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xaa, 0x04, 0x00, 0x00, 0xa7, // ................
	0x04, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xac, 0x04, 0x00, 0x00, 0xa8, // ................
	0x04, 0x00, 0x00, 0xaa, 0x04, 0x00, 0x00, 0xa7, 0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xad, // ................
	0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xad, 0x04, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xc0, 0x06, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x91, 0x04, 0x00, 0x00, 0xac, // ................
	0x04, 0x00, 0x00, 0x92, 0x04, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7d, // ...............}
	0x04, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0xc0, 0x06, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x7e, 0x04, 0x00, 0x00, 0xc3, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf7, // ...~............
	0x00, 0x03, 0x00, 0xca, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0x00, // ................
	0x01, 0x00, 0x00, 0xb5, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xb5, 0x04, 0x00, 0x00, 0x0c, // ................
	0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb6, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0x7e, 0x04, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb8, // ...~............
	0x04, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0xb6, 0x04, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x42, // ...............B
	0x00, 0x00, 0x00, 0xb9, 0x04, 0x00, 0x00, 0xb8, 0x04, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xf7, // ................
	0x00, 0x03, 0x00, 0xbd, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xb9, // ................
	0x04, 0x00, 0x00, 0xba, 0x04, 0x00, 0x00, 0xbd, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xba, // ................
	0x04, 0x00, 0x00, 0xbe, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0xbb, 0x04, 0x00, 0x00, 0x7e, // .......B.......~
	0x04, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbc, // ................
	0x04, 0x00, 0x00, 0xbb, 0x04, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0xf9, // ................
	0x00, 0x02, 0x00, 0xca, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xbd, 0x04, 0x00, 0x00, 0x0c, // ................
	0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc0, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // ...............2
	0x00, 0x00, 0x00, 0xbe, 0x00, 0x00, 0x00, 0xb6, 0x04, 0x00, 0x00, 0xc1, 0x00, 0x00, 0x00, 0x83, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc2, 0x04, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0xb6, // ................
	0x04, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc3, 0x04, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0xc2, 0x04, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xc4, 0x04, 0x00, 0x00, 0xc0, 0x04, 0x00, 0x00, 0xc3, 0x04, 0x00, 0x00, 0xbe, // ................
	0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0xc5, 0x04, 0x00, 0x00, 0x7e, 0x04, 0x00, 0x00, 0xb9, // ...B.......~....
	0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb8, 0x06, 0x00, 0x00, 0xc0, // ................
	0x04, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc8, 0x04, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xb8, 0x06, 0x00, 0x00, 0xc3, 0x04, 0x00, 0x00, 0xb2, // ...2............
	0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc9, 0x04, 0x00, 0x00, 0xc5, // ................
	0x04, 0x00, 0x00, 0xc4, 0x04, 0x00, 0x00, 0xc8, 0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xca, // ................
	0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xca, 0x04, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xc1, 0x06, 0x00, 0x00, 0xbc, 0x04, 0x00, 0x00, 0xba, 0x04, 0x00, 0x00, 0xc9, // ................
	0x04, 0x00, 0x00, 0xbd, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x80, // .......P........
	0x04, 0x00, 0x00, 0x7d, 0x04, 0x00, 0x00, 0xc1, 0x06, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x90, // ...}.......V....
	0x00, 0x00, 0x00, 0xd2, 0x04, 0x00, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x58, // .......n...k...X
	0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xd5, 0x04, 0x00, 0x00, 0xd2, 0x04, 0x00, 0x00, 0x80, // ................
	0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xba, 0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, // ...........O....
	0x00, 0x00, 0x00, 0xcb, 0x03, 0x00, 0x00, 0xd5, 0x04, 0x00, 0x00, 0xd5, 0x04, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x90, // ...........V....
	0x00, 0x00, 0x00, 0xdc, 0x04, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x57, // ...........~...W
	0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xde, 0x04, 0x00, 0x00, 0xdc, 0x04, 0x00, 0x00, 0x42, // ...............B
	0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xd0, 0x03, 0x00, 0x00, 0xde, // ...O............
	0x04, 0x00, 0x00, 0xde, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xe4, 0x04, 0x00, 0x00, 0xb9, // ................
	0x06, 0x00, 0x00, 0xd0, 0x03, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xba, // ................
	0x06, 0x00, 0x00, 0xcb, 0x03, 0x00, 0x00, 0xb9, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0xe7, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xba, // ...........2....
	0x06, 0x00, 0x00, 0xe4, 0x04, 0x00, 0x00, 0xb9, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0xe8, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0xe7, // ...........(....
	0x04, 0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, 0x01, 0x00, 0x00, 0xd4, // .......A...?....
	0x03, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x75, 0x02, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x3d, // ...%...u.......=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd5, 0x03, 0x00, 0x00, 0xd4, 0x03, 0x00, 0x00, 0xb7, // ................
	0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0xd6, 0x03, 0x00, 0x00, 0xd5, 0x03, 0x00, 0x00, 0xb9, // ...B............
	0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xdf, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // ................
	0x00, 0x04, 0x00, 0xd6, 0x03, 0x00, 0x00, 0xd7, 0x03, 0x00, 0x00, 0xdf, 0x03, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xd7, 0x03, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, 0x01, 0x00, 0x00, 0xd9, // .......A...?....
	0x03, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x7c, 0x02, 0x00, 0x00, 0x83, 0x01, 0x00, 0x00, 0x3d, // ...%...|.......=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xda, 0x03, 0x00, 0x00, 0xd9, 0x03, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xdb, 0x03, 0x00, 0x00, 0xe8, 0x04, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xdc, 0x03, 0x00, 0x00, 0xe8, // ...Q............
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xdd, // .......Q........
	0x03, 0x00, 0x00, 0xe8, 0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, // ...........P....
	0x00, 0x00, 0x00, 0xde, 0x03, 0x00, 0x00, 0xdb, 0x03, 0x00, 0x00, 0xdc, 0x03, 0x00, 0x00, 0xdd, // ................
	0x03, 0x00, 0x00, 0xda, 0x03, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x70, 0x04, 0x00, 0x00, 0xf8, // ...........p....
	0x00, 0x02, 0x00, 0xdf, 0x03, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, 0x01, 0x00, 0x00, 0xe0, // .......A...?....
	0x03, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0xca, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x3d, // ...%...........=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe1, 0x03, 0x00, 0x00, 0xe0, 0x03, 0x00, 0x00, 0x85, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe2, 0x03, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0xe1, // ................
	0x03, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xe4, 0x03, 0x00, 0x00, 0xe8, // ................
	0x04, 0x00, 0x00, 0xe2, 0x03, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x2f, 0x01, 0x00, 0x00, 0xe5, // .......A.../....
	0x03, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x1f, // ...%.......=....
	0x01, 0x00, 0x00, 0xe6, 0x03, 0x00, 0x00, 0xe5, 0x03, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0xe7, 0x03, 0x00, 0x00, 0x8a, 0x02, 0x00, 0x00, 0xe6, 0x03, 0x00, 0x00, 0x4f, // ...............O
	0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xe8, 0x03, 0x00, 0x00, 0xe7, 0x03, 0x00, 0x00, 0xe7, // ................
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x94, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xeb, 0x03, 0x00, 0x00, 0xe8, 0x03, 0x00, 0x00, 0xb1, // ................
	0x03, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x2f, 0x01, 0x00, 0x00, 0xec, 0x03, 0x00, 0x00, 0x25, // ...A.../.......%
	0x01, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x1f, 0x01, 0x00, 0x00, 0xed, // .......=........
	0x03, 0x00, 0x00, 0xec, 0x03, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xee, // ................
	0x03, 0x00, 0x00, 0x94, 0x02, 0x00, 0x00, 0xed, 0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, // ...........O....
	0x00, 0x00, 0x00, 0xef, 0x03, 0x00, 0x00, 0xee, 0x03, 0x00, 0x00, 0xee, 0x03, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0xf3, 0x03, 0x00, 0x00, 0x45, 0x03, 0x00, 0x00, 0xef, 0x03, 0x00, 0x00, 0x94, // .......E........
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf4, 0x03, 0x00, 0x00, 0xe8, 0x03, 0x00, 0x00, 0xf3, // ................
	0x03, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf6, 0x03, 0x00, 0x00, 0xf4, // ................
	0x03, 0x00, 0x00, 0xeb, 0x03, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xfa, // ................
	0x03, 0x00, 0x00, 0xb1, 0x03, 0x00, 0x00, 0xf6, 0x03, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0xfb, 0x03, 0x00, 0x00, 0x45, 0x03, 0x00, 0x00, 0xfa, 0x03, 0x00, 0x00, 0x51, // .......E.......Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xfd, 0x03, 0x00, 0x00, 0xfb, 0x03, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xfe, 0x03, 0x00, 0x00, 0xfb, // ...Q............
	0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xff, // .......Q........
	0x03, 0x00, 0x00, 0xfb, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, // ...........P....
	0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0xfd, 0x03, 0x00, 0x00, 0xfe, 0x03, 0x00, 0x00, 0xff, // ................
	0x03, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x2f, 0x01, 0x00, 0x00, 0x01, // .......A.../....
	0x04, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0xad, 0x02, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x1f, // ...%.......=....
	0x01, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0x01, 0x04, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0x03, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x05, 0x04, 0x00, 0x00, 0x03, 0x04, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x04, 0x00, 0x00, 0x03, // ...Q............
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x08, // ................
	0x04, 0x00, 0x00, 0x07, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x09, // .......P........
	0x04, 0x00, 0x00, 0x05, 0x04, 0x00, 0x00, 0x08, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x0b, 0x04, 0x00, 0x00, 0x03, 0x04, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x88, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0c, 0x04, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x0b, // ................
	0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x0d, 0x04, 0x00, 0x00, 0x09, // ................
	0x04, 0x00, 0x00, 0x0c, 0x04, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x0e, // ................
	0x04, 0x00, 0x00, 0xb2, 0x02, 0x00, 0x00, 0x0d, 0x04, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, // ...........A...?
	0x01, 0x00, 0x00, 0x10, 0x04, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x75, 0x02, 0x00, 0x00, 0x00, // .......%...u....
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x11, 0x04, 0x00, 0x00, 0x10, // ...=............
	0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x12, 0x04, 0x00, 0x00, 0x11, // ...P............
	0x04, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x13, // ................
	0x04, 0x00, 0x00, 0x0e, 0x04, 0x00, 0x00, 0x12, 0x04, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x90, // ...........V....
	0x00, 0x00, 0x00, 0xef, 0x04, 0x00, 0x00, 0x86, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x57, // ...............W
	0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xf1, 0x04, 0x00, 0x00, 0xef, 0x04, 0x00, 0x00, 0x13, // ................
	0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x16, 0x04, 0x00, 0x00, 0xf1, // ...O............
	0x04, 0x00, 0x00, 0xf1, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, 0x01, 0x00, 0x00, 0x18, 0x04, 0x00, 0x00, 0x25, // ...A...?.......%
	0x01, 0x00, 0x00, 0x75, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...u.......=....
	0x00, 0x00, 0x00, 0x19, 0x04, 0x00, 0x00, 0x18, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, // ...........P....
	0x00, 0x00, 0x00, 0x1a, 0x04, 0x00, 0x00, 0x19, 0x04, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x83, // ................
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x1b, 0x04, 0x00, 0x00, 0x0e, 0x04, 0x00, 0x00, 0x1a, // ................
	0x04, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x90, 0x00, 0x00, 0x00, 0xf8, 0x04, 0x00, 0x00, 0x86, // ...V............
	0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xfa, // .......W........
	0x04, 0x00, 0x00, 0xf8, 0x04, 0x00, 0x00, 0x1b, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, // ...........O....
	0x00, 0x00, 0x00, 0x1e, 0x04, 0x00, 0x00, 0xfa, 0x04, 0x00, 0x00, 0xfa, 0x04, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0x1f, 0x04, 0x00, 0x00, 0x16, 0x04, 0x00, 0x00, 0x1e, 0x04, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x06, 0x00, 0x3f, 0x01, 0x00, 0x00, 0x21, 0x04, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x75, // ...?...!...%...u
	0x02, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x22, // .......=......."
	0x04, 0x00, 0x00, 0x21, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x23, // ...!...P.......#
	0x04, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x22, 0x04, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, // ......."........
	0x00, 0x00, 0x00, 0x24, 0x04, 0x00, 0x00, 0x0e, 0x04, 0x00, 0x00, 0x23, 0x04, 0x00, 0x00, 0x56, // ...$.......#...V
	0x00, 0x05, 0x00, 0x90, 0x00, 0x00, 0x00, 0x01, 0x05, 0x00, 0x00, 0x86, 0x00, 0x00, 0x00, 0x84, // ................
	0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x03, 0x05, 0x00, 0x00, 0x01, // ...W............
	0x05, 0x00, 0x00, 0x24, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x27, // ...$...O.......'
	0x04, 0x00, 0x00, 0x03, 0x05, 0x00, 0x00, 0x03, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x28, // ...............(
	0x04, 0x00, 0x00, 0x1f, 0x04, 0x00, 0x00, 0x27, 0x04, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, // .......'...A...?
	0x01, 0x00, 0x00, 0x2a, 0x04, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x75, 0x02, 0x00, 0x00, 0xfe, // ...*...%...u....
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2b, 0x04, 0x00, 0x00, 0x2a, // ...=.......+...*
	0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x2c, 0x04, 0x00, 0x00, 0xb9, // ...P.......,....
	0x00, 0x00, 0x00, 0x2b, 0x04, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x2d, // ...+...........-
	0x04, 0x00, 0x00, 0x0e, 0x04, 0x00, 0x00, 0x2c, 0x04, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x90, // .......,...V....
	0x00, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x00, 0x86, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x57, // ...............W
	0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0c, 0x05, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x00, 0x2d, // ...............-
	0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x30, 0x04, 0x00, 0x00, 0x0c, // ...O.......0....
	0x05, 0x00, 0x00, 0x0c, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x31, 0x04, 0x00, 0x00, 0x28, // ...........1...(
	0x04, 0x00, 0x00, 0x30, 0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x32, // ...0...........2
	0x04, 0x00, 0x00, 0x31, 0x04, 0x00, 0x00, 0xbf, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...1.......Q....
	0x00, 0x00, 0x00, 0x34, 0x04, 0x00, 0x00, 0x0e, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, // ...4............
	0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x35, 0x04, 0x00, 0x00, 0x34, 0x04, 0x00, 0x00, 0xb9, // ...B...5...4....
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x37, 0x04, 0x00, 0x00, 0x0e, // ...Q.......7....
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x38, // ...........B...8
	0x04, 0x00, 0x00, 0x37, 0x04, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x05, 0x00, 0x42, // ...7...........B
	0x00, 0x00, 0x00, 0x39, 0x04, 0x00, 0x00, 0x35, 0x04, 0x00, 0x00, 0x38, 0x04, 0x00, 0x00, 0x51, // ...9...5...8...Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3b, 0x04, 0x00, 0x00, 0x0e, 0x04, 0x00, 0x00, 0x01, // .......;........
	0x00, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x3c, 0x04, 0x00, 0x00, 0x3b, // .......B...<...;
	0x04, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x3d, // ...........B...=
	0x04, 0x00, 0x00, 0x39, 0x04, 0x00, 0x00, 0x3c, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...9...<...Q....
	0x00, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00, 0x0e, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xba, // ...?............
	0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00, 0xb2, // ...B...@...?....
	0x00, 0x00, 0x00, 0xa6, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x00, 0x3d, // .......B...A...=
	0x04, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00, 0xa8, 0x00, 0x04, 0x00, 0x42, 0x00, 0x00, 0x00, 0x42, // ...@.......B...B
	0x04, 0x00, 0x00, 0x41, 0x04, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x44, // ...A.......B...D
	0x04, 0x00, 0x00, 0xf6, 0x03, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x04, 0x00, 0x42, // ...............B
	0x00, 0x00, 0x00, 0x45, 0x04, 0x00, 0x00, 0x44, 0x04, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x42, // ...E...D.......B
	0x00, 0x00, 0x00, 0x46, 0x04, 0x00, 0x00, 0x42, 0x04, 0x00, 0x00, 0x45, 0x04, 0x00, 0x00, 0xf7, // ...F...B...E....
	0x00, 0x03, 0x00, 0x51, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x46, // ...Q...........F
	0x04, 0x00, 0x00, 0x47, 0x04, 0x00, 0x00, 0x51, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x47, // ...G...Q.......G
	0x04, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4b, 0x04, 0x00, 0x00, 0x01, // ...........K....
	0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x04, 0x03, 0x00, 0x00, 0xeb, // ...1............
	0x03, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, 0x01, 0x00, 0x00, 0x4c, 0x04, 0x00, 0x00, 0x25, // ...A...?...L...%
	0x01, 0x00, 0x00, 0x0b, 0x02, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...........=....
	0x00, 0x00, 0x00, 0x4d, 0x04, 0x00, 0x00, 0x4c, 0x04, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ...M...L........
	0x00, 0x00, 0x00, 0x4e, 0x04, 0x00, 0x00, 0x4b, 0x04, 0x00, 0x00, 0x4d, 0x04, 0x00, 0x00, 0x50, // ...N...K...M...P
	0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x4f, 0x04, 0x00, 0x00, 0x4e, 0x04, 0x00, 0x00, 0x4e, // .......O...N...N
	0x04, 0x00, 0x00, 0x4e, 0x04, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x50, // ...N...........P
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0xe4, 0x03, 0x00, 0x00, 0x32, // ...............2
	0x04, 0x00, 0x00, 0x4f, 0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x51, 0x04, 0x00, 0x00, 0xf8, // ...O.......Q....
	0x00, 0x02, 0x00, 0x51, 0x04, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xc2, // ...Q............
	0x06, 0x00, 0x00, 0xe4, 0x03, 0x00, 0x00, 0xdf, 0x03, 0x00, 0x00, 0x50, 0x04, 0x00, 0x00, 0x47, // ...........P...G
	0x04, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x53, 0x04, 0x00, 0x00, 0x01, // ...........S....
	0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0xc2, 0x06, 0x00, 0x00, 0x0d, 0x03, 0x00, 0x00, 0x41, // ...%...........A
	0x00, 0x05, 0x00, 0x27, 0x01, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x7c, // ...'...T...%...|
	0x02, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x55, 0x04, 0x00, 0x00, 0x54, // ...=.......U...T
	0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x56, 0x04, 0x00, 0x00, 0x55, // ...O.......V...U
	0x04, 0x00, 0x00, 0x55, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ...U............
	0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x57, 0x04, 0x00, 0x00, 0x56, // ...........W...V
	0x04, 0x00, 0x00, 0x13, 0x03, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x59, // ...............Y
	0x04, 0x00, 0x00, 0x57, 0x04, 0x00, 0x00, 0x17, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x1a, // ...W............
	0x00, 0x00, 0x00, 0x5a, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x59, // ...Z.......(...Y
	0x04, 0x00, 0x00, 0x1a, 0x03, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x27, 0x01, 0x00, 0x00, 0x5c, // .......A...'....
	0x04, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x7c, 0x02, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, // ...%...|...=....
	0x00, 0x00, 0x00, 0x5d, 0x04, 0x00, 0x00, 0x5c, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, // ...].......O....
	0x00, 0x00, 0x00, 0x5e, 0x04, 0x00, 0x00, 0x5d, 0x04, 0x00, 0x00, 0x5d, 0x04, 0x00, 0x00, 0x00, // ...^...]...]....
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0x5f, 0x04, 0x00, 0x00, 0x53, 0x04, 0x00, 0x00, 0x5e, 0x04, 0x00, 0x00, 0x51, // ..._...S...^...Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x17, 0x05, 0x00, 0x00, 0x57, 0x04, 0x00, 0x00, 0x00, // ...........W....
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x19, 0x05, 0x00, 0x00, 0x57, // ...Q...........W
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1b, // .......Q........
	0x05, 0x00, 0x00, 0x57, 0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, // ...W............
	0x00, 0x00, 0x00, 0x1c, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x19, // ...........(....
	0x05, 0x00, 0x00, 0x1b, 0x05, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1d, // ................
	0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x17, 0x05, 0x00, 0x00, 0x1c, // .......(........
	0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1f, 0x05, 0x00, 0x00, 0x5a, // ...Q...........Z
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x21, // .......Q.......!
	0x05, 0x00, 0x00, 0x5a, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...Z.......Q....
	0x00, 0x00, 0x00, 0x23, 0x05, 0x00, 0x00, 0x5a, 0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, // ...#...Z........
	0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x24, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, // .......$.......(
	0x00, 0x00, 0x00, 0x21, 0x05, 0x00, 0x00, 0x23, 0x05, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, // ...!...#........
	0x00, 0x00, 0x00, 0x25, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x1f, // ...%.......(....
	0x05, 0x00, 0x00, 0x24, 0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x26, // ...$...Q.......&
	0x05, 0x00, 0x00, 0x5f, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ..._.......Q....
	0x00, 0x00, 0x00, 0x27, 0x05, 0x00, 0x00, 0x5f, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, // ...'..._.......Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x28, 0x05, 0x00, 0x00, 0x5f, 0x04, 0x00, 0x00, 0x02, // .......(..._....
	0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x29, 0x05, 0x00, 0x00, 0x01, // ...........)....
	0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x27, 0x05, 0x00, 0x00, 0x28, 0x05, 0x00, 0x00, 0x0c, // ...(...'...(....
	0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2a, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, // .......*.......(
	0x00, 0x00, 0x00, 0x26, 0x05, 0x00, 0x00, 0x29, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, // ...&...)........
	0x00, 0x00, 0x00, 0x2d, 0x05, 0x00, 0x00, 0x1d, 0x05, 0x00, 0x00, 0x25, 0x05, 0x00, 0x00, 0xba, // ...-.......%....
	0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x2f, 0x05, 0x00, 0x00, 0x2d, 0x05, 0x00, 0x00, 0xb2, // ...B.../...-....
	0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x39, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // .......9........
	0x00, 0x04, 0x00, 0x2f, 0x05, 0x00, 0x00, 0x30, 0x05, 0x00, 0x00, 0x39, 0x05, 0x00, 0x00, 0xf8, // .../...0...9....
	0x00, 0x02, 0x00, 0x30, 0x05, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x32, // ...0...........2
	0x05, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x2d, 0x05, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, // .......-........
	0x00, 0x00, 0x00, 0x35, 0x05, 0x00, 0x00, 0x57, 0x04, 0x00, 0x00, 0x32, 0x05, 0x00, 0x00, 0x8e, // ...5...W...2....
	0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x38, 0x05, 0x00, 0x00, 0x5a, 0x04, 0x00, 0x00, 0x32, // .......8...Z...2
	0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x39, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x39, // .......9.......9
	0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xd0, 0x06, 0x00, 0x00, 0x5a, // ...............Z
	0x04, 0x00, 0x00, 0x51, 0x04, 0x00, 0x00, 0x38, 0x05, 0x00, 0x00, 0x30, 0x05, 0x00, 0x00, 0xf5, // ...Q...8...0....
	0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xc5, 0x06, 0x00, 0x00, 0x57, 0x04, 0x00, 0x00, 0x51, // ...........W...Q
	0x04, 0x00, 0x00, 0x35, 0x05, 0x00, 0x00, 0x30, 0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x42, // ...5...0.......B
	0x00, 0x00, 0x00, 0x3c, 0x05, 0x00, 0x00, 0x1d, 0x05, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xa7, // ...<............
	0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x3d, 0x05, 0x00, 0x00, 0x6e, 0x03, 0x00, 0x00, 0x3c, // ...B...=...n...<
	0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x3f, 0x05, 0x00, 0x00, 0x25, // .......B...?...%
	0x05, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x40, // ...........B...@
	0x05, 0x00, 0x00, 0x3d, 0x05, 0x00, 0x00, 0x3f, 0x05, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x55, // ...=...?.......U
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x40, 0x05, 0x00, 0x00, 0x41, // ...........@...A
	0x05, 0x00, 0x00, 0x55, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x41, 0x05, 0x00, 0x00, 0xf9, // ...U.......A....
	0x00, 0x02, 0x00, 0x42, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x42, 0x05, 0x00, 0x00, 0xf5, // ...B.......B....
	0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xcc, 0x06, 0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x41, // ...............A
	0x05, 0x00, 0x00, 0x50, 0x05, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x41, // ...P...Q.......A
	0x00, 0x00, 0x00, 0xc3, 0x06, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x41, 0x05, 0x00, 0x00, 0x53, // ...........A...S
	0x05, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, 0xb1, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x45, // ...Q.......B...E
	0x05, 0x00, 0x00, 0xc3, 0x06, 0x00, 0x00, 0x0b, 0x02, 0x00, 0x00, 0xf6, 0x00, 0x04, 0x00, 0x54, // ...............T
	0x05, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x45, // ...Q...........E
	0x05, 0x00, 0x00, 0x46, 0x05, 0x00, 0x00, 0x54, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x46, // ...F...T.......F
	0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, 0x01, 0x00, 0x00, 0x4b, 0x05, 0x00, 0x00, 0x25, // ...A...?...K...%
	0x01, 0x00, 0x00, 0x3e, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...>.......=....
	0x00, 0x00, 0x00, 0x4c, 0x05, 0x00, 0x00, 0x4b, 0x05, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x04, // ...L...K........
	0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x84, // ................
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x84, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x27, // ...........A...'
	0x01, 0x00, 0x00, 0x85, 0x05, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x26, 0x01, 0x00, 0x00, 0xc3, // .......%...&....
	0x06, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x86, 0x05, 0x00, 0x00, 0x85, // ...=............
	0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x88, 0x05, 0x00, 0x00, 0x86, // ...Q............
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x89, // .......Q........
	0x05, 0x00, 0x00, 0x86, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x8a, 0x05, 0x00, 0x00, 0x86, 0x05, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, // ...............P
	0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x8b, 0x05, 0x00, 0x00, 0x88, 0x05, 0x00, 0x00, 0x89, // ................
	0x05, 0x00, 0x00, 0x8a, 0x05, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x2f, // ...........A.../
	0x01, 0x00, 0x00, 0x8c, 0x05, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x3d, // .......%.......=
	0x00, 0x04, 0x00, 0x1f, 0x01, 0x00, 0x00, 0x8d, 0x05, 0x00, 0x00, 0x8c, 0x05, 0x00, 0x00, 0x90, // ................
	0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x8e, 0x05, 0x00, 0x00, 0x8b, 0x05, 0x00, 0x00, 0x8d, // ................
	0x05, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x8f, 0x05, 0x00, 0x00, 0x8e, // ...O............
	0x05, 0x00, 0x00, 0x8e, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x90, 0x05, 0x00, 0x00, 0x8f, // ................
	0x05, 0x00, 0x00, 0x45, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x92, // ...E............
	0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x90, 0x05, 0x00, 0x00, 0x94, // .......E........
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x94, 0x05, 0x00, 0x00, 0xae, 0x03, 0x00, 0x00, 0x92, // ................
	0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, 0x01, 0x00, 0x00, 0x97, 0x05, 0x00, 0x00, 0x25, // ...A...?.......%
	0x01, 0x00, 0x00, 0x3e, 0x01, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...>.......=....
	0x00, 0x00, 0x00, 0x98, 0x05, 0x00, 0x00, 0x97, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x99, 0x05, 0x00, 0x00, 0x94, 0x05, 0x00, 0x00, 0x98, 0x05, 0x00, 0x00, 0xba, // ................
	0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x9a, 0x05, 0x00, 0x00, 0x99, 0x05, 0x00, 0x00, 0xb9, // ...B............
	0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x9b, 0x05, 0x00, 0x00, 0x6e, // .......B.......n
	0x03, 0x00, 0x00, 0x9a, 0x05, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xa7, 0x05, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x9b, 0x05, 0x00, 0x00, 0x9c, 0x05, 0x00, 0x00, 0xa7, // ................
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x9c, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, // ...........A...?
	0x01, 0x00, 0x00, 0x9e, 0x05, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x3e, 0x01, 0x00, 0x00, 0xfe, // .......%...>....
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9f, 0x05, 0x00, 0x00, 0x9e, // ...=............
	0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa0, 0x05, 0x00, 0x00, 0x94, // ................
	0x05, 0x00, 0x00, 0x9f, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, 0x01, 0x00, 0x00, 0xa1, // .......A...?....
	0x05, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x3e, 0x01, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x3d, // ...%...>.......=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa2, 0x05, 0x00, 0x00, 0xa1, 0x05, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa3, 0x05, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0xa2, // ................
	0x05, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x08, 0x06, 0x00, 0x00, 0xa3, // ................
	0x05, 0x00, 0x00, 0xa3, 0x05, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa5, // ................
	0x05, 0x00, 0x00, 0xa0, 0x05, 0x00, 0x00, 0x08, 0x06, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0xa6, 0x05, 0x00, 0x00, 0xc5, 0x06, 0x00, 0x00, 0xa5, 0x05, 0x00, 0x00, 0xf9, // ................
	0x00, 0x02, 0x00, 0xa7, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xa7, 0x05, 0x00, 0x00, 0xf5, // ................
	0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xd1, 0x06, 0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x84, // ................
	0x05, 0x00, 0x00, 0xa6, 0x05, 0x00, 0x00, 0x9c, 0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x42, // ...............B
	0x00, 0x00, 0x00, 0xa9, 0x05, 0x00, 0x00, 0x94, 0x05, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xf7, // ................
	0x00, 0x03, 0x00, 0xcb, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xa9, // ................
	0x05, 0x00, 0x00, 0xaa, 0x05, 0x00, 0x00, 0xcb, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xaa, // ................
	0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xac, 0x05, 0x00, 0x00, 0x92, // ................
	0x05, 0x00, 0x00, 0xac, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xad, // ................
	0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0xac, 0x05, 0x00, 0x00, 0x94, // .......E........
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xaf, 0x05, 0x00, 0x00, 0xae, 0x03, 0x00, 0x00, 0xad, // ................
	0x05, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb2, 0x05, 0x00, 0x00, 0x92, // ................
	0x05, 0x00, 0x00, 0xad, 0x05, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb4, // ................
	0x05, 0x00, 0x00, 0xac, 0x03, 0x00, 0x00, 0xad, 0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x42, // ...............B
	0x00, 0x00, 0x00, 0xb6, 0x05, 0x00, 0x00, 0xaf, 0x05, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xba, // ................
	0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0xb8, 0x05, 0x00, 0x00, 0xb2, 0x05, 0x00, 0x00, 0xb9, // ...B............
	0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0xb9, 0x05, 0x00, 0x00, 0xb6, // .......B........
	0x05, 0x00, 0x00, 0xb8, 0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0xbb, // ...........B....
	0x05, 0x00, 0x00, 0xb4, 0x05, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x42, // ...............B
	0x00, 0x00, 0x00, 0xbc, 0x05, 0x00, 0x00, 0xb9, 0x05, 0x00, 0x00, 0xbb, 0x05, 0x00, 0x00, 0xf7, // ................
	0x00, 0x03, 0x00, 0xca, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xbc, // ................
	0x05, 0x00, 0x00, 0xbd, 0x05, 0x00, 0x00, 0xca, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xbd, // ................
	0x05, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x0c, 0x06, 0x00, 0x00, 0xb9, // ................
	0x06, 0x00, 0x00, 0xd0, 0x06, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0d, // ................
	0x06, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0xb2, 0x05, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x0e, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x0d, // ................
	0x06, 0x00, 0x00, 0x18, 0x01, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x0f, // ................
	0x06, 0x00, 0x00, 0x0c, 0x06, 0x00, 0x00, 0x0e, 0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0x10, 0x06, 0x00, 0x00, 0xd0, 0x06, 0x00, 0x00, 0x0f, 0x06, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc0, 0x05, 0x00, 0x00, 0x4c, 0x05, 0x00, 0x00, 0xb2, // ...........L....
	0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc2, 0x05, 0x00, 0x00, 0x70, // ...............p
	0x01, 0x00, 0x00, 0xb4, 0x05, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc3, // ................
	0x05, 0x00, 0x00, 0xc0, 0x05, 0x00, 0x00, 0xc2, 0x05, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xc5, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xaf, // ................
	0x05, 0x00, 0x00, 0x4c, 0x05, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc6, // ...L............
	0x05, 0x00, 0x00, 0xc3, 0x05, 0x00, 0x00, 0xc5, 0x05, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0xc7, 0x05, 0x00, 0x00, 0x10, 0x06, 0x00, 0x00, 0xc6, 0x05, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xc9, 0x05, 0x00, 0x00, 0xd1, 0x06, 0x00, 0x00, 0xc7, // ................
	0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xca, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xca, // ................
	0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xd3, 0x06, 0x00, 0x00, 0xd1, // ................
	0x06, 0x00, 0x00, 0xaa, 0x05, 0x00, 0x00, 0xc9, 0x05, 0x00, 0x00, 0xbd, 0x05, 0x00, 0x00, 0xf9, // ................
	0x00, 0x02, 0x00, 0xcb, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xcb, 0x05, 0x00, 0x00, 0xf5, // ................
	0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xd2, 0x06, 0x00, 0x00, 0xd1, 0x06, 0x00, 0x00, 0xa7, // ................
	0x05, 0x00, 0x00, 0xd3, 0x06, 0x00, 0x00, 0xca, 0x05, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xce, 0x05, 0x00, 0x00, 0x90, 0x05, 0x00, 0x00, 0x90, 0x05, 0x00, 0x00, 0x85, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd1, 0x05, 0x00, 0x00, 0xce, 0x05, 0x00, 0x00, 0xce, // ................
	0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, 0x01, 0x00, 0x00, 0xd2, 0x05, 0x00, 0x00, 0x25, // ...A...?.......%
	0x01, 0x00, 0x00, 0x82, 0x01, 0x00, 0x00, 0x83, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...........=....
	0x00, 0x00, 0x00, 0xd3, 0x05, 0x00, 0x00, 0xd2, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, // ...........A...?
	0x01, 0x00, 0x00, 0xd4, 0x05, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x82, 0x01, 0x00, 0x00, 0x83, // .......%........
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd5, 0x05, 0x00, 0x00, 0xd4, // ...=............
	0x05, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd6, 0x05, 0x00, 0x00, 0xd3, // ................
	0x05, 0x00, 0x00, 0xd5, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, 0x01, 0x00, 0x00, 0xd7, // .......A...?....
	0x05, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x82, 0x01, 0x00, 0x00, 0x83, 0x01, 0x00, 0x00, 0x3d, // ...%...........=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd8, 0x05, 0x00, 0x00, 0xd7, 0x05, 0x00, 0x00, 0x85, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd9, 0x05, 0x00, 0x00, 0xd6, 0x05, 0x00, 0x00, 0xd8, // ................
	0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, 0x01, 0x00, 0x00, 0xda, 0x05, 0x00, 0x00, 0x25, // ...A...?.......%
	0x01, 0x00, 0x00, 0x82, 0x01, 0x00, 0x00, 0x83, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...........=....
	0x00, 0x00, 0x00, 0xdb, 0x05, 0x00, 0x00, 0xda, 0x05, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xdc, 0x05, 0x00, 0x00, 0xd9, 0x05, 0x00, 0x00, 0xdb, 0x05, 0x00, 0x00, 0x88, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xdd, 0x05, 0x00, 0x00, 0xd1, 0x05, 0x00, 0x00, 0xdc, // ................
	0x05, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xde, 0x05, 0x00, 0x00, 0xb2, // ................
	0x00, 0x00, 0x00, 0xdd, 0x05, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xdf, // ................
	0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0xde, 0x05, 0x00, 0x00, 0xb9, // .......+........
	0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe2, // ................
	0x05, 0x00, 0x00, 0xdf, 0x05, 0x00, 0x00, 0xdf, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xe4, 0x05, 0x00, 0x00, 0xce, 0x05, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x88, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe5, 0x05, 0x00, 0x00, 0xe2, 0x05, 0x00, 0x00, 0xe4, // ................
	0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xe9, 0x05, 0x00, 0x00, 0xd0, // ................
	0x06, 0x00, 0x00, 0xc5, 0x06, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x27, 0x01, 0x00, 0x00, 0xec, // .......A...'....
	0x05, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0xa0, 0x01, 0x00, 0x00, 0xc3, 0x06, 0x00, 0x00, 0x3d, // ...%...........=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xed, 0x05, 0x00, 0x00, 0xec, 0x05, 0x00, 0x00, 0x4f, // ...............O
	0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xee, 0x05, 0x00, 0x00, 0xed, 0x05, 0x00, 0x00, 0xed, // ................
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x85, // ................
	0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xef, 0x05, 0x00, 0x00, 0xd2, 0x06, 0x00, 0x00, 0xee, // ................
	0x05, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xf1, 0x05, 0x00, 0x00, 0xef, // ................
	0x05, 0x00, 0x00, 0xe5, 0x05, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x27, 0x01, 0x00, 0x00, 0xf3, // .......A...'....
	0x05, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x82, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, // ...%.......=....
	0x00, 0x00, 0x00, 0xf4, 0x05, 0x00, 0x00, 0xf3, 0x05, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, // ...........O....
	0x00, 0x00, 0x00, 0xf5, 0x05, 0x00, 0x00, 0xf4, 0x05, 0x00, 0x00, 0xf4, 0x05, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0xf7, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xe9, // ...........2....
	0x05, 0x00, 0x00, 0xf5, 0x05, 0x00, 0x00, 0xf1, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, // ...........A...?
	0x01, 0x00, 0x00, 0xf8, 0x05, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0xad, 0x01, 0x00, 0x00, 0x00, // .......%........
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf9, 0x05, 0x00, 0x00, 0xf8, // ...=............
	0x05, 0x00, 0x00, 0xb7, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0xfa, 0x05, 0x00, 0x00, 0xf9, // .......B........
	0x05, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x03, 0x06, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xfa, 0x05, 0x00, 0x00, 0xfb, 0x05, 0x00, 0x00, 0x01, // ................
	0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x01, 0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x04, // ................
	0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xfb, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, // ...........A...?
	0x01, 0x00, 0x00, 0xfc, 0x05, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0xad, 0x01, 0x00, 0x00, 0x00, // .......%........
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xfd, 0x05, 0x00, 0x00, 0xfc, // ...=............
	0x05, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xfe, 0x05, 0x00, 0x00, 0xfd, // ...P............
	0x05, 0x00, 0x00, 0xfd, 0x05, 0x00, 0x00, 0xfd, 0x05, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0x16, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0xf7, // ................
	0x05, 0x00, 0x00, 0xc5, 0x06, 0x00, 0x00, 0xfe, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x04, // ................
	0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x03, 0x06, 0x00, 0x00, 0xff, 0x00, 0x01, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0x04, 0x06, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xd4, // ................
	0x06, 0x00, 0x00, 0xf7, 0x05, 0x00, 0x00, 0x01, 0x06, 0x00, 0x00, 0x16, 0x06, 0x00, 0x00, 0xfb, // ................
	0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x50, 0x05, 0x00, 0x00, 0xcc, // ...........P....
	0x06, 0x00, 0x00, 0xd4, 0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x51, 0x05, 0x00, 0x00, 0xf8, // ...........Q....
	0x00, 0x02, 0x00, 0x51, 0x05, 0x00, 0x00, 0x80, 0x00, 0x05, 0x00, 0x41, 0x00, 0x00, 0x00, 0x53, // ...Q.......A...S
	0x05, 0x00, 0x00, 0xc3, 0x06, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x42, // ...............B
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x54, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x55, // .......T.......U
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x55, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, // .......U........
	0x00, 0x00, 0x00, 0xcb, 0x06, 0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x39, 0x05, 0x00, 0x00, 0xcc, // ...........9....
	0x06, 0x00, 0x00, 0x54, 0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x58, // ...T.......B...X
	0x05, 0x00, 0x00, 0x1d, 0x05, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x42, // ...............B
	0x00, 0x00, 0x00, 0x59, 0x05, 0x00, 0x00, 0x6e, 0x03, 0x00, 0x00, 0x58, 0x05, 0x00, 0x00, 0xf7, // ...Y...n...X....
	0x00, 0x03, 0x00, 0x69, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x59, // ...i...........Y
	0x05, 0x00, 0x00, 0x5a, 0x05, 0x00, 0x00, 0x69, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x5a, // ...Z...i.......Z
	0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5c, 0x05, 0x00, 0x00, 0xae, // ...Q............
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5d, // .......Q.......]
	0x05, 0x00, 0x00, 0xae, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x5e, 0x05, 0x00, 0x00, 0xae, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, // ...^...........P
	0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x5f, 0x05, 0x00, 0x00, 0x5c, 0x05, 0x00, 0x00, 0x5d, // ......._.......]
	0x05, 0x00, 0x00, 0x5e, 0x05, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x2f, // ...^.......A.../
	0x01, 0x00, 0x00, 0x60, 0x05, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x3d, // ...`...%.......=
	0x00, 0x04, 0x00, 0x1f, 0x01, 0x00, 0x00, 0x61, 0x05, 0x00, 0x00, 0x60, 0x05, 0x00, 0x00, 0x90, // .......a...`....
	0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x62, 0x05, 0x00, 0x00, 0x5f, 0x05, 0x00, 0x00, 0x61, // .......b..._...a
	0x05, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x63, 0x05, 0x00, 0x00, 0x62, // ...O.......c...b
	0x05, 0x00, 0x00, 0x62, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ...b............
	0x00, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x64, 0x05, 0x00, 0x00, 0x01, // ...........d....
	0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x63, 0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...E...c...Q....
	0x00, 0x00, 0x00, 0x28, 0x06, 0x00, 0x00, 0x64, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, // ...(...d.......Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x29, 0x06, 0x00, 0x00, 0x64, 0x05, 0x00, 0x00, 0x00, // .......)...d....
	0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x5b, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, // .......[........
	0x00, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x37, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x37, // .......7.......7
	0x06, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x38, 0x06, 0x00, 0x00, 0x01, // ...........8....
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x28, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, // .......(........
	0x00, 0x00, 0x00, 0x39, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x29, // ...9...........)
	0x06, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x3b, 0x06, 0x00, 0x00, 0x39, // .......B...;...9
	0x06, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x3d, // ...........B...=
	0x06, 0x00, 0x00, 0x38, 0x06, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x42, // ...8...........B
	0x00, 0x00, 0x00, 0x3e, 0x06, 0x00, 0x00, 0x3b, 0x06, 0x00, 0x00, 0x3d, 0x06, 0x00, 0x00, 0xf7, // ...>...;...=....
	0x00, 0x03, 0x00, 0x40, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x3e, // ...@...........>
	0x06, 0x00, 0x00, 0x3f, 0x06, 0x00, 0x00, 0x40, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x3f, // ...?...@.......?
	0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x5b, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x40, // .......[.......@
	0x06, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x43, 0x06, 0x00, 0x00, 0x39, // ...........C...9
	0x06, 0x00, 0x00, 0x38, 0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, // ...8...........F
	0x06, 0x00, 0x00, 0x39, 0x06, 0x00, 0x00, 0x38, 0x06, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, // ...9...8........
	0x00, 0x00, 0x00, 0x47, 0x06, 0x00, 0x00, 0x43, 0x06, 0x00, 0x00, 0x46, 0x06, 0x00, 0x00, 0xb8, // ...G...C...F....
	0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x48, 0x06, 0x00, 0x00, 0x29, 0x06, 0x00, 0x00, 0xb9, // ...B...H...)....
	0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x49, 0x06, 0x00, 0x00, 0x48, // ...........I...H
	0x06, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x4b, 0x06, 0x00, 0x00, 0xe7, 0x00, 0x00, 0x00, 0x47, 0x06, 0x00, 0x00, 0x0c, // ...K.......G....
	0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4e, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // .......N.......2
	0x00, 0x00, 0x00, 0x4b, 0x06, 0x00, 0x00, 0x47, 0x06, 0x00, 0x00, 0xbf, 0x06, 0x00, 0x00, 0xb8, // ...K...G........
	0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x4f, 0x06, 0x00, 0x00, 0x29, 0x06, 0x00, 0x00, 0xb9, // ...B...O...)....
	0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x51, 0x06, 0x00, 0x00, 0x47, // ...........Q...G
	0x06, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x53, 0x06, 0x00, 0x00, 0x4f, // ...........S...O
	0x06, 0x00, 0x00, 0x51, 0x06, 0x00, 0x00, 0x47, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, // ...Q...G........
	0x00, 0x00, 0x00, 0x55, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x4e, // ...U.......2...N
	0x06, 0x00, 0x00, 0x53, 0x06, 0x00, 0x00, 0x49, 0x06, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x42, // ...S...I.......B
	0x00, 0x00, 0x00, 0x56, 0x06, 0x00, 0x00, 0x28, 0x06, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x7f, // ...V...(........
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x58, 0x06, 0x00, 0x00, 0x55, 0x06, 0x00, 0x00, 0xa9, // .......X...U....
	0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5a, 0x06, 0x00, 0x00, 0x56, 0x06, 0x00, 0x00, 0x58, // .......Z...V...X
	0x06, 0x00, 0x00, 0x55, 0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x5b, 0x06, 0x00, 0x00, 0xf8, // ...U.......[....
	0x00, 0x02, 0x00, 0x5b, 0x06, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc7, // ...[............
	0x06, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x3f, 0x06, 0x00, 0x00, 0x5a, 0x06, 0x00, 0x00, 0x40, // .......?...Z...@
	0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2b, 0x06, 0x00, 0x00, 0xfc, // ...........+....
	0x00, 0x00, 0x00, 0xc7, 0x06, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2c, // .......Q.......,
	0x06, 0x00, 0x00, 0x64, 0x05, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x78, // ...d...........x
	0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x63, // ...............c
	0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x63, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, // .......c........
	0x00, 0x00, 0x00, 0x64, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2c, // ...d...........,
	0x06, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x66, 0x06, 0x00, 0x00, 0xb2, // ...........f....
	0x00, 0x00, 0x00, 0x64, 0x06, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x67, // ...d.......B...g
	0x06, 0x00, 0x00, 0x66, 0x06, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x6b, // ...f...........k
	0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x67, 0x06, 0x00, 0x00, 0x68, // ...........g...h
	0x06, 0x00, 0x00, 0x6b, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x68, 0x06, 0x00, 0x00, 0xbe, // ...k.......h....
	0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x69, 0x06, 0x00, 0x00, 0x2c, 0x06, 0x00, 0x00, 0xb9, // ...B...i...,....
	0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6a, 0x06, 0x00, 0x00, 0x69, // ...........j...i
	0x06, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x78, // ...............x
	0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x6b, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, // .......k........
	0x00, 0x00, 0x00, 0x6e, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xbe, // ...n.......2....
	0x00, 0x00, 0x00, 0x64, 0x06, 0x00, 0x00, 0xc1, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, // ...d............
	0x00, 0x00, 0x00, 0x70, 0x06, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x64, 0x06, 0x00, 0x00, 0x0c, // ...p.......d....
	0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x71, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1f, // .......q........
	0x00, 0x00, 0x00, 0x70, 0x06, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x72, // ...p...........r
	0x06, 0x00, 0x00, 0x6e, 0x06, 0x00, 0x00, 0x71, 0x06, 0x00, 0x00, 0xbe, 0x00, 0x05, 0x00, 0x42, // ...n...q.......B
	0x00, 0x00, 0x00, 0x73, 0x06, 0x00, 0x00, 0x2c, 0x06, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x7f, // ...s...,........
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbc, 0x06, 0x00, 0x00, 0x6e, 0x06, 0x00, 0x00, 0x0c, // ...........n....
	0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x76, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // .......v.......2
	0x00, 0x00, 0x00, 0xbc, 0x06, 0x00, 0x00, 0x71, 0x06, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0xa9, // .......q........
	0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x77, 0x06, 0x00, 0x00, 0x73, 0x06, 0x00, 0x00, 0x72, // .......w...s...r
	0x06, 0x00, 0x00, 0x76, 0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x78, 0x06, 0x00, 0x00, 0xf8, // ...v.......x....
	0x00, 0x02, 0x00, 0x78, 0x06, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc8, // ...x............
	0x06, 0x00, 0x00, 0x6a, 0x06, 0x00, 0x00, 0x68, 0x06, 0x00, 0x00, 0x77, 0x06, 0x00, 0x00, 0x6b, // ...j...h...w...k
	0x06, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x2e, 0x06, 0x00, 0x00, 0x2b, // ...P...........+
	0x06, 0x00, 0x00, 0xc8, 0x06, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x90, 0x00, 0x00, 0x00, 0x80, // .......V........
	0x06, 0x00, 0x00, 0x7a, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x58, 0x00, 0x07, 0x00, 0x0d, // ...z...x...X....
	0x00, 0x00, 0x00, 0x83, 0x06, 0x00, 0x00, 0x80, 0x06, 0x00, 0x00, 0x2e, 0x06, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x20, // .......O....... 
	0x06, 0x00, 0x00, 0x83, 0x06, 0x00, 0x00, 0x83, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x22, // ..............."
	0x06, 0x00, 0x00, 0xc5, 0x06, 0x00, 0x00, 0x20, 0x06, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, // ....... ...A...?
	0x01, 0x00, 0x00, 0x23, 0x06, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0xca, 0x01, 0x00, 0x00, 0x00, // ...#...%........
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x24, 0x06, 0x00, 0x00, 0x23, // ...=.......$...#
	0x06, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x25, 0x06, 0x00, 0x00, 0x22, // ...........%..."
	0x06, 0x00, 0x00, 0x24, 0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x68, // ...$...........h
	0x05, 0x00, 0x00, 0xcb, 0x06, 0x00, 0x00, 0x25, 0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x69, // .......%.......i
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x69, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, // .......i........
	0x00, 0x00, 0x00, 0xcd, 0x06, 0x00, 0x00, 0xcb, 0x06, 0x00, 0x00, 0x55, 0x05, 0x00, 0x00, 0x68, // ...........U...h
	0x05, 0x00, 0x00, 0x78, 0x06, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x6b, // ...x.......B...k
	0x05, 0x00, 0x00, 0x2a, 0x05, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x6f, // ...*...........o
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x6b, 0x05, 0x00, 0x00, 0x6c, // ...........k...l
	0x05, 0x00, 0x00, 0x6f, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x6c, 0x05, 0x00, 0x00, 0x0c, // ...o.......l....
	0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x6e, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // .......n.......2
	0x00, 0x00, 0x00, 0x53, 0x04, 0x00, 0x00, 0x5e, 0x04, 0x00, 0x00, 0xcd, 0x06, 0x00, 0x00, 0xf9, // ...S...^........
	0x00, 0x02, 0x00, 0x6f, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x6f, 0x05, 0x00, 0x00, 0xf5, // ...o.......o....
	0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xce, 0x06, 0x00, 0x00, 0xcd, 0x06, 0x00, 0x00, 0x69, // ...............i
	0x05, 0x00, 0x00, 0x6e, 0x05, 0x00, 0x00, 0x6c, 0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...n...l...Q....
	0x00, 0x00, 0x00, 0x68, 0x04, 0x00, 0x00, 0xce, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, // ...h...........Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6a, 0x04, 0x00, 0x00, 0xce, 0x06, 0x00, 0x00, 0x01, // .......j........
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6c, 0x04, 0x00, 0x00, 0xce, // ...Q.......l....
	0x06, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, 0x01, 0x00, 0x00, 0x6d, // .......A...?...m
	0x04, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x7c, 0x02, 0x00, 0x00, 0x83, 0x01, 0x00, 0x00, 0x3d, // ...%...|.......=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6e, 0x04, 0x00, 0x00, 0x6d, 0x04, 0x00, 0x00, 0x50, // .......n...m...P
	0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xbd, 0x06, 0x00, 0x00, 0x68, 0x04, 0x00, 0x00, 0x6a, // ...........h...j
	0x04, 0x00, 0x00, 0x6c, 0x04, 0x00, 0x00, 0x6e, 0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x70, // ...l...n.......p
	0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x70, 0x04, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x0d, // .......p........
	0x00, 0x00, 0x00, 0xdd, 0x06, 0x00, 0x00, 0xde, 0x03, 0x00, 0x00, 0xd7, 0x03, 0x00, 0x00, 0xbd, // ................
	0x06, 0x00, 0x00, 0x6f, 0x05, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x53, 0x03, 0x00, 0x00, 0xdd, // ...o...>...S....
	0x06, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00, 0x00, 0x00, 0x70, 0x02,       // .......8.....p.
};
static const bgfx::EmbeddedShader fs_ball_equirectangular_decal = BGFX_EMBEDDED_SHADER(fs_ball_equirectangular_decal);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of fragment shader from fs_ball.sc to fs_ball_equirectangular_nodecal with options: NOSTEREO EQUIRECTANGULAR NODECAL
static const uint8_t fs_ball_equirectangular_nodecal_mtl[11310] =
{
	0x46, 0x53, 0x48, 0x0b, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x15, 0x74, // FSH....l.......t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, // ex_ball_colorSam
	0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x74, // pler...........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x65, 0x78, // ex_ball_colorTex
	0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, // ture...........t
	0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, // ex_envSampler...
	0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x54, // ........tex_envT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // exture..........
	0x16, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, // .tex_diffuse_env
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Sampler.........
	0x00, 0x16, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, // ..tex_diffuse_en
	0x76, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // vTexture........
	0x00, 0x00, 0x15, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, // ...tex_ball_deca
	0x6c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // lSampler........
	0x00, 0x00, 0x15, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, // ...tex_ball_deca
	0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // lTexture........
	0x00, 0x00, 0x19, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, // ...tex_ball_play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, // fieldSampler....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // .......tex_ball_
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // playfieldTexture
	0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x62, 0x61, 0x6c, 0x6c, 0x4c, // ...........ballL
	0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x0a, 0xc0, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, // ightPos.........
	0x00, 0x07, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x14, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, // ..matView.......
	0x00, 0x00, 0x00, 0x1e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, // ....Roughness_Wr
	0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, // apL_Edge_Thickne
	0x73, 0x73, 0x12, 0x01, 0x40, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x63, 0x41, 0x6d, // ss..@........cAm
	0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, // bient_LightRange
	0x12, 0x01, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x62, 0x61, 0x6c, 0x6c, 0x4c, // ...........ballL
	0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0a, 0x60, 0x01, // ightEmission..`.
	0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // .......fDisableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, // ighting_top_belo
	0x77, 0x12, 0x01, 0x20, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x65, 0x6e, 0x76, // w.. ........fenv
	0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, // EmissionScale_Te
	0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x01, 0x10, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // xWidth..........
	0x13, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, // .w_h_disableLigh
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x01, 0x60, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x63, // ting..`........c
	0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x01, 0x30, 0x02, 0x01, 0x00, // Base_Alpha..0...
	0x00, 0x00, 0x00, 0x00, 0x0c, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, // .....matWorldVie
	0x77, 0x14, 0x01, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x6d, 0x61, 0x74, 0x50, // w..@........matP
	0x72, 0x6f, 0x6a, 0x14, 0x01, 0x80, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x69, 0x6e, // roj...........in
	0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, // vTableRes_reflec
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x01, 0x50, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, // tion..P........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x10, 0x00, 0x00, // ex_ball_color...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, // ........tex_diff
	0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // use_env.........
	0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, // ..tex_ball_decal
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x74, 0x65, 0x78, 0x5f, 0x62, // ...........tex_b
	0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x10, 0x00, 0x00, // all_playfield...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x29, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, // ........)..#incl
	0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, // ude <metal_stdli
	0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, // b>.#include <sim
	0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, // d/simd.h>..using
	0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, //  namespace metal
	0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, // ;..struct _Globa
	0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, // l.{.    float4x4
	0x20, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //  matView;.    fl
	0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, // oat4x4 matWorldV
	0x69, 0x65, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, // iew;.    float4x
	0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // 4 matProj;.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, // loat4 ballLightP
	0x6f, 0x73, 0x5b, 0x31, 0x30, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // os[10];.    floa
	0x74, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, // t4 ballLightEmis
	0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x31, 0x30, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // sion[10];.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, // oat4 cAmbient_Li
	0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // ghtRange;.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, // oat4 fenvEmissio
	0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x3b, // nScale_TexWidth;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x66, 0x44, 0x69, 0x73, // .    float4 fDis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, // ableLighting_top
	0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // _below;.    floa
	0x74, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x0a, // t4 cBase_Alpha;.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, //     float4 Rough
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, // ness_WrapL_Edge_
	0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // Thickness;.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, // loat4 invTableRe
	0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x20, 0x20, // s_reflection;.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, //   float4 w_h_dis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x3b, 0x0a, 0x7d, 0x3b, // ableLighting;.};
	0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, // ..struct xlatMtl
	0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // Main_out.{.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, // loat4 bgfx_FragD
	0x61, 0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, // ata0 [[color(0)]
	0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, // ];.};..struct xl
	0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, // atMtlMain_in.{. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, //    float3 v_norm
	0x61, 0x6c, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, // al [[user(locn0)
	0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, // ]];.    float2 v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, // _texcoord0 [[use
	0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // r(locn1)]];.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, // float3 v_worldPo
	0x73, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x32, 0x29, 0x5d, // s [[user(locn2)]
	0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x5b, 0x5b, 0x20, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x5f, // ];.};..[[ early_
	0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x20, 0x5d, // fragment_tests ]
	0x5d, 0x20, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // ] fragment xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // tlMain_out xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // tlMain(xlatMtlMa
	0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, // in_in in [[stage
	0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, // _in]], constant 
	0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, // _Global& _mtl_u 
	0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, // [[buffer(0)]], t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, // exture2d<float> 
	0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x5b, // tex_ball_color [
	0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, // [texture(0)]], t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, // exture2d<float> 
	0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x20, // tex_diffuse_env 
	0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, // [[texture(2)]], 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, // texture2d<float>
	0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x20, //  tex_ball_decal 
	0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x33, 0x29, 0x5d, 0x5d, 0x2c, 0x20, // [[texture(3)]], 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, // texture2d<float>
	0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, //  tex_ball_playfi
	0x65, 0x6c, 0x64, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x34, 0x29, // eld [[texture(4)
	0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, 0x65, 0x78, 0x5f, // ]], sampler tex_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ball_colorSample
	0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, // r [[sampler(0)]]
	0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, // , sampler tex_di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ffuse_envSampler
	0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, //  [[sampler(2)]],
	0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, //  sampler tex_bal
	0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, // l_decalSampler [
	0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x33, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, // [sampler(3)]], s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // ampler tex_ball_
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // playfieldSampler
	0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x34, 0x29, 0x5d, 0x5d, 0x29, //  [[sampler(4)]])
	0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // .{.    xlatMtlMa
	0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, // in_out out = {};
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x37, 0x35, // .    float4 _175
	0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, // 3;.    do.    {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x39, 0x33, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, // 937 = fast::norm
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x2d, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // alize(-in.v_worl
	0x64, 0x50, 0x6f, 0x73, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // dPos);.        f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x39, 0x33, 0x39, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, // loat3 _939 = fas
	0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x69, 0x6e, 0x2e, // t::normalize(in.
	0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // v_normal);.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x39, 0x34, 0x32, 0x20, 0x3d, //    float3 _942 =
	0x20, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x5f, 0x39, 0x33, 0x37, 0x2c, 0x20, 0x5f, //  reflect(_937, _
	0x39, 0x33, 0x39, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // 939);.        fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x39, 0x34, 0x35, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, // oat _945 = dot(_
	0x39, 0x33, 0x37, 0x2c, 0x20, 0x5f, 0x39, 0x34, 0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 937, _942);.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x39, 0x36, 0x30, 0x20, //     float4 _960 
	0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x2d, 0x5f, 0x39, 0x34, 0x32, 0x2c, 0x20, // = float4(-_942, 
	0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, // 0.0) * _mtl_u.ma
	0x74, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // tView;.        f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x31, 0x35, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x39, 0x36, // loat _1153 = _96
	0x30, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // 0.y;.        flo
	0x61, 0x74, 0x20, 0x5f, 0x31, 0x31, 0x35, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x39, 0x36, 0x30, 0x2e, // at _1154 = _960.
	0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // x;.        float
	0x20, 0x5f, 0x31, 0x37, 0x32, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1724;.        
	0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, // do.        {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, //          float _
	0x31, 0x31, 0x36, 0x39, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x31, 0x31, 0x35, 0x33, // 1169 = abs(_1153
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // );.            f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x31, 0x37, 0x30, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, // loat _1170 = abs
	0x28, 0x5f, 0x31, 0x31, 0x35, 0x34, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // (_1154);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x31, 0x37, 0x30, 0x20, //      if ((_1170 
	0x3c, 0x3d, 0x20, 0x36, 0x2e, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x65, 0x2d, // <= 6.103515625e-
	0x30, 0x35, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x36, 0x39, 0x20, 0x3c, 0x3d, // 05) && (_1169 <=
	0x20, 0x36, 0x2e, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x65, 0x2d, 0x30, 0x35, //  6.103515625e-05
	0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, // )).            {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x5f, 0x31, 0x37, 0x32, 0x34, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, //  _1724 = 0.0;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, //               br
	0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // eak;.           
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //  }.            f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x31, 0x38, 0x34, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, // loat _1184 = (_1
	0x31, 0x37, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x31, 0x36, 0x39, 0x29, 0x20, 0x2f, 0x20, 0x28, // 170 - _1169) / (
	0x5f, 0x31, 0x31, 0x37, 0x30, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x31, 0x36, 0x39, 0x29, 0x3b, 0x0a, // _1170 + _1169);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //             floa
	0x74, 0x20, 0x5f, 0x31, 0x31, 0x39, 0x38, 0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x66, 0x6d, // t _1198 = fma(fm
	0x61, 0x28, 0x30, 0x2e, 0x30, 0x33, 0x33, 0x37, 0x31, 0x39, 0x38, 0x33, 0x37, 0x36, 0x36, 0x35, // a(0.033719837665
	0x35, 0x35, 0x37, 0x38, 0x36, 0x31, 0x33, 0x32, 0x38, 0x31, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x5f, // 557861328125 * _
	0x31, 0x31, 0x38, 0x34, 0x2c, 0x20, 0x5f, 0x31, 0x31, 0x38, 0x34, 0x2c, 0x20, 0x2d, 0x30, 0x2e, // 1184, _1184, -0.
	0x31, 0x35, 0x37, 0x31, 0x33, 0x34, 0x34, 0x37, 0x33, 0x33, 0x32, 0x33, 0x38, 0x32, 0x32, 0x30, // 1571344733238220
	0x32, 0x31, 0x34, 0x38, 0x34, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x35, // 21484375), (_115
	0x34, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x2d, 0x5f, 0x31, 0x31, // 4 < 0.0) ? (-_11
	0x38, 0x34, 0x29, 0x20, 0x3a, 0x20, 0x5f, 0x31, 0x31, 0x38, 0x34, 0x2c, 0x20, 0x28, 0x5f, 0x31, // 84) : _1184, (_1
	0x31, 0x35, 0x34, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x33, // 154 < 0.0) ? 0.3
	0x37, 0x35, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x31, 0x32, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 75 : 0.125);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x32, 0x34, 0x20, 0x3d, //          _1724 =
	0x20, 0x28, 0x5f, 0x31, 0x31, 0x35, 0x33, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, //  (_1153 < 0.0) ?
	0x20, 0x28, 0x2d, 0x5f, 0x31, 0x31, 0x39, 0x38, 0x29, 0x20, 0x3a, 0x20, 0x5f, 0x31, 0x31, 0x39, //  (-_1198) : _119
	0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, // 8;.            b
	0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, // reak;.        } 
	0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, // while(false);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x31, 0x35, //       float _115
	0x37, 0x20, 0x3d, 0x20, 0x5f, 0x39, 0x36, 0x30, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 7 = _960.z;.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x37, 0x32, 0x35, 0x3b, //     float _1725;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, // .        do.    
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x31, 0x33, 0x20, 0x3d, 0x20, //   float _1213 = 
	0x61, 0x62, 0x73, 0x28, 0x5f, 0x31, 0x31, 0x35, 0x37, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // abs(_1157);.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x31, 0x2e, 0x30, //         if ((1.0
	0x20, 0x2d, 0x20, 0x5f, 0x31, 0x32, 0x31, 0x33, 0x29, 0x20, 0x3c, 0x3d, 0x20, 0x36, 0x2e, 0x31, //  - _1213) <= 6.1
	0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x0a, 0x20, 0x20, // 03515625e-05).  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //           {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x32, //             _172
	0x35, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x35, 0x37, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, // 5 = (_1157 >= 0.
	0x30, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x30, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, // 0) ? 0.0 : 1.0;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // break;.         
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    }.           
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x32, 0x33, 0x20, 0x3d, 0x20, 0x66, //  float _1223 = f
	0x6d, 0x61, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x34, 0x39, 0x36, 0x34, 0x37, 0x34, 0x32, 0x38, 0x30, // ma(-0.0496474280
	0x39, 0x35, 0x33, 0x34, 0x30, 0x37, 0x32, 0x38, 0x37, 0x35, 0x39, 0x37, 0x36, 0x35, 0x36, 0x32, // 9534072875976562
	0x35, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x31, 0x33, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x39, 0x38, 0x30, // 5, _1213, 0.4980
	0x34, 0x39, 0x39, 0x31, 0x34, 0x38, 0x33, 0x36, 0x38, 0x38, 0x33, 0x35, 0x34, 0x34, 0x39, 0x32, // 4991483688354492
	0x31, 0x38, 0x37, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1875);.         
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x32, 0x36, 0x20, 0x3d, //    float _1226 =
	0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x32, 0x31, //  sqrt(1.0 - _121
	0x33, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 3);.            
	0x5f, 0x31, 0x37, 0x32, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x35, 0x37, 0x20, 0x3e, // _1725 = (_1157 >
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x5f, 0x31, 0x32, 0x32, 0x33, 0x20, // = 0.0) ? (_1223 
	0x2a, 0x20, 0x5f, 0x31, 0x32, 0x32, 0x36, 0x29, 0x20, 0x3a, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x2d, // * _1226) : fma(-
	0x5f, 0x31, 0x32, 0x32, 0x33, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x32, 0x36, 0x2c, 0x20, 0x31, 0x2e, // _1223, _1226, 1.
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0);.            
	0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, // break;.        }
	0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, //  while(false);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, //        float4 _1
	0x32, 0x35, 0x33, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, // 253 = tex_ball_d
	0x65, 0x63, 0x61, 0x6c, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, // ecal.sample(tex_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ball_decalSample
	0x72, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, // r, in.v_texcoord
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 0);.        floa
	0x74, 0x33, 0x20, 0x5f, 0x39, 0x37, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x35, 0x33, 0x2e, // t3 _977 = _1253.
	0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x32, 0x35, 0x33, 0x2e, 0x77, 0x3b, 0x0a, 0x20, // xyz * _1253.w;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x39, //        float3 _9
	0x38, 0x30, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, // 80 = tex_ball_co
	0x6c, 0x6f, 0x72, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, // lor.sample(tex_b
	0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // all_colorSampler
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x5f, // , float2(0.5 + _
	0x31, 0x37, 0x32, 0x34, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x32, 0x35, 0x29, 0x2c, 0x20, 0x6c, 0x65, // 1724, _1725), le
	0x76, 0x65, 0x6c, 0x28, 0x28, 0x5f, 0x39, 0x34, 0x35, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x36, 0x30, // vel((_945 > 0.60
	0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, // 0000023841857910
	0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x20, 0x3f, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x39, 0x34, // 15625) ? fma(_94
	0x35, 0x2c, 0x20, 0x31, 0x35, 0x2e, 0x30, 0x2c, 0x20, 0x2d, 0x39, 0x2e, 0x30, 0x29, 0x20, 0x3a, // 5, 15.0, -9.0) :
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x5f, 0x39, 0x37, //  0.0)).xyz + _97
	0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, // 7;.        if (_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, // mtl_u.w_h_disabl
	0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x7a, 0x20, 0x21, 0x3d, 0x20, 0x30, // eLighting.z != 0
	0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, // .0).        {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x35, 0x33, 0x20, //           _1753 
	0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x39, 0x38, 0x30, 0x2c, 0x20, 0x5f, // = float4(_980, _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, // mtl_u.cBase_Alph
	0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // a.w);.          
	0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   break;.       
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  }.        float
	0x33, 0x20, 0x5f, 0x39, 0x39, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x39, 0x38, 0x30, 0x20, 0x2a, 0x20, // 3 _996 = _980 * 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, // _mtl_u.fenvEmiss
	0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, // ionScale_TexWidt
	0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // h.x;.        flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x30, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x6d, 0x74, // at3 _1000 = (_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, // l_u.matWorldView
	0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, //  * float4(0.0, 0
	0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, // .0, 1.0, 0.0)).x
	0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // yz;.        floa
	0x74, 0x20, 0x5f, 0x31, 0x30, 0x30, 0x33, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, // t _1003 = dot(_1
	0x30, 0x30, 0x30, 0x2c, 0x20, 0x5f, 0x39, 0x34, 0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 000, _942);.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x30, 0x31, 0x34, 0x20, //     float _1014 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x30, 0x30, 0x30, 0x2c, 0x20, 0x69, 0x6e, 0x2e, // = dot(_1000, in.
	0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x20, 0x2d, 0x20, 0x28, 0x5f, 0x6d, // v_worldPos - (_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, // tl_u.matWorldVie
	0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, // w * float4(0.0, 
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2e, // 0.0, 0.0, 1.0)).
	0x78, 0x79, 0x7a, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x31, 0x30, 0x30, 0x33, 0x3b, 0x0a, 0x20, 0x20, // xyz) / _1003;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x30, //       float4 _10
	0x32, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x50, // 27 = _mtl_u.matP
	0x72, 0x6f, 0x6a, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x69, 0x6e, 0x2e, // roj * float4(in.
	0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x20, 0x2d, 0x20, 0x28, 0x5f, 0x39, // v_worldPos - (_9
	0x34, 0x32, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x30, 0x31, 0x34, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, // 42 * _1014), 1.0
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // );.        float
	0x32, 0x20, 0x5f, 0x31, 0x30, 0x33, 0x38, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // 2 _1038 = float2
	0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // (0.5) + (float2(
	0x5f, 0x31, 0x30, 0x32, 0x37, 0x2e, 0x78, 0x2c, 0x20, 0x2d, 0x5f, 0x31, 0x30, 0x32, 0x37, 0x2e, // _1027.x, -_1027.
	0x79, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2f, 0x20, 0x5f, 0x31, 0x30, 0x32, // y) * (0.5 / _102
	0x37, 0x2e, 0x77, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // 7.w));.        f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x32, 0x36, 0x32, 0x20, 0x3d, 0x20, 0x74, 0x65, // loat4 _1262 = te
	0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, // x_ball_playfield
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // .sample(tex_ball
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // _playfieldSample
	0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x33, 0x38, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, // r, (_1038 + floa
	0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, // t2(_mtl_u.w_h_di
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, // sableLighting.x,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  0.0)));.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x31, 0x20, 0x3d, 0x20, //  float4 _1271 = 
	0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, // tex_ball_playfie
	0x6c, 0x64, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, // ld.sample(tex_ba
	0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, // ll_playfieldSamp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x33, 0x38, 0x20, 0x2d, 0x20, 0x66, 0x6c, // ler, (_1038 - fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, // oat2(_mtl_u.w_h_
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, // disableLighting.
	0x78, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // x, 0.0)));.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x32, 0x38, 0x30, 0x20, //    float4 _1280 
	0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, // = tex_ball_playf
	0x69, 0x65, 0x6c, 0x64, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, // ield.sample(tex_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, // ball_playfieldSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x33, 0x38, 0x20, 0x2b, 0x20, // mpler, (_1038 + 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // float2(0.0, _mtl
	0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, // _u.w_h_disableLi
	0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // ghting.y)));.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x32, 0x38, //      float4 _128
	0x39, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, // 9 = tex_ball_pla
	0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, // yfield.sample(te
	0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, // x_ball_playfield
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x33, 0x38, 0x20, // Sampler, (_1038 
	0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x6d, // - float2(0.0, _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // tl_u.w_h_disable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, // Lighting.y)));. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, //        float3 _1
	0x37, 0x32, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, // 726;.        if 
	0x28, 0x28, 0x21, 0x28, 0x28, 0x28, 0x28, 0x5f, 0x31, 0x30, 0x33, 0x38, 0x2e, 0x78, 0x20, 0x3c, // ((!((((_1038.x <
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x33, 0x38, 0x2e, //  0.0) || (_1038.
	0x78, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, // x > 1.0)) || (_1
	0x30, 0x33, 0x38, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, // 038.y < 0.0)) ||
	0x20, 0x28, 0x5f, 0x31, 0x30, 0x33, 0x38, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, //  (_1038.y > 1.0)
	0x29, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x21, 0x28, 0x5f, 0x31, 0x30, 0x31, 0x34, 0x20, 0x3c, // )) && (!(_1014 <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // = 0.0))).       
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //  {.            _
	0x31, 0x37, 0x32, 0x36, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x39, 0x39, 0x36, 0x2c, // 1726 = mix(_996,
	0x20, 0x28, 0x28, 0x28, 0x5f, 0x31, 0x32, 0x36, 0x32, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, //  (((_1262.xyz + 
	0x5f, 0x31, 0x32, 0x37, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x32, // _1271.xyz) + _12
	0x38, 0x30, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x32, 0x38, 0x39, 0x2e, // 80.xyz) + _1289.
	0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // xyz) * 0.25, flo
	0x61, 0x74, 0x33, 0x28, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, // at3(smoothstep(0
	0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x35, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x35, 0x39, // .0, 0.1500000059
	0x36, 0x30, 0x34, 0x36, 0x34, 0x34, 0x37, 0x37, 0x35, 0x33, 0x39, 0x30, 0x36, 0x32, 0x35, 0x2c, // 604644775390625,
	0x20, 0x5f, 0x31, 0x30, 0x30, 0x33, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, //  _1003) * _mtl_u
	0x2e, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, // .invTableRes_ref
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // lection.z));.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, //      }.        e
	0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, // lse.        {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x32, 0x36, 0x20, //           _1726 
	0x3d, 0x20, 0x5f, 0x39, 0x39, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // = _996;.        
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // }.        float3
	0x20, 0x5f, 0x31, 0x31, 0x31, 0x34, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, //  _1114 = (_mtl_u
	0x2e, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, // .cBase_Alpha.xyz
	0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x37, 0x35, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x39, 0x38, //  * 0.07500000298
	0x30, 0x32, 0x33, 0x32, 0x32, 0x33, 0x38, 0x37, 0x36, 0x39, 0x35, 0x33, 0x31, 0x32, 0x35, 0x29, // 023223876953125)
	0x20, 0x2a, 0x20, 0x5f, 0x39, 0x37, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  * _977;.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x31, 0x31, 0x37, 0x20, 0x3d, 0x20, //  float3 _1117 = 
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x31, 0x31, 0x34, 0x20, // fast::max(_1114 
	0x2a, 0x20, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, // * 2.0, float3(0.
	0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x34, 0x39, 0x30, 0x31, 0x31, 0x36, 0x31, // 1000000014901161
	0x31, 0x39, 0x33, 0x38, 0x34, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, // 19384765625));. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, //        float3 _1
	0x31, 0x32, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x69, 0x6e, 0x28, // 122 = fast::min(
	0x5f, 0x31, 0x37, 0x32, 0x36, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x35, // _1726, float3(15
	0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x42, // .0)) * _mtl_u.cB
	0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, // ase_Alpha.xyz;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, //        float3 _1
	0x31, 0x32, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, // 124 = float3(1.0
	0x29, 0x20, 0x2d, 0x20, 0x5f, 0x39, 0x37, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ) - _977;.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x31, 0x32, 0x36, 0x20, 0x3d, //   float3 _1126 =
	0x20, 0x5f, 0x31, 0x31, 0x32, 0x32, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x31, 0x32, 0x34, 0x3b, 0x0a, //  _1122 * _1124;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, //         float _1
	0x33, 0x30, 0x36, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, // 306 = fast::max(
	0x5f, 0x31, 0x31, 0x31, 0x34, 0x2e, 0x78, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, // _1114.x, fast::m
	0x61, 0x78, 0x28, 0x5f, 0x31, 0x31, 0x31, 0x34, 0x2e, 0x79, 0x2c, 0x20, 0x5f, 0x31, 0x31, 0x31, // ax(_1114.y, _111
	0x34, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // 4.z));.        f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x31, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, // loat _1314 = fas
	0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x31, 0x31, 0x37, 0x2e, 0x78, 0x2c, 0x20, // t::max(_1117.x, 
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x31, 0x31, 0x37, 0x2e, // fast::max(_1117.
	0x79, 0x2c, 0x20, 0x5f, 0x31, 0x31, 0x31, 0x37, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // y, _1117.z));.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x32, //       float _132
	0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x33, 0x30, 0x36, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x33, 0x31, // 2 = _1306 + _131
	0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 4;.        float
	0x33, 0x20, 0x5f, 0x31, 0x37, 0x32, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 3 _1729;.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x30, 0x3b, 0x0a, 0x20, //  float3 _1740;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x31, 0x33, 0x32, 0x32, //        if (_1322
	0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  > 1.0).        
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // {.            fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x32, 0x37, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, // oat _1327 = 1.0 
	0x2f, 0x20, 0x5f, 0x31, 0x33, 0x32, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // / _1322;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x31, //      _1740 = _11
	0x31, 0x37, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x33, 0x32, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 17 * _1327;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x32, 0x39, 0x20, 0x3d, 0x20, //         _1729 = 
	0x5f, 0x31, 0x31, 0x31, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x33, 0x32, 0x37, 0x3b, 0x0a, 0x20, // _1114 * _1327;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        }.       
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, //  else.        {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x34, //             _174
	0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x31, 0x31, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 0 = _1117;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x32, 0x39, 0x20, 0x3d, 0x20, 0x5f, //        _1729 = _
	0x31, 0x31, 0x31, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, // 1114;.        }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x31, 0x37, 0x33, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, // 1735;.        if
	0x20, 0x28, 0x28, 0x74, 0x72, 0x75, 0x65, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x33, 0x30, //  ((true && (_130
	0x36, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, // 6 > 0.0)) || (_1
	0x33, 0x31, 0x34, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // 314 > 0.0)).    
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x36, 0x3b, 0x0a, //   float3 _1736;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x33, //             _173
	0x36, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, // 6 = float3(0.0);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // .            flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x33, 0x35, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // at3 _1357;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, //        for (int 
	0x5f, 0x31, 0x37, 0x32, 0x37, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x5f, 0x31, 0x37, 0x32, 0x37, // _1727 = 0; _1727
	0x20, 0x3c, 0x20, 0x31, 0x30, 0x3b, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x36, 0x20, 0x3d, 0x20, 0x5f, //  < 10; _1736 = _
	0x31, 0x33, 0x35, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x32, 0x37, 0x2b, 0x2b, 0x29, 0x0a, 0x20, // 1357, _1727++). 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //            {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, //              flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // at3 _1744;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, //            do.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, //               {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x34, 0x32, 0x31, //     float3 _1421
	0x20, 0x3d, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x56, 0x69, //  = (_mtl_u.matVi
	0x65, 0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // ew * float4(_mtl
	0x5f, 0x75, 0x2e, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, // _u.ballLightPos[
	0x5f, 0x31, 0x37, 0x32, 0x37, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, // _1727].xyz, 1.0)
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x77, 0x6f, 0x72, // ).xyz - in.v_wor
	0x6c, 0x64, 0x50, 0x6f, 0x73, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ldPos;.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x33, 0x20, 0x5f, 0x31, 0x34, 0x32, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, // 3 _1423 = fast::
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x31, 0x34, 0x32, 0x31, 0x29, // normalize(_1421)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, 0x32, //       float _142
	0x35, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x39, 0x33, 0x39, 0x2c, 0x20, 0x5f, 0x31, // 5 = dot(_939, _1
	0x34, 0x32, 0x33, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 423);.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //           float3
	0x20, 0x5f, 0x31, 0x37, 0x34, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1741;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, //             if (
	0x74, 0x72, 0x75, 0x65, 0x20, 0x26, 0x26, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x34, 0x32, 0x35, 0x20, // true && ((_1425 
	0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, // + _mtl_u.Roughne
	0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, // ss_WrapL_Edge_Th
	0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, // ickness.y) > 0.0
	0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // )).             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, 0x34, 0x30, 0x20, 0x3d, 0x20, 0x31, //  float _1440 = 1
	0x2e, 0x30, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x67, // .0 + _mtl_u.Roug
	0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, // hness_WrapL_Edge
	0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, // _Thickness.y;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x31, //       _1741 = _1
	0x37, 0x32, 0x39, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x34, 0x32, 0x35, 0x20, 0x2b, 0x20, // 729 * ((_1425 + 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, // _mtl_u.Roughness
	0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, // _WrapL_Edge_Thic
	0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x31, 0x34, 0x34, // kness.y) / (_144
	0x30, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x34, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 0 * _1440));.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  }.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, //        else.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x31, 0x20, //           _1741 
	0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, // = float3(0.0);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    }.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, //          float3 
	0x5f, 0x31, 0x37, 0x34, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _1742;.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, //            if (_
	0x31, 0x34, 0x32, 0x35, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // 1425 > 0.0).    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //           float3
	0x20, 0x5f, 0x31, 0x34, 0x35, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, //  _1450 = fast::n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x31, 0x34, 0x32, 0x33, 0x20, 0x2b, // ormalize(_1423 +
	0x20, 0x5f, 0x39, 0x33, 0x37, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _937);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x32, 0x20, 0x3d, 0x20, 0x64, 0x6f, // float _1452 = do
	0x74, 0x28, 0x5f, 0x39, 0x33, 0x39, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x30, 0x29, 0x3b, 0x0a, // t(_939, _1450);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, //         float _1
	0x34, 0x35, 0x35, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x34, 0x32, 0x33, 0x2c, // 455 = dot(_1423,
	0x20, 0x5f, 0x31, 0x34, 0x35, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1450);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x37, 0x20, 0x3d, 0x20, 0x64, //  float _1457 = d
	0x6f, 0x74, 0x28, 0x5f, 0x39, 0x33, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x30, 0x29, 0x3b, // ot(_937, _1450);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, //          float3 
	0x5f, 0x31, 0x37, 0x34, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _1743;.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, //                i
	0x66, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x31, 0x34, 0x35, 0x32, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, // f (((_1452 > 0.0
	0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x34, 0x35, 0x35, 0x20, 0x3e, 0x20, 0x30, 0x2e, // ) && (_1455 > 0.
	0x30, 0x29, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x34, 0x35, 0x37, 0x20, 0x3e, 0x20, // 0)) && (_1457 > 
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0.0)).          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, //               {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x34, //             _174
	0x33, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x31, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x31, // 3 = _1741 + ((_1
	0x37, 0x34, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, // 740 + ((float3(1
	0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x70, // .0) - _1740) * p
	0x6f, 0x77, 0x72, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x35, 0x2c, // owr(1.0 - _1455,
	0x20, 0x35, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x6d, 0x74, //  5.0))) * (((_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, // l_u.Roughness_Wr
	0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, // apL_Edge_Thickne
	0x73, 0x73, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x38, // ss.x + 1.0) / (8
	0x2e, 0x30, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x37, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x70, // .0 * _1457)) * p
	0x6f, 0x77, 0x72, 0x28, 0x5f, 0x31, 0x34, 0x35, 0x32, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // owr(_1452, _mtl_
	0x75, 0x2e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, // u.Roughness_Wrap
	0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, // L_Edge_Thickness
	0x2e, 0x78, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .x)));.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, //                }
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, //          else.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, 0x34, //     _1743 = _174
	0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1;.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, //            }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, //      _1742 = _17
	0x34, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 43;.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, //               el
	0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // se.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x5f, 0x31, 0x37, 0x34, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x31, 0x3b, 0x0a, //  _1742 = _1741;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     }.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //           float 
	0x5f, 0x31, 0x34, 0x38, 0x33, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x34, 0x32, // _1483 = dot(_142
	0x31, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x32, 0x31, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 1, _1421);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x30, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, // loat _1500 = fas
	0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, // t::clamp(1.0 - (
	0x28, 0x5f, 0x31, 0x34, 0x38, 0x33, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x38, 0x33, 0x29, 0x20, // (_1483 * _1483) 
	0x2f, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x41, 0x6d, 0x62, // / (((_mtl_u.cAmb
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, // ient_LightRange.
	0x77, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x41, 0x6d, 0x62, 0x69, // w * _mtl_u.cAmbi
	0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, // ent_LightRange.w
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x41, 0x6d, 0x62, 0x69, // ) * _mtl_u.cAmbi
	0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, // ent_LightRange.w
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x41, 0x6d, 0x62, 0x69, // ) * _mtl_u.cAmbi
	0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, // ent_LightRange.w
	0x29, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, // )), 0.0, 1.0);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x35, 0x32, 0x34, 0x20, //    float3 _1524 
	0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x37, 0x34, 0x30, 0x20, 0x2b, 0x20, 0x5f, 0x31, // = fma(_1740 + _1
	0x37, 0x32, 0x39, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x41, 0x6d, 0x62, // 729, _mtl_u.cAmb
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, // ient_LightRange.
	0x78, 0x79, 0x7a, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x37, 0x34, 0x32, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // xyz, (_1742 * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, // tl_u.ballLightEm
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x5f, 0x31, 0x37, 0x32, 0x37, 0x5d, 0x2e, 0x78, 0x79, // ission[_1727].xy
	0x7a, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x35, 0x30, 0x30, 0x20, 0x2a, 0x20, 0x5f, // z) * ((_1500 * _
	0x31, 0x35, 0x30, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x31, 0x34, 0x38, 0x33, 0x20, 0x2b, // 1500) / (_1483 +
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  1.0)));.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, //              if 
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // (_mtl_u.fDisable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, // Lighting_top_bel
	0x6f, 0x77, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, // ow.x != 0.0).   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  {.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x34, //            _1744
	0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x31, 0x35, 0x32, 0x34, 0x2c, 0x20, 0x5f, 0x31, //  = mix(_1524, _1
	0x37, 0x32, 0x39, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // 729, float3(_mtl
	0x5f, 0x75, 0x2e, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, // _u.fDisableLight
	0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x29, // ing_top_below.x)
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, //            break
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, //             else
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //                _
	0x31, 0x37, 0x34, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x32, 0x34, 0x3b, 0x0a, 0x20, 0x20, // 1744 = _1524;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, //       break;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  }.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, //        break; //
	0x20, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, //  unreachable wor
	0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // karound.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, //         } while(
	0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // false);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x33, 0x35, 0x37, 0x20, 0x3d, 0x20, //         _1357 = 
	0x5f, 0x31, 0x37, 0x33, 0x36, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x34, 0x3b, 0x0a, 0x20, // _1736 + _1744;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, //            }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x35, 0x20, 0x3d, //          _1735 =
	0x20, 0x5f, 0x31, 0x37, 0x33, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1736;.        
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, // }.        else. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, //      _1735 = flo
	0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // at3(0.0);.      
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //   }.        floa
	0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // t3 _1737;.      
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x74, 0x72, 0x75, 0x65, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, //   if (true && (_
	0x31, 0x33, 0x30, 0x36, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, // 1306 > 0.0)).   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x33, 0x37, 0x37, 0x20, //    float3 _1377 
	0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, // = fast::normaliz
	0x65, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, // e((_mtl_u.matVie
	0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x39, 0x33, 0x39, 0x2c, // w * float4(_939,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, //  0.0)).xyz);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, //          float _
	0x31, 0x35, 0x37, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x33, 0x37, 0x37, 0x2e, 0x79, 0x3b, 0x0a, // 1573 = _1377.y;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //             floa
	0x74, 0x20, 0x5f, 0x31, 0x35, 0x37, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x33, 0x37, 0x37, 0x2e, // t _1574 = _1377.
	0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // x;.            f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // loat _1731;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //         do.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, //          float _
	0x31, 0x35, 0x38, 0x39, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x31, 0x35, 0x37, 0x33, // 1589 = abs(_1573
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x39, 0x30, 0x20, 0x3d, //    float _1590 =
	0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x31, 0x35, 0x37, 0x34, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, //  abs(_1574);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, //              if 
	0x28, 0x28, 0x5f, 0x31, 0x35, 0x39, 0x30, 0x20, 0x3c, 0x3d, 0x20, 0x36, 0x2e, 0x31, 0x30, 0x33, // ((_1590 <= 6.103
	0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, // 515625e-05) && (
	0x5f, 0x31, 0x35, 0x38, 0x39, 0x20, 0x3c, 0x3d, 0x20, 0x36, 0x2e, 0x31, 0x30, 0x33, 0x35, 0x31, // _1589 <= 6.10351
	0x35, 0x36, 0x32, 0x35, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 5625e-05)).     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //            {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x5f, 0x31, 0x37, 0x33, 0x31, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, //  _1731 = 0.0;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   break;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          }.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x20, 0x5f, 0x31, 0x36, 0x30, 0x34, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x39, 0x30, 0x20, //  _1604 = (_1590 
	0x2d, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x39, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x39, // - _1589) / (_159
	0x30, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x39, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 0 + _1589);.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //             floa
	0x74, 0x20, 0x5f, 0x31, 0x36, 0x31, 0x38, 0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x66, 0x6d, // t _1618 = fma(fm
	0x61, 0x28, 0x30, 0x2e, 0x30, 0x33, 0x33, 0x37, 0x31, 0x39, 0x38, 0x33, 0x37, 0x36, 0x36, 0x35, // a(0.033719837665
	0x35, 0x35, 0x37, 0x38, 0x36, 0x31, 0x33, 0x32, 0x38, 0x31, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x5f, // 557861328125 * _
	0x31, 0x36, 0x30, 0x34, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x30, 0x34, 0x2c, 0x20, 0x2d, 0x30, 0x2e, // 1604, _1604, -0.
	0x31, 0x35, 0x37, 0x31, 0x33, 0x34, 0x34, 0x37, 0x33, 0x33, 0x32, 0x33, 0x38, 0x32, 0x32, 0x30, // 1571344733238220
	0x32, 0x31, 0x34, 0x38, 0x34, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x37, // 21484375), (_157
	0x34, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x2d, 0x5f, 0x31, 0x36, // 4 < 0.0) ? (-_16
	0x30, 0x34, 0x29, 0x20, 0x3a, 0x20, 0x5f, 0x31, 0x36, 0x30, 0x34, 0x2c, 0x20, 0x28, 0x5f, 0x31, // 04) : _1604, (_1
	0x35, 0x37, 0x34, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x33, // 574 < 0.0) ? 0.3
	0x37, 0x35, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x31, 0x32, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 75 : 0.125);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, //              _17
	0x33, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x37, 0x33, 0x20, 0x3c, 0x20, 0x30, 0x2e, // 31 = (_1573 < 0.
	0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x2d, 0x5f, 0x31, 0x36, 0x31, 0x38, 0x29, 0x20, 0x3a, 0x20, // 0) ? (-_1618) : 
	0x5f, 0x31, 0x36, 0x31, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _1618;.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, //        break;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, //           } whil
	0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // e(false);.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x37, //       float _157
	0x37, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x33, 0x37, 0x37, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 7 = _1377.z;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, //          float _
	0x31, 0x37, 0x33, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1732;.          
	0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   do.           
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  {.             
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x33, 0x33, 0x20, 0x3d, //    float _1633 =
	0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x31, 0x35, 0x37, 0x37, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, //  abs(_1577);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, //              if 
	0x28, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x36, 0x33, 0x33, 0x29, 0x20, 0x3c, // ((1.0 - _1633) <
	0x3d, 0x20, 0x36, 0x2e, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x65, 0x2d, 0x30, // = 6.103515625e-0
	0x35, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 5).             
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x32, 0x20, 0x3d, //          _1732 =
	0x20, 0x28, 0x5f, 0x31, 0x35, 0x37, 0x37, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, //  (_1577 >= 0.0) 
	0x3f, 0x20, 0x30, 0x2e, 0x30, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, // ? 0.0 : 1.0;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  break;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //           float 
	0x5f, 0x31, 0x36, 0x34, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x2d, 0x30, 0x2e, 0x30, // _1643 = fma(-0.0
	0x34, 0x39, 0x36, 0x34, 0x37, 0x34, 0x32, 0x38, 0x30, 0x39, 0x35, 0x33, 0x34, 0x30, 0x37, 0x32, // 4964742809534072
	0x38, 0x37, 0x35, 0x39, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x33, // 8759765625, _163
	0x33, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x39, 0x38, 0x30, 0x34, 0x39, 0x39, 0x31, 0x34, 0x38, 0x33, // 3, 0.49804991483
	0x36, 0x38, 0x38, 0x33, 0x35, 0x34, 0x34, 0x39, 0x32, 0x31, 0x38, 0x37, 0x35, 0x29, 0x3b, 0x0a, // 6883544921875);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x34, 0x36, 0x20, 0x3d, 0x20, 0x73, 0x71, // float _1646 = sq
	0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x36, 0x33, 0x33, 0x29, 0x3b, // rt(1.0 - _1633);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x5f, 0x31, 0x37, 0x33, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x37, 0x37, 0x20, //  _1732 = (_1577 
	0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x5f, 0x31, 0x36, 0x34, 0x33, // >= 0.0) ? (_1643
	0x20, 0x2a, 0x20, 0x5f, 0x31, 0x36, 0x34, 0x36, 0x29, 0x20, 0x3a, 0x20, 0x66, 0x6d, 0x61, 0x28, //  * _1646) : fma(
	0x2d, 0x5f, 0x31, 0x36, 0x34, 0x33, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x34, 0x36, 0x2c, 0x20, 0x31, // -_1643, _1646, 1
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .0);.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //      break;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, //         } while(
	0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // false);.        
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, 0x33, //     _1737 = _173
	0x35, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x37, 0x32, 0x39, 0x20, 0x2a, 0x20, 0x74, 0x65, // 5 + ((_1729 * te
	0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x2e, 0x73, 0x61, // x_diffuse_env.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // mple(tex_diffuse
	0x5f, 0x65, 0x6e, 0x76, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // _envSampler, flo
	0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x31, 0x2c, // at2(0.5 + _1731,
	0x20, 0x5f, 0x31, 0x37, 0x33, 0x32, 0x29, 0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x30, //  _1732), level(0
	0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // .0)).xyz) * _mtl
	0x5f, 0x75, 0x2e, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, // _u.fenvEmissionS
	0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x29, // cale_TexWidth.x)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, // ;.        }.    
	0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     else.       
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //  {.            _
	0x31, 0x37, 0x33, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x35, 0x3b, 0x0a, 0x20, 0x20, // 1737 = _1735;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x38, 0x3b, 0x0a, 0x20, 0x20, // float3 _1738;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, //       if (fast::
	0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x31, 0x32, 0x36, 0x2e, 0x78, 0x2c, 0x20, 0x66, 0x61, 0x73, // max(_1126.x, fas
	0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x31, 0x32, 0x36, 0x2e, 0x79, 0x2c, 0x20, // t::max(_1126.y, 
	0x5f, 0x31, 0x31, 0x32, 0x36, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, // _1126.z)) > 0.0)
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .        {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x38, 0x20, 0x3d, 0x20, 0x66, //        _1738 = f
	0x6d, 0x61, 0x28, 0x5f, 0x31, 0x31, 0x32, 0x32, 0x2c, 0x20, 0x5f, 0x31, 0x31, 0x32, 0x34, 0x2c, // ma(_1122, _1124,
	0x20, 0x5f, 0x31, 0x37, 0x33, 0x37, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1737);.       
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, //  }.        else.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, //       _1738 = _1
	0x37, 0x33, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, // 737;.        }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x35, 0x33, 0x20, 0x3d, 0x20, 0x66, //        _1753 = f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x37, 0x33, 0x38, 0x2c, 0x20, 0x5f, 0x6d, 0x74, // loat4(_1738, _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, // l_u.cBase_Alpha.
	0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, // w);.        brea
	0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, // k;.    } while(f
	0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, // alse);.    out.b
	0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, // gfx_FragData0 = 
	0x5f, 0x31, 0x37, 0x35, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // _1753;.    retur
	0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, 0x10, 0x03,             // n out;.}......
};
static const uint8_t fs_ball_equirectangular_nodecal_essl[14111] =
{
	0x46, 0x53, 0x48, 0x0b, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x37, // FSH....l.......7
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // s.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, // arying in.precis
	0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3b, // ion highp float;
	0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // .precision highp
	0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, //  int;.#define sh
	0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adow2D(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //  _coord) texture
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // (_sampler, _coor
	0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, // d).#define shado
	0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // w2DProj(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // eProj(_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x6f, 0x75, 0x74, 0x20, 0x6d, 0x65, 0x64, 0x69, // _coord).out medi
	0x75, 0x6d, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, // ump vec4 bgfx_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // agColor;.varying
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, //  vec3 v_normal;.
	0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, // varying vec2 v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // excoord0;.varyin
	0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, // g vec3 v_worldPo
	0x73, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, // s;.vec3 instMul(
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, // vec3 _vec, mat3 
	0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, // _mtx) { return (
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, //  (_vec) * (_mtx)
	0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, //  ); }.vec3 instM
	0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, // ul(mat3 _mtx, ve
	0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // c3 _vec) { retur
	0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, // n ( (_mtx) * (_v
	0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, // ec) ); }.vec4 in
	0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, // stMul(vec4 _vec,
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, //  mat4 _mtx) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, // turn ( (_vec) * 
	0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // (_mtx) ); }.vec4
	0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, //  instMul(mat4 _m
	0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, // tx, vec4 _vec) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, //  return ( (_mtx)
	0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, //  * (_vec) ); }.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // loat rcp(float _
	0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, // a) { return 1.0/
	0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, // _a; }.vec2 rcp(v
	0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec2 _a) { return
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, //  vec2(1.0)/_a; }
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // .vec3 rcp(vec3 _
	0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, // a) { return vec3
	0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // (1.0)/_a; }.vec4
	0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, //  rcp(vec4 _a) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, // return vec4(1.0)
	0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, // /_a; }.vec2 vec2
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, // _splat(float _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, //  { return vec2(_
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // x, _x); }.vec3 v
	0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ec3_splat(float 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _x) { return vec
	0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // 3(_x, _x, _x); }
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // .vec4 vec4_splat
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // (float _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // urn vec4(_x, _x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, //  _x, _x); }.uvec
	0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, // 2 uvec2_splat(ui
	0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // nt _x) { return 
	0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // uvec2(_x, _x); }
	0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, // .uvec3 uvec3_spl
	0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // at(uint _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // turn uvec3(_x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, // x, _x); }.uvec4 
	0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec4_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, //  _x) { return uv
	0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, // ec4(_x, _x, _x, 
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, // _x); }.mat4 mtxF
	0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, // romRows(vec4 _0,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, //  vec4 _1, vec4 _
	0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 2, vec4 _3).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, // turn transpose(m
	0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, // at4(_0, _1, _2, 
	0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, // _3) );.}.mat4 mt
	0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // xFromCols(vec4 _
	0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // 0, vec4 _1, vec4
	0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, //  _2, vec4 _3).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, // return mat4(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, // _1, _2, _3);.}.m
	0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, // at3 mtxFromRows(
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, // vec3 _0, vec3 _1
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // , vec3 _2).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, // urn transpose(ma
	0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, // t3(_0, _1, _2) )
	0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, // ;.}.mat3 mtxFrom
	0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, // Cols(vec3 _0, ve
	0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, // c3 _1, vec3 _2).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, // {.return mat3(_0
	0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, // , _1, _2);.}.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, // form vec4 u_view
	0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // Rect;.uniform ve
	0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, // c4 u_viewTexel;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, // uniform mat4 u_v
	0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, // iew;.uniform mat
	0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // 4 u_invView;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, // form mat4 u_proj
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // _invProj;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, // m mat4 u_viewPro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, // u_invViewProj;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, // niform mat4 u_mo
	0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // del[32];.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, //  mat4 u_modelVie
	0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // w;.uniform mat4 
	0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, // u_modelViewProj;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, // .uniform vec4 u_
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // alphaRef4;.float
	0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  sqr(const float
	0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, //  v).{.return v*v
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, // ;.}.vec2 sqr(con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // st vec2 v).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // urn v*v;.}.vec3 
	0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // sqr(const vec3 v
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, // ).{.return v*v;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x63, 0x6f, // }.vec3 mul_w1(co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // nst vec3 v, cons
	0x74, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // t mat4 m).{.retu
	0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // rn v.x*m[0].xyz 
	0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // + (v.y*m[1].xyz 
	0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // + (v.z*m[2].xyz 
	0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // + m[3].xyz));.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, // float acos_appro
	0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // x_divPI(const fl
	0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // oat v).{.const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, // loat x = abs(v);
	0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, // .if(1. - x <= 0.
	0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, // 00006103515625).
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, // return (v >= 0.)
	0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, //  ? 0. : 1.;.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, // t float res = ((
	0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, // -0.155972/3.1415
	0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, // 9265358979323846
	0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, // 26433832795) * x
	0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, //  + (1.56467/3.14
	0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, // 1592653589793238
	0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, // 4626433832795) )
	0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, //  * sqrt(1. - x);
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, // .return (v >= 0.
	0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, // ) ? res : 1. - r
	0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, // es;.}.float atan
	0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, // 2_approx_div2PI(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x63, // const float y, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, // onst float x).{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, // const float abs_
	0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // y = abs(y);.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, // t float abs_x = 
	0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, // abs(x);.if(abs_x
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, //  <= 0.0000610351
	0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, // 5625 && abs_y <=
	0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, //  0.0000610351562
	0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, // 5).return 0.;.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, // nst float r = (a
	0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, // bs_x - abs_y) / 
	0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, // (abs_x + abs_y);
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, // .const float ang
	0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // le = ((x < 0.) ?
	0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, //  (3./8.) : (1./8
	0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, // .)).+ (0.211868 
	0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, // /(2.*3.141592653
	0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, // 5897932384626433
	0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, // 832795) * r * r 
	0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, // - 0.987305 /(2.*
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, // 5)) * ((x < 0.) 
	0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // ? -r : r);.retur
	0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, // n (y < 0.) ? -an
	0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // gle : angle;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, // loat asin_approx
	0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // _divPI(const flo
	0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // at v).{.const fl
	0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, // oat x = abs(v);.
	0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, // if(1. - x <= 0.0
	0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, // 0006103515625).r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, // eturn (v >= 0.) 
	0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x63, 0x6f, // ? 0.5 : -0.5;.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, // nst float res = 
	0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, // ((-0.155972/3.14
	0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, // 1592653589793238
	0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, // 4626433832795) *
	0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, //  x + (1.56467/3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, //  ) * sqrt(1. - x
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, // );.return (v >= 
	0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, // 0.) ? 0.5 - res 
	0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, // : -0.5 + res;.}.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, // vec2 ray_to_equi
	0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x63, // rectangular_uv(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, // onst vec3 ray).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, // .return vec2(.0.
	0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, // 5 + atan2_approx
	0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, // _div2PI(ray.y, r
	0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, // ay.x),.acos_appr
	0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, // ox_divPI(ray.z))
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, // ;.}.float InvsRG
	0x42, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, // B(const float co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // lor).{.if (color
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, //  <= 0.04045).ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, // urn color * (1.0
	0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, // /12.92);.else.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // turn pow(color *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, //  (1.0/1.055) + (
	0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, // 0.055/1.055), 2.
	0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, // 4);.}.float InvR
	0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ec709(const floa
	0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, // t color).{.if (c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, // olor <= 0.081).r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, // eturn color * (1
	0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, // .0/4.5);.else.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // turn pow(color *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, //  (1.0/1.099) + (
	0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, // 0.099/1.099), 1.
	0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0/0.45);.}.float
	0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  InvGamma(const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // float color).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, // eturn InvsRGB(co
	0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, // lor);.}.vec3 Inv
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, // Gamma(const vec3
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  color).{.return
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, //  vec3(InvGamma(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, // olor.x),InvGamma
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // (color.y),InvGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // ma(color.z));.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, // vec3 InvToneMap(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // const vec3 color
	0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ).{.const float 
	0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, // inv_2bh = 0.5/0.
	0x32, 0x35, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 25;.const float 
	0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, // bh = 4.0*0.25 - 
	0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, // 2.0;.return (col
	0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // or - 1.0 + sqrt(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, // color*(color + b
	0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, // h) + 1.0))*inv_2
	0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, // bh;.}.float sRGB
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, // (const float f).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, // {.float s;.if (f
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, //  <= 0.0031308).s
	0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, //  = 12.92 * f;.el
	0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, // se.s = 1.055 * p
	0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, // ow(f, 1.0/2.4) -
	0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, //  0.055;.return s
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, // ;.}.float Rec709
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, // (const float f).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, // {.float s;.if (f
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, //  <= 0.018).s = 4
	0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, // .5 * f;.else.s =
	0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, //  1.099 * pow(f, 
	0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, // 0.45) - 0.099;.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // eturn s;.}.float
	0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, //  FBGamma(const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // loat color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // turn sRGB(color)
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, // ;.}.vec2 FBGamma
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // (const vec2 colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, // r).{.return vec2
	0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, // (FBGamma(color.x
	0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // ),FBGamma(color.
	0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, // y));.}.vec3 FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // mma(const vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // olor).{.return v
	0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // ec3(FBGamma(colo
	0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, // r.x),FBGamma(col
	0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, // or.y),FBGamma(co
	0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // lor.z));.}.float
	0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, //  FBToneMap(const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  float l).{.retu
	0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, // rn l * ((l*0.25 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, // + 1.0) / (l + 1.
	0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, // 0));.}.vec2 FBTo
	0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, // neMap(const vec2
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  color).{.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, // float l = dot(co
	0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, // lor,vec2(0.17620
	0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, // 4+0.0108109*0.5,
	0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, // 0.812985+0.01081
	0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 09*0.5));.return
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, //  color * ((l*0.2
	0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, // 5 + 1.0) / (l + 
	0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, // 1.0));.}.vec3 FB
	0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // ToneMap(const ve
	0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // c3 color).{.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, // t float l = dot(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, // color,vec3(0.176
	0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, // 204,0.812985,0.0
	0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 108109));.return
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, //  color * ((l*0.2
	0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, // 5 + 1.0) / (l + 
	0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, // 1.0));.}.vec4 Ad
	0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // ditive(const vec
	0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // 4 cBase, const v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // ec4 cBlend, cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, // t float percent)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, // .{.return cBase 
	0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, // + cBlend*percent
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, // ;.}.vec3 Screen 
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, // (const vec3 cBas
	0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, // e, const vec3 cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, // lend).{.return 1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, // .0 - (1.0 - cBas
	0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, // e) * (1.0 - cBle
	0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, // nd);.}.vec4 Scre
	0x65, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // en (const vec4 c
	0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, // Base, const vec4
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  cBlend).{.retur
	0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, // n 1.0 - (1.0 - c
	0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, // Base) * (1.0 - c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, // Blend);.}.vec3 S
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // creenHDR (const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // vec3 cBase, cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, // t vec3 cBlend).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, // .return max(1.0 
	0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, // - (1.0 - cBase) 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // * (1.0 - cBlend)
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, // , vec3(0.,0.,0.)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, // );.}.vec4 Screen
	0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // HDR (const vec4 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // cBase, const vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 4 cBlend).{.retu
	0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, // rn max(1.0 - (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // 0 - cBase) * (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, // 0 - cBlend), vec
	0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, // 4(0.,0.,0.,0.));
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, // .}.vec4 Multiply
	0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, //  (const vec4 cBa
	0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // se, const vec4 c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // Blend, const flo
	0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // at percent).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, // turn cBase * cBl
	0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // end*percent;.}.v
	0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x63, 0x6f, 0x6e, // ec4 Overlay (con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, // st vec4 cBase, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // onst vec4 cBlend
	0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, // ).{.vec4 cNew = 
	0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, // step(0.5, cBase)
	0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, // ;.cNew = mix(cBa
	0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, // se*cBlend*2.0, 1
	0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, // .0-2.0*(1.0-cBas
	0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, // e)*(1.0-cBlend),
	0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, //  cNew);.return c
	0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, // New;.}.vec4 Over
	0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // layHDR (const ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // c4 cBase, const 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, // vec4 cBlend).{.v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, // ec4 cNew = step(
	0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, // 0.5, cBase);.cNe
	0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, // w = max(mix(cBas
	0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, // e*cBlend*2.0, 1.
	0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, // 0-2.0*(1.0-cBase
	0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, // )*(1.0-cBlend), 
	0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, // cNew), vec4(0.,0
	0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // .,0.,0.));.retur
	0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // n cNew;.}.vec3 c
	0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, // os_hemisphere_sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, // mple(const vec2 
	0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // t).{.const float
	0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, //  phi = t.y * (2.
	0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, // 0*3.141592653589
	0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, // 7932384626433832
	0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 795);.const floa
	0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, // t cosTheta = sqr
	0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x63, 0x6f, // t(1.0 - t.x);.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, // nst float sinThe
	0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, // ta = sqrt(t.x);.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x73, 0x69, 0x6e, // float sp,cp;.sin
	0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x2c, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x29, 0x3b, 0x0a, // cos(phi,sp,cp);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, // return vec3(cp *
	0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, //  sinTheta, cosTh
	0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, // eta, sp * sinThe
	0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, // ta);.}.vec3 rota
	0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, // te_to_vector_upp
	0x65, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, // er(const vec3 ve
	0x63, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, // c, const vec3 no
	0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // rmal).{.if(norma
	0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, // l.y > -0.99999).
	0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, // {.const float h 
	0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // = 1.0/(1.0+norma
	0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // l.y);.const floa
	0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // t hz = h*normal.
	0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, // z;.const float h
	0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // zx = hz*normal.x
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, // ;.return vec3(.v
	0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, // ec.x * (normal.y
	0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, // +hz*normal.z) + 
	0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // vec.y * normal.x
	0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, //  - vec.z * hzx,.
	0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, // vec.y * normal.y
	0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, //  - vec.x * norma
	0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, // l.x - vec.z * no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, // rmal.z,.vec.y * 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, // normal.z - vec.x
	0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, //  * hzx + vec.z *
	0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, //  (normal.y+h*nor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, // mal.x*normal.x))
	0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // ;.}.else return 
	0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // -vec;.}.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, // mat4 matView;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, // iform mat4 matWo
	0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // rldView;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, //  mat4 matWorldVi
	0x65, 0x77, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // ewInverse;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, // rm mat4 matWorld
	0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // ViewProj;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, // m mat4 matProj;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, // uniform sampler2
	0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // D tex_ball_color
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ;.uniform sample
	0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // r2D tex_env;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, // form sampler2D t
	0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x3b, 0x0a, // ex_diffuse_env;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, // uniform sampler2
	0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, // D tex_ball_decal
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ;.uniform sample
	0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, // r2D tex_ball_pla
	0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // yfield;.uniform 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x68, 0x61, // vec4 u_basic_sha
	0x64, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // de_mode;.uniform
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, //  vec4 ballLightP
	0x6f, 0x73, 0x5b, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // os[2 + 8];.unifo
	0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, // rm vec4 ballLigh
	0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x5d, // tEmission[2 + 8]
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // ;.uniform vec4 c
	0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, // Ambient_LightRan
	0x67, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // ge;.uniform vec4
	0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, //  fenvEmissionSca
	0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // le_TexWidth;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, // form vec4 fDisab
	0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, // leLighting_top_b
	0x65, 0x6c, 0x6f, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // elow;.uniform ve
	0x63, 0x34, 0x20, 0x66, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x3b, 0x0a, // c4 fSceneScale;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, // uniform vec4 cBa
	0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // se_Alpha;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, // m vec4 Roughness
	0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, // _WrapL_Edge_Thic
	0x6b, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x47, 0x65, 0x6f, // kness;.float Geo
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x28, 0x63, 0x6f, // metricOpacity(co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, // nst float NdotV,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6c, 0x70, //  const float alp
	0x68, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ha, const float 
	0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // blending, const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, // float thickness)
	0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, // .{.const float x
	0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x29, 0x3b, 0x0a, 0x63, //  = abs(NdotV);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x20, 0x3d, 0x20, 0x62, // onst float g = b
	0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // lending * (1.0 -
	0x20, 0x28, 0x78, 0x20, 0x2f, 0x20, 0x28, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, //  (x / (x * (1.0 
	0x2d, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, 0x20, 0x2b, 0x20, 0x74, // - thickness) + t
	0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // hickness)));.ret
	0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2c, 0x20, 0x31, // urn mix(alpha, 1
	0x2e, 0x30, 0x2c, 0x20, 0x67, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, // .0, g);.}.vec3 F
	0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, 0x6b, 0x28, 0x63, 0x6f, // resnelSchlick(co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x2c, 0x20, 0x63, // nst vec3 spec, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, // onst float LdotH
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, // , const float ed
	0x67, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x70, 0x65, // ge).{.return spe
	0x63, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x65, // c + (vec3(edge,e
	0x64, 0x67, 0x65, 0x2c, 0x65, 0x64, 0x67, 0x65, 0x29, 0x20, 0x2d, 0x20, 0x73, 0x70, 0x65, 0x63, // dge,edge) - spec
	0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x4c, 0x64, // ) * pow(1.0 - Ld
	0x6f, 0x74, 0x48, 0x2c, 0x20, 0x35, 0x2e, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // otH, 5.);.}.vec3
	0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x63, 0x6f, //  DoPointLight(co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x63, 0x6f, // nst vec3 pos, co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // nst vec3 N, cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // t vec3 V, const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, // vec3 diffuse, co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, // nst vec3 glossy,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, //  const float edg
	0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, // e, const float g
	0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // lossyPower, cons
	0x74, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x62, // t int i, const b
	0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, // ool is_metal).{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, // const vec3 light
	0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, // Dir = ( ( (matVi
	0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x62, 0x61, 0x6c, 0x6c, // ew) * (vec4(ball
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, // LightPos[i].xyz,
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, //  1.0)) ) ).xyz -
	0x20, 0x70, 0x6f, 0x73, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, //  pos;.const vec3
	0x20, 0x4c, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x6c, //  L = normalize(l
	0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // ightDir);.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x3d, 0x20, 0x64, 0x6f, // float NdotL = do
	0x74, 0x28, 0x4e, 0x2c, 0x20, 0x4c, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4f, 0x75, // t(N, L);.vec3 Ou
	0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, // t = vec3(0.0,0.0
	0x2c, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, // ,0.0);.if (!is_m
	0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x2b, // etal && (NdotL +
	0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, //  Roughness_WrapL
	0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, // _Edge_Thickness.
	0x79, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x4f, 0x75, 0x74, 0x20, 0x3d, 0x20, // y > 0.0)).Out = 
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x4e, 0x64, 0x6f, 0x74, // diffuse * ((Ndot
	0x4c, 0x20, 0x2b, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, // L + Roughness_Wr
	0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, // apL_Edge_Thickne
	0x73, 0x73, 0x2e, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x73, 0x71, 0x72, 0x28, 0x31, 0x2e, 0x30, 0x2b, // ss.y) / sqr(1.0+
	0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, // Roughness_WrapL_
	0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, // Edge_Thickness.y
	0x29, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x3e, 0x20, // ));.if (NdotL > 
	0x30, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // 0.0).{.const vec
	0x33, 0x20, 0x48, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // 3 H = normalize(
	0x4c, 0x20, 0x2b, 0x20, 0x56, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // L + V);.const fl
	0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, // oat NdotH = dot(
	0x4e, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // N, H);.const flo
	0x61, 0x74, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4c, // at LdotH = dot(L
	0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // , H);.const floa
	0x74, 0x20, 0x56, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x56, 0x2c, // t VdotH = dot(V,
	0x20, 0x48, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x20, //  H);.if ((NdotH 
	0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x4c, 0x64, 0x6f, 0x74, 0x48, // > 0.0) && (LdotH
	0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x56, 0x64, 0x6f, 0x74, //  > 0.0) && (Vdot
	0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x4f, 0x75, 0x74, 0x20, 0x2b, 0x3d, // H > 0.0)).Out +=
	0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, 0x6b, 0x28, //  FresnelSchlick(
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x65, // glossy, LdotH, e
	0x64, 0x67, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, // dge) * (((glossy
	0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, // Power + 1.0) / (
	0x38, 0x2e, 0x30, 0x2a, 0x56, 0x64, 0x6f, 0x74, 0x48, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, // 8.0*VdotH)) * po
	0x77, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, // w(NdotH, glossyP
	0x6f, 0x77, 0x65, 0x72, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // ower));.}.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // float sqrl_light
	0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, // Dir = dot(lightD
	0x69, 0x72, 0x2c, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x29, 0x3b, 0x0a, 0x66, 0x6c, // ir,lightDir);.fl
	0x6f, 0x61, 0x74, 0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x3d, 0x20, 0x63, 0x6c, 0x61, // oat fAtten = cla
	0x6d, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, // mp(1.0 - sqrl_li
	0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2a, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, // ghtDir*sqrl_ligh
	0x74, 0x44, 0x69, 0x72, 0x2f, 0x28, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, // tDir/(cAmbient_L
	0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, // ightRange.w*cAmb
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, // ient_LightRange.
	0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, // w*cAmbient_Light
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, // Range.w*cAmbient
	0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x29, 0x2c, 0x20, // _LightRange.w), 
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x66, 0x41, 0x74, 0x74, 0x65, // 0.0, 1.0);.fAtte
	0x6e, 0x20, 0x3d, 0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x2a, 0x66, 0x41, 0x74, 0x74, 0x65, // n = fAtten*fAtte
	0x6e, 0x2f, 0x28, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, // n/(sqrl_lightDir
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x6d, //  + 1.0);.vec3 am
	0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x3b, 0x0a, // bient = glossy;.
	0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x61, // if (!is_metal).a
	0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x2b, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // mbient += diffus
	0x65, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x65, // e;.const vec3 re
	0x73, 0x75, 0x6c, 0x74, 0x20, 0x3d, 0x20, 0x4f, 0x75, 0x74, 0x20, 0x2a, 0x20, 0x62, 0x61, 0x6c, // sult = Out * bal
	0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x69, // lLightEmission[i
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x2b, // ].xyz * fAtten +
	0x20, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x2a, 0x20, 0x63, 0x41, 0x6d, 0x62, 0x69, //  ambient * cAmbi
	0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x78, // ent_LightRange.x
	0x79, 0x7a, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // yz;.if (fDisable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, // Lighting_top_bel
	0x6f, 0x77, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x72, 0x65, 0x74, // ow.x != 0.0).ret
	0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2c, 0x64, // urn mix(result,d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // iffuse,fDisableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, // ighting_top_belo
	0x77, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // w.x);.else.retur
	0x6e, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // n result;.}.vec3
	0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, //  DoEnvmapDiffuse
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, // (const vec3 N, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // onst vec3 diffus
	0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // e).{.const vec3 
	0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, // env = textureLod
	0x28, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, // (tex_diffuse_env
	0x2c, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, // , ray_to_equirec
	0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x4e, 0x29, 0x2c, 0x20, // tangular_uv(N), 
	0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 0.0).xyz;.return
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, //  diffuse * env*f
	0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, // envEmissionScale
	0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // _TexWidth.x;.}.v
	0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x47, 0x6c, 0x6f, 0x73, // ec3 DoEnvmapGlos
	0x73, 0x79, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, // sy(const vec3 N,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x63, //  const vec3 V, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x63, // onst vec2 Ruv, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, // onst vec3 glossy
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, // , const float gl
	0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, // ossyPower).{.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x69, 0x70, 0x20, 0x3d, 0x20, 0x6d, // st float mip = m
	0x69, 0x6e, 0x28, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, // in(log2(fenvEmis
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, // sionScale_TexWid
	0x74, 0x68, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x33, 0x2e, 0x30, 0x29, // th.y * sqrt(3.0)
	0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x35, 0x2a, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x67, 0x6c, 0x6f, // ) - 0.5*log2(glo
	0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x2c, // ssyPower + 1.0),
	0x20, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, //  log2(fenvEmissi
	0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, // onScale_TexWidth
	0x2e, 0x79, 0x29, 0x2d, 0x31, 0x2e, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // .y)-1.);.const v
	0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // ec3 env = textur
	0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x2c, 0x20, 0x52, 0x75, // eLod(tex_env, Ru
	0x76, 0x2c, 0x20, 0x6d, 0x69, 0x70, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x72, 0x65, 0x74, // v, mip).xyz;.ret
	0x75, 0x72, 0x6e, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, 0x20, 0x65, 0x6e, 0x76, // urn glossy * env
	0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, // *fenvEmissionSca
	0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x7d, // le_TexWidth.x;.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x32, 0x6e, // .vec3 DoEnvmap2n
	0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // dLayer(const vec
	0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x31, 0x73, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2c, // 3 color1stLayer,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, //  const vec3 pos,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, //  const vec3 N, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, // onst vec3 V, con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, // st float NdotV, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, // const vec2 Ruv, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, // const vec3 specu
	0x6c, 0x61, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // lar).{.const vec
	0x33, 0x20, 0x77, 0x20, 0x3d, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, // 3 w = FresnelSch
	0x6c, 0x69, 0x63, 0x6b, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x4e, // lick(specular, N
	0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, // dotV, Roughness_
	0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, // WrapL_Edge_Thick
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // ness.z);.const v
	0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // ec3 env = textur
	0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x2c, 0x20, 0x52, 0x75, // eLod(tex_env, Ru
	0x76, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x72, 0x65, 0x74, // v, 0.0).xyz;.ret
	0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x31, 0x73, 0x74, // urn mix(color1st
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x2c, 0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, // Layer, env*fenvE
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, // missionScale_Tex
	0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x2c, 0x20, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // Width.x, w);.}.v
	0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x63, 0x6f, // ec3 lightLoop(co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x76, 0x65, // nst vec3 pos, ve
	0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, // c3 N, const vec3
	0x20, 0x56, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, //  V, vec3 diffuse
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, // , vec3 glossy, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, // onst vec3 specul
	0x61, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ar, const float 
	0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, // edge, const bool
	0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, //  is_metal).{.vec
	0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, // 3 color = vec3_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // plat(0.0);.float
	0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x56, //  NdotV = dot(N,V
	0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3c, 0x20, 0x30, // );.if (NdotV < 0
	0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x4e, 0x20, 0x3d, 0x20, 0x2d, 0x4e, 0x3b, 0x0a, 0x4e, 0x64, // .0).{.N = -N;.Nd
	0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x2d, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x3b, 0x0a, 0x7d, 0x0a, // otV = -NdotV;.}.
	0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, 0x4e, 0x64, 0x6f, 0x74, // NdotV = min(Ndot
	0x56, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // V, 1.0);.const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, // loat diffuseMax 
	0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x78, 0x2c, // = max(diffuse.x,
	0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x79, 0x2c, 0x64, 0x69, // max(diffuse.y,di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // ffuse.z));.const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, //  float glossyMax
	0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x78, 0x2c, //  = max(glossy.x,
	0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x79, 0x2c, 0x67, 0x6c, 0x6f, // max(glossy.y,glo
	0x73, 0x73, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // ssy.z));.const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, // loat specularMax
	0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, //  = max(specular.
	0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x79, // x,max(specular.y
	0x2c, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, // ,specular.z));.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x75, 0x6d, 0x20, 0x3d, // onst float sum =
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x2b, 0x20, 0x67, 0x6c, //  diffuseMax + gl
	0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x73, 0x75, // ossyMax ;.if (su
	0x6d, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x26, 0x26, 0x20, 0x66, 0x44, 0x69, 0x73, 0x61, // m > 1.0 && fDisa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, // bleLighting_top_
	0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x7b, // below.x < 1.0).{
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, // .const float inv
	0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x64, // sum = 1.0/sum;.d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, // iffuse *= invsum
	0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, // ;.glossy *= invs
	0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, // um;.}.if ((!is_m
	0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // etal && (diffuse
	0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, // Max > 0.0)) || (
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, // glossyMax > 0.0)
	0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // ).{.if (fDisable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, // Lighting_top_bel
	0x6f, 0x77, 0x2e, 0x78, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, // ow.x == 1.0).col
	0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x32, 0x29, 0x20, 0x2a, // or += float(2) *
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x66, //  diffuse;.else f
	0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x69, // or (int i = 0; i
	0x20, 0x3c, 0x20, 0x32, 0x3b, 0x20, 0x69, 0x2b, 0x2b, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, //  < 2; i++).color
	0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, //  += DoPointLight
	0x28, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, // (pos, N, V, diff
	0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x65, 0x64, 0x67, // use, glossy, edg
	0x65, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, // e, Roughness_Wra
	0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, // pL_Edge_Thicknes
	0x73, 0x2e, 0x78, 0x2c, 0x20, 0x69, 0x2c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, // s.x, i, is_metal
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, // );.}.if (!is_met
	0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, // al && (diffuseMa
	0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // x > 0.0)).color 
	0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, 0x66, 0x75, // += DoEnvmapDiffu
	0x73, 0x65, 0x28, 0x20, 0x28, 0x28, 0x20, 0x28, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x4e, // se( (( ( (vec4(N
	0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, // ,0.0)) * (matVie
	0x77, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x64, 0x69, 0x66, // w) ) ).xyz), dif
	0x66, 0x75, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x67, 0x6c, 0x6f, 0x73, // fuse);.if ((glos
	0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, // syMax > 0.0) || 
	0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, // (specularMax > 0
	0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x52, 0x20, 0x3d, 0x20, // .0)).{.vec3 R = 
	0x28, 0x32, 0x2e, 0x30, 0x2a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x29, 0x2a, 0x4e, 0x20, 0x2d, 0x20, // (2.0*NdotV)*N - 
	0x56, 0x3b, 0x0a, 0x52, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x20, 0x28, 0x20, 0x28, 0x76, 0x65, 0x63, // V;.R = (( ( (vec
	0x34, 0x28, 0x52, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, 0x74, // 4(R,0.0)) * (mat
	0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, // View) ) ).xyz);.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, 0x75, 0x76, 0x20, 0x3d, // const vec2 Ruv =
	0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, //  ray_to_equirect
	0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x52, 0x29, 0x3b, 0x0a, 0x69, // angular_uv(R);.i
	0x66, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, // f (glossyMax > 0
	0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, // .0).color += DoE
	0x6e, 0x76, 0x6d, 0x61, 0x70, 0x47, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x28, 0x4e, 0x2c, 0x20, 0x56, // nvmapGlossy(N, V
	0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x52, // , Ruv, glossy, R
	0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, // oughness_WrapL_E
	0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x29, // dge_Thickness.x)
	0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, // ;.if (specularMa
	0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, // x > 0.0).color =
	0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x32, 0x6e, 0x64, 0x4c, 0x61, 0x79, 0x65, //  DoEnvmap2ndLaye
	0x72, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, 0x2c, // r(color, pos, N,
	0x20, 0x56, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, //  V, NdotV, Ruv, 
	0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x72, 0x65, 0x74, // specular);.}.ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, // urn color ;.}.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x76, 0x54, 0x61, // iform vec4 invTa
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, // bleRes_reflectio
	0x6e, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // n;.uniform vec4 
	0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, // w_h_disableLight
	0x69, 0x6e, 0x67, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, // ing;.vec3 ballLi
	0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // ghtLoop(const ve
	0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, // c3 pos, vec3 N, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, // vec3 V, vec3 dif
	0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // fuse, vec3 gloss
	0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, // y, const vec3 sp
	0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // ecular, const fl
	0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // oat edge, const 
	0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x7b, // bool is_metal).{
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, 0x66, // .const float dif
	0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, // fuseMax = max(di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, // ffuse.x,max(diff
	0x75, 0x73, 0x65, 0x2e, 0x79, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x7a, 0x29, // use.y,diffuse.z)
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, // );.const float g
	0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x67, // lossyMax = max(g
	0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, // lossy.x,max(glos
	0x73, 0x79, 0x2e, 0x79, 0x2c, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, // sy.y,glossy.z));
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x65, // .const float spe
	0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x73, // cularMax = max(s
	0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, // pecular.x,max(sp
	0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x79, 0x2c, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, // ecular.y,specula
	0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // r.z));.const flo
	0x61, 0x74, 0x20, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // at sum = diffuse
	0x4d, 0x61, 0x78, 0x20, 0x2b, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x3b, // Max + glossyMax;
	0x0a, 0x69, 0x66, 0x28, 0x73, 0x75, 0x6d, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x7b, // .if(sum > 1.0).{
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, // .const float inv
	0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x64, // sum = 1.0/sum;.d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, // iffuse *= invsum
	0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, // ;.glossy *= invs
	0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // um;.}.vec3 color
	0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, //  = vec3(0.0, 0.0
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x28, 0x21, 0x69, 0x73, 0x5f, // , 0.0);.if((!is_
	0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // metal && (diffus
	0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, // eMax > 0.0)) || 
	0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, // (glossyMax > 0.0
	0x29, 0x29, 0x0a, 0x66, 0x6f, 0x72, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, 0x30, // )).for(int i = 0
	0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x3b, 0x20, 0x69, 0x2b, 0x2b, // ; i < 2 + 8; i++
	0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, // ).color += DoPoi
	0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, 0x2c, 0x20, // ntLight(pos, N, 
	0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, // V, diffuse, glos
	0x73, 0x79, 0x2c, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, // sy, edge, Roughn
	0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, // ess_WrapL_Edge_T
	0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x2c, 0x20, 0x69, 0x2c, 0x20, 0x69, // hickness.x, i, i
	0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x21, 0x69, 0x73, // s_metal);.if(!is
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, // _metal && (diffu
	0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x63, 0x6f, // seMax > 0.0)).co
	0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, // lor += DoEnvmapD
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, // iffuse(normalize
	0x28, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, // (( (matView) * (
	0x76, 0x65, 0x63, 0x34, 0x28, 0x4e, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x2e, // vec4(N, 0.0)) ).
	0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x3b, 0x0a, // xyz), diffuse);.
	0x69, 0x66, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3e, // if(specularMax >
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x73, //  0.0).color += s
	0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // pecular;.return 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, // color;.}.void ma
	0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // in().{.const vec
	0x33, 0x20, 0x56, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // 3 V = normalize(
	0x20, 0x2d, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, //  -v_worldPos.xyz
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x20, // );.const vec3 N 
	0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x76, 0x5f, 0x6e, 0x6f, // = normalize(v_no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // rmal.xyz);.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x52, 0x20, 0x3d, 0x20, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, //  vec3 R = reflec
	0x74, 0x28, 0x56, 0x2c, 0x20, 0x4e, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x61, // t(V, N);.vec3 ba
	0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x63, 0x6f, // llImageColor;.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x20, 0x3d, // nst float edge =
	0x20, 0x64, 0x6f, 0x74, 0x28, 0x56, 0x2c, 0x20, 0x52, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, //  dot(V, R);.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x6f, 0x64, 0x20, 0x3d, 0x20, 0x28, 0x65, // t float lod = (e
	0x64, 0x67, 0x65, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x36, 0x29, 0x20, 0x3f, 0x20, 0x65, 0x64, 0x67, // dge > 0.6) ? edg
	0x65, 0x2a, 0x28, 0x36, 0x2e, 0x30, 0x2a, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x29, 0x2d, // e*(6.0*1.0/0.4)-
	0x28, 0x36, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x36, 0x2f, 0x30, 0x2e, 0x34, 0x29, 0x20, 0x3a, 0x20, // (6.0*0.6/0.4) : 
	0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // 0.0;.const vec3 
	0x72, 0x76, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x2d, 0x52, // rv = (( (vec4(-R
	0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, // ,0.0)) * (matVie
	0x77, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // w) ).xyz);.const
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x20, 0x3d, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, //  vec2 uv = ray_t
	0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, // o_equirectangula
	0x72, 0x5f, 0x75, 0x76, 0x28, 0x72, 0x76, 0x29, 0x3b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, // r_uv(rv);.ballIm
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // ageColor = textu
	0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, // reLod(tex_ball_c
	0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x75, 0x76, 0x2c, 0x20, 0x6c, 0x6f, 0x64, 0x29, 0x2e, 0x72, // olor, uv, lod).r
	0x67, 0x62, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x64, // gb;.const vec4 d
	0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, // ecalColorT = tex
	0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, // ture(tex_ball_de
	0x63, 0x61, 0x6c, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, // cal, v_texcoord0
	0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, // );.vec3 decalCol
	0x6f, 0x72, 0x20, 0x3d, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, // or = decalColorT
	0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // .rgb;.decalColor
	0x20, 0x2a, 0x3d, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x2e, //  *= decalColorT.
	0x61, 0x3b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, // a;.ballImageColo
	0x72, 0x20, 0x2b, 0x3d, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, // r += decalColor;
	0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, // .if ((w_h_disabl
	0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x7a, 0x20, 0x21, 0x3d, 0x20, 0x30, // eLighting.z != 0
	0x2e, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, // .)).{.bgfx_FragC
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x62, 0x61, 0x6c, 0x6c, // olor = vec4(ball
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x63, 0x42, 0x61, 0x73, 0x65, // ImageColor,cBase
	0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x61, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // _Alpha.a);.retur
	0x6e, 0x3b, 0x0a, 0x7d, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, // n;.}.ballImageCo
	0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x3d, 0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, // lor *= fenvEmiss
	0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, // ionScale_TexWidt
	0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // h.x;.const vec3 
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // playfield_normal
	0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, //  = ( (matWorldVi
	0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, // ew) * (float4(0.
	0x2c, 0x30, 0x2e, 0x2c, 0x31, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, // ,0.,1.,0.)) ).xy
	0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, // z;.const float N
	0x64, 0x6f, 0x74, 0x52, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, // dotR = dot(playf
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x52, 0x29, 0x3b, // ield_normal, R);
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, // .const vec3 play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, // field_p0 = ( (ma
	0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, // tWorldView) * (v
	0x65, 0x63, 0x34, 0x28, 0x20, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x31, 0x2e, // ec4( 0.,0.,0.,1.
	0x30, 0x29, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // 0)) ).xyz;.const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x70, //  float t = dot(p
	0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, // layfield_normal,
	0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x20, //  v_worldPos.xyz 
	0x2d, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x30, 0x29, 0x20, // - playfield_p0) 
	0x2f, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // / NdotR;.const v
	0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x68, 0x69, // ec3 playfield_hi
	0x74, 0x20, 0x3d, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, // t = v_worldPos.x
	0x79, 0x7a, 0x20, 0x2d, 0x20, 0x74, 0x20, 0x2a, 0x20, 0x52, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // yz - t * R;.cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x20, 0x3d, 0x20, 0x28, 0x20, // t vec4 proj = ( 
	0x28, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, // (matProj) * (vec
	0x34, 0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x68, 0x69, 0x74, 0x2c, // 4(playfield_hit,
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  1.0)) );.const 
	0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x70, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // vec2 uvp = vec2(
	0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, // 0.5, 0.5) + vec2
	0x28, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x78, 0x2c, 0x20, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x79, // (proj.x, -proj.y
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2f, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x2e, // ) * (0.5 / proj.
	0x77, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, // w);.const vec3 p
	0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, // layfieldColor = 
	0x30, 0x2e, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x28, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // 0.25 * (.texture
	0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, // (tex_ball_playfi
	0x65, 0x6c, 0x64, 0x2c, 0x20, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // eld, uvp + vec2(
	0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, // w_h_disableLight
	0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, // ing.x, 0.)).rgb.
	0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, // + texture(tex_ba
	0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x75, 0x76, // ll_playfield, uv
	0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, // p - vec2(w_h_dis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, // ableLighting.x, 
	0x30, 0x2e, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // 0.)).rgb.+ textu
	0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, // re(tex_ball_play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, // field, uvp + vec
	0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, // 2(0., w_h_disabl
	0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x72, 0x67, // eLighting.y)).rg
	0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, // b.+ texture(tex_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, // ball_playfield, 
	0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, // uvp - vec2(0., w
	0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, // _h_disableLighti
	0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x29, 0x3b, 0x0a, 0x69, 0x66, // ng.y)).rgb.);.if
	0x20, 0x28, 0x21, 0x28, 0x75, 0x76, 0x70, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x20, 0x7c, //  (!(uvp.x < 0. |
	0x7c, 0x20, 0x75, 0x76, 0x70, 0x2e, 0x78, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x20, 0x7c, 0x7c, 0x20, // | uvp.x > 1. || 
	0x75, 0x76, 0x70, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x20, 0x7c, 0x7c, 0x20, 0x75, 0x76, // uvp.y < 0. || uv
	0x70, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x29, 0x0a, 0x26, 0x26, 0x20, 0x21, 0x28, 0x74, // p.y > 1.).&& !(t
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, //  <= 0.)).{.ballI
	0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x6c, 0x65, 0x72, 0x70, // mageColor = lerp
	0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, // (ballImageColor,
	0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, //  playfieldColor,
	0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x30, 0x2c, //  smoothstep(0.0,
	0x20, 0x30, 0x2e, 0x31, 0x35, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x29, 0x20, 0x2a, 0x20, //  0.15, NdotR) * 
	0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, // invTableRes_refl
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x62, 0x61, 0x6c, // ection.z);.}.bal
	0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x6d, 0x69, // lImageColor = mi
	0x6e, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // n(ballImageColor
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x35, 0x2e, 0x2c, 0x20, 0x31, 0x35, // , float3(15., 15
	0x2e, 0x2c, 0x20, 0x31, 0x35, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, // ., 15.));.vec3 d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x3d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, // iffuse = cBase_A
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x2a, 0x30, 0x2e, 0x30, 0x37, 0x35, 0x3b, 0x0a, // lpha.rgb*0.075;.
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x3d, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, // diffuse *= decal
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // Color;.const vec
	0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, // 3 glossy = max(d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // iffuse*2.0, vec3
	0x28, 0x30, 0x2e, 0x31, 0x2c, 0x30, 0x2e, 0x31, 0x2c, 0x30, 0x2e, 0x31, 0x29, 0x29, 0x3b, 0x0a, // (0.1,0.1,0.1));.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x20, 0x3d, 0x20, // vec3 specular = 
	0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // ballImageColor *
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, //  cBase_Alpha.rgb
	0x3b, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x20, 0x2a, 0x3d, 0x20, 0x76, 0x65, // ;.specular *= ve
	0x63, 0x33, 0x28, 0x31, 0x2e, 0x2c, 0x31, 0x2e, 0x2c, 0x31, 0x2e, 0x29, 0x2d, 0x64, 0x65, 0x63, // c3(1.,1.,1.)-dec
	0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, // alColor;.bgfx_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x62, 0x61, // agColor.rgb = ba
	0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x76, 0x5f, 0x77, 0x6f, // llLightLoop(v_wo
	0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, // rldPos.xyz, N, V
	0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // , diffuse, gloss
	0x79, 0x2c, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x31, 0x2e, 0x30, // y, specular, 1.0
	0x2c, 0x20, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, // , false);.bgfx_F
	0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x61, 0x20, 0x3d, 0x20, 0x63, 0x42, 0x61, // ragColor.a = cBa
	0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x61, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,       // se_Alpha.a;.}..
};
static const uint8_t fs_ball_equirectangular_nodecal_glsl[14477] =
{
	0x46, 0x53, 0x48, 0x0b, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7a, 0x38, // FSH....l......z8
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x6f, // ..#version 440.o
	0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, // ut vec4 bgfx_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // gColor;.#define 
	0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x62, 0x67, 0x66, // gl_FragColor bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x0a, 0x23, 0x64, 0x65, 0x66, // x_FragColor.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x20, 0x20, // ine texture2D   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, //        texture.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // Lod       textur
	0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, // eLod.#define tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ture2DGrad      
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, // textureGrad.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, // ine texture2DPro
	0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, // jLod   texturePr
	0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // ojLod.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, // xture2DProjGrad 
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, //  textureProjGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // CubeLod     text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, // ureLod.#define t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, // extureCubeGrad  
	0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, //   textureGrad.#d
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, // efine texture3D 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //          texture
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, 0x65, 0x78, 0x74, // 2DLodOffset text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, // ureLodOffset.#de
	0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, // fine attribute i
	0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // n.#define varyin
	0x67, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, // g in.#define bgf
	0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // xShadow2D(_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, // er, _coord)     
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // vec4_splat(textu
	0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // re(_sampler, _co
	0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, // ord) ).#define b
	0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, // gfxShadow2DProj(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, // ) vec4_splat(tex
	0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // tureProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x76, 0x61, 0x72, // r, _coord) ).var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // ying vec3 v_norm
	0x61, 0x6c, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, // al;.varying vec2
	0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, //  v_texcoord0;.va
	0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, // rying vec3 v_wor
	0x6c, 0x64, 0x50, 0x6f, 0x73, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, // ldPos;.vec3 inst
	0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, // Mul(vec3 _vec, m
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // at3 _mtx) { retu
	0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, // rn ( (_vec) * (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, // mtx) ); }.vec3 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, // nstMul(mat3 _mtx
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, // , vec3 _vec) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, // eturn ( (_mtx) *
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, //  (_vec) ); }.vec
	0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // 4 instMul(vec4 _
	0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, // vec, mat4 _mtx) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, // { return ( (_vec
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // ) * (_mtx) ); }.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, // vec4 instMul(mat
	0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, // 4 _mtx, vec4 _ve
	0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, // c) { return ( (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, // mtx) * (_vec) );
	0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, //  }.float rcp(flo
	0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // at _a) { return 
	0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, // 1.0/_a; }.vec2 r
	0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // cp(vec2 _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, // turn vec2(1.0)/_
	0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, // a; }.vec3 rcp(ve
	0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c3 _a) { return 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, // vec3(1.0)/_a; }.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, // vec4 rcp(vec4 _a
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // ) { return vec4(
	0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // 1.0)/_a; }.vec2 
	0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // vec2_splat(float
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, //  _x) { return ve
	0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, // c2(_x, _x); }.ve
	0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, // c3 vec3_splat(fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // oat _x) { return
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, //  vec3(_x, _x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, // ); }.vec4 vec4_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // plat(float _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, //  return vec4(_x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, //  _x, _x, _x); }.
	0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, // uvec2 uvec2_spla
	0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // t(uint _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // urn uvec2(_x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, // ); }.uvec3 uvec3
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // _splat(uint _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, // { return uvec3(_
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, // x, _x, _x); }.uv
	0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // ec4 uvec4_splat(
	0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // uint _x) { retur
	0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, // n uvec4(_x, _x, 
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, // _x, _x); }.mat4 
	0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, // mtxFromRows(vec4
	0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, //  _0, vec4 _1, ve
	0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, // c4 _2, vec4 _3).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, // {.return transpo
	0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, // se(mat4(_0, _1, 
	0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, // _2, _3) );.}.mat
	0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, // 4 mtxFromCols(ve
	0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, // c4 _0, vec4 _1, 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, // vec4 _2, vec4 _3
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, // ).{.return mat4(
	0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, // _0, _1, _2, _3);
	0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, // .}.mat3 mtxFromR
	0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, // ows(vec3 _0, vec
	0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, // 3 _1, vec3 _2).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, // .return transpos
	0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, // e(mat3(_0, _1, _
	0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, // 2) );.}.mat3 mtx
	0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, // FromCols(vec3 _0
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // , vec3 _1, vec3 
	0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, // _2).{.return mat
	0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, // 3(_0, _1, _2);.}
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, // .uniform vec4 u_
	0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // viewRect;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, // m vec4 u_viewTex
	0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // el;.uniform mat4
	0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, //  u_view;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, //  mat4 u_invView;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // proj;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, // t4 u_invProj;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // iform mat4 u_vie
	0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // wProj;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, // at4 u_invViewPro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // u_model[32];.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, // form mat4 u_mode
	0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // lView;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, // at4 u_modelViewP
	0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, // roj;.uniform vec
	0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, // 4 u_alphaRef4;.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // loat sqr(const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // loat v).{.return
	0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, //  v*v;.}.vec2 sqr
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, // (const vec2 v).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // .return v*v;.}.v
	0x65, 0x63, 0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // ec3 sqr(const ve
	0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // c3 v).{.return v
	0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, // *v;.}.vec3 mul_w
	0x31, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, // 1(const vec3 v, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, // const mat4 m).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, // return v.x*m[0].
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, // xyz + (v.y*m[1].
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, // xyz + (v.z*m[2].
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, // xyz + m[3].xyz))
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, // ;.}.float acos_a
	0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, // pprox_divPI(cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, // t float v).{.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, // st float x = abs
	0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, // (v);.if(1. - x <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, // = 0.000061035156
	0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, // 25).return (v >=
	0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, //  0.) ? 0. : 1.;.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, // const float res 
	0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, // = ((-0.155972/3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, //  * x + (1.56467/
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, // 5) ) * sqrt(1. -
	0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, //  x);.return (v >
	0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, // = 0.) ? res : 1.
	0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //  - res;.}.float 
	0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, // atan2_approx_div
	0x32, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 2PI(const float 
	0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, // y, const float x
	0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ).{.const float 
	0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, // abs_y = abs(y);.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, // const float abs_
	0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, // x = abs(x);.if(a
	0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, // bs_x <= 0.000061
	0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, // 03515625 && abs_
	0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, // y <= 0.000061035
	0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, // 15625).return 0.
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, // ;.const float r 
	0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, // = (abs_x - abs_y
	0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, // ) / (abs_x + abs
	0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _y);.const float
	0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, //  angle = ((x < 0
	0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, // .) ? (3./8.) : (
	0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, // 1./8.)).+ (0.211
	0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // 868 /(2.*3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, // 6433832795) * r 
	0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, // * r - 0.987305 /
	0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, // (2.*3.1415926535
	0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, // 8979323846264338
	0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, // 32795)) * ((x < 
	0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, // 0.) ? -r : r);.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // eturn (y < 0.) ?
	0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, //  -angle : angle;
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, // .}.float asin_ap
	0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // prox_divPI(const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, //  float v).{.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, // t float x = abs(
	0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, // v);.if(1. - x <=
	0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, //  0.0000610351562
	0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, // 5).return (v >= 
	0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, // 0.) ? 0.5 : -0.5
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, // ;.const float re
	0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, // s = ((-0.155972/
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, // 5) * x + (1.5646
	0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, // 7/3.141592653589
	0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, // 7932384626433832
	0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, // 795) ) * sqrt(1.
	0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, //  - x);.return (v
	0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, //  >= 0.) ? 0.5 - 
	0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, // res : -0.5 + res
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, // ;.}.vec2 ray_to_
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, // equirectangular_
	0x75, 0x76, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, // uv(const vec3 ra
	0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, // y).{.return vec2
	0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, // (.0.5 + atan2_ap
	0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, // prox_div2PI(ray.
	0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, // y, ray.x),.acos_
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, // approx_divPI(ray
	0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, // .z));.}.float In
	0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // vsRGB(const floa
	0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, // t color).{.if (c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, // olor <= 0.04045)
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, // .return color * 
	0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, // (1.0/12.92);.els
	0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, // e.return pow(col
	0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, // or * (1.0/1.055)
	0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, //  + (0.055/1.055)
	0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // , 2.4);.}.float 
	0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // InvRec709(const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, // float color).{.i
	0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, // f (color <= 0.08
	0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // 1).return color 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, // * (1.0/4.5);.els
	0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, // e.return pow(col
	0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, // or * (1.0/1.099)
	0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, //  + (0.099/1.099)
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // , 1.0/0.45);.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, // loat InvGamma(co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // nst float color)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, // .{.return InvsRG
	0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // B(color);.}.vec3
	0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  InvGamma(const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // vec3 color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // turn vec3(InvGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, // ma(color.x),InvG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, // amma(color.y),In
	0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, // vGamma(color.z))
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, // ;.}.vec3 InvTone
	0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // Map(const vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // olor).{.const fl
	0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, // oat inv_2bh = 0.
	0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // 5/0.25;.const fl
	0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, // oat bh = 4.0*0.2
	0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 5 - 2.0;.return 
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, // (color - 1.0 + s
	0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // qrt(color*(color
	0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, //  + bh) + 1.0))*i
	0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // nv_2bh;.}.float 
	0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // sRGB(const float
	0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, //  f).{.float s;.i
	0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, // f (f <= 0.003130
	0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, // 8).s = 12.92 * f
	0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, // ;.else.s = 1.055
	0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, //  * pow(f, 1.0/2.
	0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 4) - 0.055;.retu
	0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, // rn s;.}.float Re
	0x63, 0x37, 0x30, 0x39, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // c709(const float
	0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, //  f).{.float s;.i
	0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, // f (f <= 0.018).s
	0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, //  = 4.5 * f;.else
	0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, // .s = 1.099 * pow
	0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, // (f, 0.45) - 0.09
	0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // 9;.return s;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, // loat FBGamma(con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // st float color).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, // {.return sRGB(co
	0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, // lor);.}.vec2 FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, // amma(const vec2 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // color).{.return 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, // vec2(FBGamma(col
	0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, // or.x),FBGamma(co
	0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // lor.y));.}.vec3 
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // FBGamma(const ve
	0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // c3 color).{.retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, // rn vec3(FBGamma(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, // color.x),FBGamma
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // (color.y),FBGamm
	0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // a(color.z));.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, // loat FBToneMap(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, // onst float l).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, // return l * ((l*0
	0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, // .25 + 1.0) / (l 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // + 1.0));.}.vec2 
	0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // FBToneMap(const 
	0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, // vec2 color).{.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, // nst float l = do
	0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, // t(color,vec2(0.1
	0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, // 76204+0.0108109*
	0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, // 0.5,0.812985+0.0
	0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, // 108109*0.5));.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, // turn color * ((l
	0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, // *0.25 + 1.0) / (
	0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // l + 1.0));.}.vec
	0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, // 3 FBToneMap(cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // t vec3 color).{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, // const float l = 
	0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, // dot(color,vec3(0
	0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, // .176204,0.812985
	0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, // ,0.0108109));.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, // turn color * ((l
	0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, // *0.25 + 1.0) / (
	0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // l + 1.0));.}.vec
	0x34, 0x20, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // 4 Additive(const
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, //  vec4 cBase, con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, // st vec4 cBlend, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, // const float perc
	0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, // ent).{.return cB
	0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, // ase + cBlend*per
	0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, // cent;.}.vec3 Scr
	0x65, 0x65, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // een (const vec3 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // cBase, const vec
	0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 3 cBlend).{.retu
	0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // rn 1.0 - (1.0 - 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // cBase) * (1.0 - 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // cBlend);.}.vec4 
	0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // Screen (const ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // c4 cBase, const 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // vec4 cBlend).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, // eturn 1.0 - (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, //  - cBase) * (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, //  - cBlend);.}.ve
	0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, // c3 ScreenHDR (co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, // nst vec3 cBase, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // const vec3 cBlen
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, // d).{.return max(
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, // 1.0 - (1.0 - cBa
	0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, // se) * (1.0 - cBl
	0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, // end), vec3(0.,0.
	0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, // ,0.));.}.vec4 Sc
	0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // reenHDR (const v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, // ec4 cBase, const
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, //  vec4 cBlend).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // return max(1.0 -
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, //  (1.0 - cBase) *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, //  (1.0 - cBlend),
	0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, //  vec4(0.,0.,0.,0
	0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, // .));.}.vec4 Mult
	0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, // iply (const vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, //  cBase, const ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, // c4 cBlend, const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, //  float percent).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, // {.return cBase *
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, //  cBlend*percent;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, // .}.vec4 Overlay 
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, // (const vec4 cBas
	0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // e, const vec4 cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, // lend).{.vec4 cNe
	0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, // w = step(0.5, cB
	0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, // ase);.cNew = mix
	0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, // (cBase*cBlend*2.
	0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, // 0, 1.0-2.0*(1.0-
	0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, // cBase)*(1.0-cBle
	0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // nd), cNew);.retu
	0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // rn cNew;.}.vec4 
	0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, // OverlayHDR (cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, // t vec4 cBase, co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // nst vec4 cBlend)
	0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, // .{.vec4 cNew = s
	0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, // tep(0.5, cBase);
	0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, // .cNew = max(mix(
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, // cBase*cBlend*2.0
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, // , 1.0-2.0*(1.0-c
	0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, // Base)*(1.0-cBlen
	0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // d), cNew), vec4(
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, // 0.,0.,0.,0.));.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // eturn cNew;.}.ve
	0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, // c3 cos_hemispher
	0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // e_sample(const v
	0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // ec2 t).{.const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, // loat phi = t.y *
	0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, //  (2.0*3.14159265
	0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, // 3589793238462643
	0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // 3832795);.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, // float cosTheta =
	0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, //  sqrt(1.0 - t.x)
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, // ;.const float si
	0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, // nTheta = sqrt(t.
	0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, // x);.float sp,cp;
	0x0a, 0x73, 0x69, 0x6e, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x2c, 0x73, 0x70, 0x2c, 0x63, // .sincos(phi,sp,c
	0x70, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // p);.return vec3(
	0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, // cp * sinTheta, c
	0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, // osTheta, sp * si
	0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // nTheta);.}.vec3 
	0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, // rotate_to_vector
	0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // _upper(const vec
	0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // 3 vec, const vec
	0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, // 3 normal).{.if(n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, // ormal.y > -0.999
	0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 99).{.const floa
	0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, // t h = 1.0/(1.0+n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // ormal.y);.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, // float hz = h*nor
	0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // mal.z;.const flo
	0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, // at hzx = hz*norm
	0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // al.x;.return vec
	0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, // 3(.vec.x * (norm
	0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, // al.y+hz*normal.z
	0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // ) + vec.y * norm
	0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, // al.x - vec.z * h
	0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // zx,.vec.y * norm
	0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, // al.y - vec.x * n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, // ormal.x - vec.z 
	0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, // * normal.z,.vec.
	0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, // y * normal.z - v
	0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, // ec.x * hzx + vec
	0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, // .z * (normal.y+h
	0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // *normal.x*normal
	0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, // .x));.}.else ret
	0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, // urn -vec;.}.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, // orm mat4 matView
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, // ;.uniform mat4 m
	0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // atWorldView;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, // form mat4 matWor
	0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x3b, 0x0a, 0x75, // ldViewInverse;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, // niform mat4 matW
	0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, // orldViewProj;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, // iform mat4 matPr
	0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, // oj;.uniform samp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, // ler2D tex_ball_c
	0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, // olor;.uniform sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x3b, // mpler2D tex_env;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .uniform sampler
	0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, // 2D tex_diffuse_e
	0x6e, 0x76, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, // nv;.uniform samp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, // ler2D tex_ball_d
	0x65, 0x63, 0x61, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, // ecal;.uniform sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // mpler2D tex_ball
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // _playfield;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x62, 0x61, 0x73, 0x69, 0x63, // orm vec4 u_basic
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // _shade_mode;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, // form vec4 ballLi
	0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x5d, 0x3b, 0x0a, 0x75, // ghtPos[2 + 8];.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, // niform vec4 ball
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x32, 0x20, // LightEmission[2 
	0x2b, 0x20, 0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // + 8];.uniform ve
	0x63, 0x34, 0x20, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, // c4 cAmbient_Ligh
	0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // tRange;.uniform 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, // vec4 fenvEmissio
	0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x3b, // nScale_TexWidth;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x44, // .uniform vec4 fD
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, // isableLighting_t
	0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // op_below;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x53, 0x63, 0x61, // m vec4 fSceneSca
	0x6c, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // le;.uniform vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x0a, 0x75, 0x6e, //  cBase_Alpha;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, // iform vec4 Rough
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, // ness_WrapL_Edge_
	0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // Thickness;.float
	0x20, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, //  GeometricOpacit
	0x79, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, // y(const float Nd
	0x6f, 0x74, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // otV, const float
	0x20, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, //  alpha, const fl
	0x6f, 0x61, 0x74, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2c, 0x20, 0x63, 0x6f, // oat blending, co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, // nst float thickn
	0x65, 0x73, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // ess).{.const flo
	0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x56, // at x = abs(NdotV
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, // );.const float g
	0x20, 0x3d, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x2a, 0x20, 0x28, 0x31, //  = blending * (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x78, 0x20, 0x2f, 0x20, 0x28, 0x78, 0x20, 0x2a, 0x20, 0x28, // .0 - (x / (x * (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, // 1.0 - thickness)
	0x20, 0x2b, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, 0x29, 0x29, 0x3b, //  + thickness)));
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x61, 0x6c, 0x70, 0x68, // .return mix(alph
	0x61, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x67, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // a, 1.0, g);.}.ve
	0x63, 0x33, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, // c3 FresnelSchlic
	0x6b, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, // k(const vec3 spe
	0x63, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4c, // c, const float L
	0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // dotH, const floa
	0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // t edge).{.return
	0x20, 0x73, 0x70, 0x65, 0x63, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x65, 0x64, //  spec + (vec3(ed
	0x67, 0x65, 0x2c, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x65, 0x64, 0x67, 0x65, 0x29, 0x20, 0x2d, 0x20, // ge,edge,edge) - 
	0x73, 0x70, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x31, 0x2e, 0x30, 0x20, // spec) * pow(1.0 
	0x2d, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x35, 0x2e, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // - LdotH, 5.);.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, // vec3 DoPointLigh
	0x74, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, // t(const vec3 pos
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, // , const vec3 N, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x63, 0x6f, // const vec3 V, co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // nst vec3 diffuse
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, // , const vec3 glo
	0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ssy, const float
	0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, //  edge, const flo
	0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x2c, 0x20, // at glossyPower, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x2c, 0x20, 0x63, 0x6f, 0x6e, // const int i, con
	0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, // st bool is_metal
	0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, // ).{.const vec3 l
	0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x20, 0x28, 0x6d, // ightDir = ( ( (m
	0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, // atView) * (vec4(
	0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x69, 0x5d, 0x2e, // ballLightPos[i].
	0x78, 0x79, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, // xyz, 1.0)) ) ).x
	0x79, 0x7a, 0x20, 0x2d, 0x20, 0x70, 0x6f, 0x73, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // yz - pos;.const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x4c, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, // vec3 L = normali
	0x7a, 0x65, 0x28, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x29, 0x3b, 0x0a, 0x63, 0x6f, // ze(lightDir);.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, // nst float NdotL 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x20, 0x4c, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, // = dot(N, L);.vec
	0x33, 0x20, 0x4f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, // 3 Out = vec3(0.0
	0x2c, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, // ,0.0,0.0);.if (!
	0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x4e, 0x64, 0x6f, // is_metal && (Ndo
	0x74, 0x4c, 0x20, 0x2b, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, // tL + Roughness_W
	0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, // rapL_Edge_Thickn
	0x65, 0x73, 0x73, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x4f, 0x75, // ess.y > 0.0)).Ou
	0x74, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x28, 0x28, // t = diffuse * ((
	0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x2b, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, // NdotL + Roughnes
	0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, // s_WrapL_Edge_Thi
	0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x73, 0x71, 0x72, 0x28, // ckness.y) / sqr(
	0x31, 0x2e, 0x30, 0x2b, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, // 1.0+Roughness_Wr
	0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, // apL_Edge_Thickne
	0x73, 0x73, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, // ss.y));.if (Ndot
	0x4c, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // L > 0.0).{.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x48, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, //  vec3 H = normal
	0x69, 0x7a, 0x65, 0x28, 0x4c, 0x20, 0x2b, 0x20, 0x56, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // ize(L + V);.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, // t float NdotH = 
	0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // dot(N, H);.const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, //  float LdotH = d
	0x6f, 0x74, 0x28, 0x4c, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // ot(L, H);.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x56, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, 0x6f, // float VdotH = do
	0x74, 0x28, 0x56, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x4e, 0x64, // t(V, H);.if ((Nd
	0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x4c, // otH > 0.0) && (L
	0x64, 0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, // dotH > 0.0) && (
	0x56, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x4f, 0x75, // VdotH > 0.0)).Ou
	0x74, 0x20, 0x2b, 0x3d, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x6c, // t += FresnelSchl
	0x69, 0x63, 0x6b, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x4c, 0x64, 0x6f, 0x74, // ick(glossy, Ldot
	0x48, 0x2c, 0x20, 0x65, 0x64, 0x67, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x28, 0x67, 0x6c, // H, edge) * (((gl
	0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // ossyPower + 1.0)
	0x20, 0x2f, 0x20, 0x28, 0x38, 0x2e, 0x30, 0x2a, 0x56, 0x64, 0x6f, 0x74, 0x48, 0x29, 0x29, 0x20, //  / (8.0*VdotH)) 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x67, 0x6c, 0x6f, // * pow(NdotH, glo
	0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x63, 0x6f, // ssyPower));.}.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, // nst float sqrl_l
	0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x6c, 0x69, // ightDir = dot(li
	0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2c, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x29, // ghtDir,lightDir)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x3d, // ;.float fAtten =
	0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x73, 0x71, 0x72, //  clamp(1.0 - sqr
	0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2a, 0x73, 0x71, 0x72, 0x6c, 0x5f, // l_lightDir*sqrl_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2f, 0x28, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, // lightDir/(cAmbie
	0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, // nt_LightRange.w*
	0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, // cAmbient_LightRa
	0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, // nge.w*cAmbient_L
	0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, // ightRange.w*cAmb
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, // ient_LightRange.
	0x77, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x66, // w), 0.0, 1.0);.f
	0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x3d, 0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x2a, 0x66, // Atten = fAtten*f
	0x41, 0x74, 0x74, 0x65, 0x6e, 0x2f, 0x28, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, // Atten/(sqrl_ligh
	0x74, 0x44, 0x69, 0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, // tDir + 1.0);.vec
	0x33, 0x20, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x67, 0x6c, 0x6f, 0x73, // 3 ambient = glos
	0x73, 0x79, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, // sy;.if (!is_meta
	0x6c, 0x29, 0x0a, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x2b, 0x3d, 0x20, 0x64, 0x69, // l).ambient += di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // ffuse;.const vec
	0x33, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x20, 0x3d, 0x20, 0x4f, 0x75, 0x74, 0x20, 0x2a, // 3 result = Out *
	0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, //  ballLightEmissi
	0x6f, 0x6e, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x66, 0x41, 0x74, 0x74, // on[i].xyz * fAtt
	0x65, 0x6e, 0x20, 0x2b, 0x20, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x2a, 0x20, 0x63, // en + ambient * c
	0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, // Ambient_LightRan
	0x67, 0x65, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x44, 0x69, 0x73, // ge.xyz;.if (fDis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, // ableLighting_top
	0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, // _below.x != 0.0)
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x72, 0x65, 0x73, 0x75, // .return mix(resu
	0x6c, 0x74, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x66, 0x44, 0x69, 0x73, 0x61, // lt,diffuse,fDisa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, // bleLighting_top_
	0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, // below.x);.else.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, // eturn result;.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, // vec3 DoEnvmapDif
	0x66, 0x75, 0x73, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // fuse(const vec3 
	0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, // N, const vec3 di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // ffuse).{.const v
	0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // ec3 env = textur
	0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // eLod(tex_diffuse
	0x5f, 0x65, 0x6e, 0x76, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, // _env, ray_to_equ
	0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, // irectangular_uv(
	0x4e, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x72, 0x65, // N), 0.0).xyz;.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x65, // turn diffuse * e
	0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, // nv*fenvEmissionS
	0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, // cale_TexWidth.x;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, // .}.vec3 DoEnvmap
	0x47, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // Glossy(const vec
	0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // 3 N, const vec3 
	0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, 0x75, // V, const vec2 Ru
	0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, // v, const vec3 gl
	0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ossy, const floa
	0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x29, 0x0a, 0x7b, // t glossyPower).{
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x69, 0x70, // .const float mip
	0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x66, 0x65, 0x6e, 0x76, //  = min(log2(fenv
	0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, // EmissionScale_Te
	0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // xWidth.y * sqrt(
	0x33, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x35, 0x2a, 0x6c, 0x6f, 0x67, 0x32, // 3.0)) - 0.5*log2
	0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x2b, 0x20, 0x31, // (glossyPower + 1
	0x2e, 0x30, 0x29, 0x2c, 0x20, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, // .0), log2(fenvEm
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, // issionScale_TexW
	0x69, 0x64, 0x74, 0x68, 0x2e, 0x79, 0x29, 0x2d, 0x31, 0x2e, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // idth.y)-1.);.con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, // st vec3 env = te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, // xtureLod(tex_env
	0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x6d, 0x69, 0x70, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // , Ruv, mip).xyz;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, // .return glossy *
	0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, //  env*fenvEmissio
	0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, // nScale_TexWidth.
	0x78, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, // x;.}.vec3 DoEnvm
	0x61, 0x70, 0x32, 0x6e, 0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // ap2ndLayer(const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x31, 0x73, 0x74, 0x4c, 0x61, //  vec3 color1stLa
	0x79, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // yer, const vec3 
	0x70, 0x6f, 0x73, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // pos, const vec3 
	0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, // N, const vec3 V,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, //  const float Ndo
	0x74, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, // tV, const vec2 R
	0x75, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, // uv, const vec3 s
	0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // pecular).{.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x77, 0x20, 0x3d, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, //  vec3 w = Fresne
	0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, 0x6b, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, // lSchlick(specula
	0x72, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, // r, NdotV, Roughn
	0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, // ess_WrapL_Edge_T
	0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // hickness.z);.con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, // st vec3 env = te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, // xtureLod(tex_env
	0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // , Ruv, 0.0).xyz;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .return mix(colo
	0x72, 0x31, 0x73, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2c, 0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, // r1stLayer, env*f
	0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, // envEmissionScale
	0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x2c, 0x20, 0x77, 0x29, 0x3b, // _TexWidth.x, w);
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, // .}.vec3 lightLoo
	0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, // p(const vec3 pos
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // , vec3 N, const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, // vec3 V, vec3 dif
	0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // fuse, vec3 gloss
	0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, // y, const vec3 sp
	0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // ecular, const fl
	0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // oat edge, const 
	0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x7b, // bool is_metal).{
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, // .vec3 color = ve
	0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x66, // c3_splat(0.0);.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // loat NdotV = dot
	0x28, 0x4e, 0x2c, 0x56, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x56, // (N,V);.if (NdotV
	0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x4e, 0x20, 0x3d, 0x20, 0x2d, 0x4e, //  < 0.0).{.N = -N
	0x3b, 0x0a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x2d, 0x4e, 0x64, 0x6f, 0x74, 0x56, // ;.NdotV = -NdotV
	0x3b, 0x0a, 0x7d, 0x0a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, // ;.}.NdotV = min(
	0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // NdotV, 1.0);.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // st float diffuse
	0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // Max = max(diffus
	0x65, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, // e.x,max(diffuse.
	0x79, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, // y,diffuse.z));.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // onst float gloss
	0x79, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, // yMax = max(gloss
	0x79, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x79, // y.x,max(glossy.y
	0x2c, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // ,glossy.z));.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, // st float specula
	0x72, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, // rMax = max(specu
	0x6c, 0x61, 0x72, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, // lar.x,max(specul
	0x61, 0x72, 0x2e, 0x79, 0x2c, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x7a, 0x29, // ar.y,specular.z)
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // );.const float s
	0x75, 0x6d, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, // um = diffuseMax 
	0x2b, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3b, 0x0a, 0x69, 0x66, // + glossyMax ;.if
	0x20, 0x28, 0x73, 0x75, 0x6d, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x26, 0x26, 0x20, 0x66, //  (sum > 1.0 && f
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, // DisableLighting_
	0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x31, 0x2e, // top_below.x < 1.
	0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0).{.const float
	0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x73, 0x75, //  invsum = 1.0/su
	0x6d, 0x3b, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, // m;.diffuse *= in
	0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, 0x3d, 0x20, // vsum;.glossy *= 
	0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x21, // invsum;.}.if ((!
	0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, // is_metal && (dif
	0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, // fuseMax > 0.0)) 
	0x7c, 0x7c, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, // || (glossyMax > 
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x44, 0x69, 0x73, // 0.0)).{.if (fDis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, // ableLighting_top
	0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x29, // _below.x == 1.0)
	0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, // .color += float(
	0x32, 0x29, 0x20, 0x2a, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x3b, 0x0a, 0x65, 0x6c, // 2) * diffuse;.el
	0x73, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, // se for (int i = 
	0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x32, 0x3b, 0x20, 0x69, 0x2b, 0x2b, 0x29, 0x0a, 0x63, // 0; i < 2; i++).c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, // olor += DoPointL
	0x69, 0x67, 0x68, 0x74, 0x28, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, // ight(pos, N, V, 
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, // diffuse, glossy,
	0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, //  edge, Roughness
	0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, // _WrapL_Edge_Thic
	0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x2c, 0x20, 0x69, 0x2c, 0x20, 0x69, 0x73, 0x5f, 0x6d, // kness.x, i, is_m
	0x65, 0x74, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, // etal);.}.if (!is
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, // _metal && (diffu
	0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x63, 0x6f, // seMax > 0.0)).co
	0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, // lor += DoEnvmapD
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, 0x20, 0x28, 0x28, 0x20, 0x28, 0x20, 0x28, 0x76, 0x65, // iffuse( (( ( (ve
	0x63, 0x34, 0x28, 0x4e, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, // c4(N,0.0)) * (ma
	0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, // tView) ) ).xyz),
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, //  diffuse);.if ((
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, // glossyMax > 0.0)
	0x20, 0x7c, 0x7c, 0x20, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, //  || (specularMax
	0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, //  > 0.0)).{.vec3 
	0x52, 0x20, 0x3d, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x29, 0x2a, // R = (2.0*NdotV)*
	0x4e, 0x20, 0x2d, 0x20, 0x56, 0x3b, 0x0a, 0x52, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x20, 0x28, 0x20, // N - V;.R = (( ( 
	0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x52, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, // (vec4(R,0.0)) * 
	0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, // (matView) ) ).xy
	0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, // z);.const vec2 R
	0x75, 0x76, 0x20, 0x3d, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, // uv = ray_to_equi
	0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x52, // rectangular_uv(R
	0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, // );.if (glossyMax
	0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, //  > 0.0).color +=
	0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x47, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x28, //  DoEnvmapGlossy(
	0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // N, V, Ruv, gloss
	0x79, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, // y, Roughness_Wra
	0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, // pL_Edge_Thicknes
	0x73, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, // s.x);.if (specul
	0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, // arMax > 0.0).col
	0x6f, 0x72, 0x20, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x32, 0x6e, 0x64, // or = DoEnvmap2nd
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x70, 0x6f, 0x73, // Layer(color, pos
	0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x52, // , N, V, NdotV, R
	0x75, 0x76, 0x2c, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x29, 0x3b, 0x0a, 0x7d, // uv, specular);.}
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3b, 0x0a, // .return color ;.
	0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, // }.uniform vec4 i
	0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, // nvTableRes_refle
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // ction;.uniform v
	0x65, 0x63, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // ec4 w_h_disableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x61, // ighting;.vec3 ba
	0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, // llLightLoop(cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // t vec3 pos, vec3
	0x20, 0x4e, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, //  N, vec3 V, vec3
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, //  diffuse, vec3 g
	0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // lossy, const vec
	0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // 3 specular, cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, // t float edge, co
	0x6e, 0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, // nst bool is_meta
	0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // l).{.const float
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, //  diffuseMax = ma
	0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, // x(diffuse.x,max(
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x79, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // diffuse.y,diffus
	0x65, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // e.z));.const flo
	0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, // at glossyMax = m
	0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, // ax(glossy.x,max(
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x79, 0x2c, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, // glossy.y,glossy.
	0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // z));.const float
	0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, //  specularMax = m
	0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x78, 0x2c, 0x6d, 0x61, // ax(specular.x,ma
	0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x79, 0x2c, 0x73, 0x70, 0x65, // x(specular.y,spe
	0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // cular.z));.const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, //  float sum = dif
	0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x2b, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, // fuseMax + glossy
	0x4d, 0x61, 0x78, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x73, 0x75, 0x6d, 0x20, 0x3e, 0x20, 0x31, 0x2e, // Max;.if(sum > 1.
	0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0).{.const float
	0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x73, 0x75, //  invsum = 1.0/su
	0x6d, 0x3b, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, // m;.diffuse *= in
	0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, 0x3d, 0x20, // vsum;.glossy *= 
	0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // invsum;.}.vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, // olor = vec3(0.0,
	0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x28, //  0.0, 0.0);.if((
	0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, // !is_metal && (di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // ffuseMax > 0.0))
	0x20, 0x7c, 0x7c, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, //  || (glossyMax >
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x66, 0x6f, 0x72, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, //  0.0)).for(int i
	0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x3b, //  = 0; i < 2 + 8;
	0x20, 0x69, 0x2b, 0x2b, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, //  i++).color += D
	0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x70, 0x6f, 0x73, 0x2c, // oPointLight(pos,
	0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, //  N, V, diffuse, 
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x52, 0x6f, // glossy, edge, Ro
	0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, // ughness_WrapL_Ed
	0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x2c, 0x20, // ge_Thickness.x, 
	0x69, 0x2c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x69, 0x66, // i, is_metal);.if
	0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, // (!is_metal && (d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, // iffuseMax > 0.0)
	0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, // ).color += DoEnv
	0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // mapDiffuse(norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, // lize(( (matView)
	0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x4e, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, //  * (vec4(N, 0.0)
	0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // ) ).xyz), diffus
	0x65, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, // e);.if(specularM
	0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // ax > 0.0).color 
	0x2b, 0x3d, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x3b, 0x0a, 0x72, 0x65, 0x74, // += specular;.ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, 0x69, // urn color;.}.voi
	0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // d main().{.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, //  vec3 V = normal
	0x69, 0x7a, 0x65, 0x28, 0x20, 0x2d, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, // ize( -v_worldPos
	0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // .xyz);.const vec
	0x33, 0x20, 0x4e, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // 3 N = normalize(
	0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, // v_normal.xyz);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x52, 0x20, 0x3d, 0x20, 0x72, 0x65, // onst vec3 R = re
	0x66, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x56, 0x2c, 0x20, 0x4e, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, // flect(V, N);.vec
	0x33, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // 3 ballImageColor
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, // ;.const float ed
	0x67, 0x65, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x56, 0x2c, 0x20, 0x52, 0x29, 0x3b, 0x0a, // ge = dot(V, R);.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x6f, 0x64, 0x20, // const float lod 
	0x3d, 0x20, 0x28, 0x65, 0x64, 0x67, 0x65, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x36, 0x29, 0x20, 0x3f, // = (edge > 0.6) ?
	0x20, 0x65, 0x64, 0x67, 0x65, 0x2a, 0x28, 0x36, 0x2e, 0x30, 0x2a, 0x31, 0x2e, 0x30, 0x2f, 0x30, //  edge*(6.0*1.0/0
	0x2e, 0x34, 0x29, 0x2d, 0x28, 0x36, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x36, 0x2f, 0x30, 0x2e, 0x34, // .4)-(6.0*0.6/0.4
	0x29, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // ) : 0.0;.const v
	0x65, 0x63, 0x33, 0x20, 0x72, 0x76, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x20, 0x28, 0x76, 0x65, 0x63, // ec3 rv = (( (vec
	0x34, 0x28, 0x2d, 0x52, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, // 4(-R,0.0)) * (ma
	0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, // tView) ).xyz);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x20, 0x3d, 0x20, 0x72, // onst vec2 uv = r
	0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, // ay_to_equirectan
	0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x72, 0x76, 0x29, 0x3b, 0x0a, 0x62, 0x61, // gular_uv(rv);.ba
	0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x74, // llImageColor = t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, // extureLod(tex_ba
	0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x75, 0x76, 0x2c, 0x20, 0x6c, 0x6f, // ll_color, uv, lo
	0x64, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // d).rgb;.const ve
	0x63, 0x34, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x20, 0x3d, // c4 decalColorT =
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, //  texture(tex_bal
	0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // l_decal, v_texco
	0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x65, 0x63, 0x61, // ord0);.vec3 deca
	0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, // lColor = decalCo
	0x6c, 0x6f, 0x72, 0x54, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, // lorT.rgb;.decalC
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x3d, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, // olor *= decalCol
	0x6f, 0x72, 0x54, 0x2e, 0x61, 0x3b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, // orT.a;.ballImage
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, // Color += decalCo
	0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, // lor;.if ((w_h_di
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x7a, 0x20, // sableLighting.z 
	0x21, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, // != 0.)).{.gl_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x62, 0x61, // gColor = vec4(ba
	0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x63, 0x42, 0x61, // llImageColor,cBa
	0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x61, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // se_Alpha.a);.ret
	0x75, 0x72, 0x6e, 0x3b, 0x0a, 0x7d, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, // urn;.}.ballImage
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x3d, 0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, // Color *= fenvEmi
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, // ssionScale_TexWi
	0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // dth.x;.const vec
	0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // 3 playfield_norm
	0x61, 0x6c, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, // al = ( (matWorld
	0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, // View) * (float4(
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x31, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x20, 0x29, 0x2e, // 0.,0.,1.,0.)) ).
	0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // xyz;.const float
	0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x70, 0x6c, 0x61, //  NdotR = dot(pla
	0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x52, // yfield_normal, R
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, // );.const vec3 pl
	0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, // ayfield_p0 = ( (
	0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, // matWorldView) * 
	0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x20, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, // (vec4( 0.,0.,0.,
	0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // 1.0)) ).xyz;.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // st float t = dot
	0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // (playfield_norma
	0x6c, 0x2c, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, // l, v_worldPos.xy
	0x7a, 0x20, 0x2d, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x30, // z - playfield_p0
	0x29, 0x20, 0x2f, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // ) / NdotR;.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, //  vec3 playfield_
	0x68, 0x69, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, // hit = v_worldPos
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x74, 0x20, 0x2a, 0x20, 0x52, 0x3b, 0x0a, 0x63, 0x6f, // .xyz - t * R;.co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x20, 0x3d, 0x20, // nst vec4 proj = 
	0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, // ( (matProj) * (v
	0x65, 0x63, 0x34, 0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x68, 0x69, // ec4(playfield_hi
	0x74, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // t, 1.0)) );.cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x70, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, // t vec2 uvp = vec
	0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, // 2(0.5, 0.5) + ve
	0x63, 0x32, 0x28, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x78, 0x2c, 0x20, 0x2d, 0x70, 0x72, 0x6f, 0x6a, // c2(proj.x, -proj
	0x2e, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2f, 0x20, 0x70, 0x72, 0x6f, // .y) * (0.5 / pro
	0x6a, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, // j.w);.const vec3
	0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, //  playfieldColor 
	0x3d, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x28, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x75, // = 0.25 * (.textu
	0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, // re(tex_ball_play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, // field, uvp + vec
	0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, // 2(w_h_disableLig
	0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x72, 0x67, // hting.x, 0.)).rg
	0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, // b.+ texture(tex_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, // ball_playfield, 
	0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, // uvp - vec2(w_h_d
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, // isableLighting.x
	0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, // , 0.)).rgb.+ tex
	0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, // ture(tex_ball_pl
	0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, // ayfield, uvp + v
	0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, // ec2(0., w_h_disa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, // bleLighting.y)).
	0x72, 0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, // rgb.+ texture(te
	0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, // x_ball_playfield
	0x2c, 0x20, 0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, // , uvp - vec2(0.,
	0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, //  w_h_disableLigh
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x29, 0x3b, 0x0a, // ting.y)).rgb.);.
	0x69, 0x66, 0x20, 0x28, 0x21, 0x28, 0x75, 0x76, 0x70, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, // if (!(uvp.x < 0.
	0x20, 0x7c, 0x7c, 0x20, 0x75, 0x76, 0x70, 0x2e, 0x78, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x20, 0x7c, //  || uvp.x > 1. |
	0x7c, 0x20, 0x75, 0x76, 0x70, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x20, 0x7c, 0x7c, 0x20, // | uvp.y < 0. || 
	0x75, 0x76, 0x70, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x29, 0x0a, 0x26, 0x26, 0x20, 0x21, // uvp.y > 1.).&& !
	0x28, 0x74, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x62, 0x61, 0x6c, // (t <= 0.)).{.bal
	0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x6c, 0x65, // lImageColor = le
	0x72, 0x70, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, // rp(ballImageColo
	0x72, 0x2c, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6c, 0x6f, // r, playfieldColo
	0x72, 0x2c, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, // r, smoothstep(0.
	0x30, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x35, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x29, 0x20, // 0, 0.15, NdotR) 
	0x2a, 0x20, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, // * invTableRes_re
	0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x62, // flection.z);.}.b
	0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, // allImageColor = 
	0x6d, 0x69, 0x6e, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, // min(ballImageCol
	0x6f, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x35, 0x2e, 0x2c, 0x20, // or, float3(15., 
	0x31, 0x35, 0x2e, 0x2c, 0x20, 0x31, 0x35, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, // 15., 15.));.vec3
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x3d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, //  diffuse = cBase
	0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x2a, 0x30, 0x2e, 0x30, 0x37, 0x35, // _Alpha.rgb*0.075
	0x3b, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x3d, 0x20, 0x64, 0x65, 0x63, // ;.diffuse *= dec
	0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // alColor;.const v
	0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, // ec3 glossy = max
	0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x76, 0x65, // (diffuse*2.0, ve
	0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x2c, 0x30, 0x2e, 0x31, 0x2c, 0x30, 0x2e, 0x31, 0x29, 0x29, // c3(0.1,0.1,0.1))
	0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x20, // ;.vec3 specular 
	0x3d, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // = ballImageColor
	0x20, 0x2a, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, //  * cBase_Alpha.r
	0x67, 0x62, 0x3b, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x20, 0x2a, 0x3d, 0x20, // gb;.specular *= 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x2c, 0x31, 0x2e, 0x2c, 0x31, 0x2e, 0x29, 0x2d, 0x64, // vec3(1.,1.,1.)-d
	0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, // ecalColor;.gl_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x62, 0x61, // agColor.rgb = ba
	0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x76, 0x5f, 0x77, 0x6f, // llLightLoop(v_wo
	0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, // rldPos.xyz, N, V
	0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // , diffuse, gloss
	0x79, 0x2c, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x31, 0x2e, 0x30, // y, specular, 1.0
	0x2c, 0x20, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, // , false);.gl_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x61, 0x20, 0x3d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // gColor.a = cBase
	0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x61, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,                   // _Alpha.a;.}..
};
static const uint8_t fs_ball_equirectangular_nodecal_dx11[8112] =
{
	0x46, 0x53, 0x48, 0x0b, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x07, 0x6d, // FSH....l.......m
	0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x14, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, // atView..........
	0x0c, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x14, 0x00, 0x40, // .matWorldView..@
	0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x14, // ........matProj.
	0x00, 0x80, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, // ..........ballLi
	0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x0a, 0xc0, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, // ghtPos..........
	0x11, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, // .ballLightEmissi
	0x6f, 0x6e, 0x12, 0x0a, 0x60, 0x01, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x63, 0x41, 0x6d, // on..`........cAm
	0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, // bient_LightRange
	0x12, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x65, 0x6e, 0x76, 0x45, // ...........fenvE
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, // missionScale_Tex
	0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x00, 0x10, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // Width...........
	0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, // fDisableLighting
	0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x12, 0x00, 0x20, 0x02, 0x01, 0x00, // _top_below.. ...
	0x00, 0x00, 0x00, 0x00, 0x0b, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, // .....cBase_Alpha
	0x12, 0x00, 0x30, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x52, 0x6f, 0x75, 0x67, 0x68, // ..0........Rough
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, // ness_WrapL_Edge_
	0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x00, 0x40, 0x02, 0x01, 0x00, 0x00, // Thickness..@....
	0x00, 0x00, 0x00, 0x16, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, // ....invTableRes_
	0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x00, 0x50, 0x02, 0x01, 0x00, // reflection..P...
	0x00, 0x00, 0x00, 0x00, 0x13, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // .....w_h_disable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x00, 0x60, 0x02, 0x01, 0x00, 0x00, 0x00, // Lighting..`.....
	0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // ...tex_ball_colo
	0x72, 0x30, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, // r0..........tex_
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x30, 0x01, 0x02, 0x00, 0x01, // diffuse_env0....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, // ......tex_ball_d
	0x65, 0x63, 0x61, 0x6c, 0x30, 0x01, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x74, // ecal0..........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // ex_ball_playfiel
	0x64, 0x30, 0x01, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, // d0..........tex_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x01, 0x00, 0x00, 0x01, 0x00, // ball_color0.....
	0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // .....tex_diffuse
	0x5f, 0x65, 0x6e, 0x76, 0x30, 0x01, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, // _env0..........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x30, 0x01, 0x03, // ex_ball_decal0..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // ........tex_ball
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x30, 0x01, 0x04, 0x00, 0x01, 0x00, // _playfield0.....
	0x00, 0x00, 0x00, 0x00, 0x74, 0x1d, 0x00, 0x00, 0x44, 0x58, 0x42, 0x43, 0xf6, 0x72, 0x69, 0x6c, // ....t...DXBC.ril
	0x1d, 0xe2, 0xf1, 0x7d, 0xae, 0x4a, 0x5c, 0x29, 0x4b, 0xa4, 0x7b, 0xd8, 0x01, 0x00, 0x00, 0x00, // ...}.J.)K.{.....
	0x74, 0x1d, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, // t.......,.......
	0xec, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x4e, 0x84, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // ....ISGN........
	0x08, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ....h...........
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, // ............t...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x07, 0x07, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....{...........
	0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, // ............{...
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ................
	0x07, 0x07, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, // ....SV_POSITION.
	0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, // NORMAL.TEXCOORD.
	0x4f, 0x53, 0x47, 0x4e, 0x2c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, // OSGN,...........
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, //  ...............
	0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, // ........SV_TARGE
	0x54, 0x00, 0xab, 0xab, 0x53, 0x48, 0x45, 0x58, 0x80, 0x1c, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, // T...SHEX....P...
	0x20, 0x07, 0x00, 0x00, 0x6a, 0x28, 0x00, 0x01, 0x59, 0x08, 0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, //  ...j(..Y...F. .
	0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, // ....'...Z....`..
	0x00, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....Z....`......
	0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, // Z....`......Z...
	0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, // .`......X....p..
	0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, // ....UU..X....p..
	0x02, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, // ....UU..X....p..
	0x03, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, // ....UU..X....p..
	0x04, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x72, 0x10, 0x10, 0x00, // ....UU..b...r...
	0x01, 0x00, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x32, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....b...2.......
	0x62, 0x10, 0x00, 0x03, 0x72, 0x10, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, // b...r.......e...
	0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x02, 0x0c, 0x00, 0x00, 0x00, // . ......h.......
	0x10, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x80, // ............F...
	0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // A.......F...A...
	0x03, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....D...........
	0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, // ........8...r...
	0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x80, // ............F...
	0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // A...............
	0x00, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, // ....F.......F...
	0x01, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....D...........
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // :.......8...r...
	0x01, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, // ............F...
	0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // F.......F.......
	0x00, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, // ....:.......2...
	0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // r.......F.......
	0xf6, 0x0f, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....A.......F...
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // F.......F.......
	0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // 1............@..
	0x9a, 0x99, 0x19, 0x3f, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, // ...?:.......2...
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........:.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x70, 0x41, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x10, 0xc1, // .@....pA.@......
	0x01, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x09, // ....:...........
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // ........F...A...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....F. .........
	0x10, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, // ............F...
	0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // A.......F. .....
	0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // F...A.......F. .
	0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x08, 0x22, 0x00, 0x10, 0x00, // ............"...
	0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, 0x3a, 0x00, 0x10, 0x80, // .....@.....8:...
	0x81, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x08, 0x42, 0x00, 0x10, 0x00, // ............B...
	0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, 0x3a, 0x00, 0x10, 0x80, // .....@.....8:...
	0x81, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, // ............"...
	0x03, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, // ....*...........
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x42, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ........B.......
	0x3a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x80, // :...........:...
	0xc1, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, // ................
	0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ....:...........
	0x3a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, // :...............
	0x42, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // B.......*.......
	0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // :.......1.......
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....:........@..
	0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....7...........
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x3e, // :........@.....>
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x38, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, // .@.....>8.......
	0x04, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // ....*.......*...
	0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ....2...........
	0x0a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0xd0, 0x1d, 0x0a, 0x3d, // .........@.....=
	0x01, 0x40, 0x00, 0x00, 0xdc, 0xe7, 0x20, 0xbe, 0x37, 0x00, 0x00, 0x0a, 0x82, 0x00, 0x10, 0x00, // .@.... .7.......
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x80, // ....:.......*...
	0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // A.......*.......
	0x32, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // 2...............
	0x04, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ....:.......:...
	0x03, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....1...........
	0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // :........@......
	0x37, 0x00, 0x00, 0x0a, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 7...........:...
	0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ....:...A.......
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // :...............
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....:........@..
	0x00, 0x00, 0x00, 0x3f, 0x37, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ...?7...........
	0x1a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, // .........@.....?
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, // :...............
	0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0xc1, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ................
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x1d, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // .@.....?........
	0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // .............@..
	0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....7...".......
	0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // :........@......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x31, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, // .@.....?1...B...
	0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, 0x3a, 0x00, 0x10, 0x00, // .....@.....8:...
	0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x12, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....2...........
	0x0a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // .............@..
	0x1a, 0x5b, 0x4b, 0xbd, 0x01, 0x40, 0x00, 0x00, 0x66, 0x00, 0xff, 0x3e, 0x4b, 0x00, 0x00, 0x05, // .[K..@..f..>K...
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........:.......
	0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 8...........:...
	0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, // ............2...
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // ............A...
	0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....:........@..
	0x00, 0x00, 0x80, 0x3f, 0x37, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ...?7...........
	0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // :.......:.......
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, // :.......7..."...
	0x04, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ....*.......:...
	0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, // ............H...
	0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....CU..r.......
	0x46, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // F.......F~......
	0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // .`......:.......
	0x45, 0x00, 0x00, 0x8b, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0xf2, 0x00, 0x10, 0x00, // E.......CU......
	0x04, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, // ....F.......F~..
	0x03, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // .....`......8...
	0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // r...............
	0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, // F.......2...r...
	0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // ....F...........
	0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x08, // ....F.......9...
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // ........*. .....
	0x26, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, // &....@..........
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0x82, 0x20, 0x10, 0x00, // :.......6.... ..
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, // ....:. .....#...
	0x36, 0x00, 0x00, 0x05, 0x72, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 6...r ......F...
	0x03, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x01, 0x15, 0x00, 0x00, 0x01, 0x38, 0x00, 0x00, 0x08, // ....>.......8...
	0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // r.......F.......
	0x06, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x08, // .. .....!.......
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // ........F. .....
	0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, // ....F...........
	0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x82, 0x20, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, // F. .A...........
	0x10, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // ............F. .
	0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ........F.......
	0x0e, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, // ....:.......2...
	0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // r...........A...
	0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, // ....F.......F...
	0x03, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ....8...r.......
	0x56, 0x05, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x83, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // V.......F. .....
	0x09, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0xb2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....2...........
	0x46, 0x8c, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, // F. .............
	0x02, 0x00, 0x00, 0x00, 0x46, 0x08, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, // ....F.......2...
	0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x83, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // r.......F. .....
	0x0a, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x03, 0x10, 0x00, // ............F...
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........r.......
	0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x83, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // F.......F. .....
	0x0b, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........B.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x2a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // .@.....?*.......
	0x36, 0x00, 0x00, 0x06, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, // 6...............
	0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x32, 0x00, 0x10, 0x00, // A.......8...2...
	0x06, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x10, 0x00, // ................
	0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x32, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ....2...2.......
	0xc6, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, // .@.....?...?....
	0x00, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x0a, 0xc2, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ....1...........
	0x06, 0x04, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........@......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x0a, // ............1...
	0x32, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // 2........@.....?
	0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, // ...?........F...
	0x07, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....<...".......
	0x2a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // *...............
	0x3c, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // <...".......:...
	0x07, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x07, // ............<...
	0x22, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // "...............
	0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x05, 0x22, 0x00, 0x10, 0x00, // ........;..."...
	0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, // ............1...
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........@......
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // :...............
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, // ....:...........
	0x02, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........:.......
	0x32, 0x00, 0x00, 0x0c, 0xc2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x0c, 0x10, 0x00, // 2...............
	0x02, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // .............@..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, // ...........?...?
	0x36, 0x00, 0x00, 0x06, 0x52, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x00, // 6...R......... .
	0x00, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x08, 0xa2, 0x00, 0x10, 0x00, // ....&...6.......
	0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, // .....@.........?
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x32, 0x00, 0x10, 0x00, // ............2...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x66, 0x0a, 0x10, 0x00, // ....F.......f...
	0x06, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, // ....E.......CU..
	0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x7e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // F~.......`......
	0x00, 0x00, 0x00, 0x08, 0x32, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x80, // ....2...........
	0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // A.......F.......
	0x45, 0x00, 0x00, 0x8b, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, // E.......CU..r...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, // ....F.......F~..
	0x04, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // .....`..........
	0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x08, 0x52, 0x00, 0x10, 0x00, // F.......6...R...
	0x08, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, // .....@.....?....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0xa2, 0x00, 0x10, 0x00, // ........6.......
	0x08, 0x00, 0x00, 0x00, 0x56, 0x85, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, // ....V. .....&...
	0x00, 0x00, 0x00, 0x07, 0x32, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x10, 0x00, // ....2...........
	0x06, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, // ....F.......E...
	0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ....CU..r.......
	0x46, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // F.......F~......
	0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // .`..........r...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x32, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ........2.......
	0x46, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // F...........A...
	0x08, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, // ....E.......CU..
	0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x7e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // F~.......`......
	0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....r.......F...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x38, 0x20, 0x00, 0x07, // ....F.......8 ..
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........:.......
	0x01, 0x40, 0x00, 0x00, 0x55, 0x55, 0xd5, 0x40, 0x32, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, // .@..UU.@2.......
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....:........@..
	0x00, 0x00, 0x00, 0xc0, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, // .....@....@@8...
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........:.......
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // :.......8.......
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ....:.......:...
	0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....8...........
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // :.......*. .....
	0x25, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0d, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // %...2...r.......
	0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3e, // F........@.....>
	0x00, 0x00, 0x80, 0x3e, 0x00, 0x00, 0x80, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, // ...>...>....F...
	0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, // A.......2...r...
	0x03, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, // ....F...........
	0x33, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 3...r.......F...
	0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x70, 0x41, 0x00, 0x00, 0x70, 0x41, // .....@....pA..pA
	0x00, 0x00, 0x70, 0x41, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, // ..pA....8...r...
	0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // ....F.......F. .
	0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, // ....#...8...r...
	0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // ....F........@..
	0x9a, 0x99, 0x99, 0x3d, 0x9a, 0x99, 0x99, 0x3d, 0x9a, 0x99, 0x99, 0x3d, 0x00, 0x00, 0x00, 0x00, // ...=...=...=....
	0x38, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 8...r.......F...
	0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x9a, 0x99, 0x19, 0x3e, 0x9a, 0x99, 0x19, 0x3e, // .....@.....>...>
	0x9a, 0x99, 0x19, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, // ...>....4...r...
	0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // ....F........@..
	0xcd, 0xcc, 0xcc, 0x3d, 0xcd, 0xcc, 0xcc, 0x3d, 0xcd, 0xcc, 0xcc, 0x3d, 0x00, 0x00, 0x00, 0x00, // ...=...=...=....
	0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 8...r.......F...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, // ....F. .....#...
	0x32, 0x00, 0x00, 0x0d, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, // 2...r.......F...
	0x41, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // A...............
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, // .@.....?...?...?
	0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ....8...r.......
	0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // F.......F.......
	0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // 4...........*...
	0x05, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, // ............4...
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........:.......
	0x0a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ........4.......
	0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, // ....*...........
	0x03, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....4...........
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // :...............
	0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // 4...........*...
	0x06, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, // ............4...
	0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........:.......
	0x0a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ....:.......:...
	0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....1...........
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // .@.....?:.......
	0x0e, 0x00, 0x00, 0x0a, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // .............@..
	0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, // ...?...?...?...?
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // :.......8...r...
	0x06, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x05, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ....8...r.......
	0xf6, 0x0f, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ........F.......
	0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // 7...r...........
	0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x05, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....7...r.......
	0xf6, 0x0f, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ........F.......
	0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x32, 0x00, 0x10, 0x00, // F...........2...
	0x06, 0x00, 0x00, 0x00, 0x16, 0x85, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, // ...... .....$...
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, // .@.....?...?....
	0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....8...........
	0x0a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ................
	0x38, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, // 8...........:. .
	0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // .... ...:. .....
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0xd2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, //  ...............
	0x06, 0x09, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // ....A........@..
	0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, // ...?.......?...?
	0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 8...........:...
	0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // ....:...........
	0x72, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, // F.......8...r...
	0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // ....F.......F. .
	0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, // .... ...9.......
	0x04, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, // ...... ....."...
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, // .@......6...r...
	0x08, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .....@..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, // ........6.......
	0x05, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x01, // .....@......0...
	0x21, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // !...........:...
	0x05, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x03, 0x00, 0x04, 0x03, // .....@..........
	0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0b, 0x72, 0x00, 0x10, 0x00, // :.......8...r...
	0x09, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ....F. .........
	0x56, 0x85, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // V. .........:...
	0x05, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0d, 0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ....2...r.......
	0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x06, // F. ........... .
	0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // ........:.......
	0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0d, 0x72, 0x00, 0x10, 0x00, // F.......2...r...
	0x09, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ....F. .........
	0xa6, 0x8a, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // .. .........:...
	0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, // ....F...........
	0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, // F. .............
	0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x12, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, // F...A...........
	0x82, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ........F.......
	0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, // F.......D.......
	0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ....:.......8...
	0x72, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // r...............
	0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // F...............
	0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, // ................
	0x3a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x1a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // :......... .....
	0x24, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, // $...1...........
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, // .@......:.......
	0x0e, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x0a, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ....:.......8...
	0xe2, 0x00, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // ................
	0xf6, 0x0f, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // ............r...
	0x0b, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, // ................
	0x0b, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ....1...........
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // .@......:.......
	0x1f, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, // ....:.......2...
	0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // r.......F.......
	0xf6, 0x0f, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........F.......
	0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, // ....F.......D...
	0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ........:.......
	0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // 8...r...........
	0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, // ....F...........
	0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........F.......
	0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // F...............
	0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x09, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // F.......F.......
	0x31, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // 1..."........@..
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, // ....:.......1...
	0x42, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // B........@......
	0x3a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, // :..........."...
	0x09, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, // ....*...........
	0x09, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ....1...B.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // .@..............
	0x01, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // ....".......*...
	0x09, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, // ................
	0x42, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // B.......:...A...
	0x09, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x38, 0x00, 0x00, 0x07, // .....@.....?8...
	0x82, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ........*.......
	0x2a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // *.......8.......
	0x09, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ....:.......:...
	0x09, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ....8...B.......
	0x3a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // :.......*.......
	0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x86, 0x03, 0x10, 0x00, // 2...r...........
	0x06, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x03, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ....8...........
	0x0a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, // .........@.....A
	0x0e, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, // ................
	0x06, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x05, // ............/...
	0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ........:.......
	0x38, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 8...........:...
	0x08, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, // ...... .....$...
	0x19, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x08, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ....8...........
	0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // :...............
	0x32, 0x00, 0x00, 0x09, 0xd2, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, // 2...............
	0x0a, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, // ................
	0x0b, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, // ....7...r.......
	0x56, 0x05, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x86, 0x03, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // V...............
	0x46, 0x02, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, 0x38, 0x00, 0x00, 0x07, // F...........8...
	0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ........:.......
	0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // :...............
	0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ....:.......:...
	0x03, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ..... ..........
	0x3a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // :...A........@..
	0x00, 0x00, 0x80, 0x3f, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ...?8...........
	0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // :.......:.......
	0x00, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x07, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x0e, 0x00, 0x00, 0x07, // .....@.....?....
	0x82, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ........:.......
	0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, // :.......8...r...
	0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x06, // ....F.......F. .
	0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // ........:.......
	0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 2...r.......F...
	0x09, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, // ........r.......
	0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // F.......F...A...
	0x09, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, // ....2...r.......
	0x06, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // .. ....."...F...
	0x0a, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, // ....F.......7...
	0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // r...............
	0x46, 0x02, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // F.......F.......
	0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....r.......F...
	0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x07, // ....F...........
	0x82, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // ........:.......
	0x01, 0x40, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x01, 0x31, 0x00, 0x00, 0x07, // .@..........1...
	0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........@......
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 0x0a, 0x00, 0x10, 0x00, // :...............
	0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....8...r.......
	0x56, 0x05, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x16, 0x86, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // V......... .....
	0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....2...r.......
	0x16, 0x86, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, // .. .............
	0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, // ....F.......2...
	0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x86, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // r......... .....
	0x02, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // F.......F.......
	0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // D...........:...
	0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....8...r.......
	0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........F.......
	0x1d, 0x00, 0x00, 0x0b, 0x32, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // ....2........@..
	0x00, 0x00, 0x80, 0x38, 0x00, 0x00, 0x80, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ...8...8........
	0x16, 0x05, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, // ................
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0xc1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x1a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, // ................
	0x22, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, // "...............
	0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x0e, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x0a, // ............1...
	0x32, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // 2...............
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .@..............
	0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....7...".......
	0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x3e, // .........@.....>
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x38, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, // .@.....>8...B...
	0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x42, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....2...B.......
	0x2a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0xd0, 0x1d, 0x0a, 0x3d, // *........@.....=
	0x01, 0x40, 0x00, 0x00, 0xdc, 0xe7, 0x20, 0xbe, 0x37, 0x00, 0x00, 0x0a, 0x12, 0x00, 0x10, 0x00, // .@.... .7.......
	0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, // ................
	0x41, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // A...............
	0x32, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // 2...........*...
	0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x0a, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....7...........
	0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // ............A...
	0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // ................
	0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x37, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, // .@.....?7.......
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....:........@..
	0x00, 0x00, 0x00, 0x3f, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, // ...?............
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x80, 0xc1, 0x00, 0x00, 0x00, // ........*.......
	0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x1d, 0x00, 0x00, 0x07, // .....@.....?....
	0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........*.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, // .@......7..."...
	0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // .............@..
	0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x31, 0x00, 0x00, 0x07, // .....@.....?1...
	0x42, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, // B........@.....8
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x42, 0x00, 0x10, 0x00, // :.......2...B...
	0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....*...........
	0x01, 0x40, 0x00, 0x00, 0x1a, 0x5b, 0x4b, 0xbd, 0x01, 0x40, 0x00, 0x00, 0x66, 0x00, 0xff, 0x3e, // .@...[K..@..f..>
	0x4b, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // K...........:...
	0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....8...........
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // :.......*.......
	0x32, 0x00, 0x00, 0x0a, 0x42, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x80, // 2...B.......*...
	0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // A.......:.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x37, 0x00, 0x00, 0x09, 0x42, 0x00, 0x10, 0x00, // .@.....?7...B...
	0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, // ....*.......7...
	0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ".......*.......
	0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // *...............
	0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, // H.......CU..r...
	0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, // ....F.......F~..
	0x02, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // .....`.......@..
	0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....8...r.......
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // F.......F.......
	0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 2...r.......F...
	0x00, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, // ...... .....!...
	0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, 0x31, 0x00, 0x00, 0x07, // F...........1...
	0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........@......
	0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xe2, 0x00, 0x10, 0x00, // :.......2.......
	0x00, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, // ................
	0x04, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, // ............7...
	0x72, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // r ..............
	0x96, 0x07, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ........F.......
	0x36, 0x00, 0x00, 0x06, 0x82, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, // 6.... ......:. .
	0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x01, 0x00, 0x00, 0x70, 0x02, // ....#...>.....p.
};
static const uint8_t fs_ball_equirectangular_nodecal_spv[12863] =
{
	0x46, 0x53, 0x48, 0x0b, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x0c, 0x62, // FSH....l.......b
	0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x0a, 0xc0, 0x00, 0x0a, // allLightPos.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x14, 0x01, 0x00, // ......matView...
	0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, // ........Roughnes
	0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, // s_WrapL_Edge_Thi
	0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x01, 0x40, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // ckness..@.......
	0x13, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, // .cAmbient_LightR
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x01, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x62, // ange...........b
	0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, // allLightEmission
	0x12, 0x0a, 0x60, 0x01, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x44, 0x69, 0x73, 0x61, // ..`........fDisa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, // bleLighting_top_
	0x62, 0x65, 0x6c, 0x6f, 0x77, 0x12, 0x01, 0x20, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // below.. ........
	0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, // fenvEmissionScal
	0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x01, 0x10, 0x02, 0x01, 0x00, // e_TexWidth......
	0x00, 0x00, 0x00, 0x00, 0x13, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // .....w_h_disable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x01, 0x60, 0x02, 0x01, 0x00, 0x00, 0x00, // Lighting..`.....
	0x00, 0x00, 0x0b, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x01, // ...cBase_Alpha..
	0x30, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, // 0........matWorl
	0x64, 0x56, 0x69, 0x65, 0x77, 0x14, 0x01, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // dView..@........
	0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x14, 0x01, 0x80, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, // matProj.........
	0x00, 0x16, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, // ..invTableRes_re
	0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x01, 0x50, 0x02, 0x01, 0x00, 0x00, 0x00, // flection..P.....
	0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // ...tex_ball_colo
	0x72, 0x30, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, // r0......."..tex_
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x30, 0x00, 0x04, 0x00, 0x00, // diffuse_env0....
	0x00, 0x00, 0x02, 0x22, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, // ..."..tex_ball_d
	0x65, 0x63, 0x61, 0x6c, 0x30, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0x12, 0x74, // ecal0......."..t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // ex_ball_playfiel
	0x64, 0x30, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0x6c, 0x30, 0x00, 0x00, 0x03, // d0.......".l0...
	0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x0b, 0x00, 0x08, 0x00, 0xda, 0x06, 0x00, 0x00, 0x00, // .#..............
	0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x06, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30, 0x00, // ...GLSL.std.450.
	0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, // ................
	0x00, 0x09, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, // ...........main.
	0x00, 0x00, 0x00, 0x3a, 0x03, 0x00, 0x00, 0x3e, 0x03, 0x00, 0x00, 0x41, 0x03, 0x00, 0x00, 0x50, // ...:...>...A...P
	0x03, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, // ................
	0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x05, // ................
	0x00, 0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, // ...............m
	0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x66, 0x00, 0x00, 0x00, 0x74, // ain........f...t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, // ex_ball_colorSam
	0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x69, 0x00, 0x00, 0x00, 0x74, // pler.......i...t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x65, 0x78, // ex_ball_colorTex
	0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x73, 0x00, 0x00, 0x00, 0x74, // ture.......s...t
	0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x53, 0x61, // ex_diffuse_envSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x75, 0x00, 0x00, 0x00, 0x74, // mpler......u...t
	0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x54, 0x65, // ex_diffuse_envTe
	0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x79, 0x00, 0x00, 0x00, 0x74, // xture......y...t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x53, 0x61, 0x6d, // ex_ball_decalSam
	0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x74, // pler.......{...t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x54, 0x65, 0x78, // ex_ball_decalTex
	0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x09, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x74, // ture...........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // ex_ball_playfiel
	0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, 0x00, 0x09, 0x00, 0x81, // dSampler........
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, // ...tex_ball_play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, // fieldTexture....
	0x00, 0x06, 0x00, 0x14, 0x01, 0x00, 0x00, 0x55, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x6c, // .......UniformBl
	0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x05, 0x00, 0x14, 0x01, 0x00, 0x00, 0x00, // ock.............
	0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x00, 0x06, 0x00, 0x07, 0x00, 0x14, // ...matView......
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, // .......matWorldV
	0x69, 0x65, 0x77, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x05, 0x00, 0x14, 0x01, 0x00, 0x00, 0x02, // iew.............
	0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x00, 0x06, 0x00, 0x07, 0x00, 0x14, // ...matProj......
	0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, // .......ballLight
	0x50, 0x6f, 0x73, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x14, 0x01, 0x00, 0x00, 0x04, // Pos.............
	0x00, 0x00, 0x00, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, // ...ballLightEmis
	0x73, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x14, 0x01, 0x00, 0x00, 0x05, // sion............
	0x00, 0x00, 0x00, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, // ...cAmbient_Ligh
	0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x00, 0x06, 0x00, 0x0a, 0x00, 0x14, 0x01, 0x00, 0x00, 0x06, // tRange..........
	0x00, 0x00, 0x00, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, // ...fenvEmissionS
	0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x00, 0x00, 0x06, // cale_TexWidth...
	0x00, 0x0a, 0x00, 0x14, 0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x66, 0x44, 0x69, 0x73, 0x61, // ...........fDisa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, // bleLighting_top_
	0x62, 0x65, 0x6c, 0x6f, 0x77, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x14, 0x01, 0x00, 0x00, 0x08, // below...........
	0x00, 0x00, 0x00, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x00, 0x06, // ...cBase_Alpha..
	0x00, 0x0b, 0x00, 0x14, 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x52, 0x6f, 0x75, 0x67, 0x68, // ...........Rough
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, // ness_WrapL_Edge_
	0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x00, 0x00, 0x06, 0x00, 0x09, 0x00, 0x14, // Thickness.......
	0x01, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, // .......invTableR
	0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x06, // es_reflection...
	0x00, 0x08, 0x00, 0x14, 0x01, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x77, 0x5f, 0x68, 0x5f, 0x64, // ...........w_h_d
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x00, 0x05, // isableLighting..
	0x00, 0x03, 0x00, 0x16, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0x3a, // ...............:
	0x03, 0x00, 0x00, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x05, // ...v_normal.....
	0x00, 0x05, 0x00, 0x3e, 0x03, 0x00, 0x00, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // ...>...v_texcoor
	0x64, 0x30, 0x00, 0x05, 0x00, 0x05, 0x00, 0x41, 0x03, 0x00, 0x00, 0x76, 0x5f, 0x77, 0x6f, 0x72, // d0.....A...v_wor
	0x6c, 0x64, 0x50, 0x6f, 0x73, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x50, 0x03, 0x00, 0x00, 0x62, // ldPos......P...b
	0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x00, 0x00, 0x47, // gfx_FragData0..G
	0x00, 0x04, 0x00, 0x66, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // ...f...".......G
	0x00, 0x04, 0x00, 0x66, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x47, // ...f...!.......G
	0x00, 0x04, 0x00, 0x69, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // ...i...".......G
	0x00, 0x04, 0x00, 0x69, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, // ...i...!.......G
	0x00, 0x04, 0x00, 0x73, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // ...s...".......G
	0x00, 0x04, 0x00, 0x73, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x47, // ...s...!.......G
	0x00, 0x04, 0x00, 0x75, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // ...u...".......G
	0x00, 0x04, 0x00, 0x75, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x47, // ...u...!.......G
	0x00, 0x04, 0x00, 0x79, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // ...y...".......G
	0x00, 0x04, 0x00, 0x79, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x47, // ...y...!.......G
	0x00, 0x04, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // ...{...".......G
	0x00, 0x04, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x47, // ...{...!.......G
	0x00, 0x04, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // .......".......G
	0x00, 0x04, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x47, // .......!.......G
	0x00, 0x04, 0x00, 0x81, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // .......".......G
	0x00, 0x04, 0x00, 0x81, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x47, // .......!.......G
	0x00, 0x04, 0x00, 0x12, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x47, // ...............G
	0x00, 0x04, 0x00, 0x13, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, // ...............H
	0x00, 0x04, 0x00, 0x14, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, // ...............H
	0x00, 0x05, 0x00, 0x14, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, // ...........#....
	0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x14, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // ...H............
	0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, 0x14, 0x01, 0x00, 0x00, 0x01, // .......H........
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x14, 0x01, 0x00, 0x00, 0x01, // .......H........
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x14, // ...#...@...H....
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, // ...............H
	0x00, 0x04, 0x00, 0x14, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, // ...............H
	0x00, 0x05, 0x00, 0x14, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x80, // ...........#....
	0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x14, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, // ...H............
	0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x14, 0x01, 0x00, 0x00, 0x03, // .......H........
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x14, // ...#.......H....
	0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x60, 0x01, 0x00, 0x00, 0x48, // .......#...`...H
	0x00, 0x05, 0x00, 0x14, 0x01, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, // ...........#....
	0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x14, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x23, // ...H...........#
	0x00, 0x00, 0x00, 0x10, 0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x14, 0x01, 0x00, 0x00, 0x07, // .......H........
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x20, 0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x14, // ...#... ...H....
	0x01, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x30, 0x02, 0x00, 0x00, 0x48, // .......#...0...H
	0x00, 0x05, 0x00, 0x14, 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x40, // ...........#...@
	0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x14, 0x01, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x23, // ...H...........#
	0x00, 0x00, 0x00, 0x50, 0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x14, 0x01, 0x00, 0x00, 0x0b, // ...P...H........
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00, 0x14, // ...#...`...G....
	0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x16, 0x01, 0x00, 0x00, 0x22, // .......G......."
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x16, 0x01, 0x00, 0x00, 0x21, // .......G.......!
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x3a, 0x03, 0x00, 0x00, 0x1e, // .......G...:....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x3e, 0x03, 0x00, 0x00, 0x1e, // .......G...>....
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x41, 0x03, 0x00, 0x00, 0x1e, // .......G...A....
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x50, 0x03, 0x00, 0x00, 0x1e, // .......G...P....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x21, // ...............!
	0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x02, 0x00, 0x06, // ................
	0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x19, // ........... ....
	0x00, 0x09, 0x00, 0x08, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, // ................
	0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, // .......<... ....
	0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x65, // .......=... ...e
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x65, // ...........;...e
	0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x68, // ...f....... ...h
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x68, // ...........;...h
	0x00, 0x00, 0x00, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x65, // ...i.......;...e
	0x00, 0x00, 0x00, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x68, // ...s.......;...h
	0x00, 0x00, 0x00, 0x75, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x65, // ...u.......;...e
	0x00, 0x00, 0x00, 0x79, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x68, // ...y.......;...h
	0x00, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x65, // ...{.......;...e
	0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x68, // ...........;...h
	0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x3c, // ...........+...<
	0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x3c, // ...........+...<
	0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x03, 0x00, 0x8c, // ................
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xae, // .......+........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb1, // ......?+........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb5, // ......8+........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xba, // .......+........
	0x00, 0x00, 0x00, 0x1a, 0x5b, 0x4b, 0xbd, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbd, // ....[K.+........
	0x00, 0x00, 0x00, 0x66, 0x00, 0xff, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe0, // ...f..>+........
	0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe1, // ......>+........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe3, // ......>+........
	0x00, 0x00, 0x00, 0xd0, 0x1d, 0x0a, 0x3d, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf8, // ......=+........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x15, 0x00, 0x04, 0x00, 0xf9, 0x00, 0x00, 0x00, 0x20, // ......?........ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0xf9, 0x00, 0x00, 0x00, 0xfa, // .......+........
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0xf9, 0x00, 0x00, 0x00, 0xfc, // .......+........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0xf9, 0x00, 0x00, 0x00, 0x00, // .......+........
	0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x09, // .......+........
	0x01, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x40, 0x18, 0x00, 0x04, 0x00, 0x10, 0x01, 0x00, 0x00, 0x0d, // ......@.........
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0xf9, 0x00, 0x00, 0x00, 0x11, // .......+........
	0x01, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x12, 0x01, 0x00, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x13, 0x01, 0x00, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x1e, 0x00, 0x0e, 0x00, 0x14, 0x01, 0x00, 0x00, 0x10, // ................
	0x01, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0x13, // ................
	0x01, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x20, // ............... 
	0x00, 0x04, 0x00, 0x15, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x14, 0x01, 0x00, 0x00, 0x3b, // ...............;
	0x00, 0x04, 0x00, 0x15, 0x01, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, // ...............+
	0x00, 0x04, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x17, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, // ...<........... 
	0x00, 0x04, 0x00, 0x18, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x20, // ............... 
	0x00, 0x04, 0x00, 0x20, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00, 0x2c, // ... ...........,
	0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xb5, // .......-........
	0x00, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x30, // .......+...<...0
	0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x31, 0x01, 0x00, 0x00, 0x02, // ....... ...1....
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x62, // .......+.......b
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x2b, 0x00, 0x04, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x74, // ......A+...<...t
	0x01, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0xf9, 0x00, 0x00, 0x00, 0x75, // .......+.......u
	0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x92, // .......+...<....
	0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x9f, // .......+...<....
	0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x3c, 0x00, 0x00, 0x00, 0xbc, // .......+...<....
	0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x3c, 0x00, 0x00, 0x00, 0xfd, // .......+...<....
	0x01, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3c, // .......+.......<
	0x02, 0x00, 0x00, 0x9a, 0x99, 0x19, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3f, // ......?+.......?
	0x02, 0x00, 0x00, 0x00, 0x00, 0x70, 0x41, 0x2b, 0x00, 0x04, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x6b, // .....pA+...<...k
	0x02, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x72, // .......+...<...r
	0x02, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x7f, // .......,........
	0x02, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0xb5, // ................
	0x00, 0x00, 0x00, 0x2c, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x89, 0x02, 0x00, 0x00, 0xb5, // ...,............
	0x00, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x2b, // ...............+
	0x00, 0x04, 0x00, 0x3c, 0x00, 0x00, 0x00, 0xa2, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2c, // ...<...........,
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0xf8, // ................
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb4, 0x02, 0x00, 0x00, 0x00, // ...+............
	0x00, 0x80, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf9, 0x02, 0x00, 0x00, 0x9a, // ..>+............
	0x99, 0x19, 0x3e, 0x2c, 0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x02, 0x03, 0x00, 0x00, 0x3f, // ..>,...........?
	0x02, 0x00, 0x00, 0x3f, 0x02, 0x00, 0x00, 0x3f, 0x02, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...?...?...+....
	0x00, 0x00, 0x00, 0x08, 0x03, 0x00, 0x00, 0x9a, 0x99, 0x99, 0x3d, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........=+....
	0x00, 0x00, 0x00, 0x0f, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........@+....
	0x00, 0x00, 0x00, 0x11, 0x03, 0x00, 0x00, 0xcd, 0xcc, 0xcc, 0x3d, 0x2c, 0x00, 0x06, 0x00, 0x1a, // ..........=,....
	0x00, 0x00, 0x00, 0x12, 0x03, 0x00, 0x00, 0x11, 0x03, 0x00, 0x00, 0x11, 0x03, 0x00, 0x00, 0x11, // ................
	0x03, 0x00, 0x00, 0x2c, 0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x00, 0x00, 0xae, // ...,............
	0x00, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x39, // ........... ...9
	0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x39, // ...........;...9
	0x03, 0x00, 0x00, 0x3a, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x3d, // ...:....... ...=
	0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x3d, // ...........;...=
	0x03, 0x00, 0x00, 0x3e, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x39, // ...>.......;...9
	0x03, 0x00, 0x00, 0x41, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x4f, // ...A....... ...O
	0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x4f, // ...........;...O
	0x03, 0x00, 0x00, 0x50, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x29, 0x00, 0x03, 0x00, 0x3d, // ...P.......)...=
	0x00, 0x00, 0x00, 0x6b, 0x03, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xba, // ...k...+........
	0x06, 0x00, 0x00, 0x00, 0x00, 0x10, 0xc1, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbb, // .......+........
	0x06, 0x00, 0x00, 0xdc, 0xe7, 0x20, 0xbe, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, // ..... .6........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, // ................
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x00, 0x66, // ...=.......g...f
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x69, // ...=.......j...i
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x73, // ...=.......t...s
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x76, 0x00, 0x00, 0x00, 0x75, // ...=.......v...u
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x7a, 0x00, 0x00, 0x00, 0x79, // ...=.......z...y
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x7b, // ...=.......|...{
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x7f, // ...=............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x81, // ...=............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x3b, 0x03, 0x00, 0x00, 0x3a, // ...=.......;...:
	0x03, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3f, 0x03, 0x00, 0x00, 0x3e, // ...=.......?...>
	0x03, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x42, 0x03, 0x00, 0x00, 0x41, // ...=.......B...A
	0x03, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x77, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, // .......w........
	0x00, 0x03, 0x00, 0xfc, 0x00, 0x00, 0x00, 0xa5, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xa5, // ................
	0x03, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xa8, 0x03, 0x00, 0x00, 0x42, // ...............B
	0x03, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xa9, 0x03, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0xa8, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1a, // ...E............
	0x00, 0x00, 0x00, 0xab, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x3b, // ...........E...;
	0x03, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xae, 0x03, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0xa9, 0x03, 0x00, 0x00, 0xab, 0x03, 0x00, 0x00, 0x94, // ...G............
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb1, 0x03, 0x00, 0x00, 0xa9, 0x03, 0x00, 0x00, 0xae, // ................
	0x03, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0xb3, 0x03, 0x00, 0x00, 0xb1, // .......=........
	0x03, 0x00, 0x00, 0x3c, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb6, // ...<............
	0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xb1, 0x03, 0x00, 0x00, 0x3f, // .......2.......?
	0x02, 0x00, 0x00, 0xba, 0x06, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb7, // ................
	0x03, 0x00, 0x00, 0xb3, 0x03, 0x00, 0x00, 0xb6, 0x03, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x05, 0x00, 0x20, 0x01, 0x00, 0x00, 0xb8, 0x03, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x88, // ... ............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x10, 0x01, 0x00, 0x00, 0xb9, 0x03, 0x00, 0x00, 0xb8, // ...=............
	0x03, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xbb, 0x03, 0x00, 0x00, 0xae, // ................
	0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbc, 0x03, 0x00, 0x00, 0xbb, // ...Q............
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbd, // .......Q........
	0x03, 0x00, 0x00, 0xbb, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xbe, 0x03, 0x00, 0x00, 0xbb, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, // ...............P
	0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xbf, 0x03, 0x00, 0x00, 0xbc, 0x03, 0x00, 0x00, 0xbd, // ................
	0x03, 0x00, 0x00, 0xbe, 0x03, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x91, 0x00, 0x05, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0xb9, 0x03, 0x00, 0x00, 0xbf, 0x03, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x81, 0x04, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x82, 0x04, 0x00, 0x00, 0xc0, // ...Q............
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xb4, 0x04, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x90, 0x04, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0x90, 0x04, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x91, // ................
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x81, 0x04, 0x00, 0x00, 0x0c, // ................
	0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x92, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0x82, 0x04, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x94, // ...........=....
	0x04, 0x00, 0x00, 0x92, 0x04, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x3d, // ...............=
	0x00, 0x00, 0x00, 0x96, 0x04, 0x00, 0x00, 0x91, 0x04, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, 0xa7, // ................
	0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x97, 0x04, 0x00, 0x00, 0x94, 0x04, 0x00, 0x00, 0x96, // ...=............
	0x04, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x99, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // ................
	0x00, 0x04, 0x00, 0x97, 0x04, 0x00, 0x00, 0x98, 0x04, 0x00, 0x00, 0x99, 0x04, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0x98, 0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xb4, 0x04, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0x99, 0x04, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9c, // ................
	0x04, 0x00, 0x00, 0x92, 0x04, 0x00, 0x00, 0x91, 0x04, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x9f, 0x04, 0x00, 0x00, 0x92, 0x04, 0x00, 0x00, 0x91, 0x04, 0x00, 0x00, 0x88, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa0, 0x04, 0x00, 0x00, 0x9c, 0x04, 0x00, 0x00, 0x9f, // ................
	0x04, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0xa1, 0x04, 0x00, 0x00, 0x82, // .......=........
	0x04, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa2, // ................
	0x04, 0x00, 0x00, 0xa1, 0x04, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0xe1, 0x00, 0x00, 0x00, 0x85, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa4, 0x04, 0x00, 0x00, 0xe3, 0x00, 0x00, 0x00, 0xa0, // ................
	0x04, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa7, 0x04, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xa4, 0x04, 0x00, 0x00, 0xa0, 0x04, 0x00, 0x00, 0xbb, // ...2............
	0x06, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0xa8, 0x04, 0x00, 0x00, 0x82, // .......=........
	0x04, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xaa, // ................
	0x04, 0x00, 0x00, 0xa0, 0x04, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xac, // ................
	0x04, 0x00, 0x00, 0xa8, 0x04, 0x00, 0x00, 0xaa, 0x04, 0x00, 0x00, 0xa0, 0x04, 0x00, 0x00, 0x0c, // ................
	0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xae, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // ...............2
	0x00, 0x00, 0x00, 0xa7, 0x04, 0x00, 0x00, 0xac, 0x04, 0x00, 0x00, 0xa2, 0x04, 0x00, 0x00, 0xb8, // ................
	0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0xaf, 0x04, 0x00, 0x00, 0x81, 0x04, 0x00, 0x00, 0xb5, // ...=............
	0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb1, 0x04, 0x00, 0x00, 0xae, // ................
	0x04, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb3, 0x04, 0x00, 0x00, 0xaf, // ................
	0x04, 0x00, 0x00, 0xb1, 0x04, 0x00, 0x00, 0xae, 0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xb4, // ................
	0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xb4, 0x04, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xbc, 0x06, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x98, 0x04, 0x00, 0x00, 0xb3, // ................
	0x04, 0x00, 0x00, 0x99, 0x04, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x84, // ................
	0x04, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0xbc, 0x06, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x85, 0x04, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf7, // ................
	0x00, 0x03, 0x00, 0xd1, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0xfc, // ................
	0x00, 0x00, 0x00, 0xbc, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xbc, 0x04, 0x00, 0x00, 0x0c, // ................
	0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbd, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0x85, 0x04, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbf, // ................
	0x04, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0xbd, 0x04, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x3d, // ...............=
	0x00, 0x00, 0x00, 0xc0, 0x04, 0x00, 0x00, 0xbf, 0x04, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, 0xf7, // ................
	0x00, 0x03, 0x00, 0xc4, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xc0, // ................
	0x04, 0x00, 0x00, 0xc1, 0x04, 0x00, 0x00, 0xc4, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xc1, // ................
	0x04, 0x00, 0x00, 0xbe, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0xc2, 0x04, 0x00, 0x00, 0x85, // .......=........
	0x04, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc3, // ................
	0x04, 0x00, 0x00, 0xc2, 0x04, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0xf9, // ................
	0x00, 0x02, 0x00, 0xd1, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xc4, 0x04, 0x00, 0x00, 0x0c, // ................
	0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc7, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // ...............2
	0x00, 0x00, 0x00, 0xba, 0x00, 0x00, 0x00, 0xbd, 0x04, 0x00, 0x00, 0xbd, 0x00, 0x00, 0x00, 0x83, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc9, 0x04, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0xbd, // ................
	0x04, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xca, 0x04, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0xc9, 0x04, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xcb, 0x04, 0x00, 0x00, 0xc7, 0x04, 0x00, 0x00, 0xca, 0x04, 0x00, 0x00, 0xbe, // ................
	0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0xcc, 0x04, 0x00, 0x00, 0x85, 0x04, 0x00, 0x00, 0xb5, // ...=............
	0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb6, 0x06, 0x00, 0x00, 0xc7, // ................
	0x04, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xcf, 0x04, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xb6, 0x06, 0x00, 0x00, 0xca, 0x04, 0x00, 0x00, 0xae, // ...2............
	0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd0, 0x04, 0x00, 0x00, 0xcc, // ................
	0x04, 0x00, 0x00, 0xcb, 0x04, 0x00, 0x00, 0xcf, 0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xd1, // ................
	0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xd1, 0x04, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xbd, 0x06, 0x00, 0x00, 0xc3, 0x04, 0x00, 0x00, 0xc1, 0x04, 0x00, 0x00, 0xd0, // ................
	0x04, 0x00, 0x00, 0xc4, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x87, // .......P........
	0x04, 0x00, 0x00, 0x84, 0x04, 0x00, 0x00, 0xbd, 0x06, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x8c, // ...........V....
	0x00, 0x00, 0x00, 0xd9, 0x04, 0x00, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x00, 0x58, // .......j...g...X
	0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xdc, 0x04, 0x00, 0x00, 0xd9, 0x04, 0x00, 0x00, 0x87, // ................
	0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xb7, 0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, // ...........O....
	0x00, 0x00, 0x00, 0xc8, 0x03, 0x00, 0x00, 0xdc, 0x04, 0x00, 0x00, 0xdc, 0x04, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x8c, // ...........V....
	0x00, 0x00, 0x00, 0xe3, 0x04, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x7a, 0x00, 0x00, 0x00, 0x57, // .......|...z...W
	0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xe5, 0x04, 0x00, 0x00, 0xe3, 0x04, 0x00, 0x00, 0x3f, // ...............?
	0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xcd, 0x03, 0x00, 0x00, 0xe5, // ...O............
	0x04, 0x00, 0x00, 0xe5, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xcf, 0x03, 0x00, 0x00, 0xe5, // ...Q............
	0x04, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xd1, // ................
	0x03, 0x00, 0x00, 0xcd, 0x03, 0x00, 0x00, 0xcf, 0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0xd4, 0x03, 0x00, 0x00, 0xc8, 0x03, 0x00, 0x00, 0xd1, 0x03, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x06, 0x00, 0x31, 0x01, 0x00, 0x00, 0xd5, 0x03, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x6b, // ...1...........k
	0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd6, // .......=........
	0x03, 0x00, 0x00, 0xd5, 0x03, 0x00, 0x00, 0xb7, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0xd7, // ...........=....
	0x03, 0x00, 0x00, 0xd6, 0x03, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xe0, // ................
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xd7, 0x03, 0x00, 0x00, 0xd8, // ................
	0x03, 0x00, 0x00, 0xe0, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xd8, 0x03, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x06, 0x00, 0x31, 0x01, 0x00, 0x00, 0xda, 0x03, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x72, // ...1...........r
	0x02, 0x00, 0x00, 0x75, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xdb, // ...u...=........
	0x03, 0x00, 0x00, 0xda, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xdc, // .......Q........
	0x03, 0x00, 0x00, 0xd4, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xdd, 0x03, 0x00, 0x00, 0xd4, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xde, 0x03, 0x00, 0x00, 0xd4, 0x03, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xdf, 0x03, 0x00, 0x00, 0xdc, // ...P............
	0x03, 0x00, 0x00, 0xdd, 0x03, 0x00, 0x00, 0xde, 0x03, 0x00, 0x00, 0xdb, 0x03, 0x00, 0x00, 0xf9, // ................
	0x00, 0x02, 0x00, 0x77, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xe0, 0x03, 0x00, 0x00, 0x41, // ...w...........A
	0x00, 0x06, 0x00, 0x31, 0x01, 0x00, 0x00, 0xe1, 0x03, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0xbc, // ...1............
	0x01, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe2, // .......=........
	0x03, 0x00, 0x00, 0xe1, 0x03, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xe4, // ................
	0x03, 0x00, 0x00, 0xd4, 0x03, 0x00, 0x00, 0xe2, 0x03, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x20, // ...........A... 
	0x01, 0x00, 0x00, 0xe5, 0x03, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x3d, // ...............=
	0x00, 0x04, 0x00, 0x10, 0x01, 0x00, 0x00, 0xe6, 0x03, 0x00, 0x00, 0xe5, 0x03, 0x00, 0x00, 0x90, // ................
	0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xe7, 0x03, 0x00, 0x00, 0x7f, 0x02, 0x00, 0x00, 0xe6, // ................
	0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xe8, 0x03, 0x00, 0x00, 0xe7, // ...O............
	0x03, 0x00, 0x00, 0xe7, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xeb, 0x03, 0x00, 0x00, 0xe8, // ................
	0x03, 0x00, 0x00, 0xae, 0x03, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x20, 0x01, 0x00, 0x00, 0xec, // .......A... ....
	0x03, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x10, // ...........=....
	0x01, 0x00, 0x00, 0xed, 0x03, 0x00, 0x00, 0xec, 0x03, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0xee, 0x03, 0x00, 0x00, 0x89, 0x02, 0x00, 0x00, 0xed, 0x03, 0x00, 0x00, 0x4f, // ...............O
	0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xef, 0x03, 0x00, 0x00, 0xee, 0x03, 0x00, 0x00, 0xee, // ................
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x83, // ................
	0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xf3, 0x03, 0x00, 0x00, 0x42, 0x03, 0x00, 0x00, 0xef, // ...........B....
	0x03, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf4, 0x03, 0x00, 0x00, 0xe8, // ................
	0x03, 0x00, 0x00, 0xf3, 0x03, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf6, // ................
	0x03, 0x00, 0x00, 0xf4, 0x03, 0x00, 0x00, 0xeb, 0x03, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0xfa, 0x03, 0x00, 0x00, 0xae, 0x03, 0x00, 0x00, 0xf6, 0x03, 0x00, 0x00, 0x83, // ................
	0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xfb, 0x03, 0x00, 0x00, 0x42, 0x03, 0x00, 0x00, 0xfa, // ...........B....
	0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xfd, 0x03, 0x00, 0x00, 0xfb, // ...Q............
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xfe, // .......Q........
	0x03, 0x00, 0x00, 0xfb, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xff, 0x03, 0x00, 0x00, 0xfb, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, // ...............P
	0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0xfd, 0x03, 0x00, 0x00, 0xfe, // ................
	0x03, 0x00, 0x00, 0xff, 0x03, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x20, // ...........A... 
	0x01, 0x00, 0x00, 0x01, 0x04, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0xa2, 0x02, 0x00, 0x00, 0x3d, // ...............=
	0x00, 0x04, 0x00, 0x10, 0x01, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0x01, 0x04, 0x00, 0x00, 0x90, // ................
	0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x03, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x02, // ................
	0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x05, 0x04, 0x00, 0x00, 0x03, // ...Q............
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, // .......Q........
	0x04, 0x00, 0x00, 0x03, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x08, 0x04, 0x00, 0x00, 0x07, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, // ...........P....
	0x00, 0x00, 0x00, 0x09, 0x04, 0x00, 0x00, 0x05, 0x04, 0x00, 0x00, 0x08, 0x04, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0b, 0x04, 0x00, 0x00, 0x03, 0x04, 0x00, 0x00, 0x03, // ................
	0x00, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0c, 0x04, 0x00, 0x00, 0xf8, // ................
	0x00, 0x00, 0x00, 0x0b, 0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x0d, // ................
	0x04, 0x00, 0x00, 0x09, 0x04, 0x00, 0x00, 0x0c, 0x04, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, // ................
	0x00, 0x00, 0x00, 0x0e, 0x04, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0x0d, 0x04, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x06, 0x00, 0x31, 0x01, 0x00, 0x00, 0x10, 0x04, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x6b, // ...1...........k
	0x02, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x11, // .......=........
	0x04, 0x00, 0x00, 0x10, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x12, // .......P........
	0x04, 0x00, 0x00, 0x11, 0x04, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, // ................
	0x00, 0x00, 0x00, 0x13, 0x04, 0x00, 0x00, 0x0e, 0x04, 0x00, 0x00, 0x12, 0x04, 0x00, 0x00, 0x56, // ...............V
	0x00, 0x05, 0x00, 0x8c, 0x00, 0x00, 0x00, 0xec, 0x04, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x80, // ................
	0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xee, 0x04, 0x00, 0x00, 0xec, // ...W............
	0x04, 0x00, 0x00, 0x13, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x16, // .......O........
	0x04, 0x00, 0x00, 0xee, 0x04, 0x00, 0x00, 0xee, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x31, 0x01, 0x00, 0x00, 0x18, // .......A...1....
	0x04, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x6b, 0x02, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x3d, // .......k.......=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x19, 0x04, 0x00, 0x00, 0x18, 0x04, 0x00, 0x00, 0x50, // ...............P
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x1a, 0x04, 0x00, 0x00, 0x19, 0x04, 0x00, 0x00, 0xb5, // ................
	0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x1b, 0x04, 0x00, 0x00, 0x0e, // ................
	0x04, 0x00, 0x00, 0x1a, 0x04, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x8c, 0x00, 0x00, 0x00, 0xf5, // .......V........
	0x04, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, // ...........W....
	0x00, 0x00, 0x00, 0xf7, 0x04, 0x00, 0x00, 0xf5, 0x04, 0x00, 0x00, 0x1b, 0x04, 0x00, 0x00, 0x4f, // ...............O
	0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x1e, 0x04, 0x00, 0x00, 0xf7, 0x04, 0x00, 0x00, 0xf7, // ................
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x1f, 0x04, 0x00, 0x00, 0x16, 0x04, 0x00, 0x00, 0x1e, // ................
	0x04, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x31, 0x01, 0x00, 0x00, 0x21, 0x04, 0x00, 0x00, 0x16, // ...A...1...!....
	0x01, 0x00, 0x00, 0x6b, 0x02, 0x00, 0x00, 0xfa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...k.......=....
	0x00, 0x00, 0x00, 0x22, 0x04, 0x00, 0x00, 0x21, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, // ..."...!...P....
	0x00, 0x00, 0x00, 0x23, 0x04, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x22, 0x04, 0x00, 0x00, 0x81, // ...#......."....
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x24, 0x04, 0x00, 0x00, 0x0e, 0x04, 0x00, 0x00, 0x23, // .......$.......#
	0x04, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x8c, 0x00, 0x00, 0x00, 0xfe, 0x04, 0x00, 0x00, 0x82, // ...V............
	0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, // .......W........
	0x05, 0x00, 0x00, 0xfe, 0x04, 0x00, 0x00, 0x24, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, // .......$...O....
	0x00, 0x00, 0x00, 0x27, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, // ...'............
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0x28, 0x04, 0x00, 0x00, 0x1f, 0x04, 0x00, 0x00, 0x27, 0x04, 0x00, 0x00, 0x41, // ...(.......'...A
	0x00, 0x06, 0x00, 0x31, 0x01, 0x00, 0x00, 0x2a, 0x04, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x6b, // ...1...*.......k
	0x02, 0x00, 0x00, 0xfa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2b, // .......=.......+
	0x04, 0x00, 0x00, 0x2a, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x2c, // ...*...P.......,
	0x04, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x2b, 0x04, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x0b, // .......+........
	0x00, 0x00, 0x00, 0x2d, 0x04, 0x00, 0x00, 0x0e, 0x04, 0x00, 0x00, 0x2c, 0x04, 0x00, 0x00, 0x56, // ...-.......,...V
	0x00, 0x05, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x07, 0x05, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x80, // ................
	0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x09, 0x05, 0x00, 0x00, 0x07, // ...W............
	0x05, 0x00, 0x00, 0x2d, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x30, // ...-...O.......0
	0x04, 0x00, 0x00, 0x09, 0x05, 0x00, 0x00, 0x09, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x31, // ...............1
	0x04, 0x00, 0x00, 0x28, 0x04, 0x00, 0x00, 0x30, 0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, // ...(...0........
	0x00, 0x00, 0x00, 0x32, 0x04, 0x00, 0x00, 0x31, 0x04, 0x00, 0x00, 0xb4, 0x02, 0x00, 0x00, 0x51, // ...2...1.......Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x34, 0x04, 0x00, 0x00, 0x0e, 0x04, 0x00, 0x00, 0x00, // .......4........
	0x00, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x35, 0x04, 0x00, 0x00, 0x34, // .......=...5...4
	0x04, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x37, // .......Q.......7
	0x04, 0x00, 0x00, 0x0e, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x3d, // ...............=
	0x00, 0x00, 0x00, 0x38, 0x04, 0x00, 0x00, 0x37, 0x04, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0xa6, // ...8...7........
	0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x39, 0x04, 0x00, 0x00, 0x35, 0x04, 0x00, 0x00, 0x38, // ...=...9...5...8
	0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3b, 0x04, 0x00, 0x00, 0x0e, // ...Q.......;....
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x3c, // ...........=...<
	0x04, 0x00, 0x00, 0x3b, 0x04, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x05, 0x00, 0x3d, // ...;...........=
	0x00, 0x00, 0x00, 0x3d, 0x04, 0x00, 0x00, 0x39, 0x04, 0x00, 0x00, 0x3c, 0x04, 0x00, 0x00, 0x51, // ...=...9...<...Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00, 0x0e, 0x04, 0x00, 0x00, 0x01, // .......?........
	0x00, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00, 0x3f, // .......=...@...?
	0x04, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x41, // ...........=...A
	0x04, 0x00, 0x00, 0x3d, 0x04, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00, 0xa8, 0x00, 0x04, 0x00, 0x3d, // ...=...@.......=
	0x00, 0x00, 0x00, 0x42, 0x04, 0x00, 0x00, 0x41, 0x04, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x3d, // ...B...A.......=
	0x00, 0x00, 0x00, 0x44, 0x04, 0x00, 0x00, 0xf6, 0x03, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xa8, // ...D............
	0x00, 0x04, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x45, 0x04, 0x00, 0x00, 0x44, 0x04, 0x00, 0x00, 0xa7, // ...=...E...D....
	0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x46, 0x04, 0x00, 0x00, 0x42, 0x04, 0x00, 0x00, 0x45, // ...=...F...B...E
	0x04, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x51, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // .......Q........
	0x00, 0x04, 0x00, 0x46, 0x04, 0x00, 0x00, 0x47, 0x04, 0x00, 0x00, 0x51, 0x04, 0x00, 0x00, 0xf8, // ...F...G...Q....
	0x00, 0x02, 0x00, 0x47, 0x04, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4b, // ...G...........K
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xf9, // .......1........
	0x02, 0x00, 0x00, 0xeb, 0x03, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x31, 0x01, 0x00, 0x00, 0x4c, // .......A...1...L
	0x04, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0xfd, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x3d, // ...............=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4d, 0x04, 0x00, 0x00, 0x4c, 0x04, 0x00, 0x00, 0x85, // .......M...L....
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4e, 0x04, 0x00, 0x00, 0x4b, 0x04, 0x00, 0x00, 0x4d, // .......N...K...M
	0x04, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x4f, 0x04, 0x00, 0x00, 0x4e, // ...P.......O...N
	0x04, 0x00, 0x00, 0x4e, 0x04, 0x00, 0x00, 0x4e, 0x04, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1a, // ...N...N........
	0x00, 0x00, 0x00, 0x50, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0xe4, // ...P............
	0x03, 0x00, 0x00, 0x32, 0x04, 0x00, 0x00, 0x4f, 0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x51, // ...2...O.......Q
	0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x51, 0x04, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, // .......Q........
	0x00, 0x00, 0x00, 0xbe, 0x06, 0x00, 0x00, 0xe4, 0x03, 0x00, 0x00, 0xe0, 0x03, 0x00, 0x00, 0x50, // ...............P
	0x04, 0x00, 0x00, 0x47, 0x04, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x53, // ...G...........S
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0xbe, 0x06, 0x00, 0x00, 0x02, // .......%........
	0x03, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x18, 0x01, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0x16, // ...A.......T....
	0x01, 0x00, 0x00, 0x72, 0x02, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x55, // ...r...=.......U
	0x04, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x56, // ...T...O.......V
	0x04, 0x00, 0x00, 0x55, 0x04, 0x00, 0x00, 0x55, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ...U...U........
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x57, // ...............W
	0x04, 0x00, 0x00, 0x56, 0x04, 0x00, 0x00, 0x08, 0x03, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x1a, // ...V............
	0x00, 0x00, 0x00, 0x5a, 0x04, 0x00, 0x00, 0x57, 0x04, 0x00, 0x00, 0xd1, 0x03, 0x00, 0x00, 0x8e, // ...Z...W........
	0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x5c, 0x04, 0x00, 0x00, 0x5a, 0x04, 0x00, 0x00, 0x0f, // ...........Z....
	0x03, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x5d, 0x04, 0x00, 0x00, 0x01, // ...........]....
	0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x5c, 0x04, 0x00, 0x00, 0x12, 0x03, 0x00, 0x00, 0x41, // ...(...........A
	0x00, 0x05, 0x00, 0x18, 0x01, 0x00, 0x00, 0x5f, 0x04, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x72, // ......._.......r
	0x02, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x60, 0x04, 0x00, 0x00, 0x5f, // ...=.......`..._
	0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x61, 0x04, 0x00, 0x00, 0x60, // ...O.......a...`
	0x04, 0x00, 0x00, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ...`............
	0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x62, 0x04, 0x00, 0x00, 0x53, // ...........b...S
	0x04, 0x00, 0x00, 0x61, 0x04, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x64, // ...a...........d
	0x04, 0x00, 0x00, 0x1a, 0x03, 0x00, 0x00, 0xd1, 0x03, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0x66, 0x04, 0x00, 0x00, 0x62, 0x04, 0x00, 0x00, 0x64, 0x04, 0x00, 0x00, 0x51, // ...f...b...d...Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x14, 0x05, 0x00, 0x00, 0x5a, 0x04, 0x00, 0x00, 0x00, // ...........Z....
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x16, 0x05, 0x00, 0x00, 0x5a, // ...Q...........Z
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x18, // .......Q........
	0x05, 0x00, 0x00, 0x5a, 0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, // ...Z............
	0x00, 0x00, 0x00, 0x19, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x16, // ...........(....
	0x05, 0x00, 0x00, 0x18, 0x05, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1a, // ................
	0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x14, 0x05, 0x00, 0x00, 0x19, // .......(........
	0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1c, 0x05, 0x00, 0x00, 0x5d, // ...Q...........]
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1e, // .......Q........
	0x05, 0x00, 0x00, 0x5d, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...].......Q....
	0x00, 0x00, 0x00, 0x20, 0x05, 0x00, 0x00, 0x5d, 0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, // ... ...]........
	0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x21, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, // .......!.......(
	0x00, 0x00, 0x00, 0x1e, 0x05, 0x00, 0x00, 0x20, 0x05, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, // ....... ........
	0x00, 0x00, 0x00, 0x22, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x1c, // ...".......(....
	0x05, 0x00, 0x00, 0x21, 0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x23, // ...!...Q.......#
	0x05, 0x00, 0x00, 0x66, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...f.......Q....
	0x00, 0x00, 0x00, 0x24, 0x05, 0x00, 0x00, 0x66, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, // ...$...f.......Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x25, 0x05, 0x00, 0x00, 0x66, 0x04, 0x00, 0x00, 0x02, // .......%...f....
	0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x26, 0x05, 0x00, 0x00, 0x01, // ...........&....
	0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x24, 0x05, 0x00, 0x00, 0x25, 0x05, 0x00, 0x00, 0x0c, // ...(...$...%....
	0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x27, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, // .......'.......(
	0x00, 0x00, 0x00, 0x23, 0x05, 0x00, 0x00, 0x26, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, // ...#...&........
	0x00, 0x00, 0x00, 0x2a, 0x05, 0x00, 0x00, 0x1a, 0x05, 0x00, 0x00, 0x22, 0x05, 0x00, 0x00, 0xba, // ...*......."....
	0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x2c, 0x05, 0x00, 0x00, 0x2a, 0x05, 0x00, 0x00, 0xae, // ...=...,...*....
	0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x36, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // .......6........
	0x00, 0x04, 0x00, 0x2c, 0x05, 0x00, 0x00, 0x2d, 0x05, 0x00, 0x00, 0x36, 0x05, 0x00, 0x00, 0xf8, // ...,...-...6....
	0x00, 0x02, 0x00, 0x2d, 0x05, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2f, // ...-.........../
	0x05, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x2a, 0x05, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, // .......*........
	0x00, 0x00, 0x00, 0x32, 0x05, 0x00, 0x00, 0x5a, 0x04, 0x00, 0x00, 0x2f, 0x05, 0x00, 0x00, 0x8e, // ...2...Z.../....
	0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x35, 0x05, 0x00, 0x00, 0x5d, 0x04, 0x00, 0x00, 0x2f, // .......5...].../
	0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x36, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x36, // .......6.......6
	0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xcc, 0x06, 0x00, 0x00, 0x5d, // ...............]
	0x04, 0x00, 0x00, 0x51, 0x04, 0x00, 0x00, 0x35, 0x05, 0x00, 0x00, 0x2d, 0x05, 0x00, 0x00, 0xf5, // ...Q...5...-....
	0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xc1, 0x06, 0x00, 0x00, 0x5a, 0x04, 0x00, 0x00, 0x51, // ...........Z...Q
	0x04, 0x00, 0x00, 0x32, 0x05, 0x00, 0x00, 0x2d, 0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x3d, // ...2...-.......=
	0x00, 0x00, 0x00, 0x39, 0x05, 0x00, 0x00, 0x1a, 0x05, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xa7, // ...9............
	0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x3a, 0x05, 0x00, 0x00, 0x6b, 0x03, 0x00, 0x00, 0x39, // ...=...:...k...9
	0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x3c, 0x05, 0x00, 0x00, 0x22, // .......=...<..."
	0x05, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x3d, // ...........=...=
	0x05, 0x00, 0x00, 0x3a, 0x05, 0x00, 0x00, 0x3c, 0x05, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x52, // ...:...<.......R
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x3d, 0x05, 0x00, 0x00, 0x3e, // ...........=...>
	0x05, 0x00, 0x00, 0x52, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x3e, 0x05, 0x00, 0x00, 0xf9, // ...R.......>....
	0x00, 0x02, 0x00, 0x3f, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x3f, 0x05, 0x00, 0x00, 0xf5, // ...?.......?....
	0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xc8, 0x06, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x3e, // ...........-...>
	0x05, 0x00, 0x00, 0x4d, 0x05, 0x00, 0x00, 0x4e, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x3c, // ...M...N.......<
	0x00, 0x00, 0x00, 0xbf, 0x06, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x3e, 0x05, 0x00, 0x00, 0x50, // ...........>...P
	0x05, 0x00, 0x00, 0x4e, 0x05, 0x00, 0x00, 0xb1, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x42, // ...N.......=...B
	0x05, 0x00, 0x00, 0xbf, 0x06, 0x00, 0x00, 0xfd, 0x01, 0x00, 0x00, 0xf6, 0x00, 0x04, 0x00, 0x51, // ...............Q
	0x05, 0x00, 0x00, 0x4e, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x42, // ...N...........B
	0x05, 0x00, 0x00, 0x43, 0x05, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x43, // ...C...Q.......C
	0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x31, 0x01, 0x00, 0x00, 0x48, 0x05, 0x00, 0x00, 0x16, // ...A...1...H....
	0x01, 0x00, 0x00, 0x30, 0x01, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...0.......=....
	0x00, 0x00, 0x00, 0x49, 0x05, 0x00, 0x00, 0x48, 0x05, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x01, // ...I...H........
	0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x81, // ................
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x81, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x18, // ...........A....
	0x01, 0x00, 0x00, 0x82, 0x05, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x17, 0x01, 0x00, 0x00, 0xbf, // ................
	0x06, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x83, 0x05, 0x00, 0x00, 0x82, // ...=............
	0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x85, 0x05, 0x00, 0x00, 0x83, // ...Q............
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x86, // .......Q........
	0x05, 0x00, 0x00, 0x83, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x87, 0x05, 0x00, 0x00, 0x83, 0x05, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, // ...............P
	0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x88, 0x05, 0x00, 0x00, 0x85, 0x05, 0x00, 0x00, 0x86, // ................
	0x05, 0x00, 0x00, 0x87, 0x05, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x20, // ...........A... 
	0x01, 0x00, 0x00, 0x89, 0x05, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x3d, // ...............=
	0x00, 0x04, 0x00, 0x10, 0x01, 0x00, 0x00, 0x8a, 0x05, 0x00, 0x00, 0x89, 0x05, 0x00, 0x00, 0x90, // ................
	0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x8b, 0x05, 0x00, 0x00, 0x88, 0x05, 0x00, 0x00, 0x8a, // ................
	0x05, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x8c, 0x05, 0x00, 0x00, 0x8b, // ...O............
	0x05, 0x00, 0x00, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x8d, 0x05, 0x00, 0x00, 0x8c, // ................
	0x05, 0x00, 0x00, 0x42, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x8f, // ...B............
	0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x8d, 0x05, 0x00, 0x00, 0x94, // .......E........
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x91, 0x05, 0x00, 0x00, 0xab, 0x03, 0x00, 0x00, 0x8f, // ................
	0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x31, 0x01, 0x00, 0x00, 0x94, 0x05, 0x00, 0x00, 0x16, // ...A...1........
	0x01, 0x00, 0x00, 0x30, 0x01, 0x00, 0x00, 0xfa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...0.......=....
	0x00, 0x00, 0x00, 0x95, 0x05, 0x00, 0x00, 0x94, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x96, 0x05, 0x00, 0x00, 0x91, 0x05, 0x00, 0x00, 0x95, 0x05, 0x00, 0x00, 0xba, // ................
	0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x97, 0x05, 0x00, 0x00, 0x96, 0x05, 0x00, 0x00, 0xb5, // ...=............
	0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x98, 0x05, 0x00, 0x00, 0x6b, // .......=.......k
	0x03, 0x00, 0x00, 0x97, 0x05, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xa4, 0x05, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x98, 0x05, 0x00, 0x00, 0x99, 0x05, 0x00, 0x00, 0xa4, // ................
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x99, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x31, // ...........A...1
	0x01, 0x00, 0x00, 0x9b, 0x05, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x30, 0x01, 0x00, 0x00, 0xfa, // ...........0....
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9c, 0x05, 0x00, 0x00, 0x9b, // ...=............
	0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9d, 0x05, 0x00, 0x00, 0x91, // ................
	0x05, 0x00, 0x00, 0x9c, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x31, 0x01, 0x00, 0x00, 0x9e, // .......A...1....
	0x05, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x30, 0x01, 0x00, 0x00, 0xfa, 0x00, 0x00, 0x00, 0x3d, // .......0.......=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9f, 0x05, 0x00, 0x00, 0x9e, 0x05, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa0, 0x05, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x9f, // ................
	0x05, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x05, 0x06, 0x00, 0x00, 0xa0, // ................
	0x05, 0x00, 0x00, 0xa0, 0x05, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa2, // ................
	0x05, 0x00, 0x00, 0x9d, 0x05, 0x00, 0x00, 0x05, 0x06, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0xa3, 0x05, 0x00, 0x00, 0xc1, 0x06, 0x00, 0x00, 0xa2, 0x05, 0x00, 0x00, 0xf9, // ................
	0x00, 0x02, 0x00, 0xa4, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xa4, 0x05, 0x00, 0x00, 0xf5, // ................
	0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xcd, 0x06, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x81, // ...........-....
	0x05, 0x00, 0x00, 0xa3, 0x05, 0x00, 0x00, 0x99, 0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x3d, // ...............=
	0x00, 0x00, 0x00, 0xa6, 0x05, 0x00, 0x00, 0x91, 0x05, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xf7, // ................
	0x00, 0x03, 0x00, 0xc8, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xa6, // ................
	0x05, 0x00, 0x00, 0xa7, 0x05, 0x00, 0x00, 0xc8, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xa7, // ................
	0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xa9, 0x05, 0x00, 0x00, 0x8f, // ................
	0x05, 0x00, 0x00, 0xa9, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xaa, // ................
	0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0xa9, 0x05, 0x00, 0x00, 0x94, // .......E........
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xac, 0x05, 0x00, 0x00, 0xab, 0x03, 0x00, 0x00, 0xaa, // ................
	0x05, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xaf, 0x05, 0x00, 0x00, 0x8f, // ................
	0x05, 0x00, 0x00, 0xaa, 0x05, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb1, // ................
	0x05, 0x00, 0x00, 0xa9, 0x03, 0x00, 0x00, 0xaa, 0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x3d, // ...............=
	0x00, 0x00, 0x00, 0xb3, 0x05, 0x00, 0x00, 0xac, 0x05, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xba, // ................
	0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0xb5, 0x05, 0x00, 0x00, 0xaf, 0x05, 0x00, 0x00, 0xb5, // ...=............
	0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0xb6, 0x05, 0x00, 0x00, 0xb3, // .......=........
	0x05, 0x00, 0x00, 0xb5, 0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0xb8, // ...........=....
	0x05, 0x00, 0x00, 0xb1, 0x05, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x3d, // ...............=
	0x00, 0x00, 0x00, 0xb9, 0x05, 0x00, 0x00, 0xb6, 0x05, 0x00, 0x00, 0xb8, 0x05, 0x00, 0x00, 0xf7, // ................
	0x00, 0x03, 0x00, 0xc7, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xb9, // ................
	0x05, 0x00, 0x00, 0xba, 0x05, 0x00, 0x00, 0xc7, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xba, // ................
	0x05, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x09, 0x06, 0x00, 0x00, 0x1a, // ................
	0x03, 0x00, 0x00, 0xcc, 0x06, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0a, // ................
	0x06, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0xaf, 0x05, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x0b, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x0a, // ................
	0x06, 0x00, 0x00, 0x09, 0x01, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x0c, // ................
	0x06, 0x00, 0x00, 0x09, 0x06, 0x00, 0x00, 0x0b, 0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0x0d, 0x06, 0x00, 0x00, 0xcc, 0x06, 0x00, 0x00, 0x0c, 0x06, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbd, 0x05, 0x00, 0x00, 0x49, 0x05, 0x00, 0x00, 0xae, // ...........I....
	0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbf, 0x05, 0x00, 0x00, 0x62, // ...............b
	0x01, 0x00, 0x00, 0xb1, 0x05, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc0, // ................
	0x05, 0x00, 0x00, 0xbd, 0x05, 0x00, 0x00, 0xbf, 0x05, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xc2, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xac, // ................
	0x05, 0x00, 0x00, 0x49, 0x05, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc3, // ...I............
	0x05, 0x00, 0x00, 0xc0, 0x05, 0x00, 0x00, 0xc2, 0x05, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0xc4, 0x05, 0x00, 0x00, 0x0d, 0x06, 0x00, 0x00, 0xc3, 0x05, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xc6, 0x05, 0x00, 0x00, 0xcd, 0x06, 0x00, 0x00, 0xc4, // ................
	0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xc7, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xc7, // ................
	0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xcf, 0x06, 0x00, 0x00, 0xcd, // ................
	0x06, 0x00, 0x00, 0xa7, 0x05, 0x00, 0x00, 0xc6, 0x05, 0x00, 0x00, 0xba, 0x05, 0x00, 0x00, 0xf9, // ................
	0x00, 0x02, 0x00, 0xc8, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xc8, 0x05, 0x00, 0x00, 0xf5, // ................
	0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xce, 0x06, 0x00, 0x00, 0xcd, 0x06, 0x00, 0x00, 0xa4, // ................
	0x05, 0x00, 0x00, 0xcf, 0x06, 0x00, 0x00, 0xc7, 0x05, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xcb, 0x05, 0x00, 0x00, 0x8d, 0x05, 0x00, 0x00, 0x8d, 0x05, 0x00, 0x00, 0x85, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xce, 0x05, 0x00, 0x00, 0xcb, 0x05, 0x00, 0x00, 0xcb, // ................
	0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x31, 0x01, 0x00, 0x00, 0xcf, 0x05, 0x00, 0x00, 0x16, // ...A...1........
	0x01, 0x00, 0x00, 0x74, 0x01, 0x00, 0x00, 0x75, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...t...u...=....
	0x00, 0x00, 0x00, 0xd0, 0x05, 0x00, 0x00, 0xcf, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x31, // ...........A...1
	0x01, 0x00, 0x00, 0xd1, 0x05, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x74, 0x01, 0x00, 0x00, 0x75, // ...........t...u
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd2, 0x05, 0x00, 0x00, 0xd1, // ...=............
	0x05, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd3, 0x05, 0x00, 0x00, 0xd0, // ................
	0x05, 0x00, 0x00, 0xd2, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x31, 0x01, 0x00, 0x00, 0xd4, // .......A...1....
	0x05, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x74, 0x01, 0x00, 0x00, 0x75, 0x01, 0x00, 0x00, 0x3d, // .......t...u...=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd5, 0x05, 0x00, 0x00, 0xd4, 0x05, 0x00, 0x00, 0x85, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd6, 0x05, 0x00, 0x00, 0xd3, 0x05, 0x00, 0x00, 0xd5, // ................
	0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x31, 0x01, 0x00, 0x00, 0xd7, 0x05, 0x00, 0x00, 0x16, // ...A...1........
	0x01, 0x00, 0x00, 0x74, 0x01, 0x00, 0x00, 0x75, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...t...u...=....
	0x00, 0x00, 0x00, 0xd8, 0x05, 0x00, 0x00, 0xd7, 0x05, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xd9, 0x05, 0x00, 0x00, 0xd6, 0x05, 0x00, 0x00, 0xd8, 0x05, 0x00, 0x00, 0x88, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xda, 0x05, 0x00, 0x00, 0xce, 0x05, 0x00, 0x00, 0xd9, // ................
	0x05, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xdb, 0x05, 0x00, 0x00, 0xae, // ................
	0x00, 0x00, 0x00, 0xda, 0x05, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xdc, // ................
	0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0xdb, 0x05, 0x00, 0x00, 0xb5, // .......+........
	0x00, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xdf, // ................
	0x05, 0x00, 0x00, 0xdc, 0x05, 0x00, 0x00, 0xdc, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xe1, 0x05, 0x00, 0x00, 0xcb, 0x05, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x88, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe2, 0x05, 0x00, 0x00, 0xdf, 0x05, 0x00, 0x00, 0xe1, // ................
	0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xe6, 0x05, 0x00, 0x00, 0xcc, // ................
	0x06, 0x00, 0x00, 0xc1, 0x06, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x18, 0x01, 0x00, 0x00, 0xe9, // .......A........
	0x05, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x92, 0x01, 0x00, 0x00, 0xbf, 0x06, 0x00, 0x00, 0x3d, // ...............=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xea, 0x05, 0x00, 0x00, 0xe9, 0x05, 0x00, 0x00, 0x4f, // ...............O
	0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xeb, 0x05, 0x00, 0x00, 0xea, 0x05, 0x00, 0x00, 0xea, // ................
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x85, // ................
	0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xec, 0x05, 0x00, 0x00, 0xce, 0x06, 0x00, 0x00, 0xeb, // ................
	0x05, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xee, 0x05, 0x00, 0x00, 0xec, // ................
	0x05, 0x00, 0x00, 0xe2, 0x05, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x18, 0x01, 0x00, 0x00, 0xf0, // .......A........
	0x05, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x74, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, // .......t...=....
	0x00, 0x00, 0x00, 0xf1, 0x05, 0x00, 0x00, 0xf0, 0x05, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, // ...........O....
	0x00, 0x00, 0x00, 0xf2, 0x05, 0x00, 0x00, 0xf1, 0x05, 0x00, 0x00, 0xf1, 0x05, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0xf4, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xe6, // ...........2....
	0x05, 0x00, 0x00, 0xf2, 0x05, 0x00, 0x00, 0xee, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x31, // ...........A...1
	0x01, 0x00, 0x00, 0xf5, 0x05, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x9f, 0x01, 0x00, 0x00, 0xfc, // ................
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf6, 0x05, 0x00, 0x00, 0xf5, // ...=............
	0x05, 0x00, 0x00, 0xb7, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0xf7, 0x05, 0x00, 0x00, 0xf6, // .......=........
	0x05, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xf7, 0x05, 0x00, 0x00, 0xf8, 0x05, 0x00, 0x00, 0xfe, // ................
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xfe, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x01, // ................
	0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xf8, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x31, // ...........A...1
	0x01, 0x00, 0x00, 0xf9, 0x05, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x9f, 0x01, 0x00, 0x00, 0xfc, // ................
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xfa, 0x05, 0x00, 0x00, 0xf9, // ...=............
	0x05, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xfb, 0x05, 0x00, 0x00, 0xfa, // ...P............
	0x05, 0x00, 0x00, 0xfa, 0x05, 0x00, 0x00, 0xfa, 0x05, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0x13, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0xf4, // ................
	0x05, 0x00, 0x00, 0xc1, 0x06, 0x00, 0x00, 0xfb, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x01, // ................
	0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x00, 0x06, 0x00, 0x00, 0xff, 0x00, 0x01, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0x01, 0x06, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xd0, // ................
	0x06, 0x00, 0x00, 0xf4, 0x05, 0x00, 0x00, 0xfe, 0x05, 0x00, 0x00, 0x13, 0x06, 0x00, 0x00, 0xf8, // ................
	0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x4d, 0x05, 0x00, 0x00, 0xc8, // ...........M....
	0x06, 0x00, 0x00, 0xd0, 0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x4e, 0x05, 0x00, 0x00, 0xf8, // ...........N....
	0x00, 0x02, 0x00, 0x4e, 0x05, 0x00, 0x00, 0x80, 0x00, 0x05, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x50, // ...N.......<...P
	0x05, 0x00, 0x00, 0xbf, 0x06, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x3f, // ...............?
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x51, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x52, // .......Q.......R
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x52, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, // .......R........
	0x00, 0x00, 0x00, 0xc7, 0x06, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x36, 0x05, 0x00, 0x00, 0xc8, // .......-...6....
	0x06, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x55, // ...Q.......=...U
	0x05, 0x00, 0x00, 0x1a, 0x05, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x3d, // ...............=
	0x00, 0x00, 0x00, 0x56, 0x05, 0x00, 0x00, 0x6b, 0x03, 0x00, 0x00, 0x55, 0x05, 0x00, 0x00, 0xf7, // ...V...k...U....
	0x00, 0x03, 0x00, 0x66, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x56, // ...f...........V
	0x05, 0x00, 0x00, 0x57, 0x05, 0x00, 0x00, 0x66, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x57, // ...W...f.......W
	0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x59, 0x05, 0x00, 0x00, 0xab, // ...Q.......Y....
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5a, // .......Q.......Z
	0x05, 0x00, 0x00, 0xab, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x5b, 0x05, 0x00, 0x00, 0xab, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, // ...[...........P
	0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x5c, 0x05, 0x00, 0x00, 0x59, 0x05, 0x00, 0x00, 0x5a, // ...........Y...Z
	0x05, 0x00, 0x00, 0x5b, 0x05, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x20, // ...[.......A... 
	0x01, 0x00, 0x00, 0x5d, 0x05, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x3d, // ...]...........=
	0x00, 0x04, 0x00, 0x10, 0x01, 0x00, 0x00, 0x5e, 0x05, 0x00, 0x00, 0x5d, 0x05, 0x00, 0x00, 0x90, // .......^...]....
	0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x5f, 0x05, 0x00, 0x00, 0x5c, 0x05, 0x00, 0x00, 0x5e, // ......._.......^
	0x05, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x60, 0x05, 0x00, 0x00, 0x5f, // ...O.......`..._
	0x05, 0x00, 0x00, 0x5f, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ..._............
	0x00, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x61, 0x05, 0x00, 0x00, 0x01, // ...........a....
	0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x60, 0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...E...`...Q....
	0x00, 0x00, 0x00, 0x25, 0x06, 0x00, 0x00, 0x61, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, // ...%...a.......Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x26, 0x06, 0x00, 0x00, 0x61, 0x05, 0x00, 0x00, 0x00, // .......&...a....
	0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x58, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, // .......X........
	0x00, 0x03, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x34, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x34, // .......4.......4
	0x06, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x35, 0x06, 0x00, 0x00, 0x01, // ...........5....
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x25, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, // .......%........
	0x00, 0x00, 0x00, 0x36, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x26, // ...6...........&
	0x06, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x38, 0x06, 0x00, 0x00, 0x36, // .......=...8...6
	0x06, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x3a, // ...........=...:
	0x06, 0x00, 0x00, 0x35, 0x06, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x3d, // ...5...........=
	0x00, 0x00, 0x00, 0x3b, 0x06, 0x00, 0x00, 0x38, 0x06, 0x00, 0x00, 0x3a, 0x06, 0x00, 0x00, 0xf7, // ...;...8...:....
	0x00, 0x03, 0x00, 0x3d, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x3b, // ...=...........;
	0x06, 0x00, 0x00, 0x3c, 0x06, 0x00, 0x00, 0x3d, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x3c, // ...<...=.......<
	0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x58, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x3d, // .......X.......=
	0x06, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x40, 0x06, 0x00, 0x00, 0x36, // ...........@...6
	0x06, 0x00, 0x00, 0x35, 0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x43, // ...5...........C
	0x06, 0x00, 0x00, 0x36, 0x06, 0x00, 0x00, 0x35, 0x06, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, // ...6...5........
	0x00, 0x00, 0x00, 0x44, 0x06, 0x00, 0x00, 0x40, 0x06, 0x00, 0x00, 0x43, 0x06, 0x00, 0x00, 0xb8, // ...D...@...C....
	0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x45, 0x06, 0x00, 0x00, 0x26, 0x06, 0x00, 0x00, 0xb5, // ...=...E...&....
	0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x06, 0x00, 0x00, 0x45, // ...........F...E
	0x06, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0xe1, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x48, 0x06, 0x00, 0x00, 0xe3, 0x00, 0x00, 0x00, 0x44, 0x06, 0x00, 0x00, 0x0c, // ...H.......D....
	0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4b, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // .......K.......2
	0x00, 0x00, 0x00, 0x48, 0x06, 0x00, 0x00, 0x44, 0x06, 0x00, 0x00, 0xbb, 0x06, 0x00, 0x00, 0xb8, // ...H...D........
	0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x4c, 0x06, 0x00, 0x00, 0x26, 0x06, 0x00, 0x00, 0xb5, // ...=...L...&....
	0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4e, 0x06, 0x00, 0x00, 0x44, // ...........N...D
	0x06, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x50, 0x06, 0x00, 0x00, 0x4c, // ...........P...L
	0x06, 0x00, 0x00, 0x4e, 0x06, 0x00, 0x00, 0x44, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, // ...N...D........
	0x00, 0x00, 0x00, 0x52, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x4b, // ...R.......2...K
	0x06, 0x00, 0x00, 0x50, 0x06, 0x00, 0x00, 0x46, 0x06, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x3d, // ...P...F.......=
	0x00, 0x00, 0x00, 0x53, 0x06, 0x00, 0x00, 0x25, 0x06, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x7f, // ...S...%........
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x55, 0x06, 0x00, 0x00, 0x52, 0x06, 0x00, 0x00, 0xa9, // .......U...R....
	0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x57, 0x06, 0x00, 0x00, 0x53, 0x06, 0x00, 0x00, 0x55, // .......W...S...U
	0x06, 0x00, 0x00, 0x52, 0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x58, 0x06, 0x00, 0x00, 0xf8, // ...R.......X....
	0x00, 0x02, 0x00, 0x58, 0x06, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc3, // ...X............
	0x06, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x3c, 0x06, 0x00, 0x00, 0x57, 0x06, 0x00, 0x00, 0x3d, // .......<...W...=
	0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x28, 0x06, 0x00, 0x00, 0xf8, // ...........(....
	0x00, 0x00, 0x00, 0xc3, 0x06, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x29, // .......Q.......)
	0x06, 0x00, 0x00, 0x61, 0x05, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x75, // ...a...........u
	0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x60, // ...............`
	0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x60, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, // .......`........
	0x00, 0x00, 0x00, 0x61, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x29, // ...a...........)
	0x06, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x63, 0x06, 0x00, 0x00, 0xae, // ...........c....
	0x00, 0x00, 0x00, 0x61, 0x06, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x64, // ...a.......=...d
	0x06, 0x00, 0x00, 0x63, 0x06, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x68, // ...c...........h
	0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x64, 0x06, 0x00, 0x00, 0x65, // ...........d...e
	0x06, 0x00, 0x00, 0x68, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x65, 0x06, 0x00, 0x00, 0xbe, // ...h.......e....
	0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x66, 0x06, 0x00, 0x00, 0x29, 0x06, 0x00, 0x00, 0xb5, // ...=...f...)....
	0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x67, 0x06, 0x00, 0x00, 0x66, // ...........g...f
	0x06, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x75, // ...............u
	0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x68, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, // .......h........
	0x00, 0x00, 0x00, 0x6b, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xba, // ...k.......2....
	0x00, 0x00, 0x00, 0x61, 0x06, 0x00, 0x00, 0xbd, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, // ...a............
	0x00, 0x00, 0x00, 0x6d, 0x06, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x61, 0x06, 0x00, 0x00, 0x0c, // ...m.......a....
	0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6e, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1f, // .......n........
	0x00, 0x00, 0x00, 0x6d, 0x06, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6f, // ...m...........o
	0x06, 0x00, 0x00, 0x6b, 0x06, 0x00, 0x00, 0x6e, 0x06, 0x00, 0x00, 0xbe, 0x00, 0x05, 0x00, 0x3d, // ...k...n.......=
	0x00, 0x00, 0x00, 0x70, 0x06, 0x00, 0x00, 0x29, 0x06, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x7f, // ...p...)........
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb8, 0x06, 0x00, 0x00, 0x6b, 0x06, 0x00, 0x00, 0x0c, // ...........k....
	0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x73, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // .......s.......2
	0x00, 0x00, 0x00, 0xb8, 0x06, 0x00, 0x00, 0x6e, 0x06, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0xa9, // .......n........
	0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x74, 0x06, 0x00, 0x00, 0x70, 0x06, 0x00, 0x00, 0x6f, // .......t...p...o
	0x06, 0x00, 0x00, 0x73, 0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x75, 0x06, 0x00, 0x00, 0xf8, // ...s.......u....
	0x00, 0x02, 0x00, 0x75, 0x06, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc4, // ...u............
	0x06, 0x00, 0x00, 0x67, 0x06, 0x00, 0x00, 0x65, 0x06, 0x00, 0x00, 0x74, 0x06, 0x00, 0x00, 0x68, // ...g...e...t...h
	0x06, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x2b, 0x06, 0x00, 0x00, 0x28, // ...P.......+...(
	0x06, 0x00, 0x00, 0xc4, 0x06, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x7d, // .......V.......}
	0x06, 0x00, 0x00, 0x76, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x58, 0x00, 0x07, 0x00, 0x0d, // ...v...t...X....
	0x00, 0x00, 0x00, 0x80, 0x06, 0x00, 0x00, 0x7d, 0x06, 0x00, 0x00, 0x2b, 0x06, 0x00, 0x00, 0x02, // .......}...+....
	0x00, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x1d, // .......O........
	0x06, 0x00, 0x00, 0x80, 0x06, 0x00, 0x00, 0x80, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x1f, // ................
	0x06, 0x00, 0x00, 0xc1, 0x06, 0x00, 0x00, 0x1d, 0x06, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x31, // ...........A...1
	0x01, 0x00, 0x00, 0x20, 0x06, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0xbc, 0x01, 0x00, 0x00, 0xfc, // ... ............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x21, 0x06, 0x00, 0x00, 0x20, // ...=.......!... 
	0x06, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x22, 0x06, 0x00, 0x00, 0x1f, // ..........."....
	0x06, 0x00, 0x00, 0x21, 0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x65, // ...!...........e
	0x05, 0x00, 0x00, 0xc7, 0x06, 0x00, 0x00, 0x22, 0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x66, // .......".......f
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x66, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, // .......f........
	0x00, 0x00, 0x00, 0xc9, 0x06, 0x00, 0x00, 0xc7, 0x06, 0x00, 0x00, 0x52, 0x05, 0x00, 0x00, 0x65, // ...........R...e
	0x05, 0x00, 0x00, 0x75, 0x06, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x68, // ...u.......=...h
	0x05, 0x00, 0x00, 0x27, 0x05, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x6c, // ...'...........l
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x68, 0x05, 0x00, 0x00, 0x69, // ...........h...i
	0x05, 0x00, 0x00, 0x6c, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x69, 0x05, 0x00, 0x00, 0x0c, // ...l.......i....
	0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x6b, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // .......k.......2
	0x00, 0x00, 0x00, 0x62, 0x04, 0x00, 0x00, 0x64, 0x04, 0x00, 0x00, 0xc9, 0x06, 0x00, 0x00, 0xf9, // ...b...d........
	0x00, 0x02, 0x00, 0x6c, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x6c, 0x05, 0x00, 0x00, 0xf5, // ...l.......l....
	0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xca, 0x06, 0x00, 0x00, 0xc9, 0x06, 0x00, 0x00, 0x66, // ...............f
	0x05, 0x00, 0x00, 0x6b, 0x05, 0x00, 0x00, 0x69, 0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...k...i...Q....
	0x00, 0x00, 0x00, 0x6f, 0x04, 0x00, 0x00, 0xca, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, // ...o...........Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x71, 0x04, 0x00, 0x00, 0xca, 0x06, 0x00, 0x00, 0x01, // .......q........
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x73, 0x04, 0x00, 0x00, 0xca, // ...Q.......s....
	0x06, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x31, 0x01, 0x00, 0x00, 0x74, // .......A...1...t
	0x04, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x72, 0x02, 0x00, 0x00, 0x75, 0x01, 0x00, 0x00, 0x3d, // .......r...u...=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x75, 0x04, 0x00, 0x00, 0x74, 0x04, 0x00, 0x00, 0x50, // .......u...t...P
	0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xb9, 0x06, 0x00, 0x00, 0x6f, 0x04, 0x00, 0x00, 0x71, // ...........o...q
	0x04, 0x00, 0x00, 0x73, 0x04, 0x00, 0x00, 0x75, 0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x77, // ...s...u.......w
	0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x77, 0x04, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x0d, // .......w........
	0x00, 0x00, 0x00, 0xd9, 0x06, 0x00, 0x00, 0xdf, 0x03, 0x00, 0x00, 0xd8, 0x03, 0x00, 0x00, 0xb9, // ................
	0x06, 0x00, 0x00, 0x6c, 0x05, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x50, 0x03, 0x00, 0x00, 0xd9, // ...l...>...P....
	0x06, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00, 0x00, 0x00, 0x70, 0x02,       // .......8.....p.
};
static const bgfx::EmbeddedShader fs_ball_equirectangular_nodecal = BGFX_EMBEDDED_SHADER(fs_ball_equirectangular_nodecal);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of fragment shader from fs_ball.sc to fs_ball_spherical_decal with options: NOSTEREO SPHERICAL DECAL
static const uint8_t fs_ball_spherical_decal_mtl[10196] =
{
	0x46, 0x53, 0x48, 0x0b, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x15, 0x74, // FSH....l.......t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, // ex_ball_colorSam
	0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x74, // pler...........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x65, 0x78, // ex_ball_colorTex
	0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, // ture...........t
	0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, // ex_envSampler...
	0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x54, // ........tex_envT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // exture..........
	0x16, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, // .tex_diffuse_env
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Sampler.........
	0x00, 0x16, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, // ..tex_diffuse_en
	0x76, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // vTexture........
	0x00, 0x00, 0x15, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, // ...tex_ball_deca
	0x6c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // lSampler........
	0x00, 0x00, 0x15, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, // ...tex_ball_deca
	0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // lTexture........
	0x00, 0x00, 0x19, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, // ...tex_ball_play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, // fieldSampler....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // .......tex_ball_
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // playfieldTexture
	0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x62, 0x61, 0x6c, 0x6c, 0x4c, // ...........ballL
	0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x0a, 0xc0, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, // ightPos.........
	0x00, 0x07, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x14, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, // ..matView.......
	0x00, 0x00, 0x00, 0x1e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, // ....Roughness_Wr
	0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, // apL_Edge_Thickne
	0x73, 0x73, 0x12, 0x01, 0x40, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x63, 0x41, 0x6d, // ss..@........cAm
	0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, // bient_LightRange
	0x12, 0x01, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x62, 0x61, 0x6c, 0x6c, 0x4c, // ...........ballL
	0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0a, 0x60, 0x01, // ightEmission..`.
	0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // .......fDisableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, // ighting_top_belo
	0x77, 0x12, 0x01, 0x20, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x65, 0x6e, 0x76, // w.. ........fenv
	0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, // EmissionScale_Te
	0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x01, 0x10, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // xWidth..........
	0x13, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, // .w_h_disableLigh
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x01, 0x60, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x63, // ting..`........c
	0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x01, 0x30, 0x02, 0x01, 0x00, // Base_Alpha..0...
	0x00, 0x00, 0x00, 0x00, 0x0c, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, // .....matWorldVie
	0x77, 0x14, 0x01, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x6d, 0x61, 0x74, 0x50, // w..@........matP
	0x72, 0x6f, 0x6a, 0x14, 0x01, 0x80, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x69, 0x6e, // roj...........in
	0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, // vTableRes_reflec
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x01, 0x50, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, // tion..P........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x10, 0x00, 0x00, // ex_ball_color...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, // ........tex_diff
	0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // use_env.........
	0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, // ..tex_ball_decal
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x74, 0x65, 0x78, 0x5f, 0x62, // ...........tex_b
	0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x10, 0x00, 0x00, // all_playfield...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc5, 0x24, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, // ........$..#incl
	0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, // ude <metal_stdli
	0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, // b>.#include <sim
	0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, // d/simd.h>..using
	0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, //  namespace metal
	0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, // ;..struct _Globa
	0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, // l.{.    float4x4
	0x20, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //  matView;.    fl
	0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, // oat4x4 matWorldV
	0x69, 0x65, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, // iew;.    float4x
	0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // 4 matProj;.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, // loat4 ballLightP
	0x6f, 0x73, 0x5b, 0x31, 0x30, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // os[10];.    floa
	0x74, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, // t4 ballLightEmis
	0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x31, 0x30, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // sion[10];.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, // oat4 cAmbient_Li
	0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // ghtRange;.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, // oat4 fenvEmissio
	0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x3b, // nScale_TexWidth;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x66, 0x44, 0x69, 0x73, // .    float4 fDis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, // ableLighting_top
	0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // _below;.    floa
	0x74, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x0a, // t4 cBase_Alpha;.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, //     float4 Rough
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, // ness_WrapL_Edge_
	0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // Thickness;.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, // loat4 invTableRe
	0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x20, 0x20, // s_reflection;.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, //   float4 w_h_dis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x3b, 0x0a, 0x7d, 0x3b, // ableLighting;.};
	0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, // ..struct xlatMtl
	0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // Main_out.{.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, // loat4 bgfx_FragD
	0x61, 0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, // ata0 [[color(0)]
	0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, // ];.};..struct xl
	0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, // atMtlMain_in.{. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, //    float3 v_norm
	0x61, 0x6c, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, // al [[user(locn0)
	0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, // ]];.    float2 v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, // _texcoord0 [[use
	0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // r(locn1)]];.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, // float3 v_worldPo
	0x73, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x32, 0x29, 0x5d, // s [[user(locn2)]
	0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x5b, 0x5b, 0x20, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x5f, // ];.};..[[ early_
	0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x20, 0x5d, // fragment_tests ]
	0x5d, 0x20, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // ] fragment xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // tlMain_out xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // tlMain(xlatMtlMa
	0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, // in_in in [[stage
	0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, // _in]], constant 
	0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, // _Global& _mtl_u 
	0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, // [[buffer(0)]], t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, // exture2d<float> 
	0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x5b, // tex_ball_color [
	0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, // [texture(0)]], t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, // exture2d<float> 
	0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x20, // tex_diffuse_env 
	0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, // [[texture(2)]], 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, // texture2d<float>
	0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x20, //  tex_ball_decal 
	0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x33, 0x29, 0x5d, 0x5d, 0x2c, 0x20, // [[texture(3)]], 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, // texture2d<float>
	0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, //  tex_ball_playfi
	0x65, 0x6c, 0x64, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x34, 0x29, // eld [[texture(4)
	0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, 0x65, 0x78, 0x5f, // ]], sampler tex_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ball_colorSample
	0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, // r [[sampler(0)]]
	0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, // , sampler tex_di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ffuse_envSampler
	0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, //  [[sampler(2)]],
	0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, //  sampler tex_bal
	0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, // l_decalSampler [
	0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x33, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, // [sampler(3)]], s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // ampler tex_ball_
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // playfieldSampler
	0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x34, 0x29, 0x5d, 0x5d, 0x29, //  [[sampler(4)]])
	0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // .{.    xlatMtlMa
	0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, // in_out out = {};
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x36, 0x39, // .    float4 _169
	0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, // 4;.    do.    {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x39, 0x35, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, // 950 = fast::norm
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x2d, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // alize(-in.v_worl
	0x64, 0x50, 0x6f, 0x73, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // dPos);.        f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x39, 0x35, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, // loat3 _952 = fas
	0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x69, 0x6e, 0x2e, // t::normalize(in.
	0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // v_normal);.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x39, 0x35, 0x35, 0x20, 0x3d, //    float3 _955 =
	0x20, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x5f, 0x39, 0x35, 0x30, 0x2c, 0x20, 0x5f, //  reflect(_950, _
	0x39, 0x35, 0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // 952);.        fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x39, 0x35, 0x38, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, // oat _958 = dot(_
	0x39, 0x35, 0x30, 0x2c, 0x20, 0x5f, 0x39, 0x35, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 950, _955);.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x39, 0x37, 0x34, 0x20, 0x3d, //     float _974 =
	0x20, 0x28, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x39, 0x35, 0x35, 0x2e, 0x7a, 0x29, //  ((1.0 - _955.z)
	0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x30, 0x2e, 0x33, 0x35, 0x33, //  > 0.0) ? (0.353
	0x35, 0x35, 0x33, 0x33, 0x38, 0x34, 0x35, 0x34, 0x32, 0x34, 0x36, 0x35, 0x32, 0x30, 0x39, 0x39, // 5533845424652099
	0x36, 0x30, 0x39, 0x33, 0x37, 0x35, 0x20, 0x2a, 0x20, 0x72, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, // 609375 * rsqrt(1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x39, 0x35, 0x35, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x3a, 0x20, // .0 - _955.z)) : 
	0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // 0.0;.        flo
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x31, 0x38, 0x31, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, // at4 _1181 = tex_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // ball_decal.sampl
	0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, // e(tex_ball_decal
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, // Sampler, in.v_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // xcoord0);.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x31, 0x39, 0x31, 0x20, 0x3d, //   float3 _1191 =
	0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x74, //  fast::max(fma(t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x73, 0x61, // ex_ball_color.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, // mple(tex_ball_co
	0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // lorSampler, floa
	0x74, 0x32, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x2d, 0x5f, 0x39, 0x37, 0x34, 0x2c, 0x20, 0x5f, 0x39, // t2(fma(-_974, _9
	0x35, 0x35, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, // 55.x, 0.5), fma(
	0x2d, 0x5f, 0x39, 0x37, 0x34, 0x2c, 0x20, 0x5f, 0x39, 0x35, 0x35, 0x2e, 0x79, 0x2c, 0x20, 0x30, // -_974, _955.y, 0
	0x2e, 0x35, 0x29, 0x29, 0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x28, 0x5f, 0x39, 0x35, // .5)), level((_95
	0x38, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x36, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x33, 0x38, // 8 > 0.6000000238
	0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x20, 0x3f, // 4185791015625) ?
	0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x39, 0x35, 0x38, 0x2c, 0x20, 0x31, 0x35, 0x2e, 0x30, 0x2c, //  fma(_958, 15.0,
	0x20, 0x2d, 0x39, 0x2e, 0x30, 0x29, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, //  -9.0) : 0.0)).x
	0x79, 0x7a, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, // yz - float3(1.0)
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, // , float3(1.0) - 
	0x5f, 0x31, 0x31, 0x38, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _1181.xyz, float
	0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // 3(1.0)), float3(
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, // 0.0));.        i
	0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, // f (_mtl_u.w_h_di
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x7a, 0x20, // sableLighting.z 
	0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // != 0.0).        
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, // {.            _1
	0x36, 0x39, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x31, // 694 = float4(_11
	0x39, 0x31, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x42, 0x61, 0x73, 0x65, // 91, _mtl_u.cBase
	0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // _Alpha.w);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, //        break;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x31, 0x35, 0x20, 0x3d, 0x20, 0x5f, // float3 _1015 = _
	0x31, 0x31, 0x39, 0x31, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // 1191 * (0.5 * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, // tl_u.fenvEmissio
	0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, // nScale_TexWidth.
	0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // x);.        floa
	0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x31, 0x39, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // t3 _1019 = (_mtl
	0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x20, // _u.matWorldView 
	0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, // * float4(0.0, 0.
	0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, // 0, 1.0, 0.0)).xy
	0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // z;.        float
	0x20, 0x5f, 0x31, 0x30, 0x32, 0x32, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x30, //  _1022 = dot(_10
	0x31, 0x39, 0x2c, 0x20, 0x5f, 0x39, 0x35, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 19, _955);.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x30, 0x33, 0x33, 0x20, 0x3d, //    float _1033 =
	0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x30, 0x31, 0x39, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, //  dot(_1019, in.v
	0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x20, 0x2d, 0x20, 0x28, 0x5f, 0x6d, 0x74, // _worldPos - (_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, // l_u.matWorldView
	0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, //  * float4(0.0, 0
	0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, // .0, 0.0, 1.0)).x
	0x79, 0x7a, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x31, 0x30, 0x32, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, // yz) / _1022;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x30, 0x34, //      float4 _104
	0x36, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x50, 0x72, // 6 = _mtl_u.matPr
	0x6f, 0x6a, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x69, 0x6e, 0x2e, 0x76, // oj * float4(in.v
	0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x20, 0x2d, 0x20, 0x28, 0x5f, 0x39, 0x35, // _worldPos - (_95
	0x35, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x30, 0x33, 0x33, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, // 5 * _1033), 1.0)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // ;.        float2
	0x20, 0x5f, 0x31, 0x30, 0x35, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, //  _1057 = float2(
	0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, // 0.5) + (float2(_
	0x31, 0x30, 0x34, 0x36, 0x2e, 0x78, 0x2c, 0x20, 0x2d, 0x5f, 0x31, 0x30, 0x34, 0x36, 0x2e, 0x79, // 1046.x, -_1046.y
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2f, 0x20, 0x5f, 0x31, 0x30, 0x34, 0x36, // ) * (0.5 / _1046
	0x2e, 0x77, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // .w));.        fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x32, 0x30, 0x30, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, // oat4 _1200 = tex
	0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2e, // _ball_playfield.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // sample(tex_ball_
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // playfieldSampler
	0x2c, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x35, 0x37, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // , (_1057 + float
	0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, // 2(_mtl_u.w_h_dis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, // ableLighting.x, 
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0.0)));.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x32, 0x30, 0x39, 0x20, 0x3d, 0x20, 0x74, // float4 _1209 = t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // ex_ball_playfiel
	0x64, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, // d.sample(tex_bal
	0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, // l_playfieldSampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x35, 0x37, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, // er, (_1057 - flo
	0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, // at2(_mtl_u.w_h_d
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, // isableLighting.x
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // , 0.0)));.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x32, 0x31, 0x38, 0x20, 0x3d, //   float4 _1218 =
	0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, //  tex_ball_playfi
	0x65, 0x6c, 0x64, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, // eld.sample(tex_b
	0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, // all_playfieldSam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x35, 0x37, 0x20, 0x2b, 0x20, 0x66, // pler, (_1057 + f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // loat2(0.0, _mtl_
	0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, // u.w_h_disableLig
	0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // hting.y)));.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x32, 0x32, 0x37, //     float4 _1227
	0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, //  = tex_ball_play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, // field.sample(tex
	0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, // _ball_playfieldS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x35, 0x37, 0x20, 0x2d, // ampler, (_1057 -
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x6d, 0x74, //  float2(0.0, _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // l_u.w_h_disableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // ighting.y)));.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, //       float3 _16
	0x36, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, // 67;.        if (
	0x28, 0x21, 0x28, 0x28, 0x28, 0x28, 0x5f, 0x31, 0x30, 0x35, 0x37, 0x2e, 0x78, 0x20, 0x3c, 0x20, // (!((((_1057.x < 
	0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x35, 0x37, 0x2e, 0x78, // 0.0) || (_1057.x
	0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x30, //  > 1.0)) || (_10
	0x35, 0x37, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, // 57.y < 0.0)) || 
	0x28, 0x5f, 0x31, 0x30, 0x35, 0x37, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, // (_1057.y > 1.0))
	0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x21, 0x28, 0x5f, 0x31, 0x30, 0x33, 0x33, 0x20, 0x3c, 0x3d, // ) && (!(_1033 <=
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  0.0))).        
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, // {.            _1
	0x36, 0x36, 0x37, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x31, 0x30, 0x31, 0x35, 0x2c, // 667 = mix(_1015,
	0x20, 0x28, 0x28, 0x28, 0x5f, 0x31, 0x32, 0x30, 0x30, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, //  (((_1200.xyz + 
	0x5f, 0x31, 0x32, 0x30, 0x39, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x32, // _1209.xyz) + _12
	0x31, 0x38, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x32, 0x32, 0x37, 0x2e, // 18.xyz) + _1227.
	0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // xyz) * 0.25, flo
	0x61, 0x74, 0x33, 0x28, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, // at3(smoothstep(0
	0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x35, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x35, 0x39, // .0, 0.1500000059
	0x36, 0x30, 0x34, 0x36, 0x34, 0x34, 0x37, 0x37, 0x35, 0x33, 0x39, 0x30, 0x36, 0x32, 0x35, 0x2c, // 604644775390625,
	0x20, 0x5f, 0x31, 0x30, 0x32, 0x32, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, //  _1022) * _mtl_u
	0x2e, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, // .invTableRes_ref
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // lection.z));.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, //      }.        e
	0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, // lse.        {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x37, 0x20, //           _1667 
	0x3d, 0x20, 0x5f, 0x31, 0x30, 0x31, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // = _1015;.       
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  }.        float
	0x33, 0x20, 0x5f, 0x31, 0x31, 0x32, 0x36, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, // 3 _1126 = fast::
	0x6d, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x36, 0x36, 0x37, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // min(_1667, float
	0x33, 0x28, 0x31, 0x35, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 3(15.0));.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x31, 0x33, 0x30, 0x20, 0x3d, //   float3 _1130 =
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, //  _mtl_u.cBase_Al
	0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x37, 0x35, 0x30, // pha.xyz * 0.0750
	0x30, 0x30, 0x30, 0x30, 0x32, 0x39, 0x38, 0x30, 0x32, 0x33, 0x32, 0x32, 0x33, 0x38, 0x37, 0x36, // 0000298023223876
	0x39, 0x35, 0x33, 0x31, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 953125;.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x31, 0x33, 0x33, 0x20, 0x3d, 0x20, 0x66, // float3 _1133 = f
	0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x31, 0x33, 0x30, 0x20, 0x2a, // ast::max(_1130 *
	0x20, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x31, //  2.0, float3(0.1
	0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x34, 0x39, 0x30, 0x31, 0x31, 0x36, 0x31, 0x31, // 0000000149011611
	0x39, 0x33, 0x38, 0x34, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // 9384765625));.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x31, //       float3 _11
	0x33, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x31, 0x32, 0x36, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, // 38 = _1126 * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, // l_u.cBase_Alpha.
	0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // xyz;.        flo
	0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x34, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, // at _1244 = fast:
	0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x31, 0x33, 0x30, 0x2e, 0x78, 0x2c, 0x20, 0x66, 0x61, // :max(_1130.x, fa
	0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x31, 0x33, 0x30, 0x2e, 0x79, 0x2c, // st::max(_1130.y,
	0x20, 0x5f, 0x31, 0x31, 0x33, 0x30, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  _1130.z));.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x35, 0x32, 0x20, //     float _1252 
	0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x31, 0x33, // = fast::max(_113
	0x33, 0x2e, 0x78, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, // 3.x, fast::max(_
	0x31, 0x31, 0x33, 0x33, 0x2e, 0x79, 0x2c, 0x20, 0x5f, 0x31, 0x31, 0x33, 0x33, 0x2e, 0x7a, 0x29, // 1133.y, _1133.z)
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // );.        float
	0x20, 0x5f, 0x31, 0x32, 0x36, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x34, 0x34, 0x20, 0x2b, //  _1260 = _1244 +
	0x20, 0x5f, 0x31, 0x32, 0x35, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1252;.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x30, 0x3b, 0x0a, 0x20, 0x20, // float3 _1670;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, //       float3 _16
	0x38, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, // 81;.        if (
	0x5f, 0x31, 0x32, 0x36, 0x30, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, // _1260 > 1.0).   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x36, 0x35, 0x20, 0x3d, //    float _1265 =
	0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x5f, 0x31, 0x32, 0x36, 0x30, 0x3b, 0x0a, 0x20, 0x20, //  1.0 / _1260;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x31, 0x20, //           _1681 
	0x3d, 0x20, 0x5f, 0x31, 0x31, 0x33, 0x33, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x32, 0x36, 0x35, 0x3b, // = _1133 * _1265;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, // .            _16
	0x37, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x31, 0x33, 0x30, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x32, // 70 = _1130 * _12
	0x36, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, // 65;.        }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //       else.     
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x5f, 0x31, 0x36, 0x38, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x31, 0x33, 0x33, 0x3b, 0x0a, //  _1681 = _1133;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, 0x37, //             _167
	0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x31, 0x33, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 0 = _1130;.     
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, //    }.        flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // at3 _1676;.     
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x74, 0x72, 0x75, 0x65, 0x20, 0x26, 0x26, 0x20, //    if ((true && 
	0x28, 0x5f, 0x31, 0x32, 0x34, 0x34, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, // (_1244 > 0.0)) |
	0x7c, 0x20, 0x28, 0x5f, 0x31, 0x32, 0x35, 0x32, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // | (_1252 > 0.0))
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .        {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, //        float3 _1
	0x36, 0x37, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 677;.           
	0x20, 0x5f, 0x31, 0x36, 0x37, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, //  _1677 = float3(
	0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0.0);.          
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x32, 0x39, 0x35, 0x3b, 0x0a, //   float3 _1295;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, //             for 
	0x28, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x38, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, // (int _1668 = 0; 
	0x5f, 0x31, 0x36, 0x36, 0x38, 0x20, 0x3c, 0x20, 0x31, 0x30, 0x3b, 0x20, 0x5f, 0x31, 0x36, 0x37, // _1668 < 10; _167
	0x37, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x39, 0x35, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x38, // 7 = _1295, _1668
	0x2b, 0x2b, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ++).            
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x35, 0x3b, 0x0a, //   float3 _1685;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // do.             
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, //          float3 
	0x5f, 0x31, 0x33, 0x35, 0x39, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // _1359 = (_mtl_u.
	0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // matView * float4
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, // (_mtl_u.ballLigh
	0x74, 0x50, 0x6f, 0x73, 0x5b, 0x5f, 0x31, 0x36, 0x36, 0x38, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, // tPos[_1668].xyz,
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x69, 0x6e, 0x2e, //  1.0)).xyz - in.
	0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // v_worldPos;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x33, 0x36, 0x31, 0x20, 0x3d, 0x20, 0x66, // float3 _1361 = f
	0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, // ast::normalize(_
	0x31, 0x33, 0x35, 0x39, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1359);.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x20, 0x5f, 0x31, 0x33, 0x36, 0x33, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x39, 0x35, //  _1363 = dot(_95
	0x32, 0x2c, 0x20, 0x5f, 0x31, 0x33, 0x36, 0x31, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 2, _1361);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, // loat3 _1682;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x69, 0x66, 0x20, 0x28, 0x74, 0x72, 0x75, 0x65, 0x20, 0x26, 0x26, 0x20, 0x28, 0x28, 0x5f, //  if (true && ((_
	0x31, 0x33, 0x36, 0x33, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x52, 0x6f, // 1363 + _mtl_u.Ro
	0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, // ughness_WrapL_Ed
	0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x29, 0x20, // ge_Thickness.y) 
	0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // > 0.0)).        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, //             {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x37, //       float _137
	0x38, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 8 = 1.0 + _mtl_u
	0x2e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, // .Roughness_WrapL
	0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, // _Edge_Thickness.
	0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // y;.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x32, //            _1682
	0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x30, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x33, //  = _1670 * ((_13
	0x36, 0x33, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x67, // 63 + _mtl_u.Roug
	0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, // hness_WrapL_Edge
	0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x29, 0x20, 0x2f, 0x20, // _Thickness.y) / 
	0x28, 0x5f, 0x31, 0x33, 0x37, 0x38, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x33, 0x37, 0x38, 0x29, 0x29, // (_1378 * _1378))
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, //             else
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //                _
	0x31, 0x36, 0x38, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, // 1682 = float3(0.
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0);.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // oat3 _1683;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x69, 0x66, 0x20, 0x28, 0x5f, 0x31, 0x33, 0x36, 0x33, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, // if (_1363 > 0.0)
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x33, 0x38, 0x38, 0x20, 0x3d, 0x20, 0x66, 0x61, // loat3 _1388 = fa
	0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x31, // st::normalize(_1
	0x33, 0x36, 0x31, 0x20, 0x2b, 0x20, 0x5f, 0x39, 0x35, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 361 + _950);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x39, 0x30, //      float _1390
	0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x39, 0x35, 0x32, 0x2c, 0x20, 0x5f, 0x31, 0x33, //  = dot(_952, _13
	0x38, 0x38, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 88);.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, //              flo
	0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x39, 0x33, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, // at _1393 = dot(_
	0x31, 0x33, 0x36, 0x31, 0x2c, 0x20, 0x5f, 0x31, 0x33, 0x38, 0x38, 0x29, 0x3b, 0x0a, 0x20, 0x20, // 1361, _1388);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x39, //       float _139
	0x35, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x39, 0x35, 0x30, 0x2c, 0x20, 0x5f, 0x31, // 5 = dot(_950, _1
	0x33, 0x38, 0x38, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 388);.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // oat3 _1684;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x31, 0x33, 0x39, 0x30, 0x20, //     if (((_1390 
	0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x33, 0x39, 0x33, // > 0.0) && (_1393
	0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x33, //  > 0.0)) && (_13
	0x39, 0x35, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 95 > 0.0)).     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x5f, 0x31, 0x36, 0x38, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x32, 0x20, 0x2b, //  _1684 = _1682 +
	0x20, 0x28, 0x28, 0x5f, 0x31, 0x36, 0x38, 0x31, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x66, 0x6c, 0x6f, //  ((_1681 + ((flo
	0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x31, // at3(1.0) - _1681
	0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, // ) * powr(1.0 - _
	0x31, 0x33, 0x39, 0x33, 0x2c, 0x20, 0x35, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, // 1393, 5.0))) * (
	0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, // ((_mtl_u.Roughne
	0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, // ss_WrapL_Edge_Th
	0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // ickness.x + 1.0)
	0x20, 0x2f, 0x20, 0x28, 0x38, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x33, 0x39, 0x35, 0x29, //  / (8.0 * _1395)
	0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x5f, 0x31, 0x33, 0x39, 0x30, 0x2c, 0x20, // ) * powr(_1390, 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, // _mtl_u.Roughness
	0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, // _WrapL_Edge_Thic
	0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // kness.x)));.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     }.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, //               el
	0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // se.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //            {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x34, 0x20, 0x3d, //          _1684 =
	0x20, 0x5f, 0x31, 0x36, 0x38, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1682;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // }.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x33, 0x20, //           _1683 
	0x3d, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // = _1684;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, //              }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    else.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, //             {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x31, //       _1683 = _1
	0x36, 0x38, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 682;.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          }.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, 0x32, 0x31, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // loat _1421 = dot
	0x28, 0x5f, 0x31, 0x33, 0x35, 0x39, 0x2c, 0x20, 0x5f, 0x31, 0x33, 0x35, 0x39, 0x29, 0x3b, 0x0a, // (_1359, _1359);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, 0x33, 0x38, 0x20, //     float _1438 
	0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x31, 0x2e, // = fast::clamp(1.
	0x30, 0x20, 0x2d, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x34, 0x32, 0x31, 0x20, 0x2a, 0x20, 0x5f, 0x31, // 0 - ((_1421 * _1
	0x34, 0x32, 0x31, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 421) / (((_mtl_u
	0x2e, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, // .cAmbient_LightR
	0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // ange.w * _mtl_u.
	0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, // cAmbient_LightRa
	0x6e, 0x67, 0x65, 0x2e, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // nge.w) * _mtl_u.
	0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, // cAmbient_LightRa
	0x6e, 0x67, 0x65, 0x2e, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // nge.w) * _mtl_u.
	0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, // cAmbient_LightRa
	0x6e, 0x67, 0x65, 0x2e, 0x77, 0x29, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, // nge.w)), 0.0, 1.
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0);.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x31, 0x34, 0x36, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x36, 0x38, 0x31, // 1462 = fma(_1681
	0x20, 0x2b, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x30, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, //  + _1670, _mtl_u
	0x2e, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, // .cAmbient_LightR
	0x61, 0x6e, 0x67, 0x65, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x36, 0x38, 0x33, // ange.xyz, (_1683
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, //  * _mtl_u.ballLi
	0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x5f, 0x31, 0x36, 0x36, // ghtEmission[_166
	0x38, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x34, 0x33, // 8].xyz) * ((_143
	0x38, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x33, 0x38, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x31, // 8 * _1438) / (_1
	0x34, 0x32, 0x31, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // 421 + 1.0)));.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x66, 0x44, 0x69, //   if (_mtl_u.fDi
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, // sableLighting_to
	0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, // p_below.x != 0.0
	0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ).              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x5f, 0x31, 0x36, 0x38, 0x35, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x31, 0x34, 0x36, // _1685 = mix(_146
	0x32, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // 2, _1670, float3
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // (_mtl_u.fDisable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, // Lighting_top_bel
	0x6f, 0x77, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ow.x));.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // break;.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, //            }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  else.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //           {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x34, 0x36, //     _1685 = _146
	0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 2;.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, //            break
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, //             brea
	0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, // k; // unreachabl
	0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, // e workaround.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, //              } w
	0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // hile(false);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x32, //              _12
	0x39, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x37, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x36, // 95 = _1677 + _16
	0x38, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 85;.            
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, // }.            _1
	0x36, 0x37, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 676 = _1677;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, //      }.        e
	0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, // lse.        {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x36, 0x20, //           _1676 
	0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, // = float3(0.0);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        }.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x38, 0x3b, 0x0a, 0x20, //  float3 _1678;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x74, 0x72, 0x75, 0x65, 0x20, //        if (true 
	0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x32, 0x34, 0x34, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, // && (_1244 > 0.0)
	0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ).        {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x31, 0x33, 0x31, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, // 1315 = fast::nor
	0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, // malize((_mtl_u.m
	0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, // atView * float4(
	0x5f, 0x39, 0x35, 0x32, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, // _952, 0.0)).xyz)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // ;.            fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x31, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x33, 0x31, // oat _1511 = _131
	0x35, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 5.y;.           
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x31, 0x32, 0x20, 0x3d, 0x20, 0x5f, //  float _1512 = _
	0x31, 0x33, 0x31, 0x35, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1315.x;.        
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x32, 0x3b, //     float _1672;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, // .            do.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, //             {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x32, 0x37, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, // oat _1527 = abs(
	0x5f, 0x31, 0x35, 0x31, 0x31, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _1511);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, //         float _1
	0x35, 0x32, 0x38, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x31, 0x35, 0x31, 0x32, 0x29, // 528 = abs(_1512)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x35, 0x32, 0x38, 0x20, 0x3c, 0x3d, 0x20, //   if ((_1528 <= 
	0x36, 0x2e, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x65, 0x2d, 0x30, 0x35, 0x29, // 6.103515625e-05)
	0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x32, 0x37, 0x20, 0x3c, 0x3d, 0x20, 0x36, 0x2e, //  && (_1527 <= 6.
	0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x29, 0x0a, // 103515625e-05)).
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x32, 0x20, 0x3d, 0x20, 0x30, 0x2e, //       _1672 = 0.
	0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0;.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, //        break;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, //               }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x34, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x5f, // float _1542 = (_
	0x31, 0x35, 0x32, 0x38, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x35, 0x32, 0x37, 0x29, 0x20, 0x2f, 0x20, // 1528 - _1527) / 
	0x28, 0x5f, 0x31, 0x35, 0x32, 0x38, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x35, 0x32, 0x37, 0x29, 0x3b, // (_1528 + _1527);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x35, 0x36, 0x20, 0x3d, 0x20, 0x66, //  float _1556 = f
	0x6d, 0x61, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x30, 0x2e, 0x30, 0x33, 0x33, 0x37, 0x31, 0x39, 0x38, // ma(fma(0.0337198
	0x33, 0x37, 0x36, 0x36, 0x35, 0x35, 0x35, 0x37, 0x38, 0x36, 0x31, 0x33, 0x32, 0x38, 0x31, 0x32, // 3766555786132812
	0x35, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x35, 0x34, 0x32, 0x2c, 0x20, 0x5f, 0x31, 0x35, 0x34, 0x32, // 5 * _1542, _1542
	0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x37, 0x31, 0x33, 0x34, 0x34, 0x37, 0x33, 0x33, 0x32, // , -0.15713447332
	0x33, 0x38, 0x32, 0x32, 0x30, 0x32, 0x31, 0x34, 0x38, 0x34, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, // 3822021484375), 
	0x28, 0x5f, 0x31, 0x35, 0x31, 0x32, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, // (_1512 < 0.0) ? 
	0x28, 0x2d, 0x5f, 0x31, 0x35, 0x34, 0x32, 0x29, 0x20, 0x3a, 0x20, 0x5f, 0x31, 0x35, 0x34, 0x32, // (-_1542) : _1542
	0x2c, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x31, 0x32, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, // , (_1512 < 0.0) 
	0x3f, 0x20, 0x30, 0x2e, 0x33, 0x37, 0x35, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x31, 0x32, 0x35, 0x29, // ? 0.375 : 0.125)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x31, 0x31, //   _1672 = (_1511
	0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x2d, 0x5f, 0x31, 0x35, 0x35, //  < 0.0) ? (-_155
	0x36, 0x29, 0x20, 0x3a, 0x20, 0x5f, 0x31, 0x35, 0x35, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 6) : _1556;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, //             brea
	0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, // k;.            }
	0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, //  while(false);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x20, 0x5f, 0x31, 0x35, 0x31, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x33, 0x31, 0x35, 0x2e, 0x7a, //  _1515 = _1315.z
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // ;.            fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // oat _1673;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        do.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, //         float _1
	0x35, 0x37, 0x31, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x31, 0x35, 0x31, 0x35, 0x29, // 571 = abs(_1515)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x35, //   if ((1.0 - _15
	0x37, 0x31, 0x29, 0x20, 0x3c, 0x3d, 0x20, 0x36, 0x2e, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, // 71) <= 6.1035156
	0x32, 0x35, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 25e-05).        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, //               _1
	0x36, 0x37, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x31, 0x35, 0x20, 0x3e, 0x3d, 0x20, // 673 = (_1515 >= 
	0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x30, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x30, // 0.0) ? 0.0 : 1.0
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, //       break;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, //              }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x31, 0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, // loat _1581 = fma
	0x28, 0x2d, 0x30, 0x2e, 0x30, 0x34, 0x39, 0x36, 0x34, 0x37, 0x34, 0x32, 0x38, 0x30, 0x39, 0x35, // (-0.049647428095
	0x33, 0x34, 0x30, 0x37, 0x32, 0x38, 0x37, 0x35, 0x39, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x2c, // 340728759765625,
	0x20, 0x5f, 0x31, 0x35, 0x37, 0x31, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x39, 0x38, 0x30, 0x34, 0x39, //  _1571, 0.498049
	0x39, 0x31, 0x34, 0x38, 0x33, 0x36, 0x38, 0x38, 0x33, 0x35, 0x34, 0x34, 0x39, 0x32, 0x31, 0x38, // 9148368835449218
	0x37, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 75);.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x34, //      float _1584
	0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, //  = sqrt(1.0 - _1
	0x35, 0x37, 0x31, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 571);.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x5f, //       _1673 = (_
	0x31, 0x35, 0x31, 0x35, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, // 1515 >= 0.0) ? (
	0x5f, 0x31, 0x35, 0x38, 0x31, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x34, 0x29, 0x20, 0x3a, // _1581 * _1584) :
	0x20, 0x66, 0x6d, 0x61, 0x28, 0x2d, 0x5f, 0x31, 0x35, 0x38, 0x31, 0x2c, 0x20, 0x5f, 0x31, 0x35, //  fma(-_1581, _15
	0x38, 0x34, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 84, 1.0);.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, //           break;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, // .            } w
	0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // hile(false);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x38, 0x20, 0x3d, //          _1678 =
	0x20, 0x5f, 0x31, 0x36, 0x37, 0x36, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x36, 0x37, 0x30, //  _1676 + ((_1670
	0x20, 0x2a, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, //  * tex_diffuse_e
	0x6e, 0x76, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, // nv.sample(tex_di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ffuse_envSampler
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x5f, // , float2(0.5 + _
	0x31, 0x36, 0x37, 0x32, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x33, 0x29, 0x2c, 0x20, 0x6c, 0x65, // 1672, _1673), le
	0x76, 0x65, 0x6c, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, // vel(0.0)).xyz) *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, //  _mtl_u.fenvEmis
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, // sionScale_TexWid
	0x74, 0x68, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, // th.x);.        }
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, // .        else.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x37, //     _1678 = _167
	0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, // 6;.        }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x37, //      float3 _167
	0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x66, // 9;.        if (f
	0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x31, 0x33, 0x38, 0x2e, 0x78, // ast::max(_1138.x
	0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x31, 0x33, // , fast::max(_113
	0x38, 0x2e, 0x79, 0x2c, 0x20, 0x5f, 0x31, 0x31, 0x33, 0x38, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x3e, // 8.y, _1138.z)) >
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, //  0.0).        {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, 0x37, //             _167
	0x39, 0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x31, 0x32, 0x36, 0x2c, 0x20, 0x5f, // 9 = fma(_1126, _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, // mtl_u.cBase_Alph
	0x61, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x38, 0x29, 0x3b, 0x0a, 0x20, // a.xyz, _1678);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        }.       
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, //  else.        {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, 0x37, //             _167
	0x39, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 9 = _1678;.     
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, //    }.        _16
	0x39, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x36, 0x37, // 94 = float4(_167
	0x39, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, // 9, _mtl_u.cBase_
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // Alpha.w);.      
	0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, //   break;.    } w
	0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // hile(false);.   
	0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, //  out.bgfx_FragDa
	0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x39, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, // ta0 = _1694;.   
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, //  return out;.}..
	0x00, 0x00, 0x10, 0x03,                                                                         // ....
};
static const uint8_t fs_ball_spherical_decal_essl[14083] =
{
	0x46, 0x53, 0x48, 0x0b, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x36, // FSH....l.......6
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // s.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, // arying in.precis
	0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3b, // ion highp float;
	0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // .precision highp
	0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, //  int;.#define sh
	0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adow2D(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //  _coord) texture
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // (_sampler, _coor
	0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, // d).#define shado
	0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // w2DProj(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // eProj(_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x6f, 0x75, 0x74, 0x20, 0x6d, 0x65, 0x64, 0x69, // _coord).out medi
	0x75, 0x6d, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, // ump vec4 bgfx_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // agColor;.varying
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, //  vec3 v_normal;.
	0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, // varying vec2 v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // excoord0;.varyin
	0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, // g vec3 v_worldPo
	0x73, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, // s;.vec3 instMul(
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, // vec3 _vec, mat3 
	0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, // _mtx) { return (
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, //  (_vec) * (_mtx)
	0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, //  ); }.vec3 instM
	0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, // ul(mat3 _mtx, ve
	0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // c3 _vec) { retur
	0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, // n ( (_mtx) * (_v
	0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, // ec) ); }.vec4 in
	0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, // stMul(vec4 _vec,
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, //  mat4 _mtx) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, // turn ( (_vec) * 
	0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // (_mtx) ); }.vec4
	0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, //  instMul(mat4 _m
	0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, // tx, vec4 _vec) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, //  return ( (_mtx)
	0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, //  * (_vec) ); }.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // loat rcp(float _
	0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, // a) { return 1.0/
	0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, // _a; }.vec2 rcp(v
	0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec2 _a) { return
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, //  vec2(1.0)/_a; }
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // .vec3 rcp(vec3 _
	0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, // a) { return vec3
	0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // (1.0)/_a; }.vec4
	0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, //  rcp(vec4 _a) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, // return vec4(1.0)
	0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, // /_a; }.vec2 vec2
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, // _splat(float _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, //  { return vec2(_
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // x, _x); }.vec3 v
	0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ec3_splat(float 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _x) { return vec
	0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // 3(_x, _x, _x); }
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // .vec4 vec4_splat
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // (float _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // urn vec4(_x, _x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, //  _x, _x); }.uvec
	0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, // 2 uvec2_splat(ui
	0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // nt _x) { return 
	0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // uvec2(_x, _x); }
	0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, // .uvec3 uvec3_spl
	0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // at(uint _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // turn uvec3(_x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, // x, _x); }.uvec4 
	0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec4_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, //  _x) { return uv
	0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, // ec4(_x, _x, _x, 
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, // _x); }.mat4 mtxF
	0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, // romRows(vec4 _0,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, //  vec4 _1, vec4 _
	0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 2, vec4 _3).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, // turn transpose(m
	0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, // at4(_0, _1, _2, 
	0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, // _3) );.}.mat4 mt
	0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // xFromCols(vec4 _
	0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // 0, vec4 _1, vec4
	0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, //  _2, vec4 _3).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, // return mat4(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, // _1, _2, _3);.}.m
	0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, // at3 mtxFromRows(
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, // vec3 _0, vec3 _1
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // , vec3 _2).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, // urn transpose(ma
	0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, // t3(_0, _1, _2) )
	0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, // ;.}.mat3 mtxFrom
	0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, // Cols(vec3 _0, ve
	0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, // c3 _1, vec3 _2).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, // {.return mat3(_0
	0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, // , _1, _2);.}.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, // form vec4 u_view
	0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // Rect;.uniform ve
	0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, // c4 u_viewTexel;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, // uniform mat4 u_v
	0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, // iew;.uniform mat
	0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // 4 u_invView;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, // form mat4 u_proj
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // _invProj;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, // m mat4 u_viewPro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, // u_invViewProj;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, // niform mat4 u_mo
	0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // del[32];.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, //  mat4 u_modelVie
	0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // w;.uniform mat4 
	0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, // u_modelViewProj;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, // .uniform vec4 u_
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // alphaRef4;.float
	0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  sqr(const float
	0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, //  v).{.return v*v
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, // ;.}.vec2 sqr(con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // st vec2 v).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // urn v*v;.}.vec3 
	0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // sqr(const vec3 v
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, // ).{.return v*v;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x63, 0x6f, // }.vec3 mul_w1(co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // nst vec3 v, cons
	0x74, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // t mat4 m).{.retu
	0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // rn v.x*m[0].xyz 
	0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // + (v.y*m[1].xyz 
	0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // + (v.z*m[2].xyz 
	0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // + m[3].xyz));.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, // float acos_appro
	0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // x_divPI(const fl
	0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // oat v).{.const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, // loat x = abs(v);
	0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, // .if(1. - x <= 0.
	0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, // 00006103515625).
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, // return (v >= 0.)
	0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, //  ? 0. : 1.;.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, // t float res = ((
	0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, // -0.155972/3.1415
	0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, // 9265358979323846
	0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, // 26433832795) * x
	0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, //  + (1.56467/3.14
	0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, // 1592653589793238
	0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, // 4626433832795) )
	0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, //  * sqrt(1. - x);
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, // .return (v >= 0.
	0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, // ) ? res : 1. - r
	0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, // es;.}.float atan
	0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, // 2_approx_div2PI(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x63, // const float y, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, // onst float x).{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, // const float abs_
	0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // y = abs(y);.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, // t float abs_x = 
	0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, // abs(x);.if(abs_x
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, //  <= 0.0000610351
	0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, // 5625 && abs_y <=
	0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, //  0.0000610351562
	0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, // 5).return 0.;.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, // nst float r = (a
	0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, // bs_x - abs_y) / 
	0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, // (abs_x + abs_y);
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, // .const float ang
	0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // le = ((x < 0.) ?
	0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, //  (3./8.) : (1./8
	0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, // .)).+ (0.211868 
	0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, // /(2.*3.141592653
	0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, // 5897932384626433
	0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, // 832795) * r * r 
	0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, // - 0.987305 /(2.*
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, // 5)) * ((x < 0.) 
	0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // ? -r : r);.retur
	0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, // n (y < 0.) ? -an
	0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // gle : angle;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, // loat asin_approx
	0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // _divPI(const flo
	0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // at v).{.const fl
	0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, // oat x = abs(v);.
	0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, // if(1. - x <= 0.0
	0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, // 0006103515625).r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, // eturn (v >= 0.) 
	0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x63, 0x6f, // ? 0.5 : -0.5;.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, // nst float res = 
	0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, // ((-0.155972/3.14
	0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, // 1592653589793238
	0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, // 4626433832795) *
	0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, //  x + (1.56467/3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, //  ) * sqrt(1. - x
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, // );.return (v >= 
	0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, // 0.) ? 0.5 - res 
	0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, // : -0.5 + res;.}.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, // vec2 ray_to_equi
	0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x63, // rectangular_uv(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, // onst vec3 ray).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, // .return vec2(.0.
	0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, // 5 + atan2_approx
	0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, // _div2PI(ray.y, r
	0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, // ay.x),.acos_appr
	0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, // ox_divPI(ray.z))
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, // ;.}.float InvsRG
	0x42, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, // B(const float co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // lor).{.if (color
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, //  <= 0.04045).ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, // urn color * (1.0
	0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, // /12.92);.else.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // turn pow(color *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, //  (1.0/1.055) + (
	0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, // 0.055/1.055), 2.
	0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, // 4);.}.float InvR
	0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ec709(const floa
	0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, // t color).{.if (c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, // olor <= 0.081).r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, // eturn color * (1
	0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, // .0/4.5);.else.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // turn pow(color *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, //  (1.0/1.099) + (
	0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, // 0.099/1.099), 1.
	0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0/0.45);.}.float
	0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  InvGamma(const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // float color).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, // eturn InvsRGB(co
	0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, // lor);.}.vec3 Inv
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, // Gamma(const vec3
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  color).{.return
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, //  vec3(InvGamma(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, // olor.x),InvGamma
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // (color.y),InvGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // ma(color.z));.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, // vec3 InvToneMap(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // const vec3 color
	0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ).{.const float 
	0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, // inv_2bh = 0.5/0.
	0x32, 0x35, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 25;.const float 
	0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, // bh = 4.0*0.25 - 
	0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, // 2.0;.return (col
	0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // or - 1.0 + sqrt(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, // color*(color + b
	0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, // h) + 1.0))*inv_2
	0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, // bh;.}.float sRGB
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, // (const float f).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, // {.float s;.if (f
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, //  <= 0.0031308).s
	0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, //  = 12.92 * f;.el
	0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, // se.s = 1.055 * p
	0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, // ow(f, 1.0/2.4) -
	0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, //  0.055;.return s
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, // ;.}.float Rec709
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, // (const float f).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, // {.float s;.if (f
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, //  <= 0.018).s = 4
	0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, // .5 * f;.else.s =
	0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, //  1.099 * pow(f, 
	0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, // 0.45) - 0.099;.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // eturn s;.}.float
	0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, //  FBGamma(const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // loat color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // turn sRGB(color)
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, // ;.}.vec2 FBGamma
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // (const vec2 colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, // r).{.return vec2
	0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, // (FBGamma(color.x
	0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // ),FBGamma(color.
	0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, // y));.}.vec3 FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // mma(const vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // olor).{.return v
	0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // ec3(FBGamma(colo
	0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, // r.x),FBGamma(col
	0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, // or.y),FBGamma(co
	0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // lor.z));.}.float
	0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, //  FBToneMap(const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  float l).{.retu
	0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, // rn l * ((l*0.25 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, // + 1.0) / (l + 1.
	0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, // 0));.}.vec2 FBTo
	0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, // neMap(const vec2
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  color).{.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, // float l = dot(co
	0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, // lor,vec2(0.17620
	0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, // 4+0.0108109*0.5,
	0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, // 0.812985+0.01081
	0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 09*0.5));.return
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, //  color * ((l*0.2
	0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, // 5 + 1.0) / (l + 
	0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, // 1.0));.}.vec3 FB
	0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // ToneMap(const ve
	0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // c3 color).{.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, // t float l = dot(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, // color,vec3(0.176
	0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, // 204,0.812985,0.0
	0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 108109));.return
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, //  color * ((l*0.2
	0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, // 5 + 1.0) / (l + 
	0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, // 1.0));.}.vec4 Ad
	0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // ditive(const vec
	0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // 4 cBase, const v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // ec4 cBlend, cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, // t float percent)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, // .{.return cBase 
	0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, // + cBlend*percent
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, // ;.}.vec3 Screen 
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, // (const vec3 cBas
	0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, // e, const vec3 cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, // lend).{.return 1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, // .0 - (1.0 - cBas
	0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, // e) * (1.0 - cBle
	0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, // nd);.}.vec4 Scre
	0x65, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // en (const vec4 c
	0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, // Base, const vec4
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  cBlend).{.retur
	0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, // n 1.0 - (1.0 - c
	0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, // Base) * (1.0 - c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, // Blend);.}.vec3 S
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // creenHDR (const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // vec3 cBase, cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, // t vec3 cBlend).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, // .return max(1.0 
	0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, // - (1.0 - cBase) 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // * (1.0 - cBlend)
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, // , vec3(0.,0.,0.)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, // );.}.vec4 Screen
	0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // HDR (const vec4 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // cBase, const vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 4 cBlend).{.retu
	0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, // rn max(1.0 - (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // 0 - cBase) * (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, // 0 - cBlend), vec
	0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, // 4(0.,0.,0.,0.));
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, // .}.vec4 Multiply
	0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, //  (const vec4 cBa
	0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // se, const vec4 c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // Blend, const flo
	0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // at percent).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, // turn cBase * cBl
	0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // end*percent;.}.v
	0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x63, 0x6f, 0x6e, // ec4 Overlay (con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, // st vec4 cBase, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // onst vec4 cBlend
	0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, // ).{.vec4 cNew = 
	0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, // step(0.5, cBase)
	0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, // ;.cNew = mix(cBa
	0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, // se*cBlend*2.0, 1
	0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, // .0-2.0*(1.0-cBas
	0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, // e)*(1.0-cBlend),
	0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, //  cNew);.return c
	0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, // New;.}.vec4 Over
	0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // layHDR (const ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // c4 cBase, const 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, // vec4 cBlend).{.v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, // ec4 cNew = step(
	0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, // 0.5, cBase);.cNe
	0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, // w = max(mix(cBas
	0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, // e*cBlend*2.0, 1.
	0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, // 0-2.0*(1.0-cBase
	0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, // )*(1.0-cBlend), 
	0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, // cNew), vec4(0.,0
	0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // .,0.,0.));.retur
	0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // n cNew;.}.vec3 c
	0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, // os_hemisphere_sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, // mple(const vec2 
	0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // t).{.const float
	0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, //  phi = t.y * (2.
	0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, // 0*3.141592653589
	0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, // 7932384626433832
	0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 795);.const floa
	0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, // t cosTheta = sqr
	0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x63, 0x6f, // t(1.0 - t.x);.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, // nst float sinThe
	0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, // ta = sqrt(t.x);.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x73, 0x69, 0x6e, // float sp,cp;.sin
	0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x2c, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x29, 0x3b, 0x0a, // cos(phi,sp,cp);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, // return vec3(cp *
	0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, //  sinTheta, cosTh
	0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, // eta, sp * sinThe
	0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, // ta);.}.vec3 rota
	0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, // te_to_vector_upp
	0x65, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, // er(const vec3 ve
	0x63, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, // c, const vec3 no
	0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // rmal).{.if(norma
	0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, // l.y > -0.99999).
	0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, // {.const float h 
	0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // = 1.0/(1.0+norma
	0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // l.y);.const floa
	0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // t hz = h*normal.
	0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, // z;.const float h
	0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // zx = hz*normal.x
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, // ;.return vec3(.v
	0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, // ec.x * (normal.y
	0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, // +hz*normal.z) + 
	0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // vec.y * normal.x
	0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, //  - vec.z * hzx,.
	0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, // vec.y * normal.y
	0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, //  - vec.x * norma
	0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, // l.x - vec.z * no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, // rmal.z,.vec.y * 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, // normal.z - vec.x
	0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, //  * hzx + vec.z *
	0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, //  (normal.y+h*nor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, // mal.x*normal.x))
	0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // ;.}.else return 
	0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // -vec;.}.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, // mat4 matView;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, // iform mat4 matWo
	0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // rldView;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, //  mat4 matWorldVi
	0x65, 0x77, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // ewInverse;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, // rm mat4 matWorld
	0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // ViewProj;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, // m mat4 matProj;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, // uniform sampler2
	0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // D tex_ball_color
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ;.uniform sample
	0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // r2D tex_env;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, // form sampler2D t
	0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x3b, 0x0a, // ex_diffuse_env;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, // uniform sampler2
	0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, // D tex_ball_decal
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ;.uniform sample
	0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, // r2D tex_ball_pla
	0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // yfield;.uniform 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x68, 0x61, // vec4 u_basic_sha
	0x64, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // de_mode;.uniform
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, //  vec4 ballLightP
	0x6f, 0x73, 0x5b, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // os[2 + 8];.unifo
	0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, // rm vec4 ballLigh
	0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x5d, // tEmission[2 + 8]
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // ;.uniform vec4 c
	0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, // Ambient_LightRan
	0x67, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // ge;.uniform vec4
	0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, //  fenvEmissionSca
	0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // le_TexWidth;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, // form vec4 fDisab
	0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, // leLighting_top_b
	0x65, 0x6c, 0x6f, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // elow;.uniform ve
	0x63, 0x34, 0x20, 0x66, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x3b, 0x0a, // c4 fSceneScale;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, // uniform vec4 cBa
	0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // se_Alpha;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, // m vec4 Roughness
	0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, // _WrapL_Edge_Thic
	0x6b, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x47, 0x65, 0x6f, // kness;.float Geo
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x28, 0x63, 0x6f, // metricOpacity(co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, // nst float NdotV,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6c, 0x70, //  const float alp
	0x68, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ha, const float 
	0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // blending, const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, // float thickness)
	0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, // .{.const float x
	0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x29, 0x3b, 0x0a, 0x63, //  = abs(NdotV);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x20, 0x3d, 0x20, 0x62, // onst float g = b
	0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // lending * (1.0 -
	0x20, 0x28, 0x78, 0x20, 0x2f, 0x20, 0x28, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, //  (x / (x * (1.0 
	0x2d, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, 0x20, 0x2b, 0x20, 0x74, // - thickness) + t
	0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // hickness)));.ret
	0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2c, 0x20, 0x31, // urn mix(alpha, 1
	0x2e, 0x30, 0x2c, 0x20, 0x67, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, // .0, g);.}.vec3 F
	0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, 0x6b, 0x28, 0x63, 0x6f, // resnelSchlick(co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x2c, 0x20, 0x63, // nst vec3 spec, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, // onst float LdotH
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, // , const float ed
	0x67, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x70, 0x65, // ge).{.return spe
	0x63, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x65, // c + (vec3(edge,e
	0x64, 0x67, 0x65, 0x2c, 0x65, 0x64, 0x67, 0x65, 0x29, 0x20, 0x2d, 0x20, 0x73, 0x70, 0x65, 0x63, // dge,edge) - spec
	0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x4c, 0x64, // ) * pow(1.0 - Ld
	0x6f, 0x74, 0x48, 0x2c, 0x20, 0x35, 0x2e, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // otH, 5.);.}.vec3
	0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x63, 0x6f, //  DoPointLight(co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x63, 0x6f, // nst vec3 pos, co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // nst vec3 N, cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // t vec3 V, const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, // vec3 diffuse, co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, // nst vec3 glossy,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, //  const float edg
	0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, // e, const float g
	0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // lossyPower, cons
	0x74, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x62, // t int i, const b
	0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, // ool is_metal).{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, // const vec3 light
	0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, // Dir = ( ( (matVi
	0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x62, 0x61, 0x6c, 0x6c, // ew) * (vec4(ball
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, // LightPos[i].xyz,
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, //  1.0)) ) ).xyz -
	0x20, 0x70, 0x6f, 0x73, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, //  pos;.const vec3
	0x20, 0x4c, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x6c, //  L = normalize(l
	0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // ightDir);.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x3d, 0x20, 0x64, 0x6f, // float NdotL = do
	0x74, 0x28, 0x4e, 0x2c, 0x20, 0x4c, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4f, 0x75, // t(N, L);.vec3 Ou
	0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, // t = vec3(0.0,0.0
	0x2c, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, // ,0.0);.if (!is_m
	0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x2b, // etal && (NdotL +
	0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, //  Roughness_WrapL
	0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, // _Edge_Thickness.
	0x79, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x4f, 0x75, 0x74, 0x20, 0x3d, 0x20, // y > 0.0)).Out = 
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x4e, 0x64, 0x6f, 0x74, // diffuse * ((Ndot
	0x4c, 0x20, 0x2b, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, // L + Roughness_Wr
	0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, // apL_Edge_Thickne
	0x73, 0x73, 0x2e, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x73, 0x71, 0x72, 0x28, 0x31, 0x2e, 0x30, 0x2b, // ss.y) / sqr(1.0+
	0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, // Roughness_WrapL_
	0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, // Edge_Thickness.y
	0x29, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x3e, 0x20, // ));.if (NdotL > 
	0x30, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // 0.0).{.const vec
	0x33, 0x20, 0x48, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // 3 H = normalize(
	0x4c, 0x20, 0x2b, 0x20, 0x56, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // L + V);.const fl
	0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, // oat NdotH = dot(
	0x4e, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // N, H);.const flo
	0x61, 0x74, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4c, // at LdotH = dot(L
	0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // , H);.const floa
	0x74, 0x20, 0x56, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x56, 0x2c, // t VdotH = dot(V,
	0x20, 0x48, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x20, //  H);.if ((NdotH 
	0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x4c, 0x64, 0x6f, 0x74, 0x48, // > 0.0) && (LdotH
	0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x56, 0x64, 0x6f, 0x74, //  > 0.0) && (Vdot
	0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x4f, 0x75, 0x74, 0x20, 0x2b, 0x3d, // H > 0.0)).Out +=
	0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, 0x6b, 0x28, //  FresnelSchlick(
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x65, // glossy, LdotH, e
	0x64, 0x67, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, // dge) * (((glossy
	0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, // Power + 1.0) / (
	0x38, 0x2e, 0x30, 0x2a, 0x56, 0x64, 0x6f, 0x74, 0x48, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, // 8.0*VdotH)) * po
	0x77, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, // w(NdotH, glossyP
	0x6f, 0x77, 0x65, 0x72, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // ower));.}.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // float sqrl_light
	0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, // Dir = dot(lightD
	0x69, 0x72, 0x2c, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x29, 0x3b, 0x0a, 0x66, 0x6c, // ir,lightDir);.fl
	0x6f, 0x61, 0x74, 0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x3d, 0x20, 0x63, 0x6c, 0x61, // oat fAtten = cla
	0x6d, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, // mp(1.0 - sqrl_li
	0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2a, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, // ghtDir*sqrl_ligh
	0x74, 0x44, 0x69, 0x72, 0x2f, 0x28, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, // tDir/(cAmbient_L
	0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, // ightRange.w*cAmb
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, // ient_LightRange.
	0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, // w*cAmbient_Light
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, // Range.w*cAmbient
	0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x29, 0x2c, 0x20, // _LightRange.w), 
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x66, 0x41, 0x74, 0x74, 0x65, // 0.0, 1.0);.fAtte
	0x6e, 0x20, 0x3d, 0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x2a, 0x66, 0x41, 0x74, 0x74, 0x65, // n = fAtten*fAtte
	0x6e, 0x2f, 0x28, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, // n/(sqrl_lightDir
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x6d, //  + 1.0);.vec3 am
	0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x3b, 0x0a, // bient = glossy;.
	0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x61, // if (!is_metal).a
	0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x2b, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // mbient += diffus
	0x65, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x65, // e;.const vec3 re
	0x73, 0x75, 0x6c, 0x74, 0x20, 0x3d, 0x20, 0x4f, 0x75, 0x74, 0x20, 0x2a, 0x20, 0x62, 0x61, 0x6c, // sult = Out * bal
	0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x69, // lLightEmission[i
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x2b, // ].xyz * fAtten +
	0x20, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x2a, 0x20, 0x63, 0x41, 0x6d, 0x62, 0x69, //  ambient * cAmbi
	0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x78, // ent_LightRange.x
	0x79, 0x7a, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // yz;.if (fDisable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, // Lighting_top_bel
	0x6f, 0x77, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x72, 0x65, 0x74, // ow.x != 0.0).ret
	0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2c, 0x64, // urn mix(result,d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // iffuse,fDisableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, // ighting_top_belo
	0x77, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // w.x);.else.retur
	0x6e, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // n result;.}.vec3
	0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, //  DoEnvmapDiffuse
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, // (const vec3 N, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // onst vec3 diffus
	0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // e).{.const vec3 
	0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, // env = textureLod
	0x28, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, // (tex_diffuse_env
	0x2c, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, // , ray_to_equirec
	0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x4e, 0x29, 0x2c, 0x20, // tangular_uv(N), 
	0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 0.0).xyz;.return
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, //  diffuse * env*f
	0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, // envEmissionScale
	0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // _TexWidth.x;.}.v
	0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x47, 0x6c, 0x6f, 0x73, // ec3 DoEnvmapGlos
	0x73, 0x79, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, // sy(const vec3 N,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x63, //  const vec3 V, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x63, // onst vec2 Ruv, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, // onst vec3 glossy
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, // , const float gl
	0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, // ossyPower).{.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x69, 0x70, 0x20, 0x3d, 0x20, 0x6d, // st float mip = m
	0x69, 0x6e, 0x28, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, // in(log2(fenvEmis
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, // sionScale_TexWid
	0x74, 0x68, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x33, 0x2e, 0x30, 0x29, // th.y * sqrt(3.0)
	0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x35, 0x2a, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x67, 0x6c, 0x6f, // ) - 0.5*log2(glo
	0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x2c, // ssyPower + 1.0),
	0x20, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, //  log2(fenvEmissi
	0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, // onScale_TexWidth
	0x2e, 0x79, 0x29, 0x2d, 0x31, 0x2e, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // .y)-1.);.const v
	0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // ec3 env = textur
	0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x2c, 0x20, 0x52, 0x75, // eLod(tex_env, Ru
	0x76, 0x2c, 0x20, 0x6d, 0x69, 0x70, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x72, 0x65, 0x74, // v, mip).xyz;.ret
	0x75, 0x72, 0x6e, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, 0x20, 0x65, 0x6e, 0x76, // urn glossy * env
	0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, // *fenvEmissionSca
	0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x7d, // le_TexWidth.x;.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x32, 0x6e, // .vec3 DoEnvmap2n
	0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // dLayer(const vec
	0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x31, 0x73, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2c, // 3 color1stLayer,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, //  const vec3 pos,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, //  const vec3 N, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, // onst vec3 V, con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, // st float NdotV, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, // const vec2 Ruv, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, // const vec3 specu
	0x6c, 0x61, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // lar).{.const vec
	0x33, 0x20, 0x77, 0x20, 0x3d, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, // 3 w = FresnelSch
	0x6c, 0x69, 0x63, 0x6b, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x4e, // lick(specular, N
	0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, // dotV, Roughness_
	0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, // WrapL_Edge_Thick
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // ness.z);.const v
	0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // ec3 env = textur
	0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x2c, 0x20, 0x52, 0x75, // eLod(tex_env, Ru
	0x76, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x72, 0x65, 0x74, // v, 0.0).xyz;.ret
	0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x31, 0x73, 0x74, // urn mix(color1st
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x2c, 0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, // Layer, env*fenvE
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, // missionScale_Tex
	0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x2c, 0x20, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // Width.x, w);.}.v
	0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x63, 0x6f, // ec3 lightLoop(co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x76, 0x65, // nst vec3 pos, ve
	0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, // c3 N, const vec3
	0x20, 0x56, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, //  V, vec3 diffuse
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, // , vec3 glossy, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, // onst vec3 specul
	0x61, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ar, const float 
	0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, // edge, const bool
	0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, //  is_metal).{.vec
	0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, // 3 color = vec3_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // plat(0.0);.float
	0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x56, //  NdotV = dot(N,V
	0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3c, 0x20, 0x30, // );.if (NdotV < 0
	0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x4e, 0x20, 0x3d, 0x20, 0x2d, 0x4e, 0x3b, 0x0a, 0x4e, 0x64, // .0).{.N = -N;.Nd
	0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x2d, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x3b, 0x0a, 0x7d, 0x0a, // otV = -NdotV;.}.
	0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, 0x4e, 0x64, 0x6f, 0x74, // NdotV = min(Ndot
	0x56, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // V, 1.0);.const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, // loat diffuseMax 
	0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x78, 0x2c, // = max(diffuse.x,
	0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x79, 0x2c, 0x64, 0x69, // max(diffuse.y,di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // ffuse.z));.const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, //  float glossyMax
	0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x78, 0x2c, //  = max(glossy.x,
	0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x79, 0x2c, 0x67, 0x6c, 0x6f, // max(glossy.y,glo
	0x73, 0x73, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // ssy.z));.const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, // loat specularMax
	0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, //  = max(specular.
	0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x79, // x,max(specular.y
	0x2c, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, // ,specular.z));.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x75, 0x6d, 0x20, 0x3d, // onst float sum =
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x2b, 0x20, 0x67, 0x6c, //  diffuseMax + gl
	0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x73, 0x75, // ossyMax ;.if (su
	0x6d, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x26, 0x26, 0x20, 0x66, 0x44, 0x69, 0x73, 0x61, // m > 1.0 && fDisa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, // bleLighting_top_
	0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x7b, // below.x < 1.0).{
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, // .const float inv
	0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x64, // sum = 1.0/sum;.d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, // iffuse *= invsum
	0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, // ;.glossy *= invs
	0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, // um;.}.if ((!is_m
	0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // etal && (diffuse
	0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, // Max > 0.0)) || (
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, // glossyMax > 0.0)
	0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // ).{.if (fDisable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, // Lighting_top_bel
	0x6f, 0x77, 0x2e, 0x78, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, // ow.x == 1.0).col
	0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x32, 0x29, 0x20, 0x2a, // or += float(2) *
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x66, //  diffuse;.else f
	0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x69, // or (int i = 0; i
	0x20, 0x3c, 0x20, 0x32, 0x3b, 0x20, 0x69, 0x2b, 0x2b, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, //  < 2; i++).color
	0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, //  += DoPointLight
	0x28, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, // (pos, N, V, diff
	0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x65, 0x64, 0x67, // use, glossy, edg
	0x65, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, // e, Roughness_Wra
	0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, // pL_Edge_Thicknes
	0x73, 0x2e, 0x78, 0x2c, 0x20, 0x69, 0x2c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, // s.x, i, is_metal
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, // );.}.if (!is_met
	0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, // al && (diffuseMa
	0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // x > 0.0)).color 
	0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, 0x66, 0x75, // += DoEnvmapDiffu
	0x73, 0x65, 0x28, 0x20, 0x28, 0x28, 0x20, 0x28, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x4e, // se( (( ( (vec4(N
	0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, // ,0.0)) * (matVie
	0x77, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x64, 0x69, 0x66, // w) ) ).xyz), dif
	0x66, 0x75, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x67, 0x6c, 0x6f, 0x73, // fuse);.if ((glos
	0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, // syMax > 0.0) || 
	0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, // (specularMax > 0
	0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x52, 0x20, 0x3d, 0x20, // .0)).{.vec3 R = 
	0x28, 0x32, 0x2e, 0x30, 0x2a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x29, 0x2a, 0x4e, 0x20, 0x2d, 0x20, // (2.0*NdotV)*N - 
	0x56, 0x3b, 0x0a, 0x52, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x20, 0x28, 0x20, 0x28, 0x76, 0x65, 0x63, // V;.R = (( ( (vec
	0x34, 0x28, 0x52, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, 0x74, // 4(R,0.0)) * (mat
	0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, // View) ) ).xyz);.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, 0x75, 0x76, 0x20, 0x3d, // const vec2 Ruv =
	0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, //  ray_to_equirect
	0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x52, 0x29, 0x3b, 0x0a, 0x69, // angular_uv(R);.i
	0x66, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, // f (glossyMax > 0
	0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, // .0).color += DoE
	0x6e, 0x76, 0x6d, 0x61, 0x70, 0x47, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x28, 0x4e, 0x2c, 0x20, 0x56, // nvmapGlossy(N, V
	0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x52, // , Ruv, glossy, R
	0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, // oughness_WrapL_E
	0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x29, // dge_Thickness.x)
	0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, // ;.if (specularMa
	0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, // x > 0.0).color =
	0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x32, 0x6e, 0x64, 0x4c, 0x61, 0x79, 0x65, //  DoEnvmap2ndLaye
	0x72, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, 0x2c, // r(color, pos, N,
	0x20, 0x56, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, //  V, NdotV, Ruv, 
	0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x72, 0x65, 0x74, // specular);.}.ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, // urn color ;.}.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x76, 0x54, 0x61, // iform vec4 invTa
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, // bleRes_reflectio
	0x6e, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // n;.uniform vec4 
	0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, // w_h_disableLight
	0x69, 0x6e, 0x67, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, // ing;.vec3 ballLi
	0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // ghtLoop(const ve
	0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, // c3 pos, vec3 N, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, // vec3 V, vec3 dif
	0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // fuse, vec3 gloss
	0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, // y, const vec3 sp
	0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // ecular, const fl
	0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // oat edge, const 
	0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x7b, // bool is_metal).{
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, 0x66, // .const float dif
	0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, // fuseMax = max(di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, // ffuse.x,max(diff
	0x75, 0x73, 0x65, 0x2e, 0x79, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x7a, 0x29, // use.y,diffuse.z)
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, // );.const float g
	0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x67, // lossyMax = max(g
	0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, // lossy.x,max(glos
	0x73, 0x79, 0x2e, 0x79, 0x2c, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, // sy.y,glossy.z));
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x65, // .const float spe
	0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x73, // cularMax = max(s
	0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, // pecular.x,max(sp
	0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x79, 0x2c, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, // ecular.y,specula
	0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // r.z));.const flo
	0x61, 0x74, 0x20, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // at sum = diffuse
	0x4d, 0x61, 0x78, 0x20, 0x2b, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x3b, // Max + glossyMax;
	0x0a, 0x69, 0x66, 0x28, 0x73, 0x75, 0x6d, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x7b, // .if(sum > 1.0).{
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, // .const float inv
	0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x64, // sum = 1.0/sum;.d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, // iffuse *= invsum
	0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, // ;.glossy *= invs
	0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // um;.}.vec3 color
	0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, //  = vec3(0.0, 0.0
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x28, 0x21, 0x69, 0x73, 0x5f, // , 0.0);.if((!is_
	0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // metal && (diffus
	0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, // eMax > 0.0)) || 
	0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, // (glossyMax > 0.0
	0x29, 0x29, 0x0a, 0x66, 0x6f, 0x72, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, 0x30, // )).for(int i = 0
	0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x3b, 0x20, 0x69, 0x2b, 0x2b, // ; i < 2 + 8; i++
	0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, // ).color += DoPoi
	0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, 0x2c, 0x20, // ntLight(pos, N, 
	0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, // V, diffuse, glos
	0x73, 0x79, 0x2c, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, // sy, edge, Roughn
	0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, // ess_WrapL_Edge_T
	0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x2c, 0x20, 0x69, 0x2c, 0x20, 0x69, // hickness.x, i, i
	0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x21, 0x69, 0x73, // s_metal);.if(!is
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, // _metal && (diffu
	0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x63, 0x6f, // seMax > 0.0)).co
	0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, // lor += DoEnvmapD
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, // iffuse(normalize
	0x28, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, // (( (matView) * (
	0x76, 0x65, 0x63, 0x34, 0x28, 0x4e, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x2e, // vec4(N, 0.0)) ).
	0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x3b, 0x0a, // xyz), diffuse);.
	0x69, 0x66, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3e, // if(specularMax >
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x73, //  0.0).color += s
	0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // pecular;.return 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, // color;.}.void ma
	0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // in().{.const vec
	0x33, 0x20, 0x56, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // 3 V = normalize(
	0x20, 0x2d, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, //  -v_worldPos.xyz
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x20, // );.const vec3 N 
	0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x76, 0x5f, 0x6e, 0x6f, // = normalize(v_no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // rmal.xyz);.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x52, 0x20, 0x3d, 0x20, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, //  vec3 R = reflec
	0x74, 0x28, 0x56, 0x2c, 0x20, 0x4e, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x61, // t(V, N);.vec3 ba
	0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x63, 0x6f, // llImageColor;.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x20, 0x3d, // nst float edge =
	0x20, 0x64, 0x6f, 0x74, 0x28, 0x56, 0x2c, 0x20, 0x52, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, //  dot(V, R);.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x6f, 0x64, 0x20, 0x3d, 0x20, 0x28, 0x65, // t float lod = (e
	0x64, 0x67, 0x65, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x36, 0x29, 0x20, 0x3f, 0x20, 0x65, 0x64, 0x67, // dge > 0.6) ? edg
	0x65, 0x2a, 0x28, 0x36, 0x2e, 0x30, 0x2a, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x29, 0x2d, // e*(6.0*1.0/0.4)-
	0x28, 0x36, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x36, 0x2f, 0x30, 0x2e, 0x34, 0x29, 0x20, 0x3a, 0x20, // (6.0*0.6/0.4) : 
	0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0.0;.const float
	0x20, 0x6d, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x52, 0x2e, 0x7a, 0x20, //  m = (1.0 - R.z 
	0x3e, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x33, 0x35, 0x33, 0x35, 0x35, 0x33, // > 0.) ? 0.353553
	0x33, 0x39, 0x30, 0x35, 0x39, 0x33, 0x32, 0x37, 0x33, 0x37, 0x36, 0x32, 0x32, 0x20, 0x2a, 0x20, // 3905932737622 * 
	0x72, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x52, 0x2e, 0x7a, 0x29, // rsqrt(1.0 - R.z)
	0x20, 0x3a, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, //  : 0.;.const vec
	0x32, 0x20, 0x75, 0x76, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x20, // 2 uv = vec2(0.5 
	0x2d, 0x20, 0x6d, 0x20, 0x2a, 0x20, 0x52, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, // - m * R.x, 0.5 -
	0x20, 0x6d, 0x20, 0x2a, 0x20, 0x52, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, //  m * R.y);.ballI
	0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, // mageColor = text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // ureLod(tex_ball_
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x75, 0x76, 0x2c, 0x20, 0x6c, 0x6f, 0x64, 0x29, 0x2e, // color, uv, lod).
	0x72, 0x67, 0x62, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // rgb;.const vec4 
	0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x20, 0x3d, 0x20, 0x74, 0x65, // decalColorT = te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, // xture(tex_ball_d
	0x65, 0x63, 0x61, 0x6c, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, // ecal, v_texcoord
	0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, // 0);.vec3 decalCo
	0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // lor = decalColor
	0x54, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, // T.rgb;.ballImage
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, // Color = ScreenHD
	0x52, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // R(ballImageColor
	0x2c, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x69, // , decalColor);.i
	0x66, 0x20, 0x28, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // f ((w_h_disableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x7a, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x29, // ighting.z != 0.)
	0x29, 0x0a, 0x7b, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, // ).{.bgfx_FragCol
	0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, // or = vec4(ballIm
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, // ageColor,cBase_A
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x61, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x3b, // lpha.a);.return;
	0x0a, 0x7d, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, // .}.ballImageColo
	0x72, 0x20, 0x2a, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, // r *= 0.5*fenvEmi
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, // ssionScale_TexWi
	0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // dth.x;.const vec
	0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // 3 playfield_norm
	0x61, 0x6c, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, // al = ( (matWorld
	0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, // View) * (float4(
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x31, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x20, 0x29, 0x2e, // 0.,0.,1.,0.)) ).
	0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // xyz;.const float
	0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x70, 0x6c, 0x61, //  NdotR = dot(pla
	0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x52, // yfield_normal, R
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, // );.const vec3 pl
	0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, // ayfield_p0 = ( (
	0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, // matWorldView) * 
	0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x20, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, // (vec4( 0.,0.,0.,
	0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // 1.0)) ).xyz;.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // st float t = dot
	0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // (playfield_norma
	0x6c, 0x2c, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, // l, v_worldPos.xy
	0x7a, 0x20, 0x2d, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x30, // z - playfield_p0
	0x29, 0x20, 0x2f, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // ) / NdotR;.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, //  vec3 playfield_
	0x68, 0x69, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, // hit = v_worldPos
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x74, 0x20, 0x2a, 0x20, 0x52, 0x3b, 0x0a, 0x63, 0x6f, // .xyz - t * R;.co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x20, 0x3d, 0x20, // nst vec4 proj = 
	0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, // ( (matProj) * (v
	0x65, 0x63, 0x34, 0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x68, 0x69, // ec4(playfield_hi
	0x74, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // t, 1.0)) );.cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x70, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, // t vec2 uvp = vec
	0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, // 2(0.5, 0.5) + ve
	0x63, 0x32, 0x28, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x78, 0x2c, 0x20, 0x2d, 0x70, 0x72, 0x6f, 0x6a, // c2(proj.x, -proj
	0x2e, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2f, 0x20, 0x70, 0x72, 0x6f, // .y) * (0.5 / pro
	0x6a, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, // j.w);.const vec3
	0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, //  playfieldColor 
	0x3d, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x28, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x75, // = 0.25 * (.textu
	0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, // re(tex_ball_play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, // field, uvp + vec
	0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, // 2(w_h_disableLig
	0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x72, 0x67, // hting.x, 0.)).rg
	0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, // b.+ texture(tex_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, // ball_playfield, 
	0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, // uvp - vec2(w_h_d
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, // isableLighting.x
	0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, // , 0.)).rgb.+ tex
	0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, // ture(tex_ball_pl
	0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, // ayfield, uvp + v
	0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, // ec2(0., w_h_disa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, // bleLighting.y)).
	0x72, 0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, // rgb.+ texture(te
	0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, // x_ball_playfield
	0x2c, 0x20, 0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, // , uvp - vec2(0.,
	0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, //  w_h_disableLigh
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x29, 0x3b, 0x0a, // ting.y)).rgb.);.
	0x69, 0x66, 0x20, 0x28, 0x21, 0x28, 0x75, 0x76, 0x70, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, // if (!(uvp.x < 0.
	0x20, 0x7c, 0x7c, 0x20, 0x75, 0x76, 0x70, 0x2e, 0x78, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x20, 0x7c, //  || uvp.x > 1. |
	0x7c, 0x20, 0x75, 0x76, 0x70, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x20, 0x7c, 0x7c, 0x20, // | uvp.y < 0. || 
	0x75, 0x76, 0x70, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x29, 0x0a, 0x26, 0x26, 0x20, 0x21, // uvp.y > 1.).&& !
	0x28, 0x74, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x62, 0x61, 0x6c, // (t <= 0.)).{.bal
	0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x6c, 0x65, // lImageColor = le
	0x72, 0x70, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, // rp(ballImageColo
	0x72, 0x2c, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6c, 0x6f, // r, playfieldColo
	0x72, 0x2c, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, // r, smoothstep(0.
	0x30, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x35, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x29, 0x20, // 0, 0.15, NdotR) 
	0x2a, 0x20, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, // * invTableRes_re
	0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x62, // flection.z);.}.b
	0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, // allImageColor = 
	0x6d, 0x69, 0x6e, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, // min(ballImageCol
	0x6f, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x35, 0x2e, 0x2c, 0x20, // or, float3(15., 
	0x31, 0x35, 0x2e, 0x2c, 0x20, 0x31, 0x35, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, // 15., 15.));.vec3
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x3d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, //  diffuse = cBase
	0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x2a, 0x30, 0x2e, 0x30, 0x37, 0x35, // _Alpha.rgb*0.075
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, // ;.const vec3 glo
	0x73, 0x73, 0x79, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // ssy = max(diffus
	0x65, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x2c, // e*2.0, vec3(0.1,
	0x30, 0x2e, 0x31, 0x2c, 0x30, 0x2e, 0x31, 0x29, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // 0.1,0.1));.vec3 
	0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x20, 0x3d, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x49, // specular = ballI
	0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x61, 0x73, // mageColor * cBas
	0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x62, 0x67, 0x66, // e_Alpha.rgb;.bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x72, 0x67, 0x62, 0x20, // x_FragColor.rgb 
	0x3d, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, // = ballLightLoop(
	0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, // v_worldPos.xyz, 
	0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, // N, V, diffuse, g
	0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, // lossy, specular,
	0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x62, 0x67, //  1.0, false);.bg
	0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x61, 0x20, 0x3d, // fx_FragColor.a =
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x61, 0x3b, 0x0a, //  cBase_Alpha.a;.
	0x7d, 0x0a, 0x00,                                                                               // }..
};
static const uint8_t fs_ball_spherical_decal_glsl[14449] =
{
	0x46, 0x53, 0x48, 0x0b, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5e, 0x38, // FSH....l......^8
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x6f, // ..#version 440.o
	0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, // ut vec4 bgfx_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // gColor;.#define 
	0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x62, 0x67, 0x66, // gl_FragColor bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x0a, 0x23, 0x64, 0x65, 0x66, // x_FragColor.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x20, 0x20, // ine texture2D   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, //        texture.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // Lod       textur
	0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, // eLod.#define tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ture2DGrad      
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, // textureGrad.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, // ine texture2DPro
	0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, // jLod   texturePr
	0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // ojLod.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, // xture2DProjGrad 
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, //  textureProjGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // CubeLod     text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, // ureLod.#define t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, // extureCubeGrad  
	0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, //   textureGrad.#d
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, // efine texture3D 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //          texture
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, 0x65, 0x78, 0x74, // 2DLodOffset text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, // ureLodOffset.#de
	0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, // fine attribute i
	0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // n.#define varyin
	0x67, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, // g in.#define bgf
	0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // xShadow2D(_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, // er, _coord)     
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // vec4_splat(textu
	0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // re(_sampler, _co
	0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, // ord) ).#define b
	0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, // gfxShadow2DProj(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, // ) vec4_splat(tex
	0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // tureProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x76, 0x61, 0x72, // r, _coord) ).var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // ying vec3 v_norm
	0x61, 0x6c, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, // al;.varying vec2
	0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, //  v_texcoord0;.va
	0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, // rying vec3 v_wor
	0x6c, 0x64, 0x50, 0x6f, 0x73, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, // ldPos;.vec3 inst
	0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, // Mul(vec3 _vec, m
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // at3 _mtx) { retu
	0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, // rn ( (_vec) * (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, // mtx) ); }.vec3 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, // nstMul(mat3 _mtx
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, // , vec3 _vec) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, // eturn ( (_mtx) *
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, //  (_vec) ); }.vec
	0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // 4 instMul(vec4 _
	0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, // vec, mat4 _mtx) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, // { return ( (_vec
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // ) * (_mtx) ); }.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, // vec4 instMul(mat
	0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, // 4 _mtx, vec4 _ve
	0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, // c) { return ( (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, // mtx) * (_vec) );
	0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, //  }.float rcp(flo
	0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // at _a) { return 
	0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, // 1.0/_a; }.vec2 r
	0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // cp(vec2 _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, // turn vec2(1.0)/_
	0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, // a; }.vec3 rcp(ve
	0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c3 _a) { return 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, // vec3(1.0)/_a; }.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, // vec4 rcp(vec4 _a
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // ) { return vec4(
	0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // 1.0)/_a; }.vec2 
	0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // vec2_splat(float
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, //  _x) { return ve
	0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, // c2(_x, _x); }.ve
	0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, // c3 vec3_splat(fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // oat _x) { return
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, //  vec3(_x, _x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, // ); }.vec4 vec4_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // plat(float _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, //  return vec4(_x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, //  _x, _x, _x); }.
	0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, // uvec2 uvec2_spla
	0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // t(uint _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // urn uvec2(_x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, // ); }.uvec3 uvec3
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // _splat(uint _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, // { return uvec3(_
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, // x, _x, _x); }.uv
	0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // ec4 uvec4_splat(
	0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // uint _x) { retur
	0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, // n uvec4(_x, _x, 
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, // _x, _x); }.mat4 
	0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, // mtxFromRows(vec4
	0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, //  _0, vec4 _1, ve
	0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, // c4 _2, vec4 _3).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, // {.return transpo
	0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, // se(mat4(_0, _1, 
	0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, // _2, _3) );.}.mat
	0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, // 4 mtxFromCols(ve
	0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, // c4 _0, vec4 _1, 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, // vec4 _2, vec4 _3
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, // ).{.return mat4(
	0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, // _0, _1, _2, _3);
	0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, // .}.mat3 mtxFromR
	0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, // ows(vec3 _0, vec
	0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, // 3 _1, vec3 _2).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, // .return transpos
	0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, // e(mat3(_0, _1, _
	0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, // 2) );.}.mat3 mtx
	0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, // FromCols(vec3 _0
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // , vec3 _1, vec3 
	0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, // _2).{.return mat
	0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, // 3(_0, _1, _2);.}
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, // .uniform vec4 u_
	0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // viewRect;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, // m vec4 u_viewTex
	0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // el;.uniform mat4
	0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, //  u_view;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, //  mat4 u_invView;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // proj;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, // t4 u_invProj;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // iform mat4 u_vie
	0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // wProj;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, // at4 u_invViewPro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // u_model[32];.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, // form mat4 u_mode
	0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // lView;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, // at4 u_modelViewP
	0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, // roj;.uniform vec
	0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, // 4 u_alphaRef4;.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // loat sqr(const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // loat v).{.return
	0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, //  v*v;.}.vec2 sqr
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, // (const vec2 v).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // .return v*v;.}.v
	0x65, 0x63, 0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // ec3 sqr(const ve
	0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // c3 v).{.return v
	0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, // *v;.}.vec3 mul_w
	0x31, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, // 1(const vec3 v, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, // const mat4 m).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, // return v.x*m[0].
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, // xyz + (v.y*m[1].
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, // xyz + (v.z*m[2].
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, // xyz + m[3].xyz))
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, // ;.}.float acos_a
	0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, // pprox_divPI(cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, // t float v).{.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, // st float x = abs
	0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, // (v);.if(1. - x <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, // = 0.000061035156
	0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, // 25).return (v >=
	0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, //  0.) ? 0. : 1.;.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, // const float res 
	0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, // = ((-0.155972/3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, //  * x + (1.56467/
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, // 5) ) * sqrt(1. -
	0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, //  x);.return (v >
	0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, // = 0.) ? res : 1.
	0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //  - res;.}.float 
	0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, // atan2_approx_div
	0x32, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 2PI(const float 
	0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, // y, const float x
	0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ).{.const float 
	0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, // abs_y = abs(y);.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, // const float abs_
	0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, // x = abs(x);.if(a
	0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, // bs_x <= 0.000061
	0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, // 03515625 && abs_
	0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, // y <= 0.000061035
	0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, // 15625).return 0.
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, // ;.const float r 
	0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, // = (abs_x - abs_y
	0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, // ) / (abs_x + abs
	0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _y);.const float
	0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, //  angle = ((x < 0
	0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, // .) ? (3./8.) : (
	0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, // 1./8.)).+ (0.211
	0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // 868 /(2.*3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, // 6433832795) * r 
	0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, // * r - 0.987305 /
	0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, // (2.*3.1415926535
	0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, // 8979323846264338
	0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, // 32795)) * ((x < 
	0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, // 0.) ? -r : r);.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // eturn (y < 0.) ?
	0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, //  -angle : angle;
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, // .}.float asin_ap
	0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // prox_divPI(const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, //  float v).{.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, // t float x = abs(
	0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, // v);.if(1. - x <=
	0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, //  0.0000610351562
	0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, // 5).return (v >= 
	0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, // 0.) ? 0.5 : -0.5
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, // ;.const float re
	0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, // s = ((-0.155972/
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, // 5) * x + (1.5646
	0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, // 7/3.141592653589
	0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, // 7932384626433832
	0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, // 795) ) * sqrt(1.
	0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, //  - x);.return (v
	0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, //  >= 0.) ? 0.5 - 
	0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, // res : -0.5 + res
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, // ;.}.vec2 ray_to_
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, // equirectangular_
	0x75, 0x76, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, // uv(const vec3 ra
	0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, // y).{.return vec2
	0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, // (.0.5 + atan2_ap
	0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, // prox_div2PI(ray.
	0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, // y, ray.x),.acos_
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, // approx_divPI(ray
	0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, // .z));.}.float In
	0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // vsRGB(const floa
	0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, // t color).{.if (c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, // olor <= 0.04045)
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, // .return color * 
	0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, // (1.0/12.92);.els
	0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, // e.return pow(col
	0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, // or * (1.0/1.055)
	0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, //  + (0.055/1.055)
	0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // , 2.4);.}.float 
	0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // InvRec709(const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, // float color).{.i
	0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, // f (color <= 0.08
	0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // 1).return color 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, // * (1.0/4.5);.els
	0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, // e.return pow(col
	0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, // or * (1.0/1.099)
	0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, //  + (0.099/1.099)
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // , 1.0/0.45);.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, // loat InvGamma(co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // nst float color)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, // .{.return InvsRG
	0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // B(color);.}.vec3
	0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  InvGamma(const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // vec3 color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // turn vec3(InvGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, // ma(color.x),InvG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, // amma(color.y),In
	0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, // vGamma(color.z))
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, // ;.}.vec3 InvTone
	0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // Map(const vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // olor).{.const fl
	0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, // oat inv_2bh = 0.
	0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // 5/0.25;.const fl
	0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, // oat bh = 4.0*0.2
	0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 5 - 2.0;.return 
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, // (color - 1.0 + s
	0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // qrt(color*(color
	0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, //  + bh) + 1.0))*i
	0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // nv_2bh;.}.float 
	0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // sRGB(const float
	0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, //  f).{.float s;.i
	0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, // f (f <= 0.003130
	0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, // 8).s = 12.92 * f
	0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, // ;.else.s = 1.055
	0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, //  * pow(f, 1.0/2.
	0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 4) - 0.055;.retu
	0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, // rn s;.}.float Re
	0x63, 0x37, 0x30, 0x39, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // c709(const float
	0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, //  f).{.float s;.i
	0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, // f (f <= 0.018).s
	0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, //  = 4.5 * f;.else
	0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, // .s = 1.099 * pow
	0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, // (f, 0.45) - 0.09
	0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // 9;.return s;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, // loat FBGamma(con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // st float color).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, // {.return sRGB(co
	0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, // lor);.}.vec2 FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, // amma(const vec2 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // color).{.return 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, // vec2(FBGamma(col
	0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, // or.x),FBGamma(co
	0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // lor.y));.}.vec3 
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // FBGamma(const ve
	0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // c3 color).{.retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, // rn vec3(FBGamma(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, // color.x),FBGamma
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // (color.y),FBGamm
	0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // a(color.z));.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, // loat FBToneMap(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, // onst float l).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, // return l * ((l*0
	0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, // .25 + 1.0) / (l 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // + 1.0));.}.vec2 
	0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // FBToneMap(const 
	0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, // vec2 color).{.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, // nst float l = do
	0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, // t(color,vec2(0.1
	0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, // 76204+0.0108109*
	0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, // 0.5,0.812985+0.0
	0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, // 108109*0.5));.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, // turn color * ((l
	0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, // *0.25 + 1.0) / (
	0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // l + 1.0));.}.vec
	0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, // 3 FBToneMap(cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // t vec3 color).{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, // const float l = 
	0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, // dot(color,vec3(0
	0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, // .176204,0.812985
	0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, // ,0.0108109));.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, // turn color * ((l
	0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, // *0.25 + 1.0) / (
	0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // l + 1.0));.}.vec
	0x34, 0x20, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // 4 Additive(const
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, //  vec4 cBase, con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, // st vec4 cBlend, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, // const float perc
	0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, // ent).{.return cB
	0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, // ase + cBlend*per
	0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, // cent;.}.vec3 Scr
	0x65, 0x65, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // een (const vec3 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // cBase, const vec
	0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 3 cBlend).{.retu
	0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // rn 1.0 - (1.0 - 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // cBase) * (1.0 - 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // cBlend);.}.vec4 
	0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // Screen (const ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // c4 cBase, const 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // vec4 cBlend).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, // eturn 1.0 - (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, //  - cBase) * (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, //  - cBlend);.}.ve
	0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, // c3 ScreenHDR (co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, // nst vec3 cBase, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // const vec3 cBlen
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, // d).{.return max(
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, // 1.0 - (1.0 - cBa
	0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, // se) * (1.0 - cBl
	0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, // end), vec3(0.,0.
	0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, // ,0.));.}.vec4 Sc
	0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // reenHDR (const v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, // ec4 cBase, const
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, //  vec4 cBlend).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // return max(1.0 -
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, //  (1.0 - cBase) *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, //  (1.0 - cBlend),
	0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, //  vec4(0.,0.,0.,0
	0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, // .));.}.vec4 Mult
	0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, // iply (const vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, //  cBase, const ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, // c4 cBlend, const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, //  float percent).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, // {.return cBase *
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, //  cBlend*percent;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, // .}.vec4 Overlay 
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, // (const vec4 cBas
	0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // e, const vec4 cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, // lend).{.vec4 cNe
	0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, // w = step(0.5, cB
	0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, // ase);.cNew = mix
	0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, // (cBase*cBlend*2.
	0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, // 0, 1.0-2.0*(1.0-
	0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, // cBase)*(1.0-cBle
	0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // nd), cNew);.retu
	0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // rn cNew;.}.vec4 
	0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, // OverlayHDR (cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, // t vec4 cBase, co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // nst vec4 cBlend)
	0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, // .{.vec4 cNew = s
	0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, // tep(0.5, cBase);
	0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, // .cNew = max(mix(
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, // cBase*cBlend*2.0
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, // , 1.0-2.0*(1.0-c
	0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, // Base)*(1.0-cBlen
	0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // d), cNew), vec4(
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, // 0.,0.,0.,0.));.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // eturn cNew;.}.ve
	0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, // c3 cos_hemispher
	0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // e_sample(const v
	0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // ec2 t).{.const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, // loat phi = t.y *
	0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, //  (2.0*3.14159265
	0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, // 3589793238462643
	0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // 3832795);.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, // float cosTheta =
	0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, //  sqrt(1.0 - t.x)
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, // ;.const float si
	0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, // nTheta = sqrt(t.
	0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, // x);.float sp,cp;
	0x0a, 0x73, 0x69, 0x6e, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x2c, 0x73, 0x70, 0x2c, 0x63, // .sincos(phi,sp,c
	0x70, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // p);.return vec3(
	0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, // cp * sinTheta, c
	0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, // osTheta, sp * si
	0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // nTheta);.}.vec3 
	0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, // rotate_to_vector
	0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // _upper(const vec
	0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // 3 vec, const vec
	0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, // 3 normal).{.if(n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, // ormal.y > -0.999
	0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 99).{.const floa
	0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, // t h = 1.0/(1.0+n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // ormal.y);.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, // float hz = h*nor
	0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // mal.z;.const flo
	0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, // at hzx = hz*norm
	0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // al.x;.return vec
	0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, // 3(.vec.x * (norm
	0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, // al.y+hz*normal.z
	0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // ) + vec.y * norm
	0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, // al.x - vec.z * h
	0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // zx,.vec.y * norm
	0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, // al.y - vec.x * n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, // ormal.x - vec.z 
	0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, // * normal.z,.vec.
	0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, // y * normal.z - v
	0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, // ec.x * hzx + vec
	0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, // .z * (normal.y+h
	0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // *normal.x*normal
	0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, // .x));.}.else ret
	0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, // urn -vec;.}.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, // orm mat4 matView
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, // ;.uniform mat4 m
	0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // atWorldView;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, // form mat4 matWor
	0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x3b, 0x0a, 0x75, // ldViewInverse;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, // niform mat4 matW
	0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, // orldViewProj;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, // iform mat4 matPr
	0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, // oj;.uniform samp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, // ler2D tex_ball_c
	0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, // olor;.uniform sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x3b, // mpler2D tex_env;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .uniform sampler
	0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, // 2D tex_diffuse_e
	0x6e, 0x76, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, // nv;.uniform samp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, // ler2D tex_ball_d
	0x65, 0x63, 0x61, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, // ecal;.uniform sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // mpler2D tex_ball
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // _playfield;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x62, 0x61, 0x73, 0x69, 0x63, // orm vec4 u_basic
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // _shade_mode;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, // form vec4 ballLi
	0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x5d, 0x3b, 0x0a, 0x75, // ghtPos[2 + 8];.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, // niform vec4 ball
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x32, 0x20, // LightEmission[2 
	0x2b, 0x20, 0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // + 8];.uniform ve
	0x63, 0x34, 0x20, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, // c4 cAmbient_Ligh
	0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // tRange;.uniform 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, // vec4 fenvEmissio
	0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x3b, // nScale_TexWidth;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x44, // .uniform vec4 fD
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, // isableLighting_t
	0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // op_below;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x53, 0x63, 0x61, // m vec4 fSceneSca
	0x6c, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // le;.uniform vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x0a, 0x75, 0x6e, //  cBase_Alpha;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, // iform vec4 Rough
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, // ness_WrapL_Edge_
	0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // Thickness;.float
	0x20, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, //  GeometricOpacit
	0x79, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, // y(const float Nd
	0x6f, 0x74, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // otV, const float
	0x20, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, //  alpha, const fl
	0x6f, 0x61, 0x74, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2c, 0x20, 0x63, 0x6f, // oat blending, co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, // nst float thickn
	0x65, 0x73, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // ess).{.const flo
	0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x56, // at x = abs(NdotV
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, // );.const float g
	0x20, 0x3d, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x2a, 0x20, 0x28, 0x31, //  = blending * (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x78, 0x20, 0x2f, 0x20, 0x28, 0x78, 0x20, 0x2a, 0x20, 0x28, // .0 - (x / (x * (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, // 1.0 - thickness)
	0x20, 0x2b, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, 0x29, 0x29, 0x3b, //  + thickness)));
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x61, 0x6c, 0x70, 0x68, // .return mix(alph
	0x61, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x67, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // a, 1.0, g);.}.ve
	0x63, 0x33, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, // c3 FresnelSchlic
	0x6b, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, // k(const vec3 spe
	0x63, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4c, // c, const float L
	0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // dotH, const floa
	0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // t edge).{.return
	0x20, 0x73, 0x70, 0x65, 0x63, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x65, 0x64, //  spec + (vec3(ed
	0x67, 0x65, 0x2c, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x65, 0x64, 0x67, 0x65, 0x29, 0x20, 0x2d, 0x20, // ge,edge,edge) - 
	0x73, 0x70, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x31, 0x2e, 0x30, 0x20, // spec) * pow(1.0 
	0x2d, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x35, 0x2e, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // - LdotH, 5.);.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, // vec3 DoPointLigh
	0x74, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, // t(const vec3 pos
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, // , const vec3 N, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x63, 0x6f, // const vec3 V, co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // nst vec3 diffuse
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, // , const vec3 glo
	0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ssy, const float
	0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, //  edge, const flo
	0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x2c, 0x20, // at glossyPower, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x2c, 0x20, 0x63, 0x6f, 0x6e, // const int i, con
	0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, // st bool is_metal
	0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, // ).{.const vec3 l
	0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x20, 0x28, 0x6d, // ightDir = ( ( (m
	0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, // atView) * (vec4(
	0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x69, 0x5d, 0x2e, // ballLightPos[i].
	0x78, 0x79, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, // xyz, 1.0)) ) ).x
	0x79, 0x7a, 0x20, 0x2d, 0x20, 0x70, 0x6f, 0x73, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // yz - pos;.const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x4c, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, // vec3 L = normali
	0x7a, 0x65, 0x28, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x29, 0x3b, 0x0a, 0x63, 0x6f, // ze(lightDir);.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, // nst float NdotL 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x20, 0x4c, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, // = dot(N, L);.vec
	0x33, 0x20, 0x4f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, // 3 Out = vec3(0.0
	0x2c, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, // ,0.0,0.0);.if (!
	0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x4e, 0x64, 0x6f, // is_metal && (Ndo
	0x74, 0x4c, 0x20, 0x2b, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, // tL + Roughness_W
	0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, // rapL_Edge_Thickn
	0x65, 0x73, 0x73, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x4f, 0x75, // ess.y > 0.0)).Ou
	0x74, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x28, 0x28, // t = diffuse * ((
	0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x2b, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, // NdotL + Roughnes
	0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, // s_WrapL_Edge_Thi
	0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x73, 0x71, 0x72, 0x28, // ckness.y) / sqr(
	0x31, 0x2e, 0x30, 0x2b, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, // 1.0+Roughness_Wr
	0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, // apL_Edge_Thickne
	0x73, 0x73, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, // ss.y));.if (Ndot
	0x4c, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // L > 0.0).{.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x48, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, //  vec3 H = normal
	0x69, 0x7a, 0x65, 0x28, 0x4c, 0x20, 0x2b, 0x20, 0x56, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // ize(L + V);.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, // t float NdotH = 
	0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // dot(N, H);.const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, //  float LdotH = d
	0x6f, 0x74, 0x28, 0x4c, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // ot(L, H);.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x56, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, 0x6f, // float VdotH = do
	0x74, 0x28, 0x56, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x4e, 0x64, // t(V, H);.if ((Nd
	0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x4c, // otH > 0.0) && (L
	0x64, 0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, // dotH > 0.0) && (
	0x56, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x4f, 0x75, // VdotH > 0.0)).Ou
	0x74, 0x20, 0x2b, 0x3d, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x6c, // t += FresnelSchl
	0x69, 0x63, 0x6b, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x4c, 0x64, 0x6f, 0x74, // ick(glossy, Ldot
	0x48, 0x2c, 0x20, 0x65, 0x64, 0x67, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x28, 0x67, 0x6c, // H, edge) * (((gl
	0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // ossyPower + 1.0)
	0x20, 0x2f, 0x20, 0x28, 0x38, 0x2e, 0x30, 0x2a, 0x56, 0x64, 0x6f, 0x74, 0x48, 0x29, 0x29, 0x20, //  / (8.0*VdotH)) 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x67, 0x6c, 0x6f, // * pow(NdotH, glo
	0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x63, 0x6f, // ssyPower));.}.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, // nst float sqrl_l
	0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x6c, 0x69, // ightDir = dot(li
	0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2c, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x29, // ghtDir,lightDir)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x3d, // ;.float fAtten =
	0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x73, 0x71, 0x72, //  clamp(1.0 - sqr
	0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2a, 0x73, 0x71, 0x72, 0x6c, 0x5f, // l_lightDir*sqrl_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2f, 0x28, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, // lightDir/(cAmbie
	0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, // nt_LightRange.w*
	0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, // cAmbient_LightRa
	0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, // nge.w*cAmbient_L
	0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, // ightRange.w*cAmb
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, // ient_LightRange.
	0x77, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x66, // w), 0.0, 1.0);.f
	0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x3d, 0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x2a, 0x66, // Atten = fAtten*f
	0x41, 0x74, 0x74, 0x65, 0x6e, 0x2f, 0x28, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, // Atten/(sqrl_ligh
	0x74, 0x44, 0x69, 0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, // tDir + 1.0);.vec
	0x33, 0x20, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x67, 0x6c, 0x6f, 0x73, // 3 ambient = glos
	0x73, 0x79, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, // sy;.if (!is_meta
	0x6c, 0x29, 0x0a, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x2b, 0x3d, 0x20, 0x64, 0x69, // l).ambient += di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // ffuse;.const vec
	0x33, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x20, 0x3d, 0x20, 0x4f, 0x75, 0x74, 0x20, 0x2a, // 3 result = Out *
	0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, //  ballLightEmissi
	0x6f, 0x6e, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x66, 0x41, 0x74, 0x74, // on[i].xyz * fAtt
	0x65, 0x6e, 0x20, 0x2b, 0x20, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x2a, 0x20, 0x63, // en + ambient * c
	0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, // Ambient_LightRan
	0x67, 0x65, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x44, 0x69, 0x73, // ge.xyz;.if (fDis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, // ableLighting_top
	0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, // _below.x != 0.0)
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x72, 0x65, 0x73, 0x75, // .return mix(resu
	0x6c, 0x74, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x66, 0x44, 0x69, 0x73, 0x61, // lt,diffuse,fDisa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, // bleLighting_top_
	0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, // below.x);.else.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, // eturn result;.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, // vec3 DoEnvmapDif
	0x66, 0x75, 0x73, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // fuse(const vec3 
	0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, // N, const vec3 di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // ffuse).{.const v
	0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // ec3 env = textur
	0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // eLod(tex_diffuse
	0x5f, 0x65, 0x6e, 0x76, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, // _env, ray_to_equ
	0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, // irectangular_uv(
	0x4e, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x72, 0x65, // N), 0.0).xyz;.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x65, // turn diffuse * e
	0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, // nv*fenvEmissionS
	0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, // cale_TexWidth.x;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, // .}.vec3 DoEnvmap
	0x47, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // Glossy(const vec
	0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // 3 N, const vec3 
	0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, 0x75, // V, const vec2 Ru
	0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, // v, const vec3 gl
	0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ossy, const floa
	0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x29, 0x0a, 0x7b, // t glossyPower).{
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x69, 0x70, // .const float mip
	0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x66, 0x65, 0x6e, 0x76, //  = min(log2(fenv
	0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, // EmissionScale_Te
	0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // xWidth.y * sqrt(
	0x33, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x35, 0x2a, 0x6c, 0x6f, 0x67, 0x32, // 3.0)) - 0.5*log2
	0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x2b, 0x20, 0x31, // (glossyPower + 1
	0x2e, 0x30, 0x29, 0x2c, 0x20, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, // .0), log2(fenvEm
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, // issionScale_TexW
	0x69, 0x64, 0x74, 0x68, 0x2e, 0x79, 0x29, 0x2d, 0x31, 0x2e, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // idth.y)-1.);.con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, // st vec3 env = te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, // xtureLod(tex_env
	0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x6d, 0x69, 0x70, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // , Ruv, mip).xyz;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, // .return glossy *
	0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, //  env*fenvEmissio
	0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, // nScale_TexWidth.
	0x78, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, // x;.}.vec3 DoEnvm
	0x61, 0x70, 0x32, 0x6e, 0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // ap2ndLayer(const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x31, 0x73, 0x74, 0x4c, 0x61, //  vec3 color1stLa
	0x79, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // yer, const vec3 
	0x70, 0x6f, 0x73, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // pos, const vec3 
	0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, // N, const vec3 V,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, //  const float Ndo
	0x74, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, // tV, const vec2 R
	0x75, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, // uv, const vec3 s
	0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // pecular).{.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x77, 0x20, 0x3d, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, //  vec3 w = Fresne
	0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, 0x6b, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, // lSchlick(specula
	0x72, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, // r, NdotV, Roughn
	0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, // ess_WrapL_Edge_T
	0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // hickness.z);.con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, // st vec3 env = te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, // xtureLod(tex_env
	0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // , Ruv, 0.0).xyz;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .return mix(colo
	0x72, 0x31, 0x73, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2c, 0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, // r1stLayer, env*f
	0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, // envEmissionScale
	0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x2c, 0x20, 0x77, 0x29, 0x3b, // _TexWidth.x, w);
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, // .}.vec3 lightLoo
	0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, // p(const vec3 pos
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // , vec3 N, const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, // vec3 V, vec3 dif
	0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // fuse, vec3 gloss
	0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, // y, const vec3 sp
	0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // ecular, const fl
	0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // oat edge, const 
	0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x7b, // bool is_metal).{
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, // .vec3 color = ve
	0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x66, // c3_splat(0.0);.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // loat NdotV = dot
	0x28, 0x4e, 0x2c, 0x56, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x56, // (N,V);.if (NdotV
	0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x4e, 0x20, 0x3d, 0x20, 0x2d, 0x4e, //  < 0.0).{.N = -N
	0x3b, 0x0a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x2d, 0x4e, 0x64, 0x6f, 0x74, 0x56, // ;.NdotV = -NdotV
	0x3b, 0x0a, 0x7d, 0x0a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, // ;.}.NdotV = min(
	0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // NdotV, 1.0);.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // st float diffuse
	0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // Max = max(diffus
	0x65, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, // e.x,max(diffuse.
	0x79, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, // y,diffuse.z));.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // onst float gloss
	0x79, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, // yMax = max(gloss
	0x79, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x79, // y.x,max(glossy.y
	0x2c, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // ,glossy.z));.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, // st float specula
	0x72, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, // rMax = max(specu
	0x6c, 0x61, 0x72, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, // lar.x,max(specul
	0x61, 0x72, 0x2e, 0x79, 0x2c, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x7a, 0x29, // ar.y,specular.z)
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // );.const float s
	0x75, 0x6d, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, // um = diffuseMax 
	0x2b, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3b, 0x0a, 0x69, 0x66, // + glossyMax ;.if
	0x20, 0x28, 0x73, 0x75, 0x6d, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x26, 0x26, 0x20, 0x66, //  (sum > 1.0 && f
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, // DisableLighting_
	0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x31, 0x2e, // top_below.x < 1.
	0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0).{.const float
	0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x73, 0x75, //  invsum = 1.0/su
	0x6d, 0x3b, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, // m;.diffuse *= in
	0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, 0x3d, 0x20, // vsum;.glossy *= 
	0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x21, // invsum;.}.if ((!
	0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, // is_metal && (dif
	0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, // fuseMax > 0.0)) 
	0x7c, 0x7c, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, // || (glossyMax > 
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x44, 0x69, 0x73, // 0.0)).{.if (fDis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, // ableLighting_top
	0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x29, // _below.x == 1.0)
	0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, // .color += float(
	0x32, 0x29, 0x20, 0x2a, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x3b, 0x0a, 0x65, 0x6c, // 2) * diffuse;.el
	0x73, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, // se for (int i = 
	0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x32, 0x3b, 0x20, 0x69, 0x2b, 0x2b, 0x29, 0x0a, 0x63, // 0; i < 2; i++).c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, // olor += DoPointL
	0x69, 0x67, 0x68, 0x74, 0x28, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, // ight(pos, N, V, 
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, // diffuse, glossy,
	0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, //  edge, Roughness
	0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, // _WrapL_Edge_Thic
	0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x2c, 0x20, 0x69, 0x2c, 0x20, 0x69, 0x73, 0x5f, 0x6d, // kness.x, i, is_m
	0x65, 0x74, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, // etal);.}.if (!is
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, // _metal && (diffu
	0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x63, 0x6f, // seMax > 0.0)).co
	0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, // lor += DoEnvmapD
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, 0x20, 0x28, 0x28, 0x20, 0x28, 0x20, 0x28, 0x76, 0x65, // iffuse( (( ( (ve
	0x63, 0x34, 0x28, 0x4e, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, // c4(N,0.0)) * (ma
	0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, // tView) ) ).xyz),
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, //  diffuse);.if ((
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, // glossyMax > 0.0)
	0x20, 0x7c, 0x7c, 0x20, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, //  || (specularMax
	0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, //  > 0.0)).{.vec3 
	0x52, 0x20, 0x3d, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x29, 0x2a, // R = (2.0*NdotV)*
	0x4e, 0x20, 0x2d, 0x20, 0x56, 0x3b, 0x0a, 0x52, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x20, 0x28, 0x20, // N - V;.R = (( ( 
	0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x52, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, // (vec4(R,0.0)) * 
	0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, // (matView) ) ).xy
	0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, // z);.const vec2 R
	0x75, 0x76, 0x20, 0x3d, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, // uv = ray_to_equi
	0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x52, // rectangular_uv(R
	0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, // );.if (glossyMax
	0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, //  > 0.0).color +=
	0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x47, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x28, //  DoEnvmapGlossy(
	0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // N, V, Ruv, gloss
	0x79, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, // y, Roughness_Wra
	0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, // pL_Edge_Thicknes
	0x73, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, // s.x);.if (specul
	0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, // arMax > 0.0).col
	0x6f, 0x72, 0x20, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x32, 0x6e, 0x64, // or = DoEnvmap2nd
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x70, 0x6f, 0x73, // Layer(color, pos
	0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x52, // , N, V, NdotV, R
	0x75, 0x76, 0x2c, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x29, 0x3b, 0x0a, 0x7d, // uv, specular);.}
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3b, 0x0a, // .return color ;.
	0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, // }.uniform vec4 i
	0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, // nvTableRes_refle
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // ction;.uniform v
	0x65, 0x63, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // ec4 w_h_disableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x61, // ighting;.vec3 ba
	0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, // llLightLoop(cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // t vec3 pos, vec3
	0x20, 0x4e, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, //  N, vec3 V, vec3
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, //  diffuse, vec3 g
	0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // lossy, const vec
	0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // 3 specular, cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, // t float edge, co
	0x6e, 0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, // nst bool is_meta
	0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // l).{.const float
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, //  diffuseMax = ma
	0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, // x(diffuse.x,max(
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x79, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // diffuse.y,diffus
	0x65, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // e.z));.const flo
	0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, // at glossyMax = m
	0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, // ax(glossy.x,max(
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x79, 0x2c, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, // glossy.y,glossy.
	0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // z));.const float
	0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, //  specularMax = m
	0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x78, 0x2c, 0x6d, 0x61, // ax(specular.x,ma
	0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x79, 0x2c, 0x73, 0x70, 0x65, // x(specular.y,spe
	0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // cular.z));.const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, //  float sum = dif
	0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x2b, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, // fuseMax + glossy
	0x4d, 0x61, 0x78, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x73, 0x75, 0x6d, 0x20, 0x3e, 0x20, 0x31, 0x2e, // Max;.if(sum > 1.
	0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0).{.const float
	0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x73, 0x75, //  invsum = 1.0/su
	0x6d, 0x3b, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, // m;.diffuse *= in
	0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, 0x3d, 0x20, // vsum;.glossy *= 
	0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // invsum;.}.vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, // olor = vec3(0.0,
	0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x28, //  0.0, 0.0);.if((
	0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, // !is_metal && (di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // ffuseMax > 0.0))
	0x20, 0x7c, 0x7c, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, //  || (glossyMax >
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x66, 0x6f, 0x72, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, //  0.0)).for(int i
	0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x3b, //  = 0; i < 2 + 8;
	0x20, 0x69, 0x2b, 0x2b, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, //  i++).color += D
	0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x70, 0x6f, 0x73, 0x2c, // oPointLight(pos,
	0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, //  N, V, diffuse, 
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x52, 0x6f, // glossy, edge, Ro
	0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, // ughness_WrapL_Ed
	0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x2c, 0x20, // ge_Thickness.x, 
	0x69, 0x2c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x69, 0x66, // i, is_metal);.if
	0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, // (!is_metal && (d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, // iffuseMax > 0.0)
	0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, // ).color += DoEnv
	0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // mapDiffuse(norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, // lize(( (matView)
	0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x4e, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, //  * (vec4(N, 0.0)
	0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // ) ).xyz), diffus
	0x65, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, // e);.if(specularM
	0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // ax > 0.0).color 
	0x2b, 0x3d, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x3b, 0x0a, 0x72, 0x65, 0x74, // += specular;.ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, 0x69, // urn color;.}.voi
	0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // d main().{.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, //  vec3 V = normal
	0x69, 0x7a, 0x65, 0x28, 0x20, 0x2d, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, // ize( -v_worldPos
	0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // .xyz);.const vec
	0x33, 0x20, 0x4e, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // 3 N = normalize(
	0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, // v_normal.xyz);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x52, 0x20, 0x3d, 0x20, 0x72, 0x65, // onst vec3 R = re
	0x66, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x56, 0x2c, 0x20, 0x4e, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, // flect(V, N);.vec
	0x33, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // 3 ballImageColor
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, // ;.const float ed
	0x67, 0x65, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x56, 0x2c, 0x20, 0x52, 0x29, 0x3b, 0x0a, // ge = dot(V, R);.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x6f, 0x64, 0x20, // const float lod 
	0x3d, 0x20, 0x28, 0x65, 0x64, 0x67, 0x65, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x36, 0x29, 0x20, 0x3f, // = (edge > 0.6) ?
	0x20, 0x65, 0x64, 0x67, 0x65, 0x2a, 0x28, 0x36, 0x2e, 0x30, 0x2a, 0x31, 0x2e, 0x30, 0x2f, 0x30, //  edge*(6.0*1.0/0
	0x2e, 0x34, 0x29, 0x2d, 0x28, 0x36, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x36, 0x2f, 0x30, 0x2e, 0x34, // .4)-(6.0*0.6/0.4
	0x29, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // ) : 0.0;.const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // loat m = (1.0 - 
	0x52, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x33, 0x35, // R.z > 0.) ? 0.35
	0x33, 0x35, 0x35, 0x33, 0x33, 0x39, 0x30, 0x35, 0x39, 0x33, 0x32, 0x37, 0x33, 0x37, 0x36, 0x32, // 3553390593273762
	0x32, 0x20, 0x2a, 0x20, 0x72, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // 2 * rsqrt(1.0 - 
	0x52, 0x2e, 0x7a, 0x29, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // R.z) : 0.;.const
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, //  vec2 uv = vec2(
	0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x6d, 0x20, 0x2a, 0x20, 0x52, 0x2e, 0x78, 0x2c, 0x20, 0x30, // 0.5 - m * R.x, 0
	0x2e, 0x35, 0x20, 0x2d, 0x20, 0x6d, 0x20, 0x2a, 0x20, 0x52, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x62, // .5 - m * R.y);.b
	0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, // allImageColor = 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, // textureLod(tex_b
	0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x75, 0x76, 0x2c, 0x20, 0x6c, // all_color, uv, l
	0x6f, 0x64, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // od).rgb;.const v
	0x65, 0x63, 0x34, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x20, // ec4 decalColorT 
	0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, // = texture(tex_ba
	0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // ll_decal, v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x65, 0x63, // oord0);.vec3 dec
	0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, // alColor = decalC
	0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, // olorT.rgb;.ballI
	0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x53, 0x63, 0x72, 0x65, // mageColor = Scre
	0x65, 0x6e, 0x48, 0x44, 0x52, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, // enHDR(ballImageC
	0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // olor, decalColor
	0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, // );.if ((w_h_disa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x7a, 0x20, 0x21, 0x3d, // bleLighting.z !=
	0x20, 0x30, 0x2e, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, //  0.)).{.gl_FragC
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x62, 0x61, 0x6c, 0x6c, // olor = vec4(ball
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x63, 0x42, 0x61, 0x73, 0x65, // ImageColor,cBase
	0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x61, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // _Alpha.a);.retur
	0x6e, 0x3b, 0x0a, 0x7d, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, // n;.}.ballImageCo
	0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, // lor *= 0.5*fenvE
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, // missionScale_Tex
	0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // Width.x;.const v
	0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, // ec3 playfield_no
	0x72, 0x6d, 0x61, 0x6c, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, // rmal = ( (matWor
	0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ldView) * (float
	0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x31, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x20, // 4(0.,0.,1.,0.)) 
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // ).xyz;.const flo
	0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x70, // at NdotR = dot(p
	0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, // layfield_normal,
	0x20, 0x52, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, //  R);.const vec3 
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x30, 0x20, 0x3d, 0x20, 0x28, // playfield_p0 = (
	0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, //  (matWorldView) 
	0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x20, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, // * (vec4( 0.,0.,0
	0x2e, 0x2c, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, // .,1.0)) ).xyz;.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x20, 0x3d, 0x20, 0x64, // onst float t = d
	0x6f, 0x74, 0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, // ot(playfield_nor
	0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, // mal, v_worldPos.
	0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, // xyz - playfield_
	0x70, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // p0) / NdotR;.con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // st vec3 playfiel
	0x64, 0x5f, 0x68, 0x69, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, // d_hit = v_worldP
	0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x74, 0x20, 0x2a, 0x20, 0x52, 0x3b, 0x0a, // os.xyz - t * R;.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x20, // const vec4 proj 
	0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x29, 0x20, 0x2a, 0x20, // = ( (matProj) * 
	0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, // (vec4(playfield_
	0x68, 0x69, 0x74, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x63, 0x6f, // hit, 1.0)) );.co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x70, 0x20, 0x3d, 0x20, 0x76, // nst vec2 uvp = v
	0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, // ec2(0.5, 0.5) + 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x78, 0x2c, 0x20, 0x2d, 0x70, 0x72, // vec2(proj.x, -pr
	0x6f, 0x6a, 0x2e, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2f, 0x20, 0x70, // oj.y) * (0.5 / p
	0x72, 0x6f, 0x6a, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // roj.w);.const ve
	0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6c, 0x6f, // c3 playfieldColo
	0x72, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x28, 0x0a, 0x74, 0x65, 0x78, // r = 0.25 * (.tex
	0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, // ture(tex_ball_pl
	0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, // ayfield, uvp + v
	0x65, 0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // ec2(w_h_disableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, // ighting.x, 0.)).
	0x72, 0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, // rgb.+ texture(te
	0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, // x_ball_playfield
	0x2c, 0x20, 0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, // , uvp - vec2(w_h
	0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, // _disableLighting
	0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, // .x, 0.)).rgb.+ t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // exture(tex_ball_
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x75, 0x76, 0x70, 0x20, 0x2b, // playfield, uvp +
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, //  vec2(0., w_h_di
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, // sableLighting.y)
	0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, // ).rgb.+ texture(
	0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, // tex_ball_playfie
	0x6c, 0x64, 0x2c, 0x20, 0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, // ld, uvp - vec2(0
	0x2e, 0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, // ., w_h_disableLi
	0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x29, // ghting.y)).rgb.)
	0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x28, 0x75, 0x76, 0x70, 0x2e, 0x78, 0x20, 0x3c, 0x20, // ;.if (!(uvp.x < 
	0x30, 0x2e, 0x20, 0x7c, 0x7c, 0x20, 0x75, 0x76, 0x70, 0x2e, 0x78, 0x20, 0x3e, 0x20, 0x31, 0x2e, // 0. || uvp.x > 1.
	0x20, 0x7c, 0x7c, 0x20, 0x75, 0x76, 0x70, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x20, 0x7c, //  || uvp.y < 0. |
	0x7c, 0x20, 0x75, 0x76, 0x70, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x29, 0x0a, 0x26, 0x26, // | uvp.y > 1.).&&
	0x20, 0x21, 0x28, 0x74, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x62, //  !(t <= 0.)).{.b
	0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, // allImageColor = 
	0x6c, 0x65, 0x72, 0x70, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, // lerp(ballImageCo
	0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, // lor, playfieldCo
	0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, // lor, smoothstep(
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x35, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, // 0.0, 0.15, NdotR
	0x29, 0x20, 0x2a, 0x20, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, // ) * invTableRes_
	0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, // reflection.z);.}
	0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // .ballImageColor 
	0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, // = min(ballImageC
	0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x35, 0x2e, // olor, float3(15.
	0x2c, 0x20, 0x31, 0x35, 0x2e, 0x2c, 0x20, 0x31, 0x35, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x76, 0x65, // , 15., 15.));.ve
	0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x3d, 0x20, 0x63, 0x42, 0x61, // c3 diffuse = cBa
	0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x2a, 0x30, 0x2e, 0x30, // se_Alpha.rgb*0.0
	0x37, 0x35, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, // 75;.const vec3 g
	0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, // lossy = max(diff
	0x75, 0x73, 0x65, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, // use*2.0, vec3(0.
	0x31, 0x2c, 0x30, 0x2e, 0x31, 0x2c, 0x30, 0x2e, 0x31, 0x29, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, // 1,0.1,0.1));.vec
	0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x20, 0x3d, 0x20, 0x62, 0x61, 0x6c, // 3 specular = bal
	0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x63, 0x42, // lImageColor * cB
	0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x67, // ase_Alpha.rgb;.g
	0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x72, 0x67, 0x62, 0x20, // l_FragColor.rgb 
	0x3d, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, // = ballLightLoop(
	0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, // v_worldPos.xyz, 
	0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, // N, V, diffuse, g
	0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, // lossy, specular,
	0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x67, 0x6c, //  1.0, false);.gl
	0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x61, 0x20, 0x3d, 0x20, 0x63, // _FragColor.a = c
	0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x61, 0x3b, 0x0a, 0x7d, 0x0a, // Base_Alpha.a;.}.
	0x00,                                                                                           // .
};
static const uint8_t fs_ball_spherical_decal_dx11[7384] =
{
	0x46, 0x53, 0x48, 0x0b, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x07, 0x6d, // FSH....l.......m
	0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x14, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, // atView..........
	0x0c, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x14, 0x00, 0x40, // .matWorldView..@
	0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x14, // ........matProj.
	0x00, 0x80, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, // ..........ballLi
	0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x0a, 0xc0, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, // ghtPos..........
	0x11, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, // .ballLightEmissi
	0x6f, 0x6e, 0x12, 0x0a, 0x60, 0x01, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x63, 0x41, 0x6d, // on..`........cAm
	0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, // bient_LightRange
	0x12, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x65, 0x6e, 0x76, 0x45, // ...........fenvE
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, // missionScale_Tex
	0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x00, 0x10, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // Width...........
	0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, // fDisableLighting
	0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x12, 0x00, 0x20, 0x02, 0x01, 0x00, // _top_below.. ...
	0x00, 0x00, 0x00, 0x00, 0x0b, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, // .....cBase_Alpha
	0x12, 0x00, 0x30, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x52, 0x6f, 0x75, 0x67, 0x68, // ..0........Rough
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, // ness_WrapL_Edge_
	0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x00, 0x40, 0x02, 0x01, 0x00, 0x00, // Thickness..@....
	0x00, 0x00, 0x00, 0x16, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, // ....invTableRes_
	0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x00, 0x50, 0x02, 0x01, 0x00, // reflection..P...
	0x00, 0x00, 0x00, 0x00, 0x13, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // .....w_h_disable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x00, 0x60, 0x02, 0x01, 0x00, 0x00, 0x00, // Lighting..`.....
	0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // ...tex_ball_colo
	0x72, 0x30, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, // r0..........tex_
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x30, 0x01, 0x02, 0x00, 0x01, // diffuse_env0....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, // ......tex_ball_d
	0x65, 0x63, 0x61, 0x6c, 0x30, 0x01, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x74, // ecal0..........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // ex_ball_playfiel
	0x64, 0x30, 0x01, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, // d0..........tex_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x01, 0x00, 0x00, 0x01, 0x00, // ball_color0.....
	0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // .....tex_diffuse
	0x5f, 0x65, 0x6e, 0x76, 0x30, 0x01, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, // _env0..........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x30, 0x01, 0x03, // ex_ball_decal0..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // ........tex_ball
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x30, 0x01, 0x04, 0x00, 0x01, 0x00, // _playfield0.....
	0x00, 0x00, 0x00, 0x00, 0x9c, 0x1a, 0x00, 0x00, 0x44, 0x58, 0x42, 0x43, 0xa1, 0xf1, 0x71, 0x99, // ........DXBC..q.
	0x45, 0x44, 0x27, 0x23, 0xcf, 0x38, 0xf1, 0x28, 0xcb, 0xa6, 0xfc, 0xb9, 0x01, 0x00, 0x00, 0x00, // ED'#.8.(........
	0x9c, 0x1a, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, // ........,.......
	0xec, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x4e, 0x84, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // ....ISGN........
	0x08, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ....h...........
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, // ............t...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x07, 0x07, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....{...........
	0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, // ............{...
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ................
	0x07, 0x07, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, // ....SV_POSITION.
	0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, // NORMAL.TEXCOORD.
	0x4f, 0x53, 0x47, 0x4e, 0x2c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, // OSGN,...........
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, //  ...............
	0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, // ........SV_TARGE
	0x54, 0x00, 0xab, 0xab, 0x53, 0x48, 0x45, 0x58, 0xa8, 0x19, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, // T...SHEX....P...
	0x6a, 0x06, 0x00, 0x00, 0x6a, 0x28, 0x00, 0x01, 0x59, 0x08, 0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, // j...j(..Y...F. .
	0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, // ....'...Z....`..
	0x00, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....Z....`......
	0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, // Z....`......Z...
	0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, // .`......X....p..
	0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, // ....UU..X....p..
	0x02, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, // ....UU..X....p..
	0x03, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, // ....UU..X....p..
	0x04, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x72, 0x10, 0x10, 0x00, // ....UU..b...r...
	0x01, 0x00, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x32, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....b...2.......
	0x62, 0x10, 0x00, 0x03, 0x72, 0x10, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, // b...r.......e...
	0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x02, 0x0b, 0x00, 0x00, 0x00, // . ......h.......
	0x10, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x80, // ............F...
	0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // A.......F...A...
	0x03, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....D...........
	0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, // ........8...r...
	0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x80, // ............F...
	0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // A...............
	0x00, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, // ....F.......F...
	0x01, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....D...........
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // :.......8...r...
	0x01, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, // ............F...
	0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // F.......F.......
	0x00, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, // ....:.......2...
	0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // r.......F.......
	0xf6, 0x0f, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....A.......F...
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // F.......F.......
	0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // 1............@..
	0x9a, 0x99, 0x19, 0x3f, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, // ...?:.......2...
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........:.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x70, 0x41, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x10, 0xc1, // .@....pA.@......
	0x01, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, // ....:...........
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // ........*...A...
	0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x31, 0x00, 0x00, 0x07, // .....@.....?1...
	0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........@......
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, // :.......D.......
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ....:.......8...
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........:.......
	0x01, 0x40, 0x00, 0x00, 0xf3, 0x04, 0xb5, 0x3e, 0x01, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // .@.....>........
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ....:.......:...
	0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0d, 0x32, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....2...2.......
	0xf6, 0x0f, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, // ....A.......F...
	0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, // .....@.....?...?
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, // ........H.......
	0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, // CU..r.......F...
	0x03, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, // ....F~.......`..
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, // ....:.......E...
	0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ....CU..r.......
	0x46, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // F.......F~......
	0x00, 0x60, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x72, 0x00, 0x10, 0x00, // .`..........r...
	0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ....F...A.......
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, // .@.....?...?...?
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ........r.......
	0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // F...A........@..
	0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, // ...?...?...?....
	0x32, 0x00, 0x00, 0x0d, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, // 2...r.......F...
	0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // A.......F.......
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, // .@.....?...?...?
	0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....4...r.......
	0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // F........@......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x08, // ............9...
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // ........*. .....
	0x26, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, // &....@..........
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0x82, 0x20, 0x10, 0x00, // :.......6.... ..
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, // ....:. .....#...
	0x36, 0x00, 0x00, 0x05, 0x72, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 6...r ......F...
	0x03, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x01, 0x15, 0x00, 0x00, 0x01, 0x38, 0x00, 0x00, 0x08, // ....>.......8...
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // .......... .....
	0x21, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x38, 0x00, 0x00, 0x07, // !....@.....?8...
	0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // r...............
	0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, // F...............
	0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, // ....F. .........
	0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, // F...........r...
	0x04, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x80, // ....F.......F. .
	0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x08, // A...............
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // ........F. .....
	0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, // ....F...........
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........:.......
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, // :.......2...r...
	0x02, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ........A.......
	0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // F.......F.......
	0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, // 8...r.......V...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x83, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, // ....F. .........
	0x32, 0x00, 0x00, 0x0a, 0xb2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x8c, 0x20, 0x00, // 2...........F. .
	0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x46, 0x08, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, // F.......2...r...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x83, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, // ....F. .........
	0xa6, 0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x03, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........F.......
	0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....r.......F...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x83, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, // ....F. .........
	0x0e, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....B........@..
	0x00, 0x00, 0x00, 0x3f, 0x2a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, // ...?*.......6...
	0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // ............A...
	0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x32, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ....8...2.......
	0xa6, 0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x32, 0x00, 0x00, 0x0c, 0x32, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x10, 0x00, // 2...2...........
	0x02, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // .............@..
	0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ...?...?........
	0x31, 0x00, 0x00, 0x0a, 0xc2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x06, 0x04, 0x10, 0x00, // 1...............
	0x05, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .....@..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x0a, 0x32, 0x00, 0x10, 0x00, // ........1...2...
	0x06, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, // .....@.....?...?
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // ........F.......
	0x3c, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // <...".......*...
	0x05, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x07, // ............<...
	0x22, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // ".......:.......
	0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, // ........<..."...
	0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, // ................
	0x02, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x05, 0x22, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....;...".......
	0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ........1.......
	0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // .....@......:...
	0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // :...............
	0x1f, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, // ....:.......2...
	0xc2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, 0x0c, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0xa6, 0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........@......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x36, 0x00, 0x00, 0x06, // .......?...?6...
	0x52, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // R......... .....
	0x26, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x08, 0xa2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // &...6...........
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, // .@.........?....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x32, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........2.......
	0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x66, 0x0a, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // F.......f.......
	0x45, 0x00, 0x00, 0x8b, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, // E.......CU..r...
	0x06, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, // ....F.......F~..
	0x04, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, // .....`..........
	0x32, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // 2...........A...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, // ....F.......E...
	0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....CU..r.......
	0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // F.......F~......
	0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // .`..........r...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x06, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x08, 0x52, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ....6...R.......
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .@.....?........
	0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0xa2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ....6...........
	0x56, 0x85, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // V. .....&.......
	0x32, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // 2...............
	0x46, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, 0xc2, 0x00, 0x00, 0x80, // F.......E.......
	0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, // CU..r.......F...
	0x04, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, // ....F~.......`..
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........r.......
	0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // F.......F.......
	0x00, 0x00, 0x00, 0x08, 0x32, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, // ....2.......F...
	0x05, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, // ........A.......
	0x45, 0x00, 0x00, 0x8b, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, // E.......CU..r...
	0x04, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, // ....F.......F~..
	0x04, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // .....`..........
	0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x38, 0x20, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // F.......8 ......
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....:........@..
	0x55, 0x55, 0xd5, 0x40, 0x32, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // UU.@2...........
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, // :........@......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // .@....@@8.......
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ....:.......:...
	0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....8...........
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // :.......:.......
	0x38, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 8...........:...
	0x00, 0x00, 0x00, 0x00, 0x2a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, // ....*. .....%...
	0x32, 0x00, 0x00, 0x0d, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 2...r.......F...
	0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3e, 0x00, 0x00, 0x80, 0x3e, // .....@.....>...>
	0x00, 0x00, 0x80, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // ...>....F...A...
	0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....2...r.......
	0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........F.......
	0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, 0x33, 0x00, 0x00, 0x0a, // F...........3...
	0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // r.......F.......
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x70, 0x41, 0x00, 0x00, 0x70, 0x41, 0x00, 0x00, 0x70, 0x41, // .@....pA..pA..pA
	0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0b, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....8...r.......
	0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // F. .....#....@..
	0x9a, 0x99, 0x99, 0x3d, 0x9a, 0x99, 0x99, 0x3d, 0x9a, 0x99, 0x99, 0x3d, 0x00, 0x00, 0x00, 0x00, // ...=...=...=....
	0x38, 0x00, 0x00, 0x0b, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // 8...r.......F. .
	0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x9a, 0x99, 0x19, 0x3e, // ....#....@.....>
	0x9a, 0x99, 0x19, 0x3e, 0x9a, 0x99, 0x19, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x0a, // ...>...>....4...
	0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // r.......F.......
	0x02, 0x40, 0x00, 0x00, 0xcd, 0xcc, 0xcc, 0x3d, 0xcd, 0xcc, 0xcc, 0x3d, 0xcd, 0xcc, 0xcc, 0x3d, // .@.....=...=...=
	0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // ....8...r.......
	0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // F.......F. .....
	0x23, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // #...4...........
	0x2a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // *...............
	0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 4...........:...
	0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, // ............4...
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ........*.......
	0x1a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ........4.......
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ....:...........
	0x04, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....4...........
	0x2a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // *...............
	0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 4...........:...
	0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // ................
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........:.......
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // :.......1.......
	0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x3a, 0x00, 0x10, 0x00, // .....@.....?:...
	0x01, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0a, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, // .@.....?...?...?
	0x00, 0x00, 0x80, 0x3f, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ...?:.......8...
	0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // r...............
	0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // F.......8...r...
	0x06, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x04, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....7...r.......
	0xf6, 0x0f, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // ........F.......
	0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, // F.......7...r...
	0x04, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, // ....F...........
	0x32, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x16, 0x85, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // 2......... .....
	0x24, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, // $....@.....?...?
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ........8.......
	0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ................
	0x05, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....8...........
	0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, // :. ..... ...:. .
	0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0xd2, 0x00, 0x10, 0x00, // .... ...........
	0x05, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // ........A.......
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // .@.....?.......?
	0x00, 0x00, 0x80, 0x3f, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ...?8...........
	0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // :.......:.......
	0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....r.......F...
	0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, // ....F.......8...
	0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x08, // F. ..... ...9...
	0x82, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // .......... .....
	0x22, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x08, // "....@......6...
	0x72, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // r........@......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, // ............6...
	0x82, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........@......
	0x30, 0x00, 0x00, 0x01, 0x21, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // 0...!...........
	0x3a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, // :........@......
	0x03, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0b, // ....:.......8...
	0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // r.......F. .....
	0x01, 0x00, 0x00, 0x00, 0x56, 0x85, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, // ....V. .........
	0x3a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0d, 0x72, 0x00, 0x10, 0x00, // :.......2...r...
	0x08, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....F. .........
	0x06, 0x80, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // .. .........:...
	0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0d, // ....F.......2...
	0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // r.......F. .....
	0x02, 0x00, 0x00, 0x00, 0xa6, 0x8a, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, // ...... .........
	0x3a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // :.......F.......
	0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....r.......F...
	0x08, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ....F. .........
	0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....r.......F...
	0x08, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ....F...A.......
	0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, // ....F.......D...
	0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ........:.......
	0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // 8...r...........
	0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, // ....F...........
	0x82, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........F.......
	0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x12, 0x00, 0x10, 0x00, // F...............
	0x0a, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x1a, 0x80, 0x20, 0x00, // ....:......... .
	0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, // ....$...1..."...
	0x0a, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // .....@..........
	0x0a, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, // ................
	0x0a, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........:.......
	0x38, 0x00, 0x00, 0x07, 0xd2, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, // 8...............
	0x03, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, // ................
	0x72, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x86, 0x03, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, // r...............
	0x56, 0x05, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // V.......1.......
	0x09, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // .....@......:...
	0x09, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ........:.......
	0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 2...r.......F...
	0x08, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // F.......F.......
	0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // D...........:...
	0x08, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ....8...r.......
	0xf6, 0x0f, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ........F.......
	0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, // ....F...........
	0x12, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ........F.......
	0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, // F...............
	0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x08, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ....1...".......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // .@......:.......
	0x31, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // 1...B........@..
	0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, // ................
	0x22, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ".......*.......
	0x1a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, // ........1...B...
	0x08, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // .....@..........
	0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ........".......
	0x2a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // *...............
	0x00, 0x00, 0x00, 0x08, 0x42, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, // ....B...........
	0x41, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // A........@.....?
	0x38, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // 8...........*...
	0x08, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ....*.......8...
	0x12, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ................
	0x0a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, // ........8...B...
	0x08, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ....*...........
	0x09, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ....2...r.......
	0x86, 0x03, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, // F.......8.......
	0x08, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // .............@..
	0x00, 0x00, 0x00, 0x41, 0x0e, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ...A............
	0x1a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ................
	0x2f, 0x00, 0x00, 0x05, 0x42, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // /...B.......:...
	0x08, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x42, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ....8...B.......
	0x2a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // *......... .....
	0x24, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x05, 0x42, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // $.......B.......
	0x2a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, // *.......8.......
	0x08, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ....*...........
	0x08, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xd2, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ....2...........
	0x06, 0x09, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ................
	0x06, 0x09, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, // ........7...r...
	0x0a, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x86, 0x03, 0x10, 0x00, // ....V...........
	0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, // ....F...........
	0x38, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 8...........:...
	0x07, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, // ....:...........
	0x12, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ................
	0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x08, 0x12, 0x00, 0x10, 0x00, // :........ ......
	0x08, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, // ........A.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x38, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, // .@.....?8.......
	0x08, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ................
	0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ................
	0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // :........@.....?
	0x0e, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ................
	0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, // ....:.......8...
	0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x82, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // F. .........:...
	0x06, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ....2...r.......
	0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // F...............
	0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, // F...........r...
	0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, // ....F.......F...
	0x41, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, // A.......2...r...
	0x09, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, // ...... ....."...
	0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // F.......F.......
	0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // 7...r...........
	0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ........r.......
	0x46, 0x02, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // F.......F.......
	0x1e, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x06, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x01, // .....@..........
	0x31, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // 1............@..
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, // ....:...........
	0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, // ........8...r...
	0x00, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x16, 0x86, 0x20, 0x00, // ....V......... .
	0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, // ........2...r...
	0x00, 0x00, 0x00, 0x00, 0x16, 0x86, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ...... .........
	0x06, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........F.......
	0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x86, 0x20, 0x00, // 2...r......... .
	0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // F...............
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....D...........
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // :.......8...r...
	0x00, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x00, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x0b, 0x32, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........2.......
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, 0x00, 0x00, 0x80, 0x38, 0x00, 0x00, 0x00, 0x00, // .@.....8...8....
	0x00, 0x00, 0x00, 0x00, 0x16, 0x05, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x01, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, // ................
	0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0xc1, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, // ...."...........
	0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x31, 0x00, 0x00, 0x0a, 0x32, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x05, 0x10, 0x00, // 1...2...........
	0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .....@..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, // ........7..."...
	0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // .............@..
	0x00, 0x00, 0xc0, 0x3e, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x38, 0x00, 0x00, 0x07, // ...>.@.....>8...
	0x42, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // B...............
	0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x42, 0x00, 0x10, 0x00, // ........2...B...
	0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....*........@..
	0xd0, 0x1d, 0x0a, 0x3d, 0x01, 0x40, 0x00, 0x00, 0xdc, 0xe7, 0x20, 0xbe, 0x37, 0x00, 0x00, 0x0a, // ...=.@.... .7...
	0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x0a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ....A...........
	0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....2...........
	0x2a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // *...............
	0x1a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x0a, 0x12, 0x00, 0x10, 0x00, // ........7.......
	0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, // ................
	0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // A...............
	0x00, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x37, 0x00, 0x00, 0x09, // .....@.....?7...
	0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........:.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // .@.....?........
	0x00, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x80, // ............*...
	0xc1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // .........@.....?
	0x1d, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // ............*...
	0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, // .....@......7...
	0x22, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // "...............
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // .@.......@.....?
	0x31, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // 1...B........@..
	0x00, 0x00, 0x80, 0x38, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, // ...8:.......2...
	0x42, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, // B.......*.......
	0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x1a, 0x5b, 0x4b, 0xbd, 0x01, 0x40, 0x00, 0x00, // .....@...[K..@..
	0x66, 0x00, 0xff, 0x3e, 0x4b, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // f..>K...........
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // :.......8.......
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // ....:.......*...
	0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x42, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....2...B.......
	0x2a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // *...A.......:...
	0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x37, 0x00, 0x00, 0x09, // .....@.....?7...
	0x42, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // B...............
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // :.......*.......
	0x37, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // 7...".......*...
	0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, // ....*...........
	0x01, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, // ....H.......CU..
	0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x7e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // F~.......`......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // .@......8...r...
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ....2...r.......
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // F......... .....
	0x21, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, // !...F...........
	0x31, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // 1............@..
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, // ....:.......2...
	0xe2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x06, 0x89, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, // .. .....#.......
	0x07, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....7...r ......
	0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0x82, 0x20, 0x10, 0x00, // F.......6.... ..
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, // ....:. .....#...
	0x3e, 0x00, 0x00, 0x01, 0x00, 0x00, 0x70, 0x02,                                                 // >.....p.
};
static const uint8_t fs_ball_spherical_decal_spv[11975] =
{
	0x46, 0x53, 0x48, 0x0b, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x0c, 0x62, // FSH....l.......b
	0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x0a, 0xc0, 0x00, 0x0a, // allLightPos.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x14, 0x01, 0x00, // ......matView...
	0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, // ........Roughnes
	0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, // s_WrapL_Edge_Thi
	0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x01, 0x40, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // ckness..@.......
	0x13, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, // .cAmbient_LightR
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x01, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x62, // ange...........b
	0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, // allLightEmission
	0x12, 0x0a, 0x60, 0x01, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x44, 0x69, 0x73, 0x61, // ..`........fDisa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, // bleLighting_top_
	0x62, 0x65, 0x6c, 0x6f, 0x77, 0x12, 0x01, 0x20, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // below.. ........
	0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, // fenvEmissionScal
	0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x01, 0x10, 0x02, 0x01, 0x00, // e_TexWidth......
	0x00, 0x00, 0x00, 0x00, 0x13, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // .....w_h_disable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x01, 0x60, 0x02, 0x01, 0x00, 0x00, 0x00, // Lighting..`.....
	0x00, 0x00, 0x0b, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x01, // ...cBase_Alpha..
	0x30, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, // 0........matWorl
	0x64, 0x56, 0x69, 0x65, 0x77, 0x14, 0x01, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // dView..@........
	0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x14, 0x01, 0x80, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, // matProj.........
	0x00, 0x16, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, // ..invTableRes_re
	0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x01, 0x50, 0x02, 0x01, 0x00, 0x00, 0x00, // flection..P.....
	0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // ...tex_ball_colo
	0x72, 0x30, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, // r0......."..tex_
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x30, 0x00, 0x04, 0x00, 0x00, // diffuse_env0....
	0x00, 0x00, 0x02, 0x22, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, // ..."..tex_ball_d
	0x65, 0x63, 0x61, 0x6c, 0x30, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0x12, 0x74, // ecal0......."..t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // ex_ball_playfiel
	0x64, 0x30, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0xf4, 0x2c, 0x00, 0x00, 0x03, // d0......."..,...
	0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x0b, 0x00, 0x08, 0x00, 0x9f, 0x06, 0x00, 0x00, 0x00, // .#..............
	0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x06, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30, 0x00, // ...GLSL.std.450.
	0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, // ................
	0x00, 0x09, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, // ...........main.
	0x00, 0x00, 0x00, 0x47, 0x03, 0x00, 0x00, 0x4b, 0x03, 0x00, 0x00, 0x4e, 0x03, 0x00, 0x00, 0x5d, // ...G...K...N...]
	0x03, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, // ................
	0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x05, // ................
	0x00, 0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, // ...............m
	0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x74, // ain........j...t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, // ex_ball_colorSam
	0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x74, // pler.......m...t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x65, 0x78, // ex_ball_colorTex
	0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x77, 0x00, 0x00, 0x00, 0x74, // ture.......w...t
	0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x53, 0x61, // ex_diffuse_envSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x79, 0x00, 0x00, 0x00, 0x74, // mpler......y...t
	0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x54, 0x65, // ex_diffuse_envTe
	0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x7d, 0x00, 0x00, 0x00, 0x74, // xture......}...t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x53, 0x61, 0x6d, // ex_ball_decalSam
	0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x74, // pler...........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x54, 0x65, 0x78, // ex_ball_decalTex
	0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x09, 0x00, 0x83, 0x00, 0x00, 0x00, 0x74, // ture...........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // ex_ball_playfiel
	0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, 0x00, 0x09, 0x00, 0x85, // dSampler........
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, // ...tex_ball_play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, // fieldTexture....
	0x00, 0x06, 0x00, 0x23, 0x01, 0x00, 0x00, 0x55, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x6c, // ...#...UniformBl
	0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x05, 0x00, 0x23, 0x01, 0x00, 0x00, 0x00, // ock........#....
	0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x00, 0x06, 0x00, 0x07, 0x00, 0x23, // ...matView.....#
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, // .......matWorldV
	0x69, 0x65, 0x77, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x05, 0x00, 0x23, 0x01, 0x00, 0x00, 0x02, // iew........#....
	0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x00, 0x06, 0x00, 0x07, 0x00, 0x23, // ...matProj.....#
	0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, // .......ballLight
	0x50, 0x6f, 0x73, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x23, 0x01, 0x00, 0x00, 0x04, // Pos........#....
	0x00, 0x00, 0x00, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, // ...ballLightEmis
	0x73, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x23, 0x01, 0x00, 0x00, 0x05, // sion.......#....
	0x00, 0x00, 0x00, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, // ...cAmbient_Ligh
	0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x00, 0x06, 0x00, 0x0a, 0x00, 0x23, 0x01, 0x00, 0x00, 0x06, // tRange.....#....
	0x00, 0x00, 0x00, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, // ...fenvEmissionS
	0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x00, 0x00, 0x06, // cale_TexWidth...
	0x00, 0x0a, 0x00, 0x23, 0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x66, 0x44, 0x69, 0x73, 0x61, // ...#.......fDisa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, // bleLighting_top_
	0x62, 0x65, 0x6c, 0x6f, 0x77, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x23, 0x01, 0x00, 0x00, 0x08, // below......#....
	0x00, 0x00, 0x00, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x00, 0x06, // ...cBase_Alpha..
	0x00, 0x0b, 0x00, 0x23, 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x52, 0x6f, 0x75, 0x67, 0x68, // ...#.......Rough
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, // ness_WrapL_Edge_
	0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x00, 0x00, 0x06, 0x00, 0x09, 0x00, 0x23, // Thickness......#
	0x01, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, // .......invTableR
	0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x06, // es_reflection...
	0x00, 0x08, 0x00, 0x23, 0x01, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x77, 0x5f, 0x68, 0x5f, 0x64, // ...#.......w_h_d
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x00, 0x05, // isableLighting..
	0x00, 0x03, 0x00, 0x25, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0x47, // ...%...........G
	0x03, 0x00, 0x00, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x05, // ...v_normal.....
	0x00, 0x05, 0x00, 0x4b, 0x03, 0x00, 0x00, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // ...K...v_texcoor
	0x64, 0x30, 0x00, 0x05, 0x00, 0x05, 0x00, 0x4e, 0x03, 0x00, 0x00, 0x76, 0x5f, 0x77, 0x6f, 0x72, // d0.....N...v_wor
	0x6c, 0x64, 0x50, 0x6f, 0x73, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x5d, 0x03, 0x00, 0x00, 0x62, // ldPos......]...b
	0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x00, 0x00, 0x47, // gfx_FragData0..G
	0x00, 0x04, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // ...j...".......G
	0x00, 0x04, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x47, // ...j...!.......G
	0x00, 0x04, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // ...m...".......G
	0x00, 0x04, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, // ...m...!.......G
	0x00, 0x04, 0x00, 0x77, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // ...w...".......G
	0x00, 0x04, 0x00, 0x77, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x47, // ...w...!.......G
	0x00, 0x04, 0x00, 0x79, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // ...y...".......G
	0x00, 0x04, 0x00, 0x79, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x47, // ...y...!.......G
	0x00, 0x04, 0x00, 0x7d, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // ...}...".......G
	0x00, 0x04, 0x00, 0x7d, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x47, // ...}...!.......G
	0x00, 0x04, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // .......".......G
	0x00, 0x04, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x47, // .......!.......G
	0x00, 0x04, 0x00, 0x83, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // .......".......G
	0x00, 0x04, 0x00, 0x83, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x47, // .......!.......G
	0x00, 0x04, 0x00, 0x85, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // .......".......G
	0x00, 0x04, 0x00, 0x85, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x47, // .......!.......G
	0x00, 0x04, 0x00, 0x21, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x47, // ...!...........G
	0x00, 0x04, 0x00, 0x22, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, // ..."...........H
	0x00, 0x04, 0x00, 0x23, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, // ...#...........H
	0x00, 0x05, 0x00, 0x23, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, // ...#.......#....
	0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x23, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // ...H...#........
	0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, 0x23, 0x01, 0x00, 0x00, 0x01, // .......H...#....
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x23, 0x01, 0x00, 0x00, 0x01, // .......H...#....
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x23, // ...#...@...H...#
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, // ...............H
	0x00, 0x04, 0x00, 0x23, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, // ...#...........H
	0x00, 0x05, 0x00, 0x23, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x80, // ...#.......#....
	0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x23, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, // ...H...#........
	0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x23, 0x01, 0x00, 0x00, 0x03, // .......H...#....
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x23, // ...#.......H...#
	0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x60, 0x01, 0x00, 0x00, 0x48, // .......#...`...H
	0x00, 0x05, 0x00, 0x23, 0x01, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, // ...#.......#....
	0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x23, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x23, // ...H...#.......#
	0x00, 0x00, 0x00, 0x10, 0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x23, 0x01, 0x00, 0x00, 0x07, // .......H...#....
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x20, 0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x23, // ...#... ...H...#
	0x01, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x30, 0x02, 0x00, 0x00, 0x48, // .......#...0...H
	0x00, 0x05, 0x00, 0x23, 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x40, // ...#.......#...@
	0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x23, 0x01, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x23, // ...H...#.......#
	0x00, 0x00, 0x00, 0x50, 0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x23, 0x01, 0x00, 0x00, 0x0b, // ...P...H...#....
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00, 0x23, // ...#...`...G...#
	0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x25, 0x01, 0x00, 0x00, 0x22, // .......G...%..."
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x25, 0x01, 0x00, 0x00, 0x21, // .......G...%...!
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x47, 0x03, 0x00, 0x00, 0x1e, // .......G...G....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x4b, 0x03, 0x00, 0x00, 0x1e, // .......G...K....
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x4e, 0x03, 0x00, 0x00, 0x1e, // .......G...N....
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x5d, 0x03, 0x00, 0x00, 0x1e, // .......G...]....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x21, // ...............!
	0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x02, 0x00, 0x06, // ................
	0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x19, // ........... ....
	0x00, 0x09, 0x00, 0x08, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, // ................
	0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, 0x41, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, // .......A... ....
	0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x42, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x69, // .......B... ...i
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x69, // ...........;...i
	0x00, 0x00, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x6c, // ...j....... ...l
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x6c, // ...........;...l
	0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x69, // ...m.......;...i
	0x00, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x6c, // ...w.......;...l
	0x00, 0x00, 0x00, 0x79, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x69, // ...y.......;...i
	0x00, 0x00, 0x00, 0x7d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x6c, // ...}.......;...l
	0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x69, // ...........;...i
	0x00, 0x00, 0x00, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x6c, // ...........;...l
	0x00, 0x00, 0x00, 0x85, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x41, // ...........+...A
	0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x41, // ...........+...A
	0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x03, 0x00, 0x90, // ................
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb2, // .......+........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb5, // ......?+........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb9, // ......8+........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbe, // .......+........
	0x00, 0x00, 0x00, 0x1a, 0x5b, 0x4b, 0xbd, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc1, // ....[K.+........
	0x00, 0x00, 0x00, 0x66, 0x00, 0xff, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe4, // ...f..>+........
	0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe5, // ......>+........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe7, // ......>+........
	0x00, 0x00, 0x00, 0xd0, 0x1d, 0x0a, 0x3d, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xfc, // ......=+........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x15, 0x00, 0x04, 0x00, 0xfd, 0x00, 0x00, 0x00, 0x20, // ......?........ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0xfd, 0x00, 0x00, 0x00, 0xfe, // .......+........
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0xfd, 0x00, 0x00, 0x00, 0x00, // .......+........
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0xfd, 0x00, 0x00, 0x00, 0x04, // .......+........
	0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x11, // .......,........
	0x01, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x2b, // ...............+
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x18, 0x01, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x40, 0x18, // ..............@.
	0x00, 0x04, 0x00, 0x1f, 0x01, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2b, // ...............+
	0x00, 0x04, 0x00, 0xfd, 0x00, 0x00, 0x00, 0x20, 0x01, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x1c, // ....... ........
	0x00, 0x04, 0x00, 0x21, 0x01, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x20, 0x01, 0x00, 0x00, 0x1c, // ...!....... ....
	0x00, 0x04, 0x00, 0x22, 0x01, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x20, 0x01, 0x00, 0x00, 0x1e, // ..."....... ....
	0x00, 0x0e, 0x00, 0x23, 0x01, 0x00, 0x00, 0x1f, 0x01, 0x00, 0x00, 0x1f, 0x01, 0x00, 0x00, 0x1f, // ...#............
	0x01, 0x00, 0x00, 0x21, 0x01, 0x00, 0x00, 0x22, 0x01, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, // ...!..."........
	0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x24, 0x01, 0x00, 0x00, 0x02, // ....... ...$....
	0x00, 0x00, 0x00, 0x23, 0x01, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x24, 0x01, 0x00, 0x00, 0x25, // ...#...;...$...%
	0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x41, 0x00, 0x00, 0x00, 0x26, // .......+...A...&
	0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x27, 0x01, 0x00, 0x00, 0x02, // ....... ...'....
	0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x2f, 0x01, 0x00, 0x00, 0x02, // ....... .../....
	0x00, 0x00, 0x00, 0x1f, 0x01, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x41, 0x00, 0x00, 0x00, 0x3e, // .......+...A...>
	0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x3f, 0x01, 0x00, 0x00, 0x02, // ....... ...?....
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x70, // .......+.......p
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x2b, 0x00, 0x04, 0x00, 0x41, 0x00, 0x00, 0x00, 0x82, // ......A+...A....
	0x01, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0xfd, 0x00, 0x00, 0x00, 0x83, // .......+........
	0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x41, 0x00, 0x00, 0x00, 0xa0, // .......+...A....
	0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x41, 0x00, 0x00, 0x00, 0xad, // .......+...A....
	0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x41, 0x00, 0x00, 0x00, 0xca, // .......+...A....
	0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x41, 0x00, 0x00, 0x00, 0x0b, // .......+...A....
	0x02, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4a, // .......+.......J
	0x02, 0x00, 0x00, 0x9a, 0x99, 0x19, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4d, // ......?+.......M
	0x02, 0x00, 0x00, 0x00, 0x00, 0x70, 0x41, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x57, // .....pA+.......W
	0x02, 0x00, 0x00, 0xf3, 0x04, 0xb5, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x41, 0x00, 0x00, 0x00, 0x7f, // ......>+...A....
	0x02, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x41, 0x00, 0x00, 0x00, 0x86, // .......+...A....
	0x02, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x94, // .......,........
	0x02, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0xb9, // ................
	0x00, 0x00, 0x00, 0x2c, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x9e, 0x02, 0x00, 0x00, 0xb9, // ...,............
	0x00, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x2b, // ...............+
	0x00, 0x04, 0x00, 0x41, 0x00, 0x00, 0x00, 0xb7, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2c, // ...A...........,
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xbc, 0x02, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0xfc, // ................
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc9, 0x02, 0x00, 0x00, 0x00, // ...+............
	0x00, 0x80, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0e, 0x03, 0x00, 0x00, 0x9a, // ..>+............
	0x99, 0x19, 0x3e, 0x2c, 0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x17, 0x03, 0x00, 0x00, 0x4d, // ..>,...........M
	0x02, 0x00, 0x00, 0x4d, 0x02, 0x00, 0x00, 0x4d, 0x02, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...M...M...+....
	0x00, 0x00, 0x00, 0x1d, 0x03, 0x00, 0x00, 0x9a, 0x99, 0x99, 0x3d, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........=+....
	0x00, 0x00, 0x00, 0x21, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...!......@+....
	0x00, 0x00, 0x00, 0x23, 0x03, 0x00, 0x00, 0xcd, 0xcc, 0xcc, 0x3d, 0x2c, 0x00, 0x06, 0x00, 0x1a, // ...#......=,....
	0x00, 0x00, 0x00, 0x24, 0x03, 0x00, 0x00, 0x23, 0x03, 0x00, 0x00, 0x23, 0x03, 0x00, 0x00, 0x23, // ...$...#...#...#
	0x03, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x46, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, // ... ...F........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x46, 0x03, 0x00, 0x00, 0x47, 0x03, 0x00, 0x00, 0x01, // ...;...F...G....
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x4a, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, // ... ...J........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x4a, 0x03, 0x00, 0x00, 0x4b, 0x03, 0x00, 0x00, 0x01, // ...;...J...K....
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x46, 0x03, 0x00, 0x00, 0x4e, 0x03, 0x00, 0x00, 0x01, // ...;...F...N....
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x5c, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, // ... ............
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x5c, 0x03, 0x00, 0x00, 0x5d, 0x03, 0x00, 0x00, 0x03, // ...;.......]....
	0x00, 0x00, 0x00, 0x29, 0x00, 0x03, 0x00, 0x42, 0x00, 0x00, 0x00, 0x78, 0x03, 0x00, 0x00, 0x2c, // ...)...B...x...,
	0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x7c, 0x06, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0xb2, // .......|........
	0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x81, // .......+........
	0x06, 0x00, 0x00, 0x00, 0x00, 0x10, 0xc1, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x82, // .......+........
	0x06, 0x00, 0x00, 0xdc, 0xe7, 0x20, 0xbe, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, // ..... .6........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, // ................
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x6a, // ...=.......k...j
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x6d, // ...=.......n...m
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x77, // ...=.......x...w
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x7a, 0x00, 0x00, 0x00, 0x79, // ...=.......z...y
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x7d, // ...=.......~...}
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x7f, // ...=............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x83, // ...=............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x86, 0x00, 0x00, 0x00, 0x85, // ...=............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x48, 0x03, 0x00, 0x00, 0x47, // ...=.......H...G
	0x03, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x4c, 0x03, 0x00, 0x00, 0x4b, // ...=.......L...K
	0x03, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x4f, 0x03, 0x00, 0x00, 0x4e, // ...=.......O...N
	0x03, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x83, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, // ................
	0x00, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0xb2, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xb2, // ................
	0x03, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xb5, 0x03, 0x00, 0x00, 0x4f, // ...............O
	0x03, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xb6, 0x03, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0xb5, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1a, // ...E............
	0x00, 0x00, 0x00, 0xb8, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x48, // ...........E...H
	0x03, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xbb, 0x03, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0xb6, 0x03, 0x00, 0x00, 0xb8, 0x03, 0x00, 0x00, 0x94, // ...G............
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbe, 0x03, 0x00, 0x00, 0xb6, 0x03, 0x00, 0x00, 0xbb, // ................
	0x03, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0xbe, // .......B........
	0x03, 0x00, 0x00, 0x4a, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc3, // ...J............
	0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xbe, 0x03, 0x00, 0x00, 0x4d, // .......2.......M
	0x02, 0x00, 0x00, 0x81, 0x06, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc4, // ................
	0x03, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0xc3, 0x03, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc6, 0x03, 0x00, 0x00, 0xbb, 0x03, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc7, 0x03, 0x00, 0x00, 0xb2, // ................
	0x00, 0x00, 0x00, 0xc6, 0x03, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0xc8, // ...........B....
	0x03, 0x00, 0x00, 0xc7, 0x03, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xca, 0x03, 0x00, 0x00, 0xbb, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x83, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xcb, 0x03, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0xca, // ................
	0x03, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xcc, 0x03, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0xcb, 0x03, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ... ............
	0x00, 0x00, 0x00, 0xcd, 0x03, 0x00, 0x00, 0x57, 0x02, 0x00, 0x00, 0xcc, 0x03, 0x00, 0x00, 0xa9, // .......W........
	0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xce, 0x03, 0x00, 0x00, 0xc8, 0x03, 0x00, 0x00, 0xcd, // ................
	0x03, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd1, // .......Q........
	0x03, 0x00, 0x00, 0xbb, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x7a, 0x06, 0x00, 0x00, 0xce, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, // ...z............
	0x00, 0x00, 0x00, 0xd3, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x7a, // ...........2...z
	0x06, 0x00, 0x00, 0xd1, 0x03, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xd6, 0x03, 0x00, 0x00, 0xbb, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x7f, // ................
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7b, 0x06, 0x00, 0x00, 0xce, 0x03, 0x00, 0x00, 0x0c, // .......{........
	0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd8, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // ...............2
	0x00, 0x00, 0x00, 0x7b, 0x06, 0x00, 0x00, 0xd6, 0x03, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x50, // ...{...........P
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xd9, 0x03, 0x00, 0x00, 0xd3, 0x03, 0x00, 0x00, 0xd8, // ................
	0x03, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x90, 0x00, 0x00, 0x00, 0x91, 0x04, 0x00, 0x00, 0x6e, // ...V...........n
	0x00, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x58, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x94, // ...k...X........
	0x04, 0x00, 0x00, 0x91, 0x04, 0x00, 0x00, 0xd9, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xc4, // ................
	0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xde, 0x03, 0x00, 0x00, 0x94, // ...O............
	0x04, 0x00, 0x00, 0x94, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x90, 0x00, 0x00, 0x00, 0x9b, 0x04, 0x00, 0x00, 0x80, // ...V............
	0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x9d, // ...~...W........
	0x04, 0x00, 0x00, 0x9b, 0x04, 0x00, 0x00, 0x4c, 0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, // .......L...O....
	0x00, 0x00, 0x00, 0xe3, 0x03, 0x00, 0x00, 0x9d, 0x04, 0x00, 0x00, 0x9d, 0x04, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0xa3, 0x04, 0x00, 0x00, 0x7c, 0x06, 0x00, 0x00, 0xe3, 0x03, 0x00, 0x00, 0x83, // .......|........
	0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x7d, 0x06, 0x00, 0x00, 0xde, 0x03, 0x00, 0x00, 0x7c, // .......}.......|
	0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xa6, 0x04, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x7d, 0x06, 0x00, 0x00, 0xa3, 0x04, 0x00, 0x00, 0x7c, // ...2...}.......|
	0x06, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xa7, 0x04, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0xa6, 0x04, 0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x41, // ...(...........A
	0x00, 0x06, 0x00, 0x3f, 0x01, 0x00, 0x00, 0xe7, 0x03, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x7f, // ...?.......%....
	0x02, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe8, // .......=........
	0x03, 0x00, 0x00, 0xe7, 0x03, 0x00, 0x00, 0xb7, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0xe9, // ...........B....
	0x03, 0x00, 0x00, 0xe8, 0x03, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xf2, // ................
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xe9, 0x03, 0x00, 0x00, 0xea, // ................
	0x03, 0x00, 0x00, 0xf2, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xea, 0x03, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x06, 0x00, 0x3f, 0x01, 0x00, 0x00, 0xec, 0x03, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x86, // ...?.......%....
	0x02, 0x00, 0x00, 0x83, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xed, // .......=........
	0x03, 0x00, 0x00, 0xec, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xee, // .......Q........
	0x03, 0x00, 0x00, 0xa7, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xef, 0x03, 0x00, 0x00, 0xa7, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf0, 0x03, 0x00, 0x00, 0xa7, 0x04, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xf1, 0x03, 0x00, 0x00, 0xee, // ...P............
	0x03, 0x00, 0x00, 0xef, 0x03, 0x00, 0x00, 0xf0, 0x03, 0x00, 0x00, 0xed, 0x03, 0x00, 0x00, 0xf9, // ................
	0x00, 0x02, 0x00, 0x83, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xf2, 0x03, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x06, 0x00, 0x3f, 0x01, 0x00, 0x00, 0xf3, 0x03, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0xca, // ...?.......%....
	0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf4, // .......=........
	0x03, 0x00, 0x00, 0xf3, 0x03, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf5, // ................
	0x03, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0xf4, 0x03, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0xf7, 0x03, 0x00, 0x00, 0xa7, 0x04, 0x00, 0x00, 0xf5, 0x03, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x05, 0x00, 0x2f, 0x01, 0x00, 0x00, 0xf8, 0x03, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x88, // .../.......%....
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x1f, 0x01, 0x00, 0x00, 0xf9, 0x03, 0x00, 0x00, 0xf8, // ...=............
	0x03, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xfa, 0x03, 0x00, 0x00, 0x94, // ................
	0x02, 0x00, 0x00, 0xf9, 0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xfb, // .......O........
	0x03, 0x00, 0x00, 0xfa, 0x03, 0x00, 0x00, 0xfa, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xfe, // ................
	0x03, 0x00, 0x00, 0xfb, 0x03, 0x00, 0x00, 0xbb, 0x03, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x2f, // ...........A.../
	0x01, 0x00, 0x00, 0xff, 0x03, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x3d, // .......%.......=
	0x00, 0x04, 0x00, 0x1f, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0xff, 0x03, 0x00, 0x00, 0x90, // ................
	0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x01, 0x04, 0x00, 0x00, 0x9e, 0x02, 0x00, 0x00, 0x00, // ................
	0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0x01, // ...O............
	0x04, 0x00, 0x00, 0x01, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x06, 0x04, 0x00, 0x00, 0x4f, // ...............O
	0x03, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, // ................
	0x04, 0x00, 0x00, 0xfb, 0x03, 0x00, 0x00, 0x06, 0x04, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x09, 0x04, 0x00, 0x00, 0x07, 0x04, 0x00, 0x00, 0xfe, 0x03, 0x00, 0x00, 0x8e, // ................
	0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x0d, 0x04, 0x00, 0x00, 0xbb, 0x03, 0x00, 0x00, 0x09, // ................
	0x04, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x0e, 0x04, 0x00, 0x00, 0x4f, // ...............O
	0x03, 0x00, 0x00, 0x0d, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, // .......Q........
	0x04, 0x00, 0x00, 0x0e, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x11, 0x04, 0x00, 0x00, 0x0e, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x12, 0x04, 0x00, 0x00, 0x0e, 0x04, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x13, 0x04, 0x00, 0x00, 0x10, // ...P............
	0x04, 0x00, 0x00, 0x11, 0x04, 0x00, 0x00, 0x12, 0x04, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x05, 0x00, 0x2f, 0x01, 0x00, 0x00, 0x14, 0x04, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0xb7, // .../.......%....
	0x02, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x1f, 0x01, 0x00, 0x00, 0x15, 0x04, 0x00, 0x00, 0x14, // ...=............
	0x04, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x16, 0x04, 0x00, 0x00, 0x13, // ................
	0x04, 0x00, 0x00, 0x15, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x18, // .......Q........
	0x04, 0x00, 0x00, 0x16, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x1a, 0x04, 0x00, 0x00, 0x16, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x7f, // ................
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1b, 0x04, 0x00, 0x00, 0x1a, 0x04, 0x00, 0x00, 0x50, // ...............P
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x1c, 0x04, 0x00, 0x00, 0x18, 0x04, 0x00, 0x00, 0x1b, // ................
	0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1e, 0x04, 0x00, 0x00, 0x16, // ...Q............
	0x04, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1f, // ................
	0x04, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x1e, 0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x0b, // ................
	0x00, 0x00, 0x00, 0x20, 0x04, 0x00, 0x00, 0x1c, 0x04, 0x00, 0x00, 0x1f, 0x04, 0x00, 0x00, 0x81, // ... ............
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x21, 0x04, 0x00, 0x00, 0xbc, 0x02, 0x00, 0x00, 0x20, // .......!....... 
	0x04, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, 0x01, 0x00, 0x00, 0x23, 0x04, 0x00, 0x00, 0x25, // ...A...?...#...%
	0x01, 0x00, 0x00, 0x7f, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...........=....
	0x00, 0x00, 0x00, 0x24, 0x04, 0x00, 0x00, 0x23, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, // ...$...#...P....
	0x00, 0x00, 0x00, 0x25, 0x04, 0x00, 0x00, 0x24, 0x04, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x81, // ...%...$........
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x26, 0x04, 0x00, 0x00, 0x21, 0x04, 0x00, 0x00, 0x25, // .......&...!...%
	0x04, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x90, 0x00, 0x00, 0x00, 0xae, 0x04, 0x00, 0x00, 0x86, // ...V............
	0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xb0, // .......W........
	0x04, 0x00, 0x00, 0xae, 0x04, 0x00, 0x00, 0x26, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, // .......&...O....
	0x00, 0x00, 0x00, 0x29, 0x04, 0x00, 0x00, 0xb0, 0x04, 0x00, 0x00, 0xb0, 0x04, 0x00, 0x00, 0x00, // ...)............
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, // ...........A...?
	0x01, 0x00, 0x00, 0x2b, 0x04, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x7f, 0x02, 0x00, 0x00, 0x00, // ...+...%........
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2c, 0x04, 0x00, 0x00, 0x2b, // ...=.......,...+
	0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x2d, 0x04, 0x00, 0x00, 0x2c, // ...P.......-...,
	0x04, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x2e, // ................
	0x04, 0x00, 0x00, 0x21, 0x04, 0x00, 0x00, 0x2d, 0x04, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x90, // ...!...-...V....
	0x00, 0x00, 0x00, 0xb7, 0x04, 0x00, 0x00, 0x86, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x57, // ...............W
	0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xb9, 0x04, 0x00, 0x00, 0xb7, 0x04, 0x00, 0x00, 0x2e, // ................
	0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x31, 0x04, 0x00, 0x00, 0xb9, // ...O.......1....
	0x04, 0x00, 0x00, 0xb9, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x32, 0x04, 0x00, 0x00, 0x29, // ...........2...)
	0x04, 0x00, 0x00, 0x31, 0x04, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, 0x01, 0x00, 0x00, 0x34, // ...1...A...?...4
	0x04, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x7f, 0x02, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x3d, // ...%...........=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x35, 0x04, 0x00, 0x00, 0x34, 0x04, 0x00, 0x00, 0x50, // .......5...4...P
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x36, 0x04, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x35, // .......6.......5
	0x04, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x37, 0x04, 0x00, 0x00, 0x21, // ...........7...!
	0x04, 0x00, 0x00, 0x36, 0x04, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x90, 0x00, 0x00, 0x00, 0xc0, // ...6...V........
	0x04, 0x00, 0x00, 0x86, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, // ...........W....
	0x00, 0x00, 0x00, 0xc2, 0x04, 0x00, 0x00, 0xc0, 0x04, 0x00, 0x00, 0x37, 0x04, 0x00, 0x00, 0x4f, // ...........7...O
	0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x3a, 0x04, 0x00, 0x00, 0xc2, 0x04, 0x00, 0x00, 0xc2, // .......:........
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x3b, 0x04, 0x00, 0x00, 0x32, 0x04, 0x00, 0x00, 0x3a, // .......;...2...:
	0x04, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, 0x01, 0x00, 0x00, 0x3d, 0x04, 0x00, 0x00, 0x25, // ...A...?...=...%
	0x01, 0x00, 0x00, 0x7f, 0x02, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...........=....
	0x00, 0x00, 0x00, 0x3e, 0x04, 0x00, 0x00, 0x3d, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, // ...>...=...P....
	0x00, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x3e, 0x04, 0x00, 0x00, 0x83, // ...?.......>....
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00, 0x21, 0x04, 0x00, 0x00, 0x3f, // .......@...!...?
	0x04, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x90, 0x00, 0x00, 0x00, 0xc9, 0x04, 0x00, 0x00, 0x86, // ...V............
	0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xcb, // .......W........
	0x04, 0x00, 0x00, 0xc9, 0x04, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, // .......@...O....
	0x00, 0x00, 0x00, 0x43, 0x04, 0x00, 0x00, 0xcb, 0x04, 0x00, 0x00, 0xcb, 0x04, 0x00, 0x00, 0x00, // ...C............
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0x44, 0x04, 0x00, 0x00, 0x3b, 0x04, 0x00, 0x00, 0x43, 0x04, 0x00, 0x00, 0x8e, // ...D...;...C....
	0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x45, 0x04, 0x00, 0x00, 0x44, 0x04, 0x00, 0x00, 0xc9, // .......E...D....
	0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x47, 0x04, 0x00, 0x00, 0x21, // ...Q.......G...!
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x48, // ...........B...H
	0x04, 0x00, 0x00, 0x47, 0x04, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...G.......Q....
	0x00, 0x00, 0x00, 0x4a, 0x04, 0x00, 0x00, 0x21, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xba, // ...J...!........
	0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x4b, 0x04, 0x00, 0x00, 0x4a, 0x04, 0x00, 0x00, 0xb2, // ...B...K...J....
	0x00, 0x00, 0x00, 0xa6, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x4c, 0x04, 0x00, 0x00, 0x48, // .......B...L...H
	0x04, 0x00, 0x00, 0x4b, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4e, // ...K...Q.......N
	0x04, 0x00, 0x00, 0x21, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x42, // ...!...........B
	0x00, 0x00, 0x00, 0x4f, 0x04, 0x00, 0x00, 0x4e, 0x04, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xa6, // ...O...N........
	0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x50, 0x04, 0x00, 0x00, 0x4c, 0x04, 0x00, 0x00, 0x4f, // ...B...P...L...O
	0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x52, 0x04, 0x00, 0x00, 0x21, // ...Q.......R...!
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x53, // ...........B...S
	0x04, 0x00, 0x00, 0x52, 0x04, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x05, 0x00, 0x42, // ...R...........B
	0x00, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0x50, 0x04, 0x00, 0x00, 0x53, 0x04, 0x00, 0x00, 0xa8, // ...T...P...S....
	0x00, 0x04, 0x00, 0x42, 0x00, 0x00, 0x00, 0x55, 0x04, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0xbc, // ...B...U...T....
	0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x57, 0x04, 0x00, 0x00, 0x09, 0x04, 0x00, 0x00, 0xb9, // ...B...W........
	0x00, 0x00, 0x00, 0xa8, 0x00, 0x04, 0x00, 0x42, 0x00, 0x00, 0x00, 0x58, 0x04, 0x00, 0x00, 0x57, // .......B...X...W
	0x04, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x59, 0x04, 0x00, 0x00, 0x55, // .......B...Y...U
	0x04, 0x00, 0x00, 0x58, 0x04, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x64, 0x04, 0x00, 0x00, 0x00, // ...X.......d....
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x59, 0x04, 0x00, 0x00, 0x5a, 0x04, 0x00, 0x00, 0x64, // .......Y...Z...d
	0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x5a, 0x04, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, // .......Z........
	0x00, 0x00, 0x00, 0x5e, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0xb9, // ...^.......1....
	0x00, 0x00, 0x00, 0x0e, 0x03, 0x00, 0x00, 0xfe, 0x03, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, // ...........A...?
	0x01, 0x00, 0x00, 0x5f, 0x04, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x0b, 0x02, 0x00, 0x00, 0x04, // ..._...%........
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x60, 0x04, 0x00, 0x00, 0x5f, // ...=.......`..._
	0x04, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x61, 0x04, 0x00, 0x00, 0x5e, // ...........a...^
	0x04, 0x00, 0x00, 0x60, 0x04, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x62, // ...`...P.......b
	0x04, 0x00, 0x00, 0x61, 0x04, 0x00, 0x00, 0x61, 0x04, 0x00, 0x00, 0x61, 0x04, 0x00, 0x00, 0x0c, // ...a...a...a....
	0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x63, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2e, // .......c........
	0x00, 0x00, 0x00, 0xf7, 0x03, 0x00, 0x00, 0x45, 0x04, 0x00, 0x00, 0x62, 0x04, 0x00, 0x00, 0xf9, // .......E...b....
	0x00, 0x02, 0x00, 0x64, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x64, 0x04, 0x00, 0x00, 0xf5, // ...d.......d....
	0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x83, 0x06, 0x00, 0x00, 0xf7, 0x03, 0x00, 0x00, 0xf2, // ................
	0x03, 0x00, 0x00, 0x63, 0x04, 0x00, 0x00, 0x5a, 0x04, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x1a, // ...c...Z........
	0x00, 0x00, 0x00, 0x66, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x83, // ...f.......%....
	0x06, 0x00, 0x00, 0x17, 0x03, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x27, 0x01, 0x00, 0x00, 0x67, // .......A...'...g
	0x04, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x86, 0x02, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, // ...%.......=....
	0x00, 0x00, 0x00, 0x68, 0x04, 0x00, 0x00, 0x67, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, // ...h...g...O....
	0x00, 0x00, 0x00, 0x69, 0x04, 0x00, 0x00, 0x68, 0x04, 0x00, 0x00, 0x68, 0x04, 0x00, 0x00, 0x00, // ...i...h...h....
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0x6a, 0x04, 0x00, 0x00, 0x69, 0x04, 0x00, 0x00, 0x1d, 0x03, 0x00, 0x00, 0x8e, // ...j...i........
	0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x6c, 0x04, 0x00, 0x00, 0x6a, 0x04, 0x00, 0x00, 0x21, // .......l...j...!
	0x03, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x6d, 0x04, 0x00, 0x00, 0x01, // ...........m....
	0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x6c, 0x04, 0x00, 0x00, 0x24, 0x03, 0x00, 0x00, 0x41, // ...(...l...$...A
	0x00, 0x05, 0x00, 0x27, 0x01, 0x00, 0x00, 0x6f, 0x04, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x86, // ...'...o...%....
	0x02, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x70, 0x04, 0x00, 0x00, 0x6f, // ...=.......p...o
	0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x71, 0x04, 0x00, 0x00, 0x70, // ...O.......q...p
	0x04, 0x00, 0x00, 0x70, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ...p............
	0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x72, 0x04, 0x00, 0x00, 0x66, // ...........r...f
	0x04, 0x00, 0x00, 0x71, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd6, // ...q...Q........
	0x04, 0x00, 0x00, 0x6a, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...j.......Q....
	0x00, 0x00, 0x00, 0xd8, 0x04, 0x00, 0x00, 0x6a, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, // .......j.......Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xda, 0x04, 0x00, 0x00, 0x6a, 0x04, 0x00, 0x00, 0x02, // ...........j....
	0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xdb, 0x04, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0xd8, 0x04, 0x00, 0x00, 0xda, 0x04, 0x00, 0x00, 0x0c, // ...(............
	0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xdc, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, // ...............(
	0x00, 0x00, 0x00, 0xd6, 0x04, 0x00, 0x00, 0xdb, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xde, 0x04, 0x00, 0x00, 0x6d, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, // .......m.......Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe0, 0x04, 0x00, 0x00, 0x6d, 0x04, 0x00, 0x00, 0x01, // ...........m....
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe2, 0x04, 0x00, 0x00, 0x6d, // ...Q...........m
	0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe3, // ................
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0xe0, 0x04, 0x00, 0x00, 0xe2, // .......(........
	0x04, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe4, 0x04, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0xde, 0x04, 0x00, 0x00, 0xe3, 0x04, 0x00, 0x00, 0x51, // ...(...........Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe5, 0x04, 0x00, 0x00, 0x72, 0x04, 0x00, 0x00, 0x00, // ...........r....
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe6, 0x04, 0x00, 0x00, 0x72, // ...Q...........r
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe7, // .......Q........
	0x04, 0x00, 0x00, 0x72, 0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, // ...r............
	0x00, 0x00, 0x00, 0xe8, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0xe6, // ...........(....
	0x04, 0x00, 0x00, 0xe7, 0x04, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe9, // ................
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0xe5, 0x04, 0x00, 0x00, 0xe8, // .......(........
	0x04, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xec, 0x04, 0x00, 0x00, 0xdc, // ................
	0x04, 0x00, 0x00, 0xe4, 0x04, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0xee, // ...........B....
	0x04, 0x00, 0x00, 0xec, 0x04, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xf8, // ................
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xee, 0x04, 0x00, 0x00, 0xef, // ................
	0x04, 0x00, 0x00, 0xf8, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xef, 0x04, 0x00, 0x00, 0x88, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf1, 0x04, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0xec, // ................
	0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xf4, 0x04, 0x00, 0x00, 0x6a, // ...............j
	0x04, 0x00, 0x00, 0xf1, 0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xf7, // ................
	0x04, 0x00, 0x00, 0x6d, 0x04, 0x00, 0x00, 0xf1, 0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xf8, // ...m............
	0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xf8, 0x04, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0x91, 0x06, 0x00, 0x00, 0x6d, 0x04, 0x00, 0x00, 0x64, 0x04, 0x00, 0x00, 0xf7, // .......m...d....
	0x04, 0x00, 0x00, 0xef, 0x04, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x86, // ................
	0x06, 0x00, 0x00, 0x6a, 0x04, 0x00, 0x00, 0x64, 0x04, 0x00, 0x00, 0xf4, 0x04, 0x00, 0x00, 0xef, // ...j...d........
	0x04, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0xfb, 0x04, 0x00, 0x00, 0xdc, // .......B........
	0x04, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0xfc, // ...........B....
	0x04, 0x00, 0x00, 0x78, 0x03, 0x00, 0x00, 0xfb, 0x04, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x42, // ...x...........B
	0x00, 0x00, 0x00, 0xfe, 0x04, 0x00, 0x00, 0xe4, 0x04, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xa6, // ................
	0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0xff, 0x04, 0x00, 0x00, 0xfc, 0x04, 0x00, 0x00, 0xfe, // ...B............
	0x04, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x14, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // ................
	0x00, 0x04, 0x00, 0xff, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x14, 0x05, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0x00, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x01, 0x05, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0x01, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x8d, // ................
	0x06, 0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x0f, 0x05, 0x00, 0x00, 0x10, // ................
	0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x41, 0x00, 0x00, 0x00, 0x84, 0x06, 0x00, 0x00, 0x8c, // .......A........
	0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x12, 0x05, 0x00, 0x00, 0x10, 0x05, 0x00, 0x00, 0xb1, // ................
	0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x04, 0x05, 0x00, 0x00, 0x84, 0x06, 0x00, 0x00, 0x0b, // ...B............
	0x02, 0x00, 0x00, 0xf6, 0x00, 0x04, 0x00, 0x13, 0x05, 0x00, 0x00, 0x10, 0x05, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x04, 0x05, 0x00, 0x00, 0x05, 0x05, 0x00, 0x00, 0x13, // ................
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, // ...........A...?
	0x01, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x3e, 0x01, 0x00, 0x00, 0x00, // .......%...>....
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0b, 0x05, 0x00, 0x00, 0x0a, // ...=............
	0x05, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xc3, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, // ................
	0x00, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x43, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x43, // .......C.......C
	0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x27, 0x01, 0x00, 0x00, 0x44, 0x05, 0x00, 0x00, 0x25, // ...A...'...D...%
	0x01, 0x00, 0x00, 0x26, 0x01, 0x00, 0x00, 0x84, 0x06, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, // ...&.......=....
	0x00, 0x00, 0x00, 0x45, 0x05, 0x00, 0x00, 0x44, 0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...E...D...Q....
	0x00, 0x00, 0x00, 0x47, 0x05, 0x00, 0x00, 0x45, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, // ...G...E.......Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x48, 0x05, 0x00, 0x00, 0x45, 0x05, 0x00, 0x00, 0x01, // .......H...E....
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x49, 0x05, 0x00, 0x00, 0x45, // ...Q.......I...E
	0x05, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x4a, // .......P.......J
	0x05, 0x00, 0x00, 0x47, 0x05, 0x00, 0x00, 0x48, 0x05, 0x00, 0x00, 0x49, 0x05, 0x00, 0x00, 0xb2, // ...G...H...I....
	0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x2f, 0x01, 0x00, 0x00, 0x4b, 0x05, 0x00, 0x00, 0x25, // ...A.../...K...%
	0x01, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x1f, 0x01, 0x00, 0x00, 0x4c, // .......=.......L
	0x05, 0x00, 0x00, 0x4b, 0x05, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x4d, // ...K...........M
	0x05, 0x00, 0x00, 0x4a, 0x05, 0x00, 0x00, 0x4c, 0x05, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, // ...J...L...O....
	0x00, 0x00, 0x00, 0x4e, 0x05, 0x00, 0x00, 0x4d, 0x05, 0x00, 0x00, 0x4d, 0x05, 0x00, 0x00, 0x00, // ...N...M...M....
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0x4f, 0x05, 0x00, 0x00, 0x4e, 0x05, 0x00, 0x00, 0x4f, 0x03, 0x00, 0x00, 0x0c, // ...O...N...O....
	0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, // .......Q.......E
	0x00, 0x00, 0x00, 0x4f, 0x05, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x53, // ...O...........S
	0x05, 0x00, 0x00, 0xb8, 0x03, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, // .......Q...A...?
	0x01, 0x00, 0x00, 0x56, 0x05, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x3e, 0x01, 0x00, 0x00, 0xfe, // ...V...%...>....
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x57, 0x05, 0x00, 0x00, 0x56, // ...=.......W...V
	0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x58, 0x05, 0x00, 0x00, 0x53, // ...........X...S
	0x05, 0x00, 0x00, 0x57, 0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x59, // ...W.......B...Y
	0x05, 0x00, 0x00, 0x58, 0x05, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x42, // ...X...........B
	0x00, 0x00, 0x00, 0x5a, 0x05, 0x00, 0x00, 0x78, 0x03, 0x00, 0x00, 0x59, 0x05, 0x00, 0x00, 0xf7, // ...Z...x...Y....
	0x00, 0x03, 0x00, 0x66, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x5a, // ...f...........Z
	0x05, 0x00, 0x00, 0x5b, 0x05, 0x00, 0x00, 0x66, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x5b, // ...[...f.......[
	0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, 0x01, 0x00, 0x00, 0x5d, 0x05, 0x00, 0x00, 0x25, // ...A...?...]...%
	0x01, 0x00, 0x00, 0x3e, 0x01, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...>.......=....
	0x00, 0x00, 0x00, 0x5e, 0x05, 0x00, 0x00, 0x5d, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, // ...^...]........
	0x00, 0x00, 0x00, 0x5f, 0x05, 0x00, 0x00, 0x53, 0x05, 0x00, 0x00, 0x5e, 0x05, 0x00, 0x00, 0x41, // ..._...S...^...A
	0x00, 0x06, 0x00, 0x3f, 0x01, 0x00, 0x00, 0x60, 0x05, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x3e, // ...?...`...%...>
	0x01, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x61, // .......=.......a
	0x05, 0x00, 0x00, 0x60, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x62, // ...`...........b
	0x05, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x61, 0x05, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // .......a........
	0x00, 0x00, 0x00, 0xc7, 0x05, 0x00, 0x00, 0x62, 0x05, 0x00, 0x00, 0x62, 0x05, 0x00, 0x00, 0x88, // .......b...b....
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x64, 0x05, 0x00, 0x00, 0x5f, 0x05, 0x00, 0x00, 0xc7, // .......d..._....
	0x05, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x65, 0x05, 0x00, 0x00, 0x86, // ...........e....
	0x06, 0x00, 0x00, 0x64, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x66, 0x05, 0x00, 0x00, 0xf8, // ...d.......f....
	0x00, 0x02, 0x00, 0x66, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x92, // ...f............
	0x06, 0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x43, 0x05, 0x00, 0x00, 0x65, 0x05, 0x00, 0x00, 0x5b, // .......C...e...[
	0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x68, 0x05, 0x00, 0x00, 0x53, // .......B...h...S
	0x05, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x8a, 0x05, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x68, 0x05, 0x00, 0x00, 0x69, 0x05, 0x00, 0x00, 0x8a, // .......h...i....
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x69, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, // .......i........
	0x00, 0x00, 0x00, 0x6b, 0x05, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, 0xb6, 0x03, 0x00, 0x00, 0x0c, // ...k...Q........
	0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x6c, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, // .......l.......E
	0x00, 0x00, 0x00, 0x6b, 0x05, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6e, // ...k...........n
	0x05, 0x00, 0x00, 0xb8, 0x03, 0x00, 0x00, 0x6c, 0x05, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, // .......l........
	0x00, 0x00, 0x00, 0x71, 0x05, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, 0x6c, 0x05, 0x00, 0x00, 0x94, // ...q...Q...l....
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x73, 0x05, 0x00, 0x00, 0xb6, 0x03, 0x00, 0x00, 0x6c, // .......s.......l
	0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x75, 0x05, 0x00, 0x00, 0x6e, // .......B...u...n
	0x05, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x77, // ...........B...w
	0x05, 0x00, 0x00, 0x71, 0x05, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x42, // ...q...........B
	0x00, 0x00, 0x00, 0x78, 0x05, 0x00, 0x00, 0x75, 0x05, 0x00, 0x00, 0x77, 0x05, 0x00, 0x00, 0xba, // ...x...u...w....
	0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x7a, 0x05, 0x00, 0x00, 0x73, 0x05, 0x00, 0x00, 0xb9, // ...B...z...s....
	0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x7b, 0x05, 0x00, 0x00, 0x78, // .......B...{...x
	0x05, 0x00, 0x00, 0x7a, 0x05, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x89, 0x05, 0x00, 0x00, 0x00, // ...z............
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x7b, 0x05, 0x00, 0x00, 0x7c, 0x05, 0x00, 0x00, 0x89, // .......{...|....
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x7c, 0x05, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1a, // .......|........
	0x00, 0x00, 0x00, 0xcb, 0x05, 0x00, 0x00, 0x7c, 0x06, 0x00, 0x00, 0x91, 0x06, 0x00, 0x00, 0x83, // .......|........
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xcc, 0x05, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x71, // ...............q
	0x05, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xcd, 0x05, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xcc, 0x05, 0x00, 0x00, 0x18, 0x01, 0x00, 0x00, 0x8e, // ................
	0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xce, 0x05, 0x00, 0x00, 0xcb, 0x05, 0x00, 0x00, 0xcd, // ................
	0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xcf, 0x05, 0x00, 0x00, 0x91, // ................
	0x06, 0x00, 0x00, 0xce, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7f, // ................
	0x05, 0x00, 0x00, 0x0b, 0x05, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x81, 0x05, 0x00, 0x00, 0x70, 0x01, 0x00, 0x00, 0x73, 0x05, 0x00, 0x00, 0x88, // .......p...s....
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x82, 0x05, 0x00, 0x00, 0x7f, 0x05, 0x00, 0x00, 0x81, // ................
	0x05, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x84, 0x05, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x6e, 0x05, 0x00, 0x00, 0x0b, 0x05, 0x00, 0x00, 0x85, // .......n........
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x85, 0x05, 0x00, 0x00, 0x82, 0x05, 0x00, 0x00, 0x84, // ................
	0x05, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x86, 0x05, 0x00, 0x00, 0xcf, // ................
	0x05, 0x00, 0x00, 0x85, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x88, // ................
	0x05, 0x00, 0x00, 0x92, 0x06, 0x00, 0x00, 0x86, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x89, // ................
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x89, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0x94, 0x06, 0x00, 0x00, 0x92, 0x06, 0x00, 0x00, 0x69, 0x05, 0x00, 0x00, 0x88, // ...........i....
	0x05, 0x00, 0x00, 0x7c, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x8a, 0x05, 0x00, 0x00, 0xf8, // ...|............
	0x00, 0x02, 0x00, 0x8a, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x93, // ................
	0x06, 0x00, 0x00, 0x92, 0x06, 0x00, 0x00, 0x66, 0x05, 0x00, 0x00, 0x94, 0x06, 0x00, 0x00, 0x89, // .......f........
	0x05, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8d, 0x05, 0x00, 0x00, 0x4f, // ...............O
	0x05, 0x00, 0x00, 0x4f, 0x05, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x90, // ...O............
	0x05, 0x00, 0x00, 0x8d, 0x05, 0x00, 0x00, 0x8d, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, // ...........A...?
	0x01, 0x00, 0x00, 0x91, 0x05, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x82, 0x01, 0x00, 0x00, 0x83, // .......%........
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x92, 0x05, 0x00, 0x00, 0x91, // ...=............
	0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, 0x01, 0x00, 0x00, 0x93, 0x05, 0x00, 0x00, 0x25, // ...A...?.......%
	0x01, 0x00, 0x00, 0x82, 0x01, 0x00, 0x00, 0x83, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...........=....
	0x00, 0x00, 0x00, 0x94, 0x05, 0x00, 0x00, 0x93, 0x05, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x95, 0x05, 0x00, 0x00, 0x92, 0x05, 0x00, 0x00, 0x94, 0x05, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x06, 0x00, 0x3f, 0x01, 0x00, 0x00, 0x96, 0x05, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x82, // ...?.......%....
	0x01, 0x00, 0x00, 0x83, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x97, // .......=........
	0x05, 0x00, 0x00, 0x96, 0x05, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x98, // ................
	0x05, 0x00, 0x00, 0x95, 0x05, 0x00, 0x00, 0x97, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, // ...........A...?
	0x01, 0x00, 0x00, 0x99, 0x05, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x82, 0x01, 0x00, 0x00, 0x83, // .......%........
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9a, 0x05, 0x00, 0x00, 0x99, // ...=............
	0x05, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9b, 0x05, 0x00, 0x00, 0x98, // ................
	0x05, 0x00, 0x00, 0x9a, 0x05, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9c, // ................
	0x05, 0x00, 0x00, 0x90, 0x05, 0x00, 0x00, 0x9b, 0x05, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x9d, 0x05, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x9c, 0x05, 0x00, 0x00, 0x0c, // ................
	0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9e, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, // ...............+
	0x00, 0x00, 0x00, 0x9d, 0x05, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x85, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa1, 0x05, 0x00, 0x00, 0x9e, 0x05, 0x00, 0x00, 0x9e, // ................
	0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa3, 0x05, 0x00, 0x00, 0x8d, // ................
	0x05, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa4, // ................
	0x05, 0x00, 0x00, 0xa1, 0x05, 0x00, 0x00, 0xa3, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0xa8, 0x05, 0x00, 0x00, 0x91, 0x06, 0x00, 0x00, 0x86, 0x06, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x06, 0x00, 0x27, 0x01, 0x00, 0x00, 0xab, 0x05, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0xa0, // ...'.......%....
	0x01, 0x00, 0x00, 0x84, 0x06, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xac, // .......=........
	0x05, 0x00, 0x00, 0xab, 0x05, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xad, // .......O........
	0x05, 0x00, 0x00, 0xac, 0x05, 0x00, 0x00, 0xac, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xae, // ................
	0x05, 0x00, 0x00, 0x93, 0x06, 0x00, 0x00, 0xad, 0x05, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0xb0, 0x05, 0x00, 0x00, 0xae, 0x05, 0x00, 0x00, 0xa4, 0x05, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x05, 0x00, 0x27, 0x01, 0x00, 0x00, 0xb2, 0x05, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x82, // ...'.......%....
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xb3, 0x05, 0x00, 0x00, 0xb2, // ...=............
	0x05, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xb4, 0x05, 0x00, 0x00, 0xb3, // ...O............
	0x05, 0x00, 0x00, 0xb3, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xb6, 0x05, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xa8, 0x05, 0x00, 0x00, 0xb4, 0x05, 0x00, 0x00, 0xb0, // ...2............
	0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, 0x01, 0x00, 0x00, 0xb7, 0x05, 0x00, 0x00, 0x25, // ...A...?.......%
	0x01, 0x00, 0x00, 0xad, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...........=....
	0x00, 0x00, 0x00, 0xb8, 0x05, 0x00, 0x00, 0xb7, 0x05, 0x00, 0x00, 0xb7, 0x00, 0x05, 0x00, 0x42, // ...............B
	0x00, 0x00, 0x00, 0xb9, 0x05, 0x00, 0x00, 0xb8, 0x05, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xf7, // ................
	0x00, 0x03, 0x00, 0xc2, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xb9, // ................
	0x05, 0x00, 0x00, 0xba, 0x05, 0x00, 0x00, 0xc0, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xc0, // ................
	0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xc3, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xba, // ................
	0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, 0x01, 0x00, 0x00, 0xbb, 0x05, 0x00, 0x00, 0x25, // ...A...?.......%
	0x01, 0x00, 0x00, 0xad, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...........=....
	0x00, 0x00, 0x00, 0xbc, 0x05, 0x00, 0x00, 0xbb, 0x05, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x1a, // ...........P....
	0x00, 0x00, 0x00, 0xbd, 0x05, 0x00, 0x00, 0xbc, 0x05, 0x00, 0x00, 0xbc, 0x05, 0x00, 0x00, 0xbc, // ................
	0x05, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xd5, 0x05, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0xb6, 0x05, 0x00, 0x00, 0x86, 0x06, 0x00, 0x00, 0xbd, // ................
	0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xc3, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xc2, // ................
	0x05, 0x00, 0x00, 0xff, 0x00, 0x01, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xc3, 0x05, 0x00, 0x00, 0xf5, // ................
	0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x95, 0x06, 0x00, 0x00, 0xb6, 0x05, 0x00, 0x00, 0xc0, // ................
	0x05, 0x00, 0x00, 0xd5, 0x05, 0x00, 0x00, 0xba, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0x0f, 0x05, 0x00, 0x00, 0x8d, 0x06, 0x00, 0x00, 0x95, 0x06, 0x00, 0x00, 0xf9, // ................
	0x00, 0x02, 0x00, 0x10, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x10, 0x05, 0x00, 0x00, 0x80, // ................
	0x00, 0x05, 0x00, 0x41, 0x00, 0x00, 0x00, 0x12, 0x05, 0x00, 0x00, 0x84, 0x06, 0x00, 0x00, 0x88, // ...A............
	0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x01, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x13, // ................
	0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x14, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x14, // ................
	0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x8c, 0x06, 0x00, 0x00, 0x11, // ................
	0x01, 0x00, 0x00, 0xf8, 0x04, 0x00, 0x00, 0x8d, 0x06, 0x00, 0x00, 0x13, 0x05, 0x00, 0x00, 0xba, // ................
	0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x17, 0x05, 0x00, 0x00, 0xdc, 0x04, 0x00, 0x00, 0xb9, // ...B............
	0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x18, 0x05, 0x00, 0x00, 0x78, // .......B.......x
	0x03, 0x00, 0x00, 0x17, 0x05, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x28, 0x05, 0x00, 0x00, 0x00, // ...........(....
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x18, 0x05, 0x00, 0x00, 0x19, 0x05, 0x00, 0x00, 0x28, // ...............(
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x19, 0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x1b, 0x05, 0x00, 0x00, 0xb8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1c, 0x05, 0x00, 0x00, 0xb8, 0x03, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1d, 0x05, 0x00, 0x00, 0xb8, // ...Q............
	0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x1e, // .......P........
	0x05, 0x00, 0x00, 0x1b, 0x05, 0x00, 0x00, 0x1c, 0x05, 0x00, 0x00, 0x1d, 0x05, 0x00, 0x00, 0xb9, // ................
	0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x2f, 0x01, 0x00, 0x00, 0x1f, 0x05, 0x00, 0x00, 0x25, // ...A.../.......%
	0x01, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x1f, 0x01, 0x00, 0x00, 0x20, // .......=....... 
	0x05, 0x00, 0x00, 0x1f, 0x05, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x21, // ...............!
	0x05, 0x00, 0x00, 0x1e, 0x05, 0x00, 0x00, 0x20, 0x05, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, // ....... ...O....
	0x00, 0x00, 0x00, 0x22, 0x05, 0x00, 0x00, 0x21, 0x05, 0x00, 0x00, 0x21, 0x05, 0x00, 0x00, 0x00, // ..."...!...!....
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0x23, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x22, // ...#.......E..."
	0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe7, 0x05, 0x00, 0x00, 0x23, // ...Q...........#
	0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe8, // .......Q........
	0x05, 0x00, 0x00, 0x23, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x1a, // ...#............
	0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0xf6, // ................
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xf6, 0x05, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xf7, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe7, // ................
	0x05, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf8, 0x05, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe8, 0x05, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x42, // ...............B
	0x00, 0x00, 0x00, 0xfa, 0x05, 0x00, 0x00, 0xf8, 0x05, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xbc, // ................
	0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0xfc, 0x05, 0x00, 0x00, 0xf7, 0x05, 0x00, 0x00, 0xb5, // ...B............
	0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0xfd, 0x05, 0x00, 0x00, 0xfa, // .......B........
	0x05, 0x00, 0x00, 0xfc, 0x05, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xff, 0x05, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xfd, 0x05, 0x00, 0x00, 0xfe, 0x05, 0x00, 0x00, 0xff, // ................
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xfe, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x1a, // ................
	0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xff, 0x05, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x02, 0x06, 0x00, 0x00, 0xf8, 0x05, 0x00, 0x00, 0xf7, 0x05, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x05, 0x06, 0x00, 0x00, 0xf8, 0x05, 0x00, 0x00, 0xf7, // ................
	0x05, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x02, // ................
	0x06, 0x00, 0x00, 0x05, 0x06, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x07, // ...........B....
	0x06, 0x00, 0x00, 0xe8, 0x05, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x08, 0x06, 0x00, 0x00, 0x07, 0x06, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x00, 0xe5, // ................
	0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0a, 0x06, 0x00, 0x00, 0xe7, // ................
	0x00, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0d, // ................
	0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x0a, 0x06, 0x00, 0x00, 0x06, // .......2........
	0x06, 0x00, 0x00, 0x82, 0x06, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x0e, // ...........B....
	0x06, 0x00, 0x00, 0xe8, 0x05, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x10, 0x06, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x12, 0x06, 0x00, 0x00, 0x0e, 0x06, 0x00, 0x00, 0x10, 0x06, 0x00, 0x00, 0x06, // ................
	0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x14, 0x06, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x0d, 0x06, 0x00, 0x00, 0x12, 0x06, 0x00, 0x00, 0x08, // ...2............
	0x06, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x15, 0x06, 0x00, 0x00, 0xe7, // .......B........
	0x05, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x17, // ................
	0x06, 0x00, 0x00, 0x14, 0x06, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x19, // ................
	0x06, 0x00, 0x00, 0x15, 0x06, 0x00, 0x00, 0x17, 0x06, 0x00, 0x00, 0x14, 0x06, 0x00, 0x00, 0xf9, // ................
	0x00, 0x02, 0x00, 0x1a, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x1a, 0x06, 0x00, 0x00, 0xf5, // ................
	0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x88, 0x06, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xfe, // ................
	0x05, 0x00, 0x00, 0x19, 0x06, 0x00, 0x00, 0xff, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xea, 0x05, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x88, 0x06, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xeb, 0x05, 0x00, 0x00, 0x23, 0x05, 0x00, 0x00, 0x02, // ...........#....
	0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x37, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, // .......7........
	0x00, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x22, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x22, // ......."......."
	0x06, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x23, 0x06, 0x00, 0x00, 0x01, // ...........#....
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xeb, 0x05, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x25, 0x06, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x23, 0x06, 0x00, 0x00, 0xbc, // ...%.......#....
	0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x26, 0x06, 0x00, 0x00, 0x25, 0x06, 0x00, 0x00, 0xb5, // ...B...&...%....
	0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x2a, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // .......*........
	0x00, 0x04, 0x00, 0x26, 0x06, 0x00, 0x00, 0x27, 0x06, 0x00, 0x00, 0x2a, 0x06, 0x00, 0x00, 0xf8, // ...&...'...*....
	0x00, 0x02, 0x00, 0x27, 0x06, 0x00, 0x00, 0xbe, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x28, // ...'.......B...(
	0x06, 0x00, 0x00, 0xeb, 0x05, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x29, 0x06, 0x00, 0x00, 0x28, 0x06, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xb2, // ...)...(........
	0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x37, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x2a, // .......7.......*
	0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2d, 0x06, 0x00, 0x00, 0x01, // ...........-....
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xbe, 0x00, 0x00, 0x00, 0x23, 0x06, 0x00, 0x00, 0xc1, // ...2.......#....
	0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2f, 0x06, 0x00, 0x00, 0xb2, // .........../....
	0x00, 0x00, 0x00, 0x23, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x30, // ...#...........0
	0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x2f, 0x06, 0x00, 0x00, 0x85, // .........../....
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x31, 0x06, 0x00, 0x00, 0x2d, 0x06, 0x00, 0x00, 0x30, // .......1...-...0
	0x06, 0x00, 0x00, 0xbe, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x32, 0x06, 0x00, 0x00, 0xeb, // .......B...2....
	0x05, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7f, // ................
	0x06, 0x00, 0x00, 0x2d, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x35, // ...-...........5
	0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x7f, 0x06, 0x00, 0x00, 0x30, // .......2.......0
	0x06, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x36, // ...............6
	0x06, 0x00, 0x00, 0x32, 0x06, 0x00, 0x00, 0x31, 0x06, 0x00, 0x00, 0x35, 0x06, 0x00, 0x00, 0xf9, // ...2...1...5....
	0x00, 0x02, 0x00, 0x37, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x37, 0x06, 0x00, 0x00, 0xf5, // ...7.......7....
	0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x89, 0x06, 0x00, 0x00, 0x29, 0x06, 0x00, 0x00, 0x27, // ...........)...'
	0x06, 0x00, 0x00, 0x36, 0x06, 0x00, 0x00, 0x2a, 0x06, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, // ...6...*...P....
	0x00, 0x00, 0x00, 0xed, 0x05, 0x00, 0x00, 0xea, 0x05, 0x00, 0x00, 0x89, 0x06, 0x00, 0x00, 0x56, // ...............V
	0x00, 0x05, 0x00, 0x90, 0x00, 0x00, 0x00, 0x3f, 0x06, 0x00, 0x00, 0x7a, 0x00, 0x00, 0x00, 0x78, // .......?...z...x
	0x00, 0x00, 0x00, 0x58, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x42, 0x06, 0x00, 0x00, 0x3f, // ...X.......B...?
	0x06, 0x00, 0x00, 0xed, 0x05, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x4f, // ...............O
	0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xdf, 0x05, 0x00, 0x00, 0x42, 0x06, 0x00, 0x00, 0x42, // ...........B...B
	0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x85, // ................
	0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xe1, 0x05, 0x00, 0x00, 0x86, 0x06, 0x00, 0x00, 0xdf, // ................
	0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3f, 0x01, 0x00, 0x00, 0xe2, 0x05, 0x00, 0x00, 0x25, // ...A...?.......%
	0x01, 0x00, 0x00, 0xca, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...........=....
	0x00, 0x00, 0x00, 0xe3, 0x05, 0x00, 0x00, 0xe2, 0x05, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0xe4, 0x05, 0x00, 0x00, 0xe1, 0x05, 0x00, 0x00, 0xe3, 0x05, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x27, 0x05, 0x00, 0x00, 0x8c, 0x06, 0x00, 0x00, 0xe4, // .......'........
	0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x28, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x28, // .......(.......(
	0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x8e, 0x06, 0x00, 0x00, 0x8c, // ................
	0x06, 0x00, 0x00, 0x14, 0x05, 0x00, 0x00, 0x27, 0x05, 0x00, 0x00, 0x37, 0x06, 0x00, 0x00, 0xba, // .......'...7....
	0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x2a, 0x05, 0x00, 0x00, 0xe9, 0x04, 0x00, 0x00, 0xb9, // ...B...*........
	0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x2e, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // ................
	0x00, 0x04, 0x00, 0x2a, 0x05, 0x00, 0x00, 0x2b, 0x05, 0x00, 0x00, 0x2e, 0x05, 0x00, 0x00, 0xf8, // ...*...+........
	0x00, 0x02, 0x00, 0x2b, 0x05, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x2d, // ...+...........-
	0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x66, 0x04, 0x00, 0x00, 0x71, // .......2...f...q
	0x04, 0x00, 0x00, 0x8e, 0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x2e, 0x05, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0x2e, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x8f, // ................
	0x06, 0x00, 0x00, 0x8e, 0x06, 0x00, 0x00, 0x28, 0x05, 0x00, 0x00, 0x2d, 0x05, 0x00, 0x00, 0x2b, // .......(...-...+
	0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7b, 0x04, 0x00, 0x00, 0x8f, // ...Q.......{....
	0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7d, // .......Q.......}
	0x04, 0x00, 0x00, 0x8f, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x7f, 0x04, 0x00, 0x00, 0x8f, 0x06, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x06, 0x00, 0x3f, 0x01, 0x00, 0x00, 0x80, 0x04, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x86, // ...?.......%....
	0x02, 0x00, 0x00, 0x83, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x81, // .......=........
	0x04, 0x00, 0x00, 0x80, 0x04, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x80, // .......P........
	0x06, 0x00, 0x00, 0x7b, 0x04, 0x00, 0x00, 0x7d, 0x04, 0x00, 0x00, 0x7f, 0x04, 0x00, 0x00, 0x81, // ...{...}........
	0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x83, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x83, // ................
	0x04, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x9e, 0x06, 0x00, 0x00, 0xf1, // ................
	0x03, 0x00, 0x00, 0xea, 0x03, 0x00, 0x00, 0x80, 0x06, 0x00, 0x00, 0x2e, 0x05, 0x00, 0x00, 0x3e, // ...............>
	0x00, 0x03, 0x00, 0x5d, 0x03, 0x00, 0x00, 0x9e, 0x06, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, // ...]...........8
	0x00, 0x01, 0x00, 0x00, 0x00, 0x70, 0x02,                                                       // .....p.
};
static const bgfx::EmbeddedShader fs_ball_spherical_decal = BGFX_EMBEDDED_SHADER(fs_ball_spherical_decal);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of fragment shader from fs_ball.sc to fs_ball_spherical_nodecal with options: NOSTEREO SPHERICAL NODECAL
static const uint8_t fs_ball_spherical_nodecal_mtl[10197] =
{
	0x46, 0x53, 0x48, 0x0b, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x15, 0x74, // FSH....l.......t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, // ex_ball_colorSam
	0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x74, // pler...........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x65, 0x78, // ex_ball_colorTex
	0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, // ture...........t
	0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, // ex_envSampler...
	0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x54, // ........tex_envT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // exture..........
	0x16, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, // .tex_diffuse_env
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Sampler.........
	0x00, 0x16, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, // ..tex_diffuse_en
	0x76, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // vTexture........
	0x00, 0x00, 0x15, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, // ...tex_ball_deca
	0x6c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // lSampler........
	0x00, 0x00, 0x15, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, // ...tex_ball_deca
	0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // lTexture........
	0x00, 0x00, 0x19, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, // ...tex_ball_play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, // fieldSampler....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // .......tex_ball_
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // playfieldTexture
	0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x62, 0x61, 0x6c, 0x6c, 0x4c, // ...........ballL
	0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x0a, 0xc0, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, // ightPos.........
	0x00, 0x07, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x14, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, // ..matView.......
	0x00, 0x00, 0x00, 0x1e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, // ....Roughness_Wr
	0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, // apL_Edge_Thickne
	0x73, 0x73, 0x12, 0x01, 0x40, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x63, 0x41, 0x6d, // ss..@........cAm
	0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, // bient_LightRange
	0x12, 0x01, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x62, 0x61, 0x6c, 0x6c, 0x4c, // ...........ballL
	0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0a, 0x60, 0x01, // ightEmission..`.
	0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // .......fDisableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, // ighting_top_belo
	0x77, 0x12, 0x01, 0x20, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x65, 0x6e, 0x76, // w.. ........fenv
	0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, // EmissionScale_Te
	0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x01, 0x10, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // xWidth..........
	0x13, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, // .w_h_disableLigh
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x01, 0x60, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x63, // ting..`........c
	0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x01, 0x30, 0x02, 0x01, 0x00, // Base_Alpha..0...
	0x00, 0x00, 0x00, 0x00, 0x0c, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, // .....matWorldVie
	0x77, 0x14, 0x01, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x6d, 0x61, 0x74, 0x50, // w..@........matP
	0x72, 0x6f, 0x6a, 0x14, 0x01, 0x80, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x69, 0x6e, // roj...........in
	0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, // vTableRes_reflec
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x01, 0x50, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, // tion..P........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x10, 0x00, 0x00, // ex_ball_color...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, // ........tex_diff
	0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // use_env.........
	0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, // ..tex_ball_decal
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x74, 0x65, 0x78, 0x5f, 0x62, // ...........tex_b
	0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x10, 0x00, 0x00, // all_playfield...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc6, 0x24, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, // ........$..#incl
	0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, // ude <metal_stdli
	0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, // b>.#include <sim
	0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, // d/simd.h>..using
	0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, //  namespace metal
	0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, // ;..struct _Globa
	0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, // l.{.    float4x4
	0x20, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //  matView;.    fl
	0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, // oat4x4 matWorldV
	0x69, 0x65, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, // iew;.    float4x
	0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // 4 matProj;.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, // loat4 ballLightP
	0x6f, 0x73, 0x5b, 0x31, 0x30, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // os[10];.    floa
	0x74, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, // t4 ballLightEmis
	0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x31, 0x30, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // sion[10];.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, // oat4 cAmbient_Li
	0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // ghtRange;.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, // oat4 fenvEmissio
	0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x3b, // nScale_TexWidth;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x66, 0x44, 0x69, 0x73, // .    float4 fDis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, // ableLighting_top
	0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // _below;.    floa
	0x74, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x0a, // t4 cBase_Alpha;.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, //     float4 Rough
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, // ness_WrapL_Edge_
	0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // Thickness;.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, // loat4 invTableRe
	0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x20, 0x20, // s_reflection;.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, //   float4 w_h_dis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x3b, 0x0a, 0x7d, 0x3b, // ableLighting;.};
	0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, // ..struct xlatMtl
	0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // Main_out.{.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, // loat4 bgfx_FragD
	0x61, 0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, // ata0 [[color(0)]
	0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, // ];.};..struct xl
	0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, // atMtlMain_in.{. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, //    float3 v_norm
	0x61, 0x6c, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, // al [[user(locn0)
	0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, // ]];.    float2 v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, // _texcoord0 [[use
	0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // r(locn1)]];.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, // float3 v_worldPo
	0x73, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x32, 0x29, 0x5d, // s [[user(locn2)]
	0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x5b, 0x5b, 0x20, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x5f, // ];.};..[[ early_
	0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x20, 0x5d, // fragment_tests ]
	0x5d, 0x20, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // ] fragment xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // tlMain_out xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // tlMain(xlatMtlMa
	0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, // in_in in [[stage
	0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, // _in]], constant 
	0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, // _Global& _mtl_u 
	0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, // [[buffer(0)]], t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, // exture2d<float> 
	0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x5b, // tex_ball_color [
	0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, // [texture(0)]], t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, // exture2d<float> 
	0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x20, // tex_diffuse_env 
	0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, // [[texture(2)]], 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, // texture2d<float>
	0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x20, //  tex_ball_decal 
	0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x33, 0x29, 0x5d, 0x5d, 0x2c, 0x20, // [[texture(3)]], 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, // texture2d<float>
	0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, //  tex_ball_playfi
	0x65, 0x6c, 0x64, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x34, 0x29, // eld [[texture(4)
	0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, 0x65, 0x78, 0x5f, // ]], sampler tex_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ball_colorSample
	0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, // r [[sampler(0)]]
	0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, // , sampler tex_di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ffuse_envSampler
	0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, //  [[sampler(2)]],
	0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, //  sampler tex_bal
	0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, // l_decalSampler [
	0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x33, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, // [sampler(3)]], s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // ampler tex_ball_
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // playfieldSampler
	0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x34, 0x29, 0x5d, 0x5d, 0x29, //  [[sampler(4)]])
	0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // .{.    xlatMtlMa
	0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, // in_out out = {};
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x36, 0x39, // .    float4 _169
	0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, // 0;.    do.    {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x39, 0x34, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, // 947 = fast::norm
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x2d, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // alize(-in.v_worl
	0x64, 0x50, 0x6f, 0x73, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // dPos);.        f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x39, 0x34, 0x39, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, // loat3 _949 = fas
	0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x69, 0x6e, 0x2e, // t::normalize(in.
	0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // v_normal);.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x39, 0x35, 0x32, 0x20, 0x3d, //    float3 _952 =
	0x20, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x5f, 0x39, 0x34, 0x37, 0x2c, 0x20, 0x5f, //  reflect(_947, _
	0x39, 0x34, 0x39, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // 949);.        fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x39, 0x35, 0x35, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, // oat _955 = dot(_
	0x39, 0x34, 0x37, 0x2c, 0x20, 0x5f, 0x39, 0x35, 0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 947, _952);.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x39, 0x37, 0x31, 0x20, 0x3d, //     float _971 =
	0x20, 0x28, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x39, 0x35, 0x32, 0x2e, 0x7a, 0x29, //  ((1.0 - _952.z)
	0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x30, 0x2e, 0x33, 0x35, 0x33, //  > 0.0) ? (0.353
	0x35, 0x35, 0x33, 0x33, 0x38, 0x34, 0x35, 0x34, 0x32, 0x34, 0x36, 0x35, 0x32, 0x30, 0x39, 0x39, // 5533845424652099
	0x36, 0x30, 0x39, 0x33, 0x37, 0x35, 0x20, 0x2a, 0x20, 0x72, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, // 609375 * rsqrt(1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x39, 0x35, 0x32, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x3a, 0x20, // .0 - _952.z)) : 
	0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // 0.0;.        flo
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x31, 0x38, 0x38, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, // at4 _1188 = tex_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // ball_decal.sampl
	0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, // e(tex_ball_decal
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, // Sampler, in.v_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // xcoord0);.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x39, 0x39, 0x36, 0x20, 0x3d, 0x20, //   float3 _996 = 
	0x5f, 0x31, 0x31, 0x38, 0x38, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x31, 0x38, // _1188.xyz * _118
	0x38, 0x2e, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // 8.w;.        flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x39, 0x39, 0x39, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, // at3 _999 = tex_b
	0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // all_color.sample
	0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, // (tex_ball_colorS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x66, // ampler, float2(f
	0x6d, 0x61, 0x28, 0x2d, 0x5f, 0x39, 0x37, 0x31, 0x2c, 0x20, 0x5f, 0x39, 0x35, 0x32, 0x2e, 0x78, // ma(-_971, _952.x
	0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x2d, 0x5f, 0x39, 0x37, // , 0.5), fma(-_97
	0x31, 0x2c, 0x20, 0x5f, 0x39, 0x35, 0x32, 0x2e, 0x79, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, // 1, _952.y, 0.5))
	0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x28, 0x5f, 0x39, 0x35, 0x35, 0x20, 0x3e, 0x20, // , level((_955 > 
	0x30, 0x2e, 0x36, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, 0x31, 0x38, 0x35, // 0.60000002384185
	0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x20, 0x3f, 0x20, 0x66, 0x6d, 0x61, // 791015625) ? fma
	0x28, 0x5f, 0x39, 0x35, 0x35, 0x2c, 0x20, 0x31, 0x35, 0x2e, 0x30, 0x2c, 0x20, 0x2d, 0x39, 0x2e, // (_955, 15.0, -9.
	0x30, 0x29, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, // 0) : 0.0)).xyz +
	0x20, 0x5f, 0x39, 0x39, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, //  _996;.        i
	0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, // f (_mtl_u.w_h_di
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x7a, 0x20, // sableLighting.z 
	0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // != 0.0).        
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, // {.            _1
	0x36, 0x39, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x39, 0x39, // 690 = float4(_99
	0x39, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, // 9, _mtl_u.cBase_
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // Alpha.w);.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, //       break;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //      }.        f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x31, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x39, // loat3 _1015 = _9
	0x39, 0x39, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x66, 0x65, 0x6e, 0x76, // 99 * _mtl_u.fenv
	0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, // EmissionScale_Te
	0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // xWidth.x;.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x31, 0x39, 0x20, 0x3d, //   float3 _1019 =
	0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, //  (_mtl_u.matWorl
	0x64, 0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, // dView * float4(0
	0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, // .0, 0.0, 1.0, 0.
	0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0)).xyz;.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x30, 0x32, 0x32, 0x20, 0x3d, 0x20, 0x64, //  float _1022 = d
	0x6f, 0x74, 0x28, 0x5f, 0x31, 0x30, 0x31, 0x39, 0x2c, 0x20, 0x5f, 0x39, 0x35, 0x32, 0x29, 0x3b, // ot(_1019, _952);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // .        float _
	0x31, 0x30, 0x33, 0x33, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x30, 0x31, 0x39, // 1033 = dot(_1019
	0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x20, // , in.v_worldPos 
	0x2d, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, // - (_mtl_u.matWor
	0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, // ldView * float4(
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, // 0.0, 0.0, 0.0, 1
	0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x31, 0x30, 0x32, // .0)).xyz) / _102
	0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 2;.        float
	0x34, 0x20, 0x5f, 0x31, 0x30, 0x34, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 4 _1046 = _mtl_u
	0x2e, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // .matProj * float
	0x34, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x20, // 4(in.v_worldPos 
	0x2d, 0x20, 0x28, 0x5f, 0x39, 0x35, 0x32, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x30, 0x33, 0x33, 0x29, // - (_952 * _1033)
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // , 1.0);.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x31, 0x30, 0x35, 0x37, 0x20, 0x3d, 0x20, 0x66, // float2 _1057 = f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, // loat2(0.5) + (fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x31, 0x30, 0x34, 0x36, 0x2e, 0x78, 0x2c, 0x20, 0x2d, 0x5f, // oat2(_1046.x, -_
	0x31, 0x30, 0x34, 0x36, 0x2e, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2f, // 1046.y) * (0.5 /
	0x20, 0x5f, 0x31, 0x30, 0x34, 0x36, 0x2e, 0x77, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  _1046.w));.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x31, 0x39, 0x37, //     float4 _1197
	0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, //  = tex_ball_play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, // field.sample(tex
	0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, // _ball_playfieldS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x35, 0x37, 0x20, 0x2b, // ampler, (_1057 +
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, //  float2(_mtl_u.w
	0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, // _h_disableLighti
	0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // ng.x, 0.0)));.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x32, //       float4 _12
	0x30, 0x36, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, // 06 = tex_ball_pl
	0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, // ayfield.sample(t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // ex_ball_playfiel
	0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x35, 0x37, // dSampler, (_1057
	0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, //  - float2(_mtl_u
	0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, // .w_h_disableLigh
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, // ting.x, 0.0)));.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, //         float4 _
	0x31, 0x32, 0x31, 0x35, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // 1215 = tex_ball_
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // playfield.sample
	0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, // (tex_ball_playfi
	0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x30, // eldSampler, (_10
	0x35, 0x37, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x2c, // 57 + float2(0.0,
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, //  _mtl_u.w_h_disa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x29, // bleLighting.y)))
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // ;.        float4
	0x20, 0x5f, 0x31, 0x32, 0x32, 0x34, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, //  _1224 = tex_bal
	0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x73, 0x61, 0x6d, 0x70, // l_playfield.samp
	0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, // le(tex_ball_play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, // fieldSampler, (_
	0x31, 0x30, 0x35, 0x37, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, // 1057 - float2(0.
	0x30, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, // 0, _mtl_u.w_h_di
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, // sableLighting.y)
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ));.        floa
	0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // t3 _1663;.      
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x21, 0x28, 0x28, 0x28, 0x28, 0x5f, 0x31, 0x30, 0x35, //   if ((!((((_105
	0x37, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, // 7.x < 0.0) || (_
	0x31, 0x30, 0x35, 0x37, 0x2e, 0x78, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, // 1057.x > 1.0)) |
	0x7c, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x35, 0x37, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, // | (_1057.y < 0.0
	0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x35, 0x37, 0x2e, 0x79, 0x20, 0x3e, // )) || (_1057.y >
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x21, 0x28, 0x5f, 0x31, //  1.0))) && (!(_1
	0x30, 0x33, 0x33, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, // 033 <= 0.0))).  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x33, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, //     _1663 = mix(
	0x5f, 0x31, 0x30, 0x31, 0x35, 0x2c, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x31, 0x31, 0x39, 0x37, 0x2e, // _1015, (((_1197.
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x32, 0x30, 0x36, 0x2e, 0x78, 0x79, 0x7a, 0x29, // xyz + _1206.xyz)
	0x20, 0x2b, 0x20, 0x5f, 0x31, 0x32, 0x31, 0x35, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2b, 0x20, //  + _1215.xyz) + 
	0x5f, 0x31, 0x32, 0x32, 0x34, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, // _1224.xyz) * 0.2
	0x35, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, // 5, float3(smooth
	0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x35, 0x30, 0x30, // step(0.0, 0.1500
	0x30, 0x30, 0x30, 0x30, 0x35, 0x39, 0x36, 0x30, 0x34, 0x36, 0x34, 0x34, 0x37, 0x37, 0x35, 0x33, // 0000596046447753
	0x39, 0x30, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x32, 0x32, 0x29, 0x20, 0x2a, 0x20, // 90625, _1022) * 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, // _mtl_u.invTableR
	0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x7a, 0x29, // es_reflection.z)
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, // );.        }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      else.      
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   {.            
	0x5f, 0x31, 0x36, 0x36, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x30, 0x31, 0x35, 0x3b, 0x0a, 0x20, // _1663 = _1015;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        }.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x31, 0x33, 0x33, 0x20, 0x3d, 0x20, //  float3 _1133 = 
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, // (_mtl_u.cBase_Al
	0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x37, 0x35, 0x30, // pha.xyz * 0.0750
	0x30, 0x30, 0x30, 0x30, 0x32, 0x39, 0x38, 0x30, 0x32, 0x33, 0x32, 0x32, 0x33, 0x38, 0x37, 0x36, // 0000298023223876
	0x39, 0x35, 0x33, 0x31, 0x32, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x39, 0x39, 0x36, 0x3b, 0x0a, // 953125) * _996;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x31, 0x31, 0x33, 0x36, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, // 1136 = fast::max
	0x28, 0x5f, 0x31, 0x31, 0x33, 0x33, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x66, 0x6c, // (_1133 * 2.0, fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, // oat3(0.100000001
	0x34, 0x39, 0x30, 0x31, 0x31, 0x36, 0x31, 0x31, 0x39, 0x33, 0x38, 0x34, 0x37, 0x36, 0x35, 0x36, // 4901161193847656
	0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // 25));.        fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x31, 0x34, 0x31, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, // oat3 _1141 = fas
	0x74, 0x3a, 0x3a, 0x6d, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x36, 0x36, 0x33, 0x2c, 0x20, 0x66, 0x6c, // t::min(_1663, fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x35, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // oat3(15.0)) * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, // tl_u.cBase_Alpha
	0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // .xyz;.        fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x31, 0x34, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, // oat3 _1143 = flo
	0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x39, 0x39, 0x36, 0x3b, // at3(1.0) - _996;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // .        float3 
	0x5f, 0x31, 0x31, 0x34, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x31, 0x34, 0x31, 0x20, 0x2a, 0x20, // _1145 = _1141 * 
	0x5f, 0x31, 0x31, 0x34, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // _1143;.        f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x34, 0x31, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, // loat _1241 = fas
	0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x31, 0x33, 0x33, 0x2e, 0x78, 0x2c, 0x20, // t::max(_1133.x, 
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x31, 0x33, 0x33, 0x2e, // fast::max(_1133.
	0x79, 0x2c, 0x20, 0x5f, 0x31, 0x31, 0x33, 0x33, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // y, _1133.z));.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x34, //       float _124
	0x39, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, // 9 = fast::max(_1
	0x31, 0x33, 0x36, 0x2e, 0x78, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, // 136.x, fast::max
	0x28, 0x5f, 0x31, 0x31, 0x33, 0x36, 0x2e, 0x79, 0x2c, 0x20, 0x5f, 0x31, 0x31, 0x33, 0x36, 0x2e, // (_1136.y, _1136.
	0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // z));.        flo
	0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x35, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x34, 0x31, // at _1257 = _1241
	0x20, 0x2b, 0x20, 0x5f, 0x31, 0x32, 0x34, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  + _1249;.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x36, 0x3b, 0x0a, //   float3 _1666;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x31, 0x36, 0x37, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, // 1677;.        if
	0x20, 0x28, 0x5f, 0x31, 0x32, 0x35, 0x37, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x20, //  (_1257 > 1.0). 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x36, 0x32, //      float _1262
	0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x5f, 0x31, 0x32, 0x35, 0x37, 0x3b, 0x0a, //  = 1.0 / _1257;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, 0x37, //             _167
	0x37, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x31, 0x33, 0x36, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x32, 0x36, // 7 = _1136 * _126
	0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, // 2;.            _
	0x31, 0x36, 0x36, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x31, 0x33, 0x33, 0x20, 0x2a, 0x20, 0x5f, // 1666 = _1133 * _
	0x31, 0x32, 0x36, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, // 1262;.        }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, //         else.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x31, 0x33, 0x36, //    _1677 = _1136
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, // ;.            _1
	0x36, 0x36, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x31, 0x33, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 666 = _1133;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //      }.        f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, // loat3 _1672;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x74, 0x72, 0x75, 0x65, 0x20, 0x26, //      if ((true &
	0x26, 0x20, 0x28, 0x5f, 0x31, 0x32, 0x34, 0x31, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // & (_1241 > 0.0))
	0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x32, 0x34, 0x39, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, //  || (_1249 > 0.0
	0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, // )).        {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, //          float3 
	0x5f, 0x31, 0x36, 0x37, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _1673;.         
	0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //    _1673 = float
	0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 3(0.0);.        
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x32, 0x39, 0x32, //     float3 _1292
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6f, // ;.            fo
	0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x34, 0x20, 0x3d, 0x20, 0x30, // r (int _1664 = 0
	0x3b, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x34, 0x20, 0x3c, 0x20, 0x31, 0x30, 0x3b, 0x20, 0x5f, 0x31, // ; _1664 < 10; _1
	0x36, 0x37, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x39, 0x32, 0x2c, 0x20, 0x5f, 0x31, 0x36, // 673 = _1292, _16
	0x36, 0x34, 0x2b, 0x2b, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 64++).          
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   {.            
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x31, //     float3 _1681
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   do.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x33, 0x20, 0x5f, 0x31, 0x33, 0x35, 0x36, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // 3 _1356 = (_mtl_
	0x75, 0x2e, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, // u.matView * floa
	0x74, 0x34, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, // t4(_mtl_u.ballLi
	0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x5f, 0x31, 0x36, 0x36, 0x34, 0x5d, 0x2e, 0x78, 0x79, // ghtPos[_1664].xy
	0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x69, // z, 1.0)).xyz - i
	0x6e, 0x2e, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x3b, 0x0a, 0x20, 0x20, // n.v_worldPos;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x33, 0x35, 0x38, 0x20, 0x3d, //   float3 _1358 =
	0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, //  fast::normalize
	0x28, 0x5f, 0x31, 0x33, 0x35, 0x36, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // (_1356);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, //              flo
	0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x36, 0x30, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, // at _1360 = dot(_
	0x39, 0x34, 0x39, 0x2c, 0x20, 0x5f, 0x31, 0x33, 0x35, 0x38, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 949, _1358);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x38, 0x3b, 0x0a, 0x20, //  float3 _1678;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x74, 0x72, 0x75, 0x65, 0x20, 0x26, 0x26, 0x20, 0x28, //    if (true && (
	0x28, 0x5f, 0x31, 0x33, 0x36, 0x30, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // (_1360 + _mtl_u.
	0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, // Roughness_WrapL_
	0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, // Edge_Thickness.y
	0x29, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ) > 0.0)).      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, //               {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, //         float _1
	0x33, 0x37, 0x35, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // 375 = 1.0 + _mtl
	0x5f, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, // _u.Roughness_Wra
	0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, // pL_Edge_Thicknes
	0x73, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // s.y;.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, //              _16
	0x37, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x36, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x5f, // 78 = _1666 * ((_
	0x31, 0x33, 0x36, 0x30, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x52, 0x6f, // 1360 + _mtl_u.Ro
	0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, // ughness_WrapL_Ed
	0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x29, 0x20, // ge_Thickness.y) 
	0x2f, 0x20, 0x28, 0x5f, 0x31, 0x33, 0x37, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x33, 0x37, 0x35, // / (_1375 * _1375
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ));.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, //               el
	0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // se.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x5f, 0x31, 0x36, 0x37, 0x38, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, //  _1678 = float3(
	0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0.0);.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, //           }.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x39, 0x3b, 0x0a, 0x20, 0x20, // float3 _1679;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x31, 0x33, 0x36, 0x30, 0x20, 0x3e, 0x20, 0x30, 0x2e, //   if (_1360 > 0.
	0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0).             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x33, 0x38, 0x35, 0x20, 0x3d, 0x20, //  float3 _1385 = 
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // fast::normalize(
	0x5f, 0x31, 0x33, 0x35, 0x38, 0x20, 0x2b, 0x20, 0x5f, 0x39, 0x34, 0x37, 0x29, 0x3b, 0x0a, 0x20, // _1358 + _947);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, //        float _13
	0x38, 0x37, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x39, 0x34, 0x39, 0x2c, 0x20, 0x5f, // 87 = dot(_949, _
	0x31, 0x33, 0x38, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1385);.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x39, 0x30, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // loat _1390 = dot
	0x28, 0x5f, 0x31, 0x33, 0x35, 0x38, 0x2c, 0x20, 0x5f, 0x31, 0x33, 0x38, 0x35, 0x29, 0x3b, 0x0a, // (_1358, _1385);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, //         float _1
	0x33, 0x39, 0x32, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x39, 0x34, 0x37, 0x2c, 0x20, // 392 = dot(_947, 
	0x5f, 0x31, 0x33, 0x38, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _1385);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x30, 0x3b, 0x0a, 0x20, 0x20, // float3 _1680;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x31, 0x33, 0x38, //       if (((_138
	0x37, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x33, // 7 > 0.0) && (_13
	0x39, 0x30, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, // 90 > 0.0)) && (_
	0x31, 0x33, 0x39, 0x32, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, // 1392 > 0.0)).   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x38, //    _1680 = _1678
	0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x36, 0x37, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x66, //  + ((_1677 + ((f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x36, // loat3(1.0) - _16
	0x37, 0x37, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // 77) * powr(1.0 -
	0x20, 0x5f, 0x31, 0x33, 0x39, 0x30, 0x2c, 0x20, 0x35, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x2a, //  _1390, 5.0))) *
	0x20, 0x28, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x67, 0x68, //  (((_mtl_u.Rough
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, // ness_WrapL_Edge_
	0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x31, 0x2e, // Thickness.x + 1.
	0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x38, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x33, 0x39, // 0) / (8.0 * _139
	0x32, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x5f, 0x31, 0x33, 0x38, 0x37, // 2)) * powr(_1387
	0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, // , _mtl_u.Roughne
	0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, // ss_WrapL_Edge_Th
	0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // ickness.x)));.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // else.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, //              {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x30, //            _1680
	0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  = _1678;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   }.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, 0x37, //             _167
	0x39, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 9 = _1680;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, //                }
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      else.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, //               {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x39, 0x20, 0x3d, 0x20, //         _1679 = 
	0x5f, 0x31, 0x36, 0x37, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _1678;.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, //            }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, 0x31, 0x38, 0x20, 0x3d, 0x20, 0x64, //  float _1418 = d
	0x6f, 0x74, 0x28, 0x5f, 0x31, 0x33, 0x35, 0x36, 0x2c, 0x20, 0x5f, 0x31, 0x33, 0x35, 0x36, 0x29, // ot(_1356, _1356)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, 0x33, //       float _143
	0x35, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, // 5 = fast::clamp(
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x34, 0x31, 0x38, 0x20, 0x2a, 0x20, // 1.0 - ((_1418 * 
	0x5f, 0x31, 0x34, 0x31, 0x38, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // _1418) / (((_mtl
	0x5f, 0x75, 0x2e, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, // _u.cAmbient_Ligh
	0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // tRange.w * _mtl_
	0x75, 0x2e, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, // u.cAmbient_Light
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // Range.w) * _mtl_
	0x75, 0x2e, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, // u.cAmbient_Light
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // Range.w) * _mtl_
	0x75, 0x2e, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, // u.cAmbient_Light
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x29, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, // Range.w)), 0.0, 
	0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1.0);.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //           float3
	0x20, 0x5f, 0x31, 0x34, 0x35, 0x39, 0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x36, //  _1459 = fma(_16
	0x37, 0x37, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x36, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // 77 + _1666, _mtl
	0x5f, 0x75, 0x2e, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, // _u.cAmbient_Ligh
	0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x36, // tRange.xyz, (_16
	0x37, 0x39, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x62, 0x61, 0x6c, 0x6c, // 79 * _mtl_u.ball
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x5f, 0x31, // LightEmission[_1
	0x36, 0x36, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x5f, 0x31, // 664].xyz) * ((_1
	0x34, 0x33, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x33, 0x35, 0x29, 0x20, 0x2f, 0x20, 0x28, // 435 * _1435) / (
	0x5f, 0x31, 0x34, 0x31, 0x38, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, // _1418 + 1.0)));.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x66, //     if (_mtl_u.f
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, // DisableLighting_
	0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, // top_below.x != 0
	0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .0).            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x31, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x31, //   _1681 = mix(_1
	0x34, 0x35, 0x39, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x36, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 459, _1666, floa
	0x74, 0x33, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, // t3(_mtl_u.fDisab
	0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, // leLighting_top_b
	0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // elow.x));.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   break;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, //              }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    else.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, //             {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x31, //       _1681 = _1
	0x34, 0x35, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 459;.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, //              bre
	0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ak;.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, //               br
	0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, // eak; // unreacha
	0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x0a, 0x20, // ble workaround. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, //                }
	0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, //  while(false);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //                _
	0x31, 0x32, 0x39, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x33, 0x20, 0x2b, 0x20, 0x5f, // 1292 = _1673 + _
	0x31, 0x36, 0x38, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1681;.          
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   }.            
	0x5f, 0x31, 0x36, 0x37, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x33, 0x3b, 0x0a, 0x20, // _1672 = _1673;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        }.       
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, //  else.        {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, 0x37, //             _167
	0x32, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, // 2 = float3(0.0);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .        }.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x34, 0x3b, //    float3 _1674;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x74, 0x72, 0x75, // .        if (tru
	0x65, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x32, 0x34, 0x31, 0x20, 0x3e, 0x20, 0x30, 0x2e, // e && (_1241 > 0.
	0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, // 0)).        {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //           float3
	0x20, 0x5f, 0x31, 0x33, 0x31, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, //  _1312 = fast::n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // ormalize((_mtl_u
	0x2e, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // .matView * float
	0x34, 0x28, 0x5f, 0x39, 0x34, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, // 4(_949, 0.0)).xy
	0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // z);.            
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x30, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, // float _1508 = _1
	0x33, 0x31, 0x32, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 312.y;.         
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x30, 0x39, 0x20, 0x3d, //    float _1509 =
	0x20, 0x5f, 0x31, 0x33, 0x31, 0x32, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1312.x;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x36, //       float _166
	0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, // 8;.            d
	0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, // o.            {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x32, 0x34, 0x20, 0x3d, 0x20, 0x61, 0x62, // float _1524 = ab
	0x73, 0x28, 0x5f, 0x31, 0x35, 0x30, 0x38, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // s(_1508);.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //           float 
	0x5f, 0x31, 0x35, 0x32, 0x35, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x31, 0x35, 0x30, // _1525 = abs(_150
	0x39, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 9);.            
	0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x35, 0x32, 0x35, 0x20, 0x3c, //     if ((_1525 <
	0x3d, 0x20, 0x36, 0x2e, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x65, 0x2d, 0x30, // = 6.103515625e-0
	0x35, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x32, 0x34, 0x20, 0x3c, 0x3d, 0x20, // 5) && (_1524 <= 
	0x36, 0x2e, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x65, 0x2d, 0x30, 0x35, 0x29, // 6.103515625e-05)
	0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ).              
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   {.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x38, 0x20, 0x3d, 0x20, //         _1668 = 
	0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0.0;.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, //          break;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // }.              
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x33, 0x39, 0x20, 0x3d, 0x20, //   float _1539 = 
	0x28, 0x5f, 0x31, 0x35, 0x32, 0x35, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x35, 0x32, 0x34, 0x29, 0x20, // (_1525 - _1524) 
	0x2f, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x35, 0x32, 0x34, // / (_1525 + _1524
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x35, 0x33, 0x20, 0x3d, //    float _1553 =
	0x20, 0x66, 0x6d, 0x61, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x30, 0x2e, 0x30, 0x33, 0x33, 0x37, 0x31, //  fma(fma(0.03371
	0x39, 0x38, 0x33, 0x37, 0x36, 0x36, 0x35, 0x35, 0x35, 0x37, 0x38, 0x36, 0x31, 0x33, 0x32, 0x38, // 9837665557861328
	0x31, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x35, 0x33, 0x39, 0x2c, 0x20, 0x5f, 0x31, 0x35, // 125 * _1539, _15
	0x33, 0x39, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x37, 0x31, 0x33, 0x34, 0x34, 0x37, 0x33, // 39, -0.157134473
	0x33, 0x32, 0x33, 0x38, 0x32, 0x32, 0x30, 0x32, 0x31, 0x34, 0x38, 0x34, 0x33, 0x37, 0x35, 0x29, // 323822021484375)
	0x2c, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x30, 0x39, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, // , (_1509 < 0.0) 
	0x3f, 0x20, 0x28, 0x2d, 0x5f, 0x31, 0x35, 0x33, 0x39, 0x29, 0x20, 0x3a, 0x20, 0x5f, 0x31, 0x35, // ? (-_1539) : _15
	0x33, 0x39, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x30, 0x39, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, // 39, (_1509 < 0.0
	0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x33, 0x37, 0x35, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x31, 0x32, // ) ? 0.375 : 0.12
	0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 5);.            
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x38, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x35, //     _1668 = (_15
	0x30, 0x38, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x2d, 0x5f, 0x31, // 08 < 0.0) ? (-_1
	0x35, 0x35, 0x33, 0x29, 0x20, 0x3a, 0x20, 0x5f, 0x31, 0x35, 0x35, 0x33, 0x3b, 0x0a, 0x20, 0x20, // 553) : _1553;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, //               br
	0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // eak;.           
	0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, //  } while(false);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // .            flo
	0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x31, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x33, 0x31, 0x32, // at _1512 = _1312
	0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .z;.            
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, // float _1669;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, //          do.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //           float 
	0x5f, 0x31, 0x35, 0x36, 0x38, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x31, 0x35, 0x31, // _1568 = abs(_151
	0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 2);.            
	0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, //     if ((1.0 - _
	0x31, 0x35, 0x36, 0x38, 0x29, 0x20, 0x3c, 0x3d, 0x20, 0x36, 0x2e, 0x31, 0x30, 0x33, 0x35, 0x31, // 1568) <= 6.10351
	0x35, 0x36, 0x32, 0x35, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 5625e-05).      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //           {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x5f, 0x31, 0x36, 0x36, 0x39, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x31, 0x32, 0x20, 0x3e, // _1669 = (_1512 >
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x30, 0x20, 0x3a, 0x20, 0x31, // = 0.0) ? 0.0 : 1
	0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .0;.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, //         break;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, //                }
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x37, 0x38, 0x20, 0x3d, 0x20, 0x66, //  float _1578 = f
	0x6d, 0x61, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x34, 0x39, 0x36, 0x34, 0x37, 0x34, 0x32, 0x38, 0x30, // ma(-0.0496474280
	0x39, 0x35, 0x33, 0x34, 0x30, 0x37, 0x32, 0x38, 0x37, 0x35, 0x39, 0x37, 0x36, 0x35, 0x36, 0x32, // 9534072875976562
	0x35, 0x2c, 0x20, 0x5f, 0x31, 0x35, 0x36, 0x38, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x39, 0x38, 0x30, // 5, _1568, 0.4980
	0x34, 0x39, 0x39, 0x31, 0x34, 0x38, 0x33, 0x36, 0x38, 0x38, 0x33, 0x35, 0x34, 0x34, 0x39, 0x32, // 4991483688354492
	0x31, 0x38, 0x37, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1875);.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, //        float _15
	0x38, 0x31, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // 81 = sqrt(1.0 - 
	0x5f, 0x31, 0x35, 0x36, 0x38, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _1568);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x39, 0x20, 0x3d, 0x20, //         _1669 = 
	0x28, 0x5f, 0x31, 0x35, 0x31, 0x32, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, // (_1512 >= 0.0) ?
	0x20, 0x28, 0x5f, 0x31, 0x35, 0x37, 0x38, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x31, 0x29, //  (_1578 * _1581)
	0x20, 0x3a, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x2d, 0x5f, 0x31, 0x35, 0x37, 0x38, 0x2c, 0x20, 0x5f, //  : fma(-_1578, _
	0x31, 0x35, 0x38, 0x31, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 1581, 1.0);.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, //             brea
	0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, // k;.            }
	0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, //  while(false);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x34, //            _1674
	0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x32, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x36, //  = _1672 + ((_16
	0x36, 0x36, 0x20, 0x2a, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // 66 * tex_diffuse
	0x5f, 0x65, 0x6e, 0x76, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, // _env.sample(tex_
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x53, 0x61, 0x6d, 0x70, 0x6c, // diffuse_envSampl
	0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2b, // er, float2(0.5 +
	0x20, 0x5f, 0x31, 0x36, 0x36, 0x38, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x39, 0x29, 0x2c, 0x20, //  _1668, _1669), 
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, // level(0.0)).xyz)
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, //  * _mtl_u.fenvEm
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, // issionScale_TexW
	0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // idth.x);.       
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, //  }.        else.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x31, //       _1674 = _1
	0x36, 0x37, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, // 672;.        }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, //        float3 _1
	0x36, 0x37, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, // 675;.        if 
	0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x31, 0x34, 0x35, // (fast::max(_1145
	0x2e, 0x78, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, // .x, fast::max(_1
	0x31, 0x34, 0x35, 0x2e, 0x79, 0x2c, 0x20, 0x5f, 0x31, 0x31, 0x34, 0x35, 0x2e, 0x7a, 0x29, 0x29, // 145.y, _1145.z))
	0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  > 0.0).        
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, // {.            _1
	0x36, 0x37, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x31, 0x34, 0x31, 0x2c, // 675 = fma(_1141,
	0x20, 0x5f, 0x31, 0x31, 0x34, 0x33, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x34, 0x29, 0x3b, 0x0a, //  _1143, _1674);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, //   else.        {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x36, // .            _16
	0x37, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 75 = _1674;.    
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, //     }.        _1
	0x36, 0x39, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x36, // 690 = float4(_16
	0x37, 0x35, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x42, 0x61, 0x73, 0x65, // 75, _mtl_u.cBase
	0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // _Alpha.w);.     
	0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, //    break;.    } 
	0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, // while(false);.  
	0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, //   out.bgfx_FragD
	0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x39, 0x30, 0x3b, 0x0a, 0x20, 0x20, // ata0 = _1690;.  
	0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, //   return out;.}.
	0x0a, 0x00, 0x00, 0x10, 0x03,                                                                   // .....
};
static const uint8_t fs_ball_spherical_nodecal_essl[14144] =
{
	0x46, 0x53, 0x48, 0x0b, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2d, 0x37, // FSH....l......-7
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // s.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, // arying in.precis
	0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3b, // ion highp float;
	0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // .precision highp
	0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, //  int;.#define sh
	0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adow2D(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //  _coord) texture
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // (_sampler, _coor
	0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, // d).#define shado
	0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // w2DProj(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // eProj(_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x6f, 0x75, 0x74, 0x20, 0x6d, 0x65, 0x64, 0x69, // _coord).out medi
	0x75, 0x6d, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, // ump vec4 bgfx_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // agColor;.varying
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, //  vec3 v_normal;.
	0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, // varying vec2 v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // excoord0;.varyin
	0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, // g vec3 v_worldPo
	0x73, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, // s;.vec3 instMul(
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, // vec3 _vec, mat3 
	0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, // _mtx) { return (
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, //  (_vec) * (_mtx)
	0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, //  ); }.vec3 instM
	0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, // ul(mat3 _mtx, ve
	0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // c3 _vec) { retur
	0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, // n ( (_mtx) * (_v
	0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, // ec) ); }.vec4 in
	0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, // stMul(vec4 _vec,
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, //  mat4 _mtx) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, // turn ( (_vec) * 
	0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // (_mtx) ); }.vec4
	0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, //  instMul(mat4 _m
	0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, // tx, vec4 _vec) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, //  return ( (_mtx)
	0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, //  * (_vec) ); }.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // loat rcp(float _
	0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, // a) { return 1.0/
	0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, // _a; }.vec2 rcp(v
	0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec2 _a) { return
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, //  vec2(1.0)/_a; }
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // .vec3 rcp(vec3 _
	0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, // a) { return vec3
	0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // (1.0)/_a; }.vec4
	0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, //  rcp(vec4 _a) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, // return vec4(1.0)
	0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, // /_a; }.vec2 vec2
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, // _splat(float _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, //  { return vec2(_
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // x, _x); }.vec3 v
	0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ec3_splat(float 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _x) { return vec
	0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // 3(_x, _x, _x); }
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // .vec4 vec4_splat
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // (float _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // urn vec4(_x, _x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, //  _x, _x); }.uvec
	0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, // 2 uvec2_splat(ui
	0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // nt _x) { return 
	0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // uvec2(_x, _x); }
	0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, // .uvec3 uvec3_spl
	0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // at(uint _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // turn uvec3(_x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, // x, _x); }.uvec4 
	0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec4_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, //  _x) { return uv
	0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, // ec4(_x, _x, _x, 
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, // _x); }.mat4 mtxF
	0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, // romRows(vec4 _0,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, //  vec4 _1, vec4 _
	0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 2, vec4 _3).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, // turn transpose(m
	0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, // at4(_0, _1, _2, 
	0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, // _3) );.}.mat4 mt
	0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // xFromCols(vec4 _
	0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // 0, vec4 _1, vec4
	0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, //  _2, vec4 _3).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, // return mat4(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, // _1, _2, _3);.}.m
	0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, // at3 mtxFromRows(
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, // vec3 _0, vec3 _1
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // , vec3 _2).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, // urn transpose(ma
	0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, // t3(_0, _1, _2) )
	0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, // ;.}.mat3 mtxFrom
	0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, // Cols(vec3 _0, ve
	0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, // c3 _1, vec3 _2).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, // {.return mat3(_0
	0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, // , _1, _2);.}.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, // form vec4 u_view
	0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // Rect;.uniform ve
	0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, // c4 u_viewTexel;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, // uniform mat4 u_v
	0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, // iew;.uniform mat
	0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // 4 u_invView;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, // form mat4 u_proj
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // _invProj;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, // m mat4 u_viewPro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, // u_invViewProj;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, // niform mat4 u_mo
	0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // del[32];.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, //  mat4 u_modelVie
	0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // w;.uniform mat4 
	0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, // u_modelViewProj;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, // .uniform vec4 u_
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // alphaRef4;.float
	0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  sqr(const float
	0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, //  v).{.return v*v
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, // ;.}.vec2 sqr(con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // st vec2 v).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // urn v*v;.}.vec3 
	0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // sqr(const vec3 v
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, // ).{.return v*v;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x63, 0x6f, // }.vec3 mul_w1(co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // nst vec3 v, cons
	0x74, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // t mat4 m).{.retu
	0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // rn v.x*m[0].xyz 
	0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // + (v.y*m[1].xyz 
	0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // + (v.z*m[2].xyz 
	0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // + m[3].xyz));.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, // float acos_appro
	0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // x_divPI(const fl
	0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // oat v).{.const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, // loat x = abs(v);
	0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, // .if(1. - x <= 0.
	0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, // 00006103515625).
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, // return (v >= 0.)
	0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, //  ? 0. : 1.;.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, // t float res = ((
	0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, // -0.155972/3.1415
	0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, // 9265358979323846
	0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, // 26433832795) * x
	0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, //  + (1.56467/3.14
	0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, // 1592653589793238
	0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, // 4626433832795) )
	0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, //  * sqrt(1. - x);
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, // .return (v >= 0.
	0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, // ) ? res : 1. - r
	0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, // es;.}.float atan
	0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, // 2_approx_div2PI(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x63, // const float y, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, // onst float x).{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, // const float abs_
	0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // y = abs(y);.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, // t float abs_x = 
	0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, // abs(x);.if(abs_x
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, //  <= 0.0000610351
	0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, // 5625 && abs_y <=
	0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, //  0.0000610351562
	0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, // 5).return 0.;.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, // nst float r = (a
	0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, // bs_x - abs_y) / 
	0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, // (abs_x + abs_y);
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, // .const float ang
	0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // le = ((x < 0.) ?
	0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, //  (3./8.) : (1./8
	0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, // .)).+ (0.211868 
	0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, // /(2.*3.141592653
	0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, // 5897932384626433
	0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, // 832795) * r * r 
	0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, // - 0.987305 /(2.*
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, // 5)) * ((x < 0.) 
	0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // ? -r : r);.retur
	0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, // n (y < 0.) ? -an
	0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // gle : angle;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, // loat asin_approx
	0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // _divPI(const flo
	0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // at v).{.const fl
	0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, // oat x = abs(v);.
	0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, // if(1. - x <= 0.0
	0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, // 0006103515625).r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, // eturn (v >= 0.) 
	0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x63, 0x6f, // ? 0.5 : -0.5;.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, // nst float res = 
	0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, // ((-0.155972/3.14
	0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, // 1592653589793238
	0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, // 4626433832795) *
	0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, //  x + (1.56467/3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, //  ) * sqrt(1. - x
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, // );.return (v >= 
	0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, // 0.) ? 0.5 - res 
	0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, // : -0.5 + res;.}.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, // vec2 ray_to_equi
	0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x63, // rectangular_uv(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, // onst vec3 ray).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, // .return vec2(.0.
	0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, // 5 + atan2_approx
	0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, // _div2PI(ray.y, r
	0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, // ay.x),.acos_appr
	0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, // ox_divPI(ray.z))
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, // ;.}.float InvsRG
	0x42, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, // B(const float co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // lor).{.if (color
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, //  <= 0.04045).ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, // urn color * (1.0
	0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, // /12.92);.else.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // turn pow(color *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, //  (1.0/1.055) + (
	0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, // 0.055/1.055), 2.
	0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, // 4);.}.float InvR
	0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ec709(const floa
	0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, // t color).{.if (c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, // olor <= 0.081).r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, // eturn color * (1
	0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, // .0/4.5);.else.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // turn pow(color *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, //  (1.0/1.099) + (
	0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, // 0.099/1.099), 1.
	0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0/0.45);.}.float
	0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  InvGamma(const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // float color).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, // eturn InvsRGB(co
	0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, // lor);.}.vec3 Inv
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, // Gamma(const vec3
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  color).{.return
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, //  vec3(InvGamma(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, // olor.x),InvGamma
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // (color.y),InvGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // ma(color.z));.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, // vec3 InvToneMap(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // const vec3 color
	0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ).{.const float 
	0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, // inv_2bh = 0.5/0.
	0x32, 0x35, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 25;.const float 
	0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, // bh = 4.0*0.25 - 
	0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, // 2.0;.return (col
	0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // or - 1.0 + sqrt(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, // color*(color + b
	0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, // h) + 1.0))*inv_2
	0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, // bh;.}.float sRGB
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, // (const float f).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, // {.float s;.if (f
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, //  <= 0.0031308).s
	0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, //  = 12.92 * f;.el
	0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, // se.s = 1.055 * p
	0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, // ow(f, 1.0/2.4) -
	0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, //  0.055;.return s
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, // ;.}.float Rec709
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, // (const float f).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, // {.float s;.if (f
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, //  <= 0.018).s = 4
	0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, // .5 * f;.else.s =
	0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, //  1.099 * pow(f, 
	0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, // 0.45) - 0.099;.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // eturn s;.}.float
	0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, //  FBGamma(const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // loat color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // turn sRGB(color)
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, // ;.}.vec2 FBGamma
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // (const vec2 colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, // r).{.return vec2
	0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, // (FBGamma(color.x
	0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // ),FBGamma(color.
	0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, // y));.}.vec3 FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // mma(const vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // olor).{.return v
	0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // ec3(FBGamma(colo
	0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, // r.x),FBGamma(col
	0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, // or.y),FBGamma(co
	0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // lor.z));.}.float
	0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, //  FBToneMap(const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  float l).{.retu
	0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, // rn l * ((l*0.25 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, // + 1.0) / (l + 1.
	0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, // 0));.}.vec2 FBTo
	0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, // neMap(const vec2
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  color).{.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, // float l = dot(co
	0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, // lor,vec2(0.17620
	0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, // 4+0.0108109*0.5,
	0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, // 0.812985+0.01081
	0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 09*0.5));.return
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, //  color * ((l*0.2
	0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, // 5 + 1.0) / (l + 
	0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, // 1.0));.}.vec3 FB
	0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // ToneMap(const ve
	0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // c3 color).{.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, // t float l = dot(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, // color,vec3(0.176
	0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, // 204,0.812985,0.0
	0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 108109));.return
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, //  color * ((l*0.2
	0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, // 5 + 1.0) / (l + 
	0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, // 1.0));.}.vec4 Ad
	0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // ditive(const vec
	0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // 4 cBase, const v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // ec4 cBlend, cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, // t float percent)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, // .{.return cBase 
	0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, // + cBlend*percent
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, // ;.}.vec3 Screen 
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, // (const vec3 cBas
	0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, // e, const vec3 cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, // lend).{.return 1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, // .0 - (1.0 - cBas
	0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, // e) * (1.0 - cBle
	0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, // nd);.}.vec4 Scre
	0x65, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // en (const vec4 c
	0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, // Base, const vec4
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  cBlend).{.retur
	0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, // n 1.0 - (1.0 - c
	0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, // Base) * (1.0 - c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, // Blend);.}.vec3 S
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // creenHDR (const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // vec3 cBase, cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, // t vec3 cBlend).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, // .return max(1.0 
	0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, // - (1.0 - cBase) 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // * (1.0 - cBlend)
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, // , vec3(0.,0.,0.)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, // );.}.vec4 Screen
	0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // HDR (const vec4 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // cBase, const vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 4 cBlend).{.retu
	0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, // rn max(1.0 - (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // 0 - cBase) * (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, // 0 - cBlend), vec
	0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, // 4(0.,0.,0.,0.));
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, // .}.vec4 Multiply
	0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, //  (const vec4 cBa
	0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // se, const vec4 c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // Blend, const flo
	0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // at percent).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, // turn cBase * cBl
	0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // end*percent;.}.v
	0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x63, 0x6f, 0x6e, // ec4 Overlay (con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, // st vec4 cBase, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // onst vec4 cBlend
	0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, // ).{.vec4 cNew = 
	0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, // step(0.5, cBase)
	0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, // ;.cNew = mix(cBa
	0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, // se*cBlend*2.0, 1
	0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, // .0-2.0*(1.0-cBas
	0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, // e)*(1.0-cBlend),
	0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, //  cNew);.return c
	0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, // New;.}.vec4 Over
	0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // layHDR (const ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // c4 cBase, const 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, // vec4 cBlend).{.v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, // ec4 cNew = step(
	0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, // 0.5, cBase);.cNe
	0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, // w = max(mix(cBas
	0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, // e*cBlend*2.0, 1.
	0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, // 0-2.0*(1.0-cBase
	0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, // )*(1.0-cBlend), 
	0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, // cNew), vec4(0.,0
	0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // .,0.,0.));.retur
	0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // n cNew;.}.vec3 c
	0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, // os_hemisphere_sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, // mple(const vec2 
	0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // t).{.const float
	0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, //  phi = t.y * (2.
	0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, // 0*3.141592653589
	0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, // 7932384626433832
	0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 795);.const floa
	0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, // t cosTheta = sqr
	0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x63, 0x6f, // t(1.0 - t.x);.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, // nst float sinThe
	0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, // ta = sqrt(t.x);.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x73, 0x69, 0x6e, // float sp,cp;.sin
	0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x2c, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x29, 0x3b, 0x0a, // cos(phi,sp,cp);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, // return vec3(cp *
	0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, //  sinTheta, cosTh
	0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, // eta, sp * sinThe
	0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, // ta);.}.vec3 rota
	0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, // te_to_vector_upp
	0x65, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, // er(const vec3 ve
	0x63, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, // c, const vec3 no
	0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // rmal).{.if(norma
	0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, // l.y > -0.99999).
	0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, // {.const float h 
	0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // = 1.0/(1.0+norma
	0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // l.y);.const floa
	0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // t hz = h*normal.
	0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, // z;.const float h
	0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // zx = hz*normal.x
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, // ;.return vec3(.v
	0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, // ec.x * (normal.y
	0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, // +hz*normal.z) + 
	0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // vec.y * normal.x
	0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, //  - vec.z * hzx,.
	0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, // vec.y * normal.y
	0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, //  - vec.x * norma
	0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, // l.x - vec.z * no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, // rmal.z,.vec.y * 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, // normal.z - vec.x
	0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, //  * hzx + vec.z *
	0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, //  (normal.y+h*nor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, // mal.x*normal.x))
	0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // ;.}.else return 
	0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // -vec;.}.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, // mat4 matView;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, // iform mat4 matWo
	0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // rldView;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, //  mat4 matWorldVi
	0x65, 0x77, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // ewInverse;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, // rm mat4 matWorld
	0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // ViewProj;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, // m mat4 matProj;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, // uniform sampler2
	0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // D tex_ball_color
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ;.uniform sample
	0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // r2D tex_env;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, // form sampler2D t
	0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x3b, 0x0a, // ex_diffuse_env;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, // uniform sampler2
	0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, // D tex_ball_decal
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ;.uniform sample
	0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, // r2D tex_ball_pla
	0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // yfield;.uniform 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x68, 0x61, // vec4 u_basic_sha
	0x64, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // de_mode;.uniform
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, //  vec4 ballLightP
	0x6f, 0x73, 0x5b, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // os[2 + 8];.unifo
	0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, // rm vec4 ballLigh
	0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x5d, // tEmission[2 + 8]
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // ;.uniform vec4 c
	0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, // Ambient_LightRan
	0x67, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // ge;.uniform vec4
	0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, //  fenvEmissionSca
	0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // le_TexWidth;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, // form vec4 fDisab
	0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, // leLighting_top_b
	0x65, 0x6c, 0x6f, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // elow;.uniform ve
	0x63, 0x34, 0x20, 0x66, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x3b, 0x0a, // c4 fSceneScale;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, // uniform vec4 cBa
	0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // se_Alpha;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, // m vec4 Roughness
	0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, // _WrapL_Edge_Thic
	0x6b, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x47, 0x65, 0x6f, // kness;.float Geo
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x28, 0x63, 0x6f, // metricOpacity(co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, // nst float NdotV,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6c, 0x70, //  const float alp
	0x68, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ha, const float 
	0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // blending, const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, // float thickness)
	0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, // .{.const float x
	0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x29, 0x3b, 0x0a, 0x63, //  = abs(NdotV);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x20, 0x3d, 0x20, 0x62, // onst float g = b
	0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // lending * (1.0 -
	0x20, 0x28, 0x78, 0x20, 0x2f, 0x20, 0x28, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, //  (x / (x * (1.0 
	0x2d, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, 0x20, 0x2b, 0x20, 0x74, // - thickness) + t
	0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // hickness)));.ret
	0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2c, 0x20, 0x31, // urn mix(alpha, 1
	0x2e, 0x30, 0x2c, 0x20, 0x67, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, // .0, g);.}.vec3 F
	0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, 0x6b, 0x28, 0x63, 0x6f, // resnelSchlick(co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x2c, 0x20, 0x63, // nst vec3 spec, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, // onst float LdotH
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, // , const float ed
	0x67, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x70, 0x65, // ge).{.return spe
	0x63, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x65, // c + (vec3(edge,e
	0x64, 0x67, 0x65, 0x2c, 0x65, 0x64, 0x67, 0x65, 0x29, 0x20, 0x2d, 0x20, 0x73, 0x70, 0x65, 0x63, // dge,edge) - spec
	0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x4c, 0x64, // ) * pow(1.0 - Ld
	0x6f, 0x74, 0x48, 0x2c, 0x20, 0x35, 0x2e, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // otH, 5.);.}.vec3
	0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x63, 0x6f, //  DoPointLight(co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x63, 0x6f, // nst vec3 pos, co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // nst vec3 N, cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // t vec3 V, const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, // vec3 diffuse, co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, // nst vec3 glossy,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, //  const float edg
	0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, // e, const float g
	0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // lossyPower, cons
	0x74, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x62, // t int i, const b
	0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, // ool is_metal).{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, // const vec3 light
	0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, // Dir = ( ( (matVi
	0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x62, 0x61, 0x6c, 0x6c, // ew) * (vec4(ball
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, // LightPos[i].xyz,
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, //  1.0)) ) ).xyz -
	0x20, 0x70, 0x6f, 0x73, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, //  pos;.const vec3
	0x20, 0x4c, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x6c, //  L = normalize(l
	0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // ightDir);.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x3d, 0x20, 0x64, 0x6f, // float NdotL = do
	0x74, 0x28, 0x4e, 0x2c, 0x20, 0x4c, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4f, 0x75, // t(N, L);.vec3 Ou
	0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, // t = vec3(0.0,0.0
	0x2c, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, // ,0.0);.if (!is_m
	0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x2b, // etal && (NdotL +
	0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, //  Roughness_WrapL
	0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, // _Edge_Thickness.
	0x79, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x4f, 0x75, 0x74, 0x20, 0x3d, 0x20, // y > 0.0)).Out = 
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x4e, 0x64, 0x6f, 0x74, // diffuse * ((Ndot
	0x4c, 0x20, 0x2b, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, // L + Roughness_Wr
	0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, // apL_Edge_Thickne
	0x73, 0x73, 0x2e, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x73, 0x71, 0x72, 0x28, 0x31, 0x2e, 0x30, 0x2b, // ss.y) / sqr(1.0+
	0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, // Roughness_WrapL_
	0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, // Edge_Thickness.y
	0x29, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x3e, 0x20, // ));.if (NdotL > 
	0x30, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // 0.0).{.const vec
	0x33, 0x20, 0x48, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // 3 H = normalize(
	0x4c, 0x20, 0x2b, 0x20, 0x56, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // L + V);.const fl
	0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, // oat NdotH = dot(
	0x4e, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // N, H);.const flo
	0x61, 0x74, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4c, // at LdotH = dot(L
	0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // , H);.const floa
	0x74, 0x20, 0x56, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x56, 0x2c, // t VdotH = dot(V,
	0x20, 0x48, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x20, //  H);.if ((NdotH 
	0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x4c, 0x64, 0x6f, 0x74, 0x48, // > 0.0) && (LdotH
	0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x56, 0x64, 0x6f, 0x74, //  > 0.0) && (Vdot
	0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x4f, 0x75, 0x74, 0x20, 0x2b, 0x3d, // H > 0.0)).Out +=
	0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, 0x6b, 0x28, //  FresnelSchlick(
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x65, // glossy, LdotH, e
	0x64, 0x67, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, // dge) * (((glossy
	0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, // Power + 1.0) / (
	0x38, 0x2e, 0x30, 0x2a, 0x56, 0x64, 0x6f, 0x74, 0x48, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, // 8.0*VdotH)) * po
	0x77, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, // w(NdotH, glossyP
	0x6f, 0x77, 0x65, 0x72, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // ower));.}.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // float sqrl_light
	0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, // Dir = dot(lightD
	0x69, 0x72, 0x2c, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x29, 0x3b, 0x0a, 0x66, 0x6c, // ir,lightDir);.fl
	0x6f, 0x61, 0x74, 0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x3d, 0x20, 0x63, 0x6c, 0x61, // oat fAtten = cla
	0x6d, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, // mp(1.0 - sqrl_li
	0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2a, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, // ghtDir*sqrl_ligh
	0x74, 0x44, 0x69, 0x72, 0x2f, 0x28, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, // tDir/(cAmbient_L
	0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, // ightRange.w*cAmb
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, // ient_LightRange.
	0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, // w*cAmbient_Light
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, // Range.w*cAmbient
	0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x29, 0x2c, 0x20, // _LightRange.w), 
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x66, 0x41, 0x74, 0x74, 0x65, // 0.0, 1.0);.fAtte
	0x6e, 0x20, 0x3d, 0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x2a, 0x66, 0x41, 0x74, 0x74, 0x65, // n = fAtten*fAtte
	0x6e, 0x2f, 0x28, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, // n/(sqrl_lightDir
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x6d, //  + 1.0);.vec3 am
	0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x3b, 0x0a, // bient = glossy;.
	0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x61, // if (!is_metal).a
	0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x2b, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // mbient += diffus
	0x65, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x65, // e;.const vec3 re
	0x73, 0x75, 0x6c, 0x74, 0x20, 0x3d, 0x20, 0x4f, 0x75, 0x74, 0x20, 0x2a, 0x20, 0x62, 0x61, 0x6c, // sult = Out * bal
	0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x69, // lLightEmission[i
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x2b, // ].xyz * fAtten +
	0x20, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x2a, 0x20, 0x63, 0x41, 0x6d, 0x62, 0x69, //  ambient * cAmbi
	0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x78, // ent_LightRange.x
	0x79, 0x7a, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // yz;.if (fDisable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, // Lighting_top_bel
	0x6f, 0x77, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x72, 0x65, 0x74, // ow.x != 0.0).ret
	0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2c, 0x64, // urn mix(result,d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // iffuse,fDisableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, // ighting_top_belo
	0x77, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // w.x);.else.retur
	0x6e, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // n result;.}.vec3
	0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, //  DoEnvmapDiffuse
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, // (const vec3 N, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // onst vec3 diffus
	0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // e).{.const vec3 
	0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, // env = textureLod
	0x28, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, // (tex_diffuse_env
	0x2c, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, // , ray_to_equirec
	0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x4e, 0x29, 0x2c, 0x20, // tangular_uv(N), 
	0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 0.0).xyz;.return
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, //  diffuse * env*f
	0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, // envEmissionScale
	0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // _TexWidth.x;.}.v
	0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x47, 0x6c, 0x6f, 0x73, // ec3 DoEnvmapGlos
	0x73, 0x79, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, // sy(const vec3 N,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x63, //  const vec3 V, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x63, // onst vec2 Ruv, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, // onst vec3 glossy
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, // , const float gl
	0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, // ossyPower).{.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x69, 0x70, 0x20, 0x3d, 0x20, 0x6d, // st float mip = m
	0x69, 0x6e, 0x28, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, // in(log2(fenvEmis
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, // sionScale_TexWid
	0x74, 0x68, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x33, 0x2e, 0x30, 0x29, // th.y * sqrt(3.0)
	0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x35, 0x2a, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x67, 0x6c, 0x6f, // ) - 0.5*log2(glo
	0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x2c, // ssyPower + 1.0),
	0x20, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, //  log2(fenvEmissi
	0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, // onScale_TexWidth
	0x2e, 0x79, 0x29, 0x2d, 0x31, 0x2e, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // .y)-1.);.const v
	0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // ec3 env = textur
	0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x2c, 0x20, 0x52, 0x75, // eLod(tex_env, Ru
	0x76, 0x2c, 0x20, 0x6d, 0x69, 0x70, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x72, 0x65, 0x74, // v, mip).xyz;.ret
	0x75, 0x72, 0x6e, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, 0x20, 0x65, 0x6e, 0x76, // urn glossy * env
	0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, // *fenvEmissionSca
	0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x7d, // le_TexWidth.x;.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x32, 0x6e, // .vec3 DoEnvmap2n
	0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // dLayer(const vec
	0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x31, 0x73, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2c, // 3 color1stLayer,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, //  const vec3 pos,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, //  const vec3 N, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, // onst vec3 V, con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, // st float NdotV, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, // const vec2 Ruv, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, // const vec3 specu
	0x6c, 0x61, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // lar).{.const vec
	0x33, 0x20, 0x77, 0x20, 0x3d, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, // 3 w = FresnelSch
	0x6c, 0x69, 0x63, 0x6b, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x4e, // lick(specular, N
	0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, // dotV, Roughness_
	0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, // WrapL_Edge_Thick
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // ness.z);.const v
	0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // ec3 env = textur
	0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x2c, 0x20, 0x52, 0x75, // eLod(tex_env, Ru
	0x76, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x72, 0x65, 0x74, // v, 0.0).xyz;.ret
	0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x31, 0x73, 0x74, // urn mix(color1st
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x2c, 0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, // Layer, env*fenvE
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, // missionScale_Tex
	0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x2c, 0x20, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // Width.x, w);.}.v
	0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x63, 0x6f, // ec3 lightLoop(co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x76, 0x65, // nst vec3 pos, ve
	0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, // c3 N, const vec3
	0x20, 0x56, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, //  V, vec3 diffuse
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, // , vec3 glossy, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, // onst vec3 specul
	0x61, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ar, const float 
	0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, // edge, const bool
	0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, //  is_metal).{.vec
	0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, // 3 color = vec3_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // plat(0.0);.float
	0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x56, //  NdotV = dot(N,V
	0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3c, 0x20, 0x30, // );.if (NdotV < 0
	0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x4e, 0x20, 0x3d, 0x20, 0x2d, 0x4e, 0x3b, 0x0a, 0x4e, 0x64, // .0).{.N = -N;.Nd
	0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x2d, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x3b, 0x0a, 0x7d, 0x0a, // otV = -NdotV;.}.
	0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, 0x4e, 0x64, 0x6f, 0x74, // NdotV = min(Ndot
	0x56, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // V, 1.0);.const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, // loat diffuseMax 
	0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x78, 0x2c, // = max(diffuse.x,
	0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x79, 0x2c, 0x64, 0x69, // max(diffuse.y,di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // ffuse.z));.const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, //  float glossyMax
	0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x78, 0x2c, //  = max(glossy.x,
	0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x79, 0x2c, 0x67, 0x6c, 0x6f, // max(glossy.y,glo
	0x73, 0x73, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // ssy.z));.const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, // loat specularMax
	0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, //  = max(specular.
	0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x79, // x,max(specular.y
	0x2c, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, // ,specular.z));.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x75, 0x6d, 0x20, 0x3d, // onst float sum =
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x2b, 0x20, 0x67, 0x6c, //  diffuseMax + gl
	0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x73, 0x75, // ossyMax ;.if (su
	0x6d, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x26, 0x26, 0x20, 0x66, 0x44, 0x69, 0x73, 0x61, // m > 1.0 && fDisa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, // bleLighting_top_
	0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x7b, // below.x < 1.0).{
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, // .const float inv
	0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x64, // sum = 1.0/sum;.d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, // iffuse *= invsum
	0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, // ;.glossy *= invs
	0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, // um;.}.if ((!is_m
	0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // etal && (diffuse
	0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, // Max > 0.0)) || (
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, // glossyMax > 0.0)
	0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // ).{.if (fDisable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, // Lighting_top_bel
	0x6f, 0x77, 0x2e, 0x78, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, // ow.x == 1.0).col
	0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x32, 0x29, 0x20, 0x2a, // or += float(2) *
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x66, //  diffuse;.else f
	0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x69, // or (int i = 0; i
	0x20, 0x3c, 0x20, 0x32, 0x3b, 0x20, 0x69, 0x2b, 0x2b, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, //  < 2; i++).color
	0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, //  += DoPointLight
	0x28, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, // (pos, N, V, diff
	0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x65, 0x64, 0x67, // use, glossy, edg
	0x65, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, // e, Roughness_Wra
	0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, // pL_Edge_Thicknes
	0x73, 0x2e, 0x78, 0x2c, 0x20, 0x69, 0x2c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, // s.x, i, is_metal
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, // );.}.if (!is_met
	0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, // al && (diffuseMa
	0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // x > 0.0)).color 
	0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, 0x66, 0x75, // += DoEnvmapDiffu
	0x73, 0x65, 0x28, 0x20, 0x28, 0x28, 0x20, 0x28, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x4e, // se( (( ( (vec4(N
	0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, // ,0.0)) * (matVie
	0x77, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x64, 0x69, 0x66, // w) ) ).xyz), dif
	0x66, 0x75, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x67, 0x6c, 0x6f, 0x73, // fuse);.if ((glos
	0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, // syMax > 0.0) || 
	0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, // (specularMax > 0
	0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x52, 0x20, 0x3d, 0x20, // .0)).{.vec3 R = 
	0x28, 0x32, 0x2e, 0x30, 0x2a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x29, 0x2a, 0x4e, 0x20, 0x2d, 0x20, // (2.0*NdotV)*N - 
	0x56, 0x3b, 0x0a, 0x52, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x20, 0x28, 0x20, 0x28, 0x76, 0x65, 0x63, // V;.R = (( ( (vec
	0x34, 0x28, 0x52, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, 0x74, // 4(R,0.0)) * (mat
	0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, // View) ) ).xyz);.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, 0x75, 0x76, 0x20, 0x3d, // const vec2 Ruv =
	0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, //  ray_to_equirect
	0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x52, 0x29, 0x3b, 0x0a, 0x69, // angular_uv(R);.i
	0x66, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, // f (glossyMax > 0
	0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, // .0).color += DoE
	0x6e, 0x76, 0x6d, 0x61, 0x70, 0x47, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x28, 0x4e, 0x2c, 0x20, 0x56, // nvmapGlossy(N, V
	0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x52, // , Ruv, glossy, R
	0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, // oughness_WrapL_E
	0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x29, // dge_Thickness.x)
	0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, // ;.if (specularMa
	0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, // x > 0.0).color =
	0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x32, 0x6e, 0x64, 0x4c, 0x61, 0x79, 0x65, //  DoEnvmap2ndLaye
	0x72, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, 0x2c, // r(color, pos, N,
	0x20, 0x56, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, //  V, NdotV, Ruv, 
	0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x72, 0x65, 0x74, // specular);.}.ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, // urn color ;.}.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x76, 0x54, 0x61, // iform vec4 invTa
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, // bleRes_reflectio
	0x6e, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // n;.uniform vec4 
	0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, // w_h_disableLight
	0x69, 0x6e, 0x67, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, // ing;.vec3 ballLi
	0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // ghtLoop(const ve
	0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, // c3 pos, vec3 N, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, // vec3 V, vec3 dif
	0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // fuse, vec3 gloss
	0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, // y, const vec3 sp
	0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // ecular, const fl
	0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // oat edge, const 
	0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x7b, // bool is_metal).{
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, 0x66, // .const float dif
	0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, // fuseMax = max(di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, // ffuse.x,max(diff
	0x75, 0x73, 0x65, 0x2e, 0x79, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x7a, 0x29, // use.y,diffuse.z)
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, // );.const float g
	0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x67, // lossyMax = max(g
	0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, // lossy.x,max(glos
	0x73, 0x79, 0x2e, 0x79, 0x2c, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, // sy.y,glossy.z));
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x65, // .const float spe
	0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x73, // cularMax = max(s
	0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, // pecular.x,max(sp
	0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x79, 0x2c, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, // ecular.y,specula
	0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // r.z));.const flo
	0x61, 0x74, 0x20, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // at sum = diffuse
	0x4d, 0x61, 0x78, 0x20, 0x2b, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x3b, // Max + glossyMax;
	0x0a, 0x69, 0x66, 0x28, 0x73, 0x75, 0x6d, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x7b, // .if(sum > 1.0).{
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, // .const float inv
	0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x64, // sum = 1.0/sum;.d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, // iffuse *= invsum
	0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, // ;.glossy *= invs
	0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // um;.}.vec3 color
	0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, //  = vec3(0.0, 0.0
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x28, 0x21, 0x69, 0x73, 0x5f, // , 0.0);.if((!is_
	0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // metal && (diffus
	0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, // eMax > 0.0)) || 
	0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, // (glossyMax > 0.0
	0x29, 0x29, 0x0a, 0x66, 0x6f, 0x72, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, 0x30, // )).for(int i = 0
	0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x3b, 0x20, 0x69, 0x2b, 0x2b, // ; i < 2 + 8; i++
	0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, // ).color += DoPoi
	0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, 0x2c, 0x20, // ntLight(pos, N, 
	0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, // V, diffuse, glos
	0x73, 0x79, 0x2c, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, // sy, edge, Roughn
	0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, // ess_WrapL_Edge_T
	0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x2c, 0x20, 0x69, 0x2c, 0x20, 0x69, // hickness.x, i, i
	0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x21, 0x69, 0x73, // s_metal);.if(!is
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, // _metal && (diffu
	0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x63, 0x6f, // seMax > 0.0)).co
	0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, // lor += DoEnvmapD
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, // iffuse(normalize
	0x28, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, // (( (matView) * (
	0x76, 0x65, 0x63, 0x34, 0x28, 0x4e, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x2e, // vec4(N, 0.0)) ).
	0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x3b, 0x0a, // xyz), diffuse);.
	0x69, 0x66, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3e, // if(specularMax >
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x73, //  0.0).color += s
	0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // pecular;.return 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, // color;.}.void ma
	0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // in().{.const vec
	0x33, 0x20, 0x56, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // 3 V = normalize(
	0x20, 0x2d, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, //  -v_worldPos.xyz
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x20, // );.const vec3 N 
	0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x76, 0x5f, 0x6e, 0x6f, // = normalize(v_no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // rmal.xyz);.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x52, 0x20, 0x3d, 0x20, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, //  vec3 R = reflec
	0x74, 0x28, 0x56, 0x2c, 0x20, 0x4e, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x61, // t(V, N);.vec3 ba
	0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x63, 0x6f, // llImageColor;.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x20, 0x3d, // nst float edge =
	0x20, 0x64, 0x6f, 0x74, 0x28, 0x56, 0x2c, 0x20, 0x52, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, //  dot(V, R);.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x6f, 0x64, 0x20, 0x3d, 0x20, 0x28, 0x65, // t float lod = (e
	0x64, 0x67, 0x65, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x36, 0x29, 0x20, 0x3f, 0x20, 0x65, 0x64, 0x67, // dge > 0.6) ? edg
	0x65, 0x2a, 0x28, 0x36, 0x2e, 0x30, 0x2a, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x29, 0x2d, // e*(6.0*1.0/0.4)-
	0x28, 0x36, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x36, 0x2f, 0x30, 0x2e, 0x34, 0x29, 0x20, 0x3a, 0x20, // (6.0*0.6/0.4) : 
	0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0.0;.const float
	0x20, 0x6d, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x52, 0x2e, 0x7a, 0x20, //  m = (1.0 - R.z 
	0x3e, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x33, 0x35, 0x33, 0x35, 0x35, 0x33, // > 0.) ? 0.353553
	0x33, 0x39, 0x30, 0x35, 0x39, 0x33, 0x32, 0x37, 0x33, 0x37, 0x36, 0x32, 0x32, 0x20, 0x2a, 0x20, // 3905932737622 * 
	0x72, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x52, 0x2e, 0x7a, 0x29, // rsqrt(1.0 - R.z)
	0x20, 0x3a, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, //  : 0.;.const vec
	0x32, 0x20, 0x75, 0x76, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x20, // 2 uv = vec2(0.5 
	0x2d, 0x20, 0x6d, 0x20, 0x2a, 0x20, 0x52, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, // - m * R.x, 0.5 -
	0x20, 0x6d, 0x20, 0x2a, 0x20, 0x52, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, //  m * R.y);.ballI
	0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, // mageColor = text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // ureLod(tex_ball_
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x75, 0x76, 0x2c, 0x20, 0x6c, 0x6f, 0x64, 0x29, 0x2e, // color, uv, lod).
	0x72, 0x67, 0x62, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // rgb;.const vec4 
	0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x20, 0x3d, 0x20, 0x74, 0x65, // decalColorT = te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, // xture(tex_ball_d
	0x65, 0x63, 0x61, 0x6c, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, // ecal, v_texcoord
	0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, // 0);.vec3 decalCo
	0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // lor = decalColor
	0x54, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, // T.rgb;.decalColo
	0x72, 0x20, 0x2a, 0x3d, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, // r *= decalColorT
	0x2e, 0x61, 0x3b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, // .a;.ballImageCol
	0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // or += decalColor
	0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, // ;.if ((w_h_disab
	0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x7a, 0x20, 0x21, 0x3d, 0x20, // leLighting.z != 
	0x30, 0x2e, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, // 0.)).{.bgfx_Frag
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x62, 0x61, 0x6c, // Color = vec4(bal
	0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x63, 0x42, 0x61, 0x73, // lImageColor,cBas
	0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x61, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // e_Alpha.a);.retu
	0x72, 0x6e, 0x3b, 0x0a, 0x7d, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, // rn;.}.ballImageC
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x3d, 0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, // olor *= fenvEmis
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, // sionScale_TexWid
	0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, // th.x;.const vec3
	0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, //  playfield_norma
	0x6c, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, // l = ( (matWorldV
	0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, // iew) * (float4(0
	0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x31, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x20, 0x29, 0x2e, 0x78, // .,0.,1.,0.)) ).x
	0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // yz;.const float 
	0x4e, 0x64, 0x6f, 0x74, 0x52, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x70, 0x6c, 0x61, 0x79, // NdotR = dot(play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x52, 0x29, // field_normal, R)
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, // ;.const vec3 pla
	0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, // yfield_p0 = ( (m
	0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, // atWorldView) * (
	0x76, 0x65, 0x63, 0x34, 0x28, 0x20, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x31, // vec4( 0.,0.,0.,1
	0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // .0)) ).xyz;.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, // t float t = dot(
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // playfield_normal
	0x2c, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, // , v_worldPos.xyz
	0x20, 0x2d, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x30, 0x29, //  - playfield_p0)
	0x20, 0x2f, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  / NdotR;.const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x68, // vec3 playfield_h
	0x69, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, // it = v_worldPos.
	0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x74, 0x20, 0x2a, 0x20, 0x52, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // xyz - t * R;.con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x20, 0x3d, 0x20, 0x28, // st vec4 proj = (
	0x20, 0x28, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, //  (matProj) * (ve
	0x63, 0x34, 0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x68, 0x69, 0x74, // c4(playfield_hit
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // , 1.0)) );.const
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x70, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, //  vec2 uvp = vec2
	0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, // (0.5, 0.5) + vec
	0x32, 0x28, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x78, 0x2c, 0x20, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x2e, // 2(proj.x, -proj.
	0x79, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2f, 0x20, 0x70, 0x72, 0x6f, 0x6a, // y) * (0.5 / proj
	0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // .w);.const vec3 
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, // playfieldColor =
	0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x28, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, //  0.25 * (.textur
	0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, // e(tex_ball_playf
	0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, // ield, uvp + vec2
	0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, // (w_h_disableLigh
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, // ting.x, 0.)).rgb
	0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, // .+ texture(tex_b
	0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x75, // all_playfield, u
	0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, // vp - vec2(w_h_di
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, // sableLighting.x,
	0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, //  0.)).rgb.+ text
	0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, // ure(tex_ball_pla
	0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, // yfield, uvp + ve
	0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, // c2(0., w_h_disab
	0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x72, // leLighting.y)).r
	0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, // gb.+ texture(tex
	0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, // _ball_playfield,
	0x20, 0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, //  uvp - vec2(0., 
	0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, // w_h_disableLight
	0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x29, 0x3b, 0x0a, 0x69, // ing.y)).rgb.);.i
	0x66, 0x20, 0x28, 0x21, 0x28, 0x75, 0x76, 0x70, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x20, // f (!(uvp.x < 0. 
	0x7c, 0x7c, 0x20, 0x75, 0x76, 0x70, 0x2e, 0x78, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x20, 0x7c, 0x7c, // || uvp.x > 1. ||
	0x20, 0x75, 0x76, 0x70, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x20, 0x7c, 0x7c, 0x20, 0x75, //  uvp.y < 0. || u
	0x76, 0x70, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x29, 0x0a, 0x26, 0x26, 0x20, 0x21, 0x28, // vp.y > 1.).&& !(
	0x74, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, // t <= 0.)).{.ball
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x6c, 0x65, 0x72, // ImageColor = ler
	0x70, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // p(ballImageColor
	0x2c, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // , playfieldColor
	0x2c, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x30, // , smoothstep(0.0
	0x2c, 0x20, 0x30, 0x2e, 0x31, 0x35, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x29, 0x20, 0x2a, // , 0.15, NdotR) *
	0x20, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, //  invTableRes_ref
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x62, 0x61, // lection.z);.}.ba
	0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x6d, // llImageColor = m
	0x69, 0x6e, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, // in(ballImageColo
	0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x35, 0x2e, 0x2c, 0x20, 0x31, // r, float3(15., 1
	0x35, 0x2e, 0x2c, 0x20, 0x31, 0x35, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // 5., 15.));.vec3 
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x3d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, // diffuse = cBase_
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x2a, 0x30, 0x2e, 0x30, 0x37, 0x35, 0x3b, // Alpha.rgb*0.075;
	0x0a, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x3d, 0x20, 0x64, 0x65, 0x63, 0x61, // .diffuse *= deca
	0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // lColor;.const ve
	0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, // c3 glossy = max(
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, // diffuse*2.0, vec
	0x33, 0x28, 0x30, 0x2e, 0x31, 0x2c, 0x30, 0x2e, 0x31, 0x2c, 0x30, 0x2e, 0x31, 0x29, 0x29, 0x3b, // 3(0.1,0.1,0.1));
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x20, 0x3d, // .vec3 specular =
	0x20, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, //  ballImageColor 
	0x2a, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, // * cBase_Alpha.rg
	0x62, 0x3b, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x20, 0x2a, 0x3d, 0x20, 0x76, // b;.specular *= v
	0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x2c, 0x31, 0x2e, 0x2c, 0x31, 0x2e, 0x29, 0x2d, 0x64, 0x65, // ec3(1.,1.,1.)-de
	0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, // calColor;.bgfx_F
	0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x62, // ragColor.rgb = b
	0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x76, 0x5f, 0x77, // allLightLoop(v_w
	0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x4e, 0x2c, 0x20, // orldPos.xyz, N, 
	0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, // V, diffuse, glos
	0x73, 0x79, 0x2c, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x31, 0x2e, // sy, specular, 1.
	0x30, 0x2c, 0x20, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, // 0, false);.bgfx_
	0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x61, 0x20, 0x3d, 0x20, 0x63, 0x42, // FragColor.a = cB
	0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x61, 0x3b, 0x0a, 0x7d, 0x0a, 0x00, // ase_Alpha.a;.}..
};
static const uint8_t fs_ball_spherical_nodecal_glsl[14510] =
{
	0x46, 0x53, 0x48, 0x0b, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9b, 0x38, // FSH....l.......8
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x6f, // ..#version 440.o
	0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, // ut vec4 bgfx_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // gColor;.#define 
	0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x62, 0x67, 0x66, // gl_FragColor bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x0a, 0x23, 0x64, 0x65, 0x66, // x_FragColor.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x20, 0x20, // ine texture2D   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, //        texture.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // Lod       textur
	0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, // eLod.#define tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ture2DGrad      
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, // textureGrad.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, // ine texture2DPro
	0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, // jLod   texturePr
	0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // ojLod.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, // xture2DProjGrad 
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, //  textureProjGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // CubeLod     text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, // ureLod.#define t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, // extureCubeGrad  
	0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, //   textureGrad.#d
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, // efine texture3D 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //          texture
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, 0x65, 0x78, 0x74, // 2DLodOffset text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, // ureLodOffset.#de
	0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, // fine attribute i
	0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // n.#define varyin
	0x67, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, // g in.#define bgf
	0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // xShadow2D(_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, // er, _coord)     
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // vec4_splat(textu
	0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // re(_sampler, _co
	0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, // ord) ).#define b
	0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, // gfxShadow2DProj(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, // ) vec4_splat(tex
	0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // tureProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x76, 0x61, 0x72, // r, _coord) ).var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // ying vec3 v_norm
	0x61, 0x6c, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, // al;.varying vec2
	0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, //  v_texcoord0;.va
	0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, // rying vec3 v_wor
	0x6c, 0x64, 0x50, 0x6f, 0x73, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, // ldPos;.vec3 inst
	0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, // Mul(vec3 _vec, m
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // at3 _mtx) { retu
	0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, // rn ( (_vec) * (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, // mtx) ); }.vec3 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, // nstMul(mat3 _mtx
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, // , vec3 _vec) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, // eturn ( (_mtx) *
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, //  (_vec) ); }.vec
	0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // 4 instMul(vec4 _
	0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, // vec, mat4 _mtx) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, // { return ( (_vec
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // ) * (_mtx) ); }.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, // vec4 instMul(mat
	0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, // 4 _mtx, vec4 _ve
	0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, // c) { return ( (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, // mtx) * (_vec) );
	0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, //  }.float rcp(flo
	0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // at _a) { return 
	0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, // 1.0/_a; }.vec2 r
	0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // cp(vec2 _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, // turn vec2(1.0)/_
	0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, // a; }.vec3 rcp(ve
	0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c3 _a) { return 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, // vec3(1.0)/_a; }.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, // vec4 rcp(vec4 _a
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // ) { return vec4(
	0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // 1.0)/_a; }.vec2 
	0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // vec2_splat(float
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, //  _x) { return ve
	0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, // c2(_x, _x); }.ve
	0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, // c3 vec3_splat(fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // oat _x) { return
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, //  vec3(_x, _x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, // ); }.vec4 vec4_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // plat(float _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, //  return vec4(_x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, //  _x, _x, _x); }.
	0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, // uvec2 uvec2_spla
	0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // t(uint _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // urn uvec2(_x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, // ); }.uvec3 uvec3
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // _splat(uint _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, // { return uvec3(_
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, // x, _x, _x); }.uv
	0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // ec4 uvec4_splat(
	0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // uint _x) { retur
	0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, // n uvec4(_x, _x, 
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, // _x, _x); }.mat4 
	0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, // mtxFromRows(vec4
	0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, //  _0, vec4 _1, ve
	0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, // c4 _2, vec4 _3).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, // {.return transpo
	0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, // se(mat4(_0, _1, 
	0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, // _2, _3) );.}.mat
	0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, // 4 mtxFromCols(ve
	0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, // c4 _0, vec4 _1, 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, // vec4 _2, vec4 _3
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, // ).{.return mat4(
	0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, // _0, _1, _2, _3);
	0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, // .}.mat3 mtxFromR
	0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, // ows(vec3 _0, vec
	0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, // 3 _1, vec3 _2).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, // .return transpos
	0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, // e(mat3(_0, _1, _
	0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, // 2) );.}.mat3 mtx
	0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, // FromCols(vec3 _0
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // , vec3 _1, vec3 
	0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, // _2).{.return mat
	0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, // 3(_0, _1, _2);.}
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, // .uniform vec4 u_
	0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // viewRect;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, // m vec4 u_viewTex
	0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // el;.uniform mat4
	0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, //  u_view;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, //  mat4 u_invView;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // proj;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, // t4 u_invProj;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // iform mat4 u_vie
	0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // wProj;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, // at4 u_invViewPro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // u_model[32];.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, // form mat4 u_mode
	0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // lView;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, // at4 u_modelViewP
	0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, // roj;.uniform vec
	0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, // 4 u_alphaRef4;.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // loat sqr(const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // loat v).{.return
	0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, //  v*v;.}.vec2 sqr
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, // (const vec2 v).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // .return v*v;.}.v
	0x65, 0x63, 0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // ec3 sqr(const ve
	0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // c3 v).{.return v
	0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, // *v;.}.vec3 mul_w
	0x31, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, // 1(const vec3 v, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, // const mat4 m).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, // return v.x*m[0].
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, // xyz + (v.y*m[1].
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, // xyz + (v.z*m[2].
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, // xyz + m[3].xyz))
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, // ;.}.float acos_a
	0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, // pprox_divPI(cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, // t float v).{.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, // st float x = abs
	0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, // (v);.if(1. - x <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, // = 0.000061035156
	0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, // 25).return (v >=
	0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, //  0.) ? 0. : 1.;.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, // const float res 
	0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, // = ((-0.155972/3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, //  * x + (1.56467/
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, // 5) ) * sqrt(1. -
	0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, //  x);.return (v >
	0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, // = 0.) ? res : 1.
	0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //  - res;.}.float 
	0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, // atan2_approx_div
	0x32, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 2PI(const float 
	0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, // y, const float x
	0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ).{.const float 
	0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, // abs_y = abs(y);.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, // const float abs_
	0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, // x = abs(x);.if(a
	0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, // bs_x <= 0.000061
	0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, // 03515625 && abs_
	0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, // y <= 0.000061035
	0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, // 15625).return 0.
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, // ;.const float r 
	0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, // = (abs_x - abs_y
	0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, // ) / (abs_x + abs
	0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _y);.const float
	0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, //  angle = ((x < 0
	0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, // .) ? (3./8.) : (
	0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, // 1./8.)).+ (0.211
	0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // 868 /(2.*3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, // 6433832795) * r 
	0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, // * r - 0.987305 /
	0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, // (2.*3.1415926535
	0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, // 8979323846264338
	0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, // 32795)) * ((x < 
	0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, // 0.) ? -r : r);.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // eturn (y < 0.) ?
	0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, //  -angle : angle;
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, // .}.float asin_ap
	0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // prox_divPI(const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, //  float v).{.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, // t float x = abs(
	0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, // v);.if(1. - x <=
	0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, //  0.0000610351562
	0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, // 5).return (v >= 
	0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, // 0.) ? 0.5 : -0.5
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, // ;.const float re
	0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, // s = ((-0.155972/
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, // 5) * x + (1.5646
	0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, // 7/3.141592653589
	0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, // 7932384626433832
	0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, // 795) ) * sqrt(1.
	0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, //  - x);.return (v
	0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, //  >= 0.) ? 0.5 - 
	0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, // res : -0.5 + res
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, // ;.}.vec2 ray_to_
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, // equirectangular_
	0x75, 0x76, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, // uv(const vec3 ra
	0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, // y).{.return vec2
	0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, // (.0.5 + atan2_ap
	0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, // prox_div2PI(ray.
	0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, // y, ray.x),.acos_
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, // approx_divPI(ray
	0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, // .z));.}.float In
	0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // vsRGB(const floa
	0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, // t color).{.if (c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, // olor <= 0.04045)
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, // .return color * 
	0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, // (1.0/12.92);.els
	0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, // e.return pow(col
	0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, // or * (1.0/1.055)
	0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, //  + (0.055/1.055)
	0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // , 2.4);.}.float 
	0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // InvRec709(const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, // float color).{.i
	0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, // f (color <= 0.08
	0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // 1).return color 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, // * (1.0/4.5);.els
	0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, // e.return pow(col
	0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, // or * (1.0/1.099)
	0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, //  + (0.099/1.099)
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // , 1.0/0.45);.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, // loat InvGamma(co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // nst float color)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, // .{.return InvsRG
	0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // B(color);.}.vec3
	0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  InvGamma(const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // vec3 color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // turn vec3(InvGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, // ma(color.x),InvG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, // amma(color.y),In
	0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, // vGamma(color.z))
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, // ;.}.vec3 InvTone
	0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // Map(const vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // olor).{.const fl
	0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, // oat inv_2bh = 0.
	0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // 5/0.25;.const fl
	0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, // oat bh = 4.0*0.2
	0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 5 - 2.0;.return 
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, // (color - 1.0 + s
	0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // qrt(color*(color
	0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, //  + bh) + 1.0))*i
	0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // nv_2bh;.}.float 
	0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // sRGB(const float
	0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, //  f).{.float s;.i
	0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, // f (f <= 0.003130
	0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, // 8).s = 12.92 * f
	0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, // ;.else.s = 1.055
	0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, //  * pow(f, 1.0/2.
	0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 4) - 0.055;.retu
	0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, // rn s;.}.float Re
	0x63, 0x37, 0x30, 0x39, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // c709(const float
	0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, //  f).{.float s;.i
	0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, // f (f <= 0.018).s
	0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, //  = 4.5 * f;.else
	0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, // .s = 1.099 * pow
	0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, // (f, 0.45) - 0.09
	0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // 9;.return s;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, // loat FBGamma(con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // st float color).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, // {.return sRGB(co
	0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, // lor);.}.vec2 FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, // amma(const vec2 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // color).{.return 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, // vec2(FBGamma(col
	0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, // or.x),FBGamma(co
	0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // lor.y));.}.vec3 
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // FBGamma(const ve
	0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // c3 color).{.retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, // rn vec3(FBGamma(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, // color.x),FBGamma
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // (color.y),FBGamm
	0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // a(color.z));.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, // loat FBToneMap(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, // onst float l).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, // return l * ((l*0
	0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, // .25 + 1.0) / (l 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // + 1.0));.}.vec2 
	0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // FBToneMap(const 
	0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, // vec2 color).{.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, // nst float l = do
	0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, // t(color,vec2(0.1
	0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, // 76204+0.0108109*
	0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, // 0.5,0.812985+0.0
	0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, // 108109*0.5));.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, // turn color * ((l
	0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, // *0.25 + 1.0) / (
	0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // l + 1.0));.}.vec
	0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, // 3 FBToneMap(cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // t vec3 color).{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, // const float l = 
	0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, // dot(color,vec3(0
	0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, // .176204,0.812985
	0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, // ,0.0108109));.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, // turn color * ((l
	0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, // *0.25 + 1.0) / (
	0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // l + 1.0));.}.vec
	0x34, 0x20, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // 4 Additive(const
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, //  vec4 cBase, con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, // st vec4 cBlend, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, // const float perc
	0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, // ent).{.return cB
	0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, // ase + cBlend*per
	0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, // cent;.}.vec3 Scr
	0x65, 0x65, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // een (const vec3 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // cBase, const vec
	0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 3 cBlend).{.retu
	0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // rn 1.0 - (1.0 - 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // cBase) * (1.0 - 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // cBlend);.}.vec4 
	0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // Screen (const ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // c4 cBase, const 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // vec4 cBlend).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, // eturn 1.0 - (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, //  - cBase) * (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, //  - cBlend);.}.ve
	0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, // c3 ScreenHDR (co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, // nst vec3 cBase, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // const vec3 cBlen
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, // d).{.return max(
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, // 1.0 - (1.0 - cBa
	0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, // se) * (1.0 - cBl
	0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, // end), vec3(0.,0.
	0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, // ,0.));.}.vec4 Sc
	0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // reenHDR (const v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, // ec4 cBase, const
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, //  vec4 cBlend).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // return max(1.0 -
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, //  (1.0 - cBase) *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, //  (1.0 - cBlend),
	0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, //  vec4(0.,0.,0.,0
	0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, // .));.}.vec4 Mult
	0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, // iply (const vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, //  cBase, const ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, // c4 cBlend, const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, //  float percent).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, // {.return cBase *
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, //  cBlend*percent;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, // .}.vec4 Overlay 
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, // (const vec4 cBas
	0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // e, const vec4 cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, // lend).{.vec4 cNe
	0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, // w = step(0.5, cB
	0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, // ase);.cNew = mix
	0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, // (cBase*cBlend*2.
	0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, // 0, 1.0-2.0*(1.0-
	0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, // cBase)*(1.0-cBle
	0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // nd), cNew);.retu
	0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // rn cNew;.}.vec4 
	0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, // OverlayHDR (cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, // t vec4 cBase, co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // nst vec4 cBlend)
	0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, // .{.vec4 cNew = s
	0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, // tep(0.5, cBase);
	0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, // .cNew = max(mix(
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, // cBase*cBlend*2.0
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, // , 1.0-2.0*(1.0-c
	0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, // Base)*(1.0-cBlen
	0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // d), cNew), vec4(
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, // 0.,0.,0.,0.));.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // eturn cNew;.}.ve
	0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, // c3 cos_hemispher
	0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // e_sample(const v
	0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // ec2 t).{.const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, // loat phi = t.y *
	0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, //  (2.0*3.14159265
	0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, // 3589793238462643
	0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // 3832795);.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, // float cosTheta =
	0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, //  sqrt(1.0 - t.x)
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, // ;.const float si
	0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, // nTheta = sqrt(t.
	0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, // x);.float sp,cp;
	0x0a, 0x73, 0x69, 0x6e, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x2c, 0x73, 0x70, 0x2c, 0x63, // .sincos(phi,sp,c
	0x70, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // p);.return vec3(
	0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, // cp * sinTheta, c
	0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, // osTheta, sp * si
	0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // nTheta);.}.vec3 
	0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, // rotate_to_vector
	0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // _upper(const vec
	0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // 3 vec, const vec
	0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, // 3 normal).{.if(n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, // ormal.y > -0.999
	0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 99).{.const floa
	0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, // t h = 1.0/(1.0+n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // ormal.y);.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, // float hz = h*nor
	0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // mal.z;.const flo
	0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, // at hzx = hz*norm
	0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // al.x;.return vec
	0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, // 3(.vec.x * (norm
	0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, // al.y+hz*normal.z
	0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // ) + vec.y * norm
	0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, // al.x - vec.z * h
	0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // zx,.vec.y * norm
	0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, // al.y - vec.x * n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, // ormal.x - vec.z 
	0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, // * normal.z,.vec.
	0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, // y * normal.z - v
	0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, // ec.x * hzx + vec
	0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, // .z * (normal.y+h
	0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // *normal.x*normal
	0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, // .x));.}.else ret
	0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, // urn -vec;.}.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, // orm mat4 matView
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, // ;.uniform mat4 m
	0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // atWorldView;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, // form mat4 matWor
	0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x3b, 0x0a, 0x75, // ldViewInverse;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, // niform mat4 matW
	0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, // orldViewProj;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, // iform mat4 matPr
	0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, // oj;.uniform samp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, // ler2D tex_ball_c
	0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, // olor;.uniform sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x3b, // mpler2D tex_env;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .uniform sampler
	0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, // 2D tex_diffuse_e
	0x6e, 0x76, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, // nv;.uniform samp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, // ler2D tex_ball_d
	0x65, 0x63, 0x61, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, // ecal;.uniform sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // mpler2D tex_ball
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // _playfield;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x62, 0x61, 0x73, 0x69, 0x63, // orm vec4 u_basic
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // _shade_mode;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, // form vec4 ballLi
	0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x5d, 0x3b, 0x0a, 0x75, // ghtPos[2 + 8];.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, // niform vec4 ball
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x32, 0x20, // LightEmission[2 
	0x2b, 0x20, 0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // + 8];.uniform ve
	0x63, 0x34, 0x20, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, // c4 cAmbient_Ligh
	0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // tRange;.uniform 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, // vec4 fenvEmissio
	0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x3b, // nScale_TexWidth;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x44, // .uniform vec4 fD
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, // isableLighting_t
	0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // op_below;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x53, 0x63, 0x61, // m vec4 fSceneSca
	0x6c, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // le;.uniform vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x0a, 0x75, 0x6e, //  cBase_Alpha;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, // iform vec4 Rough
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, // ness_WrapL_Edge_
	0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // Thickness;.float
	0x20, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, //  GeometricOpacit
	0x79, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, // y(const float Nd
	0x6f, 0x74, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // otV, const float
	0x20, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, //  alpha, const fl
	0x6f, 0x61, 0x74, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2c, 0x20, 0x63, 0x6f, // oat blending, co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, // nst float thickn
	0x65, 0x73, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // ess).{.const flo
	0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x56, // at x = abs(NdotV
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, // );.const float g
	0x20, 0x3d, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x2a, 0x20, 0x28, 0x31, //  = blending * (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x78, 0x20, 0x2f, 0x20, 0x28, 0x78, 0x20, 0x2a, 0x20, 0x28, // .0 - (x / (x * (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, // 1.0 - thickness)
	0x20, 0x2b, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, 0x29, 0x29, 0x3b, //  + thickness)));
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x61, 0x6c, 0x70, 0x68, // .return mix(alph
	0x61, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x67, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // a, 1.0, g);.}.ve
	0x63, 0x33, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, // c3 FresnelSchlic
	0x6b, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, // k(const vec3 spe
	0x63, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4c, // c, const float L
	0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // dotH, const floa
	0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // t edge).{.return
	0x20, 0x73, 0x70, 0x65, 0x63, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x65, 0x64, //  spec + (vec3(ed
	0x67, 0x65, 0x2c, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x65, 0x64, 0x67, 0x65, 0x29, 0x20, 0x2d, 0x20, // ge,edge,edge) - 
	0x73, 0x70, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x31, 0x2e, 0x30, 0x20, // spec) * pow(1.0 
	0x2d, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x35, 0x2e, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // - LdotH, 5.);.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, // vec3 DoPointLigh
	0x74, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, // t(const vec3 pos
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, // , const vec3 N, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x63, 0x6f, // const vec3 V, co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // nst vec3 diffuse
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, // , const vec3 glo
	0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ssy, const float
	0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, //  edge, const flo
	0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x2c, 0x20, // at glossyPower, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x2c, 0x20, 0x63, 0x6f, 0x6e, // const int i, con
	0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, // st bool is_metal
	0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, // ).{.const vec3 l
	0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x20, 0x28, 0x6d, // ightDir = ( ( (m
	0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, // atView) * (vec4(
	0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x69, 0x5d, 0x2e, // ballLightPos[i].
	0x78, 0x79, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, // xyz, 1.0)) ) ).x
	0x79, 0x7a, 0x20, 0x2d, 0x20, 0x70, 0x6f, 0x73, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // yz - pos;.const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x4c, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, // vec3 L = normali
	0x7a, 0x65, 0x28, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x29, 0x3b, 0x0a, 0x63, 0x6f, // ze(lightDir);.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, // nst float NdotL 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x20, 0x4c, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, // = dot(N, L);.vec
	0x33, 0x20, 0x4f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, // 3 Out = vec3(0.0
	0x2c, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, // ,0.0,0.0);.if (!
	0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x4e, 0x64, 0x6f, // is_metal && (Ndo
	0x74, 0x4c, 0x20, 0x2b, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, // tL + Roughness_W
	0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, // rapL_Edge_Thickn
	0x65, 0x73, 0x73, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x4f, 0x75, // ess.y > 0.0)).Ou
	0x74, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x28, 0x28, // t = diffuse * ((
	0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x2b, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, // NdotL + Roughnes
	0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, // s_WrapL_Edge_Thi
	0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x73, 0x71, 0x72, 0x28, // ckness.y) / sqr(
	0x31, 0x2e, 0x30, 0x2b, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, // 1.0+Roughness_Wr
	0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, // apL_Edge_Thickne
	0x73, 0x73, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, // ss.y));.if (Ndot
	0x4c, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // L > 0.0).{.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x48, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, //  vec3 H = normal
	0x69, 0x7a, 0x65, 0x28, 0x4c, 0x20, 0x2b, 0x20, 0x56, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // ize(L + V);.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, // t float NdotH = 
	0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // dot(N, H);.const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, //  float LdotH = d
	0x6f, 0x74, 0x28, 0x4c, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // ot(L, H);.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x56, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, 0x6f, // float VdotH = do
	0x74, 0x28, 0x56, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x4e, 0x64, // t(V, H);.if ((Nd
	0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x4c, // otH > 0.0) && (L
	0x64, 0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, // dotH > 0.0) && (
	0x56, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x4f, 0x75, // VdotH > 0.0)).Ou
	0x74, 0x20, 0x2b, 0x3d, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x6c, // t += FresnelSchl
	0x69, 0x63, 0x6b, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x4c, 0x64, 0x6f, 0x74, // ick(glossy, Ldot
	0x48, 0x2c, 0x20, 0x65, 0x64, 0x67, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x28, 0x67, 0x6c, // H, edge) * (((gl
	0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // ossyPower + 1.0)
	0x20, 0x2f, 0x20, 0x28, 0x38, 0x2e, 0x30, 0x2a, 0x56, 0x64, 0x6f, 0x74, 0x48, 0x29, 0x29, 0x20, //  / (8.0*VdotH)) 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x67, 0x6c, 0x6f, // * pow(NdotH, glo
	0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x63, 0x6f, // ssyPower));.}.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, // nst float sqrl_l
	0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x6c, 0x69, // ightDir = dot(li
	0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2c, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x29, // ghtDir,lightDir)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x3d, // ;.float fAtten =
	0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x73, 0x71, 0x72, //  clamp(1.0 - sqr
	0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2a, 0x73, 0x71, 0x72, 0x6c, 0x5f, // l_lightDir*sqrl_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2f, 0x28, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, // lightDir/(cAmbie
	0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, // nt_LightRange.w*
	0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, // cAmbient_LightRa
	0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, // nge.w*cAmbient_L
	0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, // ightRange.w*cAmb
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, // ient_LightRange.
	0x77, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x66, // w), 0.0, 1.0);.f
	0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x3d, 0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x2a, 0x66, // Atten = fAtten*f
	0x41, 0x74, 0x74, 0x65, 0x6e, 0x2f, 0x28, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, // Atten/(sqrl_ligh
	0x74, 0x44, 0x69, 0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, // tDir + 1.0);.vec
	0x33, 0x20, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x67, 0x6c, 0x6f, 0x73, // 3 ambient = glos
	0x73, 0x79, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, // sy;.if (!is_meta
	0x6c, 0x29, 0x0a, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x2b, 0x3d, 0x20, 0x64, 0x69, // l).ambient += di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // ffuse;.const vec
	0x33, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x20, 0x3d, 0x20, 0x4f, 0x75, 0x74, 0x20, 0x2a, // 3 result = Out *
	0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, //  ballLightEmissi
	0x6f, 0x6e, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x66, 0x41, 0x74, 0x74, // on[i].xyz * fAtt
	0x65, 0x6e, 0x20, 0x2b, 0x20, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x2a, 0x20, 0x63, // en + ambient * c
	0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, // Ambient_LightRan
	0x67, 0x65, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x44, 0x69, 0x73, // ge.xyz;.if (fDis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, // ableLighting_top
	0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, // _below.x != 0.0)
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x72, 0x65, 0x73, 0x75, // .return mix(resu
	0x6c, 0x74, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x66, 0x44, 0x69, 0x73, 0x61, // lt,diffuse,fDisa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, // bleLighting_top_
	0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, // below.x);.else.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, // eturn result;.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, // vec3 DoEnvmapDif
	0x66, 0x75, 0x73, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // fuse(const vec3 
	0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, // N, const vec3 di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // ffuse).{.const v
	0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // ec3 env = textur
	0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // eLod(tex_diffuse
	0x5f, 0x65, 0x6e, 0x76, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, // _env, ray_to_equ
	0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, // irectangular_uv(
	0x4e, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x72, 0x65, // N), 0.0).xyz;.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x65, // turn diffuse * e
	0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, // nv*fenvEmissionS
	0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, // cale_TexWidth.x;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, // .}.vec3 DoEnvmap
	0x47, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // Glossy(const vec
	0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // 3 N, const vec3 
	0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, 0x75, // V, const vec2 Ru
	0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, // v, const vec3 gl
	0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ossy, const floa
	0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x29, 0x0a, 0x7b, // t glossyPower).{
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x69, 0x70, // .const float mip
	0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x66, 0x65, 0x6e, 0x76, //  = min(log2(fenv
	0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, // EmissionScale_Te
	0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // xWidth.y * sqrt(
	0x33, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x35, 0x2a, 0x6c, 0x6f, 0x67, 0x32, // 3.0)) - 0.5*log2
	0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x2b, 0x20, 0x31, // (glossyPower + 1
	0x2e, 0x30, 0x29, 0x2c, 0x20, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, // .0), log2(fenvEm
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, // issionScale_TexW
	0x69, 0x64, 0x74, 0x68, 0x2e, 0x79, 0x29, 0x2d, 0x31, 0x2e, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // idth.y)-1.);.con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, // st vec3 env = te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, // xtureLod(tex_env
	0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x6d, 0x69, 0x70, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // , Ruv, mip).xyz;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, // .return glossy *
	0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, //  env*fenvEmissio
	0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, // nScale_TexWidth.
	0x78, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, // x;.}.vec3 DoEnvm
	0x61, 0x70, 0x32, 0x6e, 0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // ap2ndLayer(const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x31, 0x73, 0x74, 0x4c, 0x61, //  vec3 color1stLa
	0x79, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // yer, const vec3 
	0x70, 0x6f, 0x73, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // pos, const vec3 
	0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, // N, const vec3 V,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, //  const float Ndo
	0x74, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, // tV, const vec2 R
	0x75, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, // uv, const vec3 s
	0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // pecular).{.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x77, 0x20, 0x3d, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, //  vec3 w = Fresne
	0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, 0x6b, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, // lSchlick(specula
	0x72, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, // r, NdotV, Roughn
	0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, // ess_WrapL_Edge_T
	0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // hickness.z);.con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, // st vec3 env = te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, // xtureLod(tex_env
	0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // , Ruv, 0.0).xyz;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .return mix(colo
	0x72, 0x31, 0x73, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2c, 0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, // r1stLayer, env*f
	0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, // envEmissionScale
	0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x2c, 0x20, 0x77, 0x29, 0x3b, // _TexWidth.x, w);
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, // .}.vec3 lightLoo
	0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, // p(const vec3 pos
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // , vec3 N, const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, // vec3 V, vec3 dif
	0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // fuse, vec3 gloss
	0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, // y, const vec3 sp
	0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // ecular, const fl
	0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // oat edge, const 
	0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x7b, // bool is_metal).{
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, // .vec3 color = ve
	0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x66, // c3_splat(0.0);.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // loat NdotV = dot
	0x28, 0x4e, 0x2c, 0x56, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x56, // (N,V);.if (NdotV
	0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x4e, 0x20, 0x3d, 0x20, 0x2d, 0x4e, //  < 0.0).{.N = -N
	0x3b, 0x0a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x2d, 0x4e, 0x64, 0x6f, 0x74, 0x56, // ;.NdotV = -NdotV
	0x3b, 0x0a, 0x7d, 0x0a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, // ;.}.NdotV = min(
	0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // NdotV, 1.0);.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // st float diffuse
	0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // Max = max(diffus
	0x65, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, // e.x,max(diffuse.
	0x79, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, // y,diffuse.z));.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // onst float gloss
	0x79, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, // yMax = max(gloss
	0x79, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x79, // y.x,max(glossy.y
	0x2c, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // ,glossy.z));.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, // st float specula
	0x72, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, // rMax = max(specu
	0x6c, 0x61, 0x72, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, // lar.x,max(specul
	0x61, 0x72, 0x2e, 0x79, 0x2c, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x7a, 0x29, // ar.y,specular.z)
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // );.const float s
	0x75, 0x6d, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, // um = diffuseMax 
	0x2b, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3b, 0x0a, 0x69, 0x66, // + glossyMax ;.if
	0x20, 0x28, 0x73, 0x75, 0x6d, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x26, 0x26, 0x20, 0x66, //  (sum > 1.0 && f
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, // DisableLighting_
	0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x31, 0x2e, // top_below.x < 1.
	0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0).{.const float
	0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x73, 0x75, //  invsum = 1.0/su
	0x6d, 0x3b, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, // m;.diffuse *= in
	0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, 0x3d, 0x20, // vsum;.glossy *= 
	0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x21, // invsum;.}.if ((!
	0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, // is_metal && (dif
	0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, // fuseMax > 0.0)) 
	0x7c, 0x7c, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, // || (glossyMax > 
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x44, 0x69, 0x73, // 0.0)).{.if (fDis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, // ableLighting_top
	0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x29, // _below.x == 1.0)
	0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, // .color += float(
	0x32, 0x29, 0x20, 0x2a, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x3b, 0x0a, 0x65, 0x6c, // 2) * diffuse;.el
	0x73, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, // se for (int i = 
	0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x32, 0x3b, 0x20, 0x69, 0x2b, 0x2b, 0x29, 0x0a, 0x63, // 0; i < 2; i++).c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, // olor += DoPointL
	0x69, 0x67, 0x68, 0x74, 0x28, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, // ight(pos, N, V, 
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, // diffuse, glossy,
	0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, //  edge, Roughness
	0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, // _WrapL_Edge_Thic
	0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x2c, 0x20, 0x69, 0x2c, 0x20, 0x69, 0x73, 0x5f, 0x6d, // kness.x, i, is_m
	0x65, 0x74, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, // etal);.}.if (!is
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, // _metal && (diffu
	0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x63, 0x6f, // seMax > 0.0)).co
	0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, // lor += DoEnvmapD
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, 0x20, 0x28, 0x28, 0x20, 0x28, 0x20, 0x28, 0x76, 0x65, // iffuse( (( ( (ve
	0x63, 0x34, 0x28, 0x4e, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, // c4(N,0.0)) * (ma
	0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, // tView) ) ).xyz),
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, //  diffuse);.if ((
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, // glossyMax > 0.0)
	0x20, 0x7c, 0x7c, 0x20, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, //  || (specularMax
	0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, //  > 0.0)).{.vec3 
	0x52, 0x20, 0x3d, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x29, 0x2a, // R = (2.0*NdotV)*
	0x4e, 0x20, 0x2d, 0x20, 0x56, 0x3b, 0x0a, 0x52, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x20, 0x28, 0x20, // N - V;.R = (( ( 
	0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x52, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, // (vec4(R,0.0)) * 
	0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, // (matView) ) ).xy
	0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, // z);.const vec2 R
	0x75, 0x76, 0x20, 0x3d, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, // uv = ray_to_equi
	0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x52, // rectangular_uv(R
	0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, // );.if (glossyMax
	0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, //  > 0.0).color +=
	0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x47, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x28, //  DoEnvmapGlossy(
	0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // N, V, Ruv, gloss
	0x79, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, // y, Roughness_Wra
	0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, // pL_Edge_Thicknes
	0x73, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, // s.x);.if (specul
	0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, // arMax > 0.0).col
	0x6f, 0x72, 0x20, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x32, 0x6e, 0x64, // or = DoEnvmap2nd
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x70, 0x6f, 0x73, // Layer(color, pos
	0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x52, // , N, V, NdotV, R
	0x75, 0x76, 0x2c, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x29, 0x3b, 0x0a, 0x7d, // uv, specular);.}
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3b, 0x0a, // .return color ;.
	0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, // }.uniform vec4 i
	0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, // nvTableRes_refle
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // ction;.uniform v
	0x65, 0x63, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // ec4 w_h_disableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x61, // ighting;.vec3 ba
	0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, // llLightLoop(cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // t vec3 pos, vec3
	0x20, 0x4e, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, //  N, vec3 V, vec3
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, //  diffuse, vec3 g
	0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // lossy, const vec
	0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // 3 specular, cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, // t float edge, co
	0x6e, 0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, // nst bool is_meta
	0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // l).{.const float
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, //  diffuseMax = ma
	0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, // x(diffuse.x,max(
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x79, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // diffuse.y,diffus
	0x65, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // e.z));.const flo
	0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, // at glossyMax = m
	0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, // ax(glossy.x,max(
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x79, 0x2c, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, // glossy.y,glossy.
	0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // z));.const float
	0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, //  specularMax = m
	0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x78, 0x2c, 0x6d, 0x61, // ax(specular.x,ma
	0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x79, 0x2c, 0x73, 0x70, 0x65, // x(specular.y,spe
	0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // cular.z));.const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, //  float sum = dif
	0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x2b, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, // fuseMax + glossy
	0x4d, 0x61, 0x78, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x73, 0x75, 0x6d, 0x20, 0x3e, 0x20, 0x31, 0x2e, // Max;.if(sum > 1.
	0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0).{.const float
	0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x73, 0x75, //  invsum = 1.0/su
	0x6d, 0x3b, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, // m;.diffuse *= in
	0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, 0x3d, 0x20, // vsum;.glossy *= 
	0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // invsum;.}.vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, // olor = vec3(0.0,
	0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x28, //  0.0, 0.0);.if((
	0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, // !is_metal && (di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // ffuseMax > 0.0))
	0x20, 0x7c, 0x7c, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, //  || (glossyMax >
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x66, 0x6f, 0x72, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, //  0.0)).for(int i
	0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x3b, //  = 0; i < 2 + 8;
	0x20, 0x69, 0x2b, 0x2b, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, //  i++).color += D
	0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x70, 0x6f, 0x73, 0x2c, // oPointLight(pos,
	0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, //  N, V, diffuse, 
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x52, 0x6f, // glossy, edge, Ro
	0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, // ughness_WrapL_Ed
	0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x2c, 0x20, // ge_Thickness.x, 
	0x69, 0x2c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x69, 0x66, // i, is_metal);.if
	0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, // (!is_metal && (d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, // iffuseMax > 0.0)
	0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, // ).color += DoEnv
	0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // mapDiffuse(norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, // lize(( (matView)
	0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x4e, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, //  * (vec4(N, 0.0)
	0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // ) ).xyz), diffus
	0x65, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, // e);.if(specularM
	0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // ax > 0.0).color 
	0x2b, 0x3d, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x3b, 0x0a, 0x72, 0x65, 0x74, // += specular;.ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, 0x69, // urn color;.}.voi
	0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // d main().{.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, //  vec3 V = normal
	0x69, 0x7a, 0x65, 0x28, 0x20, 0x2d, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, // ize( -v_worldPos
	0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // .xyz);.const vec
	0x33, 0x20, 0x4e, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // 3 N = normalize(
	0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, // v_normal.xyz);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x52, 0x20, 0x3d, 0x20, 0x72, 0x65, // onst vec3 R = re
	0x66, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x56, 0x2c, 0x20, 0x4e, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, // flect(V, N);.vec
	0x33, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // 3 ballImageColor
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, // ;.const float ed
	0x67, 0x65, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x56, 0x2c, 0x20, 0x52, 0x29, 0x3b, 0x0a, // ge = dot(V, R);.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x6f, 0x64, 0x20, // const float lod 
	0x3d, 0x20, 0x28, 0x65, 0x64, 0x67, 0x65, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x36, 0x29, 0x20, 0x3f, // = (edge > 0.6) ?
	0x20, 0x65, 0x64, 0x67, 0x65, 0x2a, 0x28, 0x36, 0x2e, 0x30, 0x2a, 0x31, 0x2e, 0x30, 0x2f, 0x30, //  edge*(6.0*1.0/0
	0x2e, 0x34, 0x29, 0x2d, 0x28, 0x36, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x36, 0x2f, 0x30, 0x2e, 0x34, // .4)-(6.0*0.6/0.4
	0x29, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // ) : 0.0;.const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // loat m = (1.0 - 
	0x52, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x33, 0x35, // R.z > 0.) ? 0.35
	0x33, 0x35, 0x35, 0x33, 0x33, 0x39, 0x30, 0x35, 0x39, 0x33, 0x32, 0x37, 0x33, 0x37, 0x36, 0x32, // 3553390593273762
	0x32, 0x20, 0x2a, 0x20, 0x72, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // 2 * rsqrt(1.0 - 
	0x52, 0x2e, 0x7a, 0x29, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // R.z) : 0.;.const
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, //  vec2 uv = vec2(
	0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x6d, 0x20, 0x2a, 0x20, 0x52, 0x2e, 0x78, 0x2c, 0x20, 0x30, // 0.5 - m * R.x, 0
	0x2e, 0x35, 0x20, 0x2d, 0x20, 0x6d, 0x20, 0x2a, 0x20, 0x52, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x62, // .5 - m * R.y);.b
	0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, // allImageColor = 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, // textureLod(tex_b
	0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x75, 0x76, 0x2c, 0x20, 0x6c, // all_color, uv, l
	0x6f, 0x64, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // od).rgb;.const v
	0x65, 0x63, 0x34, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x20, // ec4 decalColorT 
	0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, // = texture(tex_ba
	0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // ll_decal, v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x65, 0x63, // oord0);.vec3 dec
	0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, // alColor = decalC
	0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x64, 0x65, 0x63, 0x61, 0x6c, // olorT.rgb;.decal
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x3d, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, // Color *= decalCo
	0x6c, 0x6f, 0x72, 0x54, 0x2e, 0x61, 0x3b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, // lorT.a;.ballImag
	0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, // eColor += decalC
	0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, // olor;.if ((w_h_d
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x7a, // isableLighting.z
	0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, //  != 0.)).{.gl_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x62, // agColor = vec4(b
	0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x63, 0x42, // allImageColor,cB
	0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x61, 0x29, 0x3b, 0x0a, 0x72, 0x65, // ase_Alpha.a);.re
	0x74, 0x75, 0x72, 0x6e, 0x3b, 0x0a, 0x7d, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, // turn;.}.ballImag
	0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x3d, 0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, // eColor *= fenvEm
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, // issionScale_TexW
	0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // idth.x;.const ve
	0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, // c3 playfield_nor
	0x6d, 0x61, 0x6c, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, // mal = ( (matWorl
	0x64, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // dView) * (float4
	0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x31, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x20, 0x29, // (0.,0.,1.,0.)) )
	0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // .xyz;.const floa
	0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x70, 0x6c, // t NdotR = dot(pl
	0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, // ayfield_normal, 
	0x52, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, // R);.const vec3 p
	0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x20, // layfield_p0 = ( 
	0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, // (matWorldView) *
	0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x20, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, //  (vec4( 0.,0.,0.
	0x2c, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, // ,1.0)) ).xyz;.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x20, 0x3d, 0x20, 0x64, 0x6f, // nst float t = do
	0x74, 0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // t(playfield_norm
	0x61, 0x6c, 0x2c, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, // al, v_worldPos.x
	0x79, 0x7a, 0x20, 0x2d, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, // yz - playfield_p
	0x30, 0x29, 0x20, 0x2f, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // 0) / NdotR;.cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, // t vec3 playfield
	0x5f, 0x68, 0x69, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, // _hit = v_worldPo
	0x73, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x74, 0x20, 0x2a, 0x20, 0x52, 0x3b, 0x0a, 0x63, // s.xyz - t * R;.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x20, 0x3d, // onst vec4 proj =
	0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x29, 0x20, 0x2a, 0x20, 0x28, //  ( (matProj) * (
	0x76, 0x65, 0x63, 0x34, 0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x68, // vec4(playfield_h
	0x69, 0x74, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // it, 1.0)) );.con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x70, 0x20, 0x3d, 0x20, 0x76, 0x65, // st vec2 uvp = ve
	0x63, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x76, // c2(0.5, 0.5) + v
	0x65, 0x63, 0x32, 0x28, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x78, 0x2c, 0x20, 0x2d, 0x70, 0x72, 0x6f, // ec2(proj.x, -pro
	0x6a, 0x2e, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2f, 0x20, 0x70, 0x72, // j.y) * (0.5 / pr
	0x6f, 0x6a, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // oj.w);.const vec
	0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // 3 playfieldColor
	0x20, 0x3d, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x28, 0x0a, 0x74, 0x65, 0x78, 0x74, //  = 0.25 * (.text
	0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, // ure(tex_ball_pla
	0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, // yfield, uvp + ve
	0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, // c2(w_h_disableLi
	0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x72, // ghting.x, 0.)).r
	0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, // gb.+ texture(tex
	0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, // _ball_playfield,
	0x20, 0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, //  uvp - vec2(w_h_
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, // disableLighting.
	0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, // x, 0.)).rgb.+ te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, // xture(tex_ball_p
	0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, // layfield, uvp + 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, // vec2(0., w_h_dis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, // ableLighting.y))
	0x2e, 0x72, 0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, // .rgb.+ texture(t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // ex_ball_playfiel
	0x64, 0x2c, 0x20, 0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, // d, uvp - vec2(0.
	0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, // , w_h_disableLig
	0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x29, 0x3b, // hting.y)).rgb.);
	0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x28, 0x75, 0x76, 0x70, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x30, // .if (!(uvp.x < 0
	0x2e, 0x20, 0x7c, 0x7c, 0x20, 0x75, 0x76, 0x70, 0x2e, 0x78, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x20, // . || uvp.x > 1. 
	0x7c, 0x7c, 0x20, 0x75, 0x76, 0x70, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x20, 0x7c, 0x7c, // || uvp.y < 0. ||
	0x20, 0x75, 0x76, 0x70, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x29, 0x0a, 0x26, 0x26, 0x20, //  uvp.y > 1.).&& 
	0x21, 0x28, 0x74, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x62, 0x61, // !(t <= 0.)).{.ba
	0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x6c, // llImageColor = l
	0x65, 0x72, 0x70, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, // erp(ballImageCol
	0x6f, 0x72, 0x2c, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6c, // or, playfieldCol
	0x6f, 0x72, 0x2c, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, // or, smoothstep(0
	0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x35, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x29, // .0, 0.15, NdotR)
	0x20, 0x2a, 0x20, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, //  * invTableRes_r
	0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // eflection.z);.}.
	0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, // ballImageColor =
	0x20, 0x6d, 0x69, 0x6e, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, //  min(ballImageCo
	0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x35, 0x2e, 0x2c, // lor, float3(15.,
	0x20, 0x31, 0x35, 0x2e, 0x2c, 0x20, 0x31, 0x35, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, //  15., 15.));.vec
	0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x3d, 0x20, 0x63, 0x42, 0x61, 0x73, // 3 diffuse = cBas
	0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x2a, 0x30, 0x2e, 0x30, 0x37, // e_Alpha.rgb*0.07
	0x35, 0x3b, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x3d, 0x20, 0x64, 0x65, // 5;.diffuse *= de
	0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // calColor;.const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x3d, 0x20, 0x6d, 0x61, // vec3 glossy = ma
	0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x76, // x(diffuse*2.0, v
	0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x2c, 0x30, 0x2e, 0x31, 0x2c, 0x30, 0x2e, 0x31, 0x29, // ec3(0.1,0.1,0.1)
	0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, // );.vec3 specular
	0x20, 0x3d, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, //  = ballImageColo
	0x72, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, // r * cBase_Alpha.
	0x72, 0x67, 0x62, 0x3b, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x20, 0x2a, 0x3d, // rgb;.specular *=
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x2c, 0x31, 0x2e, 0x2c, 0x31, 0x2e, 0x29, 0x2d, //  vec3(1.,1.,1.)-
	0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x46, // decalColor;.gl_F
	0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x62, // ragColor.rgb = b
	0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x76, 0x5f, 0x77, // allLightLoop(v_w
	0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x4e, 0x2c, 0x20, // orldPos.xyz, N, 
	0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, // V, diffuse, glos
	0x73, 0x79, 0x2c, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x31, 0x2e, // sy, specular, 1.
	0x30, 0x2c, 0x20, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, // 0, false);.gl_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x61, 0x20, 0x3d, 0x20, 0x63, 0x42, 0x61, 0x73, // agColor.a = cBas
	0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x61, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,             // e_Alpha.a;.}..
};
static const uint8_t fs_ball_spherical_nodecal_dx11[7340] =
{
	0x46, 0x53, 0x48, 0x0b, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x07, 0x6d, // FSH....l.......m
	0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x14, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, // atView..........
	0x0c, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x14, 0x00, 0x40, // .matWorldView..@
	0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x14, // ........matProj.
	0x00, 0x80, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, // ..........ballLi
	0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x0a, 0xc0, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, // ghtPos..........
	0x11, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, // .ballLightEmissi
	0x6f, 0x6e, 0x12, 0x0a, 0x60, 0x01, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x63, 0x41, 0x6d, // on..`........cAm
	0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, // bient_LightRange
	0x12, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x65, 0x6e, 0x76, 0x45, // ...........fenvE
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, // missionScale_Tex
	0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x00, 0x10, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // Width...........
	0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, // fDisableLighting
	0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x12, 0x00, 0x20, 0x02, 0x01, 0x00, // _top_below.. ...
	0x00, 0x00, 0x00, 0x00, 0x0b, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, // .....cBase_Alpha
	0x12, 0x00, 0x30, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x52, 0x6f, 0x75, 0x67, 0x68, // ..0........Rough
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, // ness_WrapL_Edge_
	0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x00, 0x40, 0x02, 0x01, 0x00, 0x00, // Thickness..@....
	0x00, 0x00, 0x00, 0x16, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, // ....invTableRes_
	0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x00, 0x50, 0x02, 0x01, 0x00, // reflection..P...
	0x00, 0x00, 0x00, 0x00, 0x13, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // .....w_h_disable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x00, 0x60, 0x02, 0x01, 0x00, 0x00, 0x00, // Lighting..`.....
	0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // ...tex_ball_colo
	0x72, 0x30, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, // r0..........tex_
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x30, 0x01, 0x02, 0x00, 0x01, // diffuse_env0....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, // ......tex_ball_d
	0x65, 0x63, 0x61, 0x6c, 0x30, 0x01, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x74, // ecal0..........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // ex_ball_playfiel
	0x64, 0x30, 0x01, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, // d0..........tex_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x01, 0x00, 0x00, 0x01, 0x00, // ball_color0.....
	0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // .....tex_diffuse
	0x5f, 0x65, 0x6e, 0x76, 0x30, 0x01, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, // _env0..........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x30, 0x01, 0x03, // ex_ball_decal0..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // ........tex_ball
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x30, 0x01, 0x04, 0x00, 0x01, 0x00, // _playfield0.....
	0x00, 0x00, 0x00, 0x00, 0x70, 0x1a, 0x00, 0x00, 0x44, 0x58, 0x42, 0x43, 0x94, 0x62, 0x21, 0xee, // ....p...DXBC.b!.
	0x5a, 0xca, 0xac, 0x77, 0x79, 0x6e, 0x67, 0x48, 0x97, 0x37, 0x51, 0x4f, 0x01, 0x00, 0x00, 0x00, // Z..wyngH.7QO....
	0x70, 0x1a, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, // p.......,.......
	0xec, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x4e, 0x84, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // ....ISGN........
	0x08, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ....h...........
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, // ............t...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x07, 0x07, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....{...........
	0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, // ............{...
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ................
	0x07, 0x07, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, // ....SV_POSITION.
	0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, // NORMAL.TEXCOORD.
	0x4f, 0x53, 0x47, 0x4e, 0x2c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, // OSGN,...........
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, //  ...............
	0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, // ........SV_TARGE
	0x54, 0x00, 0xab, 0xab, 0x53, 0x48, 0x45, 0x58, 0x7c, 0x19, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, // T...SHEX|...P...
	0x5f, 0x06, 0x00, 0x00, 0x6a, 0x28, 0x00, 0x01, 0x59, 0x08, 0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, // _...j(..Y...F. .
	0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, // ....'...Z....`..
	0x00, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....Z....`......
	0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, // Z....`......Z...
	0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, // .`......X....p..
	0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, // ....UU..X....p..
	0x02, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, // ....UU..X....p..
	0x03, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, // ....UU..X....p..
	0x04, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x72, 0x10, 0x10, 0x00, // ....UU..b...r...
	0x01, 0x00, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x32, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....b...2.......
	0x62, 0x10, 0x00, 0x03, 0x72, 0x10, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, // b...r.......e...
	0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x02, 0x0c, 0x00, 0x00, 0x00, // . ......h.......
	0x10, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x80, // ............F...
	0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // A.......F...A...
	0x03, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....D...........
	0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, // ........8...r...
	0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x80, // ............F...
	0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // A...............
	0x00, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, // ....F.......F...
	0x01, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....D...........
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // :.......8...r...
	0x01, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, // ............F...
	0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // F.......F.......
	0x00, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, // ....:.......2...
	0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // r.......F.......
	0xf6, 0x0f, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....A.......F...
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // F.......F.......
	0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // 1............@..
	0x9a, 0x99, 0x19, 0x3f, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, // ...?:.......2...
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........:.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x70, 0x41, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x10, 0xc1, // .@....pA.@......
	0x01, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, // ....:...........
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // ........*...A...
	0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x31, 0x00, 0x00, 0x07, // .....@.....?1...
	0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........@......
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, // :.......D.......
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ....:.......8...
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........:.......
	0x01, 0x40, 0x00, 0x00, 0xf3, 0x04, 0xb5, 0x3e, 0x01, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // .@.....>........
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ....:.......:...
	0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0d, 0x32, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....2...2.......
	0xf6, 0x0f, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, // ....A.......F...
	0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, // .....@.....?...?
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, // ........H.......
	0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, // CU..r.......F...
	0x03, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, // ....F~.......`..
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, // ....:.......E...
	0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ....CU..........
	0x46, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // F.......F~......
	0x00, 0x60, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // .`......8...r...
	0x05, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x04, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....2...r.......
	0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // F...............
	0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, // F.......9.......
	0x00, 0x00, 0x00, 0x00, 0x2a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, // ....*. .....&...
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, // .@..........:...
	0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0x82, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....6.... ......
	0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, // :. .....#...6...
	0x72, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // r ......F.......
	0x3e, 0x00, 0x00, 0x01, 0x15, 0x00, 0x00, 0x01, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, // >.......8...r...
	0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x00, // ....F......... .
	0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, // ....!...........
	0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, // ....F. .........
	0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, // F...........r...
	0x06, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x80, // ....F.......F. .
	0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x08, // A...............
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // ........F. .....
	0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, // ....F...........
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........:.......
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, // :.......2...r...
	0x02, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ........A.......
	0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // F.......F.......
	0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, // 8...r.......V...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x83, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, // ....F. .........
	0x32, 0x00, 0x00, 0x0a, 0xb2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x8c, 0x20, 0x00, // 2...........F. .
	0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x46, 0x08, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, // F.......2...r...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x83, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, // ....F. .........
	0xa6, 0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x03, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........F.......
	0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....r.......F...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x83, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, // ....F. .........
	0x0e, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....B........@..
	0x00, 0x00, 0x00, 0x3f, 0x2a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, // ...?*.......6...
	0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // ............A...
	0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x32, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ....8...2.......
	0xa6, 0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x32, 0x00, 0x00, 0x0c, 0x32, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x10, 0x00, // 2...2...........
	0x02, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // .............@..
	0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ...?...?........
	0x31, 0x00, 0x00, 0x0a, 0xc2, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x06, 0x04, 0x10, 0x00, // 1...............
	0x07, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .....@..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x0a, 0x32, 0x00, 0x10, 0x00, // ........1...2...
	0x08, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, // .....@.....?...?
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ........F.......
	0x3c, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // <...".......*...
	0x07, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x07, // ............<...
	0x22, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ".......:.......
	0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, // ........<..."...
	0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, // ................
	0x02, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x05, 0x22, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....;...".......
	0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ........1.......
	0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // .....@......:...
	0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // :...............
	0x1f, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, // ....:.......2...
	0xc2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x0c, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0xa6, 0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........@......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x36, 0x00, 0x00, 0x06, // .......?...?6...
	0x52, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // R......... .....
	0x26, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x08, 0xa2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // &...6...........
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, // .@.........?....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x32, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........2.......
	0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x66, 0x0a, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // F.......f.......
	0x45, 0x00, 0x00, 0x8b, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, // E.......CU..r...
	0x08, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, // ....F.......F~..
	0x04, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, // .....`..........
	0x32, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // 2...........A...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, // ....F.......E...
	0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....CU..r.......
	0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // F.......F~......
	0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // .`..........r...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x08, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x08, 0x52, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ....6...R.......
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .@.....?........
	0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0xa2, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ....6...........
	0x56, 0x85, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // V. .....&.......
	0x32, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // 2...............
	0x46, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, 0xc2, 0x00, 0x00, 0x80, // F.......E.......
	0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, // CU..r.......F...
	0x06, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, // ....F~.......`..
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........r.......
	0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // F.......F.......
	0x00, 0x00, 0x00, 0x08, 0x32, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, // ....2.......F...
	0x07, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, // ........A.......
	0x45, 0x00, 0x00, 0x8b, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, // E.......CU..r...
	0x06, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, // ....F.......F~..
	0x04, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // .....`..........
	0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x38, 0x20, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // F.......8 ......
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....:........@..
	0x55, 0x55, 0xd5, 0x40, 0x32, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // UU.@2...........
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, // :........@......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // .@....@@8.......
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ....:.......:...
	0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....8...........
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // :.......:.......
	0x38, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 8...........:...
	0x00, 0x00, 0x00, 0x00, 0x2a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, // ....*. .....%...
	0x32, 0x00, 0x00, 0x0d, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 2...r.......F...
	0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3e, 0x00, 0x00, 0x80, 0x3e, // .....@.....>...>
	0x00, 0x00, 0x80, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // ...>....F...A...
	0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....2...r.......
	0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........F.......
	0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, 0x33, 0x00, 0x00, 0x0a, // F...........3...
	0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // r.......F.......
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x70, 0x41, 0x00, 0x00, 0x70, 0x41, 0x00, 0x00, 0x70, 0x41, // .@....pA..pA..pA
	0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....8...r.......
	0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // F.......F. .....
	0x23, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // #...8...r.......
	0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x9a, 0x99, 0x99, 0x3d, // F........@.....=
	0x9a, 0x99, 0x99, 0x3d, 0x9a, 0x99, 0x99, 0x3d, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, // ...=...=....8...
	0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // r.......F.......
	0x02, 0x40, 0x00, 0x00, 0x9a, 0x99, 0x19, 0x3e, 0x9a, 0x99, 0x19, 0x3e, 0x9a, 0x99, 0x19, 0x3e, // .@.....>...>...>
	0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....4...r.......
	0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xcd, 0xcc, 0xcc, 0x3d, // F........@.....=
	0xcd, 0xcc, 0xcc, 0x3d, 0xcd, 0xcc, 0xcc, 0x3d, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, // ...=...=....8...
	0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0d, // F. .....#...2...
	0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // r.......F...A...
	0x04, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // .............@..
	0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, // ...?...?...?....
	0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 8...r.......F...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, // ....F.......4...
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // ........*.......
	0x1a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ........4.......
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ....:...........
	0x05, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....4...........
	0x2a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // *...............
	0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 4...........:...
	0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, // ............4...
	0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ........*.......
	0x1a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ........4.......
	0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ....:...........
	0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // :.......:.......
	0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // 1............@..
	0x00, 0x00, 0x80, 0x3f, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0a, // ...?:...........
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // .........@.....?
	0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x3a, 0x00, 0x10, 0x00, // ...?...?...?:...
	0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ....8...r.......
	0xf6, 0x0f, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // ........F.......
	0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // 8...r...........
	0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, // ....F.......7...
	0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // r...............
	0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // F.......F.......
	0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // 7...r...........
	0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x32, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ........2.......
	0x16, 0x85, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // .. .....$....@..
	0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ...?...?........
	0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // 8...............
	0x06, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x09, // ............8...
	0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // ........:. .....
	0x20, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, //  ...:. ..... ...
	0x00, 0x00, 0x00, 0x0b, 0xd2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x80, // ................
	0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // A........@.....?
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x38, 0x00, 0x00, 0x07, // .......?...?8...
	0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ........:.......
	0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // :...........r...
	0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x03, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ....8...r.......
	0x46, 0x02, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // F.......F. .....
	0x20, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, //  ...9...........
	0x0a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // .. ....."....@..
	0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ....6...r.......
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .@..............
	0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // ....6...........
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x01, 0x21, 0x00, 0x00, 0x07, // .@......0...!...
	0x82, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // ........:.......
	0x01, 0x40, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x03, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, // .@..........:...
	0x07, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0b, 0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ....8...r.......
	0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x56, 0x85, 0x20, 0x06, // F. .........V. .
	0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // ........:.......
	0x32, 0x00, 0x00, 0x0d, 0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // 2...r.......F. .
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, // .......... .....
	0x0c, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....:.......F...
	0x09, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0d, 0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ....2...r.......
	0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa6, 0x8a, 0x20, 0x06, // F. ........... .
	0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // ........:.......
	0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, // F...........r...
	0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // ....F.......F. .
	0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, // ............r...
	0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x80, // ....F.......F...
	0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // A...............
	0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x09, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ....D...........
	0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // :.......8...r...
	0x0a, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x09, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, // F.......F.......
	0x00, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x09, 0x00, 0x00, 0x00, 0x1a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, // ...... .....$...
	0x31, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // 1............@..
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, // ....:...........
	0x82, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, // ........:.......
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0xe2, 0x00, 0x10, 0x00, // :.......8.......
	0x0b, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // ................
	0x0a, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, // ........r.......
	0x96, 0x07, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, // ................
	0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // 1............@..
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, // ....:...........
	0x3a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, // :.......2...r...
	0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // ....F...........
	0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, // ....F...........
	0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ........F.......
	0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, // F.......D.......
	0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ....:.......8...
	0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // r...............
	0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // F...............
	0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x09, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // F.......F.......
	0x10, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, // ....F.......1...
	0x22, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // "........@......
	0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, // :.......1...B...
	0x09, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // .....@......:...
	0x09, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ........".......
	0x2a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // *...............
	0x31, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // 1...B........@..
	0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, // ................
	0x22, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ".......*.......
	0x1a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x42, 0x00, 0x10, 0x00, // ............B...
	0x09, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, // ....:...A.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // .@.....?8.......
	0x09, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // ....*.......*...
	0x09, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ....8...........
	0x3a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // :.......:.......
	0x38, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 8...B.......:...
	0x09, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, // ....*.......2...
	0x72, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x86, 0x03, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // r...............
	0xa6, 0x0a, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ........F.......
	0x38, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // 8...............
	0x09, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x00, 0x00, 0x07, // .....@.....A....
	0x12, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ................
	0x0a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, // ......../.......
	0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, // ....:.......8...
	0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ........:.......
	0x0a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x05, // .. .....$.......
	0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ........:.......
	0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 8...........:...
	0x08, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, // ............2...
	0xd2, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, // ................
	0xf6, 0x0f, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, // ................
	0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, // 7...r.......V...
	0x09, 0x00, 0x00, 0x00, 0x86, 0x03, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x0b, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ........8.......
	0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ....:.......:...
	0x07, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ................
	0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // :.......:.......
	0x00, 0x20, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x80, // . ..........:...
	0x41, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // A........@.....?
	0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 8...........:...
	0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // ....:...........
	0x82, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ........:.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x0e, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // .@.....?........
	0x07, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ....:.......:...
	0x07, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ....8...r.......
	0x46, 0x02, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, // F.......F. .....
	0x16, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, // ....:.......2...
	0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // r.......F.......
	0xf6, 0x0f, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ........F.......
	0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....r.......F...
	0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, // ....F...A.......
	0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x00, // 2...r......... .
	0x00, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, // ...."...F.......
	0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, // F.......7...r...
	0x09, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x0a, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // ....F...........
	0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // F...............
	0x05, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....:........@..
	0x01, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x01, 0x31, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, // ........1.......
	0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // .....@......:...
	0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, // 8...r.......V...
	0x01, 0x00, 0x00, 0x00, 0x16, 0x86, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ...... .........
	0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x86, 0x20, 0x00, // 2...r......... .
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, // F.......2...r...
	0x00, 0x00, 0x00, 0x00, 0x16, 0x86, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ...... .........
	0xa6, 0x0a, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........F.......
	0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, // ....F.......D...
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........:.......
	0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // 8...r...........
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x0b, // ....F...........
	0x32, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, // 2........@.....8
	0x00, 0x00, 0x80, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x05, 0x10, 0x80, // ...8............
	0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x0a, 0x00, 0x10, 0x80, 0xc1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, // ................
	0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, // ............"...
	0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x1a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, // ................
	0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x1a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x0a, 0x32, 0x00, 0x10, 0x00, // ........1...2...
	0x00, 0x00, 0x00, 0x00, 0x16, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // .............@..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x37, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // 7..."...........
	0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x3e, 0x01, 0x40, 0x00, 0x00, // .....@.....>.@..
	0x00, 0x00, 0x00, 0x3e, 0x38, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ...>8...B.......
	0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x32, 0x00, 0x00, 0x09, 0x42, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // 2...B.......*...
	0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0xd0, 0x1d, 0x0a, 0x3d, 0x01, 0x40, 0x00, 0x00, // .....@.....=.@..
	0xdc, 0xe7, 0x20, 0xbe, 0x37, 0x00, 0x00, 0x0a, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // .. .7...........
	0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // ............A...
	0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, // ............2...
	0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........*.......
	0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x37, 0x00, 0x00, 0x0a, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, // 7...............
	0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........A.......
	0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // .............@..
	0x00, 0x00, 0x00, 0x3f, 0x37, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ...?7...........
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, // :........@.....?
	0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x80, 0xc1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....*...........
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x1d, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, // .@.....?........
	0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....*........@..
	0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....7...".......
	0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........@......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x31, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, // .@.....?1...B...
	0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, 0x3a, 0x00, 0x10, 0x00, // .....@.....8:...
	0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x42, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....2...B.......
	0x2a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // *............@..
	0x1a, 0x5b, 0x4b, 0xbd, 0x01, 0x40, 0x00, 0x00, 0x66, 0x00, 0xff, 0x3e, 0x4b, 0x00, 0x00, 0x05, // .[K..@..f..>K...
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........:.......
	0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 8...........:...
	0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, // ....*.......2...
	0x42, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // B.......*...A...
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....:........@..
	0x00, 0x00, 0x80, 0x3f, 0x37, 0x00, 0x00, 0x09, 0x42, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ...?7...B.......
	0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........:.......
	0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, // *.......7..."...
	0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // ....*.......*...
	0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, // ............H...
	0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....CU..r.......
	0x46, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // F.......F~......
	0x00, 0x60, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .`.......@......
	0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 8...r.......F...
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, // ....F.......2...
	0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // r.......F.......
	0x06, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // .. .....!...F...
	0x08, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, 0x31, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, // ........1.......
	0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // .....@......:...
	0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xe2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....2...........
	0x06, 0x09, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ................
	0x06, 0x09, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x20, 0x10, 0x00, // ........7...r ..
	0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, // ....F.......6...
	0x82, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // . ......:. .....
	0x23, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x01, 0x00, 0x00, 0x70, 0x02,                         // #...>.....p.
};
static const uint8_t fs_ball_spherical_nodecal_spv[11975] =
{
	0x46, 0x53, 0x48, 0x0b, 0x13, 0x17, 0xa9, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x0c, 0x62, // FSH....l.......b
	0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x0a, 0xc0, 0x00, 0x0a, // allLightPos.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x14, 0x01, 0x00, // ......matView...
	0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, // ........Roughnes
	0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, // s_WrapL_Edge_Thi
	0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x01, 0x40, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // ckness..@.......
	0x13, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, // .cAmbient_LightR
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x01, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x62, // ange...........b
	0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, // allLightEmission
	0x12, 0x0a, 0x60, 0x01, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x44, 0x69, 0x73, 0x61, // ..`........fDisa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, // bleLighting_top_
	0x62, 0x65, 0x6c, 0x6f, 0x77, 0x12, 0x01, 0x20, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // below.. ........
	0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, // fenvEmissionScal
	0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x01, 0x10, 0x02, 0x01, 0x00, // e_TexWidth......
	0x00, 0x00, 0x00, 0x00, 0x13, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // .....w_h_disable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x01, 0x60, 0x02, 0x01, 0x00, 0x00, 0x00, // Lighting..`.....
	0x00, 0x00, 0x0b, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x01, // ...cBase_Alpha..
	0x30, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, // 0........matWorl
	0x64, 0x56, 0x69, 0x65, 0x77, 0x14, 0x01, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // dView..@........
	0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x14, 0x01, 0x80, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, // matProj.........
	0x00, 0x16, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, // ..invTableRes_re
	0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x01, 0x50, 0x02, 0x01, 0x00, 0x00, 0x00, // flection..P.....
	0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // ...tex_ball_colo
	0x72, 0x30, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, // r0......."..tex_
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x30, 0x00, 0x04, 0x00, 0x00, // diffuse_env0....
	0x00, 0x00, 0x02, 0x22, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, // ..."..tex_ball_d
	0x65, 0x63, 0x61, 0x6c, 0x30, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0x12, 0x74, // ecal0......."..t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // ex_ball_playfiel
	0x64, 0x30, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0xf4, 0x2c, 0x00, 0x00, 0x03, // d0......."..,...
	0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x0b, 0x00, 0x08, 0x00, 0x9b, 0x06, 0x00, 0x00, 0x00, // .#..............
	0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x06, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30, 0x00, // ...GLSL.std.450.
	0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, // ................
	0x00, 0x09, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, // ...........main.
	0x00, 0x00, 0x00, 0x44, 0x03, 0x00, 0x00, 0x48, 0x03, 0x00, 0x00, 0x4b, 0x03, 0x00, 0x00, 0x5a, // ...D...H...K...Z
	0x03, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, // ................
	0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x05, // ................
	0x00, 0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, // ...............m
	0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x66, 0x00, 0x00, 0x00, 0x74, // ain........f...t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, // ex_ball_colorSam
	0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x69, 0x00, 0x00, 0x00, 0x74, // pler.......i...t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x65, 0x78, // ex_ball_colorTex
	0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x73, 0x00, 0x00, 0x00, 0x74, // ture.......s...t
	0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x53, 0x61, // ex_diffuse_envSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x75, 0x00, 0x00, 0x00, 0x74, // mpler......u...t
	0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x54, 0x65, // ex_diffuse_envTe
	0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x79, 0x00, 0x00, 0x00, 0x74, // xture......y...t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x53, 0x61, 0x6d, // ex_ball_decalSam
	0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x74, // pler.......{...t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x54, 0x65, 0x78, // ex_ball_decalTex
	0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x09, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x74, // ture...........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // ex_ball_playfiel
	0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, 0x00, 0x09, 0x00, 0x81, // dSampler........
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, // ...tex_ball_play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, // fieldTexture....
	0x00, 0x06, 0x00, 0x14, 0x01, 0x00, 0x00, 0x55, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x6c, // .......UniformBl
	0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x05, 0x00, 0x14, 0x01, 0x00, 0x00, 0x00, // ock.............
	0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x00, 0x06, 0x00, 0x07, 0x00, 0x14, // ...matView......
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, // .......matWorldV
	0x69, 0x65, 0x77, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x05, 0x00, 0x14, 0x01, 0x00, 0x00, 0x02, // iew.............
	0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x00, 0x06, 0x00, 0x07, 0x00, 0x14, // ...matProj......
	0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, // .......ballLight
	0x50, 0x6f, 0x73, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x14, 0x01, 0x00, 0x00, 0x04, // Pos.............
	0x00, 0x00, 0x00, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, // ...ballLightEmis
	0x73, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x14, 0x01, 0x00, 0x00, 0x05, // sion............
	0x00, 0x00, 0x00, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, // ...cAmbient_Ligh
	0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x00, 0x06, 0x00, 0x0a, 0x00, 0x14, 0x01, 0x00, 0x00, 0x06, // tRange..........
	0x00, 0x00, 0x00, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, // ...fenvEmissionS
	0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x00, 0x00, 0x06, // cale_TexWidth...
	0x00, 0x0a, 0x00, 0x14, 0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x66, 0x44, 0x69, 0x73, 0x61, // ...........fDisa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, // bleLighting_top_
	0x62, 0x65, 0x6c, 0x6f, 0x77, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x14, 0x01, 0x00, 0x00, 0x08, // below...........
	0x00, 0x00, 0x00, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x00, 0x06, // ...cBase_Alpha..
	0x00, 0x0b, 0x00, 0x14, 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x52, 0x6f, 0x75, 0x67, 0x68, // ...........Rough
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, // ness_WrapL_Edge_
	0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x00, 0x00, 0x06, 0x00, 0x09, 0x00, 0x14, // Thickness.......
	0x01, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, // .......invTableR
	0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x06, // es_reflection...
	0x00, 0x08, 0x00, 0x14, 0x01, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x77, 0x5f, 0x68, 0x5f, 0x64, // ...........w_h_d
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x00, 0x05, // isableLighting..
	0x00, 0x03, 0x00, 0x16, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0x44, // ...............D
	0x03, 0x00, 0x00, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x05, // ...v_normal.....
	0x00, 0x05, 0x00, 0x48, 0x03, 0x00, 0x00, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // ...H...v_texcoor
	0x64, 0x30, 0x00, 0x05, 0x00, 0x05, 0x00, 0x4b, 0x03, 0x00, 0x00, 0x76, 0x5f, 0x77, 0x6f, 0x72, // d0.....K...v_wor
	0x6c, 0x64, 0x50, 0x6f, 0x73, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x5a, 0x03, 0x00, 0x00, 0x62, // ldPos......Z...b
	0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x00, 0x00, 0x47, // gfx_FragData0..G
	0x00, 0x04, 0x00, 0x66, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // ...f...".......G
	0x00, 0x04, 0x00, 0x66, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x47, // ...f...!.......G
	0x00, 0x04, 0x00, 0x69, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // ...i...".......G
	0x00, 0x04, 0x00, 0x69, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, // ...i...!.......G
	0x00, 0x04, 0x00, 0x73, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // ...s...".......G
	0x00, 0x04, 0x00, 0x73, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x47, // ...s...!.......G
	0x00, 0x04, 0x00, 0x75, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // ...u...".......G
	0x00, 0x04, 0x00, 0x75, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x47, // ...u...!.......G
	0x00, 0x04, 0x00, 0x79, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // ...y...".......G
	0x00, 0x04, 0x00, 0x79, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x47, // ...y...!.......G
	0x00, 0x04, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // ...{...".......G
	0x00, 0x04, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x47, // ...{...!.......G
	0x00, 0x04, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // .......".......G
	0x00, 0x04, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x47, // .......!.......G
	0x00, 0x04, 0x00, 0x81, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // .......".......G
	0x00, 0x04, 0x00, 0x81, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x47, // .......!.......G
	0x00, 0x04, 0x00, 0x12, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x47, // ...............G
	0x00, 0x04, 0x00, 0x13, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, // ...............H
	0x00, 0x04, 0x00, 0x14, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, // ...............H
	0x00, 0x05, 0x00, 0x14, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, // ...........#....
	0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x14, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // ...H............
	0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, 0x14, 0x01, 0x00, 0x00, 0x01, // .......H........
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x14, 0x01, 0x00, 0x00, 0x01, // .......H........
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x14, // ...#...@...H....
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, // ...............H
	0x00, 0x04, 0x00, 0x14, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, // ...............H
	0x00, 0x05, 0x00, 0x14, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x80, // ...........#....
	0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x14, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, // ...H............
	0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x14, 0x01, 0x00, 0x00, 0x03, // .......H........
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x14, // ...#.......H....
	0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x60, 0x01, 0x00, 0x00, 0x48, // .......#...`...H
	0x00, 0x05, 0x00, 0x14, 0x01, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, // ...........#....
	0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x14, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x23, // ...H...........#
	0x00, 0x00, 0x00, 0x10, 0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x14, 0x01, 0x00, 0x00, 0x07, // .......H........
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x20, 0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x14, // ...#... ...H....
	0x01, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x30, 0x02, 0x00, 0x00, 0x48, // .......#...0...H
	0x00, 0x05, 0x00, 0x14, 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x40, // ...........#...@
	0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x14, 0x01, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x23, // ...H...........#
	0x00, 0x00, 0x00, 0x50, 0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x14, 0x01, 0x00, 0x00, 0x0b, // ...P...H........
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00, 0x14, // ...#...`...G....
	0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x16, 0x01, 0x00, 0x00, 0x22, // .......G......."
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x16, 0x01, 0x00, 0x00, 0x21, // .......G.......!
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x44, 0x03, 0x00, 0x00, 0x1e, // .......G...D....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x48, 0x03, 0x00, 0x00, 0x1e, // .......G...H....
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x4b, 0x03, 0x00, 0x00, 0x1e, // .......G...K....
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x5a, 0x03, 0x00, 0x00, 0x1e, // .......G...Z....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x21, // ...............!
	0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x02, 0x00, 0x06, // ................
	0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x19, // ........... ....
	0x00, 0x09, 0x00, 0x08, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, // ................
	0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, // .......<... ....
	0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x65, // .......=... ...e
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x65, // ...........;...e
	0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x68, // ...f....... ...h
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x68, // ...........;...h
	0x00, 0x00, 0x00, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x65, // ...i.......;...e
	0x00, 0x00, 0x00, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x68, // ...s.......;...h
	0x00, 0x00, 0x00, 0x75, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x65, // ...u.......;...e
	0x00, 0x00, 0x00, 0x79, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x68, // ...y.......;...h
	0x00, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x65, // ...{.......;...e
	0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x68, // ...........;...h
	0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x3c, // ...........+...<
	0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x3c, // ...........+...<
	0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x03, 0x00, 0x8c, // ................
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xae, // .......+........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb1, // ......?+........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb5, // ......8+........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xba, // .......+........
	0x00, 0x00, 0x00, 0x1a, 0x5b, 0x4b, 0xbd, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbd, // ....[K.+........
	0x00, 0x00, 0x00, 0x66, 0x00, 0xff, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe0, // ...f..>+........
	0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe1, // ......>+........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe3, // ......>+........
	0x00, 0x00, 0x00, 0xd0, 0x1d, 0x0a, 0x3d, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf8, // ......=+........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x15, 0x00, 0x04, 0x00, 0xf9, 0x00, 0x00, 0x00, 0x20, // ......?........ 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0xf9, 0x00, 0x00, 0x00, 0xfa, // .......+........
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0xf9, 0x00, 0x00, 0x00, 0xfc, // .......+........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0xf9, 0x00, 0x00, 0x00, 0x00, // .......+........
	0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x09, // .......+........
	0x01, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x40, 0x18, 0x00, 0x04, 0x00, 0x10, 0x01, 0x00, 0x00, 0x0d, // ......@.........
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0xf9, 0x00, 0x00, 0x00, 0x11, // .......+........
	0x01, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x12, 0x01, 0x00, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x13, 0x01, 0x00, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x1e, 0x00, 0x0e, 0x00, 0x14, 0x01, 0x00, 0x00, 0x10, // ................
	0x01, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0x13, // ................
	0x01, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x20, // ............... 
	0x00, 0x04, 0x00, 0x15, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x14, 0x01, 0x00, 0x00, 0x3b, // ...............;
	0x00, 0x04, 0x00, 0x15, 0x01, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, // ...............+
	0x00, 0x04, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x17, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, // ...<........... 
	0x00, 0x04, 0x00, 0x18, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x20, // ............... 
	0x00, 0x04, 0x00, 0x20, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00, 0x2c, // ... ...........,
	0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xb5, // .......-........
	0x00, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x30, // .......+...<...0
	0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x31, 0x01, 0x00, 0x00, 0x02, // ....... ...1....
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x62, // .......+.......b
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x2b, 0x00, 0x04, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x74, // ......A+...<...t
	0x01, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0xf9, 0x00, 0x00, 0x00, 0x75, // .......+.......u
	0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x92, // .......+...<....
	0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x9f, // .......+...<....
	0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x3c, 0x00, 0x00, 0x00, 0xbc, // .......+...<....
	0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x3c, 0x00, 0x00, 0x00, 0xfd, // .......+...<....
	0x01, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3c, // .......+.......<
	0x02, 0x00, 0x00, 0x9a, 0x99, 0x19, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3f, // ......?+.......?
	0x02, 0x00, 0x00, 0x00, 0x00, 0x70, 0x41, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x49, // .....pA+.......I
	0x02, 0x00, 0x00, 0xf3, 0x04, 0xb5, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x75, // ......>+...<...u
	0x02, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x7c, // .......+...<...|
	0x02, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x89, // .......,........
	0x02, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0xb5, // ................
	0x00, 0x00, 0x00, 0x2c, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x93, 0x02, 0x00, 0x00, 0xb5, // ...,............
	0x00, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x2b, // ...............+
	0x00, 0x04, 0x00, 0x3c, 0x00, 0x00, 0x00, 0xac, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2c, // ...<...........,
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xb1, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0xf8, // ................
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbe, 0x02, 0x00, 0x00, 0x00, // ...+............
	0x00, 0x80, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x9a, // ..>+............
	0x99, 0x19, 0x3e, 0x2c, 0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x0c, 0x03, 0x00, 0x00, 0x3f, // ..>,...........?
	0x02, 0x00, 0x00, 0x3f, 0x02, 0x00, 0x00, 0x3f, 0x02, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...?...?...+....
	0x00, 0x00, 0x00, 0x12, 0x03, 0x00, 0x00, 0x9a, 0x99, 0x99, 0x3d, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........=+....
	0x00, 0x00, 0x00, 0x19, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........@+....
	0x00, 0x00, 0x00, 0x1b, 0x03, 0x00, 0x00, 0xcd, 0xcc, 0xcc, 0x3d, 0x2c, 0x00, 0x06, 0x00, 0x1a, // ..........=,....
	0x00, 0x00, 0x00, 0x1c, 0x03, 0x00, 0x00, 0x1b, 0x03, 0x00, 0x00, 0x1b, 0x03, 0x00, 0x00, 0x1b, // ................
	0x03, 0x00, 0x00, 0x2c, 0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x24, 0x03, 0x00, 0x00, 0xae, // ...,.......$....
	0x00, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x43, // ........... ...C
	0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x43, // ...........;...C
	0x03, 0x00, 0x00, 0x44, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x47, // ...D....... ...G
	0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x47, // ...........;...G
	0x03, 0x00, 0x00, 0x48, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x43, // ...H.......;...C
	0x03, 0x00, 0x00, 0x4b, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x59, // ...K....... ...Y
	0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x59, // ...........;...Y
	0x03, 0x00, 0x00, 0x5a, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x29, 0x00, 0x03, 0x00, 0x3d, // ...Z.......)...=
	0x00, 0x00, 0x00, 0x75, 0x03, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7d, // ...u...+.......}
	0x06, 0x00, 0x00, 0x00, 0x00, 0x10, 0xc1, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7e, // .......+.......~
	0x06, 0x00, 0x00, 0xdc, 0xe7, 0x20, 0xbe, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, // ..... .6........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, // ................
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x00, 0x66, // ...=.......g...f
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x69, // ...=.......j...i
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x73, // ...=.......t...s
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x76, 0x00, 0x00, 0x00, 0x75, // ...=.......v...u
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x7a, 0x00, 0x00, 0x00, 0x79, // ...=.......z...y
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x7b, // ...=.......|...{
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x7f, // ...=............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x81, // ...=............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x45, 0x03, 0x00, 0x00, 0x44, // ...=.......E...D
	0x03, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x49, 0x03, 0x00, 0x00, 0x48, // ...=.......I...H
	0x03, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x4c, 0x03, 0x00, 0x00, 0x4b, // ...=.......L...K
	0x03, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x8a, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, // ................
	0x00, 0x03, 0x00, 0xfc, 0x00, 0x00, 0x00, 0xaf, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xaf, // ................
	0x03, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xb2, 0x03, 0x00, 0x00, 0x4c, // ...............L
	0x03, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xb3, 0x03, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0xb2, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1a, // ...E............
	0x00, 0x00, 0x00, 0xb5, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x45, // ...........E...E
	0x03, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xb8, 0x03, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0xb3, 0x03, 0x00, 0x00, 0xb5, 0x03, 0x00, 0x00, 0x94, // ...G............
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbb, 0x03, 0x00, 0x00, 0xb3, 0x03, 0x00, 0x00, 0xb8, // ................
	0x03, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0xbd, 0x03, 0x00, 0x00, 0xbb, // .......=........
	0x03, 0x00, 0x00, 0x3c, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc0, // ...<............
	0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xbb, 0x03, 0x00, 0x00, 0x3f, // .......2.......?
	0x02, 0x00, 0x00, 0x7d, 0x06, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc1, // ...}............
	0x03, 0x00, 0x00, 0xbd, 0x03, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc3, 0x03, 0x00, 0x00, 0xb8, 0x03, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc4, 0x03, 0x00, 0x00, 0xae, // ................
	0x00, 0x00, 0x00, 0xc3, 0x03, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0xc5, // ...........=....
	0x03, 0x00, 0x00, 0xc4, 0x03, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xc7, 0x03, 0x00, 0x00, 0xb8, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x83, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc8, 0x03, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0xc7, // ................
	0x03, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc9, 0x03, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0xc8, 0x03, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ... ............
	0x00, 0x00, 0x00, 0xca, 0x03, 0x00, 0x00, 0x49, 0x02, 0x00, 0x00, 0xc9, 0x03, 0x00, 0x00, 0xa9, // .......I........
	0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xcb, 0x03, 0x00, 0x00, 0xc5, 0x03, 0x00, 0x00, 0xca, // ................
	0x03, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xce, // .......Q........
	0x03, 0x00, 0x00, 0xb8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x78, 0x06, 0x00, 0x00, 0xcb, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, // ...x............
	0x00, 0x00, 0x00, 0xd0, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x78, // ...........2...x
	0x06, 0x00, 0x00, 0xce, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xd3, 0x03, 0x00, 0x00, 0xb8, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x7f, // ................
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x79, 0x06, 0x00, 0x00, 0xcb, 0x03, 0x00, 0x00, 0x0c, // .......y........
	0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd5, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // ...............2
	0x00, 0x00, 0x00, 0x79, 0x06, 0x00, 0x00, 0xd3, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x50, // ...y...........P
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xd6, 0x03, 0x00, 0x00, 0xd0, 0x03, 0x00, 0x00, 0xd5, // ................
	0x03, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x98, 0x04, 0x00, 0x00, 0x6a, // ...V...........j
	0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x00, 0x58, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x9b, // ...g...X........
	0x04, 0x00, 0x00, 0x98, 0x04, 0x00, 0x00, 0xd6, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xc1, // ................
	0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xdb, 0x03, 0x00, 0x00, 0x9b, // ...O............
	0x04, 0x00, 0x00, 0x9b, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x8c, 0x00, 0x00, 0x00, 0xa2, 0x04, 0x00, 0x00, 0x7c, // ...V...........|
	0x00, 0x00, 0x00, 0x7a, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xa4, // ...z...W........
	0x04, 0x00, 0x00, 0xa2, 0x04, 0x00, 0x00, 0x49, 0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, // .......I...O....
	0x00, 0x00, 0x00, 0xe0, 0x03, 0x00, 0x00, 0xa4, 0x04, 0x00, 0x00, 0xa4, 0x04, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xe2, 0x03, 0x00, 0x00, 0xa4, 0x04, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x8e, // ................
	0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xe4, 0x03, 0x00, 0x00, 0xe0, 0x03, 0x00, 0x00, 0xe2, // ................
	0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xe7, 0x03, 0x00, 0x00, 0xdb, // ................
	0x03, 0x00, 0x00, 0xe4, 0x03, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x31, 0x01, 0x00, 0x00, 0xe8, // .......A...1....
	0x03, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x75, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x3d, // .......u.......=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe9, 0x03, 0x00, 0x00, 0xe8, 0x03, 0x00, 0x00, 0xb7, // ................
	0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0xea, 0x03, 0x00, 0x00, 0xe9, 0x03, 0x00, 0x00, 0xb5, // ...=............
	0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xf3, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // ................
	0x00, 0x04, 0x00, 0xea, 0x03, 0x00, 0x00, 0xeb, 0x03, 0x00, 0x00, 0xf3, 0x03, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xeb, 0x03, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x31, 0x01, 0x00, 0x00, 0xed, // .......A...1....
	0x03, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x7c, 0x02, 0x00, 0x00, 0x75, 0x01, 0x00, 0x00, 0x3d, // .......|...u...=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xee, 0x03, 0x00, 0x00, 0xed, 0x03, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xef, 0x03, 0x00, 0x00, 0xe7, 0x03, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf0, 0x03, 0x00, 0x00, 0xe7, // ...Q............
	0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf1, // .......Q........
	0x03, 0x00, 0x00, 0xe7, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, // ...........P....
	0x00, 0x00, 0x00, 0xf2, 0x03, 0x00, 0x00, 0xef, 0x03, 0x00, 0x00, 0xf0, 0x03, 0x00, 0x00, 0xf1, // ................
	0x03, 0x00, 0x00, 0xee, 0x03, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x8a, 0x04, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xf3, 0x03, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x31, 0x01, 0x00, 0x00, 0xf4, // .......A...1....
	0x03, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0xbc, 0x01, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x3d, // ...............=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf5, 0x03, 0x00, 0x00, 0xf4, 0x03, 0x00, 0x00, 0x8e, // ................
	0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xf7, 0x03, 0x00, 0x00, 0xe7, 0x03, 0x00, 0x00, 0xf5, // ................
	0x03, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x20, 0x01, 0x00, 0x00, 0xf8, 0x03, 0x00, 0x00, 0x16, // ...A... ........
	0x01, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x10, 0x01, 0x00, 0x00, 0xf9, // .......=........
	0x03, 0x00, 0x00, 0xf8, 0x03, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xfa, // ................
	0x03, 0x00, 0x00, 0x89, 0x02, 0x00, 0x00, 0xf9, 0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, // ...........O....
	0x00, 0x00, 0x00, 0xfb, 0x03, 0x00, 0x00, 0xfa, 0x03, 0x00, 0x00, 0xfa, 0x03, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xfe, 0x03, 0x00, 0x00, 0xfb, 0x03, 0x00, 0x00, 0xb8, 0x03, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x05, 0x00, 0x20, 0x01, 0x00, 0x00, 0xff, 0x03, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x84, // ... ............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x10, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0xff, // ...=............
	0x03, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x01, 0x04, 0x00, 0x00, 0x93, // ................
	0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x02, // .......O........
	0x04, 0x00, 0x00, 0x01, 0x04, 0x00, 0x00, 0x01, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x06, // ................
	0x04, 0x00, 0x00, 0x4c, 0x03, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, // ...L............
	0x00, 0x00, 0x00, 0x07, 0x04, 0x00, 0x00, 0xfb, 0x03, 0x00, 0x00, 0x06, 0x04, 0x00, 0x00, 0x88, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x09, 0x04, 0x00, 0x00, 0x07, 0x04, 0x00, 0x00, 0xfe, // ................
	0x03, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x0d, 0x04, 0x00, 0x00, 0xb8, // ................
	0x03, 0x00, 0x00, 0x09, 0x04, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x0e, // ................
	0x04, 0x00, 0x00, 0x4c, 0x03, 0x00, 0x00, 0x0d, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...L.......Q....
	0x00, 0x00, 0x00, 0x10, 0x04, 0x00, 0x00, 0x0e, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x11, 0x04, 0x00, 0x00, 0x0e, 0x04, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x12, 0x04, 0x00, 0x00, 0x0e, // ...Q............
	0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x13, // .......P........
	0x04, 0x00, 0x00, 0x10, 0x04, 0x00, 0x00, 0x11, 0x04, 0x00, 0x00, 0x12, 0x04, 0x00, 0x00, 0xae, // ................
	0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x20, 0x01, 0x00, 0x00, 0x14, 0x04, 0x00, 0x00, 0x16, // ...A... ........
	0x01, 0x00, 0x00, 0xac, 0x02, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x10, 0x01, 0x00, 0x00, 0x15, // .......=........
	0x04, 0x00, 0x00, 0x14, 0x04, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x16, // ................
	0x04, 0x00, 0x00, 0x13, 0x04, 0x00, 0x00, 0x15, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x18, 0x04, 0x00, 0x00, 0x16, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1a, 0x04, 0x00, 0x00, 0x16, 0x04, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1b, 0x04, 0x00, 0x00, 0x1a, // ................
	0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x1c, 0x04, 0x00, 0x00, 0x18, // ...P............
	0x04, 0x00, 0x00, 0x1b, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1e, // .......Q........
	0x04, 0x00, 0x00, 0x16, 0x04, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x1f, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x1e, 0x04, 0x00, 0x00, 0x8e, // ................
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x20, 0x04, 0x00, 0x00, 0x1c, 0x04, 0x00, 0x00, 0x1f, // ....... ........
	0x04, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x21, 0x04, 0x00, 0x00, 0xb1, // ...........!....
	0x02, 0x00, 0x00, 0x20, 0x04, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x31, 0x01, 0x00, 0x00, 0x23, // ... ...A...1...#
	0x04, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x75, 0x02, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x3d, // .......u.......=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x24, 0x04, 0x00, 0x00, 0x23, 0x04, 0x00, 0x00, 0x50, // .......$...#...P
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x25, 0x04, 0x00, 0x00, 0x24, 0x04, 0x00, 0x00, 0xb5, // .......%...$....
	0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x26, 0x04, 0x00, 0x00, 0x21, // ...........&...!
	0x04, 0x00, 0x00, 0x25, 0x04, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x8c, 0x00, 0x00, 0x00, 0xab, // ...%...V........
	0x04, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, // ...........W....
	0x00, 0x00, 0x00, 0xad, 0x04, 0x00, 0x00, 0xab, 0x04, 0x00, 0x00, 0x26, 0x04, 0x00, 0x00, 0x4f, // ...........&...O
	0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x29, 0x04, 0x00, 0x00, 0xad, 0x04, 0x00, 0x00, 0xad, // .......)........
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x06, 0x00, 0x31, 0x01, 0x00, 0x00, 0x2b, 0x04, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x75, // ...1...+.......u
	0x02, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2c, // .......=.......,
	0x04, 0x00, 0x00, 0x2b, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x2d, // ...+...P.......-
	0x04, 0x00, 0x00, 0x2c, 0x04, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x0b, // ...,............
	0x00, 0x00, 0x00, 0x2e, 0x04, 0x00, 0x00, 0x21, 0x04, 0x00, 0x00, 0x2d, 0x04, 0x00, 0x00, 0x56, // .......!...-...V
	0x00, 0x05, 0x00, 0x8c, 0x00, 0x00, 0x00, 0xb4, 0x04, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x80, // ................
	0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xb6, 0x04, 0x00, 0x00, 0xb4, // ...W............
	0x04, 0x00, 0x00, 0x2e, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x31, // .......O.......1
	0x04, 0x00, 0x00, 0xb6, 0x04, 0x00, 0x00, 0xb6, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x32, // ...............2
	0x04, 0x00, 0x00, 0x29, 0x04, 0x00, 0x00, 0x31, 0x04, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x31, // ...)...1...A...1
	0x01, 0x00, 0x00, 0x34, 0x04, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x75, 0x02, 0x00, 0x00, 0xfa, // ...4.......u....
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x35, 0x04, 0x00, 0x00, 0x34, // ...=.......5...4
	0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x36, 0x04, 0x00, 0x00, 0xb5, // ...P.......6....
	0x00, 0x00, 0x00, 0x35, 0x04, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x37, // ...5...........7
	0x04, 0x00, 0x00, 0x21, 0x04, 0x00, 0x00, 0x36, 0x04, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x8c, // ...!...6...V....
	0x00, 0x00, 0x00, 0xbd, 0x04, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x57, // ...............W
	0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xbf, 0x04, 0x00, 0x00, 0xbd, 0x04, 0x00, 0x00, 0x37, // ...............7
	0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x3a, 0x04, 0x00, 0x00, 0xbf, // ...O.......:....
	0x04, 0x00, 0x00, 0xbf, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x3b, 0x04, 0x00, 0x00, 0x32, // ...........;...2
	0x04, 0x00, 0x00, 0x3a, 0x04, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x31, 0x01, 0x00, 0x00, 0x3d, // ...:...A...1...=
	0x04, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x75, 0x02, 0x00, 0x00, 0xfa, 0x00, 0x00, 0x00, 0x3d, // .......u.......=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3e, 0x04, 0x00, 0x00, 0x3d, 0x04, 0x00, 0x00, 0x50, // .......>...=...P
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x3e, // .......?.......>
	0x04, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00, 0x21, // ...........@...!
	0x04, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x8c, 0x00, 0x00, 0x00, 0xc6, // ...?...V........
	0x04, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, // ...........W....
	0x00, 0x00, 0x00, 0xc8, 0x04, 0x00, 0x00, 0xc6, 0x04, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00, 0x4f, // ...........@...O
	0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x43, 0x04, 0x00, 0x00, 0xc8, 0x04, 0x00, 0x00, 0xc8, // .......C........
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x44, 0x04, 0x00, 0x00, 0x3b, 0x04, 0x00, 0x00, 0x43, // .......D...;...C
	0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x45, 0x04, 0x00, 0x00, 0x44, // ...........E...D
	0x04, 0x00, 0x00, 0xbe, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x47, // .......Q.......G
	0x04, 0x00, 0x00, 0x21, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x3d, // ...!...........=
	0x00, 0x00, 0x00, 0x48, 0x04, 0x00, 0x00, 0x47, 0x04, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x51, // ...H...G.......Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4a, 0x04, 0x00, 0x00, 0x21, 0x04, 0x00, 0x00, 0x00, // .......J...!....
	0x00, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x4b, 0x04, 0x00, 0x00, 0x4a, // .......=...K...J
	0x04, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x4c, // ...........=...L
	0x04, 0x00, 0x00, 0x48, 0x04, 0x00, 0x00, 0x4b, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...H...K...Q....
	0x00, 0x00, 0x00, 0x4e, 0x04, 0x00, 0x00, 0x21, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xb8, // ...N...!........
	0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x4f, 0x04, 0x00, 0x00, 0x4e, 0x04, 0x00, 0x00, 0xb5, // ...=...O...N....
	0x00, 0x00, 0x00, 0xa6, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x50, 0x04, 0x00, 0x00, 0x4c, // .......=...P...L
	0x04, 0x00, 0x00, 0x4f, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x52, // ...O...Q.......R
	0x04, 0x00, 0x00, 0x21, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x3d, // ...!...........=
	0x00, 0x00, 0x00, 0x53, 0x04, 0x00, 0x00, 0x52, 0x04, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0xa6, // ...S...R........
	0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0x50, 0x04, 0x00, 0x00, 0x53, // ...=...T...P...S
	0x04, 0x00, 0x00, 0xa8, 0x00, 0x04, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x55, 0x04, 0x00, 0x00, 0x54, // .......=...U...T
	0x04, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x57, 0x04, 0x00, 0x00, 0x09, // .......=...W....
	0x04, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x04, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x58, // ...........=...X
	0x04, 0x00, 0x00, 0x57, 0x04, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x59, // ...W.......=...Y
	0x04, 0x00, 0x00, 0x55, 0x04, 0x00, 0x00, 0x58, 0x04, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x64, // ...U...X.......d
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x59, 0x04, 0x00, 0x00, 0x5a, // ...........Y...Z
	0x04, 0x00, 0x00, 0x64, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x5a, 0x04, 0x00, 0x00, 0x0c, // ...d.......Z....
	0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5e, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, // .......^.......1
	0x00, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0xfe, 0x03, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x06, 0x00, 0x31, 0x01, 0x00, 0x00, 0x5f, 0x04, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0xfd, // ...1..._........
	0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x60, // .......=.......`
	0x04, 0x00, 0x00, 0x5f, 0x04, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x61, // ..._...........a
	0x04, 0x00, 0x00, 0x5e, 0x04, 0x00, 0x00, 0x60, 0x04, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x1a, // ...^...`...P....
	0x00, 0x00, 0x00, 0x62, 0x04, 0x00, 0x00, 0x61, 0x04, 0x00, 0x00, 0x61, 0x04, 0x00, 0x00, 0x61, // ...b...a...a...a
	0x04, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x63, 0x04, 0x00, 0x00, 0x01, // ...........c....
	0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0xf7, 0x03, 0x00, 0x00, 0x45, 0x04, 0x00, 0x00, 0x62, // ...........E...b
	0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x64, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x64, // .......d.......d
	0x04, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x7f, 0x06, 0x00, 0x00, 0xf7, // ................
	0x03, 0x00, 0x00, 0xf3, 0x03, 0x00, 0x00, 0x63, 0x04, 0x00, 0x00, 0x5a, 0x04, 0x00, 0x00, 0x0c, // .......c...Z....
	0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x66, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x25, // .......f.......%
	0x00, 0x00, 0x00, 0x7f, 0x06, 0x00, 0x00, 0x0c, 0x03, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x18, // ...........A....
	0x01, 0x00, 0x00, 0x67, 0x04, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x7c, 0x02, 0x00, 0x00, 0x3d, // ...g.......|...=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x68, 0x04, 0x00, 0x00, 0x67, 0x04, 0x00, 0x00, 0x4f, // .......h...g...O
	0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x69, 0x04, 0x00, 0x00, 0x68, 0x04, 0x00, 0x00, 0x68, // .......i...h...h
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x8e, // ................
	0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x6a, 0x04, 0x00, 0x00, 0x69, 0x04, 0x00, 0x00, 0x12, // .......j...i....
	0x03, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x6d, 0x04, 0x00, 0x00, 0x6a, // ...........m...j
	0x04, 0x00, 0x00, 0xe4, 0x03, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x6f, // ...............o
	0x04, 0x00, 0x00, 0x6d, 0x04, 0x00, 0x00, 0x19, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x1a, // ...m............
	0x00, 0x00, 0x00, 0x70, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x6f, // ...p.......(...o
	0x04, 0x00, 0x00, 0x1c, 0x03, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x18, 0x01, 0x00, 0x00, 0x72, // .......A.......r
	0x04, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x7c, 0x02, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, // .......|...=....
	0x00, 0x00, 0x00, 0x73, 0x04, 0x00, 0x00, 0x72, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, // ...s...r...O....
	0x00, 0x00, 0x00, 0x74, 0x04, 0x00, 0x00, 0x73, 0x04, 0x00, 0x00, 0x73, 0x04, 0x00, 0x00, 0x00, // ...t...s...s....
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0x75, 0x04, 0x00, 0x00, 0x66, 0x04, 0x00, 0x00, 0x74, 0x04, 0x00, 0x00, 0x83, // ...u...f...t....
	0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x77, 0x04, 0x00, 0x00, 0x24, 0x03, 0x00, 0x00, 0xe4, // .......w...$....
	0x03, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x79, 0x04, 0x00, 0x00, 0x75, // ...........y...u
	0x04, 0x00, 0x00, 0x77, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd3, // ...w...Q........
	0x04, 0x00, 0x00, 0x6d, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...m.......Q....
	0x00, 0x00, 0x00, 0xd5, 0x04, 0x00, 0x00, 0x6d, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, // .......m.......Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd7, 0x04, 0x00, 0x00, 0x6d, 0x04, 0x00, 0x00, 0x02, // ...........m....
	0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd8, 0x04, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0xd5, 0x04, 0x00, 0x00, 0xd7, 0x04, 0x00, 0x00, 0x0c, // ...(............
	0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd9, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, // ...............(
	0x00, 0x00, 0x00, 0xd3, 0x04, 0x00, 0x00, 0xd8, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xdb, 0x04, 0x00, 0x00, 0x70, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, // .......p.......Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xdd, 0x04, 0x00, 0x00, 0x70, 0x04, 0x00, 0x00, 0x01, // ...........p....
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xdf, 0x04, 0x00, 0x00, 0x70, // ...Q...........p
	0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe0, // ................
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0xdd, 0x04, 0x00, 0x00, 0xdf, // .......(........
	0x04, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe1, 0x04, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0xdb, 0x04, 0x00, 0x00, 0xe0, 0x04, 0x00, 0x00, 0x51, // ...(...........Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe2, 0x04, 0x00, 0x00, 0x79, 0x04, 0x00, 0x00, 0x00, // ...........y....
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe3, 0x04, 0x00, 0x00, 0x79, // ...Q...........y
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe4, // .......Q........
	0x04, 0x00, 0x00, 0x79, 0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, // ...y............
	0x00, 0x00, 0x00, 0xe5, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0xe3, // ...........(....
	0x04, 0x00, 0x00, 0xe4, 0x04, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe6, // ................
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0xe2, 0x04, 0x00, 0x00, 0xe5, // .......(........
	0x04, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe9, 0x04, 0x00, 0x00, 0xd9, // ................
	0x04, 0x00, 0x00, 0xe1, 0x04, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0xeb, // ...........=....
	0x04, 0x00, 0x00, 0xe9, 0x04, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xf5, // ................
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xeb, 0x04, 0x00, 0x00, 0xec, // ................
	0x04, 0x00, 0x00, 0xf5, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xec, 0x04, 0x00, 0x00, 0x88, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xee, 0x04, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0xe9, // ................
	0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xf1, 0x04, 0x00, 0x00, 0x6d, // ...............m
	0x04, 0x00, 0x00, 0xee, 0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xf4, // ................
	0x04, 0x00, 0x00, 0x70, 0x04, 0x00, 0x00, 0xee, 0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xf5, // ...p............
	0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xf5, 0x04, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0x8d, 0x06, 0x00, 0x00, 0x70, 0x04, 0x00, 0x00, 0x64, 0x04, 0x00, 0x00, 0xf4, // .......p...d....
	0x04, 0x00, 0x00, 0xec, 0x04, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x82, // ................
	0x06, 0x00, 0x00, 0x6d, 0x04, 0x00, 0x00, 0x64, 0x04, 0x00, 0x00, 0xf1, 0x04, 0x00, 0x00, 0xec, // ...m...d........
	0x04, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0xf8, 0x04, 0x00, 0x00, 0xd9, // .......=........
	0x04, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0xf9, // ...........=....
	0x04, 0x00, 0x00, 0x75, 0x03, 0x00, 0x00, 0xf8, 0x04, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x3d, // ...u...........=
	0x00, 0x00, 0x00, 0xfb, 0x04, 0x00, 0x00, 0xe1, 0x04, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xa6, // ................
	0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0xfc, 0x04, 0x00, 0x00, 0xf9, 0x04, 0x00, 0x00, 0xfb, // ...=............
	0x04, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x11, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // ................
	0x00, 0x04, 0x00, 0xfc, 0x04, 0x00, 0x00, 0xfd, 0x04, 0x00, 0x00, 0x11, 0x05, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xfd, 0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xfe, 0x04, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xfe, 0x04, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x89, // ................
	0x06, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0xfd, 0x04, 0x00, 0x00, 0x0c, 0x05, 0x00, 0x00, 0x0d, // ...-............
	0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x80, 0x06, 0x00, 0x00, 0x88, // .......<........
	0x00, 0x00, 0x00, 0xfd, 0x04, 0x00, 0x00, 0x0f, 0x05, 0x00, 0x00, 0x0d, 0x05, 0x00, 0x00, 0xb1, // ................
	0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x01, 0x05, 0x00, 0x00, 0x80, 0x06, 0x00, 0x00, 0xfd, // ...=............
	0x01, 0x00, 0x00, 0xf6, 0x00, 0x04, 0x00, 0x10, 0x05, 0x00, 0x00, 0x0d, 0x05, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x01, 0x05, 0x00, 0x00, 0x02, 0x05, 0x00, 0x00, 0x10, // ................
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x02, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x31, // ...........A...1
	0x01, 0x00, 0x00, 0x07, 0x05, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x30, 0x01, 0x00, 0x00, 0xfc, // ...........0....
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x08, 0x05, 0x00, 0x00, 0x07, // ...=............
	0x05, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xc0, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, // ................
	0x00, 0x03, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x40, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x40, // .......@.......@
	0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x18, 0x01, 0x00, 0x00, 0x41, 0x05, 0x00, 0x00, 0x16, // ...A.......A....
	0x01, 0x00, 0x00, 0x17, 0x01, 0x00, 0x00, 0x80, 0x06, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, // ...........=....
	0x00, 0x00, 0x00, 0x42, 0x05, 0x00, 0x00, 0x41, 0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...B...A...Q....
	0x00, 0x00, 0x00, 0x44, 0x05, 0x00, 0x00, 0x42, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, // ...D...B.......Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x45, 0x05, 0x00, 0x00, 0x42, 0x05, 0x00, 0x00, 0x01, // .......E...B....
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x05, 0x00, 0x00, 0x42, // ...Q.......F...B
	0x05, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x47, // .......P.......G
	0x05, 0x00, 0x00, 0x44, 0x05, 0x00, 0x00, 0x45, 0x05, 0x00, 0x00, 0x46, 0x05, 0x00, 0x00, 0xae, // ...D...E...F....
	0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x20, 0x01, 0x00, 0x00, 0x48, 0x05, 0x00, 0x00, 0x16, // ...A... ...H....
	0x01, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x10, 0x01, 0x00, 0x00, 0x49, // .......=.......I
	0x05, 0x00, 0x00, 0x48, 0x05, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x4a, // ...H...........J
	0x05, 0x00, 0x00, 0x47, 0x05, 0x00, 0x00, 0x49, 0x05, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, // ...G...I...O....
	0x00, 0x00, 0x00, 0x4b, 0x05, 0x00, 0x00, 0x4a, 0x05, 0x00, 0x00, 0x4a, 0x05, 0x00, 0x00, 0x00, // ...K...J...J....
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0x4c, 0x05, 0x00, 0x00, 0x4b, 0x05, 0x00, 0x00, 0x4c, 0x03, 0x00, 0x00, 0x0c, // ...L...K...L....
	0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x4e, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, // .......N.......E
	0x00, 0x00, 0x00, 0x4c, 0x05, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x50, // ...L...........P
	0x05, 0x00, 0x00, 0xb5, 0x03, 0x00, 0x00, 0x4e, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x31, // .......N...A...1
	0x01, 0x00, 0x00, 0x53, 0x05, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x30, 0x01, 0x00, 0x00, 0xfa, // ...S.......0....
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x54, 0x05, 0x00, 0x00, 0x53, // ...=.......T...S
	0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x55, 0x05, 0x00, 0x00, 0x50, // ...........U...P
	0x05, 0x00, 0x00, 0x54, 0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x56, // ...T.......=...V
	0x05, 0x00, 0x00, 0x55, 0x05, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x3d, // ...U...........=
	0x00, 0x00, 0x00, 0x57, 0x05, 0x00, 0x00, 0x75, 0x03, 0x00, 0x00, 0x56, 0x05, 0x00, 0x00, 0xf7, // ...W...u...V....
	0x00, 0x03, 0x00, 0x63, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x57, // ...c...........W
	0x05, 0x00, 0x00, 0x58, 0x05, 0x00, 0x00, 0x63, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x58, // ...X...c.......X
	0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x31, 0x01, 0x00, 0x00, 0x5a, 0x05, 0x00, 0x00, 0x16, // ...A...1...Z....
	0x01, 0x00, 0x00, 0x30, 0x01, 0x00, 0x00, 0xfa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...0.......=....
	0x00, 0x00, 0x00, 0x5b, 0x05, 0x00, 0x00, 0x5a, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, // ...[...Z........
	0x00, 0x00, 0x00, 0x5c, 0x05, 0x00, 0x00, 0x50, 0x05, 0x00, 0x00, 0x5b, 0x05, 0x00, 0x00, 0x41, // .......P...[...A
	0x00, 0x06, 0x00, 0x31, 0x01, 0x00, 0x00, 0x5d, 0x05, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x30, // ...1...].......0
	0x01, 0x00, 0x00, 0xfa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5e, // .......=.......^
	0x05, 0x00, 0x00, 0x5d, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5f, // ...]..........._
	0x05, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x5e, 0x05, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // .......^........
	0x00, 0x00, 0x00, 0xc4, 0x05, 0x00, 0x00, 0x5f, 0x05, 0x00, 0x00, 0x5f, 0x05, 0x00, 0x00, 0x88, // ......._..._....
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x61, 0x05, 0x00, 0x00, 0x5c, 0x05, 0x00, 0x00, 0xc4, // .......a........
	0x05, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x62, 0x05, 0x00, 0x00, 0x82, // ...........b....
	0x06, 0x00, 0x00, 0x61, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x63, 0x05, 0x00, 0x00, 0xf8, // ...a.......c....
	0x00, 0x02, 0x00, 0x63, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x8e, // ...c............
	0x06, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x40, 0x05, 0x00, 0x00, 0x62, 0x05, 0x00, 0x00, 0x58, // ...-...@...b...X
	0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x65, 0x05, 0x00, 0x00, 0x50, // .......=...e...P
	0x05, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x87, 0x05, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x65, 0x05, 0x00, 0x00, 0x66, 0x05, 0x00, 0x00, 0x87, // .......e...f....
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x66, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, // .......f........
	0x00, 0x00, 0x00, 0x68, 0x05, 0x00, 0x00, 0x4e, 0x05, 0x00, 0x00, 0xb3, 0x03, 0x00, 0x00, 0x0c, // ...h...N........
	0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x69, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, // .......i.......E
	0x00, 0x00, 0x00, 0x68, 0x05, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6b, // ...h...........k
	0x05, 0x00, 0x00, 0xb5, 0x03, 0x00, 0x00, 0x69, 0x05, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, // .......i........
	0x00, 0x00, 0x00, 0x6e, 0x05, 0x00, 0x00, 0x4e, 0x05, 0x00, 0x00, 0x69, 0x05, 0x00, 0x00, 0x94, // ...n...N...i....
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x70, 0x05, 0x00, 0x00, 0xb3, 0x03, 0x00, 0x00, 0x69, // .......p.......i
	0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x72, 0x05, 0x00, 0x00, 0x6b, // .......=...r...k
	0x05, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x74, // ...........=...t
	0x05, 0x00, 0x00, 0x6e, 0x05, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x3d, // ...n...........=
	0x00, 0x00, 0x00, 0x75, 0x05, 0x00, 0x00, 0x72, 0x05, 0x00, 0x00, 0x74, 0x05, 0x00, 0x00, 0xba, // ...u...r...t....
	0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x77, 0x05, 0x00, 0x00, 0x70, 0x05, 0x00, 0x00, 0xb5, // ...=...w...p....
	0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x78, 0x05, 0x00, 0x00, 0x75, // .......=...x...u
	0x05, 0x00, 0x00, 0x77, 0x05, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x86, 0x05, 0x00, 0x00, 0x00, // ...w............
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x78, 0x05, 0x00, 0x00, 0x79, 0x05, 0x00, 0x00, 0x86, // .......x...y....
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x79, 0x05, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1a, // .......y........
	0x00, 0x00, 0x00, 0xc8, 0x05, 0x00, 0x00, 0x24, 0x03, 0x00, 0x00, 0x8d, 0x06, 0x00, 0x00, 0x83, // .......$........
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc9, 0x05, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x6e, // ...............n
	0x05, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xca, 0x05, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xc9, 0x05, 0x00, 0x00, 0x09, 0x01, 0x00, 0x00, 0x8e, // ................
	0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xcb, 0x05, 0x00, 0x00, 0xc8, 0x05, 0x00, 0x00, 0xca, // ................
	0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xcc, 0x05, 0x00, 0x00, 0x8d, // ................
	0x06, 0x00, 0x00, 0xcb, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7c, // ...............|
	0x05, 0x00, 0x00, 0x08, 0x05, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x7e, 0x05, 0x00, 0x00, 0x62, 0x01, 0x00, 0x00, 0x70, 0x05, 0x00, 0x00, 0x88, // ...~...b...p....
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7f, 0x05, 0x00, 0x00, 0x7c, 0x05, 0x00, 0x00, 0x7e, // ...........|...~
	0x05, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x81, 0x05, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x6b, 0x05, 0x00, 0x00, 0x08, 0x05, 0x00, 0x00, 0x85, // .......k........
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x82, 0x05, 0x00, 0x00, 0x7f, 0x05, 0x00, 0x00, 0x81, // ................
	0x05, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x83, 0x05, 0x00, 0x00, 0xcc, // ................
	0x05, 0x00, 0x00, 0x82, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x85, // ................
	0x05, 0x00, 0x00, 0x8e, 0x06, 0x00, 0x00, 0x83, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x86, // ................
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x86, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0x90, 0x06, 0x00, 0x00, 0x8e, 0x06, 0x00, 0x00, 0x66, 0x05, 0x00, 0x00, 0x85, // ...........f....
	0x05, 0x00, 0x00, 0x79, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x87, 0x05, 0x00, 0x00, 0xf8, // ...y............
	0x00, 0x02, 0x00, 0x87, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x8f, // ................
	0x06, 0x00, 0x00, 0x8e, 0x06, 0x00, 0x00, 0x63, 0x05, 0x00, 0x00, 0x90, 0x06, 0x00, 0x00, 0x86, // .......c........
	0x05, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8a, 0x05, 0x00, 0x00, 0x4c, // ...............L
	0x05, 0x00, 0x00, 0x4c, 0x05, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8d, // ...L............
	0x05, 0x00, 0x00, 0x8a, 0x05, 0x00, 0x00, 0x8a, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x31, // ...........A...1
	0x01, 0x00, 0x00, 0x8e, 0x05, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x74, 0x01, 0x00, 0x00, 0x75, // ...........t...u
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8f, 0x05, 0x00, 0x00, 0x8e, // ...=............
	0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x31, 0x01, 0x00, 0x00, 0x90, 0x05, 0x00, 0x00, 0x16, // ...A...1........
	0x01, 0x00, 0x00, 0x74, 0x01, 0x00, 0x00, 0x75, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...t...u...=....
	0x00, 0x00, 0x00, 0x91, 0x05, 0x00, 0x00, 0x90, 0x05, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x92, 0x05, 0x00, 0x00, 0x8f, 0x05, 0x00, 0x00, 0x91, 0x05, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x06, 0x00, 0x31, 0x01, 0x00, 0x00, 0x93, 0x05, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x74, // ...1...........t
	0x01, 0x00, 0x00, 0x75, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x94, // ...u...=........
	0x05, 0x00, 0x00, 0x93, 0x05, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x95, // ................
	0x05, 0x00, 0x00, 0x92, 0x05, 0x00, 0x00, 0x94, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x31, // ...........A...1
	0x01, 0x00, 0x00, 0x96, 0x05, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x74, 0x01, 0x00, 0x00, 0x75, // ...........t...u
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x97, 0x05, 0x00, 0x00, 0x96, // ...=............
	0x05, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x98, 0x05, 0x00, 0x00, 0x95, // ................
	0x05, 0x00, 0x00, 0x97, 0x05, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x99, // ................
	0x05, 0x00, 0x00, 0x8d, 0x05, 0x00, 0x00, 0x98, 0x05, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x9a, 0x05, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x99, 0x05, 0x00, 0x00, 0x0c, // ................
	0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9b, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, // ...............+
	0x00, 0x00, 0x00, 0x9a, 0x05, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x85, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9e, 0x05, 0x00, 0x00, 0x9b, 0x05, 0x00, 0x00, 0x9b, // ................
	0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa0, 0x05, 0x00, 0x00, 0x8a, // ................
	0x05, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa1, // ................
	0x05, 0x00, 0x00, 0x9e, 0x05, 0x00, 0x00, 0xa0, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0xa5, 0x05, 0x00, 0x00, 0x8d, 0x06, 0x00, 0x00, 0x82, 0x06, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x06, 0x00, 0x18, 0x01, 0x00, 0x00, 0xa8, 0x05, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x92, // ................
	0x01, 0x00, 0x00, 0x80, 0x06, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xa9, // .......=........
	0x05, 0x00, 0x00, 0xa8, 0x05, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xaa, // .......O........
	0x05, 0x00, 0x00, 0xa9, 0x05, 0x00, 0x00, 0xa9, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xab, // ................
	0x05, 0x00, 0x00, 0x8f, 0x06, 0x00, 0x00, 0xaa, 0x05, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0xad, 0x05, 0x00, 0x00, 0xab, 0x05, 0x00, 0x00, 0xa1, 0x05, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x05, 0x00, 0x18, 0x01, 0x00, 0x00, 0xaf, 0x05, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x74, // ...............t
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xb0, 0x05, 0x00, 0x00, 0xaf, // ...=............
	0x05, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xb1, 0x05, 0x00, 0x00, 0xb0, // ...O............
	0x05, 0x00, 0x00, 0xb0, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xb3, 0x05, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xa5, 0x05, 0x00, 0x00, 0xb1, 0x05, 0x00, 0x00, 0xad, // ...2............
	0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x31, 0x01, 0x00, 0x00, 0xb4, 0x05, 0x00, 0x00, 0x16, // ...A...1........
	0x01, 0x00, 0x00, 0x9f, 0x01, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...........=....
	0x00, 0x00, 0x00, 0xb5, 0x05, 0x00, 0x00, 0xb4, 0x05, 0x00, 0x00, 0xb7, 0x00, 0x05, 0x00, 0x3d, // ...............=
	0x00, 0x00, 0x00, 0xb6, 0x05, 0x00, 0x00, 0xb5, 0x05, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xf7, // ................
	0x00, 0x03, 0x00, 0xbf, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xb6, // ................
	0x05, 0x00, 0x00, 0xb7, 0x05, 0x00, 0x00, 0xbd, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xbd, // ................
	0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xc0, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xb7, // ................
	0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x31, 0x01, 0x00, 0x00, 0xb8, 0x05, 0x00, 0x00, 0x16, // ...A...1........
	0x01, 0x00, 0x00, 0x9f, 0x01, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...........=....
	0x00, 0x00, 0x00, 0xb9, 0x05, 0x00, 0x00, 0xb8, 0x05, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x1a, // ...........P....
	0x00, 0x00, 0x00, 0xba, 0x05, 0x00, 0x00, 0xb9, 0x05, 0x00, 0x00, 0xb9, 0x05, 0x00, 0x00, 0xb9, // ................
	0x05, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xd2, 0x05, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0xb3, 0x05, 0x00, 0x00, 0x82, 0x06, 0x00, 0x00, 0xba, // ................
	0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xc0, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xbf, // ................
	0x05, 0x00, 0x00, 0xff, 0x00, 0x01, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xc0, 0x05, 0x00, 0x00, 0xf5, // ................
	0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x91, 0x06, 0x00, 0x00, 0xb3, 0x05, 0x00, 0x00, 0xbd, // ................
	0x05, 0x00, 0x00, 0xd2, 0x05, 0x00, 0x00, 0xb7, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0x0c, 0x05, 0x00, 0x00, 0x89, 0x06, 0x00, 0x00, 0x91, 0x06, 0x00, 0x00, 0xf9, // ................
	0x00, 0x02, 0x00, 0x0d, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x0d, 0x05, 0x00, 0x00, 0x80, // ................
	0x00, 0x05, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x0f, 0x05, 0x00, 0x00, 0x80, 0x06, 0x00, 0x00, 0x84, // ...<............
	0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xfe, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x10, // ................
	0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x11, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x11, // ................
	0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x88, 0x06, 0x00, 0x00, 0x2d, // ...............-
	0x01, 0x00, 0x00, 0xf5, 0x04, 0x00, 0x00, 0x89, 0x06, 0x00, 0x00, 0x10, 0x05, 0x00, 0x00, 0xba, // ................
	0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x14, 0x05, 0x00, 0x00, 0xd9, 0x04, 0x00, 0x00, 0xb5, // ...=............
	0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x15, 0x05, 0x00, 0x00, 0x75, // .......=.......u
	0x03, 0x00, 0x00, 0x14, 0x05, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x25, 0x05, 0x00, 0x00, 0x00, // ...........%....
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x15, 0x05, 0x00, 0x00, 0x16, 0x05, 0x00, 0x00, 0x25, // ...............%
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x16, 0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x18, 0x05, 0x00, 0x00, 0xb5, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x19, 0x05, 0x00, 0x00, 0xb5, 0x03, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1a, 0x05, 0x00, 0x00, 0xb5, // ...Q............
	0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x1b, // .......P........
	0x05, 0x00, 0x00, 0x18, 0x05, 0x00, 0x00, 0x19, 0x05, 0x00, 0x00, 0x1a, 0x05, 0x00, 0x00, 0xb5, // ................
	0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x20, 0x01, 0x00, 0x00, 0x1c, 0x05, 0x00, 0x00, 0x16, // ...A... ........
	0x01, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x10, 0x01, 0x00, 0x00, 0x1d, // .......=........
	0x05, 0x00, 0x00, 0x1c, 0x05, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x1e, // ................
	0x05, 0x00, 0x00, 0x1b, 0x05, 0x00, 0x00, 0x1d, 0x05, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, // ...........O....
	0x00, 0x00, 0x00, 0x1f, 0x05, 0x00, 0x00, 0x1e, 0x05, 0x00, 0x00, 0x1e, 0x05, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0x20, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x1f, // ... .......E....
	0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe4, 0x05, 0x00, 0x00, 0x20, // ...Q........... 
	0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe5, // .......Q........
	0x05, 0x00, 0x00, 0x20, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x17, // ... ............
	0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0xfc, 0x00, 0x00, 0x00, 0xf3, // ................
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xf3, 0x05, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xf4, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe4, // ................
	0x05, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf5, 0x05, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe5, 0x05, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x3d, // ...............=
	0x00, 0x00, 0x00, 0xf7, 0x05, 0x00, 0x00, 0xf5, 0x05, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, 0xbc, // ................
	0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0xf9, 0x05, 0x00, 0x00, 0xf4, 0x05, 0x00, 0x00, 0xb1, // ...=............
	0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0xfa, 0x05, 0x00, 0x00, 0xf7, // .......=........
	0x05, 0x00, 0x00, 0xf9, 0x05, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xfc, 0x05, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xfa, 0x05, 0x00, 0x00, 0xfb, 0x05, 0x00, 0x00, 0xfc, // ................
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xfb, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x17, // ................
	0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xfc, 0x05, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xff, 0x05, 0x00, 0x00, 0xf5, 0x05, 0x00, 0x00, 0xf4, 0x05, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x06, 0x00, 0x00, 0xf5, 0x05, 0x00, 0x00, 0xf4, // ................
	0x05, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x06, 0x00, 0x00, 0xff, // ................
	0x05, 0x00, 0x00, 0x02, 0x06, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x04, // ...........=....
	0x06, 0x00, 0x00, 0xe5, 0x05, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x05, 0x06, 0x00, 0x00, 0x04, 0x06, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0xe1, // ................
	0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x06, 0x00, 0x00, 0xe3, // ................
	0x00, 0x00, 0x00, 0x03, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0a, // ................
	0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x07, 0x06, 0x00, 0x00, 0x03, // .......2........
	0x06, 0x00, 0x00, 0x7e, 0x06, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x0b, // ...~.......=....
	0x06, 0x00, 0x00, 0xe5, 0x05, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x0d, 0x06, 0x00, 0x00, 0x03, 0x06, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x0f, 0x06, 0x00, 0x00, 0x0b, 0x06, 0x00, 0x00, 0x0d, 0x06, 0x00, 0x00, 0x03, // ................
	0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x11, 0x06, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x0a, 0x06, 0x00, 0x00, 0x0f, 0x06, 0x00, 0x00, 0x05, // ...2............
	0x06, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x12, 0x06, 0x00, 0x00, 0xe4, // .......=........
	0x05, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x14, // ................
	0x06, 0x00, 0x00, 0x11, 0x06, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x16, // ................
	0x06, 0x00, 0x00, 0x12, 0x06, 0x00, 0x00, 0x14, 0x06, 0x00, 0x00, 0x11, 0x06, 0x00, 0x00, 0xf9, // ................
	0x00, 0x02, 0x00, 0x17, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x17, 0x06, 0x00, 0x00, 0xf5, // ................
	0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x84, 0x06, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xfb, // ................
	0x05, 0x00, 0x00, 0x16, 0x06, 0x00, 0x00, 0xfc, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xe7, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x84, 0x06, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe8, 0x05, 0x00, 0x00, 0x20, 0x05, 0x00, 0x00, 0x02, // ........... ....
	0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x34, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, // .......4........
	0x00, 0x03, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x1f, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x1f, // ................
	0x06, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, 0x06, 0x00, 0x00, 0x01, // ........... ....
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe8, 0x05, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x22, 0x06, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x20, 0x06, 0x00, 0x00, 0xbc, // ..."....... ....
	0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x23, 0x06, 0x00, 0x00, 0x22, 0x06, 0x00, 0x00, 0xb1, // ...=...#..."....
	0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x27, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // .......'........
	0x00, 0x04, 0x00, 0x23, 0x06, 0x00, 0x00, 0x24, 0x06, 0x00, 0x00, 0x27, 0x06, 0x00, 0x00, 0xf8, // ...#...$...'....
	0x00, 0x02, 0x00, 0x24, 0x06, 0x00, 0x00, 0xbe, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x25, // ...$.......=...%
	0x06, 0x00, 0x00, 0xe8, 0x05, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x26, 0x06, 0x00, 0x00, 0x25, 0x06, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xae, // ...&...%........
	0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x34, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x27, // .......4.......'
	0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2a, 0x06, 0x00, 0x00, 0x01, // ...........*....
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xba, 0x00, 0x00, 0x00, 0x20, 0x06, 0x00, 0x00, 0xbd, // ...2....... ....
	0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2c, 0x06, 0x00, 0x00, 0xae, // ...........,....
	0x00, 0x00, 0x00, 0x20, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2d, // ... ...........-
	0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x2c, 0x06, 0x00, 0x00, 0x85, // ...........,....
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2e, 0x06, 0x00, 0x00, 0x2a, 0x06, 0x00, 0x00, 0x2d, // ...........*...-
	0x06, 0x00, 0x00, 0xbe, 0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x2f, 0x06, 0x00, 0x00, 0xe8, // .......=.../....
	0x05, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7b, // ...............{
	0x06, 0x00, 0x00, 0x2a, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x32, // ...*...........2
	0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x7b, 0x06, 0x00, 0x00, 0x2d, // .......2...{...-
	0x06, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x33, // ...............3
	0x06, 0x00, 0x00, 0x2f, 0x06, 0x00, 0x00, 0x2e, 0x06, 0x00, 0x00, 0x32, 0x06, 0x00, 0x00, 0xf9, // .../.......2....
	0x00, 0x02, 0x00, 0x34, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x34, 0x06, 0x00, 0x00, 0xf5, // ...4.......4....
	0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x85, 0x06, 0x00, 0x00, 0x26, 0x06, 0x00, 0x00, 0x24, // ...........&...$
	0x06, 0x00, 0x00, 0x33, 0x06, 0x00, 0x00, 0x27, 0x06, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, // ...3...'...P....
	0x00, 0x00, 0x00, 0xea, 0x05, 0x00, 0x00, 0xe7, 0x05, 0x00, 0x00, 0x85, 0x06, 0x00, 0x00, 0x56, // ...............V
	0x00, 0x05, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x3c, 0x06, 0x00, 0x00, 0x76, 0x00, 0x00, 0x00, 0x74, // .......<...v...t
	0x00, 0x00, 0x00, 0x58, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x3f, 0x06, 0x00, 0x00, 0x3c, // ...X.......?...<
	0x06, 0x00, 0x00, 0xea, 0x05, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x4f, // ...............O
	0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xdc, 0x05, 0x00, 0x00, 0x3f, 0x06, 0x00, 0x00, 0x3f, // ...........?...?
	0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x85, // ................
	0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xde, 0x05, 0x00, 0x00, 0x82, 0x06, 0x00, 0x00, 0xdc, // ................
	0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x31, 0x01, 0x00, 0x00, 0xdf, 0x05, 0x00, 0x00, 0x16, // ...A...1........
	0x01, 0x00, 0x00, 0xbc, 0x01, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...........=....
	0x00, 0x00, 0x00, 0xe0, 0x05, 0x00, 0x00, 0xdf, 0x05, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0xe1, 0x05, 0x00, 0x00, 0xde, 0x05, 0x00, 0x00, 0xe0, 0x05, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x24, 0x05, 0x00, 0x00, 0x88, 0x06, 0x00, 0x00, 0xe1, // .......$........
	0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x25, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x25, // .......%.......%
	0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x8a, 0x06, 0x00, 0x00, 0x88, // ................
	0x06, 0x00, 0x00, 0x11, 0x05, 0x00, 0x00, 0x24, 0x05, 0x00, 0x00, 0x34, 0x06, 0x00, 0x00, 0xba, // .......$...4....
	0x00, 0x05, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x27, 0x05, 0x00, 0x00, 0xe6, 0x04, 0x00, 0x00, 0xb5, // ...=...'........
	0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x2b, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // .......+........
	0x00, 0x04, 0x00, 0x27, 0x05, 0x00, 0x00, 0x28, 0x05, 0x00, 0x00, 0x2b, 0x05, 0x00, 0x00, 0xf8, // ...'...(...+....
	0x00, 0x02, 0x00, 0x28, 0x05, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x2a, // ...(...........*
	0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x75, 0x04, 0x00, 0x00, 0x77, // .......2...u...w
	0x04, 0x00, 0x00, 0x8a, 0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x2b, 0x05, 0x00, 0x00, 0xf8, // ...........+....
	0x00, 0x02, 0x00, 0x2b, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x8b, // ...+............
	0x06, 0x00, 0x00, 0x8a, 0x06, 0x00, 0x00, 0x25, 0x05, 0x00, 0x00, 0x2a, 0x05, 0x00, 0x00, 0x28, // .......%...*...(
	0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x82, 0x04, 0x00, 0x00, 0x8b, // ...Q............
	0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x84, // .......Q........
	0x04, 0x00, 0x00, 0x8b, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x86, 0x04, 0x00, 0x00, 0x8b, 0x06, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x06, 0x00, 0x31, 0x01, 0x00, 0x00, 0x87, 0x04, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x7c, // ...1...........|
	0x02, 0x00, 0x00, 0x75, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x88, // ...u...=........
	0x04, 0x00, 0x00, 0x87, 0x04, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x7c, // .......P.......|
	0x06, 0x00, 0x00, 0x82, 0x04, 0x00, 0x00, 0x84, 0x04, 0x00, 0x00, 0x86, 0x04, 0x00, 0x00, 0x88, // ................
	0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x8a, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x8a, // ................
	0x04, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x9a, 0x06, 0x00, 0x00, 0xf2, // ................
	0x03, 0x00, 0x00, 0xeb, 0x03, 0x00, 0x00, 0x7c, 0x06, 0x00, 0x00, 0x2b, 0x05, 0x00, 0x00, 0x3e, // .......|...+...>
	0x00, 0x03, 0x00, 0x5a, 0x03, 0x00, 0x00, 0x9a, 0x06, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, // ...Z...........8
	0x00, 0x01, 0x00, 0x00, 0x00, 0x70, 0x02,                                                       // .....p.
};
static const bgfx::EmbeddedShader fs_ball_spherical_nodecal = BGFX_EMBEDDED_SHADER(fs_ball_spherical_nodecal);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of vertex shader from vs_ball.sc to vs_ball_st with options: STEREO
static const uint8_t vs_ball_st_mtl[1755] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x8b, 0x4e, 0x06, 0x0a, 0x05, 0x00, 0x0b, 0x6f, // VSH......N.....o
	0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x04, 0x01, 0x10, 0x00, 0x04, 0x00, // rientation......
	0x00, 0x00, 0x00, 0x00, 0x13, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, // .....matWorldVie
	0x77, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x04, 0x01, 0x90, 0x00, 0x04, 0x00, 0x00, 0x00, // wInverse........
	0x00, 0x00, 0x0c, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x04, // ...matWorldView.
	0x01, 0x50, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, // .P........matWor
	0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x04, 0x02, 0xd0, 0x00, 0x08, 0x00, // ldViewProj......
	0x00, 0x00, 0x00, 0x00, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x02, 0x01, 0x00, 0x00, 0x01, 0x00, // .....layer......
	0x00, 0x00, 0x00, 0x00, 0x47, 0x06, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, // ....G...#include
	0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, //  <metal_stdlib>.
	0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, // #include <simd/s
	0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, // imd.h>..using na
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, // mespace metal;..
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, // struct _Global.{
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x6c, 0x61, 0x79, 0x65, // .    float4 laye
	0x72, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, // r;.    float4x4 
	0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x20, 0x20, 0x20, // orientation;.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, //  float4x4 matWor
	0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ldView;.    floa
	0x74, 0x34, 0x78, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, // t4x4 matWorldVie
	0x77, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // wInverse;.    fl
	0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, // oat4x4 matWorldV
	0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, // iewProj[2];.};..
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // struct xlatMtlMa
	0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // in_out.{..float 
	0x62, 0x67, 0x66, 0x78, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, // bgfx_metal_point
	0x53, 0x69, 0x7a, 0x65, 0x20, 0x5b, 0x5b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x7a, // Size [[point_siz
	0x65, 0x5d, 0x5d, 0x20, 0x3d, 0x20, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // e]] = 1;.    flo
	0x61, 0x74, 0x20, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, // at _entryPointOu
	0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, // tput_v_eye [[use
	0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // r(locn0)]];.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, // float3 _entryPoi
	0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // ntOutput_v_norma
	0x6c, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, // l [[user(locn1)]
	0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x65, // ];.    float2 _e
	0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, // ntryPointOutput_
	0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, // v_texcoord0 [[us
	0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x32, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, // er(locn2)]];.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, //  float3 _entryPo
	0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // intOutput_v_worl
	0x64, 0x50, 0x6f, 0x73, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, // dPos [[user(locn
	0x33, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // 3)]];.    float4
	0x20, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x5b, 0x5b, 0x70, //  gl_Position [[p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x75, // osition]];.    u
	0x69, 0x6e, 0x74, 0x20, 0x67, 0x6c, 0x5f, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x72, // int gl_Layer [[r
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x72, 0x72, // ender_target_arr
	0x61, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, // ay_index]];.};..
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // struct xlatMtlMa
	0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // in_in.{.    floa
	0x74, 0x33, 0x20, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x5b, 0x5b, 0x61, 0x74, // t3 a_normal [[at
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, // tribute(0)]];.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, //   float3 a_posit
	0x69, 0x6f, 0x6e, 0x20, 0x5b, 0x5b, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x28, // ion [[attribute(
	0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // 1)]];.    float2
	0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x61, //  a_texcoord0 [[a
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, // ttribute(2)]];.}
	0x3b, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, // ;..vertex xlatMt
	0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, // lMain_out xlatMt
	0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, // lMain(xlatMtlMai
	0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, // n_in in [[stage_
	0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, // in]], constant _
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, // Global& _mtl_u [
	0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x75, 0x69, // [buffer(0)]], ui
	0x6e, 0x74, 0x20, 0x67, 0x6c, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, // nt gl_InstanceIn
	0x64, 0x65, 0x78, 0x20, 0x5b, 0x5b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, // dex [[instance_i
	0x64, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // d]]).{.    xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, // tlMain_out out =
	0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, //  {};.    float4 
	0x5f, 0x31, 0x39, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x69, 0x6e, // _193 = float4(in
	0x2e, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, // .a_position, 1.0
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, // );.    float4 _1
	0x39, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6f, 0x72, 0x69, 0x65, // 97 = _mtl_u.orie
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x39, 0x33, 0x3b, 0x0a, // ntation * _193;.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x39, 0x33, 0x20, //     float4 _293 
	0x3d, 0x20, 0x5f, 0x31, 0x39, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x39, 0x33, // = _193;.    _293
	0x2e, 0x78, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x39, 0x37, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, // .x = _197.x;.   
	0x20, 0x5f, 0x32, 0x39, 0x33, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x39, 0x37, 0x2e, 0x79, //  _293.y = _197.y
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x39, 0x33, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x5f, // ;.    _293.z = _
	0x31, 0x39, 0x37, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x67, // 197.z;.    out.g
	0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, // l_Position = _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, // l_u.matWorldView
	0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x67, 0x6c, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, // Proj[gl_Instance
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x5d, 0x20, 0x2a, 0x20, 0x5f, 0x32, 0x39, 0x33, 0x3b, 0x0a, 0x20, // Index] * _293;. 
	0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, //    out._entryPoi
	0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x20, 0x3d, // ntOutput_v_eye =
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x78, 0x20, //  _mtl_u.layer.x 
	0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x67, 0x6c, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, // + float(gl_Insta
	0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, // nceIndex);.    o
	0x75, 0x74, 0x2e, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, // ut._entryPointOu
	0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x3d, 0x20, // tput_v_normal = 
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // fast::normalize(
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // (float4((_mtl_u.
	0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x2a, 0x20, 0x66, 0x6c, // orientation * fl
	0x6f, 0x61, 0x74, 0x34, 0x28, 0x69, 0x6e, 0x2e, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // oat4(in.a_normal
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, // , 0.0)).xyz, 0.0
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x57, 0x6f, // ) * _mtl_u.matWo
	0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x29, 0x2e, // rldViewInverse).
	0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x5f, 0x65, // xyz);.    out._e
	0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, // ntryPointOutput_
	0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3d, 0x20, 0x69, 0x6e, // v_texcoord0 = in
	0x2e, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x20, 0x20, // .a_texcoord0;.  
	0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, //   out._entryPoin
	0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, // tOutput_v_worldP
	0x6f, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, // os = (_mtl_u.mat
	0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x5f, 0x32, 0x39, 0x33, // WorldView * _293
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x67, // ).xyz;.    out.g
	0x6c, 0x5f, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x3d, 0x20, 0x67, 0x6c, 0x5f, 0x49, 0x6e, 0x73, // l_Layer = gl_Ins
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // tanceIndex;.    
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, // return out;.}...
	0x04, 0x02, 0x00, 0x01, 0x00, 0x10, 0x00, 0xff, 0xff, 0x50, 0x01,                               // .........P.
};
static const uint8_t vs_ball_st_essl[7026] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x5f, 0x1b, // VSH......N...._.
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // s.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x75, 0x74, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, // arying out.preci
	0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // sion highp float
	0x3b, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, // ;.precision high
	0x70, 0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, // p int;.#define s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // hadow2D(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // e(_sampler, _coo
	0x72, 0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, // rd).#define shad
	0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ow2DProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // r, _coord) textu
	0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // reProj(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, //  _coord).attribu
	0x74, 0x65, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // te vec3 a_normal
	0x3b, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x76, 0x65, 0x63, 0x33, // ;.attribute vec3
	0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x61, 0x74, 0x74, //  a_position;.att
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x61, 0x5f, 0x74, 0x65, // ribute vec2 a_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // xcoord0;.varying
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x3b, 0x0a, 0x76, 0x61, //  float v_eye;.va
	0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, // rying vec3 v_nor
	0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, // mal;.varying vec
	0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, // 2 v_texcoord0;.v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x77, 0x6f, // arying vec3 v_wo
	0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // rldPos;.uniform 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, // vec4 layer;.vec3
	0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, //  instMul(vec3 _v
	0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, // ec, mat3 _mtx) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, //  return ( (_vec)
	0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, //  * (_mtx) ); }.v
	0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, // ec3 instMul(mat3
	0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, //  _mtx, vec3 _vec
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, // ) { return ( (_m
	0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, // tx) * (_vec) ); 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, // }.vec4 instMul(v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, // ec4 _vec, mat4 _
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, // mtx) { return ( 
	0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, // (_vec) * (_mtx) 
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, // ); }.vec4 instMu
	0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, // l(mat4 _mtx, vec
	0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 4 _vec) { return
	0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, //  ( (_mtx) * (_ve
	0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, // c) ); }.float rc
	0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // p(float _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // turn 1.0/_a; }.v
	0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, // ec2 rcp(vec2 _a)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, //  { return vec2(1
	0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, // .0)/_a; }.vec3 r
	0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // cp(vec3 _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, // turn vec3(1.0)/_
	0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, // a; }.vec4 rcp(ve
	0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c4 _a) { return 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, // vec4(1.0)/_a; }.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // vec2 vec2_splat(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // float _x) { retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // rn vec2(_x, _x);
	0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, //  }.vec3 vec3_spl
	0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // at(float _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // eturn vec3(_x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, // x, _x); }.vec4 v
	0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ec4_splat(float 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _x) { return vec
	0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // 4(_x, _x, _x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, // ); }.uvec2 uvec2
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // _splat(uint _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, // { return uvec2(_
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, // x, _x); }.uvec3 
	0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec3_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, //  _x) { return uv
	0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // ec3(_x, _x, _x);
	0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, //  }.uvec4 uvec4_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // plat(uint _x) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, // return uvec4(_x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, //  _x, _x, _x); }.
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, // mat4 mtxFromRows
	0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // (vec4 _0, vec4 _
	0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // 1, vec4 _2, vec4
	0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, //  _3).{.return tr
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, // anspose(mat4(_0,
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, //  _1, _2, _3) );.
	0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, // }.mat4 mtxFromCo
	0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // ls(vec4 _0, vec4
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, //  _1, vec4 _2, ve
	0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c4 _3).{.return 
	0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, // mat4(_0, _1, _2,
	0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, //  _3);.}.mat3 mtx
	0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, // FromRows(vec3 _0
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // , vec3 _1, vec3 
	0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, // _2).{.return tra
	0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, // nspose(mat3(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, // _1, _2) );.}.mat
	0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, // 3 mtxFromCols(ve
	0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, // c3 _0, vec3 _1, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // vec3 _2).{.retur
	0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, // n mat3(_0, _1, _
	0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // 2);.}.uniform ve
	0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, // c4 u_viewRect;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, // niform vec4 u_vi
	0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // ewTexel;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, //  mat4 u_view;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, // iform mat4 u_inv
	0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // View;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // t4 u_proj;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, // rm mat4 u_invPro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // u_viewProj;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, // orm mat4 u_invVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // ewProj;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, // mat4 u_model[32]
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // _modelView;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, // orm mat4 u_model
	0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // ViewProj;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, // m vec4 u_alphaRe
	0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, // f4;.float sqr(co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // nst float v).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // eturn v*v;.}.vec
	0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, // 2 sqr(const vec2
	0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, //  v).{.return v*v
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, // ;.}.vec3 sqr(con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // st vec3 v).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // urn v*v;.}.vec3 
	0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // mul_w1(const vec
	0x33, 0x20, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // 3 v, const mat4 
	0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, // m).{.return v.x*
	0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, // m[0].xyz + (v.y*
	0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, // m[1].xyz + (v.z*
	0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, // m[2].xyz + m[3].
	0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, // xyz));.}.float a
	0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, // cos_approx_divPI
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, // (const float v).
	0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, // {.const float x 
	0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, // = abs(v);.if(1. 
	0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, // - x <= 0.0000610
	0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 3515625).return 
	0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, // (v >= 0.) ? 0. :
	0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  1.;.const float
	0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, //  res = ((-0.1559
	0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, // 72/3.14159265358
	0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, // 9793238462643383
	0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, // 2795) * x + (1.5
	0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, // 6467/3.141592653
	0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, // 5897932384626433
	0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, // 832795) ) * sqrt
	0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // (1. - x);.return
	0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, //  (v >= 0.) ? res
	0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, //  : 1. - res;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, // loat atan2_appro
	0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // x_div2PI(const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // loat y, const fl
	0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // oat x).{.const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, // loat abs_y = abs
	0x28, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // (y);.const float
	0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, //  abs_x = abs(x);
	0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, // .if(abs_x <= 0.0
	0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, // 0006103515625 &&
	0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, //  abs_y <= 0.0000
	0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, // 6103515625).retu
	0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // rn 0.;.const flo
	0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, // at r = (abs_x - 
	0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, // abs_y) / (abs_x 
	0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // + abs_y);.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, // float angle = ((
	0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, // x < 0.) ? (3./8.
	0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, // ) : (1./8.)).+ (
	0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, // 0.211868 /(2.*3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, //  * r * r - 0.987
	0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // 305 /(2.*3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, // 6433832795)) * (
	0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, // (x < 0.) ? -r : 
	0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, // r);.return (y < 
	0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, // 0.) ? -angle : a
	0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, // ngle;.}.float as
	0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, // in_approx_divPI(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, // const float v).{
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, // .const float x =
	0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, //  abs(v);.if(1. -
	0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, //  x <= 0.00006103
	0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, // 515625).return (
	0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, // v >= 0.) ? 0.5 :
	0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, //  -0.5;.const flo
	0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, // at res = ((-0.15
	0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, // 5972/3.141592653
	0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, // 5897932384626433
	0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, // 832795) * x + (1
	0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, // .56467/3.1415926
	0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, // 5358979323846264
	0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, // 33832795) ) * sq
	0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // rt(1. - x);.retu
	0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, // rn (v >= 0.) ? 0
	0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, // .5 - res : -0.5 
	0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, // + res;.}.vec2 ra
	0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, // y_to_equirectang
	0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // ular_uv(const ve
	0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // c3 ray).{.return
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, //  vec2(.0.5 + ata
	0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, // n2_approx_div2PI
	0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, // (ray.y, ray.x),.
	0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, // acos_approx_divP
	0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // I(ray.z));.}.flo
	0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // at InvsRGB(const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, //  float color).{.
	0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, // if (color <= 0.0
	0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, // 4045).return col
	0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, // or * (1.0/12.92)
	0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, // ;.else.return po
	0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, // w(color * (1.0/1
	0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, // .055) + (0.055/1
	0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // .055), 2.4);.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x63, // loat InvRec709(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // onst float color
	0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, // ).{.if (color <=
	0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, //  0.081).return c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, // olor * (1.0/4.5)
	0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, // ;.else.return po
	0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, // w(color * (1.0/1
	0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, // .099) + (0.099/1
	0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, // .099), 1.0/0.45)
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // ;.}.float InvGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, // ma(const float c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, // olor).{.return I
	0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, // nvsRGB(color);.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, // .vec3 InvGamma(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // onst vec3 color)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, // .{.return vec3(I
	0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, // nvGamma(color.x)
	0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // ,InvGamma(color.
	0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // y),InvGamma(colo
	0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, // r.z));.}.vec3 In
	0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // vToneMap(const v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, // ec3 color).{.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, // st float inv_2bh
	0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, //  = 0.5/0.25;.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, // st float bh = 4.
	0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, // 0*0.25 - 2.0;.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, // turn (color - 1.
	0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, // 0 + sqrt(color*(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, // color + bh) + 1.
	0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // 0))*inv_2bh;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // loat sRGB(const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float f).{.float
	0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, //  s;.if (f <= 0.0
	0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, // 031308).s = 12.9
	0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, // 2 * f;.else.s = 
	0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, // 1.055 * pow(f, 1
	0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, // .0/2.4) - 0.055;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // .return s;.}.flo
	0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // at Rec709(const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float f).{.float
	0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, //  s;.if (f <= 0.0
	0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, // 18).s = 4.5 * f;
	0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, // .else.s = 1.099 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, // * pow(f, 0.45) -
	0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, //  0.099;.return s
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // ;.}.float FBGamm
	0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, // a(const float co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, // lor).{.return sR
	0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // GB(color);.}.vec
	0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // 2 FBGamma(const 
	0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // vec2 color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // turn vec2(FBGamm
	0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, // a(color.x),FBGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // ma(color.y));.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, // vec3 FBGamma(con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, // st vec3 color).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, // .return vec3(FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, // amma(color.x),FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, // Gamma(color.y),F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, // BGamma(color.z))
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, // ;.}.float FBTone
	0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // Map(const float 
	0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, // l).{.return l * 
	0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, // ((l*0.25 + 1.0) 
	0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // / (l + 1.0));.}.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, // vec2 FBToneMap(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // onst vec2 color)
	0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, // .{.const float l
	0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, //  = dot(color,vec
	0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, // 2(0.176204+0.010
	0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, // 8109*0.5,0.81298
	0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, // 5+0.0108109*0.5)
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // );.return color 
	0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, // * ((l*0.25 + 1.0
	0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, // ) / (l + 1.0));.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, // }.vec3 FBToneMap
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // (const vec3 colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // r).{.const float
	0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, //  l = dot(color,v
	0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, // ec3(0.176204,0.8
	0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, // 12985,0.0108109)
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // );.return color 
	0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, // * ((l*0.25 + 1.0
	0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, // ) / (l + 1.0));.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, // }.vec4 Additive(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // const vec4 cBase
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, // , const vec4 cBl
	0x65, 0x6e, 0x64, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // end, const float
	0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  percent).{.retu
	0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // rn cBase + cBlen
	0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // d*percent;.}.vec
	0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // 3 Screen (const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // vec3 cBase, cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, // t vec3 cBlend).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, // .return 1.0 - (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, // .0 - cBase) * (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // .0 - cBlend);.}.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6e, // vec4 Screen (con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, // st vec4 cBase, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // onst vec4 cBlend
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, // ).{.return 1.0 -
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, //  (1.0 - cBase) *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, //  (1.0 - cBlend);
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, // .}.vec3 ScreenHD
	0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, // R (const vec3 cB
	0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // ase, const vec3 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // cBlend).{.return
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, //  max(1.0 - (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // - cBase) * (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // - cBlend), vec3(
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // 0.,0.,0.));.}.ve
	0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, // c4 ScreenHDR (co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, // nst vec4 cBase, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // const vec4 cBlen
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, // d).{.return max(
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, // 1.0 - (1.0 - cBa
	0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, // se) * (1.0 - cBl
	0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, // end), vec4(0.,0.
	0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // ,0.,0.));.}.vec4
	0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, //  Multiply (const
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, //  vec4 cBase, con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, // st vec4 cBlend, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, // const float perc
	0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, // ent).{.return cB
	0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, // ase * cBlend*per
	0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, // cent;.}.vec4 Ove
	0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, // rlay (const vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, //  cBase, const ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, // c4 cBlend).{.vec
	0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, // 4 cNew = step(0.
	0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, // 5, cBase);.cNew 
	0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, // = mix(cBase*cBle
	0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, // nd*2.0, 1.0-2.0*
	0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, // (1.0-cBase)*(1.0
	0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, // -cBlend), cNew);
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, // .return cNew;.}.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, // vec4 OverlayHDR 
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, // (const vec4 cBas
	0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // e, const vec4 cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, // lend).{.vec4 cNe
	0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, // w = step(0.5, cB
	0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, // ase);.cNew = max
	0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, // (mix(cBase*cBlen
	0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, // d*2.0, 1.0-2.0*(
	0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, // 1.0-cBase)*(1.0-
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, // cBlend), cNew), 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, // vec4(0.,0.,0.,0.
	0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, // ));.return cNew;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, // .}.vec3 cos_hemi
	0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x63, 0x6f, // sphere_sample(co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, // nst vec2 t).{.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, // nst float phi = 
	0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, // t.y * (2.0*3.141
	0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, // 5926535897932384
	0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x63, // 626433832795);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, // onst float cosTh
	0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // eta = sqrt(1.0 -
	0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, //  t.x);.const flo
	0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, // at sinTheta = sq
	0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // rt(t.x);.float s
	0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x73, 0x69, 0x6e, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, // p,cp;.sincos(phi
	0x2c, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // ,sp,cp);.return 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, // vec3(cp * sinThe
	0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, // ta, cosTheta, sp
	0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, //  * sinTheta);.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, // vec3 rotate_to_v
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, // ector_upper(cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // t vec3 vec, cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, // t vec3 normal).{
	0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, // .if(normal.y > -
	0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // 0.99999).{.const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, //  float h = 1.0/(
	0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x63, // 1.0+normal.y);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, // onst float hz = 
	0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // h*normal.z;.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, // t float hzx = hz
	0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // *normal.x;.retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, // n vec3(.vec.x * 
	0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, // (normal.y+hz*nor
	0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, // mal.z) + vec.y *
	0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, //  normal.x - vec.
	0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, // z * hzx,.vec.y *
	0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, //  normal.y - vec.
	0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, // x * normal.x - v
	0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, // ec.z * normal.z,
	0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // .vec.y * normal.
	0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, // z - vec.x * hzx 
	0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // + vec.z * (norma
	0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, // l.y+h*normal.x*n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, // ormal.x));.}.els
	0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, // e return -vec;.}
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6f, 0x72, // .uniform mat4 or
	0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // ientation;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, // rm mat4 matWorld
	0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // View;.uniform ma
	0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x49, // t4 matWorldViewI
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // nverse;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, // mat4 matWorldVie
	0x77, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, // wProj[2];.void m
	0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x6f, 0x73, // ain().{.vec4 pos
	0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, //  = vec4(a_positi
	0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x70, 0x6f, 0x73, 0x2e, 0x78, 0x79, // on, 1.0);.pos.xy
	0x7a, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, // z = ( (orientati
	0x6f, 0x6e, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x70, 0x6f, 0x73, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, // on) * (pos) ).xy
	0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x73, // z;.const vec3 ns
	0x70, 0x69, 0x6e, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, // pin = ( (orienta
	0x74, 0x69, 0x6f, 0x6e, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x61, 0x5f, // tion) * (vec4(a_
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x2e, // normal, 0.0)) ).
	0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x3d, 0x20, // xyz;.v_normal = 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x20, 0x28, 0x76, 0x65, 0x63, // normalize(( (vec
	0x34, 0x28, 0x6e, 0x73, 0x70, 0x69, 0x6e, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, // 4(nspin, 0.0)) *
	0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, //  (matWorldViewIn
	0x76, 0x65, 0x72, 0x73, 0x65, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x76, // verse) ).xyz);.v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x74, // _texcoord0 = a_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // excoord0;.v_worl
	0x64, 0x50, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, // dPos = ( (matWor
	0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x70, 0x6f, 0x73, 0x29, 0x20, // ldView) * (pos) 
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, // ).xyz;.gl_Positi
	0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, // on = ( (matWorld
	0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x67, 0x6c, 0x5f, 0x49, 0x6e, 0x73, 0x74, // ViewProj[gl_Inst
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x5d, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x70, 0x6f, 0x73, 0x29, // anceID]) * (pos)
	0x20, 0x29, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x3d, 0x20, 0x67, //  );.gl_Layer = g
	0x6c, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x3b, 0x0a, 0x76, 0x5f, // l_InstanceID;.v_
	0x65, 0x79, 0x65, 0x20, 0x3d, 0x20, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x78, 0x20, 0x2b, 0x20, // eye = layer.x + 
	0x67, 0x6c, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x3b, 0x0a, 0x7d, // gl_InstanceID;.}
	0x0a, 0x00,                                                                                     // ..
};
static const uint8_t vs_ball_st_glsl[7370] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0xb7, 0x1c, // VSH......N......
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x23, // ..#version 440.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, //           textur
	0x65, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // e.#define textur
	0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, // e2DLod       tex
	0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // tureLod.#define 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, // texture2DGrad   
	0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, //    textureGrad.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x50, 0x72, 0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // ProjLod   textur
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, // eProjLod.#define
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, //  texture2DProjGr
	0x61, 0x64, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, // ad  textureProjG
	0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, // rad.#define text
	0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, // ureCubeLod     t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, // extureLod.#defin
	0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, // e textureCubeGra
	0x64, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, // d    textureGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x33, 0x44, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // 3D          text
	0x75, 0x72, 0x65, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, // ure.#define text
	0x75, 0x72, 0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, // ure2DLodOffset t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, // extureLodOffset.
	0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, // #define attribut
	0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, // e in.#define var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x75, 0x74, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, // ying out.#define
	0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, //  bgfxShadow2D(_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, // ampler, _coord) 
	0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, //     vec4_splat(t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // exture(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, //  _coord) ).#defi
	0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, // ne bgfxShadow2DP
	0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, // roj(_sampler, _c
	0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // oord) vec4_splat
	0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, // (textureProj(_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, // mpler, _coord) )
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // .attribute vec3 
	0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // a_normal;.attrib
	0x75, 0x74, 0x65, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, // ute vec3 a_posit
	0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x76, // ion;.attribute v
	0x65, 0x63, 0x32, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, // ec2 a_texcoord0;
	0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, // .varying float v
	0x5f, 0x65, 0x79, 0x65, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, // _eye;.varying ve
	0x63, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x76, 0x61, 0x72, // c3 v_normal;.var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // ying vec2 v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, // oord0;.varying v
	0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x3b, 0x0a, // ec3 v_worldPos;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x6c, 0x61, 0x79, // uniform vec4 lay
	0x65, 0x72, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, // er;.vec3 instMul
	0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, // (vec3 _vec, mat3
	0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _mtx) { return 
	0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, // ( (_vec) * (_mtx
	0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, // ) ); }.vec3 inst
	0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, // Mul(mat3 _mtx, v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // ec3 _vec) { retu
	0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, // rn ( (_mtx) * (_
	0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, // vec) ); }.vec4 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, // nstMul(vec4 _vec
	0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // , mat4 _mtx) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, // eturn ( (_vec) *
	0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, //  (_mtx) ); }.vec
	0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, // 4 instMul(mat4 _
	0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, // mtx, vec4 _vec) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, // { return ( (_mtx
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // ) * (_vec) ); }.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // float rcp(float 
	0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, // _a) { return 1.0
	0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, // /_a; }.vec2 rcp(
	0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // vec2 _a) { retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, // n vec2(1.0)/_a; 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, // }.vec3 rcp(vec3 
	0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _a) { return vec
	0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, // 3(1.0)/_a; }.vec
	0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, // 4 rcp(vec4 _a) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, //  return vec4(1.0
	0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, // )/_a; }.vec2 vec
	0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, // 2_splat(float _x
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // ) { return vec2(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // _x, _x); }.vec3 
	0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // vec3_splat(float
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, //  _x) { return ve
	0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, // c3(_x, _x, _x); 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, // }.vec4 vec4_spla
	0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // t(float _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // turn vec4(_x, _x
	0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, // , _x, _x); }.uve
	0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, // c2 uvec2_splat(u
	0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // int _x) { return
	0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, //  uvec2(_x, _x); 
	0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, // }.uvec3 uvec3_sp
	0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // lat(uint _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, // eturn uvec3(_x, 
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, // _x, _x); }.uvec4
	0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, //  uvec4_splat(uin
	0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, // t _x) { return u
	0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // vec4(_x, _x, _x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, //  _x); }.mat4 mtx
	0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, // FromRows(vec4 _0
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // , vec4 _1, vec4 
	0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // _2, vec4 _3).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, // eturn transpose(
	0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, // mat4(_0, _1, _2,
	0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, //  _3) );.}.mat4 m
	0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, // txFromCols(vec4 
	0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, // _0, vec4 _1, vec
	0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, // 4 _2, vec4 _3).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, // .return mat4(_0,
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, //  _1, _2, _3);.}.
	0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, // mat3 mtxFromRows
	0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // (vec3 _0, vec3 _
	0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 1, vec3 _2).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, // turn transpose(m
	0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, // at3(_0, _1, _2) 
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, // );.}.mat3 mtxFro
	0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, // mCols(vec3 _0, v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, // ec3 _1, vec3 _2)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, // .{.return mat3(_
	0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, // 0, _1, _2);.}.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // iform vec4 u_vie
	0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // wRect;.uniform v
	0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, // ec4 u_viewTexel;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // view;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, // t4 u_invView;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, // iform mat4 u_pro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // u_invProj;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, // rm mat4 u_viewPr
	0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // oj;.uniform mat4
	0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, //  u_invViewProj;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, // uniform mat4 u_m
	0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // odel[32];.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, // m mat4 u_modelVi
	0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // ew;.uniform mat4
	0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, //  u_modelViewProj
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, // ;.uniform vec4 u
	0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // _alphaRef4;.floa
	0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // t sqr(const floa
	0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, // t v).{.return v*
	0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, // v;.}.vec2 sqr(co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // nst vec2 v).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // turn v*v;.}.vec3
	0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, //  sqr(const vec3 
	0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, // v).{.return v*v;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x63, // .}.vec3 mul_w1(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, // onst vec3 v, con
	0x73, 0x74, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // st mat4 m).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, // urn v.x*m[0].xyz
	0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, //  + (v.y*m[1].xyz
	0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, //  + (v.z*m[2].xyz
	0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, //  + m[3].xyz));.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, // .float acos_appr
	0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // ox_divPI(const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // loat v).{.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, // float x = abs(v)
	0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, // ;.if(1. - x <= 0
	0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, // .00006103515625)
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, // .return (v >= 0.
	0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // ) ? 0. : 1.;.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, // st float res = (
	0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, // (-0.155972/3.141
	0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, // 5926535897932384
	0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, // 626433832795) * 
	0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, // x + (1.56467/3.1
	0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, // 4159265358979323
	0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, // 84626433832795) 
	0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, // ) * sqrt(1. - x)
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, // ;.return (v >= 0
	0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, // .) ? res : 1. - 
	0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, // res;.}.float ata
	0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, // n2_approx_div2PI
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, // (const float y, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, // const float x).{
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, // .const float abs
	0x5f, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // _y = abs(y);.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, // st float abs_x =
	0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, //  abs(x);.if(abs_
	0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, // x <= 0.000061035
	0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, // 15625 && abs_y <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, // = 0.000061035156
	0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x63, // 25).return 0.;.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, // onst float r = (
	0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, // abs_x - abs_y) /
	0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, //  (abs_x + abs_y)
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, // ;.const float an
	0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, // gle = ((x < 0.) 
	0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, // ? (3./8.) : (1./
	0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, // 8.)).+ (0.211868
	0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, //  /(2.*3.14159265
	0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, // 3589793238462643
	0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, // 3832795) * r * r
	0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, //  - 0.987305 /(2.
	0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, // *3.1415926535897
	0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, // 9323846264338327
	0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, // 95)) * ((x < 0.)
	0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  ? -r : r);.retu
	0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, // rn (y < 0.) ? -a
	0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, // ngle : angle;.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, // float asin_appro
	0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // x_divPI(const fl
	0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // oat v).{.const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, // loat x = abs(v);
	0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, // .if(1. - x <= 0.
	0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, // 00006103515625).
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, // return (v >= 0.)
	0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x63, //  ? 0.5 : -0.5;.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, // onst float res =
	0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, //  ((-0.155972/3.1
	0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, // 4159265358979323
	0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, // 84626433832795) 
	0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, // * x + (1.56467/3
	0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, // .141592653589793
	0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, // 2384626433832795
	0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, // ) ) * sqrt(1. - 
	0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, // x);.return (v >=
	0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, //  0.) ? 0.5 - res
	0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, //  : -0.5 + res;.}
	0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, // .vec2 ray_to_equ
	0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, // irectangular_uv(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, // const vec3 ray).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, // {.return vec2(.0
	0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, // .5 + atan2_appro
	0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, // x_div2PI(ray.y, 
	0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, // ray.x),.acos_app
	0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, // rox_divPI(ray.z)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, // );.}.float InvsR
	0x47, 0x42, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, // GB(const float c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // olor).{.if (colo
	0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, // r <= 0.04045).re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // turn color * (1.
	0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, // 0/12.92);.else.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // eturn pow(color 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, // * (1.0/1.055) + 
	0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, // (0.055/1.055), 2
	0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, // .4);.}.float Inv
	0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // Rec709(const flo
	0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, // at color).{.if (
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, // color <= 0.081).
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, // return color * (
	0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, // 1.0/4.5);.else.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // eturn pow(color 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, // * (1.0/1.099) + 
	0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, // (0.099/1.099), 1
	0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // .0/0.45);.}.floa
	0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // t InvGamma(const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, //  float color).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, // return InvsRGB(c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, // olor);.}.vec3 In
	0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // vGamma(const vec
	0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // 3 color).{.retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, // n vec3(InvGamma(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, // color.x),InvGamm
	0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, // a(color.y),InvGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, // mma(color.z));.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, // .vec3 InvToneMap
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // (const vec3 colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // r).{.const float
	0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, //  inv_2bh = 0.5/0
	0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // .25;.const float
	0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, //  bh = 4.0*0.25 -
	0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, //  2.0;.return (co
	0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, // lor - 1.0 + sqrt
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, // (color*(color + 
	0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, // bh) + 1.0))*inv_
	0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, // 2bh;.}.float sRG
	0x42, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, // B(const float f)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, // .{.float s;.if (
	0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, // f <= 0.0031308).
	0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, // s = 12.92 * f;.e
	0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, // lse.s = 1.055 * 
	0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, // pow(f, 1.0/2.4) 
	0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // - 0.055;.return 
	0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, // s;.}.float Rec70
	0x39, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, // 9(const float f)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, // .{.float s;.if (
	0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, // f <= 0.018).s = 
	0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, // 4.5 * f;.else.s 
	0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, // = 1.099 * pow(f,
	0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, //  0.45) - 0.099;.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // return s;.}.floa
	0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // t FBGamma(const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // float color).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // eturn sRGB(color
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // );.}.vec2 FBGamm
	0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, // a(const vec2 col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // or).{.return vec
	0x32, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // 2(FBGamma(color.
	0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // x),FBGamma(color
	0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, // .y));.}.vec3 FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // amma(const vec3 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // color).{.return 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, // vec3(FBGamma(col
	0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, // or.x),FBGamma(co
	0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, // lor.y),FBGamma(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // olor.z));.}.floa
	0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, // t FBToneMap(cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // t float l).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, // urn l * ((l*0.25
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, //  + 1.0) / (l + 1
	0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, // .0));.}.vec2 FBT
	0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // oneMap(const vec
	0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // 2 color).{.const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, //  float l = dot(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, // olor,vec2(0.1762
	0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, // 04+0.0108109*0.5
	0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, // ,0.812985+0.0108
	0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // 109*0.5));.retur
	0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, // n color * ((l*0.
	0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, // 25 + 1.0) / (l +
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, //  1.0));.}.vec3 F
	0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // BToneMap(const v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, // ec3 color).{.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // st float l = dot
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, // (color,vec3(0.17
	0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, // 6204,0.812985,0.
	0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // 0108109));.retur
	0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, // n color * ((l*0.
	0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, // 25 + 1.0) / (l +
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, //  1.0));.}.vec4 A
	0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // dditive(const ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // c4 cBase, const 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x63, 0x6f, 0x6e, // vec4 cBlend, con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, // st float percent
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // ).{.return cBase
	0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, //  + cBlend*percen
	0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, // t;.}.vec3 Screen
	0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, //  (const vec3 cBa
	0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // se, const vec3 c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // Blend).{.return 
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, // 1.0 - (1.0 - cBa
	0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, // se) * (1.0 - cBl
	0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, // end);.}.vec4 Scr
	0x65, 0x65, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // een (const vec4 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // cBase, const vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 4 cBlend).{.retu
	0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // rn 1.0 - (1.0 - 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // cBase) * (1.0 - 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // cBlend);.}.vec3 
	0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // ScreenHDR (const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, //  vec3 cBase, con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, // st vec3 cBlend).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, // {.return max(1.0
	0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, //  - (1.0 - cBase)
	0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, //  * (1.0 - cBlend
	0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, // ), vec3(0.,0.,0.
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, // ));.}.vec4 Scree
	0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, // nHDR (const vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, //  cBase, const ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // c4 cBlend).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, // urn max(1.0 - (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, // .0 - cBase) * (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, // .0 - cBlend), ve
	0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, // c4(0.,0.,0.,0.))
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, // ;.}.vec4 Multipl
	0x79, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // y (const vec4 cB
	0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // ase, const vec4 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // cBlend, const fl
	0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // oat percent).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, // eturn cBase * cB
	0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, // lend*percent;.}.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x63, 0x6f, // vec4 Overlay (co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, // nst vec4 cBase, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // const vec4 cBlen
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, // d).{.vec4 cNew =
	0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, //  step(0.5, cBase
	0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, // );.cNew = mix(cB
	0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, // ase*cBlend*2.0, 
	0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, // 1.0-2.0*(1.0-cBa
	0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // se)*(1.0-cBlend)
	0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // , cNew);.return 
	0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, // cNew;.}.vec4 Ove
	0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // rlayHDR (const v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, // ec4 cBase, const
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, //  vec4 cBlend).{.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, // vec4 cNew = step
	0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, // (0.5, cBase);.cN
	0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, // ew = max(mix(cBa
	0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, // se*cBlend*2.0, 1
	0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, // .0-2.0*(1.0-cBas
	0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, // e)*(1.0-cBlend),
	0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, //  cNew), vec4(0.,
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 0.,0.,0.));.retu
	0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // rn cNew;.}.vec3 
	0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, // cos_hemisphere_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, // ample(const vec2
	0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, //  t).{.const floa
	0x74, 0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, // t phi = t.y * (2
	0x2e, 0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, // .0*3.14159265358
	0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, // 9793238462643383
	0x32, 0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // 2795);.const flo
	0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, // at cosTheta = sq
	0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x63, // rt(1.0 - t.x);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, // onst float sinTh
	0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, // eta = sqrt(t.x);
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x73, 0x69, // .float sp,cp;.si
	0x6e, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x2c, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x29, 0x3b, // ncos(phi,sp,cp);
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, // .return vec3(cp 
	0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, // * sinTheta, cosT
	0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, // heta, sp * sinTh
	0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, // eta);.}.vec3 rot
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, // ate_to_vector_up
	0x70, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // per(const vec3 v
	0x65, 0x63, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, // ec, const vec3 n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, // ormal).{.if(norm
	0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, // al.y > -0.99999)
	0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, // .{.const float h
	0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, //  = 1.0/(1.0+norm
	0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // al.y);.const flo
	0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // at hz = h*normal
	0x2e, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // .z;.const float 
	0x68, 0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // hzx = hz*normal.
	0x78, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, // x;.return vec3(.
	0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // vec.x * (normal.
	0x79, 0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, // y+hz*normal.z) +
	0x20, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, //  vec.y * normal.
	0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, // x - vec.z * hzx,
	0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // .vec.y * normal.
	0x79, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // y - vec.x * norm
	0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, // al.x - vec.z * n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, // ormal.z,.vec.y *
	0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, //  normal.z - vec.
	0x78, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, // x * hzx + vec.z 
	0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, // * (normal.y+h*no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, // rmal.x*normal.x)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // );.}.else return
	0x20, 0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, //  -vec;.}.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, //  mat4 orientatio
	0x6e, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // n;.uniform mat4 
	0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, // matWorldView;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, // iform mat4 matWo
	0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x3b, 0x0a, // rldViewInverse;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, // uniform mat4 mat
	0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x32, 0x5d, // WorldViewProj[2]
	0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, // ;.void main().{.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // vec4 pos = vec4(
	0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, // a_position, 1.0)
	0x3b, 0x0a, 0x70, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6f, // ;.pos.xyz = ( (o
	0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x70, // rientation) * (p
	0x6f, 0x73, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // os) ).xyz;.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x73, 0x70, 0x69, 0x6e, 0x20, 0x3d, 0x20, 0x28, 0x20, //  vec3 nspin = ( 
	0x28, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x29, 0x20, 0x2a, 0x20, // (orientation) * 
	0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, // (vec4(a_normal, 
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x76, 0x5f, 0x6e, // 0.0)) ).xyz;.v_n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, // ormal = normaliz
	0x65, 0x28, 0x28, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x6e, 0x73, 0x70, 0x69, 0x6e, 0x2c, // e(( (vec4(nspin,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, //  0.0)) * (matWor
	0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x29, 0x20, 0x29, // ldViewInverse) )
	0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // .xyz);.v_texcoor
	0x64, 0x30, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, // d0 = a_texcoord0
	0x3b, 0x0a, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x28, // ;.v_worldPos = (
	0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, //  (matWorldView) 
	0x2a, 0x20, 0x28, 0x70, 0x6f, 0x73, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x67, // * (pos) ).xyz;.g
	0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, // l_Position = ( (
	0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, // matWorldViewProj
	0x5b, 0x67, 0x6c, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x5d, 0x29, // [gl_InstanceID])
	0x20, 0x2a, 0x20, 0x28, 0x70, 0x6f, 0x73, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x4c, //  * (pos) );.gl_L
	0x61, 0x79, 0x65, 0x72, 0x20, 0x3d, 0x20, 0x67, 0x6c, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, // ayer = gl_Instan
	0x63, 0x65, 0x49, 0x44, 0x3b, 0x0a, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x20, 0x3d, 0x20, 0x6c, 0x61, // ceID;.v_eye = la
	0x79, 0x65, 0x72, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x67, 0x6c, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, // yer.x + gl_Insta
	0x6e, 0x63, 0x65, 0x49, 0x44, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,                                     // nceID;.}..
};
static const uint8_t vs_ball_st_dx11[1626] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x8b, 0x4e, 0x06, 0x0a, 0x05, 0x00, 0x05, 0x6c, // VSH......N.....l
	0x61, 0x79, 0x65, 0x72, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x6f, // ayer...........o
	0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x04, 0x00, 0x10, 0x00, 0x04, 0x00, // rientation......
	0x00, 0x00, 0x00, 0x00, 0x0c, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, // .....matWorldVie
	0x77, 0x04, 0x00, 0x50, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x6d, 0x61, 0x74, 0x57, // w..P........matW
	0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x04, // orldViewInverse.
	0x00, 0x90, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, // ..........matWor
	0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x04, 0x02, 0xd0, 0x00, 0x08, 0x00, // ldViewProj......
	0x00, 0x00, 0x00, 0x00, 0xc8, 0x05, 0x00, 0x00, 0x44, 0x58, 0x42, 0x43, 0x36, 0x81, 0xfd, 0xe0, // ........DXBC6...
	0x28, 0xe3, 0x85, 0xb6, 0x24, 0x85, 0x73, 0xd5, 0xfc, 0x72, 0xd9, 0x38, 0x01, 0x00, 0x00, 0x00, // (...$.s..r.8....
	0xc8, 0x05, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, // ........0.......
	0xa0, 0x01, 0x00, 0x00, 0xb8, 0x05, 0x00, 0x00, 0x49, 0x53, 0x47, 0x4e, 0x90, 0x00, 0x00, 0x00, // ........ISGN....
	0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........h.......
	0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, // ................
	0x6f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // o...............
	0x01, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........x.......
	0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, // ................
	0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x03, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x50, // ........NORMAL.P
	0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, // OSITION.TEXCOORD
	0x00, 0x53, 0x56, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x00, 0xab, // .SV_InstanceID..
	0x4f, 0x53, 0x47, 0x4e, 0xd0, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, // OSGN............
	0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x0e, 0x00, 0x00, // ................
	0xad, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x0e, 0x01, 0x00, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x0c, 0x00, 0x00, // ................
	0xa4, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ................
	0x03, 0x00, 0x00, 0x00, 0x07, 0x08, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x0e, 0x00, 0x00, // ................
	0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, 0x43, // SV_POSITION.TEXC
	0x4f, 0x4f, 0x52, 0x44, 0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x53, 0x56, 0x5f, 0x52, // OORD.NORMAL.SV_R
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x72, 0x72, 0x61, 0x79, // enderTargetArray
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x00, 0xab, 0xab, 0x53, 0x48, 0x45, 0x58, 0x10, 0x04, 0x00, 0x00, // Index...SHEX....
	0x50, 0x00, 0x01, 0x00, 0x04, 0x01, 0x00, 0x00, 0x6a, 0x08, 0x00, 0x01, 0x59, 0x08, 0x00, 0x04, // P.......j...Y...
	0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, // F. ........._...
	0x72, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0x72, 0x10, 0x10, 0x00, // r......._...r...
	0x01, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0x32, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ...._...2.......
	0x60, 0x00, 0x00, 0x04, 0x12, 0x10, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, // `...............
	0x67, 0x00, 0x00, 0x04, 0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // g.... ..........
	0x65, 0x00, 0x00, 0x03, 0x12, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, // e.... ......e...
	0xe2, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0x32, 0x20, 0x10, 0x00, // . ......e...2 ..
	0x02, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0x72, 0x20, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....e...r ......
	0x67, 0x00, 0x00, 0x04, 0x12, 0x20, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // g.... ..........
	0x68, 0x00, 0x00, 0x02, 0x03, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, // h.......8...r...
	0x00, 0x00, 0x00, 0x00, 0x56, 0x15, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // ....V.......F. .
	0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, // ........2...r...
	0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ....F. .........
	0x06, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........F.......
	0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // 2...r.......F. .
	0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xa6, 0x1a, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, // F...........r...
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // ....F.......F. .
	0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ........).......
	0x00, 0x00, 0x00, 0x00, 0x0a, 0x10, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // .............@..
	0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....8...........
	0x56, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, // V.......F. .....
	0x0e, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, // ....:.......2...
	0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, // ........F. .....
	0x0d, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, // ....:...........
	0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, // ....F.......2...
	0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, // ........F. .....
	0x0f, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, // ....:...........
	0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, // ....F...........
	0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // . ......F.......
	0x46, 0x8e, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // F. .........:...
	0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....8...r.......
	0x56, 0x15, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // V.......F. .....
	0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....2...r.......
	0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x10, 0x10, 0x00, // F. .............
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, // ....F.......2...
	0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // r.......F. .....
	0x03, 0x00, 0x00, 0x00, 0xa6, 0x1a, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x08, 0x22, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........".......
	0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // F.......F. .....
	0x09, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x08, 0x42, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........B.......
	0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // F.......F. .....
	0x0a, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // F.......F. .....
	0x0b, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x96, 0x07, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // D...........:...
	0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0xe2, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....8.... ......
	0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........V.......
	0x56, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x10, 0x10, 0x00, // V...............
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x12, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ......... ......
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // :......... .....
	0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x32, 0x20, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....6...2 ......
	0x46, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, // F.......8...r...
	0x01, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // ....V.......F. .
	0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0xb2, 0x00, 0x10, 0x00, // ........2.......
	0x00, 0x00, 0x00, 0x00, 0x46, 0x88, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, // ....F. .........
	0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x08, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........F.......
	0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // 2...r.......F. .
	0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x46, 0x03, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x20, 0x10, 0x00, // F...........r ..
	0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // ....F.......F. .
	0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x12, 0x20, 0x10, 0x00, // ........6.... ..
	0x04, 0x00, 0x00, 0x00, 0x0a, 0x10, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x01, // ............>...
	0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // SFI0..... ......
	0x00, 0x03, 0x02, 0x00, 0x01, 0x00, 0x10, 0x00, 0x50, 0x01,                                     // ........P.
};
static const uint8_t vs_ball_st_spv[2976] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x8b, 0x4e, 0x06, 0x0a, 0x05, 0x00, 0x0b, 0x6f, // VSH......N.....o
	0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x04, 0x01, 0x10, 0x00, 0x04, 0x00, // rientation......
	0x00, 0x00, 0x00, 0x00, 0x13, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, // .....matWorldVie
	0x77, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x04, 0x01, 0x90, 0x00, 0x04, 0x00, 0x00, 0x00, // wInverse........
	0x00, 0x00, 0x0c, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x04, // ...matWorldView.
	0x01, 0x50, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, // .P........matWor
	0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x04, 0x02, 0xd0, 0x00, 0x08, 0x00, // ldViewProj......
	0x00, 0x00, 0x00, 0x00, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x02, 0x01, 0x00, 0x00, 0x01, 0x00, // .....layer......
	0x00, 0x00, 0x00, 0x00, 0x0c, 0x0b, 0x00, 0x00, 0x03, 0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, // ..........#.....
	0x0b, 0x00, 0x08, 0x00, 0x2a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, // ....*...........
	0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x86, 0x14, 0x00, 0x00, 0x0a, 0x00, 0x0a, 0x00, // ................
	0x53, 0x50, 0x56, 0x5f, 0x45, 0x58, 0x54, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x76, // SPV_EXT_shader_v
	0x69, 0x65, 0x77, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6c, 0x61, // iewport_index_la
	0x79, 0x65, 0x72, 0x00, 0x0b, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, // yer.........GLSL
	0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, // .std.450........
	0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x75, 0x00, 0x00, 0x00, // ....main....u...
	0x78, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x8d, 0x00, 0x00, 0x00, // x...|...........
	0x91, 0x00, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x99, 0x00, 0x00, 0x00, 0x9c, 0x00, 0x00, 0x00, // ................
	0xa0, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, // ................
	0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, // ........main....
	0x05, 0x00, 0x06, 0x00, 0x32, 0x00, 0x00, 0x00, 0x55, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x42, // ....2...UniformB
	0x6c, 0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x05, 0x00, 0x32, 0x00, 0x00, 0x00, // lock........2...
	0x00, 0x00, 0x00, 0x00, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x00, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, // ....layer.......
	0x32, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, // 2.......orientat
	0x69, 0x6f, 0x6e, 0x00, 0x06, 0x00, 0x07, 0x00, 0x32, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ion.....2.......
	0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x00, 0x00, 0x00, 0x00, // matWorldView....
	0x06, 0x00, 0x08, 0x00, 0x32, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x57, // ....2.......matW
	0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x00, // orldViewInverse.
	0x06, 0x00, 0x08, 0x00, 0x32, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x57, // ....2.......matW
	0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x00, 0x00, 0x00, 0x00, // orldViewProj....
	0x05, 0x00, 0x03, 0x00, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, // ....4...........
	0x75, 0x00, 0x00, 0x00, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x00, 0x00, 0x00, 0x00, // u...a_normal....
	0x05, 0x00, 0x05, 0x00, 0x78, 0x00, 0x00, 0x00, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, // ....x...a_positi
	0x6f, 0x6e, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x61, 0x5f, 0x74, 0x65, // on......|...a_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x05, 0x00, 0x06, 0x00, 0x80, 0x00, 0x00, 0x00, // xcoord0.........
	0x67, 0x6c, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x00, 0x00, 0x00, // gl_InstanceID...
	0x05, 0x00, 0x0a, 0x00, 0x8d, 0x00, 0x00, 0x00, 0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, // ........@entryPo
	0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, // intOutput.gl_Pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x91, 0x00, 0x00, 0x00, // ition...........
	0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, // @entryPointOutpu
	0x74, 0x2e, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x00, 0x05, 0x00, 0x09, 0x00, 0x95, 0x00, 0x00, 0x00, // t.v_eye.........
	0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, // @entryPointOutpu
	0x74, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x00, 0x00, 0x05, 0x00, 0x0a, 0x00, // t.v_normal......
	0x99, 0x00, 0x00, 0x00, 0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, // ....@entryPointO
	0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, // utput.v_texcoord
	0x30, 0x00, 0x00, 0x00, 0x05, 0x00, 0x0a, 0x00, 0x9c, 0x00, 0x00, 0x00, 0x40, 0x65, 0x6e, 0x74, // 0...........@ent
	0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x76, 0x5f, // ryPointOutput.v_
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x09, 0x00, // worldPos........
	0xa0, 0x00, 0x00, 0x00, 0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, // ....@entryPointO
	0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x67, 0x6c, 0x5f, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x00, 0x00, // utput.gl_Layer..
	0x47, 0x00, 0x04, 0x00, 0x31, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // G...1.......@...
	0x48, 0x00, 0x05, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, // H...2.......#...
	0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, 0x32, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ....H...2.......
	0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x32, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ....H...2.......
	0x23, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x32, 0x00, 0x00, 0x00, // #.......H...2...
	0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, // ............H...
	0x32, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, // 2...........H...
	0x32, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, // 2.......#...P...
	0x48, 0x00, 0x05, 0x00, 0x32, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, // H...2...........
	0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, 0x32, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ....H...2.......
	0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x32, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ....H...2.......
	0x23, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x32, 0x00, 0x00, 0x00, // #.......H...2...
	0x03, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, // ............H...
	0x32, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, // 2...........H...
	0x32, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00, // 2.......#.......
	0x48, 0x00, 0x05, 0x00, 0x32, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, // H...2...........
	0x10, 0x00, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00, 0x32, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ....G...2.......
	0x47, 0x00, 0x04, 0x00, 0x34, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // G...4...".......
	0x47, 0x00, 0x04, 0x00, 0x34, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // G...4...!.......
	0x47, 0x00, 0x04, 0x00, 0x75, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // G...u...........
	0x47, 0x00, 0x04, 0x00, 0x78, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // G...x...........
	0x47, 0x00, 0x04, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // G...|...........
	0x47, 0x00, 0x04, 0x00, 0x80, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, // G...........+...
	0x47, 0x00, 0x04, 0x00, 0x8d, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // G...............
	0x47, 0x00, 0x04, 0x00, 0x91, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // G...............
	0x47, 0x00, 0x04, 0x00, 0x95, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // G...............
	0x47, 0x00, 0x04, 0x00, 0x99, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // G...............
	0x47, 0x00, 0x04, 0x00, 0x9c, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // G...............
	0x47, 0x00, 0x04, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, // G...............
	0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x21, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, // ........!.......
	0x02, 0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00, 0x06, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, // ............ ...
	0x17, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ................
	0x17, 0x00, 0x04, 0x00, 0x09, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x15, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........ .......
	0x17, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // ................
	0x15, 0x00, 0x04, 0x00, 0x18, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ........ .......
	0x2b, 0x00, 0x04, 0x00, 0x18, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // +...............
	0x2b, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // +...............
	0x2b, 0x00, 0x04, 0x00, 0x18, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // +...............
	0x2b, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // +..............?
	0x2b, 0x00, 0x04, 0x00, 0x18, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // +.......!.......
	0x2b, 0x00, 0x04, 0x00, 0x18, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // +.......$.......
	0x18, 0x00, 0x04, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // ..../...........
	0x2b, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // +.......0.......
	0x1c, 0x00, 0x04, 0x00, 0x31, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, // ....1.../...0...
	0x1e, 0x00, 0x07, 0x00, 0x32, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, // ....2......./...
	0x2f, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, // /.../...1... ...
	0x33, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, // 3.......2...;...
	0x33, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, // 3...4....... ...
	0x35, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, // 5......./...+...
	0x0b, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, // ....:.......+...
	0x18, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, // ...._....... ...
	0x69, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, // i........... ...
	0x74, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, // t...........;...
	0x74, 0x00, 0x00, 0x00, 0x75, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, // t...u.......;...
	0x74, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, // t...x....... ...
	0x7b, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, // {...........;...
	0x7b, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, // {...|....... ...
	0x7f, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, // ............;...
	0x7f, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, // ............ ...
	0x8c, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, // ............;...
	0x8c, 0x00, 0x00, 0x00, 0x8d, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, // ............ ...
	0x90, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, // ............;...
	0x90, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, // ............ ...
	0x94, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, // ............;...
	0x94, 0x00, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, // ............ ...
	0x98, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, // ............;...
	0x98, 0x00, 0x00, 0x00, 0x99, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, // ............;...
	0x94, 0x00, 0x00, 0x00, 0x9c, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, // ............ ...
	0x9f, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, // ............;...
	0x9f, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00, // ............6...
	0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ................
	0xf8, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, // ........=.......
	0x76, 0x00, 0x00, 0x00, 0x75, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, // v...u...=.......
	0x79, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x09, 0x00, 0x00, 0x00, // y...x...=.......
	0x7d, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, // }...|...=.......
	0x81, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, // ........Q.......
	0xbe, 0x00, 0x00, 0x00, 0x79, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // ....y.......Q...
	0x06, 0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, 0x00, 0x79, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ........y.......
	0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x79, 0x00, 0x00, 0x00, // Q...........y...
	0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xc1, 0x00, 0x00, 0x00, // ....P...........
	0xbe, 0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, // ................
	0x41, 0x00, 0x05, 0x00, 0x35, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, // A...5.......4...
	0x19, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x2f, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, // ....=.../.......
	0xc3, 0x00, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, // ................
	0xc1, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, // ........Q.......
	0xc8, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x00, 0x06, 0x00, // ............R...
	0x0d, 0x00, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0xc1, 0x00, 0x00, 0x00, // ....%...........
	0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xca, 0x00, 0x00, 0x00, // ....Q...........
	0xc5, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x52, 0x00, 0x06, 0x00, 0x0d, 0x00, 0x00, 0x00, // ........R.......
	0x27, 0x01, 0x00, 0x00, 0xca, 0x00, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // '.......%.......
	0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xcc, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, // Q...............
	0x02, 0x00, 0x00, 0x00, 0x52, 0x00, 0x06, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x29, 0x01, 0x00, 0x00, // ....R.......)...
	0xcc, 0x00, 0x00, 0x00, 0x27, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // ....'.......Q...
	0x06, 0x00, 0x00, 0x00, 0xce, 0x00, 0x00, 0x00, 0x76, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........v.......
	0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x76, 0x00, 0x00, 0x00, // Q...........v...
	0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00, // ....Q...........
	0x76, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, // v.......P.......
	0xd1, 0x00, 0x00, 0x00, 0xce, 0x00, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00, // ................
	0x1a, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x35, 0x00, 0x00, 0x00, 0xd2, 0x00, 0x00, 0x00, // ....A...5.......
	0x34, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x2f, 0x00, 0x00, 0x00, // 4.......=.../...
	0xd3, 0x00, 0x00, 0x00, 0xd2, 0x00, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, // ................
	0xd4, 0x00, 0x00, 0x00, 0xd1, 0x00, 0x00, 0x00, 0xd3, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, // ............A...
	0x35, 0x00, 0x00, 0x00, 0xd6, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, // 5.......4...!...
	0x3d, 0x00, 0x04, 0x00, 0x2f, 0x00, 0x00, 0x00, 0xd7, 0x00, 0x00, 0x00, 0xd6, 0x00, 0x00, 0x00, // =.../...........
	0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xd9, 0x00, 0x00, 0x00, 0xd4, 0x00, 0x00, 0x00, // Q...............
	0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xda, 0x00, 0x00, 0x00, // ....Q...........
	0xd4, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, // ........Q.......
	0xdb, 0x00, 0x00, 0x00, 0xd4, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, // ............P...
	0x0d, 0x00, 0x00, 0x00, 0xdc, 0x00, 0x00, 0x00, 0xd9, 0x00, 0x00, 0x00, 0xda, 0x00, 0x00, 0x00, // ................
	0xdb, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x91, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, // ................
	0xdd, 0x00, 0x00, 0x00, 0xd7, 0x00, 0x00, 0x00, 0xdc, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, // ............O...
	0x07, 0x00, 0x00, 0x00, 0xde, 0x00, 0x00, 0x00, 0xdd, 0x00, 0x00, 0x00, 0xdd, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, // ................
	0x07, 0x00, 0x00, 0x00, 0xdf, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, // ............E...
	0xde, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x35, 0x00, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x00, // ....A...5.......
	0x34, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x2f, 0x00, 0x00, 0x00, // 4.......=.../...
	0xe5, 0x00, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, // ................
	0xe6, 0x00, 0x00, 0x00, 0x29, 0x01, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, // ....).......O...
	0x07, 0x00, 0x00, 0x00, 0xe7, 0x00, 0x00, 0x00, 0xe6, 0x00, 0x00, 0x00, 0xe6, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, // ............A...
	0x35, 0x00, 0x00, 0x00, 0xeb, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, // 5.......4...$...
	0x81, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x2f, 0x00, 0x00, 0x00, 0xec, 0x00, 0x00, 0x00, // ....=.../.......
	0xeb, 0x00, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xed, 0x00, 0x00, 0x00, // ................
	0x29, 0x01, 0x00, 0x00, 0xec, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x69, 0x00, 0x00, 0x00, // ).......A...i...
	0xf1, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x00, 0x00, // ....4..._...:...
	0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0xf2, 0x00, 0x00, 0x00, 0xf1, 0x00, 0x00, 0x00, // =...............
	0x70, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0xf4, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, // p...............
	0x81, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xf5, 0x00, 0x00, 0x00, 0xf2, 0x00, 0x00, 0x00, // ................
	0xf4, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x8d, 0x00, 0x00, 0x00, 0xed, 0x00, 0x00, 0x00, // ....>...........
	0x3e, 0x00, 0x03, 0x00, 0x91, 0x00, 0x00, 0x00, 0xf5, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, // >...........>...
	0x95, 0x00, 0x00, 0x00, 0xdf, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x99, 0x00, 0x00, 0x00, // ........>.......
	0x7d, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x9c, 0x00, 0x00, 0x00, 0xe7, 0x00, 0x00, 0x00, // }...>...........
	0x3e, 0x00, 0x03, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, // >...............
	0x38, 0x00, 0x01, 0x00, 0x00, 0x04, 0x02, 0x00, 0x01, 0x00, 0x10, 0x00, 0xff, 0xff, 0x50, 0x01, // 8.............P.
};
static const bgfx::EmbeddedShader vs_ball_st = BGFX_EMBEDDED_SHADER(vs_ball_st);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of fragment shader from fs_ball_trail.sc to fs_ball_trail_st with options: STEREO
static const uint8_t fs_ball_trail_st_mtl[1245] =
{
	0x46, 0x53, 0x48, 0x0b, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x15, 0x74, // FSH..N.........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, // ex_ball_colorSam
	0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x74, // pler...........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x65, 0x78, // ex_ball_colorTex
	0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x77, // ture...........w
	0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, // _h_disableLighti
	0x6e, 0x67, 0x12, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x63, 0x42, 0x61, // ng...........cBa
	0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x01, 0x20, 0x00, 0x01, 0x00, 0x00, 0x00, // se_Alpha.. .....
	0x00, 0x00, 0x1a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, // ...fenvEmissionS
	0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x01, 0x10, // cale_TexWidth...
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // ........tex_ball
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // _color..........
	0x15, 0x04, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, // ....#include <me
	0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, // tal_stdlib>.#inc
	0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, // lude <simd/simd.
	0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, // h>..using namesp
	0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, // ace metal;..stru
	0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, // ct _Global.{.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, //  float4 w_h_disa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x3b, 0x0a, 0x20, 0x20, 0x20, // bleLighting;.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, //  float4 fenvEmis
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, // sionScale_TexWid
	0x74, 0x68, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x63, // th;.    float4 c
	0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, // Base_Alpha;.};..
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // struct xlatMtlMa
	0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // in_out.{.    flo
	0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, // at4 bgfx_FragDat
	0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, // a0 [[color(0)]];
	0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, // .};..struct xlat
	0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, // MtlMain_in.{.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, //  float3 v_normal
	0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, //  [[user(locn1)]]
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x5f, 0x74, // ;.    float2 v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, // excoord0 [[user(
	0x6c, 0x6f, 0x63, 0x6e, 0x32, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x5b, 0x5b, // locn2)]];.};..[[
	0x20, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, //  early_fragment_
	0x74, 0x65, 0x73, 0x74, 0x73, 0x20, 0x5d, 0x5d, 0x20, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, // tests ]] fragmen
	0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, // t xlatMtlMain_ou
	0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, // t xlatMtlMain(xl
	0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, // atMtlMain_in in 
	0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, // [[stage_in]], co
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, // nstant _Global& 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, // _mtl_u [[buffer(
	0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, // 0)]], texture2d<
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // float> tex_ball_
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, // color [[texture(
	0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, 0x65, // 0)]], sampler te
	0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, 0x70, // x_ball_colorSamp
	0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, // ler [[sampler(0)
	0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, // ]]).{.    xlatMt
	0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, // lMain_out out = 
	0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, // {};.    float4 _
	0x32, 0x32, 0x35, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, // 225 = tex_ball_c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, // olor.sample(tex_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ball_colorSample
	0x72, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, // r, in.v_texcoord
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, // 0);.    float4 _
	0x32, 0x33, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, // 233;.    if (_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // l_u.w_h_disableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x7a, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, // ighting.z != 0.0
	0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ).    {.        
	0x5f, 0x32, 0x33, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x32, // _233 = float4(_2
	0x32, 0x35, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, // 25.xyz, in.v_nor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, // mal.x);.    }.  
	0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //   else.    {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, //      _233 = floa
	0x74, 0x34, 0x28, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x42, 0x61, 0x73, // t4(((_mtl_u.cBas
	0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, // e_Alpha.xyz * 0.
	0x30, 0x31, 0x38, 0x37, 0x35, 0x30, 0x30, 0x30, 0x30, 0x37, 0x34, 0x35, 0x30, 0x35, 0x38, 0x30, // 0187500007450580
	0x35, 0x39, 0x36, 0x39, 0x32, 0x33, 0x38, 0x32, 0x38, 0x31, 0x32, 0x35, 0x29, 0x20, 0x2b, 0x20, // 596923828125) + 
	0x5f, 0x32, 0x32, 0x35, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // _225.xyz) * _mtl
	0x5f, 0x75, 0x2e, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, // _u.fenvEmissionS
	0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x2c, // cale_TexWidth.x,
	0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x3b, //  in.v_normal.x);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, // .    }.    out.b
	0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, // gfx_FragData0 = 
	0x5f, 0x32, 0x33, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // _233;.    return
	0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, 0x50, 0x00,                   //  out;.}....P.
};
static const uint8_t fs_ball_trail_st_essl[2223] =
{
	0x46, 0x53, 0x48, 0x0b, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0x08, // FSH..N..........
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // s.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, // arying in.precis
	0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3b, // ion highp float;
	0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // .precision highp
	0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, //  int;.#define sh
	0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adow2D(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //  _coord) texture
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // (_sampler, _coor
	0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, // d).#define shado
	0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // w2DProj(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // eProj(_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x6f, 0x75, 0x74, 0x20, 0x6d, 0x65, 0x64, 0x69, // _coord).out medi
	0x75, 0x6d, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, // ump vec4 bgfx_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // agColor;.varying
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x3b, 0x0a, 0x76, 0x61, //  float v_eye;.va
	0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, // rying vec3 v_nor
	0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, // mal;.varying vec
	0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, // 2 v_texcoord0;.v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x77, 0x6f, // arying vec3 v_wo
	0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, // rldPos;.vec3 ins
	0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, // tMul(vec3 _vec, 
	0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // mat3 _mtx) { ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, // urn ( (_vec) * (
	0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // _mtx) ); }.vec3 
	0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, // instMul(mat3 _mt
	0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, // x, vec3 _vec) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, // return ( (_mtx) 
	0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, // * (_vec) ); }.ve
	0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, // c4 instMul(vec4 
	0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, // _vec, mat4 _mtx)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, //  { return ( (_ve
	0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, // c) * (_mtx) ); }
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, // .vec4 instMul(ma
	0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, // t4 _mtx, vec4 _v
	0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, // ec) { return ( (
	0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, // _mtx) * (_vec) )
	0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, // ; }.float rcp(fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // oat _a) { return
	0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, //  1.0/_a; }.vec2 
	0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, // rcp(vec2 _a) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, // eturn vec2(1.0)/
	0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, // _a; }.vec3 rcp(v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec3 _a) { return
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, //  vec3(1.0)/_a; }
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // .vec4 rcp(vec4 _
	0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, // a) { return vec4
	0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, // (1.0)/_a; }.vec2
	0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, //  vec2_splat(floa
	0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // t _x) { return v
	0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // ec2(_x, _x); }.v
	0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, // ec3 vec3_splat(f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // loat _x) { retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // n vec3(_x, _x, _
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, // x); }.vec4 vec4_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // splat(float _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, // { return vec4(_x
	0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // , _x, _x, _x); }
	0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, // .uvec2 uvec2_spl
	0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // at(uint _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // turn uvec2(_x, _
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, // x); }.uvec3 uvec
	0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, // 3_splat(uint _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, //  { return uvec3(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, // _x, _x, _x); }.u
	0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // vec4 uvec4_splat
	0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // (uint _x) { retu
	0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // rn uvec4(_x, _x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, //  _x, _x); }.mat4
	0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, //  mtxFromRows(vec
	0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, // 4 _0, vec4 _1, v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, // ec4 _2, vec4 _3)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, // .{.return transp
	0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, // ose(mat4(_0, _1,
	0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, //  _2, _3) );.}.ma
	0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, // t4 mtxFromCols(v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, // ec4 _0, vec4 _1,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, //  vec4 _2, vec4 _
	0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, // 3).{.return mat4
	0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, // (_0, _1, _2, _3)
	0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, // ;.}.mat3 mtxFrom
	0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, // Rows(vec3 _0, ve
	0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, // c3 _1, vec3 _2).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, // {.return transpo
	0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, // se(mat3(_0, _1, 
	0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, // _2) );.}.mat3 mt
	0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // xFromCols(vec3 _
	0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // 0, vec3 _1, vec3
	0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, //  _2).{.return ma
	0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, // t3(_0, _1, _2);.
	0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, // }.uniform vec4 u
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // _viewRect;.unifo
	0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, // rm vec4 u_viewTe
	0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, // xel;.uniform mat
	0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // 4 u_view;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, // m mat4 u_invView
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // _proj;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, // at4 u_invProj;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, // niform mat4 u_vi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // ewProj;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, // mat4 u_invViewPr
	0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // oj;.uniform mat4
	0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, //  u_model[32];.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, // iform mat4 u_mod
	0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // elView;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, // mat4 u_modelView
	0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // Proj;.uniform ve
	0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, // c4 u_alphaRef4;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, // uniform sampler2
	0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // D tex_ball_color
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x77, // ;.uniform vec4 w
	0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, // _h_disableLighti
	0x6e, 0x67, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // ng;.uniform vec4
	0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, //  fenvEmissionSca
	0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // le_TexWidth;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, // form vec4 cBase_
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, // Alpha;.void main
	0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // ().{.const vec3 
	0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, // ballImageColor =
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, //  texture(tex_bal
	0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // l_color, v_texco
	0x6f, 0x72, 0x64, 0x30, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x69, 0x66, // ord0.xy).rgb;.if
	0x20, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, //  (w_h_disableLig
	0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x7a, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x0a, 0x62, // hting.z != 0.).b
	0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, // gfx_FragColor = 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, // vec4(ballImageCo
	0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // lor, (v_normal.x
	0x29, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, // ));.else.bgfx_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x28, // agColor = vec4((
	0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x2a, // cBase_Alpha.rgb*
	0x28, 0x30, 0x2e, 0x30, 0x37, 0x35, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x62, // (0.075*0.25) + b
	0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x2a, 0x66, // allImageColor)*f
	0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, // envEmissionScale
	0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x76, 0x5f, // _TexWidth.x, (v_
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,       // normal.x));.}..
};
static const uint8_t fs_ball_trail_st_glsl[2591] =
{
	0x46, 0x53, 0x48, 0x0b, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x0a, // FSH..N..........
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x6f, // ..#version 440.o
	0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, // ut vec4 bgfx_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // gColor;.#define 
	0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x62, 0x67, 0x66, // gl_FragColor bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x0a, 0x23, 0x64, 0x65, 0x66, // x_FragColor.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x20, 0x20, // ine texture2D   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, //        texture.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // Lod       textur
	0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, // eLod.#define tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ture2DGrad      
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, // textureGrad.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, // ine texture2DPro
	0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, // jLod   texturePr
	0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // ojLod.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, // xture2DProjGrad 
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, //  textureProjGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // CubeLod     text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, // ureLod.#define t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, // extureCubeGrad  
	0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, //   textureGrad.#d
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, // efine texture3D 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //          texture
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, 0x65, 0x78, 0x74, // 2DLodOffset text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, // ureLodOffset.#de
	0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, // fine attribute i
	0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // n.#define varyin
	0x67, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, // g in.#define bgf
	0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // xShadow2D(_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, // er, _coord)     
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // vec4_splat(textu
	0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // re(_sampler, _co
	0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, // ord) ).#define b
	0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, // gfxShadow2DProj(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, // ) vec4_splat(tex
	0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // tureProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x76, 0x61, 0x72, // r, _coord) ).var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, // ying float v_eye
	0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // ;.varying vec3 v
	0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // _normal;.varying
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, //  vec2 v_texcoord
	0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // 0;.varying vec3 
	0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, // v_worldPos;.vec3
	0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, //  instMul(vec3 _v
	0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, // ec, mat3 _mtx) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, //  return ( (_vec)
	0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, //  * (_mtx) ); }.v
	0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, // ec3 instMul(mat3
	0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, //  _mtx, vec3 _vec
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, // ) { return ( (_m
	0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, // tx) * (_vec) ); 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, // }.vec4 instMul(v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, // ec4 _vec, mat4 _
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, // mtx) { return ( 
	0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, // (_vec) * (_mtx) 
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, // ); }.vec4 instMu
	0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, // l(mat4 _mtx, vec
	0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 4 _vec) { return
	0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, //  ( (_mtx) * (_ve
	0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, // c) ); }.float rc
	0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // p(float _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // turn 1.0/_a; }.v
	0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, // ec2 rcp(vec2 _a)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, //  { return vec2(1
	0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, // .0)/_a; }.vec3 r
	0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // cp(vec3 _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, // turn vec3(1.0)/_
	0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, // a; }.vec4 rcp(ve
	0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c4 _a) { return 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, // vec4(1.0)/_a; }.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // vec2 vec2_splat(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // float _x) { retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // rn vec2(_x, _x);
	0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, //  }.vec3 vec3_spl
	0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // at(float _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // eturn vec3(_x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, // x, _x); }.vec4 v
	0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ec4_splat(float 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _x) { return vec
	0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // 4(_x, _x, _x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, // ); }.uvec2 uvec2
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // _splat(uint _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, // { return uvec2(_
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, // x, _x); }.uvec3 
	0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec3_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, //  _x) { return uv
	0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // ec3(_x, _x, _x);
	0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, //  }.uvec4 uvec4_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // plat(uint _x) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, // return uvec4(_x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, //  _x, _x, _x); }.
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, // mat4 mtxFromRows
	0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // (vec4 _0, vec4 _
	0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // 1, vec4 _2, vec4
	0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, //  _3).{.return tr
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, // anspose(mat4(_0,
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, //  _1, _2, _3) );.
	0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, // }.mat4 mtxFromCo
	0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // ls(vec4 _0, vec4
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, //  _1, vec4 _2, ve
	0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c4 _3).{.return 
	0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, // mat4(_0, _1, _2,
	0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, //  _3);.}.mat3 mtx
	0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, // FromRows(vec3 _0
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // , vec3 _1, vec3 
	0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, // _2).{.return tra
	0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, // nspose(mat3(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, // _1, _2) );.}.mat
	0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, // 3 mtxFromCols(ve
	0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, // c3 _0, vec3 _1, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // vec3 _2).{.retur
	0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, // n mat3(_0, _1, _
	0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // 2);.}.uniform ve
	0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, // c4 u_viewRect;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, // niform vec4 u_vi
	0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // ewTexel;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, //  mat4 u_view;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, // iform mat4 u_inv
	0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // View;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // t4 u_proj;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, // rm mat4 u_invPro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // u_viewProj;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, // orm mat4 u_invVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // ewProj;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, // mat4 u_model[32]
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // _modelView;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, // orm mat4 u_model
	0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // ViewProj;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, // m vec4 u_alphaRe
	0x66, 0x34, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, // f4;.uniform samp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, // ler2D tex_ball_c
	0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // olor;.uniform ve
	0x63, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, // c4 w_h_disableLi
	0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // ghting;.uniform 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, // vec4 fenvEmissio
	0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x3b, // nScale_TexWidth;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // .uniform vec4 cB
	0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, // ase_Alpha;.void 
	0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // main().{.const v
	0x65, 0x63, 0x33, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, // ec3 ballImageCol
	0x6f, 0x72, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, // or = texture(tex
	0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x76, 0x5f, 0x74, // _ball_color, v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x72, 0x67, 0x62, // excoord0.xy).rgb
	0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, // ;.if (w_h_disabl
	0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x7a, 0x20, 0x21, 0x3d, 0x20, 0x30, // eLighting.z != 0
	0x2e, 0x29, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // .).gl_FragColor 
	0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, // = vec4(ballImage
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // Color, (v_normal
	0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, // .x));.else.gl_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x28, // agColor = vec4((
	0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x2a, // cBase_Alpha.rgb*
	0x28, 0x30, 0x2e, 0x30, 0x37, 0x35, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x62, // (0.075*0.25) + b
	0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x2a, 0x66, // allImageColor)*f
	0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, // envEmissionScale
	0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x76, 0x5f, // _TexWidth.x, (v_
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,       // normal.x));.}..
};
static const uint8_t fs_ball_trail_st_dx11[749] =
{
	0x46, 0x53, 0x48, 0x0b, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x13, 0x77, // FSH..N.........w
	0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, // _h_disableLighti
	0x6e, 0x67, 0x12, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x65, 0x6e, // ng...........fen
	0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, // vEmissionScale_T
	0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // exWidth.........
	0x00, 0x0b, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x00, 0x20, // ..cBase_Alpha.. 
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // ........tex_ball
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // _color0.........
	0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, // .tex_ball_color0
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4c, 0x02, 0x00, 0x00, 0x44, 0x58, 0x42, // .........L...DXB
	0x43, 0x5f, 0xe5, 0x18, 0xf2, 0xc6, 0xf8, 0xcb, 0x4b, 0x80, 0x4a, 0x2b, 0xe7, 0x9b, 0x5a, 0x00, // C_......K.J+..Z.
	0x83, 0x01, 0x00, 0x00, 0x00, 0x4c, 0x02, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, // .....L.......,..
	0x00, 0xd0, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x49, 0x53, 0x47, 0x4e, 0x9c, 0x00, 0x00, // .........ISGN...
	0x00, 0x05, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, // ................
	0x00, 0x8c, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // ................
	0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0e, 0x02, 0x00, // ................
	0x00, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // ................
	0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, // ................
	0x00, 0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, // .SV_POSITION.TEX
	0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x4f, 0x53, 0x47, // COORD.NORMAL.OSG
	0x4e, 0x2c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, // N,........... ..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x0f, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x00, 0xab, // .....SV_TARGET..
	0xab, 0x53, 0x48, 0x45, 0x58, 0x40, 0x01, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, // .SHEX@...P...P..
	0x00, 0x6a, 0x28, 0x00, 0x01, 0x59, 0x00, 0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, // .j(..Y...F. ....
	0x00, 0x03, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, // .....Z....`.....
	0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, // .X....p......UU.
	0x00, 0x62, 0x10, 0x00, 0x03, 0x22, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x62, 0x10, 0x00, // .b...".......b..
	0x03, 0x32, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0xf2, 0x20, 0x10, // .2.......e.... .
	0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, // .....h.......9..
	0x08, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, // .........*. ....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, // ......@......E..
	0x8b, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0xe2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, // .....CU.........
	0x00, 0x46, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x36, 0x79, 0x10, 0x00, 0x00, 0x00, 0x00, // .F.......6y.....
	0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0d, 0x72, 0x00, 0x10, // ..`......2...r..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // .....F. ........
	0x00, 0x02, 0x40, 0x00, 0x00, 0x9a, 0x99, 0x99, 0x3c, 0x9a, 0x99, 0x99, 0x3c, 0x9a, 0x99, 0x99, // ..@.....<...<...
	0x3c, 0x00, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, // <............8..
	0x08, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, // .r.......F......
	0x00, 0x06, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, // ... .........7..
	0x09, 0x72, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, // .r .............
	0x00, 0x96, 0x07, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, // .........F......
	0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x10, 0x10, // .6.... .........
	0x00, 0x01, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x01, 0x00, 0x00, 0x30, 0x00,                   // .....>.....0.
};
static const uint8_t fs_ball_trail_st_spv[2016] =
{
	0x46, 0x53, 0x48, 0x0b, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x13, 0x77, // FSH..N.........w
	0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, // _h_disableLighti
	0x6e, 0x67, 0x12, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x63, 0x42, 0x61, // ng...........cBa
	0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x01, 0x20, 0x00, 0x01, 0x00, 0x00, 0x00, // se_Alpha.. .....
	0x00, 0x00, 0x1a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, // ...fenvEmissionS
	0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x01, 0x10, // cale_TexWidth...
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // ........tex_ball
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, // _color0.......".
	0x58, 0x07, 0x00, 0x00, 0x03, 0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x0b, 0x00, 0x08, 0x00, // X.....#.........
	0xea, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x0b, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, // ........GLSL.std
	0x2e, 0x34, 0x35, 0x30, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, // .450............
	0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x08, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // ................
	0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x83, 0x00, 0x00, 0x00, // main............
	0x97, 0x00, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, // ................
	0x10, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, // ................
	0x05, 0x00, 0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, // ................
	0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x27, 0x00, 0x00, 0x00, // main........'...
	0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, // tex_ball_colorSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x2a, 0x00, 0x00, 0x00, // mpler.......*...
	0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x65, // tex_ball_colorTe
	0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x4e, 0x00, 0x00, 0x00, // xture.......N...
	0x55, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00, 0x00, // UniformBlock....
	0x06, 0x00, 0x08, 0x00, 0x4e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0x5f, 0x68, 0x5f, // ....N.......w_h_
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x00, // disableLighting.
	0x06, 0x00, 0x0a, 0x00, 0x4e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x66, 0x65, 0x6e, 0x76, // ....N.......fenv
	0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, // EmissionScale_Te
	0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x4e, 0x00, 0x00, 0x00, // xWidth......N...
	0x02, 0x00, 0x00, 0x00, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x00, // ....cBase_Alpha.
	0x05, 0x00, 0x03, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, // ....P...........
	0x7f, 0x00, 0x00, 0x00, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x00, 0x00, 0x00, 0x00, // ....v_normal....
	0x05, 0x00, 0x05, 0x00, 0x83, 0x00, 0x00, 0x00, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, // ........v_texcoo
	0x72, 0x64, 0x30, 0x00, 0x05, 0x00, 0x06, 0x00, 0x97, 0x00, 0x00, 0x00, 0x62, 0x67, 0x66, 0x78, // rd0.........bgfx
	0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // _FragData0..G...
	0x27, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // '...".......G...
	0x27, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // '...!.......G...
	0x2a, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // *...".......G...
	0x2a, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, // *...!.......H...
	0x4e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // N.......#.......
	0x48, 0x00, 0x05, 0x00, 0x4e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, // H...N.......#...
	0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x4e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ....H...N.......
	0x23, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00, 0x4e, 0x00, 0x00, 0x00, // #... ...G...N...
	0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x50, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, // ....G...P..."...
	0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x50, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, // ....G...P...!...
	0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, // ....G...........
	0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x83, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, // ....G...........
	0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x97, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, // ....G...........
	0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x21, 0x00, 0x03, 0x00, // ............!...
	0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00, // ................
	0x16, 0x00, 0x03, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x19, 0x00, 0x09, 0x00, // ........ .......
	0x08, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x17, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x17, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // ................
	0x17, 0x00, 0x04, 0x00, 0x19, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ................
	0x20, 0x00, 0x04, 0x00, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, //  ...&...........
	0x3b, 0x00, 0x04, 0x00, 0x26, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ;...&...'.......
	0x20, 0x00, 0x04, 0x00, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, //  ...)...........
	0x3b, 0x00, 0x04, 0x00, 0x29, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ;...)...*.......
	0x15, 0x00, 0x04, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ....-... .......
	0x2b, 0x00, 0x04, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // +...-...........
	0x2b, 0x00, 0x04, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // +...-...2.......
	0x1b, 0x00, 0x03, 0x00, 0x36, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, // ....6.......+...
	0x07, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x05, 0x00, // ....D...........
	0x4e, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, // N...............
	0x20, 0x00, 0x04, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x4e, 0x00, 0x00, 0x00, //  ...O.......N...
	0x3b, 0x00, 0x04, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ;...O...P.......
	0x15, 0x00, 0x04, 0x00, 0x51, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....Q... .......
	0x2b, 0x00, 0x04, 0x00, 0x51, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // +...Q...R.......
	0x20, 0x00, 0x04, 0x00, 0x53, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, //  ...S...........
	0x14, 0x00, 0x02, 0x00, 0x56, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x51, 0x00, 0x00, 0x00, // ....V...+...Q...
	0x5b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x2d, 0x00, 0x00, 0x00, // [.......+...-...
	0x63, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x64, 0x00, 0x00, 0x00, // c....... ...d...
	0x02, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, // ........+.......
	0x68, 0x00, 0x00, 0x00, 0x9a, 0x99, 0x99, 0x3c, 0x20, 0x00, 0x04, 0x00, 0x7e, 0x00, 0x00, 0x00, // h......< ...~...
	0x01, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x7e, 0x00, 0x00, 0x00, // ........;...~...
	0x7f, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x82, 0x00, 0x00, 0x00, // ........ .......
	0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x82, 0x00, 0x00, 0x00, // ........;.......
	0x83, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x96, 0x00, 0x00, 0x00, // ........ .......
	0x03, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x96, 0x00, 0x00, 0x00, // ........;.......
	0x97, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, // ........6.......
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, // ................
	0x05, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, // ....=.......(...
	0x27, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, // '...=.......+...
	0x2a, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x19, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, // *...=...........
	0x7f, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, // ....=...........
	0x83, 0x00, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x36, 0x00, 0x00, 0x00, 0xdf, 0x00, 0x00, 0x00, // ....V...6.......
	0x2b, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, // +...(...W.......
	0xe1, 0x00, 0x00, 0x00, 0xdf, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, // ............O...
	0x19, 0x00, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xe1, 0x00, 0x00, 0x00, 0xe1, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, // ............A...
	0x53, 0x00, 0x00, 0x00, 0xb6, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, // S.......P...2...
	0x52, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb7, 0x00, 0x00, 0x00, // R...=...........
	0xb6, 0x00, 0x00, 0x00, 0xb7, 0x00, 0x05, 0x00, 0x56, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, // ........V.......
	0xb7, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xd1, 0x00, 0x00, 0x00, // ....D...........
	0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xb8, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, // ................
	0xc1, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // ............Q...
	0x07, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbd, 0x00, 0x00, 0x00, 0xe1, 0x00, 0x00, 0x00, // Q...............
	0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbe, 0x00, 0x00, 0x00, // ....Q...........
	0xe1, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, // ........Q.......
	0xbf, 0x00, 0x00, 0x00, 0xe1, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, // ............P...
	0x0d, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xbd, 0x00, 0x00, 0x00, 0xbe, 0x00, 0x00, 0x00, // ................
	0xbf, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xd1, 0x00, 0x00, 0x00, // ................
	0xf8, 0x00, 0x02, 0x00, 0xc1, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x64, 0x00, 0x00, 0x00, // ........A...d...
	0xc2, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x63, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, // ....P...c...=...
	0x0d, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x00, 0xc2, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, // ............O...
	0x19, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, // ................
	0x19, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, // ............h...
	0x81, 0x00, 0x05, 0x00, 0x19, 0x00, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, // ................
	0xb5, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x53, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, // ....A...S.......
	0x50, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x5b, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, // P.......[...=...
	0x07, 0x00, 0x00, 0x00, 0xc9, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, // ................
	0x19, 0x00, 0x00, 0x00, 0xca, 0x00, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, 0xc9, 0x00, 0x00, 0x00, // ................
	0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xcc, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, // Q...............
	0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xcd, 0x00, 0x00, 0x00, // ....Q...........
	0xca, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, // ........Q.......
	0xce, 0x00, 0x00, 0x00, 0xca, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // ............Q...
	0x07, 0x00, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xca, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00, 0xcd, 0x00, 0x00, 0x00, // P...............
	0xce, 0x00, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xcc, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, // ................
	0xd1, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xd1, 0x00, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, // ................
	0x0d, 0x00, 0x00, 0x00, 0xe9, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, // ................
	0xd0, 0x00, 0x00, 0x00, 0xc1, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x97, 0x00, 0x00, 0x00, // ........>.......
	0xe9, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00, 0x00, 0x00, 0x30, 0x00, // ........8.....0.
};
static const bgfx::EmbeddedShader fs_ball_trail_st = BGFX_EMBEDDED_SHADER(fs_ball_trail_st);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of fragment shader from fs_ball_debug.sc to fs_ball_debug_st with options: STEREO
static const uint8_t fs_ball_debug_st_mtl[318] =
{
	0x46, 0x53, 0x48, 0x0b, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x01, // FSH..N........(.
	0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, // ..#include <meta
	0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, // l_stdlib>.#inclu
	0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, // de <simd/simd.h>
	0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, // ..using namespac
	0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, // e metal;..struct
	0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, //  xlatMtlMain_out
	0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, // .{.    float4 bg
	0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, // fx_FragData0 [[c
	0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x5b, // olor(0)]];.};..[
	0x5b, 0x20, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, // [ early_fragment
	0x5f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x20, 0x5d, 0x5d, 0x20, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, // _tests ]] fragme
	0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, // nt xlatMtlMain_o
	0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x29, // ut xlatMtlMain()
	0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // .{.    xlatMtlMa
	0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, // in_out out = {};
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, // .    out.bgfx_Fr
	0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // agData0 = float4
	0x28, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // (1.0);.    retur
	0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, 0x00, 0x00,             // n out;.}......
};
static const uint8_t fs_ball_debug_st_essl[1843] =
{
	0x46, 0x53, 0x48, 0x0b, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x07, // FSH..N........ .
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // s.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, // arying in.precis
	0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3b, // ion highp float;
	0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // .precision highp
	0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, //  int;.#define sh
	0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adow2D(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //  _coord) texture
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // (_sampler, _coor
	0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, // d).#define shado
	0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // w2DProj(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // eProj(_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x6f, 0x75, 0x74, 0x20, 0x6d, 0x65, 0x64, 0x69, // _coord).out medi
	0x75, 0x6d, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, // ump vec4 bgfx_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // agColor;.varying
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x3b, 0x0a, 0x76, 0x61, //  float v_eye;.va
	0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, // rying vec3 v_nor
	0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, // mal;.varying vec
	0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, // 2 v_texcoord0;.v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x77, 0x6f, // arying vec3 v_wo
	0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, // rldPos;.vec3 ins
	0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, // tMul(vec3 _vec, 
	0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // mat3 _mtx) { ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, // urn ( (_vec) * (
	0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // _mtx) ); }.vec3 
	0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, // instMul(mat3 _mt
	0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, // x, vec3 _vec) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, // return ( (_mtx) 
	0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, // * (_vec) ); }.ve
	0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, // c4 instMul(vec4 
	0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, // _vec, mat4 _mtx)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, //  { return ( (_ve
	0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, // c) * (_mtx) ); }
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, // .vec4 instMul(ma
	0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, // t4 _mtx, vec4 _v
	0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, // ec) { return ( (
	0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, // _mtx) * (_vec) )
	0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, // ; }.float rcp(fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // oat _a) { return
	0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, //  1.0/_a; }.vec2 
	0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, // rcp(vec2 _a) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, // eturn vec2(1.0)/
	0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, // _a; }.vec3 rcp(v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec3 _a) { return
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, //  vec3(1.0)/_a; }
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // .vec4 rcp(vec4 _
	0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, // a) { return vec4
	0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, // (1.0)/_a; }.vec2
	0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, //  vec2_splat(floa
	0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // t _x) { return v
	0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // ec2(_x, _x); }.v
	0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, // ec3 vec3_splat(f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // loat _x) { retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // n vec3(_x, _x, _
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, // x); }.vec4 vec4_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // splat(float _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, // { return vec4(_x
	0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // , _x, _x, _x); }
	0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, // .uvec2 uvec2_spl
	0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // at(uint _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // turn uvec2(_x, _
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, // x); }.uvec3 uvec
	0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, // 3_splat(uint _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, //  { return uvec3(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, // _x, _x, _x); }.u
	0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // vec4 uvec4_splat
	0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // (uint _x) { retu
	0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // rn uvec4(_x, _x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, //  _x, _x); }.mat4
	0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, //  mtxFromRows(vec
	0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, // 4 _0, vec4 _1, v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, // ec4 _2, vec4 _3)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, // .{.return transp
	0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, // ose(mat4(_0, _1,
	0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, //  _2, _3) );.}.ma
	0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, // t4 mtxFromCols(v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, // ec4 _0, vec4 _1,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, //  vec4 _2, vec4 _
	0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, // 3).{.return mat4
	0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, // (_0, _1, _2, _3)
	0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, // ;.}.mat3 mtxFrom
	0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, // Rows(vec3 _0, ve
	0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, // c3 _1, vec3 _2).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, // {.return transpo
	0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, // se(mat3(_0, _1, 
	0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, // _2) );.}.mat3 mt
	0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // xFromCols(vec3 _
	0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // 0, vec3 _1, vec3
	0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, //  _2).{.return ma
	0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, // t3(_0, _1, _2);.
	0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, // }.uniform vec4 u
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // _viewRect;.unifo
	0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, // rm vec4 u_viewTe
	0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, // xel;.uniform mat
	0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // 4 u_view;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, // m mat4 u_invView
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // _proj;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, // at4 u_invProj;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, // niform mat4 u_vi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // ewProj;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, // mat4 u_invViewPr
	0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // oj;.uniform mat4
	0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, //  u_model[32];.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, // iform mat4 u_mod
	0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // elView;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, // mat4 u_modelView
	0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // Proj;.uniform ve
	0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, // c4 u_alphaRef4;.
	0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x62, 0x67, // void main().{.bg
	0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, // fx_FragColor = v
	0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // ec4_splat(1.0);.
	0x7d, 0x0a, 0x00,                                                                               // }..
};
static const uint8_t fs_ball_debug_st_glsl[2213] =
{
	0x46, 0x53, 0x48, 0x0b, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x92, 0x08, // FSH..N..........
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x6f, // ..#version 440.o
	0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, // ut vec4 bgfx_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // gColor;.#define 
	0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x62, 0x67, 0x66, // gl_FragColor bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x0a, 0x23, 0x64, 0x65, 0x66, // x_FragColor.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x20, 0x20, // ine texture2D   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, //        texture.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // Lod       textur
	0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, // eLod.#define tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ture2DGrad      
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, // textureGrad.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, // ine texture2DPro
	0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, // jLod   texturePr
	0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // ojLod.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, // xture2DProjGrad 
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, //  textureProjGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // CubeLod     text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, // ureLod.#define t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, // extureCubeGrad  
	0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, //   textureGrad.#d
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, // efine texture3D 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //          texture
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, 0x65, 0x78, 0x74, // 2DLodOffset text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, // ureLodOffset.#de
	0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, // fine attribute i
	0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // n.#define varyin
	0x67, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, // g in.#define bgf
	0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // xShadow2D(_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, // er, _coord)     
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // vec4_splat(textu
	0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // re(_sampler, _co
	0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, // ord) ).#define b
	0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, // gfxShadow2DProj(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, // ) vec4_splat(tex
	0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // tureProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x76, 0x61, 0x72, // r, _coord) ).var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, // ying float v_eye
	0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // ;.varying vec3 v
	0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // _normal;.varying
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, //  vec2 v_texcoord
	0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // 0;.varying vec3 
	0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, // v_worldPos;.vec3
	0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, //  instMul(vec3 _v
	0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, // ec, mat3 _mtx) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, //  return ( (_vec)
	0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, //  * (_mtx) ); }.v
	0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, // ec3 instMul(mat3
	0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, //  _mtx, vec3 _vec
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, // ) { return ( (_m
	0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, // tx) * (_vec) ); 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, // }.vec4 instMul(v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, // ec4 _vec, mat4 _
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, // mtx) { return ( 
	0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, // (_vec) * (_mtx) 
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, // ); }.vec4 instMu
	0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, // l(mat4 _mtx, vec
	0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 4 _vec) { return
	0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, //  ( (_mtx) * (_ve
	0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, // c) ); }.float rc
	0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // p(float _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // turn 1.0/_a; }.v
	0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, // ec2 rcp(vec2 _a)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, //  { return vec2(1
	0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, // .0)/_a; }.vec3 r
	0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // cp(vec3 _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, // turn vec3(1.0)/_
	0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, // a; }.vec4 rcp(ve
	0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c4 _a) { return 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, // vec4(1.0)/_a; }.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // vec2 vec2_splat(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // float _x) { retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // rn vec2(_x, _x);
	0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, //  }.vec3 vec3_spl
	0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // at(float _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // eturn vec3(_x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, // x, _x); }.vec4 v
	0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ec4_splat(float 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _x) { return vec
	0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // 4(_x, _x, _x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, // ); }.uvec2 uvec2
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // _splat(uint _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, // { return uvec2(_
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, // x, _x); }.uvec3 
	0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec3_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, //  _x) { return uv
	0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // ec3(_x, _x, _x);
	0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, //  }.uvec4 uvec4_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // plat(uint _x) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, // return uvec4(_x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, //  _x, _x, _x); }.
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, // mat4 mtxFromRows
	0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // (vec4 _0, vec4 _
	0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // 1, vec4 _2, vec4
	0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, //  _3).{.return tr
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, // anspose(mat4(_0,
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, //  _1, _2, _3) );.
	0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, // }.mat4 mtxFromCo
	0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // ls(vec4 _0, vec4
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, //  _1, vec4 _2, ve
	0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c4 _3).{.return 
	0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, // mat4(_0, _1, _2,
	0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, //  _3);.}.mat3 mtx
	0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, // FromRows(vec3 _0
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // , vec3 _1, vec3 
	0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, // _2).{.return tra
	0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, // nspose(mat3(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, // _1, _2) );.}.mat
	0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, // 3 mtxFromCols(ve
	0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, // c3 _0, vec3 _1, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // vec3 _2).{.retur
	0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, // n mat3(_0, _1, _
	0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // 2);.}.uniform ve
	0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, // c4 u_viewRect;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, // niform vec4 u_vi
	0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // ewTexel;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, //  mat4 u_view;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, // iform mat4 u_inv
	0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // View;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // t4 u_proj;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, // rm mat4 u_invPro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // u_viewProj;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, // orm mat4 u_invVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // ewProj;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, // mat4 u_model[32]
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // _modelView;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, // orm mat4 u_model
	0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // ViewProj;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, // m vec4 u_alphaRe
	0x66, 0x34, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, // f4;.void main().
	0x7b, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, // {.gl_FragColor =
	0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x29, //  vec4_splat(1.0)
	0x3b, 0x0a, 0x7d, 0x0a, 0x00,                                                                   // ;.}..
};
static const uint8_t fs_ball_debug_st_dx11[350] =
{
	0x46, 0x53, 0x48, 0x0b, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x01, // FSH..N........H.
	0x00, 0x00, 0x44, 0x58, 0x42, 0x43, 0xb3, 0xf4, 0x00, 0xf4, 0x3e, 0xa7, 0x8c, 0xf6, 0x28, 0x03, // ..DXBC....>...(.
	0xe6, 0x7e, 0x60, 0x98, 0xaa, 0x5f, 0x01, 0x00, 0x00, 0x00, 0x48, 0x01, 0x00, 0x00, 0x03, 0x00, // .~`.._....H.....
	0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x49, 0x53, // ..,...........IS
	0x47, 0x4e, 0x9c, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x80, 0x00, // GN..............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x95, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, // ................
	0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x8c, 0x00, // ................
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, // ................
	0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, // ......SV_POSITIO
	0x4e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, // N.TEXCOORD.NORMA
	0x4c, 0x00, 0x4f, 0x53, 0x47, 0x4e, 0x2c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, // L.OSGN,.........
	0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, // .. .............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x54, 0x41, 0x52, // ..........SV_TAR
	0x47, 0x45, 0x54, 0x00, 0xab, 0xab, 0x53, 0x48, 0x45, 0x58, 0x3c, 0x00, 0x00, 0x00, 0x50, 0x00, // GET...SHEX<...P.
	0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x6a, 0x28, 0x00, 0x01, 0x65, 0x00, 0x00, 0x03, 0xf2, 0x20, // ......j(..e.... 
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x08, 0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, // ......6.... ....
	0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, // ...@.....?...?..
	0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x3e, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,             // .?...?>.......
};
static const uint8_t fs_ball_debug_st_spv[374] =
{
	0x46, 0x53, 0x48, 0x0b, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x01, // FSH..N........`.
	0x00, 0x00, 0x03, 0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x0b, 0x00, 0x08, 0x00, 0x79, 0x00, // ....#.........y.
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, // ................
	0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, // ......GLSL.std.4
	0x35, 0x30, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, // 50..............
	0x00, 0x00, 0x0f, 0x00, 0x06, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, // ..............ma
	0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00, // in....K.........
	0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x09, 0x00, // ................
	0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, 0x05, 0x00, // ................
	0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, // ......main......
	0x06, 0x00, 0x4b, 0x00, 0x00, 0x00, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, // ..K...bgfx_FragD
	0x61, 0x74, 0x61, 0x30, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x4b, 0x00, 0x00, 0x00, 0x1e, 0x00, // ata0..G...K.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x21, 0x00, // ..............!.
	0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00, 0x06, 0x00, // ................
	0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x06, 0x00, // .. .............
	0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x26, 0x00, // ......+.......&.
	0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x20, 0x00, 0x04, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x03, 0x00, // .....? ...J.....
	0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x4b, 0x00, // ......;...J...K.
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x07, 0x00, 0x08, 0x00, 0x00, 0x00, 0x78, 0x00, // ......,.......x.
	0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x26, 0x00, // ..&...&...&...&.
	0x00, 0x00, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, // ..6.............
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00, 0x3e, 0x00, // ..............>.
	0x03, 0x00, 0x4b, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, // ..K...x.......8.
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00,                                                             // ......
};
static const bgfx::EmbeddedShader fs_ball_debug_st = BGFX_EMBEDDED_SHADER(fs_ball_debug_st);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of fragment shader from fs_ball.sc to fs_ball_equirectangular_decal_st with options: STEREO EQUIRECTANGULAR DECAL
static const uint8_t fs_ball_equirectangular_decal_st_mtl[11844] =
{
	0x46, 0x53, 0x48, 0x0b, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x15, 0x74, // FSH..N.........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, // ex_ball_colorSam
	0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x74, // pler...........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x65, 0x78, // ex_ball_colorTex
	0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, // ture...........t
	0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, // ex_envSampler...
	0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x54, // ........tex_envT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // exture..........
	0x16, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, // .tex_diffuse_env
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Sampler.........
	0x00, 0x16, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, // ..tex_diffuse_en
	0x76, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // vTexture........
	0x00, 0x00, 0x15, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, // ...tex_ball_deca
	0x6c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // lSampler........
	0x00, 0x00, 0x15, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, // ...tex_ball_deca
	0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // lTexture........
	0x00, 0x00, 0x19, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, // ...tex_ball_play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, // fieldSampler....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // .......tex_ball_
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // playfieldTexture
	0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x62, 0x61, 0x6c, 0x6c, 0x4c, // ...........ballL
	0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x0a, 0x00, 0x01, 0x0a, 0x00, 0x00, 0x00, 0x00, // ightPos.........
	0x00, 0x07, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x14, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, // ..matView.......
	0x00, 0x00, 0x00, 0x1e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, // ....Roughness_Wr
	0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, // apL_Edge_Thickne
	0x73, 0x73, 0x12, 0x01, 0x80, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x63, 0x41, 0x6d, // ss...........cAm
	0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, // bient_LightRange
	0x12, 0x01, 0x40, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x62, 0x61, 0x6c, 0x6c, 0x4c, // ..@........ballL
	0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0a, 0xa0, 0x01, // ightEmission....
	0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // .......fDisableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, // ighting_top_belo
	0x77, 0x12, 0x01, 0x60, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x65, 0x6e, 0x76, // w..`........fenv
	0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, // EmissionScale_Te
	0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x01, 0x50, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // xWidth..P.......
	0x13, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, // .w_h_disableLigh
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x01, 0xa0, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x63, // ting...........c
	0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x01, 0x70, 0x02, 0x01, 0x00, // Base_Alpha..p...
	0x00, 0x00, 0x00, 0x00, 0x0c, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, // .....matWorldVie
	0x77, 0x14, 0x01, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x6d, 0x61, 0x74, 0x50, // w..@........matP
	0x72, 0x6f, 0x6a, 0x14, 0x02, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x69, 0x6e, // roj...........in
	0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, // vTableRes_reflec
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x01, 0x90, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, // tion...........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x10, 0x00, 0x00, // ex_ball_color...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, // ........tex_diff
	0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // use_env.........
	0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, // ..tex_ball_decal
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x74, 0x65, 0x78, 0x5f, 0x62, // ...........tex_b
	0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x10, 0x00, 0x00, // all_playfield...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x35, 0x2b, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, // .......5+..#incl
	0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, // ude <metal_stdli
	0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, // b>.#include <sim
	0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, // d/simd.h>..using
	0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, //  namespace metal
	0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, // ;..struct _Globa
	0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, // l.{.    float4x4
	0x20, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //  matView;.    fl
	0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, // oat4x4 matWorldV
	0x69, 0x65, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, // iew;.    float4x
	0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, 0x20, 0x20, // 4 matProj[2];.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, //   float4 ballLig
	0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x31, 0x30, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // htPos[10];.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, // loat4 ballLightE
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x31, 0x30, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, // mission[10];.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, //  float4 cAmbient
	0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x3b, 0x0a, 0x20, 0x20, 0x20, // _LightRange;.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, //  float4 fenvEmis
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, // sionScale_TexWid
	0x74, 0x68, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x66, // th;.    float4 f
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, // DisableLighting_
	0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // top_below;.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, // loat4 cBase_Alph
	0x61, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x52, 0x6f, // a;.    float4 Ro
	0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, // ughness_WrapL_Ed
	0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x20, 0x20, // ge_Thickness;.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, //   float4 invTabl
	0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b, // eRes_reflection;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, // .    float4 w_h_
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x3b, // disableLighting;
	0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x66, 0x6c, // .};..constant fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x34, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, // oat _1834 = {};.
	0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, // .struct xlatMtlM
	0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // ain_out.{.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, // oat4 bgfx_FragDa
	0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, // ta0 [[color(0)]]
	0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, // ;.};..struct xla
	0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, // tMtlMain_in.{.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x20, 0x5b, 0x5b, //   float v_eye [[
	0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, // user(locn0)]];. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, //    float3 v_norm
	0x61, 0x6c, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, // al [[user(locn1)
	0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, // ]];.    float2 v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, // _texcoord0 [[use
	0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x32, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // r(locn2)]];.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, // float3 v_worldPo
	0x73, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x33, 0x29, 0x5d, // s [[user(locn3)]
	0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x5b, 0x5b, 0x20, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x5f, // ];.};..[[ early_
	0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x20, 0x5d, // fragment_tests ]
	0x5d, 0x20, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // ] fragment xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // tlMain_out xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // tlMain(xlatMtlMa
	0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, // in_in in [[stage
	0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, // _in]], constant 
	0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, // _Global& _mtl_u 
	0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, // [[buffer(0)]], t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, // exture2d<float> 
	0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x5b, // tex_ball_color [
	0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, // [texture(0)]], t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, // exture2d<float> 
	0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x20, // tex_diffuse_env 
	0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, // [[texture(2)]], 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, // texture2d<float>
	0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x20, //  tex_ball_decal 
	0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x33, 0x29, 0x5d, 0x5d, 0x2c, 0x20, // [[texture(3)]], 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x3c, // texture2d_array<
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // float> tex_ball_
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, // playfield [[text
	0x75, 0x72, 0x65, 0x28, 0x34, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ure(4)]], sample
	0x72, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // r tex_ball_color
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // Sampler [[sample
	0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, // r(0)]], sampler 
	0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x53, // tex_diffuse_envS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ampler [[sampler
	0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, // (2)]], sampler t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x53, 0x61, 0x6d, // ex_ball_decalSam
	0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x33, // pler [[sampler(3
	0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, 0x65, 0x78, // )]], sampler tex
	0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, // _ball_playfieldS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ampler [[sampler
	0x28, 0x34, 0x29, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, // (4)]]).{.    xla
	0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, // tMtlMain_out out
	0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  = {};.    float
	0x34, 0x20, 0x5f, 0x31, 0x38, 0x36, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, // 4 _1864;.    do.
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //     {.        fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x30, 0x38, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, // oat3 _1008 = fas
	0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x2d, 0x69, 0x6e, // t::normalize(-in
	0x2e, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x29, 0x3b, 0x0a, 0x20, 0x20, // .v_worldPos);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, //       float3 _10
	0x31, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // 10 = fast::norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // lize(in.v_normal
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // );.        float
	0x33, 0x20, 0x5f, 0x31, 0x30, 0x31, 0x33, 0x20, 0x3d, 0x20, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, // 3 _1013 = reflec
	0x74, 0x28, 0x5f, 0x31, 0x30, 0x30, 0x38, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x31, 0x30, 0x29, 0x3b, // t(_1008, _1010);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // .        float _
	0x31, 0x30, 0x31, 0x36, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x30, 0x30, 0x38, // 1016 = dot(_1008
	0x2c, 0x20, 0x5f, 0x31, 0x30, 0x31, 0x33, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // , _1013);.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x30, 0x33, 0x31, 0x20, 0x3d, //   float4 _1031 =
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x2d, 0x5f, 0x31, 0x30, 0x31, 0x33, 0x2c, 0x20, //  float4(-_1013, 
	0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, // 0.0) * _mtl_u.ma
	0x74, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // tView;.        f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x35, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x30, // loat _1252 = _10
	0x33, 0x31, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // 31.y;.        fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x35, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x30, 0x33, // oat _1253 = _103
	0x31, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // 1.x;.        flo
	0x61, 0x74, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // at _1835;.      
	0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, //   do.        {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x20, 0x5f, 0x31, 0x32, 0x36, 0x38, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x31, 0x32, //  _1268 = abs(_12
	0x35, 0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 52);.           
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x36, 0x39, 0x20, 0x3d, 0x20, 0x61, //  float _1269 = a
	0x62, 0x73, 0x28, 0x5f, 0x31, 0x32, 0x35, 0x33, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // bs(_1253);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x32, 0x36, //        if ((_126
	0x39, 0x20, 0x3c, 0x3d, 0x20, 0x36, 0x2e, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, // 9 <= 6.103515625
	0x65, 0x2d, 0x30, 0x35, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x32, 0x36, 0x38, 0x20, // e-05) && (_1268 
	0x3c, 0x3d, 0x20, 0x36, 0x2e, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x65, 0x2d, // <= 6.103515625e-
	0x30, 0x35, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 05)).           
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  {.             
	0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x35, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, //    _1835 = 0.0;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // break;.         
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    }.           
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x38, 0x33, 0x20, 0x3d, 0x20, 0x28, //  float _1283 = (
	0x5f, 0x31, 0x32, 0x36, 0x39, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x32, 0x36, 0x38, 0x29, 0x20, 0x2f, // _1269 - _1268) /
	0x20, 0x28, 0x5f, 0x31, 0x32, 0x36, 0x39, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x32, 0x36, 0x38, 0x29, //  (_1269 + _1268)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // ;.            fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x39, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, // oat _1297 = fma(
	0x66, 0x6d, 0x61, 0x28, 0x30, 0x2e, 0x30, 0x33, 0x33, 0x37, 0x31, 0x39, 0x38, 0x33, 0x37, 0x36, // fma(0.0337198376
	0x36, 0x35, 0x35, 0x35, 0x37, 0x38, 0x36, 0x31, 0x33, 0x32, 0x38, 0x31, 0x32, 0x35, 0x20, 0x2a, // 65557861328125 *
	0x20, 0x5f, 0x31, 0x32, 0x38, 0x33, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x38, 0x33, 0x2c, 0x20, 0x2d, //  _1283, _1283, -
	0x30, 0x2e, 0x31, 0x35, 0x37, 0x31, 0x33, 0x34, 0x34, 0x37, 0x33, 0x33, 0x32, 0x33, 0x38, 0x32, // 0.15713447332382
	0x32, 0x30, 0x32, 0x31, 0x34, 0x38, 0x34, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x28, 0x5f, 0x31, // 2021484375), (_1
	0x32, 0x35, 0x33, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x2d, 0x5f, // 253 < 0.0) ? (-_
	0x31, 0x32, 0x38, 0x33, 0x29, 0x20, 0x3a, 0x20, 0x5f, 0x31, 0x32, 0x38, 0x33, 0x2c, 0x20, 0x28, // 1283) : _1283, (
	0x5f, 0x31, 0x32, 0x35, 0x33, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x30, // _1253 < 0.0) ? 0
	0x2e, 0x33, 0x37, 0x35, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x31, 0x32, 0x35, 0x29, 0x3b, 0x0a, 0x20, // .375 : 0.125);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x35, //            _1835
	0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x32, 0x35, 0x32, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, //  = (_1252 < 0.0)
	0x20, 0x3f, 0x20, 0x28, 0x2d, 0x5f, 0x31, 0x32, 0x39, 0x37, 0x29, 0x20, 0x3a, 0x20, 0x5f, 0x31, //  ? (-_1297) : _1
	0x32, 0x39, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 297;.           
	0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  break;.        
	0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, // } while(false);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, //         float _1
	0x32, 0x35, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x30, 0x33, 0x31, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, // 256 = _1031.z;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x38, //        float _18
	0x33, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, // 36;.        do. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x31, 0x32, //      float _1312
	0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x31, 0x32, 0x35, 0x36, 0x29, 0x3b, 0x0a, 0x20, //  = abs(_1256);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, //            if ((
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x33, 0x31, 0x32, 0x29, 0x20, 0x3c, 0x3d, 0x20, // 1.0 - _1312) <= 
	0x36, 0x2e, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x65, 0x2d, 0x30, 0x35, 0x29, // 6.103515625e-05)
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, // .            {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //                _
	0x31, 0x38, 0x33, 0x36, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x32, 0x35, 0x36, 0x20, 0x3e, 0x3d, // 1836 = (_1256 >=
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x30, 0x20, 0x3a, 0x20, 0x31, 0x2e, //  0.0) ? 0.0 : 1.
	0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0;.             
	0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    break;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x32, 0x32, 0x20, //     float _1322 
	0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x34, 0x39, 0x36, 0x34, 0x37, 0x34, // = fma(-0.0496474
	0x32, 0x38, 0x30, 0x39, 0x35, 0x33, 0x34, 0x30, 0x37, 0x32, 0x38, 0x37, 0x35, 0x39, 0x37, 0x36, // 2809534072875976
	0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x5f, 0x31, 0x33, 0x31, 0x32, 0x2c, 0x20, 0x30, 0x2e, 0x34, // 5625, _1312, 0.4
	0x39, 0x38, 0x30, 0x34, 0x39, 0x39, 0x31, 0x34, 0x38, 0x33, 0x36, 0x38, 0x38, 0x33, 0x35, 0x34, // 9804991483688354
	0x34, 0x39, 0x32, 0x31, 0x38, 0x37, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 4921875);.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x32, //       float _132
	0x35, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, // 5 = sqrt(1.0 - _
	0x31, 0x33, 0x31, 0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1312);.         
	0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x36, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x32, 0x35, //    _1836 = (_125
	0x36, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x5f, 0x31, 0x33, // 6 >= 0.0) ? (_13
	0x32, 0x32, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x33, 0x32, 0x35, 0x29, 0x20, 0x3a, 0x20, 0x66, 0x6d, // 22 * _1325) : fm
	0x61, 0x28, 0x2d, 0x5f, 0x31, 0x33, 0x32, 0x32, 0x2c, 0x20, 0x5f, 0x31, 0x33, 0x32, 0x35, 0x2c, // a(-_1322, _1325,
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  1.0);.         
	0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    break;.      
	0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, //   } while(false)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // ;.        float4
	0x20, 0x5f, 0x31, 0x33, 0x35, 0x32, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, //  _1352 = tex_bal
	0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, // l_decal.sample(t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x53, 0x61, 0x6d, // ex_ball_decalSam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // pler, in.v_texco
	0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // ord0);.        f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x33, 0x36, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x61, // loat3 _1362 = fa
	0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x74, 0x65, 0x78, 0x5f, // st::max(fma(tex_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // ball_color.sampl
	0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // e(tex_ball_color
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // Sampler, float2(
	0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x35, 0x2c, 0x20, 0x5f, 0x31, 0x38, // 0.5 + _1835, _18
	0x33, 0x36, 0x29, 0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x28, 0x5f, 0x31, 0x30, 0x31, // 36), level((_101
	0x36, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x36, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x33, 0x38, // 6 > 0.6000000238
	0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x20, 0x3f, // 4185791015625) ?
	0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x30, 0x31, 0x36, 0x2c, 0x20, 0x31, 0x35, 0x2e, 0x30, //  fma(_1016, 15.0
	0x2c, 0x20, 0x2d, 0x39, 0x2e, 0x30, 0x29, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, // , -9.0) : 0.0)).
	0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, // xyz - float3(1.0
	0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2d, // ), float3(1.0) -
	0x20, 0x5f, 0x31, 0x33, 0x35, 0x32, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, //  _1352.xyz, floa
	0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // t3(1.0)), float3
	0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // (0.0));.        
	0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, // if (_mtl_u.w_h_d
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x7a, // isableLighting.z
	0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  != 0.0).       
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //  {.            _
	0x31, 0x38, 0x36, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, // 1864 = float4(_1
	0x33, 0x36, 0x32, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x42, 0x61, 0x73, // 362, _mtl_u.cBas
	0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // e_Alpha.w);.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, //         break;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        }.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x34, 0x20, 0x3d, 0x20, //  float3 _1064 = 
	0x5f, 0x31, 0x33, 0x36, 0x32, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x5f, // _1362 * (0.5 * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, // mtl_u.fenvEmissi
	0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, // onScale_TexWidth
	0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // .x);.        flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x38, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x6d, 0x74, // at3 _1068 = (_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, // l_u.matWorldView
	0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, //  * float4(0.0, 0
	0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, // .0, 1.0, 0.0)).x
	0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // yz;.        floa
	0x74, 0x20, 0x5f, 0x31, 0x30, 0x37, 0x31, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, // t _1071 = dot(_1
	0x30, 0x36, 0x38, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x31, 0x33, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 068, _1013);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x30, 0x38, 0x32, //      float _1082
	0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x30, 0x36, 0x38, 0x2c, 0x20, 0x69, 0x6e, //  = dot(_1068, in
	0x2e, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x20, 0x2d, 0x20, 0x28, 0x5f, // .v_worldPos - (_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, // mtl_u.matWorldVi
	0x65, 0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x30, 0x2c, // ew * float4(0.0,
	0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, //  0.0, 0.0, 1.0))
	0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x31, 0x30, 0x37, 0x31, 0x3b, 0x0a, 0x20, // .xyz) / _1071;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, //        float4 _1
	0x30, 0x39, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, // 097 = _mtl_u.mat
	0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x65, // Proj[uint(in.v_e
	0x79, 0x65, 0x29, 0x5d, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x69, 0x6e, // ye)] * float4(in
	0x2e, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x20, 0x2d, 0x20, 0x28, 0x5f, // .v_worldPos - (_
	0x31, 0x30, 0x31, 0x33, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x30, 0x38, 0x32, 0x29, 0x2c, 0x20, 0x31, // 1013 * _1082), 1
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // .0);.        flo
	0x61, 0x74, 0x32, 0x20, 0x5f, 0x31, 0x31, 0x30, 0x38, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, // at2 _1108 = floa
	0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // t2(0.5) + (float
	0x32, 0x28, 0x5f, 0x31, 0x30, 0x39, 0x37, 0x2e, 0x78, 0x2c, 0x20, 0x2d, 0x5f, 0x31, 0x30, 0x39, // 2(_1097.x, -_109
	0x37, 0x2e, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2f, 0x20, 0x5f, 0x31, // 7.y) * (0.5 / _1
	0x30, 0x39, 0x37, 0x2e, 0x77, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 097.w));.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x31, 0x32, 0x32, 0x20, 0x3d, 0x20, //  float3 _1122 = 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, 0x31, 0x30, 0x38, 0x20, 0x2b, 0x20, // float3((_1108 + 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, // float2(_mtl_u.w_
	0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, // h_disableLightin
	0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x5f, // g.x, 0.0)).x, (_
	0x31, 0x31, 0x30, 0x38, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x31, // 1108 + float2(_1
	0x38, 0x33, 0x34, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x69, 0x6e, // 834, 0.0)).y, in
	0x2e, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .v_eye);.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x33, 0x37, 0x31, 0x20, 0x3d, 0x20, //  float4 _1371 = 
	0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, // tex_ball_playfie
	0x6c, 0x64, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, // ld.sample(tex_ba
	0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, // ll_playfieldSamp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x31, 0x32, 0x32, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x75, // ler, _1122.xy, u
	0x69, 0x6e, 0x74, 0x28, 0x72, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x31, 0x31, 0x32, 0x32, 0x2e, 0x7a, // int(rint(_1122.z
	0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // )));.        flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x31, 0x33, 0x39, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, // at3 _1139 = floa
	0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, 0x31, 0x30, 0x38, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, // t3((_1108 - floa
	0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, // t2(_mtl_u.w_h_di
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, // sableLighting.x,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x30, 0x38, //  0.0)).x, (_1108
	0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x31, 0x38, 0x33, 0x34, 0x2c, //  - float2(_1834,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x65, //  0.0)).y, in.v_e
	0x79, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // ye);.        flo
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x33, 0x38, 0x30, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, // at4 _1380 = tex_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x73, // ball_playfield.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, // ample(tex_ball_p
	0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // layfieldSampler,
	0x20, 0x5f, 0x31, 0x31, 0x33, 0x39, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, //  _1139.xy, uint(
	0x72, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x31, 0x31, 0x33, 0x39, 0x2e, 0x7a, 0x29, 0x29, 0x29, 0x3b, // rint(_1139.z)));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // .        float3 
	0x5f, 0x31, 0x31, 0x35, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, // _1157 = float3((
	0x5f, 0x31, 0x31, 0x30, 0x38, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, // _1108 + float2(0
	0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x34, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, // .0, _1834)).x, (
	0x5f, 0x31, 0x31, 0x30, 0x38, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, // _1108 + float2(0
	0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, // .0, _mtl_u.w_h_d
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, // isableLighting.y
	0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x3b, // )).y, in.v_eye);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // .        float4 
	0x5f, 0x31, 0x33, 0x38, 0x39, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // _1389 = tex_ball
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // _playfield.sampl
	0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, // e(tex_ball_playf
	0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x31, // ieldSampler, _11
	0x35, 0x37, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x72, 0x69, 0x6e, 0x74, // 57.xy, uint(rint
	0x28, 0x5f, 0x31, 0x31, 0x35, 0x37, 0x2e, 0x7a, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // (_1157.z)));.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x31, 0x37, //      float3 _117
	0x35, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, 0x31, 0x30, // 5 = float3((_110
	0x38, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, // 8 - float2(0.0, 
	0x5f, 0x31, 0x38, 0x33, 0x34, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x30, // _1834)).x, (_110
	0x38, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, // 8 - float2(0.0, 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, // _mtl_u.w_h_disab
	0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x79, // leLighting.y)).y
	0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // , in.v_eye);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x33, 0x39, //      float4 _139
	0x38, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, // 8 = tex_ball_pla
	0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, // yfield.sample(te
	0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, // x_ball_playfield
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x31, 0x37, 0x35, 0x2e, 0x78, // Sampler, _1175.x
	0x79, 0x2c, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x72, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x31, 0x31, // y, uint(rint(_11
	0x37, 0x35, 0x2e, 0x7a, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 75.z)));.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x37, 0x3b, 0x0a, 0x20, //  float3 _1837;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x21, 0x28, 0x28, 0x28, //        if ((!(((
	0x28, 0x5f, 0x31, 0x31, 0x30, 0x38, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, // (_1108.x < 0.0) 
	0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x30, 0x38, 0x2e, 0x78, 0x20, 0x3e, 0x20, 0x31, 0x2e, // || (_1108.x > 1.
	0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x30, 0x38, 0x2e, 0x79, 0x20, // 0)) || (_1108.y 
	0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x30, // < 0.0)) || (_110
	0x38, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x26, 0x26, 0x20, // 8.y > 1.0))) && 
	0x28, 0x21, 0x28, 0x5f, 0x31, 0x30, 0x38, 0x32, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, // (!(_1082 <= 0.0)
	0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, // )).        {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x37, 0x20, 0x3d, //          _1837 =
	0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x31, 0x30, 0x36, 0x34, 0x2c, 0x20, 0x28, 0x28, 0x28, 0x5f, //  mix(_1064, (((_
	0x31, 0x33, 0x37, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x33, 0x38, 0x30, // 1371.xyz + _1380
	0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x33, 0x38, 0x39, 0x2e, 0x78, 0x79, // .xyz) + _1389.xy
	0x7a, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x33, 0x39, 0x38, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, // z) + _1398.xyz) 
	0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x73, // * 0.25, float3(s
	0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, // moothstep(0.0, 0
	0x2e, 0x31, 0x35, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x35, 0x39, 0x36, 0x30, 0x34, 0x36, 0x34, // .150000005960464
	0x34, 0x37, 0x37, 0x35, 0x33, 0x39, 0x30, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x37, // 4775390625, _107
	0x31, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x69, 0x6e, 0x76, 0x54, // 1) * _mtl_u.invT
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, // ableRes_reflecti
	0x6f, 0x6e, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // on.z));.        
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, // }.        else. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x30, //      _1837 = _10
	0x36, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, // 64;.        }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x32, //       float3 _12
	0x31, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x69, 0x6e, 0x28, 0x5f, // 13 = fast::min(_
	0x31, 0x38, 0x33, 0x37, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x35, 0x2e, // 1837, float3(15.
	0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // 0));.        flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x32, 0x31, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // at3 _1217 = _mtl
	0x5f, 0x75, 0x2e, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, // _u.cBase_Alpha.x
	0x79, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x37, 0x35, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, // yz * 0.075000002
	0x39, 0x38, 0x30, 0x32, 0x33, 0x32, 0x32, 0x33, 0x38, 0x37, 0x36, 0x39, 0x35, 0x33, 0x31, 0x32, // 9802322387695312
	0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 5;.        float
	0x33, 0x20, 0x5f, 0x31, 0x32, 0x32, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, // 3 _1220 = fast::
	0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x32, 0x31, 0x37, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x2c, // max(_1217 * 2.0,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, //  float3(0.100000
	0x30, 0x30, 0x31, 0x34, 0x39, 0x30, 0x31, 0x31, 0x36, 0x31, 0x31, 0x39, 0x33, 0x38, 0x34, 0x37, // 0014901161193847
	0x36, 0x35, 0x36, 0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 65625));.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x32, 0x32, 0x35, 0x20, 0x3d, 0x20, //  float3 _1225 = 
	0x5f, 0x31, 0x32, 0x31, 0x33, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, // _1213 * _mtl_u.c
	0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, // Base_Alpha.xyz;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, //         float _1
	0x34, 0x31, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, // 415 = fast::max(
	0x5f, 0x31, 0x32, 0x31, 0x37, 0x2e, 0x78, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, // _1217.x, fast::m
	0x61, 0x78, 0x28, 0x5f, 0x31, 0x32, 0x31, 0x37, 0x2e, 0x79, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x31, // ax(_1217.y, _121
	0x37, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // 7.z));.        f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, 0x32, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, // loat _1423 = fas
	0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x32, 0x32, 0x30, 0x2e, 0x78, 0x2c, 0x20, // t::max(_1220.x, 
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x32, 0x32, 0x30, 0x2e, // fast::max(_1220.
	0x79, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x32, 0x30, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // y, _1220.z));.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, 0x33, //       float _143
	0x31, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x34, 0x31, 0x35, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x34, 0x32, // 1 = _1415 + _142
	0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 3;.        float
	0x33, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 3 _1840;.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x38, 0x35, 0x31, 0x3b, 0x0a, 0x20, //  float3 _1851;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x31, 0x34, 0x33, 0x31, //        if (_1431
	0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  > 1.0).        
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // {.            fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, 0x33, 0x36, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, // oat _1436 = 1.0 
	0x2f, 0x20, 0x5f, 0x31, 0x34, 0x33, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // / _1431;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x35, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, //      _1851 = _12
	0x32, 0x30, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x33, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 20 * _1436;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x30, 0x20, 0x3d, 0x20, //         _1840 = 
	0x5f, 0x31, 0x32, 0x31, 0x37, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x33, 0x36, 0x3b, 0x0a, 0x20, // _1217 * _1436;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        }.       
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, //  else.        {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x35, //             _185
	0x31, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x32, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 1 = _1220;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x30, 0x20, 0x3d, 0x20, 0x5f, //        _1840 = _
	0x31, 0x32, 0x31, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, // 1217;.        }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x31, 0x38, 0x34, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, // 1846;.        if
	0x20, 0x28, 0x28, 0x74, 0x72, 0x75, 0x65, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x34, 0x31, //  ((true && (_141
	0x35, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, // 5 > 0.0)) || (_1
	0x34, 0x32, 0x33, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // 423 > 0.0)).    
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x37, 0x3b, 0x0a, //   float3 _1847;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x34, //             _184
	0x37, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, // 7 = float3(0.0);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // .            flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x34, 0x36, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // at3 _1466;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, //        for (int 
	0x5f, 0x31, 0x38, 0x33, 0x38, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x38, // _1838 = 0; _1838
	0x20, 0x3c, 0x20, 0x31, 0x30, 0x3b, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x37, 0x20, 0x3d, 0x20, 0x5f, //  < 10; _1847 = _
	0x31, 0x34, 0x36, 0x36, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x38, 0x2b, 0x2b, 0x29, 0x0a, 0x20, // 1466, _1838++). 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //            {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, //              flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x38, 0x35, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // at3 _1855;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, //            do.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, //               {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x35, 0x33, 0x30, //     float3 _1530
	0x20, 0x3d, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x56, 0x69, //  = (_mtl_u.matVi
	0x65, 0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // ew * float4(_mtl
	0x5f, 0x75, 0x2e, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, // _u.ballLightPos[
	0x5f, 0x31, 0x38, 0x33, 0x38, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, // _1838].xyz, 1.0)
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x77, 0x6f, 0x72, // ).xyz - in.v_wor
	0x6c, 0x64, 0x50, 0x6f, 0x73, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ldPos;.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x33, 0x20, 0x5f, 0x31, 0x35, 0x33, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, // 3 _1532 = fast::
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x31, 0x35, 0x33, 0x30, 0x29, // normalize(_1530)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x33, //       float _153
	0x34, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x30, 0x31, 0x30, 0x2c, 0x20, 0x5f, // 4 = dot(_1010, _
	0x31, 0x35, 0x33, 0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1532);.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x33, 0x20, 0x5f, 0x31, 0x38, 0x35, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 3 _1852;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, //              if 
	0x28, 0x74, 0x72, 0x75, 0x65, 0x20, 0x26, 0x26, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x35, 0x33, 0x34, // (true && ((_1534
	0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, //  + _mtl_u.Roughn
	0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, // ess_WrapL_Edge_T
	0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x2e, // hickness.y) > 0.
	0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0)).            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x34, 0x39, 0x20, 0x3d, 0x20, //   float _1549 = 
	0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x52, 0x6f, 0x75, // 1.0 + _mtl_u.Rou
	0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, // ghness_WrapL_Edg
	0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x3b, 0x0a, 0x20, // e_Thickness.y;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x35, 0x32, 0x20, 0x3d, 0x20, 0x5f, //        _1852 = _
	0x31, 0x38, 0x34, 0x30, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x35, 0x33, 0x34, 0x20, 0x2b, // 1840 * ((_1534 +
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, //  _mtl_u.Roughnes
	0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, // s_WrapL_Edge_Thi
	0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x31, 0x35, // ckness.y) / (_15
	0x34, 0x39, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x35, 0x34, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // 49 * _1549));.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   }.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, //         else.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  {.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x35, 0x32, //            _1852
	0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, //  = float3(0.0);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     }.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //           float3
	0x20, 0x5f, 0x31, 0x38, 0x35, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1853;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, //             if (
	0x5f, 0x31, 0x35, 0x33, 0x34, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, // _1534 > 0.0).   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  {.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x33, 0x20, 0x5f, 0x31, 0x35, 0x35, 0x39, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, // 3 _1559 = fast::
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x31, 0x35, 0x33, 0x32, 0x20, // normalize(_1532 
	0x2b, 0x20, 0x5f, 0x31, 0x30, 0x30, 0x38, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // + _1008);.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x36, 0x31, 0x20, 0x3d, 0x20, //   float _1561 = 
	0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x30, 0x31, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x35, 0x35, 0x39, // dot(_1010, _1559
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x20, 0x5f, 0x31, 0x35, 0x36, 0x34, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x35, //  _1564 = dot(_15
	0x33, 0x32, 0x2c, 0x20, 0x5f, 0x31, 0x35, 0x35, 0x39, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 32, _1559);.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x36, 0x36, 0x20, //     float _1566 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x30, 0x30, 0x38, 0x2c, 0x20, 0x5f, 0x31, 0x35, // = dot(_1008, _15
	0x35, 0x39, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 59);.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, //              flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x38, 0x35, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // at3 _1854;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x31, 0x35, 0x36, 0x31, 0x20, 0x3e, //    if (((_1561 >
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x36, 0x34, 0x20, //  0.0) && (_1564 
	0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x36, // > 0.0)) && (_156
	0x36, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 6 > 0.0)).      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   {.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x5f, 0x31, 0x38, 0x35, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x38, 0x35, 0x32, 0x20, 0x2b, 0x20, // _1854 = _1852 + 
	0x28, 0x28, 0x5f, 0x31, 0x38, 0x35, 0x31, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x66, 0x6c, 0x6f, 0x61, // ((_1851 + ((floa
	0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x38, 0x35, 0x31, 0x29, // t3(1.0) - _1851)
	0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, //  * powr(1.0 - _1
	0x35, 0x36, 0x34, 0x2c, 0x20, 0x35, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, // 564, 5.0))) * ((
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, // (_mtl_u.Roughnes
	0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, // s_WrapL_Edge_Thi
	0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, // ckness.x + 1.0) 
	0x2f, 0x20, 0x28, 0x38, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x35, 0x36, 0x36, 0x29, 0x29, // / (8.0 * _1566))
	0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x5f, 0x31, 0x35, 0x36, 0x31, 0x2c, 0x20, 0x5f, //  * powr(_1561, _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, // mtl_u.Roughness_
	0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, // WrapL_Edge_Thick
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // ness.x)));.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    }.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, //              els
	0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // e.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //           {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x35, 0x34, 0x20, 0x3d, 0x20, //         _1854 = 
	0x5f, 0x31, 0x38, 0x35, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _1852;.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, //                }
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x35, 0x33, 0x20, 0x3d, //          _1853 =
	0x20, 0x5f, 0x31, 0x38, 0x35, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1854;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, //             }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   else.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //            {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x35, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x38, //      _1853 = _18
	0x35, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 52;.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x39, 0x32, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, // oat _1592 = dot(
	0x5f, 0x31, 0x35, 0x33, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x35, 0x33, 0x30, 0x29, 0x3b, 0x0a, 0x20, // _1530, _1530);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x30, 0x39, 0x20, 0x3d, //    float _1609 =
	0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x31, 0x2e, 0x30, //  fast::clamp(1.0
	0x20, 0x2d, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x35, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x35, //  - ((_1592 * _15
	0x39, 0x32, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // 92) / (((_mtl_u.
	0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, // cAmbient_LightRa
	0x6e, 0x67, 0x65, 0x2e, 0x77, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, // nge.w * _mtl_u.c
	0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, // Ambient_LightRan
	0x67, 0x65, 0x2e, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, // ge.w) * _mtl_u.c
	0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, // Ambient_LightRan
	0x67, 0x65, 0x2e, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, // ge.w) * _mtl_u.c
	0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, // Ambient_LightRan
	0x67, 0x65, 0x2e, 0x77, 0x29, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, // ge.w)), 0.0, 1.0
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, //        float3 _1
	0x36, 0x33, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x35, 0x31, 0x20, // 633 = fma(_1851 
	0x2b, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x30, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // + _1840, _mtl_u.
	0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, // cAmbient_LightRa
	0x6e, 0x67, 0x65, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x38, 0x35, 0x33, 0x20, // nge.xyz, (_1853 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, // * _mtl_u.ballLig
	0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x5f, 0x31, 0x38, 0x33, 0x38, // htEmission[_1838
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x36, 0x30, 0x39, // ].xyz) * ((_1609
	0x20, 0x2a, 0x20, 0x5f, 0x31, 0x36, 0x30, 0x39, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x31, 0x35, //  * _1609) / (_15
	0x39, 0x32, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 92 + 1.0)));.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x66, 0x44, 0x69, 0x73, //  if (_mtl_u.fDis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, // ableLighting_top
	0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, // _below.x != 0.0)
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //                _
	0x31, 0x38, 0x35, 0x35, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x31, 0x36, 0x33, 0x33, // 1855 = mix(_1633
	0x2c, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // , _1840, float3(
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // _mtl_u.fDisableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, // ighting_top_belo
	0x77, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // w.x));.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, //                b
	0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // reak;.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, //           }.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // else.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x35, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x33, 0x33, //    _1855 = _1633
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, //           break;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      }.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, //            break
	0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, // ; // unreachable
	0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, //  workaround.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, //             } wh
	0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ile(false);.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x34, 0x36, //             _146
	0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x37, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, 0x35, // 6 = _1847 + _185
	0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, // 5;.            }
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, // .            _18
	0x34, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 46 = _1847;.    
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, //     }.        el
	0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, // se.        {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x36, 0x20, 0x3d, //          _1846 =
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, //  float3(0.0);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x38, 0x3b, 0x0a, 0x20, 0x20, // float3 _1848;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x74, 0x72, 0x75, 0x65, 0x20, 0x26, //       if (true &
	0x26, 0x20, 0x28, 0x5f, 0x31, 0x34, 0x31, 0x35, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // & (_1415 > 0.0))
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .        {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, //        float3 _1
	0x34, 0x38, 0x36, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, // 486 = fast::norm
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, // alize((_mtl_u.ma
	0x74, 0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, // tView * float4(_
	0x31, 0x30, 0x31, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, // 1010, 0.0)).xyz)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // ;.            fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x34, 0x38, // oat _1682 = _148
	0x36, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 6.y;.           
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x33, 0x20, 0x3d, 0x20, 0x5f, //  float _1683 = _
	0x31, 0x34, 0x38, 0x36, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1486.x;.        
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x32, 0x3b, //     float _1842;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, // .            do.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, //             {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x39, 0x38, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, // oat _1698 = abs(
	0x5f, 0x31, 0x36, 0x38, 0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _1682);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, //         float _1
	0x36, 0x39, 0x39, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x31, 0x36, 0x38, 0x33, 0x29, // 699 = abs(_1683)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x36, 0x39, 0x39, 0x20, 0x3c, 0x3d, 0x20, //   if ((_1699 <= 
	0x36, 0x2e, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x65, 0x2d, 0x30, 0x35, 0x29, // 6.103515625e-05)
	0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x36, 0x39, 0x38, 0x20, 0x3c, 0x3d, 0x20, 0x36, 0x2e, //  && (_1698 <= 6.
	0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x29, 0x0a, // 103515625e-05)).
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x32, 0x20, 0x3d, 0x20, 0x30, 0x2e, //       _1842 = 0.
	0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0;.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, //        break;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, //               }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x37, 0x31, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x5f, // float _1713 = (_
	0x31, 0x36, 0x39, 0x39, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x36, 0x39, 0x38, 0x29, 0x20, 0x2f, 0x20, // 1699 - _1698) / 
	0x28, 0x5f, 0x31, 0x36, 0x39, 0x39, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x36, 0x39, 0x38, 0x29, 0x3b, // (_1699 + _1698);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x37, 0x32, 0x37, 0x20, 0x3d, 0x20, 0x66, //  float _1727 = f
	0x6d, 0x61, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x30, 0x2e, 0x30, 0x33, 0x33, 0x37, 0x31, 0x39, 0x38, // ma(fma(0.0337198
	0x33, 0x37, 0x36, 0x36, 0x35, 0x35, 0x35, 0x37, 0x38, 0x36, 0x31, 0x33, 0x32, 0x38, 0x31, 0x32, // 3766555786132812
	0x35, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x37, 0x31, 0x33, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x31, 0x33, // 5 * _1713, _1713
	0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x37, 0x31, 0x33, 0x34, 0x34, 0x37, 0x33, 0x33, 0x32, // , -0.15713447332
	0x33, 0x38, 0x32, 0x32, 0x30, 0x32, 0x31, 0x34, 0x38, 0x34, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, // 3822021484375), 
	0x28, 0x5f, 0x31, 0x36, 0x38, 0x33, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, // (_1683 < 0.0) ? 
	0x28, 0x2d, 0x5f, 0x31, 0x37, 0x31, 0x33, 0x29, 0x20, 0x3a, 0x20, 0x5f, 0x31, 0x37, 0x31, 0x33, // (-_1713) : _1713
	0x2c, 0x20, 0x28, 0x5f, 0x31, 0x36, 0x38, 0x33, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, // , (_1683 < 0.0) 
	0x3f, 0x20, 0x30, 0x2e, 0x33, 0x37, 0x35, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x31, 0x32, 0x35, 0x29, // ? 0.375 : 0.125)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x36, 0x38, 0x32, //   _1842 = (_1682
	0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x2d, 0x5f, 0x31, 0x37, 0x32, //  < 0.0) ? (-_172
	0x37, 0x29, 0x20, 0x3a, 0x20, 0x5f, 0x31, 0x37, 0x32, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 7) : _1727;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, //             brea
	0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, // k;.            }
	0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, //  while(false);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x20, 0x5f, 0x31, 0x36, 0x38, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x34, 0x38, 0x36, 0x2e, 0x7a, //  _1686 = _1486.z
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // ;.            fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // oat _1843;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        do.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, //         float _1
	0x37, 0x34, 0x32, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x31, 0x36, 0x38, 0x36, 0x29, // 742 = abs(_1686)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x37, //   if ((1.0 - _17
	0x34, 0x32, 0x29, 0x20, 0x3c, 0x3d, 0x20, 0x36, 0x2e, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, // 42) <= 6.1035156
	0x32, 0x35, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 25e-05).        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, //               _1
	0x38, 0x34, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x36, 0x38, 0x36, 0x20, 0x3e, 0x3d, 0x20, // 843 = (_1686 >= 
	0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x30, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x30, // 0.0) ? 0.0 : 1.0
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, //       break;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, //              }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x37, 0x35, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, // loat _1752 = fma
	0x28, 0x2d, 0x30, 0x2e, 0x30, 0x34, 0x39, 0x36, 0x34, 0x37, 0x34, 0x32, 0x38, 0x30, 0x39, 0x35, // (-0.049647428095
	0x33, 0x34, 0x30, 0x37, 0x32, 0x38, 0x37, 0x35, 0x39, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x2c, // 340728759765625,
	0x20, 0x5f, 0x31, 0x37, 0x34, 0x32, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x39, 0x38, 0x30, 0x34, 0x39, //  _1742, 0.498049
	0x39, 0x31, 0x34, 0x38, 0x33, 0x36, 0x38, 0x38, 0x33, 0x35, 0x34, 0x34, 0x39, 0x32, 0x31, 0x38, // 9148368835449218
	0x37, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 75);.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x37, 0x35, 0x35, //      float _1755
	0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, //  = sqrt(1.0 - _1
	0x37, 0x34, 0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 742);.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x5f, //       _1843 = (_
	0x31, 0x36, 0x38, 0x36, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, // 1686 >= 0.0) ? (
	0x5f, 0x31, 0x37, 0x35, 0x32, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x37, 0x35, 0x35, 0x29, 0x20, 0x3a, // _1752 * _1755) :
	0x20, 0x66, 0x6d, 0x61, 0x28, 0x2d, 0x5f, 0x31, 0x37, 0x35, 0x32, 0x2c, 0x20, 0x5f, 0x31, 0x37, //  fma(-_1752, _17
	0x35, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 55, 1.0);.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, //           break;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, // .            } w
	0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // hile(false);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x38, 0x20, 0x3d, //          _1848 =
	0x20, 0x5f, 0x31, 0x38, 0x34, 0x36, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x30, //  _1846 + ((_1840
	0x20, 0x2a, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, //  * tex_diffuse_e
	0x6e, 0x76, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, // nv.sample(tex_di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ffuse_envSampler
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x5f, // , float2(0.5 + _
	0x31, 0x38, 0x34, 0x32, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x33, 0x29, 0x2c, 0x20, 0x6c, 0x65, // 1842, _1843), le
	0x76, 0x65, 0x6c, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, // vel(0.0)).xyz) *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, //  _mtl_u.fenvEmis
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, // sionScale_TexWid
	0x74, 0x68, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, // th.x);.        }
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, // .        else.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x38, 0x34, //     _1848 = _184
	0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, // 6;.        }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x38, 0x34, //      float3 _184
	0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x66, // 9;.        if (f
	0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x32, 0x32, 0x35, 0x2e, 0x78, // ast::max(_1225.x
	0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x32, 0x32, // , fast::max(_122
	0x35, 0x2e, 0x79, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x32, 0x35, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x3e, // 5.y, _1225.z)) >
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, //  0.0).        {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x34, //             _184
	0x39, 0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x32, 0x31, 0x33, 0x2c, 0x20, 0x5f, // 9 = fma(_1213, _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, // mtl_u.cBase_Alph
	0x61, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x38, 0x29, 0x3b, 0x0a, 0x20, // a.xyz, _1848);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        }.       
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, //  else.        {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x34, //             _184
	0x39, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 9 = _1848;.     
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, //    }.        _18
	0x36, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x38, 0x34, // 64 = float4(_184
	0x39, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, // 9, _mtl_u.cBase_
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // Alpha.w);.      
	0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, //   break;.    } w
	0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // hile(false);.   
	0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, //  out.bgfx_FragDa
	0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x38, 0x36, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, // ta0 = _1864;.   
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, //  return out;.}..
	0x00, 0x00, 0x50, 0x03,                                                                         // ..P.
};
static const uint8_t fs_ball_equirectangular_decal_st_essl[14402] =
{
	0x46, 0x53, 0x48, 0x0b, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x38, // FSH..N......../8
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // s.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, // arying in.precis
	0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3b, // ion highp float;
	0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // .precision highp
	0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, //  int;.precision 
	0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, // highp sampler2DA
	0x72, 0x72, 0x61, 0x79, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, // rray;.#define sh
	0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adow2D(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //  _coord) texture
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // (_sampler, _coor
	0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, // d).#define shado
	0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // w2DProj(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // eProj(_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, // _coord).#extensi
	0x6f, 0x6e, 0x20, 0x47, 0x4c, 0x5f, 0x45, 0x58, 0x54, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // on GL_EXT_textur
	0x65, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x20, 0x3a, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, // e_array : enable
	0x0a, 0x6f, 0x75, 0x74, 0x20, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x70, 0x20, 0x76, 0x65, 0x63, // .out mediump vec
	0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // 4 bgfx_FragColor
	0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ;.varying float 
	0x76, 0x5f, 0x65, 0x79, 0x65, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, // v_eye;.varying v
	0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x76, 0x61, // ec3 v_normal;.va
	0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, // rying vec2 v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, // coord0;.varying 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x3b, // vec3 v_worldPos;
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, // .vec3 instMul(ve
	0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, // c3 _vec, mat3 _m
	0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, // tx) { return ( (
	0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, // _vec) * (_mtx) )
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, // ; }.vec3 instMul
	0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // (mat3 _mtx, vec3
	0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _vec) { return 
	0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, // ( (_mtx) * (_vec
	0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, // ) ); }.vec4 inst
	0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, // Mul(vec4 _vec, m
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // at4 _mtx) { retu
	0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, // rn ( (_vec) * (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, // mtx) ); }.vec4 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, // nstMul(mat4 _mtx
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, // , vec4 _vec) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, // eturn ( (_mtx) *
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, //  (_vec) ); }.flo
	0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, // at rcp(float _a)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, //  { return 1.0/_a
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, // ; }.vec2 rcp(vec
	0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // 2 _a) { return v
	0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // ec2(1.0)/_a; }.v
	0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, // ec3 rcp(vec3 _a)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, //  { return vec3(1
	0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, // .0)/_a; }.vec4 r
	0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // cp(vec4 _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, // turn vec4(1.0)/_
	0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, // a; }.vec2 vec2_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // plat(float _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, //  return vec2(_x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, //  _x); }.vec3 vec
	0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, // 3_splat(float _x
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // ) { return vec3(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // _x, _x, _x); }.v
	0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, // ec4 vec4_splat(f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // loat _x) { retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // n vec4(_x, _x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, // x, _x); }.uvec2 
	0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec2_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, //  _x) { return uv
	0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, // ec2(_x, _x); }.u
	0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // vec3 uvec3_splat
	0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // (uint _x) { retu
	0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // rn uvec3(_x, _x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, //  _x); }.uvec4 uv
	0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, // ec4_splat(uint _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, // x) { return uvec
	0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // 4(_x, _x, _x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, // ); }.mat4 mtxFro
	0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, // mRows(vec4 _0, v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, // ec4 _1, vec4 _2,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  vec4 _3).{.retu
	0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, // rn transpose(mat
	0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, // 4(_0, _1, _2, _3
	0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, // ) );.}.mat4 mtxF
	0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, // romCols(vec4 _0,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, //  vec4 _1, vec4 _
	0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 2, vec4 _3).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, // turn mat4(_0, _1
	0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, // , _2, _3);.}.mat
	0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, // 3 mtxFromRows(ve
	0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, // c3 _0, vec3 _1, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // vec3 _2).{.retur
	0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, // n transpose(mat3
	0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, // (_0, _1, _2) );.
	0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, // }.mat3 mtxFromCo
	0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // ls(vec3 _0, vec3
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, //  _1, vec3 _2).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, // return mat3(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // _1, _2);.}.unifo
	0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, // rm vec4 u_viewRe
	0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // ct;.uniform vec4
	0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, //  u_viewTexel;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // iform mat4 u_vie
	0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // w;.uniform mat4 
	0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // u_invView;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, // rm mat4 u_proj;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, // uniform mat4 u_i
	0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // nvProj;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, // mat4 u_viewProj;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // invViewProj;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, // form mat4 u_mode
	0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // l[32];.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, // at4 u_modelView;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, // modelViewProj;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, // niform vec4 u_al
	0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // phaRef4;.float s
	0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, // qr(const float v
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, // ).{.return v*v;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // }.vec2 sqr(const
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  vec2 v).{.retur
	0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x71, // n v*v;.}.vec3 sq
	0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, // r(const vec3 v).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, // {.return v*v;.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x63, 0x6f, 0x6e, 0x73, // vec3 mul_w1(cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // t vec3 v, const 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // mat4 m).{.return
	0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, //  v.x*m[0].xyz + 
	0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, // (v.y*m[1].xyz + 
	0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, // (v.z*m[2].xyz + 
	0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // m[3].xyz));.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, // oat acos_approx_
	0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // divPI(const floa
	0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // t v).{.const flo
	0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, // at x = abs(v);.i
	0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, // f(1. - x <= 0.00
	0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, // 006103515625).re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // turn (v >= 0.) ?
	0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  0. : 1.;.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, // float res = ((-0
	0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, // .155972/3.141592
	0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, // 6535897932384626
	0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, // 433832795) * x +
	0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, //  (1.56467/3.1415
	0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, // 9265358979323846
	0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, // 26433832795) ) *
	0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, //  sqrt(1. - x);.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, // eturn (v >= 0.) 
	0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, // ? res : 1. - res
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, // ;.}.float atan2_
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x63, 0x6f, // approx_div2PI(co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, // nst float y, con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, // st float x).{.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, // nst float abs_y 
	0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // = abs(y);.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, // float abs_x = ab
	0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, // s(x);.if(abs_x <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, // = 0.000061035156
	0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, // 25 && abs_y <= 0
	0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, // .00006103515625)
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // .return 0.;.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, // t float r = (abs
	0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, // _x - abs_y) / (a
	0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x63, // bs_x + abs_y);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, // onst float angle
	0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, //  = ((x < 0.) ? (
	0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, // 3./8.) : (1./8.)
	0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, // ).+ (0.211868 /(
	0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, // 2.*3.14159265358
	0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, // 9793238462643383
	0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, // 2795) * r * r - 
	0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, // 0.987305 /(2.*3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, // ) * ((x < 0.) ? 
	0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // -r : r);.return 
	0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, // (y < 0.) ? -angl
	0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // e : angle;.}.flo
	0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, // at asin_approx_d
	0x69, 0x76, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ivPI(const float
	0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, //  v).{.const floa
	0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, // t x = abs(v);.if
	0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, // (1. - x <= 0.000
	0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, // 06103515625).ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, // urn (v >= 0.) ? 
	0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // 0.5 : -0.5;.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, // t float res = ((
	0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, // -0.155972/3.1415
	0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, // 9265358979323846
	0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, // 26433832795) * x
	0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, //  + (1.56467/3.14
	0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, // 1592653589793238
	0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, // 4626433832795) )
	0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, //  * sqrt(1. - x);
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, // .return (v >= 0.
	0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, // ) ? 0.5 - res : 
	0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // -0.5 + res;.}.ve
	0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, // c2 ray_to_equire
	0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x63, 0x6f, 0x6e, // ctangular_uv(con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // st vec3 ray).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, // eturn vec2(.0.5 
	0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, // + atan2_approx_d
	0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, // iv2PI(ray.y, ray
	0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, // .x),.acos_approx
	0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, // _divPI(ray.z));.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, // }.float InvsRGB(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // const float colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, // r).{.if (color <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // = 0.04045).retur
	0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, // n color * (1.0/1
	0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, // 2.92);.else.retu
	0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, // rn pow(color * (
	0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, // 1.0/1.055) + (0.
	0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, // 055/1.055), 2.4)
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, // ;.}.float InvRec
	0x37, 0x30, 0x39, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 709(const float 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, // color).{.if (col
	0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, // or <= 0.081).ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, // urn color * (1.0
	0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, // /4.5);.else.retu
	0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, // rn pow(color * (
	0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, // 1.0/1.099) + (0.
	0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, // 099/1.099), 1.0/
	0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, // 0.45);.}.float I
	0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // nvGamma(const fl
	0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // oat color).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // urn InvsRGB(colo
	0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, // r);.}.vec3 InvGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // mma(const vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // olor).{.return v
	0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, // ec3(InvGamma(col
	0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, // or.x),InvGamma(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, // olor.y),InvGamma
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // (color.z));.}.ve
	0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, // c3 InvToneMap(co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // nst vec3 color).
	0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, // {.const float in
	0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, // v_2bh = 0.5/0.25
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, // ;.const float bh
	0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, //  = 4.0*0.25 - 2.
	0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // 0;.return (color
	0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, //  - 1.0 + sqrt(co
	0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, // lor*(color + bh)
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, //  + 1.0))*inv_2bh
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, // ;.}.float sRGB(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, // onst float f).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, // float s;.if (f <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, // = 0.0031308).s =
	0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, //  12.92 * f;.else
	0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, // .s = 1.055 * pow
	0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, // (f, 1.0/2.4) - 0
	0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, // .055;.return s;.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x63, // }.float Rec709(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, // onst float f).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, // float s;.if (f <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, // = 0.018).s = 4.5
	0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, //  * f;.else.s = 1
	0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, // .099 * pow(f, 0.
	0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, // 45) - 0.099;.ret
	0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, // urn s;.}.float F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // BGamma(const flo
	0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // at color).{.retu
	0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, // rn sRGB(color);.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, // }.vec2 FBGamma(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // onst vec2 color)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x46, // .{.return vec2(F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, // BGamma(color.x),
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, // FBGamma(color.y)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // );.}.vec3 FBGamm
	0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, // a(const vec3 col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // or).{.return vec
	0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // 3(FBGamma(color.
	0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // x),FBGamma(color
	0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .y),FBGamma(colo
	0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, // r.z));.}.float F
	0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // BToneMap(const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // loat l).{.return
	0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, //  l * ((l*0.25 + 
	0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // 1.0) / (l + 1.0)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, // );.}.vec2 FBTone
	0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, // Map(const vec2 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // olor).{.const fl
	0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // oat l = dot(colo
	0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, // r,vec2(0.176204+
	0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, // 0.0108109*0.5,0.
	0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, // 812985+0.0108109
	0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, // *0.5));.return c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, // olor * ((l*0.25 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, // + 1.0) / (l + 1.
	0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, // 0));.}.vec3 FBTo
	0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, // neMap(const vec3
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  color).{.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, // float l = dot(co
	0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, // lor,vec3(0.17620
	0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, // 4,0.812985,0.010
	0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, // 8109));.return c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, // olor * ((l*0.25 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, // + 1.0) / (l + 1.
	0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, 0x64, 0x69, // 0));.}.vec4 Addi
	0x74, 0x69, 0x76, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // tive(const vec4 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // cBase, const vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // 4 cBlend, const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, // float percent).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, // .return cBase + 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, // cBlend*percent;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x63, // }.vec3 Screen (c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // onst vec3 cBase,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, //  const vec3 cBle
	0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, // nd).{.return 1.0
	0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, //  - (1.0 - cBase)
	0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, //  * (1.0 - cBlend
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, // );.}.vec4 Screen
	0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, //  (const vec4 cBa
	0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // se, const vec4 c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // Blend).{.return 
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, // 1.0 - (1.0 - cBa
	0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, // se) * (1.0 - cBl
	0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, // end);.}.vec3 Scr
	0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // eenHDR (const ve
	0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // c3 cBase, const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // vec3 cBlend).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // eturn max(1.0 - 
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, // (1.0 - cBase) * 
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, // (1.0 - cBlend), 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, // vec3(0.,0.,0.));
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, // .}.vec4 ScreenHD
	0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // R (const vec4 cB
	0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // ase, const vec4 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // cBlend).{.return
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, //  max(1.0 - (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // - cBase) * (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // - cBlend), vec4(
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, // 0.,0.,0.,0.));.}
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, // .vec4 Multiply (
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // const vec4 cBase
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, // , const vec4 cBl
	0x65, 0x6e, 0x64, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // end, const float
	0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  percent).{.retu
	0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // rn cBase * cBlen
	0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // d*percent;.}.vec
	0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // 4 Overlay (const
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, //  vec4 cBase, con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, // st vec4 cBlend).
	0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, // {.vec4 cNew = st
	0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, // ep(0.5, cBase);.
	0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, // cNew = mix(cBase
	0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, // *cBlend*2.0, 1.0
	0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, // -2.0*(1.0-cBase)
	0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, // *(1.0-cBlend), c
	0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, // New);.return cNe
	0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, // w;.}.vec4 Overla
	0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, // yHDR (const vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, //  cBase, const ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, // c4 cBlend).{.vec
	0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, // 4 cNew = step(0.
	0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, // 5, cBase);.cNew 
	0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, // = max(mix(cBase*
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, // cBlend*2.0, 1.0-
	0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, // 2.0*(1.0-cBase)*
	0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, // (1.0-cBlend), cN
	0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, // ew), vec4(0.,0.,
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 0.,0.));.return 
	0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, // cNew;.}.vec3 cos
	0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, // _hemisphere_samp
	0x6c, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, // le(const vec2 t)
	0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, // .{.const float p
	0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, // hi = t.y * (2.0*
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 5);.const float 
	0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // cosTheta = sqrt(
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // 1.0 - t.x);.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, // t float sinTheta
	0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, //  = sqrt(t.x);.fl
	0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x73, 0x69, 0x6e, 0x63, 0x6f, // oat sp,cp;.sinco
	0x73, 0x28, 0x70, 0x68, 0x69, 0x2c, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x29, 0x3b, 0x0a, 0x72, 0x65, // s(phi,sp,cp);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, // turn vec3(cp * s
	0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, // inTheta, cosThet
	0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, // a, sp * sinTheta
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, // );.}.vec3 rotate
	0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, // _to_vector_upper
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, // (const vec3 vec,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, //  const vec3 norm
	0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // al).{.if(normal.
	0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, // y > -0.99999).{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, // const float h = 
	0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // 1.0/(1.0+normal.
	0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // y);.const float 
	0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, // hz = h*normal.z;
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, // .const float hzx
	0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, //  = hz*normal.x;.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, // return vec3(.vec
	0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, // .x * (normal.y+h
	0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, // z*normal.z) + ve
	0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, // c.y * normal.x -
	0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, //  vec.z * hzx,.ve
	0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, // c.y * normal.y -
	0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, //  vec.x * normal.
	0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // x - vec.z * norm
	0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, // al.z,.vec.y * no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, // rmal.z - vec.x *
	0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, //  hzx + vec.z * (
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // normal.y+h*norma
	0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, // l.x*normal.x));.
	0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, // }.else return -v
	0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // ec;.}.uniform ma
	0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // t4 matView;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, // orm mat4 matWorl
	0x64, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // dView;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, // at4 matWorldView
	0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // Inverse;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, //  mat4 matWorldVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // ewProj[2];.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x5b, // rm mat4 matProj[
	0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, // 2];.uniform samp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, // ler2D tex_ball_c
	0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, // olor;.uniform sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x3b, // mpler2D tex_env;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .uniform sampler
	0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, // 2D tex_diffuse_e
	0x6e, 0x76, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, // nv;.uniform samp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, // ler2D tex_ball_d
	0x65, 0x63, 0x61, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, // ecal;.uniform sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x74, 0x65, 0x78, // mpler2DArray tex
	0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x3b, // _ball_playfield;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, // .uniform vec4 u_
	0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, // basic_shade_mode
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, // ;.uniform vec4 b
	0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x32, 0x20, 0x2b, 0x20, // allLightPos[2 + 
	0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // 8];.uniform vec4
	0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, //  ballLightEmissi
	0x6f, 0x6e, 0x5b, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // on[2 + 8];.unifo
	0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, // rm vec4 cAmbient
	0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // _LightRange;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, // form vec4 fenvEm
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, // issionScale_TexW
	0x69, 0x64, 0x74, 0x68, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // idth;.uniform ve
	0x63, 0x34, 0x20, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, // c4 fDisableLight
	0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x3b, 0x0a, 0x75, // ing_top_below;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x53, 0x63, 0x65, // niform vec4 fSce
	0x6e, 0x65, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // neScale;.uniform
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, //  vec4 cBase_Alph
	0x61, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // a;.uniform vec4 
	0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, // Roughness_WrapL_
	0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, // Edge_Thickness;.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4f, // float GeometricO
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // pacity(const flo
	0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // at NdotV, const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x6e, // float alpha, con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, // st float blendin
	0x67, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, // g, const float t
	0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // hickness).{.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, // t float x = abs(
	0x4e, 0x64, 0x6f, 0x74, 0x56, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // NdotV);.const fl
	0x6f, 0x61, 0x74, 0x20, 0x67, 0x20, 0x3d, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, // oat g = blending
	0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x78, 0x20, 0x2f, 0x20, 0x28, //  * (1.0 - (x / (
	0x78, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, // x * (1.0 - thick
	0x6e, 0x65, 0x73, 0x73, 0x29, 0x20, 0x2b, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, // ness) + thicknes
	0x73, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, // s)));.return mix
	0x28, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x67, 0x29, 0x3b, // (alpha, 1.0, g);
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, // .}.vec3 FresnelS
	0x63, 0x68, 0x6c, 0x69, 0x63, 0x6b, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // chlick(const vec
	0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // 3 spec, const fl
	0x6f, 0x61, 0x74, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, // oat LdotH, const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x72, //  float edge).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x70, 0x65, 0x63, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x65, // eturn spec + (ve
	0x63, 0x33, 0x28, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x65, 0x64, 0x67, // c3(edge,edge,edg
	0x65, 0x29, 0x20, 0x2d, 0x20, 0x73, 0x70, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, // e) - spec) * pow
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x35, 0x2e, // (1.0 - LdotH, 5.
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, // );.}.vec3 DoPoin
	0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // tLight(const vec
	0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // 3 pos, const vec
	0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // 3 N, const vec3 
	0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, // V, const vec3 di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // ffuse, const vec
	0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // 3 glossy, const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // float edge, cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, // t float glossyPo
	0x77, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x69, // wer, const int i
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, // , const bool is_
	0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // metal).{.const v
	0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x28, // ec3 lightDir = (
	0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, //  ( (matView) * (
	0x76, 0x65, 0x63, 0x34, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, // vec4(ballLightPo
	0x73, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, // s[i].xyz, 1.0)) 
	0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x70, 0x6f, 0x73, 0x3b, 0x0a, 0x63, // ) ).xyz - pos;.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4c, 0x20, 0x3d, 0x20, 0x6e, 0x6f, // onst vec3 L = no
	0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, // rmalize(lightDir
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, // );.const float N
	0x64, 0x6f, 0x74, 0x4c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x20, 0x4c, 0x29, // dotL = dot(N, L)
	0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, // ;.vec3 Out = vec
	0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // 3(0.0,0.0,0.0);.
	0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, // if (!is_metal &&
	0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x2b, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, //  (NdotL + Roughn
	0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, // ess_WrapL_Edge_T
	0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, // hickness.y > 0.0
	0x29, 0x29, 0x0a, 0x4f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // )).Out = diffuse
	0x20, 0x2a, 0x20, 0x28, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x2b, 0x20, 0x52, 0x6f, 0x75, //  * ((NdotL + Rou
	0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, // ghness_WrapL_Edg
	0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x29, 0x20, 0x2f, // e_Thickness.y) /
	0x20, 0x73, 0x71, 0x72, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, //  sqr(1.0+Roughne
	0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, // ss_WrapL_Edge_Th
	0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, // ickness.y));.if 
	0x28, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, // (NdotL > 0.0).{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x48, 0x20, 0x3d, 0x20, 0x6e, // const vec3 H = n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x4c, 0x20, 0x2b, 0x20, 0x56, 0x29, 0x3b, // ormalize(L + V);
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, // .const float Ndo
	0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, // tH = dot(N, H);.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4c, 0x64, 0x6f, 0x74, // const float Ldot
	0x48, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4c, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x63, // H = dot(L, H);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x56, 0x64, 0x6f, 0x74, 0x48, // onst float VdotH
	0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x56, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x69, 0x66, //  = dot(V, H);.if
	0x20, 0x28, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, //  ((NdotH > 0.0) 
	0x26, 0x26, 0x20, 0x28, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, // && (LdotH > 0.0)
	0x20, 0x26, 0x26, 0x20, 0x28, 0x56, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, //  && (VdotH > 0.0
	0x29, 0x29, 0x0a, 0x4f, 0x75, 0x74, 0x20, 0x2b, 0x3d, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, // )).Out += Fresne
	0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, 0x6b, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, // lSchlick(glossy,
	0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x65, 0x64, 0x67, 0x65, 0x29, 0x20, 0x2a, 0x20, //  LdotH, edge) * 
	0x28, 0x28, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x2b, // (((glossyPower +
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x38, 0x2e, 0x30, 0x2a, 0x56, 0x64, 0x6f, //  1.0) / (8.0*Vdo
	0x74, 0x48, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x48, // tH)) * pow(NdotH
	0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x29, 0x29, 0x3b, // , glossyPower));
	0x0a, 0x7d, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // .}.const float s
	0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x64, // qrl_lightDir = d
	0x6f, 0x74, 0x28, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2c, 0x6c, 0x69, 0x67, 0x68, // ot(lightDir,ligh
	0x74, 0x44, 0x69, 0x72, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x41, 0x74, // tDir);.float fAt
	0x74, 0x65, 0x6e, 0x20, 0x3d, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, // ten = clamp(1.0 
	0x2d, 0x20, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2a, // - sqrl_lightDir*
	0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2f, 0x28, 0x63, // sqrl_lightDir/(c
	0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, // Ambient_LightRan
	0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, // ge.w*cAmbient_Li
	0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, 0x69, // ghtRange.w*cAmbi
	0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, // ent_LightRange.w
	0x2a, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, // *cAmbient_LightR
	0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, // ange.w), 0.0, 1.
	0x30, 0x29, 0x3b, 0x0a, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x3d, 0x20, 0x66, 0x41, 0x74, // 0);.fAtten = fAt
	0x74, 0x65, 0x6e, 0x2a, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x2f, 0x28, 0x73, 0x71, 0x72, 0x6c, // ten*fAtten/(sqrl
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // _lightDir + 1.0)
	0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x3d, // ;.vec3 ambient =
	0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, //  glossy;.if (!is
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, // _metal).ambient 
	0x2b, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // += diffuse;.cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x20, 0x3d, 0x20, // t vec3 result = 
	0x4f, 0x75, 0x74, 0x20, 0x2a, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, // Out * ballLightE
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, // mission[i].xyz *
	0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x2b, 0x20, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, //  fAtten + ambien
	0x74, 0x20, 0x2a, 0x20, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, // t * cAmbient_Lig
	0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x69, 0x66, 0x20, // htRange.xyz;.if 
	0x28, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, // (fDisableLightin
	0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x21, 0x3d, // g_top_below.x !=
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, //  0.0).return mix
	0x28, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, // (result,diffuse,
	0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, // fDisableLighting
	0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x65, // _top_below.x);.e
	0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, // lse.return resul
	0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, // t;.}.vec3 DoEnvm
	0x61, 0x70, 0x44, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // apDiffuse(const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // vec3 N, const ve
	0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, // c3 diffuse).{.co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, // nst vec3 env = t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, // extureLod(tex_di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, // ffuse_env, ray_t
	0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, // o_equirectangula
	0x72, 0x5f, 0x75, 0x76, 0x28, 0x4e, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x79, // r_uv(N), 0.0).xy
	0x7a, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // z;.return diffus
	0x65, 0x20, 0x2a, 0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, // e * env*fenvEmis
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, // sionScale_TexWid
	0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, // th.x;.}.vec3 DoE
	0x6e, 0x76, 0x6d, 0x61, 0x70, 0x47, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x28, 0x63, 0x6f, 0x6e, 0x73, // nvmapGlossy(cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // t vec3 N, const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // vec3 V, const ve
	0x63, 0x32, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // c2 Ruv, const ve
	0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, // c3 glossy, const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, //  float glossyPow
	0x65, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // er).{.const floa
	0x74, 0x20, 0x6d, 0x69, 0x70, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, 0x6c, 0x6f, 0x67, 0x32, // t mip = min(log2
	0x28, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, // (fenvEmissionSca
	0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x79, 0x20, 0x2a, 0x20, // le_TexWidth.y * 
	0x73, 0x71, 0x72, 0x74, 0x28, 0x33, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x35, // sqrt(3.0)) - 0.5
	0x2a, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, // *log2(glossyPowe
	0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x66, // r + 1.0), log2(f
	0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, // envEmissionScale
	0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x79, 0x29, 0x2d, 0x31, 0x2e, 0x29, // _TexWidth.y)-1.)
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, // ;.const vec3 env
	0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, //  = textureLod(te
	0x78, 0x5f, 0x65, 0x6e, 0x76, 0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x6d, 0x69, 0x70, 0x29, // x_env, Ruv, mip)
	0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x67, 0x6c, 0x6f, // .xyz;.return glo
	0x73, 0x73, 0x79, 0x20, 0x2a, 0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, // ssy * env*fenvEm
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, // issionScale_TexW
	0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, // idth.x;.}.vec3 D
	0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x32, 0x6e, 0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x28, // oEnvmap2ndLayer(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // const vec3 color
	0x31, 0x73, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // 1stLayer, const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // vec3 pos, const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // vec3 N, const ve
	0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // c3 V, const floa
	0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // t NdotV, const v
	0x65, 0x63, 0x32, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // ec2 Ruv, const v
	0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // ec3 specular).{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x77, 0x20, 0x3d, 0x20, 0x46, // const vec3 w = F
	0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, 0x6b, 0x28, 0x73, 0x70, // resnelSchlick(sp
	0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x52, // ecular, NdotV, R
	0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, // oughness_WrapL_E
	0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x7a, 0x29, // dge_Thickness.z)
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, // ;.const vec3 env
	0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, //  = textureLod(te
	0x78, 0x5f, 0x65, 0x6e, 0x76, 0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, // x_env, Ruv, 0.0)
	0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, // .xyz;.return mix
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x31, 0x73, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2c, 0x20, // (color1stLayer, 
	0x65, 0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, // env*fenvEmission
	0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, // Scale_TexWidth.x
	0x2c, 0x20, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, // , w);.}.vec3 lig
	0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // htLoop(const vec
	0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, // 3 pos, vec3 N, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x76, 0x65, 0x63, // onst vec3 V, vec
	0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // 3 diffuse, vec3 
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // glossy, const ve
	0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, // c3 specular, con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, // st float edge, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, // onst bool is_met
	0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // al).{.vec3 color
	0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, //  = vec3_splat(0.
	0x30, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, // 0);.float NdotV 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x56, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, // = dot(N,V);.if (
	0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x4e, // NdotV < 0.0).{.N
	0x20, 0x3d, 0x20, 0x2d, 0x4e, 0x3b, 0x0a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x2d, //  = -N;.NdotV = -
	0x4e, 0x64, 0x6f, 0x74, 0x56, 0x3b, 0x0a, 0x7d, 0x0a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, // NdotV;.}.NdotV =
	0x20, 0x6d, 0x69, 0x6e, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, //  min(NdotV, 1.0)
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, // ;.const float di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, // ffuseMax = max(d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, // iffuse.x,max(dif
	0x66, 0x75, 0x73, 0x65, 0x2e, 0x79, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x7a, // fuse.y,diffuse.z
	0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ));.const float 
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, // glossyMax = max(
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, // glossy.x,max(glo
	0x73, 0x73, 0x79, 0x2e, 0x79, 0x2c, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x7a, 0x29, 0x29, // ssy.y,glossy.z))
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, // ;.const float sp
	0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, // ecularMax = max(
	0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x73, // specular.x,max(s
	0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x79, 0x2c, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, // pecular.y,specul
	0x61, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // ar.z));.const fl
	0x6f, 0x61, 0x74, 0x20, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // oat sum = diffus
	0x65, 0x4d, 0x61, 0x78, 0x20, 0x2b, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, // eMax + glossyMax
	0x20, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x73, 0x75, 0x6d, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, //  ;.if (sum > 1.0
	0x20, 0x26, 0x26, 0x20, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, //  && fDisableLigh
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, // ting_top_below.x
	0x20, 0x3c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  < 1.0).{.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, // float invsum = 1
	0x2e, 0x30, 0x2f, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, // .0/sum;.diffuse 
	0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, // *= invsum;.gloss
	0x79, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, // y *= invsum;.}.i
	0x66, 0x20, 0x28, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, // f ((!is_metal &&
	0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, //  (diffuseMax > 0
	0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, // .0)) || (glossyM
	0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, // ax > 0.0)).{.if 
	0x28, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, // (fDisableLightin
	0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x3d, 0x3d, // g_top_below.x ==
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x66, //  1.0).color += f
	0x6c, 0x6f, 0x61, 0x74, 0x28, 0x32, 0x29, 0x20, 0x2a, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // loat(2) * diffus
	0x65, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, // e;.else for (int
	0x20, 0x69, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x32, 0x3b, 0x20, 0x69, //  i = 0; i < 2; i
	0x2b, 0x2b, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x50, // ++).color += DoP
	0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, // ointLight(pos, N
	0x2c, 0x20, 0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, // , V, diffuse, gl
	0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, // ossy, edge, Roug
	0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, // hness_WrapL_Edge
	0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x2c, 0x20, 0x69, 0x2c, // _Thickness.x, i,
	0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, //  is_metal);.}.if
	0x20, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, //  (!is_metal && (
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, // diffuseMax > 0.0
	0x29, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, // )).color += DoEn
	0x76, 0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, 0x20, 0x28, 0x28, 0x20, // vmapDiffuse( (( 
	0x28, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x4e, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, // ( (vec4(N,0.0)) 
	0x2a, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, // * (matView) ) ).
	0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x3b, 0x0a, // xyz), diffuse);.
	0x69, 0x66, 0x20, 0x28, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, // if ((glossyMax >
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, //  0.0) || (specul
	0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, // arMax > 0.0)).{.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x52, 0x20, 0x3d, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x4e, 0x64, // vec3 R = (2.0*Nd
	0x6f, 0x74, 0x56, 0x29, 0x2a, 0x4e, 0x20, 0x2d, 0x20, 0x56, 0x3b, 0x0a, 0x52, 0x20, 0x3d, 0x20, // otV)*N - V;.R = 
	0x28, 0x28, 0x20, 0x28, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x52, 0x2c, 0x30, 0x2e, 0x30, // (( ( (vec4(R,0.0
	0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, // )) * (matView) )
	0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, //  ).xyz);.const v
	0x65, 0x63, 0x32, 0x20, 0x52, 0x75, 0x76, 0x20, 0x3d, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, // ec2 Ruv = ray_to
	0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, // _equirectangular
	0x5f, 0x75, 0x76, 0x28, 0x52, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, // _uv(R);.if (glos
	0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, // syMax > 0.0).col
	0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x47, 0x6c, // or += DoEnvmapGl
	0x6f, 0x73, 0x73, 0x79, 0x28, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, // ossy(N, V, Ruv, 
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, // glossy, Roughnes
	0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, // s_WrapL_Edge_Thi
	0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x73, // ckness.x);.if (s
	0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, // pecularMax > 0.0
	0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, // ).color = DoEnvm
	0x61, 0x70, 0x32, 0x6e, 0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // ap2ndLayer(color
	0x2c, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x4e, 0x64, 0x6f, // , pos, N, V, Ndo
	0x74, 0x56, 0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, // tV, Ruv, specula
	0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, // r);.}.return col
	0x6f, 0x72, 0x20, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // or ;.}.uniform v
	0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, // ec4 invTableRes_
	0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // reflection;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, // orm vec4 w_h_dis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x3b, 0x0a, 0x76, 0x65, // ableLighting;.ve
	0x63, 0x33, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, // c3 ballLightLoop
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, // (const vec3 pos,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, //  vec3 N, vec3 V,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x76, //  vec3 diffuse, v
	0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // ec3 glossy, cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, // t vec3 specular,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, //  const float edg
	0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, // e, const bool is
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // _metal).{.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, // float diffuseMax
	0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x78, //  = max(diffuse.x
	0x2c, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x79, 0x2c, 0x64, // ,max(diffuse.y,d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // iffuse.z));.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, // t float glossyMa
	0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x78, // x = max(glossy.x
	0x2c, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x79, 0x2c, 0x67, 0x6c, // ,max(glossy.y,gl
	0x6f, 0x73, 0x73, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // ossy.z));.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, // float specularMa
	0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, // x = max(specular
	0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, // .x,max(specular.
	0x79, 0x2c, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, // y,specular.z));.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x75, 0x6d, 0x20, // const float sum 
	0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x2b, 0x20, 0x67, // = diffuseMax + g
	0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x73, 0x75, 0x6d, // lossyMax;.if(sum
	0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  > 1.0).{.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, // float invsum = 1
	0x2e, 0x30, 0x2f, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, // .0/sum;.diffuse 
	0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, // *= invsum;.gloss
	0x79, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // y *= invsum;.}.v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, // ec3 color = vec3
	0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, // (0.0, 0.0, 0.0);
	0x0a, 0x69, 0x66, 0x28, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, // .if((!is_metal &
	0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, // & (diffuseMax > 
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, // 0.0)) || (glossy
	0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x66, 0x6f, 0x72, 0x28, // Max > 0.0)).for(
	0x69, 0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x32, // int i = 0; i < 2
	0x20, 0x2b, 0x20, 0x38, 0x3b, 0x20, 0x69, 0x2b, 0x2b, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, //  + 8; i++).color
	0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, //  += DoPointLight
	0x28, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, // (pos, N, V, diff
	0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x65, 0x64, 0x67, // use, glossy, edg
	0x65, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, // e, Roughness_Wra
	0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, // pL_Edge_Thicknes
	0x73, 0x2e, 0x78, 0x2c, 0x20, 0x69, 0x2c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, // s.x, i, is_metal
	0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, // );.if(!is_metal 
	0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, // && (diffuseMax >
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, //  0.0)).color += 
	0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, // DoEnvmapDiffuse(
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, // normalize(( (mat
	0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x4e, 0x2c, // View) * (vec4(N,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x64, //  0.0)) ).xyz), d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x73, 0x70, 0x65, 0x63, // iffuse);.if(spec
	0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, // ularMax > 0.0).c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, // olor += specular
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, // ;.return color;.
	0x7d, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, // }.void main().{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x20, 0x3d, 0x20, 0x6e, // const vec3 V = n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x20, 0x2d, 0x76, 0x5f, 0x77, 0x6f, 0x72, // ormalize( -v_wor
	0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // ldPos.xyz);.cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // t vec3 N = norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, // lize(v_normal.xy
	0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x52, // z);.const vec3 R
	0x20, 0x3d, 0x20, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x56, 0x2c, 0x20, 0x4e, 0x29, //  = reflect(V, N)
	0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, // ;.vec3 ballImage
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // Color;.const flo
	0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x56, 0x2c, // at edge = dot(V,
	0x20, 0x52, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  R);.const float
	0x20, 0x6c, 0x6f, 0x64, 0x20, 0x3d, 0x20, 0x28, 0x65, 0x64, 0x67, 0x65, 0x20, 0x3e, 0x20, 0x30, //  lod = (edge > 0
	0x2e, 0x36, 0x29, 0x20, 0x3f, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2a, 0x28, 0x36, 0x2e, 0x30, 0x2a, // .6) ? edge*(6.0*
	0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x29, 0x2d, 0x28, 0x36, 0x2e, 0x30, 0x2a, 0x30, 0x2e, // 1.0/0.4)-(6.0*0.
	0x36, 0x2f, 0x30, 0x2e, 0x34, 0x29, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x63, 0x6f, // 6/0.4) : 0.0;.co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x76, 0x20, 0x3d, 0x20, 0x28, 0x28, // nst vec3 rv = ((
	0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x2d, 0x52, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, //  (vec4(-R,0.0)) 
	0x2a, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, // * (matView) ).xy
	0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, // z);.const vec2 u
	0x76, 0x20, 0x3d, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, // v = ray_to_equir
	0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x72, 0x76, // ectangular_uv(rv
	0x29, 0x3b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, // );.ballImageColo
	0x72, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, // r = textureLod(t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x75, // ex_ball_color, u
	0x76, 0x2c, 0x20, 0x6c, 0x6f, 0x64, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // v, lod).rgb;.con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, // st vec4 decalCol
	0x6f, 0x72, 0x54, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, // orT = texture(te
	0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x2c, 0x20, 0x76, 0x5f, // x_ball_decal, v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, // texcoord0);.vec3
	0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x64, 0x65, //  decalColor = de
	0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x62, // calColorT.rgb;.b
	0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, // allImageColor = 
	0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, // ScreenHDR(ballIm
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, // ageColor, decalC
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x77, 0x5f, 0x68, 0x5f, // olor);.if ((w_h_
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, // disableLighting.
	0x7a, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x62, 0x67, 0x66, 0x78, // z != 0.)).{.bgfx
	0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, // _FragColor = vec
	0x34, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // 4(ballImageColor
	0x2c, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x61, 0x29, 0x3b, // ,cBase_Alpha.a);
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x3b, 0x0a, 0x7d, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, // .return;.}.ballI
	0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x3d, 0x20, 0x30, 0x2e, 0x35, // mageColor *= 0.5
	0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, // *fenvEmissionSca
	0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x63, // le_TexWidth.x;.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, // onst vec3 playfi
	0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, // eld_normal = ( (
	0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, // matWorldView) * 
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x31, 0x2e, // (float4(0.,0.,1.
	0x2c, 0x30, 0x2e, 0x29, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // ,0.)) ).xyz;.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x20, 0x3d, // st float NdotR =
	0x20, 0x64, 0x6f, 0x74, 0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, //  dot(playfield_n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x52, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // ormal, R);.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, //  vec3 playfield_
	0x70, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, // p0 = ( (matWorld
	0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x20, 0x30, // View) * (vec4( 0
	0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x2e, // .,0.,0.,1.0)) ).
	0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // xyz;.const float
	0x20, 0x74, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, //  t = dot(playfie
	0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, // ld_normal, v_wor
	0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x70, 0x6c, 0x61, 0x79, // ldPos.xyz - play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x4e, 0x64, 0x6f, 0x74, // field_p0) / Ndot
	0x52, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, // R;.const vec3 pl
	0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x68, 0x69, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x5f, // ayfield_hit = v_
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x74, // worldPos.xyz - t
	0x20, 0x2a, 0x20, 0x52, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, //  * R;.const vec4
	0x20, 0x70, 0x72, 0x6f, 0x6a, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x50, 0x72, //  proj = ( (matPr
	0x6f, 0x6a, 0x5b, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x5d, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, // oj[v_eye]) * (ve
	0x63, 0x34, 0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x68, 0x69, 0x74, // c4(playfield_hit
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // , 1.0)) );.const
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x70, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, //  vec2 uvp = vec2
	0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, // (0.5, 0.5) + vec
	0x32, 0x28, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x78, 0x2c, 0x20, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x2e, // 2(proj.x, -proj.
	0x79, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2f, 0x20, 0x70, 0x72, 0x6f, 0x6a, // y) * (0.5 / proj
	0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // .w);.const vec3 
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, // playfieldColor =
	0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x28, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, //  0.25 * (.textur
	0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, // e(tex_ball_playf
	0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x75, 0x76, 0x70, 0x20, // ield, vec3((uvp 
	0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, // + vec2(w_h_disab
	0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, // leLighting.x, 0.
	0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, // )).x, (uvp + vec
	0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, // 2(w_h_disableLig
	0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x79, 0x2c, // hting.x, 0.)).y,
	0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, //  v_eye)).rgb.+ t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // exture(tex_ball_
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // playfield, vec3(
	0x28, 0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, // (uvp - vec2(w_h_
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, // disableLighting.
	0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x75, 0x76, 0x70, 0x20, // x, 0.)).x, (uvp 
	0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, // - vec2(w_h_disab
	0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, // leLighting.x, 0.
	0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x29, 0x2e, 0x72, 0x67, // )).y, v_eye)).rg
	0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, // b.+ texture(tex_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, // ball_playfield, 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, // vec3((uvp + vec2
	0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // (0., w_h_disable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, // Lighting.y)).x, 
	0x28, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, // (uvp + vec2(0., 
	0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, // w_h_disableLight
	0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, // ing.y)).y, v_eye
	0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // )).rgb.+ texture
	0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, // (tex_ball_playfi
	0x65, 0x6c, 0x64, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2d, // eld, vec3((uvp -
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, //  vec2(0., w_h_di
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, // sableLighting.y)
	0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, // ).x, (uvp - vec2
	0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // (0., w_h_disable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, // Lighting.y)).y, 
	0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x29, 0x3b, 0x0a, 0x69, // v_eye)).rgb.);.i
	0x66, 0x20, 0x28, 0x21, 0x28, 0x75, 0x76, 0x70, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x20, // f (!(uvp.x < 0. 
	0x7c, 0x7c, 0x20, 0x75, 0x76, 0x70, 0x2e, 0x78, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x20, 0x7c, 0x7c, // || uvp.x > 1. ||
	0x20, 0x75, 0x76, 0x70, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x20, 0x7c, 0x7c, 0x20, 0x75, //  uvp.y < 0. || u
	0x76, 0x70, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x29, 0x0a, 0x26, 0x26, 0x20, 0x21, 0x28, // vp.y > 1.).&& !(
	0x74, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, // t <= 0.)).{.ball
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x6c, 0x65, 0x72, // ImageColor = ler
	0x70, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // p(ballImageColor
	0x2c, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // , playfieldColor
	0x2c, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x30, // , smoothstep(0.0
	0x2c, 0x20, 0x30, 0x2e, 0x31, 0x35, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x29, 0x20, 0x2a, // , 0.15, NdotR) *
	0x20, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, //  invTableRes_ref
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x62, 0x61, // lection.z);.}.ba
	0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x6d, // llImageColor = m
	0x69, 0x6e, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, // in(ballImageColo
	0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x35, 0x2e, 0x2c, 0x20, 0x31, // r, float3(15., 1
	0x35, 0x2e, 0x2c, 0x20, 0x31, 0x35, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // 5., 15.));.vec3 
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x3d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, // diffuse = cBase_
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x2a, 0x30, 0x2e, 0x30, 0x37, 0x35, 0x3b, // Alpha.rgb*0.075;
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, // .const vec3 glos
	0x73, 0x79, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // sy = max(diffuse
	0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x2c, 0x30, // *2.0, vec3(0.1,0
	0x2e, 0x31, 0x2c, 0x30, 0x2e, 0x31, 0x29, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, // .1,0.1));.vec3 s
	0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x20, 0x3d, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, // pecular = ballIm
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // ageColor * cBase
	0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x62, 0x67, 0x66, 0x78, // _Alpha.rgb;.bgfx
	0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x72, 0x67, 0x62, 0x20, 0x3d, // _FragColor.rgb =
	0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x76, //  ballLightLoop(v
	0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x4e, // _worldPos.xyz, N
	0x2c, 0x20, 0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, // , V, diffuse, gl
	0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, // ossy, specular, 
	0x31, 0x2e, 0x30, 0x2c, 0x20, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x62, 0x67, 0x66, // 1.0, false);.bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x61, 0x20, 0x3d, 0x20, // x_FragColor.a = 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x61, 0x3b, 0x0a, 0x7d, // cBase_Alpha.a;.}
	0x0a, 0x00,                                                                                     // ..
};
static const uint8_t fs_ball_equirectangular_decal_st_glsl[14695] =
{
	0x46, 0x53, 0x48, 0x0b, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x39, // FSH..N........T9
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x6f, // ..#version 440.o
	0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, // ut vec4 bgfx_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // gColor;.#define 
	0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x62, 0x67, 0x66, // gl_FragColor bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x0a, 0x23, 0x64, 0x65, 0x66, // x_FragColor.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x20, 0x20, // ine texture2D   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, //        texture.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // Lod       textur
	0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, // eLod.#define tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ture2DGrad      
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, // textureGrad.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, // ine texture2DPro
	0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, // jLod   texturePr
	0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // ojLod.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, // xture2DProjGrad 
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, //  textureProjGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // CubeLod     text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, // ureLod.#define t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, // extureCubeGrad  
	0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, //   textureGrad.#d
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, // efine texture3D 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //          texture
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, 0x65, 0x78, 0x74, // 2DLodOffset text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, // ureLodOffset.#de
	0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, // fine attribute i
	0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // n.#define varyin
	0x67, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, // g in.#define bgf
	0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // xShadow2D(_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, // er, _coord)     
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // vec4_splat(textu
	0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // re(_sampler, _co
	0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, // ord) ).#define b
	0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, // gfxShadow2DProj(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, // ) vec4_splat(tex
	0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // tureProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x76, 0x61, 0x72, // r, _coord) ).var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, // ying float v_eye
	0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // ;.varying vec3 v
	0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // _normal;.varying
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, //  vec2 v_texcoord
	0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // 0;.varying vec3 
	0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, // v_worldPos;.vec3
	0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, //  instMul(vec3 _v
	0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, // ec, mat3 _mtx) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, //  return ( (_vec)
	0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, //  * (_mtx) ); }.v
	0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, // ec3 instMul(mat3
	0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, //  _mtx, vec3 _vec
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, // ) { return ( (_m
	0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, // tx) * (_vec) ); 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, // }.vec4 instMul(v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, // ec4 _vec, mat4 _
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, // mtx) { return ( 
	0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, // (_vec) * (_mtx) 
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, // ); }.vec4 instMu
	0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, // l(mat4 _mtx, vec
	0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 4 _vec) { return
	0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, //  ( (_mtx) * (_ve
	0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, // c) ); }.float rc
	0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // p(float _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // turn 1.0/_a; }.v
	0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, // ec2 rcp(vec2 _a)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, //  { return vec2(1
	0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, // .0)/_a; }.vec3 r
	0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // cp(vec3 _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, // turn vec3(1.0)/_
	0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, // a; }.vec4 rcp(ve
	0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c4 _a) { return 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, // vec4(1.0)/_a; }.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // vec2 vec2_splat(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // float _x) { retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // rn vec2(_x, _x);
	0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, //  }.vec3 vec3_spl
	0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // at(float _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // eturn vec3(_x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, // x, _x); }.vec4 v
	0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ec4_splat(float 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _x) { return vec
	0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // 4(_x, _x, _x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, // ); }.uvec2 uvec2
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // _splat(uint _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, // { return uvec2(_
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, // x, _x); }.uvec3 
	0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec3_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, //  _x) { return uv
	0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // ec3(_x, _x, _x);
	0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, //  }.uvec4 uvec4_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // plat(uint _x) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, // return uvec4(_x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, //  _x, _x, _x); }.
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, // mat4 mtxFromRows
	0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // (vec4 _0, vec4 _
	0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // 1, vec4 _2, vec4
	0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, //  _3).{.return tr
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, // anspose(mat4(_0,
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, //  _1, _2, _3) );.
	0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, // }.mat4 mtxFromCo
	0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // ls(vec4 _0, vec4
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, //  _1, vec4 _2, ve
	0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c4 _3).{.return 
	0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, // mat4(_0, _1, _2,
	0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, //  _3);.}.mat3 mtx
	0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, // FromRows(vec3 _0
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // , vec3 _1, vec3 
	0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, // _2).{.return tra
	0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, // nspose(mat3(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, // _1, _2) );.}.mat
	0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, // 3 mtxFromCols(ve
	0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, // c3 _0, vec3 _1, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // vec3 _2).{.retur
	0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, // n mat3(_0, _1, _
	0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // 2);.}.uniform ve
	0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, // c4 u_viewRect;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, // niform vec4 u_vi
	0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // ewTexel;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, //  mat4 u_view;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, // iform mat4 u_inv
	0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // View;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // t4 u_proj;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, // rm mat4 u_invPro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // u_viewProj;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, // orm mat4 u_invVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // ewProj;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, // mat4 u_model[32]
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // _modelView;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, // orm mat4 u_model
	0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // ViewProj;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, // m vec4 u_alphaRe
	0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, // f4;.float sqr(co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // nst float v).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // eturn v*v;.}.vec
	0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, // 2 sqr(const vec2
	0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, //  v).{.return v*v
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, // ;.}.vec3 sqr(con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // st vec3 v).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // urn v*v;.}.vec3 
	0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // mul_w1(const vec
	0x33, 0x20, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // 3 v, const mat4 
	0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, // m).{.return v.x*
	0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, // m[0].xyz + (v.y*
	0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, // m[1].xyz + (v.z*
	0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, // m[2].xyz + m[3].
	0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, // xyz));.}.float a
	0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, // cos_approx_divPI
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, // (const float v).
	0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, // {.const float x 
	0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, // = abs(v);.if(1. 
	0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, // - x <= 0.0000610
	0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 3515625).return 
	0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, // (v >= 0.) ? 0. :
	0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  1.;.const float
	0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, //  res = ((-0.1559
	0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, // 72/3.14159265358
	0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, // 9793238462643383
	0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, // 2795) * x + (1.5
	0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, // 6467/3.141592653
	0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, // 5897932384626433
	0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, // 832795) ) * sqrt
	0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // (1. - x);.return
	0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, //  (v >= 0.) ? res
	0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, //  : 1. - res;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, // loat atan2_appro
	0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // x_div2PI(const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // loat y, const fl
	0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // oat x).{.const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, // loat abs_y = abs
	0x28, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // (y);.const float
	0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, //  abs_x = abs(x);
	0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, // .if(abs_x <= 0.0
	0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, // 0006103515625 &&
	0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, //  abs_y <= 0.0000
	0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, // 6103515625).retu
	0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // rn 0.;.const flo
	0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, // at r = (abs_x - 
	0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, // abs_y) / (abs_x 
	0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // + abs_y);.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, // float angle = ((
	0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, // x < 0.) ? (3./8.
	0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, // ) : (1./8.)).+ (
	0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, // 0.211868 /(2.*3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, //  * r * r - 0.987
	0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // 305 /(2.*3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, // 6433832795)) * (
	0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, // (x < 0.) ? -r : 
	0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, // r);.return (y < 
	0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, // 0.) ? -angle : a
	0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, // ngle;.}.float as
	0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, // in_approx_divPI(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, // const float v).{
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, // .const float x =
	0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, //  abs(v);.if(1. -
	0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, //  x <= 0.00006103
	0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, // 515625).return (
	0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, // v >= 0.) ? 0.5 :
	0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, //  -0.5;.const flo
	0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, // at res = ((-0.15
	0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, // 5972/3.141592653
	0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, // 5897932384626433
	0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, // 832795) * x + (1
	0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, // .56467/3.1415926
	0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, // 5358979323846264
	0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, // 33832795) ) * sq
	0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // rt(1. - x);.retu
	0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, // rn (v >= 0.) ? 0
	0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, // .5 - res : -0.5 
	0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, // + res;.}.vec2 ra
	0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, // y_to_equirectang
	0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // ular_uv(const ve
	0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // c3 ray).{.return
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, //  vec2(.0.5 + ata
	0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, // n2_approx_div2PI
	0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, // (ray.y, ray.x),.
	0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, // acos_approx_divP
	0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // I(ray.z));.}.flo
	0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // at InvsRGB(const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, //  float color).{.
	0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, // if (color <= 0.0
	0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, // 4045).return col
	0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, // or * (1.0/12.92)
	0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, // ;.else.return po
	0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, // w(color * (1.0/1
	0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, // .055) + (0.055/1
	0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // .055), 2.4);.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x63, // loat InvRec709(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // onst float color
	0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, // ).{.if (color <=
	0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, //  0.081).return c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, // olor * (1.0/4.5)
	0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, // ;.else.return po
	0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, // w(color * (1.0/1
	0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, // .099) + (0.099/1
	0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, // .099), 1.0/0.45)
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // ;.}.float InvGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, // ma(const float c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, // olor).{.return I
	0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, // nvsRGB(color);.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, // .vec3 InvGamma(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // onst vec3 color)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, // .{.return vec3(I
	0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, // nvGamma(color.x)
	0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // ,InvGamma(color.
	0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // y),InvGamma(colo
	0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, // r.z));.}.vec3 In
	0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // vToneMap(const v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, // ec3 color).{.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, // st float inv_2bh
	0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, //  = 0.5/0.25;.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, // st float bh = 4.
	0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, // 0*0.25 - 2.0;.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, // turn (color - 1.
	0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, // 0 + sqrt(color*(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, // color + bh) + 1.
	0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // 0))*inv_2bh;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // loat sRGB(const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float f).{.float
	0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, //  s;.if (f <= 0.0
	0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, // 031308).s = 12.9
	0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, // 2 * f;.else.s = 
	0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, // 1.055 * pow(f, 1
	0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, // .0/2.4) - 0.055;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // .return s;.}.flo
	0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // at Rec709(const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float f).{.float
	0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, //  s;.if (f <= 0.0
	0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, // 18).s = 4.5 * f;
	0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, // .else.s = 1.099 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, // * pow(f, 0.45) -
	0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, //  0.099;.return s
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // ;.}.float FBGamm
	0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, // a(const float co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, // lor).{.return sR
	0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // GB(color);.}.vec
	0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // 2 FBGamma(const 
	0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // vec2 color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // turn vec2(FBGamm
	0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, // a(color.x),FBGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // ma(color.y));.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, // vec3 FBGamma(con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, // st vec3 color).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, // .return vec3(FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, // amma(color.x),FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, // Gamma(color.y),F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, // BGamma(color.z))
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, // ;.}.float FBTone
	0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // Map(const float 
	0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, // l).{.return l * 
	0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, // ((l*0.25 + 1.0) 
	0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // / (l + 1.0));.}.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, // vec2 FBToneMap(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // onst vec2 color)
	0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, // .{.const float l
	0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, //  = dot(color,vec
	0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, // 2(0.176204+0.010
	0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, // 8109*0.5,0.81298
	0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, // 5+0.0108109*0.5)
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // );.return color 
	0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, // * ((l*0.25 + 1.0
	0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, // ) / (l + 1.0));.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, // }.vec3 FBToneMap
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // (const vec3 colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // r).{.const float
	0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, //  l = dot(color,v
	0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, // ec3(0.176204,0.8
	0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, // 12985,0.0108109)
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // );.return color 
	0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, // * ((l*0.25 + 1.0
	0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, // ) / (l + 1.0));.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, // }.vec4 Additive(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // const vec4 cBase
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, // , const vec4 cBl
	0x65, 0x6e, 0x64, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // end, const float
	0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  percent).{.retu
	0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // rn cBase + cBlen
	0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // d*percent;.}.vec
	0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // 3 Screen (const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // vec3 cBase, cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, // t vec3 cBlend).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, // .return 1.0 - (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, // .0 - cBase) * (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // .0 - cBlend);.}.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6e, // vec4 Screen (con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, // st vec4 cBase, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // onst vec4 cBlend
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, // ).{.return 1.0 -
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, //  (1.0 - cBase) *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, //  (1.0 - cBlend);
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, // .}.vec3 ScreenHD
	0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, // R (const vec3 cB
	0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // ase, const vec3 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // cBlend).{.return
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, //  max(1.0 - (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // - cBase) * (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // - cBlend), vec3(
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // 0.,0.,0.));.}.ve
	0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, // c4 ScreenHDR (co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, // nst vec4 cBase, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // const vec4 cBlen
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, // d).{.return max(
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, // 1.0 - (1.0 - cBa
	0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, // se) * (1.0 - cBl
	0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, // end), vec4(0.,0.
	0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // ,0.,0.));.}.vec4
	0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, //  Multiply (const
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, //  vec4 cBase, con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, // st vec4 cBlend, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, // const float perc
	0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, // ent).{.return cB
	0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, // ase * cBlend*per
	0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, // cent;.}.vec4 Ove
	0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, // rlay (const vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, //  cBase, const ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, // c4 cBlend).{.vec
	0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, // 4 cNew = step(0.
	0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, // 5, cBase);.cNew 
	0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, // = mix(cBase*cBle
	0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, // nd*2.0, 1.0-2.0*
	0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, // (1.0-cBase)*(1.0
	0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, // -cBlend), cNew);
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, // .return cNew;.}.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, // vec4 OverlayHDR 
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, // (const vec4 cBas
	0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // e, const vec4 cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, // lend).{.vec4 cNe
	0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, // w = step(0.5, cB
	0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, // ase);.cNew = max
	0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, // (mix(cBase*cBlen
	0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, // d*2.0, 1.0-2.0*(
	0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, // 1.0-cBase)*(1.0-
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, // cBlend), cNew), 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, // vec4(0.,0.,0.,0.
	0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, // ));.return cNew;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, // .}.vec3 cos_hemi
	0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x63, 0x6f, // sphere_sample(co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, // nst vec2 t).{.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, // nst float phi = 
	0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, // t.y * (2.0*3.141
	0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, // 5926535897932384
	0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x63, // 626433832795);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, // onst float cosTh
	0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // eta = sqrt(1.0 -
	0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, //  t.x);.const flo
	0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, // at sinTheta = sq
	0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // rt(t.x);.float s
	0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x73, 0x69, 0x6e, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, // p,cp;.sincos(phi
	0x2c, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // ,sp,cp);.return 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, // vec3(cp * sinThe
	0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, // ta, cosTheta, sp
	0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, //  * sinTheta);.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, // vec3 rotate_to_v
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, // ector_upper(cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // t vec3 vec, cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, // t vec3 normal).{
	0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, // .if(normal.y > -
	0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // 0.99999).{.const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, //  float h = 1.0/(
	0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x63, // 1.0+normal.y);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, // onst float hz = 
	0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // h*normal.z;.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, // t float hzx = hz
	0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // *normal.x;.retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, // n vec3(.vec.x * 
	0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, // (normal.y+hz*nor
	0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, // mal.z) + vec.y *
	0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, //  normal.x - vec.
	0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, // z * hzx,.vec.y *
	0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, //  normal.y - vec.
	0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, // x * normal.x - v
	0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, // ec.z * normal.z,
	0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // .vec.y * normal.
	0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, // z - vec.x * hzx 
	0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // + vec.z * (norma
	0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, // l.y+h*normal.x*n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, // ormal.x));.}.els
	0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, // e return -vec;.}
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, // .uniform mat4 ma
	0x74, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // tView;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, // at4 matWorldView
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, // ;.uniform mat4 m
	0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x76, 0x65, 0x72, // atWorldViewInver
	0x73, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // se;.uniform mat4
	0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, //  matWorldViewPro
	0x6a, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // j[2];.uniform ma
	0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, 0x75, // t4 matProj[2];.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // niform sampler2D
	0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, //  tex_ball_color;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .uniform sampler
	0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // 2D tex_env;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, // orm sampler2D te
	0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x3b, 0x0a, 0x75, // x_diffuse_env;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // niform sampler2D
	0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x3b, //  tex_ball_decal;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .uniform sampler
	0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // 2DArray tex_ball
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // _playfield;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x62, 0x61, 0x73, 0x69, 0x63, // orm vec4 u_basic
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // _shade_mode;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, // form vec4 ballLi
	0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x5d, 0x3b, 0x0a, 0x75, // ghtPos[2 + 8];.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, // niform vec4 ball
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x32, 0x20, // LightEmission[2 
	0x2b, 0x20, 0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // + 8];.uniform ve
	0x63, 0x34, 0x20, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, // c4 cAmbient_Ligh
	0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // tRange;.uniform 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, // vec4 fenvEmissio
	0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x3b, // nScale_TexWidth;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x44, // .uniform vec4 fD
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, // isableLighting_t
	0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // op_below;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x53, 0x63, 0x61, // m vec4 fSceneSca
	0x6c, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // le;.uniform vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x0a, 0x75, 0x6e, //  cBase_Alpha;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, // iform vec4 Rough
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, // ness_WrapL_Edge_
	0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // Thickness;.float
	0x20, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, //  GeometricOpacit
	0x79, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, // y(const float Nd
	0x6f, 0x74, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // otV, const float
	0x20, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, //  alpha, const fl
	0x6f, 0x61, 0x74, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2c, 0x20, 0x63, 0x6f, // oat blending, co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, // nst float thickn
	0x65, 0x73, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // ess).{.const flo
	0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x56, // at x = abs(NdotV
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, // );.const float g
	0x20, 0x3d, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x2a, 0x20, 0x28, 0x31, //  = blending * (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x78, 0x20, 0x2f, 0x20, 0x28, 0x78, 0x20, 0x2a, 0x20, 0x28, // .0 - (x / (x * (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, // 1.0 - thickness)
	0x20, 0x2b, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, 0x29, 0x29, 0x3b, //  + thickness)));
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x61, 0x6c, 0x70, 0x68, // .return mix(alph
	0x61, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x67, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // a, 1.0, g);.}.ve
	0x63, 0x33, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, // c3 FresnelSchlic
	0x6b, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, // k(const vec3 spe
	0x63, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4c, // c, const float L
	0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // dotH, const floa
	0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // t edge).{.return
	0x20, 0x73, 0x70, 0x65, 0x63, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x65, 0x64, //  spec + (vec3(ed
	0x67, 0x65, 0x2c, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x65, 0x64, 0x67, 0x65, 0x29, 0x20, 0x2d, 0x20, // ge,edge,edge) - 
	0x73, 0x70, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x31, 0x2e, 0x30, 0x20, // spec) * pow(1.0 
	0x2d, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x35, 0x2e, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // - LdotH, 5.);.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, // vec3 DoPointLigh
	0x74, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, // t(const vec3 pos
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, // , const vec3 N, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x63, 0x6f, // const vec3 V, co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // nst vec3 diffuse
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, // , const vec3 glo
	0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ssy, const float
	0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, //  edge, const flo
	0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x2c, 0x20, // at glossyPower, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x2c, 0x20, 0x63, 0x6f, 0x6e, // const int i, con
	0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, // st bool is_metal
	0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, // ).{.const vec3 l
	0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x20, 0x28, 0x6d, // ightDir = ( ( (m
	0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, // atView) * (vec4(
	0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x69, 0x5d, 0x2e, // ballLightPos[i].
	0x78, 0x79, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, // xyz, 1.0)) ) ).x
	0x79, 0x7a, 0x20, 0x2d, 0x20, 0x70, 0x6f, 0x73, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // yz - pos;.const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x4c, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, // vec3 L = normali
	0x7a, 0x65, 0x28, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x29, 0x3b, 0x0a, 0x63, 0x6f, // ze(lightDir);.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, // nst float NdotL 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x20, 0x4c, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, // = dot(N, L);.vec
	0x33, 0x20, 0x4f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, // 3 Out = vec3(0.0
	0x2c, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, // ,0.0,0.0);.if (!
	0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x4e, 0x64, 0x6f, // is_metal && (Ndo
	0x74, 0x4c, 0x20, 0x2b, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, // tL + Roughness_W
	0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, // rapL_Edge_Thickn
	0x65, 0x73, 0x73, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x4f, 0x75, // ess.y > 0.0)).Ou
	0x74, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x28, 0x28, // t = diffuse * ((
	0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x2b, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, // NdotL + Roughnes
	0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, // s_WrapL_Edge_Thi
	0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x73, 0x71, 0x72, 0x28, // ckness.y) / sqr(
	0x31, 0x2e, 0x30, 0x2b, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, // 1.0+Roughness_Wr
	0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, // apL_Edge_Thickne
	0x73, 0x73, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, // ss.y));.if (Ndot
	0x4c, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // L > 0.0).{.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x48, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, //  vec3 H = normal
	0x69, 0x7a, 0x65, 0x28, 0x4c, 0x20, 0x2b, 0x20, 0x56, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // ize(L + V);.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, // t float NdotH = 
	0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // dot(N, H);.const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, //  float LdotH = d
	0x6f, 0x74, 0x28, 0x4c, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // ot(L, H);.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x56, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, 0x6f, // float VdotH = do
	0x74, 0x28, 0x56, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x4e, 0x64, // t(V, H);.if ((Nd
	0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x4c, // otH > 0.0) && (L
	0x64, 0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, // dotH > 0.0) && (
	0x56, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x4f, 0x75, // VdotH > 0.0)).Ou
	0x74, 0x20, 0x2b, 0x3d, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x6c, // t += FresnelSchl
	0x69, 0x63, 0x6b, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x4c, 0x64, 0x6f, 0x74, // ick(glossy, Ldot
	0x48, 0x2c, 0x20, 0x65, 0x64, 0x67, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x28, 0x67, 0x6c, // H, edge) * (((gl
	0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // ossyPower + 1.0)
	0x20, 0x2f, 0x20, 0x28, 0x38, 0x2e, 0x30, 0x2a, 0x56, 0x64, 0x6f, 0x74, 0x48, 0x29, 0x29, 0x20, //  / (8.0*VdotH)) 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x67, 0x6c, 0x6f, // * pow(NdotH, glo
	0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x63, 0x6f, // ssyPower));.}.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, // nst float sqrl_l
	0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x6c, 0x69, // ightDir = dot(li
	0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2c, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x29, // ghtDir,lightDir)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x3d, // ;.float fAtten =
	0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x73, 0x71, 0x72, //  clamp(1.0 - sqr
	0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2a, 0x73, 0x71, 0x72, 0x6c, 0x5f, // l_lightDir*sqrl_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2f, 0x28, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, // lightDir/(cAmbie
	0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, // nt_LightRange.w*
	0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, // cAmbient_LightRa
	0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, // nge.w*cAmbient_L
	0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, // ightRange.w*cAmb
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, // ient_LightRange.
	0x77, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x66, // w), 0.0, 1.0);.f
	0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x3d, 0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x2a, 0x66, // Atten = fAtten*f
	0x41, 0x74, 0x74, 0x65, 0x6e, 0x2f, 0x28, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, // Atten/(sqrl_ligh
	0x74, 0x44, 0x69, 0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, // tDir + 1.0);.vec
	0x33, 0x20, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x67, 0x6c, 0x6f, 0x73, // 3 ambient = glos
	0x73, 0x79, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, // sy;.if (!is_meta
	0x6c, 0x29, 0x0a, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x2b, 0x3d, 0x20, 0x64, 0x69, // l).ambient += di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // ffuse;.const vec
	0x33, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x20, 0x3d, 0x20, 0x4f, 0x75, 0x74, 0x20, 0x2a, // 3 result = Out *
	0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, //  ballLightEmissi
	0x6f, 0x6e, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x66, 0x41, 0x74, 0x74, // on[i].xyz * fAtt
	0x65, 0x6e, 0x20, 0x2b, 0x20, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x2a, 0x20, 0x63, // en + ambient * c
	0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, // Ambient_LightRan
	0x67, 0x65, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x44, 0x69, 0x73, // ge.xyz;.if (fDis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, // ableLighting_top
	0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, // _below.x != 0.0)
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x72, 0x65, 0x73, 0x75, // .return mix(resu
	0x6c, 0x74, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x66, 0x44, 0x69, 0x73, 0x61, // lt,diffuse,fDisa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, // bleLighting_top_
	0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, // below.x);.else.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, // eturn result;.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, // vec3 DoEnvmapDif
	0x66, 0x75, 0x73, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // fuse(const vec3 
	0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, // N, const vec3 di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // ffuse).{.const v
	0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // ec3 env = textur
	0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // eLod(tex_diffuse
	0x5f, 0x65, 0x6e, 0x76, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, // _env, ray_to_equ
	0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, // irectangular_uv(
	0x4e, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x72, 0x65, // N), 0.0).xyz;.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x65, // turn diffuse * e
	0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, // nv*fenvEmissionS
	0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, // cale_TexWidth.x;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, // .}.vec3 DoEnvmap
	0x47, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // Glossy(const vec
	0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // 3 N, const vec3 
	0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, 0x75, // V, const vec2 Ru
	0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, // v, const vec3 gl
	0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ossy, const floa
	0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x29, 0x0a, 0x7b, // t glossyPower).{
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x69, 0x70, // .const float mip
	0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x66, 0x65, 0x6e, 0x76, //  = min(log2(fenv
	0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, // EmissionScale_Te
	0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // xWidth.y * sqrt(
	0x33, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x35, 0x2a, 0x6c, 0x6f, 0x67, 0x32, // 3.0)) - 0.5*log2
	0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x2b, 0x20, 0x31, // (glossyPower + 1
	0x2e, 0x30, 0x29, 0x2c, 0x20, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, // .0), log2(fenvEm
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, // issionScale_TexW
	0x69, 0x64, 0x74, 0x68, 0x2e, 0x79, 0x29, 0x2d, 0x31, 0x2e, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // idth.y)-1.);.con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, // st vec3 env = te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, // xtureLod(tex_env
	0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x6d, 0x69, 0x70, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // , Ruv, mip).xyz;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, // .return glossy *
	0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, //  env*fenvEmissio
	0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, // nScale_TexWidth.
	0x78, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, // x;.}.vec3 DoEnvm
	0x61, 0x70, 0x32, 0x6e, 0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // ap2ndLayer(const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x31, 0x73, 0x74, 0x4c, 0x61, //  vec3 color1stLa
	0x79, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // yer, const vec3 
	0x70, 0x6f, 0x73, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // pos, const vec3 
	0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, // N, const vec3 V,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, //  const float Ndo
	0x74, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, // tV, const vec2 R
	0x75, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, // uv, const vec3 s
	0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // pecular).{.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x77, 0x20, 0x3d, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, //  vec3 w = Fresne
	0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, 0x6b, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, // lSchlick(specula
	0x72, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, // r, NdotV, Roughn
	0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, // ess_WrapL_Edge_T
	0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // hickness.z);.con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, // st vec3 env = te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, // xtureLod(tex_env
	0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // , Ruv, 0.0).xyz;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .return mix(colo
	0x72, 0x31, 0x73, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2c, 0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, // r1stLayer, env*f
	0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, // envEmissionScale
	0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x2c, 0x20, 0x77, 0x29, 0x3b, // _TexWidth.x, w);
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, // .}.vec3 lightLoo
	0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, // p(const vec3 pos
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // , vec3 N, const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, // vec3 V, vec3 dif
	0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // fuse, vec3 gloss
	0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, // y, const vec3 sp
	0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // ecular, const fl
	0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // oat edge, const 
	0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x7b, // bool is_metal).{
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, // .vec3 color = ve
	0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x66, // c3_splat(0.0);.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // loat NdotV = dot
	0x28, 0x4e, 0x2c, 0x56, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x56, // (N,V);.if (NdotV
	0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x4e, 0x20, 0x3d, 0x20, 0x2d, 0x4e, //  < 0.0).{.N = -N
	0x3b, 0x0a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x2d, 0x4e, 0x64, 0x6f, 0x74, 0x56, // ;.NdotV = -NdotV
	0x3b, 0x0a, 0x7d, 0x0a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, // ;.}.NdotV = min(
	0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // NdotV, 1.0);.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // st float diffuse
	0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // Max = max(diffus
	0x65, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, // e.x,max(diffuse.
	0x79, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, // y,diffuse.z));.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // onst float gloss
	0x79, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, // yMax = max(gloss
	0x79, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x79, // y.x,max(glossy.y
	0x2c, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // ,glossy.z));.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, // st float specula
	0x72, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, // rMax = max(specu
	0x6c, 0x61, 0x72, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, // lar.x,max(specul
	0x61, 0x72, 0x2e, 0x79, 0x2c, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x7a, 0x29, // ar.y,specular.z)
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // );.const float s
	0x75, 0x6d, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, // um = diffuseMax 
	0x2b, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3b, 0x0a, 0x69, 0x66, // + glossyMax ;.if
	0x20, 0x28, 0x73, 0x75, 0x6d, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x26, 0x26, 0x20, 0x66, //  (sum > 1.0 && f
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, // DisableLighting_
	0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x31, 0x2e, // top_below.x < 1.
	0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0).{.const float
	0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x73, 0x75, //  invsum = 1.0/su
	0x6d, 0x3b, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, // m;.diffuse *= in
	0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, 0x3d, 0x20, // vsum;.glossy *= 
	0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x21, // invsum;.}.if ((!
	0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, // is_metal && (dif
	0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, // fuseMax > 0.0)) 
	0x7c, 0x7c, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, // || (glossyMax > 
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x44, 0x69, 0x73, // 0.0)).{.if (fDis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, // ableLighting_top
	0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x29, // _below.x == 1.0)
	0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, // .color += float(
	0x32, 0x29, 0x20, 0x2a, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x3b, 0x0a, 0x65, 0x6c, // 2) * diffuse;.el
	0x73, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, // se for (int i = 
	0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x32, 0x3b, 0x20, 0x69, 0x2b, 0x2b, 0x29, 0x0a, 0x63, // 0; i < 2; i++).c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, // olor += DoPointL
	0x69, 0x67, 0x68, 0x74, 0x28, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, // ight(pos, N, V, 
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, // diffuse, glossy,
	0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, //  edge, Roughness
	0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, // _WrapL_Edge_Thic
	0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x2c, 0x20, 0x69, 0x2c, 0x20, 0x69, 0x73, 0x5f, 0x6d, // kness.x, i, is_m
	0x65, 0x74, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, // etal);.}.if (!is
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, // _metal && (diffu
	0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x63, 0x6f, // seMax > 0.0)).co
	0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, // lor += DoEnvmapD
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, 0x20, 0x28, 0x28, 0x20, 0x28, 0x20, 0x28, 0x76, 0x65, // iffuse( (( ( (ve
	0x63, 0x34, 0x28, 0x4e, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, // c4(N,0.0)) * (ma
	0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, // tView) ) ).xyz),
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, //  diffuse);.if ((
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, // glossyMax > 0.0)
	0x20, 0x7c, 0x7c, 0x20, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, //  || (specularMax
	0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, //  > 0.0)).{.vec3 
	0x52, 0x20, 0x3d, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x29, 0x2a, // R = (2.0*NdotV)*
	0x4e, 0x20, 0x2d, 0x20, 0x56, 0x3b, 0x0a, 0x52, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x20, 0x28, 0x20, // N - V;.R = (( ( 
	0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x52, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, // (vec4(R,0.0)) * 
	0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, // (matView) ) ).xy
	0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, // z);.const vec2 R
	0x75, 0x76, 0x20, 0x3d, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, // uv = ray_to_equi
	0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x52, // rectangular_uv(R
	0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, // );.if (glossyMax
	0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, //  > 0.0).color +=
	0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x47, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x28, //  DoEnvmapGlossy(
	0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // N, V, Ruv, gloss
	0x79, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, // y, Roughness_Wra
	0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, // pL_Edge_Thicknes
	0x73, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, // s.x);.if (specul
	0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, // arMax > 0.0).col
	0x6f, 0x72, 0x20, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x32, 0x6e, 0x64, // or = DoEnvmap2nd
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x70, 0x6f, 0x73, // Layer(color, pos
	0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x52, // , N, V, NdotV, R
	0x75, 0x76, 0x2c, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x29, 0x3b, 0x0a, 0x7d, // uv, specular);.}
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3b, 0x0a, // .return color ;.
	0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, // }.uniform vec4 i
	0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, // nvTableRes_refle
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // ction;.uniform v
	0x65, 0x63, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // ec4 w_h_disableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x61, // ighting;.vec3 ba
	0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, // llLightLoop(cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // t vec3 pos, vec3
	0x20, 0x4e, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, //  N, vec3 V, vec3
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, //  diffuse, vec3 g
	0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // lossy, const vec
	0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // 3 specular, cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, // t float edge, co
	0x6e, 0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, // nst bool is_meta
	0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // l).{.const float
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, //  diffuseMax = ma
	0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, // x(diffuse.x,max(
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x79, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // diffuse.y,diffus
	0x65, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // e.z));.const flo
	0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, // at glossyMax = m
	0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, // ax(glossy.x,max(
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x79, 0x2c, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, // glossy.y,glossy.
	0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // z));.const float
	0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, //  specularMax = m
	0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x78, 0x2c, 0x6d, 0x61, // ax(specular.x,ma
	0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x79, 0x2c, 0x73, 0x70, 0x65, // x(specular.y,spe
	0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // cular.z));.const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, //  float sum = dif
	0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x2b, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, // fuseMax + glossy
	0x4d, 0x61, 0x78, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x73, 0x75, 0x6d, 0x20, 0x3e, 0x20, 0x31, 0x2e, // Max;.if(sum > 1.
	0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0).{.const float
	0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x73, 0x75, //  invsum = 1.0/su
	0x6d, 0x3b, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, // m;.diffuse *= in
	0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, 0x3d, 0x20, // vsum;.glossy *= 
	0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // invsum;.}.vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, // olor = vec3(0.0,
	0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x28, //  0.0, 0.0);.if((
	0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, // !is_metal && (di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // ffuseMax > 0.0))
	0x20, 0x7c, 0x7c, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, //  || (glossyMax >
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x66, 0x6f, 0x72, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, //  0.0)).for(int i
	0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x3b, //  = 0; i < 2 + 8;
	0x20, 0x69, 0x2b, 0x2b, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, //  i++).color += D
	0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x70, 0x6f, 0x73, 0x2c, // oPointLight(pos,
	0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, //  N, V, diffuse, 
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x52, 0x6f, // glossy, edge, Ro
	0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, // ughness_WrapL_Ed
	0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x2c, 0x20, // ge_Thickness.x, 
	0x69, 0x2c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x69, 0x66, // i, is_metal);.if
	0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, // (!is_metal && (d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, // iffuseMax > 0.0)
	0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, // ).color += DoEnv
	0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // mapDiffuse(norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, // lize(( (matView)
	0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x4e, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, //  * (vec4(N, 0.0)
	0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // ) ).xyz), diffus
	0x65, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, // e);.if(specularM
	0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // ax > 0.0).color 
	0x2b, 0x3d, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x3b, 0x0a, 0x72, 0x65, 0x74, // += specular;.ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, 0x69, // urn color;.}.voi
	0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // d main().{.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, //  vec3 V = normal
	0x69, 0x7a, 0x65, 0x28, 0x20, 0x2d, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, // ize( -v_worldPos
	0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // .xyz);.const vec
	0x33, 0x20, 0x4e, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // 3 N = normalize(
	0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, // v_normal.xyz);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x52, 0x20, 0x3d, 0x20, 0x72, 0x65, // onst vec3 R = re
	0x66, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x56, 0x2c, 0x20, 0x4e, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, // flect(V, N);.vec
	0x33, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // 3 ballImageColor
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, // ;.const float ed
	0x67, 0x65, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x56, 0x2c, 0x20, 0x52, 0x29, 0x3b, 0x0a, // ge = dot(V, R);.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x6f, 0x64, 0x20, // const float lod 
	0x3d, 0x20, 0x28, 0x65, 0x64, 0x67, 0x65, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x36, 0x29, 0x20, 0x3f, // = (edge > 0.6) ?
	0x20, 0x65, 0x64, 0x67, 0x65, 0x2a, 0x28, 0x36, 0x2e, 0x30, 0x2a, 0x31, 0x2e, 0x30, 0x2f, 0x30, //  edge*(6.0*1.0/0
	0x2e, 0x34, 0x29, 0x2d, 0x28, 0x36, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x36, 0x2f, 0x30, 0x2e, 0x34, // .4)-(6.0*0.6/0.4
	0x29, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // ) : 0.0;.const v
	0x65, 0x63, 0x33, 0x20, 0x72, 0x76, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x20, 0x28, 0x76, 0x65, 0x63, // ec3 rv = (( (vec
	0x34, 0x28, 0x2d, 0x52, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, // 4(-R,0.0)) * (ma
	0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, // tView) ).xyz);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x20, 0x3d, 0x20, 0x72, // onst vec2 uv = r
	0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, // ay_to_equirectan
	0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x72, 0x76, 0x29, 0x3b, 0x0a, 0x62, 0x61, // gular_uv(rv);.ba
	0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x74, // llImageColor = t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, // extureLod(tex_ba
	0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x75, 0x76, 0x2c, 0x20, 0x6c, 0x6f, // ll_color, uv, lo
	0x64, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // d).rgb;.const ve
	0x63, 0x34, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x20, 0x3d, // c4 decalColorT =
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, //  texture(tex_bal
	0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // l_decal, v_texco
	0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x65, 0x63, 0x61, // ord0);.vec3 deca
	0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, // lColor = decalCo
	0x6c, 0x6f, 0x72, 0x54, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, // lorT.rgb;.ballIm
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, // ageColor = Scree
	0x6e, 0x48, 0x44, 0x52, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, // nHDR(ballImageCo
	0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // lor, decalColor)
	0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, // ;.if ((w_h_disab
	0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x7a, 0x20, 0x21, 0x3d, 0x20, // leLighting.z != 
	0x30, 0x2e, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, // 0.)).{.gl_FragCo
	0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, // lor = vec4(ballI
	0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, // mageColor,cBase_
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x61, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // Alpha.a);.return
	0x3b, 0x0a, 0x7d, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, // ;.}.ballImageCol
	0x6f, 0x72, 0x20, 0x2a, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, // or *= 0.5*fenvEm
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, // issionScale_TexW
	0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // idth.x;.const ve
	0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, // c3 playfield_nor
	0x6d, 0x61, 0x6c, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, // mal = ( (matWorl
	0x64, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // dView) * (float4
	0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x31, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x20, 0x29, // (0.,0.,1.,0.)) )
	0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // .xyz;.const floa
	0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x70, 0x6c, // t NdotR = dot(pl
	0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, // ayfield_normal, 
	0x52, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, // R);.const vec3 p
	0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x20, // layfield_p0 = ( 
	0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, // (matWorldView) *
	0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x20, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, //  (vec4( 0.,0.,0.
	0x2c, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, // ,1.0)) ).xyz;.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x20, 0x3d, 0x20, 0x64, 0x6f, // nst float t = do
	0x74, 0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // t(playfield_norm
	0x61, 0x6c, 0x2c, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, // al, v_worldPos.x
	0x79, 0x7a, 0x20, 0x2d, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, // yz - playfield_p
	0x30, 0x29, 0x20, 0x2f, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // 0) / NdotR;.cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, // t vec3 playfield
	0x5f, 0x68, 0x69, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, // _hit = v_worldPo
	0x73, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x74, 0x20, 0x2a, 0x20, 0x52, 0x3b, 0x0a, 0x63, // s.xyz - t * R;.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x20, 0x3d, // onst vec4 proj =
	0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x76, 0x5f, 0x65, 0x79, //  ( (matProj[v_ey
	0x65, 0x5d, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x70, 0x6c, 0x61, 0x79, // e]) * (vec4(play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x68, 0x69, 0x74, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, // field_hit, 1.0))
	0x20, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, //  );.const vec2 u
	0x76, 0x70, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, // vp = vec2(0.5, 0
	0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x70, 0x72, 0x6f, 0x6a, 0x2e, // .5) + vec2(proj.
	0x78, 0x2c, 0x20, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x30, // x, -proj.y) * (0
	0x2e, 0x35, 0x20, 0x2f, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x63, 0x6f, // .5 / proj.w);.co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, // nst vec3 playfie
	0x6c, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2a, // ldColor = 0.25 *
	0x20, 0x28, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, //  (.texture(tex_b
	0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x76, // all_playfield, v
	0x65, 0x63, 0x33, 0x28, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // ec3((uvp + vec2(
	0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, // w_h_disableLight
	0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, // ing.x, 0.)).x, (
	0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, // uvp + vec2(w_h_d
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, // isableLighting.x
	0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, // , 0.)).y, v_eye)
	0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, // ).rgb.+ texture(
	0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, // tex_ball_playfie
	0x6c, 0x64, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, // ld, vec3((uvp - 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // vec2(w_h_disable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, // Lighting.x, 0.))
	0x2e, 0x78, 0x2c, 0x20, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // .x, (uvp - vec2(
	0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, // w_h_disableLight
	0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x76, // ing.x, 0.)).y, v
	0x5f, 0x65, 0x79, 0x65, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, // _eye)).rgb.+ tex
	0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, // ture(tex_ball_pl
	0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x75, // ayfield, vec3((u
	0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, // vp + vec2(0., w_
	0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, // h_disableLightin
	0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, // g.y)).x, (uvp + 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, // vec2(0., w_h_dis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, // ableLighting.y))
	0x2e, 0x79, 0x2c, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, // .y, v_eye)).rgb.
	0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, // + texture(tex_ba
	0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x76, 0x65, // ll_playfield, ve
	0x63, 0x33, 0x28, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, // c3((uvp - vec2(0
	0x2e, 0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, // ., w_h_disableLi
	0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x75, // ghting.y)).x, (u
	0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, // vp - vec2(0., w_
	0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, // h_disableLightin
	0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x29, // g.y)).y, v_eye))
	0x2e, 0x72, 0x67, 0x62, 0x0a, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x28, 0x75, 0x76, // .rgb.);.if (!(uv
	0x70, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x20, 0x7c, 0x7c, 0x20, 0x75, 0x76, 0x70, 0x2e, // p.x < 0. || uvp.
	0x78, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x20, 0x7c, 0x7c, 0x20, 0x75, 0x76, 0x70, 0x2e, 0x79, 0x20, // x > 1. || uvp.y 
	0x3c, 0x20, 0x30, 0x2e, 0x20, 0x7c, 0x7c, 0x20, 0x75, 0x76, 0x70, 0x2e, 0x79, 0x20, 0x3e, 0x20, // < 0. || uvp.y > 
	0x31, 0x2e, 0x29, 0x0a, 0x26, 0x26, 0x20, 0x21, 0x28, 0x74, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, // 1.).&& !(t <= 0.
	0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, // )).{.ballImageCo
	0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x6c, 0x65, 0x72, 0x70, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, // lor = lerp(ballI
	0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, // mageColor, playf
	0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, // ieldColor, smoot
	0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x35, 0x2c, // hstep(0.0, 0.15,
	0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x29, 0x20, 0x2a, 0x20, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, //  NdotR) * invTab
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, // leRes_reflection
	0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, // .z);.}.ballImage
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, 0x62, 0x61, 0x6c, 0x6c, // Color = min(ball
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ImageColor, floa
	0x74, 0x33, 0x28, 0x31, 0x35, 0x2e, 0x2c, 0x20, 0x31, 0x35, 0x2e, 0x2c, 0x20, 0x31, 0x35, 0x2e, // t3(15., 15., 15.
	0x29, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // ));.vec3 diffuse
	0x20, 0x3d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, //  = cBase_Alpha.r
	0x67, 0x62, 0x2a, 0x30, 0x2e, 0x30, 0x37, 0x35, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // gb*0.075;.const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x3d, 0x20, 0x6d, 0x61, // vec3 glossy = ma
	0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x76, // x(diffuse*2.0, v
	0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x2c, 0x30, 0x2e, 0x31, 0x2c, 0x30, 0x2e, 0x31, 0x29, // ec3(0.1,0.1,0.1)
	0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, // );.vec3 specular
	0x20, 0x3d, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, //  = ballImageColo
	0x72, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, // r * cBase_Alpha.
	0x72, 0x67, 0x62, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, // rgb;.gl_FragColo
	0x72, 0x2e, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, // r.rgb = ballLigh
	0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, // tLoop(v_worldPos
	0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, // .xyz, N, V, diff
	0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x73, 0x70, 0x65, // use, glossy, spe
	0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x66, 0x61, 0x6c, 0x73, // cular, 1.0, fals
	0x65, 0x29, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // e);.gl_FragColor
	0x2e, 0x61, 0x20, 0x3d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, // .a = cBase_Alpha
	0x2e, 0x61, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,                                                       // .a;.}..
};
static const uint8_t fs_ball_equirectangular_decal_st_dx11[8132] =
{
	0x46, 0x53, 0x48, 0x0b, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x07, 0x6d, // FSH..N.........m
	0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x14, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, // atView..........
	0x0c, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x14, 0x00, 0x40, // .matWorldView..@
	0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x14, // ........matProj.
	0x02, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, // ..........ballLi
	0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x0a, 0x00, 0x01, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, // ghtPos..........
	0x11, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, // .ballLightEmissi
	0x6f, 0x6e, 0x12, 0x0a, 0xa0, 0x01, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x63, 0x41, 0x6d, // on...........cAm
	0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, // bient_LightRange
	0x12, 0x00, 0x40, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x65, 0x6e, 0x76, 0x45, // ..@........fenvE
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, // missionScale_Tex
	0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x00, 0x50, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // Width..P........
	0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, // fDisableLighting
	0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x12, 0x00, 0x60, 0x02, 0x01, 0x00, // _top_below..`...
	0x00, 0x00, 0x00, 0x00, 0x0b, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, // .....cBase_Alpha
	0x12, 0x00, 0x70, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x52, 0x6f, 0x75, 0x67, 0x68, // ..p........Rough
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, // ness_WrapL_Edge_
	0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x00, 0x80, 0x02, 0x01, 0x00, 0x00, // Thickness.......
	0x00, 0x00, 0x00, 0x16, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, // ....invTableRes_
	0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x00, 0x90, 0x02, 0x01, 0x00, // reflection......
	0x00, 0x00, 0x00, 0x00, 0x13, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // .....w_h_disable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x00, 0xa0, 0x02, 0x01, 0x00, 0x00, 0x00, // Lighting........
	0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // ...tex_ball_colo
	0x72, 0x30, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, // r0..........tex_
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x30, 0x01, 0x02, 0x00, 0x01, // diffuse_env0....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, // ......tex_ball_d
	0x65, 0x63, 0x61, 0x6c, 0x30, 0x01, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x74, // ecal0..........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // ex_ball_playfiel
	0x64, 0x30, 0x01, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, // d0..........tex_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x01, 0x00, 0x00, 0x01, 0x00, // ball_color0.....
	0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // .....tex_diffuse
	0x5f, 0x65, 0x6e, 0x76, 0x30, 0x01, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, // _env0..........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x30, 0x01, 0x03, // ex_ball_decal0..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // ........tex_ball
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x30, 0x01, 0x04, 0x00, 0x01, 0x00, // _playfield0.....
	0x00, 0x00, 0x00, 0x00, 0x88, 0x1d, 0x00, 0x00, 0x44, 0x58, 0x42, 0x43, 0xc6, 0x62, 0x58, 0x36, // ........DXBC.bX6
	0xd8, 0x31, 0xa3, 0x65, 0xa5, 0xf0, 0xc2, 0x21, 0x25, 0x78, 0x77, 0xab, 0x01, 0x00, 0x00, 0x00, // .1.e...!%xw.....
	0x88, 0x1d, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00, // ........,.......
	0x04, 0x01, 0x00, 0x00, 0x49, 0x53, 0x47, 0x4e, 0x9c, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, // ....ISGN........
	0x08, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, // ................
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x01, 0x01, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0e, 0x0e, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x03, 0x03, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, // ............SV_P
	0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, // OSITION.TEXCOORD
	0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x4f, 0x53, 0x47, 0x4e, 0x2c, 0x00, 0x00, 0x00, // .NORMAL.OSGN,...
	0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........ .......
	0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, // ................
	0x53, 0x56, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x00, 0xab, 0xab, 0x53, 0x48, 0x45, 0x58, // SV_TARGET...SHEX
	0x7c, 0x1c, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x1f, 0x07, 0x00, 0x00, 0x6a, 0x28, 0x00, 0x01, // |...P.......j(..
	0x59, 0x08, 0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, // Y...F. .....+...
	0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, // Z....`......Z...
	0x00, 0x60, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, // .`......Z....`..
	0x03, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ....Z....`......
	0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, // X....p......UU..
	0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, // X....p......UU..
	0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, // X....p......UU..
	0x58, 0x40, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, // X@...p......UU..
	0x62, 0x10, 0x00, 0x03, 0x12, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, // b...........b...
	0xe2, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x32, 0x10, 0x10, 0x00, // ........b...2...
	0x02, 0x00, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x72, 0x10, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....b...r.......
	0x65, 0x00, 0x00, 0x03, 0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x02, // e.... ......h...
	0x0b, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x46, 0x12, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x80, // F...A.......F...
	0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x12, 0x00, 0x10, 0x00, // A.......D.......
	0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, // ............8...
	0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // r...............
	0x46, 0x12, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, // F...A...........
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x17, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x96, 0x17, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, // ........D.......
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ....:.......8...
	0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // r...............
	0x96, 0x17, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // :.......:.......
	0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 2...r.......F...
	0x01, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........A.......
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // F...............
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x02, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....1...........
	0x01, 0x40, 0x00, 0x00, 0x9a, 0x99, 0x19, 0x3f, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // .@.....?:.......
	0x32, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 2...........:...
	0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x70, 0x41, 0x01, 0x40, 0x00, 0x00, // .....@....pA.@..
	0x00, 0x00, 0x10, 0xc1, 0x01, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // :.......:.......
	0x10, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, // ............F...
	0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // A.......F. .....
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // F...A.......F. .
	0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, // ................
	0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ....F...A.......
	0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x08, // F. .............
	0x22, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, // "........@.....8
	0x3a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x08, // :...............
	0x42, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, // B........@.....8
	0x3a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, // :...............
	0x22, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ".......*.......
	0x1a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x42, 0x00, 0x10, 0x00, // ............B...
	0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ....:...........
	0x3a, 0x00, 0x10, 0x80, 0xc1, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, // :...............
	0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, // ........:.......
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ....:...........
	0x0e, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // ....B.......*...
	0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, // ....:.......1...
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........:.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, // .@......7.......
	0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....:........@..
	0x00, 0x00, 0xc0, 0x3e, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x38, 0x00, 0x00, 0x07, // ...>.@.....>8...
	0x12, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ........*.......
	0x2a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, // *.......2.......
	0x04, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // .............@..
	0xd0, 0x1d, 0x0a, 0x3d, 0x01, 0x40, 0x00, 0x00, 0xdc, 0xe7, 0x20, 0xbe, 0x37, 0x00, 0x00, 0x0a, // ...=.@.... .7...
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........:.......
	0x2a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // *...A.......*...
	0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....2...........
	0x0a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........:.......
	0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // :.......1.......
	0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....:........@..
	0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x0a, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....7...........
	0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // :.......:...A...
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // ....:...........
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........:.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x37, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, // .@.....?7.......
	0x04, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // .............@..
	0x00, 0x00, 0x00, 0x3f, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, // ...?:...........
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0xc1, 0x00, 0x00, 0x00, // ................
	0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x1d, 0x00, 0x00, 0x07, // .....@.....?....
	0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ................
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, // .@......7..."...
	0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....:........@..
	0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x31, 0x00, 0x00, 0x07, // .....@.....?1...
	0x42, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, // B........@.....8
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x12, 0x00, 0x10, 0x00, // :.......2.......
	0x03, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ................
	0x01, 0x40, 0x00, 0x00, 0x1a, 0x5b, 0x4b, 0xbd, 0x01, 0x40, 0x00, 0x00, 0x66, 0x00, 0xff, 0x3e, // .@...[K..@..f..>
	0x4b, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // K...........:...
	0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....8...........
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // :...............
	0x32, 0x00, 0x00, 0x0a, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, // 2...............
	0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // A.......:.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x37, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, // .@.....?7.......
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ....:.......:...
	0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, // ....:.......7...
	0x22, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ".......*.......
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // :...............
	0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, // H.......CU..r...
	0x03, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, // ....F.......F~..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // .....`......:...
	0x00, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, // ....E.......CU..
	0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x7e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // F~.......`......
	0x00, 0x00, 0x00, 0x0b, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, // ....r.......F...
	0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // A........@.....?
	0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, // ...?...?........
	0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // r.......F...A...
	0x04, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, // .....@.....?...?
	0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0d, 0x72, 0x00, 0x10, 0x00, // ...?....2...r...
	0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ....F...A.......
	0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // F........@.....?
	0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x0a, // ...?...?....4...
	0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // r.......F.......
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .@..............
	0x00, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....9...........
	0x2a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // *. .....*....@..
	0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........:.......
	0x36, 0x00, 0x00, 0x06, 0x82, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, // 6.... ......:. .
	0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x72, 0x20, 0x10, 0x00, // ....'...6...r ..
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x01, // ....F.......>...
	0x15, 0x00, 0x00, 0x01, 0x38, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....8...........
	0x0a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // .. .....%....@..
	0x00, 0x00, 0x00, 0x3f, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ...?8...r.......
	0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ........F.......
	0x10, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // ............F. .
	0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........F.......
	0x00, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, // ....r.......F...
	0x03, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....F. .A.......
	0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // F. .........F...
	0x04, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // :.......:.......
	0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x80, // 2...r...........
	0x41, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // A.......F.......
	0x46, 0x12, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, // F...............
	0x02, 0x00, 0x00, 0x00, 0x0a, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x07, // ............)...
	0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........:.......
	0x01, 0x40, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, // .@......8...r...
	0x04, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x83, 0x20, 0x06, // ....V.......F. .
	0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........:.......
	0x32, 0x00, 0x00, 0x0c, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x83, 0x20, 0x06, // 2...r.......F. .
	0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........:.......
	0x06, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ........F.......
	0x32, 0x00, 0x00, 0x0c, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x83, 0x20, 0x06, // 2...r.......F. .
	0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........:.......
	0xa6, 0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ........F.......
	0x00, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....r.......F...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x83, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, // ....F. .........
	0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, // :...........B...
	0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x2a, 0x00, 0x10, 0x00, // .....@.....?*...
	0x02, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....6...........
	0x1a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, // ....A.......2...
	0x32, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // 2...............
	0xa6, 0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, // .........@.....?
	0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x0a, // ...?........1...
	0x32, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // 2.......F.......
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .@..............
	0x00, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x0a, 0xc2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ....1...........
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // .@.............?
	0x00, 0x00, 0x80, 0x3f, 0x06, 0x04, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x07, // ...?........<...
	0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ........*.......
	0x0a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ........<.......
	0x03, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x03, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....<...........
	0x3a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // :.......:.......
	0x3b, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ;...........:...
	0x03, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....1...........
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // .@......:.......
	0x01, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, // ....:...........
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x32, 0x00, 0x10, 0x00, // :...........2...
	0x04, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x80, 0x20, 0x00, // ....F.......F. .
	0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x42, 0x00, 0x10, 0x00, // ....*...6...B...
	0x04, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, // ............6...
	0x82, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x45, 0x00, 0x00, 0x8b, 0x02, 0x02, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, // E.......CU..r...
	0x05, 0x00, 0x00, 0x00, 0x86, 0x03, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, // ............F~..
	0x04, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, // .....`..........
	0x32, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // 2.......F.......
	0x46, 0x80, 0x20, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, // F. .A.......*...
	0x36, 0x00, 0x00, 0x05, 0xc2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0xa6, 0x0e, 0x10, 0x00, // 6...............
	0x04, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, 0x02, 0x02, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, // ....E.......CU..
	0x72, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x86, 0x03, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // r...............
	0x46, 0x7e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // F~.......`......
	0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....r.......F...
	0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, // ....F.......6...
	0xc2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x56, 0x0d, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ........V.......
	0x45, 0x00, 0x00, 0x8b, 0x02, 0x02, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, // E.......CU..r...
	0x04, 0x00, 0x00, 0x00, 0x86, 0x03, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, // ............F~..
	0x04, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // .....`..........
	0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x52, 0x00, 0x10, 0x00, // F.......6...R...
	0x06, 0x00, 0x00, 0x00, 0x06, 0x03, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, // ............E...
	0x02, 0x02, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....CU..r.......
	0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // F.......F~......
	0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // .`..........r...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x04, 0x00, 0x00, 0x00, 0x38, 0x20, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....8 ..........
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x55, 0x55, 0xd5, 0x40, // :........@..UU.@
	0x32, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 2...........:...
	0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x40, 0x00, 0x00, // .....@.......@..
	0x00, 0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ..@@8...........
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // :.......:.......
	0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 8...........:...
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, // ....:.......8...
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........:.......
	0x2a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0d, // *. .....)...2...
	0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // r.......F.......
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3e, 0x00, 0x00, 0x80, 0x3e, 0x00, 0x00, 0x80, 0x3e, // .@.....>...>...>
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ....F...A.......
	0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // 2...r...........
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x03, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, 0x33, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, // ........3...r...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // ....F........@..
	0x00, 0x00, 0x70, 0x41, 0x00, 0x00, 0x70, 0x41, 0x00, 0x00, 0x70, 0x41, 0x00, 0x00, 0x00, 0x00, // ..pA..pA..pA....
	0x38, 0x00, 0x00, 0x0b, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // 8...r.......F. .
	0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x9a, 0x99, 0x99, 0x3d, // ....'....@.....=
	0x9a, 0x99, 0x99, 0x3d, 0x9a, 0x99, 0x99, 0x3d, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0b, // ...=...=....8...
	0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // r.......F. .....
	0x27, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x9a, 0x99, 0x19, 0x3e, 0x9a, 0x99, 0x19, 0x3e, // '....@.....>...>
	0x9a, 0x99, 0x19, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, // ...>....4...r...
	0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // ....F........@..
	0xcd, 0xcc, 0xcc, 0x3d, 0xcd, 0xcc, 0xcc, 0x3d, 0xcd, 0xcc, 0xcc, 0x3d, 0x00, 0x00, 0x00, 0x00, // ...=...=...=....
	0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 8...r.......F...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, // ....F. .....'...
	0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // 4...........*...
	0x03, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, // ............4...
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........:.......
	0x0a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ........4.......
	0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, // ....*...........
	0x04, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....4...........
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // :...............
	0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // 4...........*...
	0x05, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, // ............4...
	0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........:.......
	0x0a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ....:.......:...
	0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....1...........
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // .@.....?:.......
	0x0e, 0x00, 0x00, 0x0a, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // .............@..
	0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, // ...?...?...?...?
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // :.......8...r...
	0x05, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x03, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ....8...r.......
	0xf6, 0x0f, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ........F.......
	0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // 7...r...........
	0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x03, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ....7...r.......
	0xf6, 0x0f, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ........F.......
	0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x32, 0x00, 0x10, 0x00, // F...........2...
	0x05, 0x00, 0x00, 0x00, 0x16, 0x85, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, // ...... .....(...
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, // .@.....?...?....
	0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....8...........
	0x0a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // ................
	0x38, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, // 8...........:. .
	0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // ....$...:. .....
	0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0xd2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // $...............
	0x06, 0x09, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // ....A........@..
	0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, // ...?.......?...?
	0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 8...........:...
	0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // ....:...........
	0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, // F.......8...r...
	0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // ....F.......F. .
	0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, // ....$...9.......
	0x04, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, // ...... .....&...
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, // .@......6...r...
	0x07, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .....@..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, // ........6.......
	0x06, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x01, // .....@......0...
	0x21, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // !...........:...
	0x06, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x03, 0x00, 0x04, 0x03, // .....@..........
	0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0b, 0x72, 0x00, 0x10, 0x00, // :.......8...r...
	0x08, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ....F. .........
	0x56, 0x85, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // V. .........:...
	0x06, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0d, 0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ....2...r.......
	0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x06, // F. ........... .
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ........:.......
	0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0d, 0x72, 0x00, 0x10, 0x00, // F.......2...r...
	0x08, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ....F. .........
	0xa6, 0x8a, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // .. .........:...
	0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, // ....F...........
	0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, // F. .............
	0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x12, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, // F...A...........
	0x82, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ........F.......
	0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, // F.......D.......
	0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ....:.......8...
	0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // r...............
	0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // F...............
	0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x12, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, // ................
	0x3a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x1a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // :......... .....
	0x28, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, // (...1...".......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, // .@..............
	0x0e, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ................
	0x0a, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ....:.......8...
	0xd2, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ................
	0x06, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // ............r...
	0x0a, 0x00, 0x00, 0x00, 0x86, 0x03, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, // ............V...
	0x0a, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ....1...........
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // .@......:.......
	0x1f, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, // ....:.......2...
	0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // r.......F.......
	0xf6, 0x0f, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........F.......
	0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, // ....F.......D...
	0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ........:.......
	0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // 8...r...........
	0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, // ....F...........
	0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........F.......
	0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, // F...............
	0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // F.......F.......
	0x31, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // 1..."........@..
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, // ....:.......1...
	0x42, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // B........@......
	0x0a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, // ............"...
	0x08, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, // ....*...........
	0x08, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ....1...B.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // .@..............
	0x01, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // ....".......*...
	0x08, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, // ................
	0x42, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // B...........A...
	0x09, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x38, 0x00, 0x00, 0x07, // .....@.....?8...
	0x12, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ........*.......
	0x2a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, // *.......8.......
	0x09, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ................
	0x09, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ....8...B.......
	0x2a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // *...............
	0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x86, 0x03, 0x10, 0x00, // 2...r...........
	0x05, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x04, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ....8...........
	0x0a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, // .........@.....A
	0x0e, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, // ................
	0x05, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x05, // ............/...
	0x42, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // B.......:.......
	0x38, 0x00, 0x00, 0x08, 0x42, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // 8...B.......*...
	0x08, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, // ...... .....(...
	0x19, 0x00, 0x00, 0x05, 0x42, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // ....B.......*...
	0x08, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ....8...........
	0x2a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // *...............
	0x32, 0x00, 0x00, 0x09, 0xd2, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, // 2...............
	0x09, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, // ................
	0x0a, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, // ....7...r.......
	0x56, 0x05, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x86, 0x03, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // V...............
	0x46, 0x02, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, 0x38, 0x00, 0x00, 0x07, // F...........8...
	0x12, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ........:.......
	0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, // :...............
	0x08, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x03, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x08, 0x12, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ..... ..........
	0x0a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....A........@..
	0x00, 0x00, 0x80, 0x3f, 0x38, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ...?8...........
	0x0a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x07, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x0e, 0x00, 0x00, 0x07, // .....@.....?....
	0x82, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ................
	0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, // :.......8...r...
	0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x06, // ....F.......F. .
	0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ........:.......
	0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 2...r.......F...
	0x08, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ........r.......
	0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // F.......F...A...
	0x08, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ....2...r.......
	0x06, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // .. .....&...F...
	0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, // ....F.......7...
	0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // r...............
	0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // F.......F.......
	0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....r.......F...
	0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x07, // ....F...........
	0x82, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ........:.......
	0x01, 0x40, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x01, 0x31, 0x00, 0x00, 0x07, // .@..........1...
	0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........@......
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 0x0a, 0x00, 0x10, 0x00, // :...............
	0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....8...r.......
	0x56, 0x05, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x16, 0x86, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // V......... .....
	0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....2...r.......
	0x16, 0x86, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, // .. .............
	0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, // ....F.......2...
	0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x86, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // r......... .....
	0x02, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // F.......F.......
	0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // D...........:...
	0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....8...r.......
	0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........F.......
	0x1d, 0x00, 0x00, 0x0b, 0x32, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // ....2........@..
	0x00, 0x00, 0x80, 0x38, 0x00, 0x00, 0x80, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ...8...8........
	0x16, 0x05, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, // ................
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0xc1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x1a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, // ................
	0x22, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, // "...............
	0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x0e, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x0a, // ............1...
	0x32, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // 2...............
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .@..............
	0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....7...".......
	0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x3e, // .........@.....>
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x38, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, // .@.....>8...B...
	0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x42, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....2...B.......
	0x2a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0xd0, 0x1d, 0x0a, 0x3d, // *........@.....=
	0x01, 0x40, 0x00, 0x00, 0xdc, 0xe7, 0x20, 0xbe, 0x37, 0x00, 0x00, 0x0a, 0x12, 0x00, 0x10, 0x00, // .@.... .7.......
	0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, // ................
	0x41, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // A...............
	0x32, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // 2...........*...
	0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x0a, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....7...........
	0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // ............A...
	0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // ................
	0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x37, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, // .@.....?7.......
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....:........@..
	0x00, 0x00, 0x00, 0x3f, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, // ...?............
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x80, 0xc1, 0x00, 0x00, 0x00, // ........*.......
	0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x1d, 0x00, 0x00, 0x07, // .....@.....?....
	0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........*.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, // .@......7..."...
	0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // .............@..
	0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x31, 0x00, 0x00, 0x07, // .....@.....?1...
	0x42, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, // B........@.....8
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x42, 0x00, 0x10, 0x00, // :.......2...B...
	0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....*...........
	0x01, 0x40, 0x00, 0x00, 0x1a, 0x5b, 0x4b, 0xbd, 0x01, 0x40, 0x00, 0x00, 0x66, 0x00, 0xff, 0x3e, // .@...[K..@..f..>
	0x4b, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // K...........:...
	0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....8...........
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // :.......*.......
	0x32, 0x00, 0x00, 0x0a, 0x42, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x80, // 2...B.......*...
	0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // A.......:.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x37, 0x00, 0x00, 0x09, 0x42, 0x00, 0x10, 0x00, // .@.....?7...B...
	0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, // ....*.......7...
	0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ".......*.......
	0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // *...............
	0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, // H.......CU..r...
	0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, // ....F.......F~..
	0x02, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // .....`.......@..
	0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....8...r.......
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // F.......F.......
	0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 2...r.......F...
	0x00, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, // ...... .....%...
	0x46, 0x02, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, 0x31, 0x00, 0x00, 0x07, // F...........1...
	0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........@......
	0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0xe2, 0x00, 0x10, 0x00, // :.......2.......
	0x00, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x89, 0x20, 0x00, // .............. .
	0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ....'...........
	0x37, 0x00, 0x00, 0x09, 0x72, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, // 7...r ..........
	0x00, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x07, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0x82, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....6.... ......
	0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x01, // :. .....'...>...
	0x00, 0x00, 0xb0, 0x02,                                                                         // ....
};
static const uint8_t fs_ball_equirectangular_decal_st_spv[13491] =
{
	0x46, 0x53, 0x48, 0x0b, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x0c, 0x62, // FSH..N.........b
	0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x0a, 0x00, 0x01, 0x0a, // allLightPos.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x14, 0x01, 0x00, // ......matView...
	0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, // ........Roughnes
	0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, // s_WrapL_Edge_Thi
	0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x01, 0x80, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // ckness..........
	0x13, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, // .cAmbient_LightR
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x01, 0x40, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x62, // ange..@........b
	0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, // allLightEmission
	0x12, 0x0a, 0xa0, 0x01, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x44, 0x69, 0x73, 0x61, // ...........fDisa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, // bleLighting_top_
	0x62, 0x65, 0x6c, 0x6f, 0x77, 0x12, 0x01, 0x60, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // below..`........
	0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, // fenvEmissionScal
	0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x01, 0x50, 0x02, 0x01, 0x00, // e_TexWidth..P...
	0x00, 0x00, 0x00, 0x00, 0x13, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // .....w_h_disable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x01, 0xa0, 0x02, 0x01, 0x00, 0x00, 0x00, // Lighting........
	0x00, 0x00, 0x0b, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x01, // ...cBase_Alpha..
	0x70, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, // p........matWorl
	0x64, 0x56, 0x69, 0x65, 0x77, 0x14, 0x01, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // dView..@........
	0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x14, 0x02, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, // matProj.........
	0x00, 0x16, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, // ..invTableRes_re
	0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x01, 0x90, 0x02, 0x01, 0x00, 0x00, 0x00, // flection........
	0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // ...tex_ball_colo
	0x72, 0x30, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, // r0......."..tex_
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x30, 0x00, 0x04, 0x00, 0x00, // diffuse_env0....
	0x00, 0x00, 0x02, 0x22, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, // ..."..tex_ball_d
	0x65, 0x63, 0x61, 0x6c, 0x30, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0x12, 0x74, // ecal0......."..t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // ex_ball_playfiel
	0x64, 0x30, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x03, 0x22, 0x00, 0xe0, 0x32, 0x00, 0x00, 0x03, // d0......."..2...
	0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x0b, 0x00, 0x08, 0x00, 0x49, 0x07, 0x00, 0x00, 0x00, // .#.........I....
	0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x06, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30, 0x00, // ...GLSL.std.450.
	0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, // ................
	0x00, 0x0a, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, // ...........main.
	0x00, 0x00, 0x00, 0x7a, 0x03, 0x00, 0x00, 0x7e, 0x03, 0x00, 0x00, 0x82, 0x03, 0x00, 0x00, 0x85, // ...z...~........
	0x03, 0x00, 0x00, 0x96, 0x03, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x03, // ................
	0x00, 0x03, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x73, // ...main........s
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // ...tex_ball_colo
	0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x76, // rSampler.......v
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // ...tex_ball_colo
	0x72, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x80, // rTexture........
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, // ...tex_diffuse_e
	0x6e, 0x76, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x82, // nvSampler.......
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, // ...tex_diffuse_e
	0x6e, 0x76, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x86, // nvTexture.......
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, // ...tex_ball_deca
	0x6c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x88, // lSampler........
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, // ...tex_ball_deca
	0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x09, 0x00, 0x8d, // lTexture........
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, // ...tex_ball_play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, // fieldSampler....
	0x00, 0x09, 0x00, 0x90, 0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // .......tex_ball_
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // playfieldTexture
	0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x55, 0x6e, 0x69, 0x66, 0x6f, // .......:...Unifo
	0x72, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x05, 0x00, 0x3a, // rmBlock........:
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x00, 0x06, // .......matView..
	0x00, 0x07, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x57, 0x6f, // ...:.......matWo
	0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x05, 0x00, 0x3a, // rldView........:
	0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x00, 0x06, // .......matProj..
	0x00, 0x07, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x62, 0x61, 0x6c, 0x6c, 0x4c, // ...:.......ballL
	0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x3a, // ightPos........:
	0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, // .......ballLight
	0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x3a, // Emission.......:
	0x01, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, // .......cAmbient_
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x00, 0x06, 0x00, 0x0a, 0x00, 0x3a, // LightRange.....:
	0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, // .......fenvEmiss
	0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, // ionScale_TexWidt
	0x68, 0x00, 0x00, 0x06, 0x00, 0x0a, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x66, // h......:.......f
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, // DisableLighting_
	0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x3a, // top_below......:
	0x01, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, // .......cBase_Alp
	0x68, 0x61, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x52, // ha.....:.......R
	0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, // oughness_WrapL_E
	0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x00, 0x00, 0x06, // dge_Thickness...
	0x00, 0x09, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x69, 0x6e, 0x76, 0x54, 0x61, // ...:.......invTa
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, // bleRes_reflectio
	0x6e, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x77, // n......:.......w
	0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, // _h_disableLighti
	0x6e, 0x67, 0x00, 0x05, 0x00, 0x03, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, // ng.....<........
	0x00, 0x04, 0x00, 0x7a, 0x03, 0x00, 0x00, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x00, 0x00, 0x00, 0x05, // ...z...v_eye....
	0x00, 0x05, 0x00, 0x7e, 0x03, 0x00, 0x00, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x00, // ...~...v_normal.
	0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0x82, 0x03, 0x00, 0x00, 0x76, 0x5f, 0x74, 0x65, 0x78, // ...........v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x05, 0x00, 0x05, 0x00, 0x85, 0x03, 0x00, 0x00, 0x76, // coord0.........v
	0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x96, // _worldPos.......
	0x03, 0x00, 0x00, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, // ...bgfx_FragData
	0x30, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x73, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // 0..G...s..."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x73, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x12, // ...G...s...!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x76, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G...v..."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x76, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x02, // ...G...v...!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x80, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G......."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x80, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x14, // ...G.......!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x82, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G......."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x82, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x04, // ...G.......!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x86, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G......."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x86, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x15, // ...G.......!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x88, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G......."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x88, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x05, // ...G.......!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x8d, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G......."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x8d, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x16, // ...G.......!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x90, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G......."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x90, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x06, // ...G.......!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x36, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x40, // ...G...6.......@
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x38, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x10, // ...G...8........
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x39, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x10, // ...G...9........
	0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, // ...H...:........
	0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, // ...H...:.......#
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x00, // .......H...:....
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, 0x3a, // ...........H...:
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x3a, // ...........H...:
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x48, // .......#...@...H
	0x00, 0x05, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, // ...:............
	0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, // ...H...:........
	0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x23, // ...H...:.......#
	0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x02, // .......H...:....
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x3a, // ...........H...:
	0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x48, // .......#.......H
	0x00, 0x05, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0xa0, // ...:.......#....
	0x01, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x23, // ...H...:.......#
	0x00, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x06, // ...@...H...:....
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x50, 0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x3a, // ...#...P...H...:
	0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0x48, // .......#...`...H
	0x00, 0x05, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x70, // ...:.......#...p
	0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x23, // ...H...:.......#
	0x00, 0x00, 0x00, 0x80, 0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x0a, // .......H...:....
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x90, 0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x3a, // ...#.......H...:
	0x01, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0xa0, 0x02, 0x00, 0x00, 0x47, // .......#.......G
	0x00, 0x03, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x3c, // ...:.......G...<
	0x01, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x3c, // ...".......G...<
	0x01, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x7a, // ...!.......G...z
	0x03, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x7e, // ...........G...~
	0x03, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x82, // ...........G....
	0x03, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x85, // ...........G....
	0x03, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x96, // ...........G....
	0x03, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x21, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, // ...!............
	0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, // ............... 
	0x00, 0x00, 0x00, 0x19, 0x00, 0x09, 0x00, 0x08, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x19, 0x00, 0x09, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, 0x49, // ...............I
	0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x4a, // ... ...........J
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, // ... ...r........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x72, 0x00, 0x00, 0x00, 0x73, 0x00, 0x00, 0x00, 0x00, // ...;...r...s....
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x75, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, // ... ...u........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x75, 0x00, 0x00, 0x00, 0x76, 0x00, 0x00, 0x00, 0x00, // ...;...u...v....
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x72, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, // ...;...r........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x75, 0x00, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x00, // ...;...u........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x72, 0x00, 0x00, 0x00, 0x86, 0x00, 0x00, 0x00, 0x00, // ...;...r........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x75, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, // ...;...u........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x72, 0x00, 0x00, 0x00, 0x8d, 0x00, 0x00, 0x00, 0x00, // ...;...r........
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // ... ............
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x8f, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x00, // ...;............
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x49, 0x00, 0x00, 0x00, 0x93, 0x00, 0x00, 0x00, 0x01, // ...+...I........
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x49, 0x00, 0x00, 0x00, 0x97, 0x00, 0x00, 0x00, 0x00, // ...+...I........
	0x00, 0x00, 0x00, 0x1b, 0x00, 0x03, 0x00, 0x9b, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, // ................
	0x00, 0x03, 0x00, 0xb0, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...........+....
	0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........?+....
	0x00, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........8+....
	0x00, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...........+....
	0x00, 0x00, 0x00, 0xd4, 0x00, 0x00, 0x00, 0x1a, 0x5b, 0x4b, 0xbd, 0x2b, 0x00, 0x04, 0x00, 0x07, // ........[K.+....
	0x00, 0x00, 0x00, 0xd7, 0x00, 0x00, 0x00, 0x66, 0x00, 0xff, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, // .......f..>+....
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........>+....
	0x00, 0x00, 0x00, 0xfb, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........>+....
	0x00, 0x00, 0x00, 0xfd, 0x00, 0x00, 0x00, 0xd0, 0x1d, 0x0a, 0x3d, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........=+....
	0x00, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x15, 0x00, 0x04, 0x00, 0x13, // ..........?.....
	0x01, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x13, // ... .......+....
	0x01, 0x00, 0x00, 0x14, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x13, // ...........+....
	0x01, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x13, // ...........+....
	0x01, 0x00, 0x00, 0x1a, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x06, 0x00, 0x1d, // ...........,....
	0x00, 0x00, 0x00, 0x27, 0x01, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xcf, // ...'............
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2e, 0x01, 0x00, 0x00, 0x00, // ...+............
	0x00, 0xa0, 0x40, 0x18, 0x00, 0x04, 0x00, 0x35, 0x01, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x04, // ..@....5........
	0x00, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x36, 0x01, 0x00, 0x00, 0x35, 0x01, 0x00, 0x00, 0x1a, // .......6...5....
	0x01, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x13, 0x01, 0x00, 0x00, 0x37, 0x01, 0x00, 0x00, 0x0a, // ...+.......7....
	0x00, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x38, 0x01, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x37, // .......8.......7
	0x01, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x39, 0x01, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x37, // .......9.......7
	0x01, 0x00, 0x00, 0x1e, 0x00, 0x0e, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x35, 0x01, 0x00, 0x00, 0x35, // .......:...5...5
	0x01, 0x00, 0x00, 0x36, 0x01, 0x00, 0x00, 0x38, 0x01, 0x00, 0x00, 0x39, 0x01, 0x00, 0x00, 0x0d, // ...6...8...9....
	0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x3b, // ........... ...;
	0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x3b, // .......:...;...;
	0x01, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x49, // ...<.......+...I
	0x00, 0x00, 0x00, 0x3d, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x3e, // ...=....... ...>
	0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x46, // ........... ...F
	0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x35, 0x01, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x49, // .......5...+...I
	0x00, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x56, // ...U....... ...V
	0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...........+....
	0x00, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x2b, 0x00, 0x04, 0x00, 0x49, // ..........A+...I
	0x00, 0x00, 0x00, 0x99, 0x01, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x13, // ...........+....
	0x01, 0x00, 0x00, 0x9a, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x49, // ...........+...I
	0x00, 0x00, 0x00, 0xb7, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x49, // ...........+...I
	0x00, 0x00, 0x00, 0xc4, 0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x49, // ...........+...I
	0x00, 0x00, 0x00, 0xe1, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x49, // ...........+...I
	0x00, 0x00, 0x00, 0x22, 0x02, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...".......+....
	0x00, 0x00, 0x00, 0x61, 0x02, 0x00, 0x00, 0x9a, 0x99, 0x19, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...a......?+....
	0x00, 0x00, 0x00, 0x64, 0x02, 0x00, 0x00, 0x00, 0x00, 0x70, 0x41, 0x2b, 0x00, 0x04, 0x00, 0x49, // ...d.....pA+...I
	0x00, 0x00, 0x00, 0x8c, 0x02, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x49, // ...........+...I
	0x00, 0x00, 0x00, 0x93, 0x02, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x07, 0x00, 0x0d, // ...........,....
	0x00, 0x00, 0x00, 0xa1, 0x02, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xc8, // ................
	0x00, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xab, // .......,........
	0x02, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xc8, // ................
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x49, 0x00, 0x00, 0x00, 0xc4, 0x02, 0x00, 0x00, 0x02, // ...+...I........
	0x00, 0x00, 0x00, 0x2c, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xcb, 0x02, 0x00, 0x00, 0x12, // ...,............
	0x01, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd8, // .......+........
	0x02, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x41, // ......>+.......A
	0x03, 0x00, 0x00, 0x9a, 0x99, 0x19, 0x3e, 0x2c, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x4a, // ......>,.......J
	0x03, 0x00, 0x00, 0x64, 0x02, 0x00, 0x00, 0x64, 0x02, 0x00, 0x00, 0x64, 0x02, 0x00, 0x00, 0x2b, // ...d...d...d...+
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x50, 0x03, 0x00, 0x00, 0x9a, 0x99, 0x99, 0x3d, 0x2b, // .......P......=+
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x54, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x2b, // .......T......@+
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x56, 0x03, 0x00, 0x00, 0xcd, 0xcc, 0xcc, 0x3d, 0x2c, // .......V......=,
	0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x57, 0x03, 0x00, 0x00, 0x56, 0x03, 0x00, 0x00, 0x56, // .......W...V...V
	0x03, 0x00, 0x00, 0x56, 0x03, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x79, 0x03, 0x00, 0x00, 0x01, // ...V... ...y....
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x79, 0x03, 0x00, 0x00, 0x7a, // .......;...y...z
	0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x7d, 0x03, 0x00, 0x00, 0x01, // ....... ...}....
	0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x7d, 0x03, 0x00, 0x00, 0x7e, // .......;...}...~
	0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x81, 0x03, 0x00, 0x00, 0x01, // ....... ........
	0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x81, 0x03, 0x00, 0x00, 0x82, // .......;........
	0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x7d, 0x03, 0x00, 0x00, 0x85, // .......;...}....
	0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x95, 0x03, 0x00, 0x00, 0x03, // ....... ........
	0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x95, 0x03, 0x00, 0x00, 0x96, // .......;........
	0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x29, 0x00, 0x03, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xb2, // .......)...J....
	0x03, 0x00, 0x00, 0x2c, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x23, 0x07, 0x00, 0x00, 0xc8, // ...,.......#....
	0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...........+....
	0x00, 0x00, 0x00, 0x28, 0x07, 0x00, 0x00, 0x00, 0x00, 0x10, 0xc1, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...(.......+....
	0x00, 0x00, 0x00, 0x29, 0x07, 0x00, 0x00, 0xdc, 0xe7, 0x20, 0xbe, 0x01, 0x00, 0x03, 0x00, 0x07, // ...)..... ......
	0x00, 0x00, 0x00, 0x2a, 0x07, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, // ...*...6........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, // ................
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x73, // ...=.......t...s
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0x76, // ...=.......w...v
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x80, // ...=............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x83, 0x00, 0x00, 0x00, 0x82, // ...=............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x87, 0x00, 0x00, 0x00, 0x86, // ...=............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00, 0x88, // ...=............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x00, 0x00, 0x8d, // ...=............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x90, // ...=............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7b, 0x03, 0x00, 0x00, 0x7a, // ...=.......{...z
	0x03, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x7f, 0x03, 0x00, 0x00, 0x7e, // ...=...........~
	0x03, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x83, 0x03, 0x00, 0x00, 0x82, // ...=............
	0x03, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x86, 0x03, 0x00, 0x00, 0x85, // ...=............
	0x03, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xda, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, // ................
	0x00, 0x03, 0x00, 0x16, 0x01, 0x00, 0x00, 0xec, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xec, // ................
	0x03, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xef, 0x03, 0x00, 0x00, 0x86, // ................
	0x03, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xf0, 0x03, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0xef, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1d, // ...E............
	0x00, 0x00, 0x00, 0xf2, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x7f, // ...........E....
	0x03, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xf5, 0x03, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0xf0, 0x03, 0x00, 0x00, 0xf2, 0x03, 0x00, 0x00, 0x94, // ...G............
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf8, 0x03, 0x00, 0x00, 0xf0, 0x03, 0x00, 0x00, 0xf5, // ................
	0x03, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xfa, 0x03, 0x00, 0x00, 0xf8, // .......J........
	0x03, 0x00, 0x00, 0x61, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xfd, // ...a............
	0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xf8, 0x03, 0x00, 0x00, 0x64, // .......2.......d
	0x02, 0x00, 0x00, 0x28, 0x07, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xfe, // ...(............
	0x03, 0x00, 0x00, 0xfa, 0x03, 0x00, 0x00, 0xfd, 0x03, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x05, 0x00, 0x46, 0x01, 0x00, 0x00, 0xff, 0x03, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x97, // ...F.......<....
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x35, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0xff, // ...=...5........
	0x03, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0xf5, // ................
	0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x04, 0x00, 0x00, 0x02, // ...Q............
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04, // .......Q........
	0x04, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x05, 0x04, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, // ...............P
	0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x06, 0x04, 0x00, 0x00, 0x03, 0x04, 0x00, 0x00, 0x04, // ................
	0x04, 0x00, 0x00, 0x05, 0x04, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x91, 0x00, 0x05, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0x07, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x06, 0x04, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe4, 0x04, 0x00, 0x00, 0x07, 0x04, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe5, 0x04, 0x00, 0x00, 0x07, // ...Q............
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x17, 0x05, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0x16, 0x01, 0x00, 0x00, 0xf3, 0x04, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xf3, 0x04, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf4, // ................
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe4, 0x04, 0x00, 0x00, 0x0c, // ................
	0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf5, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0xe5, 0x04, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xf7, // ...........J....
	0x04, 0x00, 0x00, 0xf5, 0x04, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x4a, // ...............J
	0x00, 0x00, 0x00, 0xf9, 0x04, 0x00, 0x00, 0xf4, 0x04, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xa7, // ................
	0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xfa, 0x04, 0x00, 0x00, 0xf7, 0x04, 0x00, 0x00, 0xf9, // ...J............
	0x04, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xfc, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // ................
	0x00, 0x04, 0x00, 0xfa, 0x04, 0x00, 0x00, 0xfb, 0x04, 0x00, 0x00, 0xfc, 0x04, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xfb, 0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x17, 0x05, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xfc, 0x04, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xff, // ................
	0x04, 0x00, 0x00, 0xf5, 0x04, 0x00, 0x00, 0xf4, 0x04, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x02, 0x05, 0x00, 0x00, 0xf5, 0x04, 0x00, 0x00, 0xf4, 0x04, 0x00, 0x00, 0x88, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x05, 0x00, 0x00, 0xff, 0x04, 0x00, 0x00, 0x02, // ................
	0x05, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x04, 0x05, 0x00, 0x00, 0xe5, // .......J........
	0x04, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x05, // ................
	0x05, 0x00, 0x00, 0x04, 0x05, 0x00, 0x00, 0xfa, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x00, 0x00, 0x85, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x05, 0x00, 0x00, 0xfd, 0x00, 0x00, 0x00, 0x03, // ................
	0x05, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x07, 0x05, 0x00, 0x00, 0x03, 0x05, 0x00, 0x00, 0x29, // ...2...........)
	0x07, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x0b, 0x05, 0x00, 0x00, 0xe5, // .......J........
	0x04, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0d, // ................
	0x05, 0x00, 0x00, 0x03, 0x05, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0f, // ................
	0x05, 0x00, 0x00, 0x0b, 0x05, 0x00, 0x00, 0x0d, 0x05, 0x00, 0x00, 0x03, 0x05, 0x00, 0x00, 0x0c, // ................
	0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x11, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // ...............2
	0x00, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x00, 0x0f, 0x05, 0x00, 0x00, 0x05, 0x05, 0x00, 0x00, 0xb8, // ................
	0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x12, 0x05, 0x00, 0x00, 0xe4, 0x04, 0x00, 0x00, 0xcf, // ...J............
	0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x14, 0x05, 0x00, 0x00, 0x11, // ................
	0x05, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x16, 0x05, 0x00, 0x00, 0x12, // ................
	0x05, 0x00, 0x00, 0x14, 0x05, 0x00, 0x00, 0x11, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x17, // ................
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x17, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x2b, 0x07, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xfb, 0x04, 0x00, 0x00, 0x16, // ...+............
	0x05, 0x00, 0x00, 0xfc, 0x04, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe7, // ................
	0x04, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0x2b, 0x07, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // .......+...Q....
	0x00, 0x00, 0x00, 0xe8, 0x04, 0x00, 0x00, 0x07, 0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf7, // ................
	0x00, 0x03, 0x00, 0x34, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0x16, // ...4............
	0x01, 0x00, 0x00, 0x1f, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x1f, 0x05, 0x00, 0x00, 0x0c, // ................
	0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, // ....... ........
	0x00, 0x00, 0x00, 0xe8, 0x04, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x22, // ..............."
	0x05, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x20, 0x05, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x4a, // ....... .......J
	0x00, 0x00, 0x00, 0x23, 0x05, 0x00, 0x00, 0x22, 0x05, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xf7, // ...#..."........
	0x00, 0x03, 0x00, 0x27, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x23, // ...'...........#
	0x05, 0x00, 0x00, 0x24, 0x05, 0x00, 0x00, 0x27, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x24, // ...$...'.......$
	0x05, 0x00, 0x00, 0xbe, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x25, 0x05, 0x00, 0x00, 0xe8, // .......J...%....
	0x04, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x26, // ...............&
	0x05, 0x00, 0x00, 0x25, 0x05, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0xf9, // ...%............
	0x00, 0x02, 0x00, 0x34, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x27, 0x05, 0x00, 0x00, 0x0c, // ...4.......'....
	0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2a, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // .......*.......2
	0x00, 0x00, 0x00, 0xd4, 0x00, 0x00, 0x00, 0x20, 0x05, 0x00, 0x00, 0xd7, 0x00, 0x00, 0x00, 0x83, // ....... ........
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2c, 0x05, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x20, // .......,....... 
	0x05, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2d, 0x05, 0x00, 0x00, 0x01, // ...........-....
	0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x2c, 0x05, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // .......,........
	0x00, 0x00, 0x00, 0x2e, 0x05, 0x00, 0x00, 0x2a, 0x05, 0x00, 0x00, 0x2d, 0x05, 0x00, 0x00, 0xbe, // .......*...-....
	0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x2f, 0x05, 0x00, 0x00, 0xe8, 0x04, 0x00, 0x00, 0xcf, // ...J.../........
	0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x22, 0x07, 0x00, 0x00, 0x2a, // ..........."...*
	0x05, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x32, 0x05, 0x00, 0x00, 0x01, // ...........2....
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x22, 0x07, 0x00, 0x00, 0x2d, 0x05, 0x00, 0x00, 0xc8, // ...2..."...-....
	0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x33, 0x05, 0x00, 0x00, 0x2f, // ...........3.../
	0x05, 0x00, 0x00, 0x2e, 0x05, 0x00, 0x00, 0x32, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x34, // .......2.......4
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x34, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x07, // .......4........
	0x00, 0x00, 0x00, 0x2c, 0x07, 0x00, 0x00, 0x26, 0x05, 0x00, 0x00, 0x24, 0x05, 0x00, 0x00, 0x33, // ...,...&...$...3
	0x05, 0x00, 0x00, 0x27, 0x05, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xea, // ...'...P........
	0x04, 0x00, 0x00, 0xe7, 0x04, 0x00, 0x00, 0x2c, 0x07, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x9b, // .......,...V....
	0x00, 0x00, 0x00, 0x3c, 0x05, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x58, // ...<...w...t...X
	0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x3f, 0x05, 0x00, 0x00, 0x3c, 0x05, 0x00, 0x00, 0xea, // .......?...<....
	0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xfe, 0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, // ...........O....
	0x00, 0x00, 0x00, 0x0f, 0x04, 0x00, 0x00, 0x3f, 0x05, 0x00, 0x00, 0x3f, 0x05, 0x00, 0x00, 0x00, // .......?...?....
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x9b, // ...........V....
	0x00, 0x00, 0x00, 0x46, 0x05, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00, 0x87, 0x00, 0x00, 0x00, 0x57, // ...F...........W
	0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x48, 0x05, 0x00, 0x00, 0x46, 0x05, 0x00, 0x00, 0x83, // .......H...F....
	0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x14, 0x04, 0x00, 0x00, 0x48, // ...O...........H
	0x05, 0x00, 0x00, 0x48, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ...H............
	0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x4e, 0x05, 0x00, 0x00, 0x23, // ...........N...#
	0x07, 0x00, 0x00, 0x14, 0x04, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x24, // ...............$
	0x07, 0x00, 0x00, 0x0f, 0x04, 0x00, 0x00, 0x23, 0x07, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1d, // .......#........
	0x00, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x24, // ...Q.......2...$
	0x07, 0x00, 0x00, 0x4e, 0x05, 0x00, 0x00, 0x23, 0x07, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x1d, // ...N...#........
	0x00, 0x00, 0x00, 0x52, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x51, // ...R.......(...Q
	0x05, 0x00, 0x00, 0x27, 0x01, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0x18, // ...'...A...V....
	0x04, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x8c, 0x02, 0x00, 0x00, 0x1a, 0x01, 0x00, 0x00, 0x3d, // ...<...........=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x19, 0x04, 0x00, 0x00, 0x18, 0x04, 0x00, 0x00, 0xb7, // ................
	0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x1a, 0x04, 0x00, 0x00, 0x19, 0x04, 0x00, 0x00, 0xcf, // ...J............
	0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x23, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // .......#........
	0x00, 0x04, 0x00, 0x1a, 0x04, 0x00, 0x00, 0x1b, 0x04, 0x00, 0x00, 0x23, 0x04, 0x00, 0x00, 0xf8, // ...........#....
	0x00, 0x02, 0x00, 0x1b, 0x04, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0x1d, // .......A...V....
	0x04, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x93, 0x02, 0x00, 0x00, 0x9a, 0x01, 0x00, 0x00, 0x3d, // ...<...........=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1e, 0x04, 0x00, 0x00, 0x1d, 0x04, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1f, 0x04, 0x00, 0x00, 0x52, 0x05, 0x00, 0x00, 0x00, // ...........R....
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, 0x04, 0x00, 0x00, 0x52, // ...Q....... ...R
	0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x21, // .......Q.......!
	0x04, 0x00, 0x00, 0x52, 0x05, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, // ...R.......P....
	0x00, 0x00, 0x00, 0x22, 0x04, 0x00, 0x00, 0x1f, 0x04, 0x00, 0x00, 0x20, 0x04, 0x00, 0x00, 0x21, // ..."....... ...!
	0x04, 0x00, 0x00, 0x1e, 0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xda, 0x04, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0x23, 0x04, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0x24, // ...#...A...V...$
	0x04, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0xe1, 0x01, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x3d, // ...<...........=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x25, 0x04, 0x00, 0x00, 0x24, 0x04, 0x00, 0x00, 0x85, // .......%...$....
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x26, 0x04, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0x25, // .......&.......%
	0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x28, 0x04, 0x00, 0x00, 0x52, // ...........(...R
	0x05, 0x00, 0x00, 0x26, 0x04, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x46, 0x01, 0x00, 0x00, 0x29, // ...&...A...F...)
	0x04, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x93, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x35, // ...<.......=...5
	0x01, 0x00, 0x00, 0x2a, 0x04, 0x00, 0x00, 0x29, 0x04, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, // ...*...)........
	0x00, 0x00, 0x00, 0x2b, 0x04, 0x00, 0x00, 0xa1, 0x02, 0x00, 0x00, 0x2a, 0x04, 0x00, 0x00, 0x4f, // ...+.......*...O
	0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x2c, 0x04, 0x00, 0x00, 0x2b, 0x04, 0x00, 0x00, 0x2b, // .......,...+...+
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x94, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2f, 0x04, 0x00, 0x00, 0x2c, 0x04, 0x00, 0x00, 0xf5, // ......./...,....
	0x03, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x46, 0x01, 0x00, 0x00, 0x30, 0x04, 0x00, 0x00, 0x3c, // ...A...F...0...<
	0x01, 0x00, 0x00, 0x93, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x35, 0x01, 0x00, 0x00, 0x31, // .......=...5...1
	0x04, 0x00, 0x00, 0x30, 0x04, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x32, // ...0...........2
	0x04, 0x00, 0x00, 0xab, 0x02, 0x00, 0x00, 0x31, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, // .......1...O....
	0x00, 0x00, 0x00, 0x33, 0x04, 0x00, 0x00, 0x32, 0x04, 0x00, 0x00, 0x32, 0x04, 0x00, 0x00, 0x00, // ...3...2...2....
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0x37, 0x04, 0x00, 0x00, 0x86, 0x03, 0x00, 0x00, 0x33, 0x04, 0x00, 0x00, 0x94, // ...7.......3....
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x38, 0x04, 0x00, 0x00, 0x2c, 0x04, 0x00, 0x00, 0x37, // .......8...,...7
	0x04, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3a, 0x04, 0x00, 0x00, 0x38, // ...........:...8
	0x04, 0x00, 0x00, 0x2f, 0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x3e, // .../...........>
	0x04, 0x00, 0x00, 0xf5, 0x03, 0x00, 0x00, 0x3a, 0x04, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1d, // .......:........
	0x00, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00, 0x86, 0x03, 0x00, 0x00, 0x3e, 0x04, 0x00, 0x00, 0x51, // ...?.......>...Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00, 0x00, // .......A...?....
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x42, 0x04, 0x00, 0x00, 0x3f, // ...Q.......B...?
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x43, // .......Q.......C
	0x04, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, // ...?.......P....
	0x00, 0x00, 0x00, 0x44, 0x04, 0x00, 0x00, 0x41, 0x04, 0x00, 0x00, 0x42, 0x04, 0x00, 0x00, 0x43, // ...D...A...B...C
	0x04, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x04, 0x00, 0x13, 0x01, 0x00, 0x00, 0x46, // .......m.......F
	0x04, 0x00, 0x00, 0x7b, 0x03, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x46, 0x01, 0x00, 0x00, 0x47, // ...{...A...F...G
	0x04, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0xc4, 0x02, 0x00, 0x00, 0x46, 0x04, 0x00, 0x00, 0x3d, // ...<.......F...=
	0x00, 0x04, 0x00, 0x35, 0x01, 0x00, 0x00, 0x48, 0x04, 0x00, 0x00, 0x47, 0x04, 0x00, 0x00, 0x90, // ...5...H...G....
	0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x49, 0x04, 0x00, 0x00, 0x44, 0x04, 0x00, 0x00, 0x48, // .......I...D...H
	0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4b, 0x04, 0x00, 0x00, 0x49, // ...Q.......K...I
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4d, // .......Q.......M
	0x04, 0x00, 0x00, 0x49, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, // ...I............
	0x00, 0x00, 0x00, 0x4e, 0x04, 0x00, 0x00, 0x4d, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, // ...N...M...P....
	0x00, 0x00, 0x00, 0x4f, 0x04, 0x00, 0x00, 0x4b, 0x04, 0x00, 0x00, 0x4e, 0x04, 0x00, 0x00, 0x51, // ...O...K...N...Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x51, 0x04, 0x00, 0x00, 0x49, 0x04, 0x00, 0x00, 0x03, // .......Q...I....
	0x00, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x52, 0x04, 0x00, 0x00, 0x12, // ...........R....
	0x01, 0x00, 0x00, 0x51, 0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x53, // ...Q...........S
	0x04, 0x00, 0x00, 0x4f, 0x04, 0x00, 0x00, 0x52, 0x04, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, // ...O...R........
	0x00, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0xcb, 0x02, 0x00, 0x00, 0x53, 0x04, 0x00, 0x00, 0x41, // ...T.......S...A
	0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0x56, 0x04, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x8c, // ...V...V...<....
	0x02, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x57, // .......=.......W
	0x04, 0x00, 0x00, 0x56, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x58, // ...V...P.......X
	0x04, 0x00, 0x00, 0x57, 0x04, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, // ...W............
	0x00, 0x00, 0x00, 0x59, 0x04, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0x58, 0x04, 0x00, 0x00, 0x51, // ...Y...T...X...Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5a, 0x04, 0x00, 0x00, 0x59, 0x04, 0x00, 0x00, 0x00, // .......Z...Y....
	0x00, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x5e, 0x04, 0x00, 0x00, 0x2a, // ...P.......^...*
	0x07, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x5f, // ..............._
	0x04, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0x5e, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...T...^...Q....
	0x00, 0x00, 0x00, 0x60, 0x04, 0x00, 0x00, 0x5f, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x50, // ...`..._.......P
	0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x62, 0x04, 0x00, 0x00, 0x5a, 0x04, 0x00, 0x00, 0x60, // .......b...Z...`
	0x04, 0x00, 0x00, 0x7b, 0x03, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0xb0, 0x00, 0x00, 0x00, 0x59, // ...{...V.......Y
	0x05, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, // ...........W....
	0x00, 0x00, 0x00, 0x5b, 0x05, 0x00, 0x00, 0x59, 0x05, 0x00, 0x00, 0x62, 0x04, 0x00, 0x00, 0x4f, // ...[...Y...b...O
	0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x65, 0x04, 0x00, 0x00, 0x5b, 0x05, 0x00, 0x00, 0x5b, // .......e...[...[
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0x67, 0x04, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x8c, // ...V...g...<....
	0x02, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x68, // .......=.......h
	0x04, 0x00, 0x00, 0x67, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x69, // ...g...P.......i
	0x04, 0x00, 0x00, 0x68, 0x04, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x0b, // ...h............
	0x00, 0x00, 0x00, 0x6a, 0x04, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0x69, 0x04, 0x00, 0x00, 0x51, // ...j...T...i...Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6b, 0x04, 0x00, 0x00, 0x6a, 0x04, 0x00, 0x00, 0x00, // .......k...j....
	0x00, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x6f, 0x04, 0x00, 0x00, 0x2a, // ...P.......o...*
	0x07, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x70, // ...............p
	0x04, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0x6f, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...T...o...Q....
	0x00, 0x00, 0x00, 0x71, 0x04, 0x00, 0x00, 0x70, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x50, // ...q...p.......P
	0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x73, 0x04, 0x00, 0x00, 0x6b, 0x04, 0x00, 0x00, 0x71, // .......s...k...q
	0x04, 0x00, 0x00, 0x7b, 0x03, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0xb0, 0x00, 0x00, 0x00, 0x62, // ...{...V.......b
	0x05, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, // ...........W....
	0x00, 0x00, 0x00, 0x64, 0x05, 0x00, 0x00, 0x62, 0x05, 0x00, 0x00, 0x73, 0x04, 0x00, 0x00, 0x4f, // ...d...b...s...O
	0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x76, 0x04, 0x00, 0x00, 0x64, 0x05, 0x00, 0x00, 0x64, // .......v...d...d
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x77, 0x04, 0x00, 0x00, 0x65, 0x04, 0x00, 0x00, 0x76, // .......w...e...v
	0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x7b, 0x04, 0x00, 0x00, 0xcf, // ...P.......{....
	0x00, 0x00, 0x00, 0x2a, 0x07, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x7c, // ...*...........|
	0x04, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0x7b, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...T...{...Q....
	0x00, 0x00, 0x00, 0x7d, 0x04, 0x00, 0x00, 0x7c, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, // ...}...|.......A
	0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0x7f, 0x04, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x8c, // ...V.......<....
	0x02, 0x00, 0x00, 0x14, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x80, // .......=........
	0x04, 0x00, 0x00, 0x7f, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x81, // .......P........
	0x04, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x80, 0x04, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, // ................
	0x00, 0x00, 0x00, 0x82, 0x04, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0x81, 0x04, 0x00, 0x00, 0x51, // .......T.......Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x83, 0x04, 0x00, 0x00, 0x82, 0x04, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x85, 0x04, 0x00, 0x00, 0x7d, // ...P...........}
	0x04, 0x00, 0x00, 0x83, 0x04, 0x00, 0x00, 0x7b, 0x03, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0xb0, // .......{...V....
	0x00, 0x00, 0x00, 0x6b, 0x05, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x00, 0x00, 0x57, // ...k...........W
	0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x6d, 0x05, 0x00, 0x00, 0x6b, 0x05, 0x00, 0x00, 0x85, // .......m...k....
	0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x88, 0x04, 0x00, 0x00, 0x6d, // ...O...........m
	0x05, 0x00, 0x00, 0x6d, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ...m............
	0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x89, 0x04, 0x00, 0x00, 0x77, // ...............w
	0x04, 0x00, 0x00, 0x88, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x8d, // .......P........
	0x04, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x2a, 0x07, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x0b, // .......*........
	0x00, 0x00, 0x00, 0x8e, 0x04, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0x8d, 0x04, 0x00, 0x00, 0x51, // .......T.......Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8f, 0x04, 0x00, 0x00, 0x8e, 0x04, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0x91, 0x04, 0x00, 0x00, 0x3c, // ...A...V.......<
	0x01, 0x00, 0x00, 0x8c, 0x02, 0x00, 0x00, 0x14, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...........=....
	0x00, 0x00, 0x00, 0x92, 0x04, 0x00, 0x00, 0x91, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, // ...........P....
	0x00, 0x00, 0x00, 0x93, 0x04, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x92, 0x04, 0x00, 0x00, 0x83, // ................
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x94, 0x04, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0x93, // ...........T....
	0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x95, 0x04, 0x00, 0x00, 0x94, // ...Q............
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x97, // .......P........
	0x04, 0x00, 0x00, 0x8f, 0x04, 0x00, 0x00, 0x95, 0x04, 0x00, 0x00, 0x7b, 0x03, 0x00, 0x00, 0x56, // ...........{...V
	0x00, 0x05, 0x00, 0xb0, 0x00, 0x00, 0x00, 0x74, 0x05, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x8e, // .......t........
	0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x76, 0x05, 0x00, 0x00, 0x74, // ...W.......v...t
	0x05, 0x00, 0x00, 0x97, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x9a, // .......O........
	0x04, 0x00, 0x00, 0x76, 0x05, 0x00, 0x00, 0x76, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ...v...v........
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x9b, // ................
	0x04, 0x00, 0x00, 0x89, 0x04, 0x00, 0x00, 0x9a, 0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0x9c, 0x04, 0x00, 0x00, 0x9b, 0x04, 0x00, 0x00, 0xd8, 0x02, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9e, 0x04, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0x00, // ...........T....
	0x00, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x9f, 0x04, 0x00, 0x00, 0x9e, // .......J........
	0x04, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa1, // .......Q........
	0x04, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x4a, // ...T...........J
	0x00, 0x00, 0x00, 0xa2, 0x04, 0x00, 0x00, 0xa1, 0x04, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0xa6, // ................
	0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xa3, 0x04, 0x00, 0x00, 0x9f, 0x04, 0x00, 0x00, 0xa2, // ...J............
	0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa5, 0x04, 0x00, 0x00, 0x54, // ...Q...........T
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xa6, // ...........J....
	0x04, 0x00, 0x00, 0xa5, 0x04, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x05, 0x00, 0x4a, // ...............J
	0x00, 0x00, 0x00, 0xa7, 0x04, 0x00, 0x00, 0xa3, 0x04, 0x00, 0x00, 0xa6, 0x04, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa9, 0x04, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0x01, // ...........T....
	0x00, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xaa, 0x04, 0x00, 0x00, 0xa9, // .......J........
	0x04, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xab, // ...........J....
	0x04, 0x00, 0x00, 0xa7, 0x04, 0x00, 0x00, 0xaa, 0x04, 0x00, 0x00, 0xa8, 0x00, 0x04, 0x00, 0x4a, // ...............J
	0x00, 0x00, 0x00, 0xac, 0x04, 0x00, 0x00, 0xab, 0x04, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x4a, // ...............J
	0x00, 0x00, 0x00, 0xae, 0x04, 0x00, 0x00, 0x3a, 0x04, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xa8, // .......:........
	0x00, 0x04, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xaf, 0x04, 0x00, 0x00, 0xae, 0x04, 0x00, 0x00, 0xa7, // ...J............
	0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xb0, 0x04, 0x00, 0x00, 0xac, 0x04, 0x00, 0x00, 0xaf, // ...J............
	0x04, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xbb, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // ................
	0x00, 0x04, 0x00, 0xb0, 0x04, 0x00, 0x00, 0xb1, 0x04, 0x00, 0x00, 0xbb, 0x04, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xb1, 0x04, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb5, // ................
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x41, // .......1.......A
	0x03, 0x00, 0x00, 0x2f, 0x04, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0xb6, // .../...A...V....
	0x04, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x22, 0x02, 0x00, 0x00, 0x1a, 0x01, 0x00, 0x00, 0x3d, // ...<...".......=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb7, 0x04, 0x00, 0x00, 0xb6, 0x04, 0x00, 0x00, 0x85, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb8, 0x04, 0x00, 0x00, 0xb5, 0x04, 0x00, 0x00, 0xb7, // ................
	0x04, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xb9, 0x04, 0x00, 0x00, 0xb8, // ...P............
	0x04, 0x00, 0x00, 0xb8, 0x04, 0x00, 0x00, 0xb8, 0x04, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0xba, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x28, // ...............(
	0x04, 0x00, 0x00, 0x9c, 0x04, 0x00, 0x00, 0xb9, 0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xbb, // ................
	0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xbb, 0x04, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0x2d, 0x07, 0x00, 0x00, 0x28, 0x04, 0x00, 0x00, 0x23, 0x04, 0x00, 0x00, 0xba, // ...-...(...#....
	0x04, 0x00, 0x00, 0xb1, 0x04, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xbd, // ................
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x2d, 0x07, 0x00, 0x00, 0x4a, // .......%...-...J
	0x03, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x3e, 0x01, 0x00, 0x00, 0xbe, 0x04, 0x00, 0x00, 0x3c, // ...A...>.......<
	0x01, 0x00, 0x00, 0x93, 0x02, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xbf, // .......=........
	0x04, 0x00, 0x00, 0xbe, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xc0, // .......O........
	0x04, 0x00, 0x00, 0xbf, 0x04, 0x00, 0x00, 0xbf, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xc1, // ................
	0x04, 0x00, 0x00, 0xc0, 0x04, 0x00, 0x00, 0x50, 0x03, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, // .......P........
	0x00, 0x00, 0x00, 0xc3, 0x04, 0x00, 0x00, 0xc1, 0x04, 0x00, 0x00, 0x54, 0x03, 0x00, 0x00, 0x0c, // ...........T....
	0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xc4, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, // ...............(
	0x00, 0x00, 0x00, 0xc3, 0x04, 0x00, 0x00, 0x57, 0x03, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x3e, // .......W...A...>
	0x01, 0x00, 0x00, 0xc6, 0x04, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x93, 0x02, 0x00, 0x00, 0x3d, // .......<.......=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xc7, 0x04, 0x00, 0x00, 0xc6, 0x04, 0x00, 0x00, 0x4f, // ...............O
	0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xc8, 0x04, 0x00, 0x00, 0xc7, 0x04, 0x00, 0x00, 0xc7, // ................
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x85, // ................
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xc9, 0x04, 0x00, 0x00, 0xbd, 0x04, 0x00, 0x00, 0xc8, // ................
	0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x81, 0x05, 0x00, 0x00, 0xc1, // ...Q............
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x83, // .......Q........
	0x05, 0x00, 0x00, 0xc1, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x85, 0x05, 0x00, 0x00, 0xc1, 0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, // ................
	0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x86, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, // ...............(
	0x00, 0x00, 0x00, 0x83, 0x05, 0x00, 0x00, 0x85, 0x05, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x87, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x81, // ...........(....
	0x05, 0x00, 0x00, 0x86, 0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x89, // .......Q........
	0x05, 0x00, 0x00, 0xc4, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x8b, 0x05, 0x00, 0x00, 0xc4, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8d, 0x05, 0x00, 0x00, 0xc4, 0x04, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8e, 0x05, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x8b, 0x05, 0x00, 0x00, 0x8d, 0x05, 0x00, 0x00, 0x0c, // ...(............
	0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8f, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, // ...............(
	0x00, 0x00, 0x00, 0x89, 0x05, 0x00, 0x00, 0x8e, 0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x90, 0x05, 0x00, 0x00, 0xc9, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x91, 0x05, 0x00, 0x00, 0xc9, 0x04, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x92, 0x05, 0x00, 0x00, 0xc9, // ...Q............
	0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x93, // ................
	0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x91, 0x05, 0x00, 0x00, 0x92, // .......(........
	0x05, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x94, 0x05, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x90, 0x05, 0x00, 0x00, 0x93, 0x05, 0x00, 0x00, 0x81, // ...(............
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x97, 0x05, 0x00, 0x00, 0x87, 0x05, 0x00, 0x00, 0x8f, // ................
	0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x99, 0x05, 0x00, 0x00, 0x97, // .......J........
	0x05, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xa3, 0x05, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x99, 0x05, 0x00, 0x00, 0x9a, 0x05, 0x00, 0x00, 0xa3, // ................
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x9a, 0x05, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x9c, 0x05, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x97, 0x05, 0x00, 0x00, 0x8e, // ................
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x9f, 0x05, 0x00, 0x00, 0xc1, 0x04, 0x00, 0x00, 0x9c, // ................
	0x05, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xa2, 0x05, 0x00, 0x00, 0xc4, // ................
	0x04, 0x00, 0x00, 0x9c, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xa3, 0x05, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xa3, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x3b, // ...............;
	0x07, 0x00, 0x00, 0xc4, 0x04, 0x00, 0x00, 0xbb, 0x04, 0x00, 0x00, 0xa2, 0x05, 0x00, 0x00, 0x9a, // ................
	0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x30, 0x07, 0x00, 0x00, 0xc1, // ...........0....
	0x04, 0x00, 0x00, 0xbb, 0x04, 0x00, 0x00, 0x9f, 0x05, 0x00, 0x00, 0x9a, 0x05, 0x00, 0x00, 0xba, // ................
	0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xa6, 0x05, 0x00, 0x00, 0x87, 0x05, 0x00, 0x00, 0xcf, // ...J............
	0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xa7, 0x05, 0x00, 0x00, 0xb2, // .......J........
	0x03, 0x00, 0x00, 0xa6, 0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xa9, // ...........J....
	0x05, 0x00, 0x00, 0x8f, 0x05, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x05, 0x00, 0x4a, // ...............J
	0x00, 0x00, 0x00, 0xaa, 0x05, 0x00, 0x00, 0xa7, 0x05, 0x00, 0x00, 0xa9, 0x05, 0x00, 0x00, 0xf7, // ................
	0x00, 0x03, 0x00, 0xbf, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xaa, // ................
	0x05, 0x00, 0x00, 0xab, 0x05, 0x00, 0x00, 0xbf, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xab, // ................
	0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xac, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xac, // ................
	0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x37, 0x07, 0x00, 0x00, 0x27, // ...........7...'
	0x01, 0x00, 0x00, 0xab, 0x05, 0x00, 0x00, 0xba, 0x05, 0x00, 0x00, 0xbb, 0x05, 0x00, 0x00, 0xf5, // ................
	0x00, 0x07, 0x00, 0x49, 0x00, 0x00, 0x00, 0x2e, 0x07, 0x00, 0x00, 0x97, 0x00, 0x00, 0x00, 0xab, // ...I............
	0x05, 0x00, 0x00, 0xbd, 0x05, 0x00, 0x00, 0xbb, 0x05, 0x00, 0x00, 0xb1, 0x00, 0x05, 0x00, 0x4a, // ...............J
	0x00, 0x00, 0x00, 0xaf, 0x05, 0x00, 0x00, 0x2e, 0x07, 0x00, 0x00, 0x22, 0x02, 0x00, 0x00, 0xf6, // ..........."....
	0x00, 0x04, 0x00, 0xbe, 0x05, 0x00, 0x00, 0xbb, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // ................
	0x00, 0x04, 0x00, 0xaf, 0x05, 0x00, 0x00, 0xb0, 0x05, 0x00, 0x00, 0xbe, 0x05, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xb0, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0xb5, // .......A...V....
	0x05, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x3d, // ...<...U.......=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb6, 0x05, 0x00, 0x00, 0xb5, 0x05, 0x00, 0x00, 0xf7, // ................
	0x00, 0x03, 0x00, 0x6e, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0x16, // ...n............
	0x01, 0x00, 0x00, 0xee, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xee, 0x05, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x06, 0x00, 0x3e, 0x01, 0x00, 0x00, 0xef, 0x05, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x3d, // ...>.......<...=
	0x01, 0x00, 0x00, 0x2e, 0x07, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xf0, // .......=........
	0x05, 0x00, 0x00, 0xef, 0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf2, // .......Q........
	0x05, 0x00, 0x00, 0xf0, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xf3, 0x05, 0x00, 0x00, 0xf0, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf4, 0x05, 0x00, 0x00, 0xf0, 0x05, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xf5, 0x05, 0x00, 0x00, 0xf2, // ...P............
	0x05, 0x00, 0x00, 0xf3, 0x05, 0x00, 0x00, 0xf4, 0x05, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x05, 0x00, 0x46, 0x01, 0x00, 0x00, 0xf6, 0x05, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x97, // ...F.......<....
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x35, 0x01, 0x00, 0x00, 0xf7, 0x05, 0x00, 0x00, 0xf6, // ...=...5........
	0x05, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xf8, 0x05, 0x00, 0x00, 0xf5, // ................
	0x05, 0x00, 0x00, 0xf7, 0x05, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xf9, // .......O........
	0x05, 0x00, 0x00, 0xf8, 0x05, 0x00, 0x00, 0xf8, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xfa, // ................
	0x05, 0x00, 0x00, 0xf9, 0x05, 0x00, 0x00, 0x86, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0xfc, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0xfa, // ...........E....
	0x05, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xfe, 0x05, 0x00, 0x00, 0xf2, // ................
	0x03, 0x00, 0x00, 0xfc, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0x01, // .......A...V....
	0x06, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0x14, 0x01, 0x00, 0x00, 0x3d, // ...<...U.......=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x06, 0x00, 0x00, 0x01, 0x06, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x06, 0x00, 0x00, 0xfe, 0x05, 0x00, 0x00, 0x02, // ................
	0x06, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x04, 0x06, 0x00, 0x00, 0x03, // .......J........
	0x06, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x05, // ...........J....
	0x06, 0x00, 0x00, 0xb2, 0x03, 0x00, 0x00, 0x04, 0x06, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x11, // ................
	0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x05, 0x06, 0x00, 0x00, 0x06, // ................
	0x06, 0x00, 0x00, 0x11, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x06, 0x06, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0x08, 0x06, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x55, // ...V.......<...U
	0x01, 0x00, 0x00, 0x14, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x09, // .......=........
	0x06, 0x00, 0x00, 0x08, 0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0a, // ................
	0x06, 0x00, 0x00, 0xfe, 0x05, 0x00, 0x00, 0x09, 0x06, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x56, // ...........A...V
	0x01, 0x00, 0x00, 0x0b, 0x06, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0x14, // .......<...U....
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0c, 0x06, 0x00, 0x00, 0x0b, // ...=............
	0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0d, 0x06, 0x00, 0x00, 0xc8, // ................
	0x00, 0x00, 0x00, 0x0c, 0x06, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x72, // ...............r
	0x06, 0x00, 0x00, 0x0d, 0x06, 0x00, 0x00, 0x0d, 0x06, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x0f, 0x06, 0x00, 0x00, 0x0a, 0x06, 0x00, 0x00, 0x72, 0x06, 0x00, 0x00, 0x8e, // ...........r....
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x10, 0x06, 0x00, 0x00, 0x30, 0x07, 0x00, 0x00, 0x0f, // ...........0....
	0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x11, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x11, // ................
	0x06, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x3c, 0x07, 0x00, 0x00, 0x27, // ...........<...'
	0x01, 0x00, 0x00, 0xee, 0x05, 0x00, 0x00, 0x10, 0x06, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0xba, // ................
	0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x13, 0x06, 0x00, 0x00, 0xfe, 0x05, 0x00, 0x00, 0xcf, // ...J............
	0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x35, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // .......5........
	0x00, 0x04, 0x00, 0x13, 0x06, 0x00, 0x00, 0x14, 0x06, 0x00, 0x00, 0x35, 0x06, 0x00, 0x00, 0xf8, // ...........5....
	0x00, 0x02, 0x00, 0x14, 0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x16, // ................
	0x06, 0x00, 0x00, 0xfc, 0x05, 0x00, 0x00, 0xf0, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0x17, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x16, // ...........E....
	0x06, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x19, 0x06, 0x00, 0x00, 0xf2, // ................
	0x03, 0x00, 0x00, 0x17, 0x06, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1c, // ................
	0x06, 0x00, 0x00, 0xfc, 0x05, 0x00, 0x00, 0x17, 0x06, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x1e, 0x06, 0x00, 0x00, 0xf0, 0x03, 0x00, 0x00, 0x17, 0x06, 0x00, 0x00, 0xba, // ................
	0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x20, 0x06, 0x00, 0x00, 0x19, 0x06, 0x00, 0x00, 0xcf, // ...J... ........
	0x00, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x22, 0x06, 0x00, 0x00, 0x1c, // .......J..."....
	0x06, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x23, // ...........J...#
	0x06, 0x00, 0x00, 0x20, 0x06, 0x00, 0x00, 0x22, 0x06, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x4a, // ... ...".......J
	0x00, 0x00, 0x00, 0x25, 0x06, 0x00, 0x00, 0x1e, 0x06, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xa7, // ...%............
	0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x26, 0x06, 0x00, 0x00, 0x23, 0x06, 0x00, 0x00, 0x25, // ...J...&...#...%
	0x06, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x34, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // .......4........
	0x00, 0x04, 0x00, 0x26, 0x06, 0x00, 0x00, 0x27, 0x06, 0x00, 0x00, 0x34, 0x06, 0x00, 0x00, 0xf8, // ...&...'...4....
	0x00, 0x02, 0x00, 0x27, 0x06, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x76, // ...'...........v
	0x06, 0x00, 0x00, 0x23, 0x07, 0x00, 0x00, 0x3b, 0x07, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, // ...#...;........
	0x00, 0x00, 0x00, 0x77, 0x06, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x1c, 0x06, 0x00, 0x00, 0x0c, // ...w............
	0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x78, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, // .......x........
	0x00, 0x00, 0x00, 0x77, 0x06, 0x00, 0x00, 0x2e, 0x01, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, // ...w............
	0x00, 0x00, 0x00, 0x79, 0x06, 0x00, 0x00, 0x76, 0x06, 0x00, 0x00, 0x78, 0x06, 0x00, 0x00, 0x81, // ...y...v...x....
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x7a, 0x06, 0x00, 0x00, 0x3b, 0x07, 0x00, 0x00, 0x79, // .......z...;...y
	0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2a, 0x06, 0x00, 0x00, 0xb6, // ...........*....
	0x05, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2c, // ...............,
	0x06, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 0x1e, 0x06, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x2d, 0x06, 0x00, 0x00, 0x2a, 0x06, 0x00, 0x00, 0x2c, 0x06, 0x00, 0x00, 0x0c, // ...-...*...,....
	0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2f, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, // ......./........
	0x00, 0x00, 0x00, 0x19, 0x06, 0x00, 0x00, 0xb6, 0x05, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x30, 0x06, 0x00, 0x00, 0x2d, 0x06, 0x00, 0x00, 0x2f, 0x06, 0x00, 0x00, 0x8e, // ...0...-.../....
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x31, 0x06, 0x00, 0x00, 0x7a, 0x06, 0x00, 0x00, 0x30, // .......1...z...0
	0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x33, 0x06, 0x00, 0x00, 0x3c, // ...........3...<
	0x07, 0x00, 0x00, 0x31, 0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x34, 0x06, 0x00, 0x00, 0xf8, // ...1.......4....
	0x00, 0x02, 0x00, 0x34, 0x06, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x3e, // ...4...........>
	0x07, 0x00, 0x00, 0x3c, 0x07, 0x00, 0x00, 0x14, 0x06, 0x00, 0x00, 0x33, 0x06, 0x00, 0x00, 0x27, // ...<.......3...'
	0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x35, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x35, // .......5.......5
	0x06, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x3d, 0x07, 0x00, 0x00, 0x3c, // ...........=...<
	0x07, 0x00, 0x00, 0x11, 0x06, 0x00, 0x00, 0x3e, 0x07, 0x00, 0x00, 0x34, 0x06, 0x00, 0x00, 0x94, // .......>...4....
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x38, 0x06, 0x00, 0x00, 0xfa, 0x05, 0x00, 0x00, 0xfa, // .......8........
	0x05, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3b, 0x06, 0x00, 0x00, 0x38, // ...........;...8
	0x06, 0x00, 0x00, 0x38, 0x06, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0x3c, // ...8...A...V...<
	0x06, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x99, 0x01, 0x00, 0x00, 0x9a, 0x01, 0x00, 0x00, 0x3d, // ...<...........=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3d, 0x06, 0x00, 0x00, 0x3c, 0x06, 0x00, 0x00, 0x41, // .......=...<...A
	0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0x3e, 0x06, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x99, // ...V...>...<....
	0x01, 0x00, 0x00, 0x9a, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3f, // .......=.......?
	0x06, 0x00, 0x00, 0x3e, 0x06, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x40, // ...>...........@
	0x06, 0x00, 0x00, 0x3d, 0x06, 0x00, 0x00, 0x3f, 0x06, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x56, // ...=...?...A...V
	0x01, 0x00, 0x00, 0x41, 0x06, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x99, 0x01, 0x00, 0x00, 0x9a, // ...A...<........
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x42, 0x06, 0x00, 0x00, 0x41, // ...=.......B...A
	0x06, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x43, 0x06, 0x00, 0x00, 0x40, // ...........C...@
	0x06, 0x00, 0x00, 0x42, 0x06, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0x44, // ...B...A...V...D
	0x06, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x99, 0x01, 0x00, 0x00, 0x9a, 0x01, 0x00, 0x00, 0x3d, // ...<...........=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x45, 0x06, 0x00, 0x00, 0x44, 0x06, 0x00, 0x00, 0x85, // .......E...D....
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x06, 0x00, 0x00, 0x43, 0x06, 0x00, 0x00, 0x45, // .......F...C...E
	0x06, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x47, 0x06, 0x00, 0x00, 0x3b, // ...........G...;
	0x06, 0x00, 0x00, 0x46, 0x06, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x48, // ...F...........H
	0x06, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x47, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, // .......G........
	0x00, 0x00, 0x00, 0x49, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x48, // ...I.......+...H
	0x06, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x4c, 0x06, 0x00, 0x00, 0x49, 0x06, 0x00, 0x00, 0x49, 0x06, 0x00, 0x00, 0x81, // ...L...I...I....
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4e, 0x06, 0x00, 0x00, 0x38, 0x06, 0x00, 0x00, 0xc8, // .......N...8....
	0x00, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4f, 0x06, 0x00, 0x00, 0x4c, // ...........O...L
	0x06, 0x00, 0x00, 0x4e, 0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x53, // ...N...........S
	0x06, 0x00, 0x00, 0x3b, 0x07, 0x00, 0x00, 0x30, 0x07, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3e, // ...;...0...A...>
	0x01, 0x00, 0x00, 0x56, 0x06, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0xb7, 0x01, 0x00, 0x00, 0x2e, // ...V...<........
	0x07, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x57, 0x06, 0x00, 0x00, 0x56, // ...=.......W...V
	0x06, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x58, 0x06, 0x00, 0x00, 0x57, // ...O.......X...W
	0x06, 0x00, 0x00, 0x57, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ...W............
	0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x59, 0x06, 0x00, 0x00, 0x3d, // ...........Y...=
	0x07, 0x00, 0x00, 0x58, 0x06, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x5b, // ...X...........[
	0x06, 0x00, 0x00, 0x59, 0x06, 0x00, 0x00, 0x4f, 0x06, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x3e, // ...Y...O...A...>
	0x01, 0x00, 0x00, 0x5d, 0x06, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x99, 0x01, 0x00, 0x00, 0x3d, // ...]...<.......=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x5e, 0x06, 0x00, 0x00, 0x5d, 0x06, 0x00, 0x00, 0x4f, // .......^...]...O
	0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x5f, 0x06, 0x00, 0x00, 0x5e, 0x06, 0x00, 0x00, 0x5e, // ......._...^...^
	0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, // ................
	0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x61, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // .......a.......2
	0x00, 0x00, 0x00, 0x53, 0x06, 0x00, 0x00, 0x5f, 0x06, 0x00, 0x00, 0x5b, 0x06, 0x00, 0x00, 0x41, // ...S..._...[...A
	0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0x62, 0x06, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0xc4, // ...V...b...<....
	0x01, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x63, // .......=.......c
	0x06, 0x00, 0x00, 0x62, 0x06, 0x00, 0x00, 0xb7, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x64, // ...b.......J...d
	0x06, 0x00, 0x00, 0x63, 0x06, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x6d, // ...c...........m
	0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x64, 0x06, 0x00, 0x00, 0x65, // ...........d...e
	0x06, 0x00, 0x00, 0x6b, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x6b, 0x06, 0x00, 0x00, 0xf9, // ...k.......k....
	0x00, 0x02, 0x00, 0x6e, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x65, 0x06, 0x00, 0x00, 0x41, // ...n.......e...A
	0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0x66, 0x06, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0xc4, // ...V...f...<....
	0x01, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x67, // .......=.......g
	0x06, 0x00, 0x00, 0x66, 0x06, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x68, // ...f...P.......h
	0x06, 0x00, 0x00, 0x67, 0x06, 0x00, 0x00, 0x67, 0x06, 0x00, 0x00, 0x67, 0x06, 0x00, 0x00, 0x0c, // ...g...g...g....
	0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x80, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2e, // ................
	0x00, 0x00, 0x00, 0x61, 0x06, 0x00, 0x00, 0x30, 0x07, 0x00, 0x00, 0x68, 0x06, 0x00, 0x00, 0xf9, // ...a...0...h....
	0x00, 0x02, 0x00, 0x6e, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x6d, 0x06, 0x00, 0x00, 0xff, // ...n.......m....
	0x00, 0x01, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x6e, 0x06, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, // .......n........
	0x00, 0x00, 0x00, 0x3f, 0x07, 0x00, 0x00, 0x61, 0x06, 0x00, 0x00, 0x6b, 0x06, 0x00, 0x00, 0x80, // ...?...a...k....
	0x06, 0x00, 0x00, 0x65, 0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xba, // ...e............
	0x05, 0x00, 0x00, 0x37, 0x07, 0x00, 0x00, 0x3f, 0x07, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xbb, // ...7...?........
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xbb, 0x05, 0x00, 0x00, 0x80, 0x00, 0x05, 0x00, 0x49, // ...............I
	0x00, 0x00, 0x00, 0xbd, 0x05, 0x00, 0x00, 0x2e, 0x07, 0x00, 0x00, 0x93, 0x00, 0x00, 0x00, 0xf9, // ................
	0x00, 0x02, 0x00, 0xac, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xbe, 0x05, 0x00, 0x00, 0xf9, // ................
	0x00, 0x02, 0x00, 0xbf, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xbf, 0x05, 0x00, 0x00, 0xf5, // ................
	0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x36, 0x07, 0x00, 0x00, 0x27, 0x01, 0x00, 0x00, 0xa3, // .......6...'....
	0x05, 0x00, 0x00, 0x37, 0x07, 0x00, 0x00, 0xbe, 0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x4a, // ...7...........J
	0x00, 0x00, 0x00, 0xc2, 0x05, 0x00, 0x00, 0x87, 0x05, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xa7, // ................
	0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xc3, 0x05, 0x00, 0x00, 0xb2, 0x03, 0x00, 0x00, 0xc2, // ...J............
	0x05, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xd3, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // ................
	0x00, 0x04, 0x00, 0xc3, 0x05, 0x00, 0x00, 0xc4, 0x05, 0x00, 0x00, 0xd3, 0x05, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xc4, 0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc6, // .......Q........
	0x05, 0x00, 0x00, 0xf2, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xc7, 0x05, 0x00, 0x00, 0xf2, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc8, 0x05, 0x00, 0x00, 0xf2, 0x03, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xc9, 0x05, 0x00, 0x00, 0xc6, // ...P............
	0x05, 0x00, 0x00, 0xc7, 0x05, 0x00, 0x00, 0xc8, 0x05, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x05, 0x00, 0x46, 0x01, 0x00, 0x00, 0xca, 0x05, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x97, // ...F.......<....
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x35, 0x01, 0x00, 0x00, 0xcb, 0x05, 0x00, 0x00, 0xca, // ...=...5........
	0x05, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xcc, 0x05, 0x00, 0x00, 0xc9, // ................
	0x05, 0x00, 0x00, 0xcb, 0x05, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xcd, // .......O........
	0x05, 0x00, 0x00, 0xcc, 0x05, 0x00, 0x00, 0xcc, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xce, // ................
	0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0xcd, 0x05, 0x00, 0x00, 0x51, // .......E.......Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x92, 0x06, 0x00, 0x00, 0xce, 0x05, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x93, 0x06, 0x00, 0x00, 0xce, // ...Q............
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xc5, 0x06, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0x16, 0x01, 0x00, 0x00, 0xa1, 0x06, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xa1, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa2, // ................
	0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x92, 0x06, 0x00, 0x00, 0x0c, // ................
	0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa3, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0x93, 0x06, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xa5, // ...........J....
	0x06, 0x00, 0x00, 0xa3, 0x06, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x4a, // ...............J
	0x00, 0x00, 0x00, 0xa7, 0x06, 0x00, 0x00, 0xa2, 0x06, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xa7, // ................
	0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xa8, 0x06, 0x00, 0x00, 0xa5, 0x06, 0x00, 0x00, 0xa7, // ...J............
	0x06, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xaa, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // ................
	0x00, 0x04, 0x00, 0xa8, 0x06, 0x00, 0x00, 0xa9, 0x06, 0x00, 0x00, 0xaa, 0x06, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xa9, 0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xc5, 0x06, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xaa, 0x06, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xad, // ................
	0x06, 0x00, 0x00, 0xa3, 0x06, 0x00, 0x00, 0xa2, 0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xb0, 0x06, 0x00, 0x00, 0xa3, 0x06, 0x00, 0x00, 0xa2, 0x06, 0x00, 0x00, 0x88, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb1, 0x06, 0x00, 0x00, 0xad, 0x06, 0x00, 0x00, 0xb0, // ................
	0x06, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xb2, 0x06, 0x00, 0x00, 0x93, // .......J........
	0x06, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb3, // ................
	0x06, 0x00, 0x00, 0xb2, 0x06, 0x00, 0x00, 0xfa, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x00, 0x00, 0x85, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb5, 0x06, 0x00, 0x00, 0xfd, 0x00, 0x00, 0x00, 0xb1, // ................
	0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb8, 0x06, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xb5, 0x06, 0x00, 0x00, 0xb1, 0x06, 0x00, 0x00, 0x29, // ...2...........)
	0x07, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xb9, 0x06, 0x00, 0x00, 0x93, // .......J........
	0x06, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbb, // ................
	0x06, 0x00, 0x00, 0xb1, 0x06, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbd, // ................
	0x06, 0x00, 0x00, 0xb9, 0x06, 0x00, 0x00, 0xbb, 0x06, 0x00, 0x00, 0xb1, 0x06, 0x00, 0x00, 0x0c, // ................
	0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbf, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // ...............2
	0x00, 0x00, 0x00, 0xb8, 0x06, 0x00, 0x00, 0xbd, 0x06, 0x00, 0x00, 0xb3, 0x06, 0x00, 0x00, 0xb8, // ................
	0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xc0, 0x06, 0x00, 0x00, 0x92, 0x06, 0x00, 0x00, 0xcf, // ...J............
	0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc2, 0x06, 0x00, 0x00, 0xbf, // ................
	0x06, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc4, 0x06, 0x00, 0x00, 0xc0, // ................
	0x06, 0x00, 0x00, 0xc2, 0x06, 0x00, 0x00, 0xbf, 0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xc5, // ................
	0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xc5, 0x06, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x32, 0x07, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xa9, 0x06, 0x00, 0x00, 0xc4, // ...2............
	0x06, 0x00, 0x00, 0xaa, 0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x95, // ................
	0x06, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0x32, 0x07, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // .......2...Q....
	0x00, 0x00, 0x00, 0x96, 0x06, 0x00, 0x00, 0xce, 0x05, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf7, // ................
	0x00, 0x03, 0x00, 0xe2, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0x16, // ................
	0x01, 0x00, 0x00, 0xcd, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xcd, 0x06, 0x00, 0x00, 0x0c, // ................
	0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xce, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0x96, 0x06, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd0, // ................
	0x06, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0xce, 0x06, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x4a, // ...............J
	0x00, 0x00, 0x00, 0xd1, 0x06, 0x00, 0x00, 0xd0, 0x06, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xf7, // ................
	0x00, 0x03, 0x00, 0xd5, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xd1, // ................
	0x06, 0x00, 0x00, 0xd2, 0x06, 0x00, 0x00, 0xd5, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xd2, // ................
	0x06, 0x00, 0x00, 0xbe, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xd3, 0x06, 0x00, 0x00, 0x96, // .......J........
	0x06, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd4, // ................
	0x06, 0x00, 0x00, 0xd3, 0x06, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0xf9, // ................
	0x00, 0x02, 0x00, 0xe2, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xd5, 0x06, 0x00, 0x00, 0x0c, // ................
	0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd8, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // ...............2
	0x00, 0x00, 0x00, 0xd4, 0x00, 0x00, 0x00, 0xce, 0x06, 0x00, 0x00, 0xd7, 0x00, 0x00, 0x00, 0x83, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xda, 0x06, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0xce, // ................
	0x06, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xdb, 0x06, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0xda, 0x06, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xdc, 0x06, 0x00, 0x00, 0xd8, 0x06, 0x00, 0x00, 0xdb, 0x06, 0x00, 0x00, 0xbe, // ................
	0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xdd, 0x06, 0x00, 0x00, 0x96, 0x06, 0x00, 0x00, 0xcf, // ...J............
	0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x26, 0x07, 0x00, 0x00, 0xd8, // ...........&....
	0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe0, 0x06, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x26, 0x07, 0x00, 0x00, 0xdb, 0x06, 0x00, 0x00, 0xc8, // ...2...&........
	0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe1, 0x06, 0x00, 0x00, 0xdd, // ................
	0x06, 0x00, 0x00, 0xdc, 0x06, 0x00, 0x00, 0xe0, 0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xe2, // ................
	0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xe2, 0x06, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x33, 0x07, 0x00, 0x00, 0xd4, 0x06, 0x00, 0x00, 0xd2, 0x06, 0x00, 0x00, 0xe1, // ...3............
	0x06, 0x00, 0x00, 0xd5, 0x06, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x98, // .......P........
	0x06, 0x00, 0x00, 0x95, 0x06, 0x00, 0x00, 0x33, 0x07, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x9b, // .......3...V....
	0x00, 0x00, 0x00, 0xea, 0x06, 0x00, 0x00, 0x83, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x58, // ...............X
	0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xed, 0x06, 0x00, 0x00, 0xea, 0x06, 0x00, 0x00, 0x98, // ................
	0x06, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, // ...........O....
	0x00, 0x00, 0x00, 0x8a, 0x06, 0x00, 0x00, 0xed, 0x06, 0x00, 0x00, 0xed, 0x06, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0x8c, 0x06, 0x00, 0x00, 0x30, 0x07, 0x00, 0x00, 0x8a, 0x06, 0x00, 0x00, 0x41, // .......0.......A
	0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0x8d, 0x06, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0xe1, // ...V.......<....
	0x01, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8e, // .......=........
	0x06, 0x00, 0x00, 0x8d, 0x06, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x8f, // ................
	0x06, 0x00, 0x00, 0x8c, 0x06, 0x00, 0x00, 0x8e, 0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0xd2, 0x05, 0x00, 0x00, 0x36, 0x07, 0x00, 0x00, 0x8f, 0x06, 0x00, 0x00, 0xf9, // .......6........
	0x00, 0x02, 0x00, 0xd3, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xd3, 0x05, 0x00, 0x00, 0xf5, // ................
	0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x38, 0x07, 0x00, 0x00, 0x36, 0x07, 0x00, 0x00, 0xbf, // .......8...6....
	0x05, 0x00, 0x00, 0xd2, 0x05, 0x00, 0x00, 0xe2, 0x06, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x4a, // ...............J
	0x00, 0x00, 0x00, 0xd5, 0x05, 0x00, 0x00, 0x94, 0x05, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xf7, // ................
	0x00, 0x03, 0x00, 0xd9, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xd5, // ................
	0x05, 0x00, 0x00, 0xd6, 0x05, 0x00, 0x00, 0xd9, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xd6, // ................
	0x05, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xd8, 0x05, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xbd, 0x04, 0x00, 0x00, 0xc8, 0x04, 0x00, 0x00, 0x38, // ...2...........8
	0x07, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xd9, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xd9, // ................
	0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x39, 0x07, 0x00, 0x00, 0x38, // ...........9...8
	0x07, 0x00, 0x00, 0xd3, 0x05, 0x00, 0x00, 0xd8, 0x05, 0x00, 0x00, 0xd6, 0x05, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd2, 0x04, 0x00, 0x00, 0x39, 0x07, 0x00, 0x00, 0x00, // ...........9....
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd4, 0x04, 0x00, 0x00, 0x39, // ...Q...........9
	0x07, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd6, // .......Q........
	0x04, 0x00, 0x00, 0x39, 0x07, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x56, // ...9.......A...V
	0x01, 0x00, 0x00, 0xd7, 0x04, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x93, 0x02, 0x00, 0x00, 0x9a, // .......<........
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd8, 0x04, 0x00, 0x00, 0xd7, // ...=............
	0x04, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x27, 0x07, 0x00, 0x00, 0xd2, // ...P.......'....
	0x04, 0x00, 0x00, 0xd4, 0x04, 0x00, 0x00, 0xd6, 0x04, 0x00, 0x00, 0xd8, 0x04, 0x00, 0x00, 0xf9, // ................
	0x00, 0x02, 0x00, 0xda, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xda, 0x04, 0x00, 0x00, 0xf5, // ................
	0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x48, 0x07, 0x00, 0x00, 0x22, 0x04, 0x00, 0x00, 0x1b, // .......H..."....
	0x04, 0x00, 0x00, 0x27, 0x07, 0x00, 0x00, 0xd9, 0x05, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x96, // ...'.......>....
	0x03, 0x00, 0x00, 0x48, 0x07, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00, 0x00, // ...H.......8....
	0x00, 0xb0, 0x02,                                                                               // ...
};
static const bgfx::EmbeddedShader fs_ball_equirectangular_decal_st = BGFX_EMBEDDED_SHADER(fs_ball_equirectangular_decal_st);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of fragment shader from fs_ball.sc to fs_ball_equirectangular_nodecal_st with options: STEREO EQUIRECTANGULAR NODECAL
static const uint8_t fs_ball_equirectangular_nodecal_st_mtl[11852] =
{
	0x46, 0x53, 0x48, 0x0b, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x15, 0x74, // FSH..N.........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, // ex_ball_colorSam
	0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x74, // pler...........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x65, 0x78, // ex_ball_colorTex
	0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, // ture...........t
	0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, // ex_envSampler...
	0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x54, // ........tex_envT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // exture..........
	0x16, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, // .tex_diffuse_env
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Sampler.........
	0x00, 0x16, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, // ..tex_diffuse_en
	0x76, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // vTexture........
	0x00, 0x00, 0x15, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, // ...tex_ball_deca
	0x6c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // lSampler........
	0x00, 0x00, 0x15, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, // ...tex_ball_deca
	0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // lTexture........
	0x00, 0x00, 0x19, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, // ...tex_ball_play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, // fieldSampler....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // .......tex_ball_
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // playfieldTexture
	0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x62, 0x61, 0x6c, 0x6c, 0x4c, // ...........ballL
	0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x0a, 0x00, 0x01, 0x0a, 0x00, 0x00, 0x00, 0x00, // ightPos.........
	0x00, 0x07, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x14, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, // ..matView.......
	0x00, 0x00, 0x00, 0x1e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, // ....Roughness_Wr
	0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, // apL_Edge_Thickne
	0x73, 0x73, 0x12, 0x01, 0x80, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x63, 0x41, 0x6d, // ss...........cAm
	0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, // bient_LightRange
	0x12, 0x01, 0x40, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x62, 0x61, 0x6c, 0x6c, 0x4c, // ..@........ballL
	0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0a, 0xa0, 0x01, // ightEmission....
	0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // .......fDisableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, // ighting_top_belo
	0x77, 0x12, 0x01, 0x60, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x65, 0x6e, 0x76, // w..`........fenv
	0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, // EmissionScale_Te
	0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x01, 0x50, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // xWidth..P.......
	0x13, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, // .w_h_disableLigh
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x01, 0xa0, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x63, // ting...........c
	0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x01, 0x70, 0x02, 0x01, 0x00, // Base_Alpha..p...
	0x00, 0x00, 0x00, 0x00, 0x0c, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, // .....matWorldVie
	0x77, 0x14, 0x01, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x6d, 0x61, 0x74, 0x50, // w..@........matP
	0x72, 0x6f, 0x6a, 0x14, 0x02, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x69, 0x6e, // roj...........in
	0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, // vTableRes_reflec
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x01, 0x90, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, // tion...........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x10, 0x00, 0x00, // ex_ball_color...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, // ........tex_diff
	0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // use_env.........
	0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, // ..tex_ball_decal
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x74, 0x65, 0x78, 0x5f, 0x62, // ...........tex_b
	0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x10, 0x00, 0x00, // all_playfield...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3d, 0x2b, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, // .......=+..#incl
	0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, // ude <metal_stdli
	0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, // b>.#include <sim
	0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, // d/simd.h>..using
	0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, //  namespace metal
	0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, // ;..struct _Globa
	0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, // l.{.    float4x4
	0x20, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //  matView;.    fl
	0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, // oat4x4 matWorldV
	0x69, 0x65, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, // iew;.    float4x
	0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, 0x20, 0x20, // 4 matProj[2];.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, //   float4 ballLig
	0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x31, 0x30, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // htPos[10];.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, // loat4 ballLightE
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x31, 0x30, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, // mission[10];.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, //  float4 cAmbient
	0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x3b, 0x0a, 0x20, 0x20, 0x20, // _LightRange;.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, //  float4 fenvEmis
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, // sionScale_TexWid
	0x74, 0x68, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x66, // th;.    float4 f
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, // DisableLighting_
	0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // top_below;.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, // loat4 cBase_Alph
	0x61, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x52, 0x6f, // a;.    float4 Ro
	0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, // ughness_WrapL_Ed
	0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x20, 0x20, // ge_Thickness;.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, //   float4 invTabl
	0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b, // eRes_reflection;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, // .    float4 w_h_
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x3b, // disableLighting;
	0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x66, 0x6c, // .};..constant fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x30, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, // oat _1830 = {};.
	0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, // .struct xlatMtlM
	0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // ain_out.{.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, // oat4 bgfx_FragDa
	0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, // ta0 [[color(0)]]
	0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, // ;.};..struct xla
	0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, // tMtlMain_in.{.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x20, 0x5b, 0x5b, //   float v_eye [[
	0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, // user(locn0)]];. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, //    float3 v_norm
	0x61, 0x6c, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, // al [[user(locn1)
	0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, // ]];.    float2 v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, // _texcoord0 [[use
	0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x32, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // r(locn2)]];.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, // float3 v_worldPo
	0x73, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x33, 0x29, 0x5d, // s [[user(locn3)]
	0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x5b, 0x5b, 0x20, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x5f, // ];.};..[[ early_
	0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x20, 0x5d, // fragment_tests ]
	0x5d, 0x20, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // ] fragment xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // tlMain_out xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // tlMain(xlatMtlMa
	0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, // in_in in [[stage
	0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, // _in]], constant 
	0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, // _Global& _mtl_u 
	0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, // [[buffer(0)]], t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, // exture2d<float> 
	0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x5b, // tex_ball_color [
	0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, // [texture(0)]], t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, // exture2d<float> 
	0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x20, // tex_diffuse_env 
	0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, // [[texture(2)]], 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, // texture2d<float>
	0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x20, //  tex_ball_decal 
	0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x33, 0x29, 0x5d, 0x5d, 0x2c, 0x20, // [[texture(3)]], 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x3c, // texture2d_array<
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // float> tex_ball_
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, // playfield [[text
	0x75, 0x72, 0x65, 0x28, 0x34, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ure(4)]], sample
	0x72, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // r tex_ball_color
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // Sampler [[sample
	0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, // r(0)]], sampler 
	0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x53, // tex_diffuse_envS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ampler [[sampler
	0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, // (2)]], sampler t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x53, 0x61, 0x6d, // ex_ball_decalSam
	0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x33, // pler [[sampler(3
	0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, 0x65, 0x78, // )]], sampler tex
	0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, // _ball_playfieldS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ampler [[sampler
	0x28, 0x34, 0x29, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, // (4)]]).{.    xla
	0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, // tMtlMain_out out
	0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  = {};.    float
	0x34, 0x20, 0x5f, 0x31, 0x38, 0x36, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, // 4 _1860;.    do.
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //     {.        fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x30, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, // oat3 _1005 = fas
	0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x2d, 0x69, 0x6e, // t::normalize(-in
	0x2e, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x29, 0x3b, 0x0a, 0x20, 0x20, // .v_worldPos);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, //       float3 _10
	0x30, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // 07 = fast::norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // lize(in.v_normal
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // );.        float
	0x33, 0x20, 0x5f, 0x31, 0x30, 0x31, 0x30, 0x20, 0x3d, 0x20, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, // 3 _1010 = reflec
	0x74, 0x28, 0x5f, 0x31, 0x30, 0x30, 0x35, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x30, 0x37, 0x29, 0x3b, // t(_1005, _1007);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // .        float _
	0x31, 0x30, 0x31, 0x33, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x30, 0x30, 0x35, // 1013 = dot(_1005
	0x2c, 0x20, 0x5f, 0x31, 0x30, 0x31, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // , _1010);.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x30, 0x32, 0x38, 0x20, 0x3d, //   float4 _1028 =
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x2d, 0x5f, 0x31, 0x30, 0x31, 0x30, 0x2c, 0x20, //  float4(-_1010, 
	0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, // 0.0) * _mtl_u.ma
	0x74, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // tView;.        f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x35, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x30, // loat _1259 = _10
	0x32, 0x38, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // 28.y;.        fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x36, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x30, 0x32, // oat _1260 = _102
	0x38, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // 8.x;.        flo
	0x61, 0x74, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // at _1831;.      
	0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, //   do.        {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x20, 0x5f, 0x31, 0x32, 0x37, 0x35, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x31, 0x32, //  _1275 = abs(_12
	0x35, 0x39, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 59);.           
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x36, 0x20, 0x3d, 0x20, 0x61, //  float _1276 = a
	0x62, 0x73, 0x28, 0x5f, 0x31, 0x32, 0x36, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // bs(_1260);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x32, 0x37, //        if ((_127
	0x36, 0x20, 0x3c, 0x3d, 0x20, 0x36, 0x2e, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, // 6 <= 6.103515625
	0x65, 0x2d, 0x30, 0x35, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x32, 0x37, 0x35, 0x20, // e-05) && (_1275 
	0x3c, 0x3d, 0x20, 0x36, 0x2e, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x65, 0x2d, // <= 6.103515625e-
	0x30, 0x35, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 05)).           
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  {.             
	0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x31, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, //    _1831 = 0.0;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // break;.         
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    }.           
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x39, 0x30, 0x20, 0x3d, 0x20, 0x28, //  float _1290 = (
	0x5f, 0x31, 0x32, 0x37, 0x36, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x35, 0x29, 0x20, 0x2f, // _1276 - _1275) /
	0x20, 0x28, 0x5f, 0x31, 0x32, 0x37, 0x36, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x35, 0x29, //  (_1276 + _1275)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // ;.            fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x30, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, // oat _1304 = fma(
	0x66, 0x6d, 0x61, 0x28, 0x30, 0x2e, 0x30, 0x33, 0x33, 0x37, 0x31, 0x39, 0x38, 0x33, 0x37, 0x36, // fma(0.0337198376
	0x36, 0x35, 0x35, 0x35, 0x37, 0x38, 0x36, 0x31, 0x33, 0x32, 0x38, 0x31, 0x32, 0x35, 0x20, 0x2a, // 65557861328125 *
	0x20, 0x5f, 0x31, 0x32, 0x39, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x39, 0x30, 0x2c, 0x20, 0x2d, //  _1290, _1290, -
	0x30, 0x2e, 0x31, 0x35, 0x37, 0x31, 0x33, 0x34, 0x34, 0x37, 0x33, 0x33, 0x32, 0x33, 0x38, 0x32, // 0.15713447332382
	0x32, 0x30, 0x32, 0x31, 0x34, 0x38, 0x34, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x28, 0x5f, 0x31, // 2021484375), (_1
	0x32, 0x36, 0x30, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x2d, 0x5f, // 260 < 0.0) ? (-_
	0x31, 0x32, 0x39, 0x30, 0x29, 0x20, 0x3a, 0x20, 0x5f, 0x31, 0x32, 0x39, 0x30, 0x2c, 0x20, 0x28, // 1290) : _1290, (
	0x5f, 0x31, 0x32, 0x36, 0x30, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x30, // _1260 < 0.0) ? 0
	0x2e, 0x33, 0x37, 0x35, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x31, 0x32, 0x35, 0x29, 0x3b, 0x0a, 0x20, // .375 : 0.125);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x31, //            _1831
	0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x32, 0x35, 0x39, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, //  = (_1259 < 0.0)
	0x20, 0x3f, 0x20, 0x28, 0x2d, 0x5f, 0x31, 0x33, 0x30, 0x34, 0x29, 0x20, 0x3a, 0x20, 0x5f, 0x31, //  ? (-_1304) : _1
	0x33, 0x30, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 304;.           
	0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  break;.        
	0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, // } while(false);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, //         float _1
	0x32, 0x36, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x30, 0x32, 0x38, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, // 263 = _1028.z;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x38, //        float _18
	0x33, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, // 32;.        do. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x31, 0x39, //      float _1319
	0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x31, 0x32, 0x36, 0x33, 0x29, 0x3b, 0x0a, 0x20, //  = abs(_1263);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, //            if ((
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x33, 0x31, 0x39, 0x29, 0x20, 0x3c, 0x3d, 0x20, // 1.0 - _1319) <= 
	0x36, 0x2e, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x65, 0x2d, 0x30, 0x35, 0x29, // 6.103515625e-05)
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, // .            {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //                _
	0x31, 0x38, 0x33, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x32, 0x36, 0x33, 0x20, 0x3e, 0x3d, // 1832 = (_1263 >=
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x30, 0x20, 0x3a, 0x20, 0x31, 0x2e, //  0.0) ? 0.0 : 1.
	0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0;.             
	0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    break;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x32, 0x39, 0x20, //     float _1329 
	0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x34, 0x39, 0x36, 0x34, 0x37, 0x34, // = fma(-0.0496474
	0x32, 0x38, 0x30, 0x39, 0x35, 0x33, 0x34, 0x30, 0x37, 0x32, 0x38, 0x37, 0x35, 0x39, 0x37, 0x36, // 2809534072875976
	0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x5f, 0x31, 0x33, 0x31, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x34, // 5625, _1319, 0.4
	0x39, 0x38, 0x30, 0x34, 0x39, 0x39, 0x31, 0x34, 0x38, 0x33, 0x36, 0x38, 0x38, 0x33, 0x35, 0x34, // 9804991483688354
	0x34, 0x39, 0x32, 0x31, 0x38, 0x37, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 4921875);.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x33, //       float _133
	0x32, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, // 2 = sqrt(1.0 - _
	0x31, 0x33, 0x31, 0x39, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1319);.         
	0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x32, 0x36, //    _1832 = (_126
	0x33, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x5f, 0x31, 0x33, // 3 >= 0.0) ? (_13
	0x32, 0x39, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x33, 0x33, 0x32, 0x29, 0x20, 0x3a, 0x20, 0x66, 0x6d, // 29 * _1332) : fm
	0x61, 0x28, 0x2d, 0x5f, 0x31, 0x33, 0x32, 0x39, 0x2c, 0x20, 0x5f, 0x31, 0x33, 0x33, 0x32, 0x2c, // a(-_1329, _1332,
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  1.0);.         
	0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    break;.      
	0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, //   } while(false)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // ;.        float4
	0x20, 0x5f, 0x31, 0x33, 0x35, 0x39, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, //  _1359 = tex_bal
	0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, // l_decal.sample(t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x53, 0x61, 0x6d, // ex_ball_decalSam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // pler, in.v_texco
	0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // ord0);.        f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x34, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x31, // loat3 _1045 = _1
	0x33, 0x35, 0x39, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x33, 0x35, 0x39, 0x2e, // 359.xyz * _1359.
	0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // w;.        float
	0x33, 0x20, 0x5f, 0x31, 0x30, 0x34, 0x38, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, // 3 _1048 = tex_ba
	0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // ll_color.sample(
	0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, // tex_ball_colorSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, // mpler, float2(0.
	0x35, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x31, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x32, // 5 + _1831, _1832
	0x29, 0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x28, 0x5f, 0x31, 0x30, 0x31, 0x33, 0x20, // ), level((_1013 
	0x3e, 0x20, 0x30, 0x2e, 0x36, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, 0x31, // > 0.600000023841
	0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x20, 0x3f, 0x20, 0x66, // 85791015625) ? f
	0x6d, 0x61, 0x28, 0x5f, 0x31, 0x30, 0x31, 0x33, 0x2c, 0x20, 0x31, 0x35, 0x2e, 0x30, 0x2c, 0x20, // ma(_1013, 15.0, 
	0x2d, 0x39, 0x2e, 0x30, 0x29, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, // -9.0) : 0.0)).xy
	0x7a, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x30, 0x34, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // z + _1045;.     
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, //    if (_mtl_u.w_
	0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, // h_disableLightin
	0x67, 0x2e, 0x7a, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // g.z != 0.0).    
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x5f, 0x31, 0x38, 0x36, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, //   _1860 = float4
	0x28, 0x5f, 0x31, 0x30, 0x34, 0x38, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, // (_1048, _mtl_u.c
	0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, // Base_Alpha.w);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, //            break
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, // ;.        }.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x34, //     float3 _1064
	0x20, 0x3d, 0x20, 0x5f, 0x31, 0x30, 0x34, 0x38, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, //  = _1048 * _mtl_
	0x75, 0x2e, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, // u.fenvEmissionSc
	0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, // ale_TexWidth.x;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x31, 0x30, 0x36, 0x38, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, // 1068 = (_mtl_u.m
	0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, // atWorldView * fl
	0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, // oat4(0.0, 0.0, 1
	0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, // .0, 0.0)).xyz;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x30, //        float _10
	0x37, 0x31, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x30, 0x36, 0x38, 0x2c, 0x20, // 71 = dot(_1068, 
	0x5f, 0x31, 0x30, 0x31, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _1010);.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x30, 0x38, 0x32, 0x20, 0x3d, 0x20, 0x64, 0x6f, // float _1082 = do
	0x74, 0x28, 0x5f, 0x31, 0x30, 0x36, 0x38, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x77, 0x6f, // t(_1068, in.v_wo
	0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x20, 0x2d, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // rldPos - (_mtl_u
	0x2e, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, // .matWorldView * 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, // float4(0.0, 0.0,
	0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, //  0.0, 1.0)).xyz)
	0x20, 0x2f, 0x20, 0x5f, 0x31, 0x30, 0x37, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  / _1071;.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x30, 0x39, 0x37, 0x20, 0x3d, //   float4 _1097 =
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x5b, //  _mtl_u.matProj[
	0x75, 0x69, 0x6e, 0x74, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x5d, 0x20, // uint(in.v_eye)] 
	0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x77, 0x6f, // * float4(in.v_wo
	0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x20, 0x2d, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x31, 0x30, 0x20, // rldPos - (_1010 
	0x2a, 0x20, 0x5f, 0x31, 0x30, 0x38, 0x32, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // * _1082), 1.0);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, //         float2 _
	0x31, 0x31, 0x30, 0x38, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, // 1108 = float2(0.
	0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x31, 0x30, // 5) + (float2(_10
	0x39, 0x37, 0x2e, 0x78, 0x2c, 0x20, 0x2d, 0x5f, 0x31, 0x30, 0x39, 0x37, 0x2e, 0x79, 0x29, 0x20, // 97.x, -_1097.y) 
	0x2a, 0x20, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2f, 0x20, 0x5f, 0x31, 0x30, 0x39, 0x37, 0x2e, 0x77, // * (0.5 / _1097.w
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ));.        floa
	0x74, 0x33, 0x20, 0x5f, 0x31, 0x31, 0x32, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // t3 _1122 = float
	0x33, 0x28, 0x28, 0x5f, 0x31, 0x31, 0x30, 0x38, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 3((_1108 + float
	0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, // 2(_mtl_u.w_h_dis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, // ableLighting.x, 
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x30, 0x38, 0x20, // 0.0)).x, (_1108 
	0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x31, 0x38, 0x33, 0x30, 0x2c, 0x20, // + float2(_1830, 
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x65, 0x79, // 0.0)).y, in.v_ey
	0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // e);.        floa
	0x74, 0x34, 0x20, 0x5f, 0x31, 0x33, 0x36, 0x38, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, // t4 _1368 = tex_b
	0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x73, 0x61, // all_playfield.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, // mple(tex_ball_pl
	0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // ayfieldSampler, 
	0x5f, 0x31, 0x31, 0x32, 0x32, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x72, // _1122.xy, uint(r
	0x69, 0x6e, 0x74, 0x28, 0x5f, 0x31, 0x31, 0x32, 0x32, 0x2e, 0x7a, 0x29, 0x29, 0x29, 0x3b, 0x0a, // int(_1122.z)));.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x31, 0x31, 0x33, 0x39, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, // 1139 = float3((_
	0x31, 0x31, 0x30, 0x38, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, // 1108 - float2(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // tl_u.w_h_disable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, // Lighting.x, 0.0)
	0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x30, 0x38, 0x20, 0x2d, 0x20, 0x66, 0x6c, // ).x, (_1108 - fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x31, 0x38, 0x33, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, // oat2(_1830, 0.0)
	0x29, 0x2e, 0x79, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x3b, 0x0a, // ).y, in.v_eye);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, //         float4 _
	0x31, 0x33, 0x37, 0x37, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // 1377 = tex_ball_
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // playfield.sample
	0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, // (tex_ball_playfi
	0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x31, 0x33, // eldSampler, _113
	0x39, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x72, 0x69, 0x6e, 0x74, 0x28, // 9.xy, uint(rint(
	0x5f, 0x31, 0x31, 0x33, 0x39, 0x2e, 0x7a, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // _1139.z)));.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x31, 0x35, 0x37, //     float3 _1157
	0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, 0x31, 0x30, 0x38, //  = float3((_1108
	0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x5f, //  + float2(0.0, _
	0x31, 0x38, 0x33, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x30, 0x38, // 1830)).x, (_1108
	0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x5f, //  + float2(0.0, _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, // mtl_u.w_h_disabl
	0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x79, 0x2c, // eLighting.y)).y,
	0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  in.v_eye);.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x33, 0x38, 0x36, //     float4 _1386
	0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, //  = tex_ball_play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, // field.sample(tex
	0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, // _ball_playfieldS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x31, 0x35, 0x37, 0x2e, 0x78, 0x79, // ampler, _1157.xy
	0x2c, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x72, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x31, 0x31, 0x35, // , uint(rint(_115
	0x37, 0x2e, 0x7a, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 7.z)));.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x31, 0x37, 0x35, 0x20, 0x3d, 0x20, 0x66, // float3 _1175 = f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, 0x31, 0x30, 0x38, 0x20, 0x2d, 0x20, 0x66, // loat3((_1108 - f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x30, // loat2(0.0, _1830
	0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x30, 0x38, 0x20, 0x2d, 0x20, 0x66, // )).x, (_1108 - f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // loat2(0.0, _mtl_
	0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, // u.w_h_disableLig
	0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x69, 0x6e, 0x2e, // hting.y)).y, in.
	0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // v_eye);.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x33, 0x39, 0x35, 0x20, 0x3d, 0x20, 0x74, // float4 _1395 = t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // ex_ball_playfiel
	0x64, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, // d.sample(tex_bal
	0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, // l_playfieldSampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x31, 0x37, 0x35, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x75, 0x69, // er, _1175.xy, ui
	0x6e, 0x74, 0x28, 0x72, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x31, 0x31, 0x37, 0x35, 0x2e, 0x7a, 0x29, // nt(rint(_1175.z)
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ));.        floa
	0x74, 0x33, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // t3 _1833;.      
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x21, 0x28, 0x28, 0x28, 0x28, 0x5f, 0x31, 0x31, 0x30, //   if ((!((((_110
	0x38, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, // 8.x < 0.0) || (_
	0x31, 0x31, 0x30, 0x38, 0x2e, 0x78, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, // 1108.x > 1.0)) |
	0x7c, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x30, 0x38, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, // | (_1108.y < 0.0
	0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x30, 0x38, 0x2e, 0x79, 0x20, 0x3e, // )) || (_1108.y >
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x21, 0x28, 0x5f, 0x31, //  1.0))) && (!(_1
	0x30, 0x38, 0x32, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, // 082 <= 0.0))).  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x33, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, //     _1833 = mix(
	0x5f, 0x31, 0x30, 0x36, 0x34, 0x2c, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x31, 0x33, 0x36, 0x38, 0x2e, // _1064, (((_1368.
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x33, 0x37, 0x37, 0x2e, 0x78, 0x79, 0x7a, 0x29, // xyz + _1377.xyz)
	0x20, 0x2b, 0x20, 0x5f, 0x31, 0x33, 0x38, 0x36, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2b, 0x20, //  + _1386.xyz) + 
	0x5f, 0x31, 0x33, 0x39, 0x35, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, // _1395.xyz) * 0.2
	0x35, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, // 5, float3(smooth
	0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x35, 0x30, 0x30, // step(0.0, 0.1500
	0x30, 0x30, 0x30, 0x30, 0x35, 0x39, 0x36, 0x30, 0x34, 0x36, 0x34, 0x34, 0x37, 0x37, 0x35, 0x33, // 0000596046447753
	0x39, 0x30, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x37, 0x31, 0x29, 0x20, 0x2a, 0x20, // 90625, _1071) * 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, // _mtl_u.invTableR
	0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x7a, 0x29, // es_reflection.z)
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, // );.        }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      else.      
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   {.            
	0x5f, 0x31, 0x38, 0x33, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x34, 0x3b, 0x0a, 0x20, // _1833 = _1064;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        }.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x32, 0x32, 0x30, 0x20, 0x3d, 0x20, //  float3 _1220 = 
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, // (_mtl_u.cBase_Al
	0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x37, 0x35, 0x30, // pha.xyz * 0.0750
	0x30, 0x30, 0x30, 0x30, 0x32, 0x39, 0x38, 0x30, 0x32, 0x33, 0x32, 0x32, 0x33, 0x38, 0x37, 0x36, // 0000298023223876
	0x39, 0x35, 0x33, 0x31, 0x32, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x30, 0x34, 0x35, 0x3b, // 953125) * _1045;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // .        float3 
	0x5f, 0x31, 0x32, 0x32, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, // _1223 = fast::ma
	0x78, 0x28, 0x5f, 0x31, 0x32, 0x32, 0x30, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x66, // x(_1220 * 2.0, f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, // loat3(0.10000000
	0x31, 0x34, 0x39, 0x30, 0x31, 0x31, 0x36, 0x31, 0x31, 0x39, 0x33, 0x38, 0x34, 0x37, 0x36, 0x35, // 1490116119384765
	0x36, 0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // 625));.        f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x32, 0x32, 0x38, 0x20, 0x3d, 0x20, 0x66, 0x61, // loat3 _1228 = fa
	0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x38, 0x33, 0x33, 0x2c, 0x20, 0x66, // st::min(_1833, f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x35, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, // loat3(15.0)) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, // mtl_u.cBase_Alph
	0x61, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // a.xyz;.        f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x32, 0x33, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, // loat3 _1230 = fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x30, 0x34, // oat3(1.0) - _104
	0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 5;.        float
	0x33, 0x20, 0x5f, 0x31, 0x32, 0x33, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x32, 0x38, 0x20, // 3 _1232 = _1228 
	0x2a, 0x20, 0x5f, 0x31, 0x32, 0x33, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // * _1230;.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, 0x31, 0x32, 0x20, 0x3d, 0x20, 0x66, //  float _1412 = f
	0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x32, 0x32, 0x30, 0x2e, 0x78, // ast::max(_1220.x
	0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x32, 0x32, // , fast::max(_122
	0x30, 0x2e, 0x79, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x32, 0x30, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, // 0.y, _1220.z));.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, //         float _1
	0x34, 0x32, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, // 420 = fast::max(
	0x5f, 0x31, 0x32, 0x32, 0x33, 0x2e, 0x78, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, // _1223.x, fast::m
	0x61, 0x78, 0x28, 0x5f, 0x31, 0x32, 0x32, 0x33, 0x2e, 0x79, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x32, // ax(_1223.y, _122
	0x33, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // 3.z));.        f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, 0x32, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x34, // loat _1428 = _14
	0x31, 0x32, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x34, 0x32, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 12 + _1420;.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x36, //     float3 _1836
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // ;.        float3
	0x20, 0x5f, 0x31, 0x38, 0x34, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1847;.        
	0x69, 0x66, 0x20, 0x28, 0x5f, 0x31, 0x34, 0x32, 0x38, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, // if (_1428 > 1.0)
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .        {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, //        float _14
	0x33, 0x33, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x5f, 0x31, 0x34, 0x32, 0x38, // 33 = 1.0 / _1428
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, // ;.            _1
	0x38, 0x34, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x32, 0x33, 0x20, 0x2a, 0x20, 0x5f, 0x31, // 847 = _1223 * _1
	0x34, 0x33, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 433;.           
	0x20, 0x5f, 0x31, 0x38, 0x33, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x32, 0x30, 0x20, 0x2a, //  _1836 = _1220 *
	0x20, 0x5f, 0x31, 0x34, 0x33, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1433;.        
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, // }.        else. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, //      _1847 = _12
	0x32, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 23;.            
	0x5f, 0x31, 0x38, 0x33, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x32, 0x30, 0x3b, 0x0a, 0x20, // _1836 = _1220;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        }.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x32, 0x3b, 0x0a, 0x20, //  float3 _1842;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x74, 0x72, 0x75, 0x65, //        if ((true
	0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x34, 0x31, 0x32, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, //  && (_1412 > 0.0
	0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x34, 0x32, 0x30, 0x20, 0x3e, 0x20, 0x30, // )) || (_1420 > 0
	0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, // .0)).        {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x33, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 3 _1843;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, //      _1843 = flo
	0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // at3(0.0);.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x34, //       float3 _14
	0x36, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 63;.            
	0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x34, 0x20, 0x3d, // for (int _1834 =
	0x20, 0x30, 0x3b, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x34, 0x20, 0x3c, 0x20, 0x31, 0x30, 0x3b, 0x20, //  0; _1834 < 10; 
	0x5f, 0x31, 0x38, 0x34, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x34, 0x36, 0x33, 0x2c, 0x20, 0x5f, // _1843 = _1463, _
	0x31, 0x38, 0x33, 0x34, 0x2b, 0x2b, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1834++).        
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x38, //       float3 _18
	0x35, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 51;.            
	0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     do.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, //              flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x35, 0x32, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x6d, 0x74, // at3 _1527 = (_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, // l_u.matView * fl
	0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x62, 0x61, 0x6c, 0x6c, // oat4(_mtl_u.ball
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x5f, 0x31, 0x38, 0x33, 0x34, 0x5d, 0x2e, // LightPos[_1834].
	0x78, 0x79, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, // xyz, 1.0)).xyz -
	0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x3b, 0x0a, //  in.v_worldPos;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x35, 0x32, 0x39, //     float3 _1529
	0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, //  = fast::normali
	0x7a, 0x65, 0x28, 0x5f, 0x31, 0x35, 0x32, 0x37, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // ze(_1527);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x33, 0x31, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // loat _1531 = dot
	0x28, 0x5f, 0x31, 0x30, 0x30, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x35, 0x32, 0x39, 0x29, 0x3b, 0x0a, // (_1007, _1529);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x38, //     float3 _1848
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x74, 0x72, 0x75, 0x65, 0x20, 0x26, //       if (true &
	0x26, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x35, 0x33, 0x31, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // & ((_1531 + _mtl
	0x5f, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, // _u.Roughness_Wra
	0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, // pL_Edge_Thicknes
	0x73, 0x2e, 0x79, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, // s.y) > 0.0)).   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  {.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x20, 0x5f, 0x31, 0x35, 0x34, 0x36, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x5f, //  _1546 = 1.0 + _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, // mtl_u.Roughness_
	0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, // WrapL_Edge_Thick
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ness.y;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x5f, 0x31, 0x38, 0x34, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x36, 0x20, 0x2a, 0x20, // _1848 = _1836 * 
	0x28, 0x28, 0x5f, 0x31, 0x35, 0x33, 0x31, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // ((_1531 + _mtl_u
	0x2e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, // .Roughness_WrapL
	0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, // _Edge_Thickness.
	0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x34, 0x36, 0x20, 0x2a, 0x20, 0x5f, 0x31, // y) / (_1546 * _1
	0x35, 0x34, 0x36, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 546));.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, //            }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  else.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //           {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x38, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, //     _1848 = floa
	0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // t3(0.0);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, //              }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x39, 0x3b, //    float3 _1849;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x33, 0x31, 0x20, 0x3e, //      if (_1531 >
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  0.0).          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //           {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x35, 0x35, 0x36, //     float3 _1556
	0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, //  = fast::normali
	0x7a, 0x65, 0x28, 0x5f, 0x31, 0x35, 0x32, 0x39, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x30, 0x30, 0x35, // ze(_1529 + _1005
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x20, 0x5f, 0x31, 0x35, 0x35, 0x38, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x30, //  _1558 = dot(_10
	0x30, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x35, 0x35, 0x36, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 07, _1556);.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x36, 0x31, 0x20, //     float _1561 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x35, 0x32, 0x39, 0x2c, 0x20, 0x5f, 0x31, 0x35, // = dot(_1529, _15
	0x35, 0x36, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 56);.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, //              flo
	0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x36, 0x33, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, // at _1563 = dot(_
	0x31, 0x30, 0x30, 0x35, 0x2c, 0x20, 0x5f, 0x31, 0x35, 0x35, 0x36, 0x29, 0x3b, 0x0a, 0x20, 0x20, // 1005, _1556);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x38, //       float3 _18
	0x35, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 50;.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, //             if (
	0x28, 0x28, 0x5f, 0x31, 0x35, 0x35, 0x38, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, // ((_1558 > 0.0) &
	0x26, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x36, 0x31, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // & (_1561 > 0.0))
	0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x36, 0x33, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, //  && (_1563 > 0.0
	0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // )).             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //            {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x35, 0x30, 0x20, 0x3d, //          _1850 =
	0x20, 0x5f, 0x31, 0x38, 0x34, 0x38, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x37, //  _1848 + ((_1847
	0x20, 0x2b, 0x20, 0x28, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, //  + ((float3(1.0)
	0x20, 0x2d, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x37, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, //  - _1847) * powr
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x35, 0x36, 0x31, 0x2c, 0x20, 0x35, 0x2e, // (1.0 - _1561, 5.
	0x30, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 0))) * (((_mtl_u
	0x2e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, // .Roughness_WrapL
	0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, // _Edge_Thickness.
	0x78, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x38, 0x2e, 0x30, 0x20, // x + 1.0) / (8.0 
	0x2a, 0x20, 0x5f, 0x31, 0x35, 0x36, 0x33, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, // * _1563)) * powr
	0x28, 0x5f, 0x31, 0x35, 0x35, 0x38, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x52, // (_1558, _mtl_u.R
	0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, // oughness_WrapL_E
	0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x29, // dge_Thickness.x)
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ));.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, //             }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //       else.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x5f, 0x31, 0x38, 0x35, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x38, 0x3b, 0x0a, //  _1850 = _1848;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x38, 0x35, 0x30, 0x3b, //   _1849 = _1850;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      }.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, //            else.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, //               _1
	0x38, 0x34, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 849 = _1848;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  }.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, //        float _15
	0x38, 0x39, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x35, 0x32, 0x37, 0x2c, 0x20, // 89 = dot(_1527, 
	0x5f, 0x31, 0x35, 0x32, 0x37, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _1527);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //             floa
	0x74, 0x20, 0x5f, 0x31, 0x36, 0x30, 0x36, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, // t _1606 = fast::
	0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x28, 0x5f, 0x31, // clamp(1.0 - ((_1
	0x35, 0x38, 0x39, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x39, 0x29, 0x20, 0x2f, 0x20, 0x28, // 589 * _1589) / (
	0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, // ((_mtl_u.cAmbien
	0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x20, 0x2a, // t_LightRange.w *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, //  _mtl_u.cAmbient
	0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x29, 0x20, 0x2a, // _LightRange.w) *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, //  _mtl_u.cAmbient
	0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x29, 0x20, 0x2a, // _LightRange.w) *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, //  _mtl_u.cAmbient
	0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x29, 0x29, 0x2c, // _LightRange.w)),
	0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  0.0, 1.0);.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x33, 0x30, 0x20, 0x3d, 0x20, 0x66, // float3 _1630 = f
	0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x37, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x36, // ma(_1847 + _1836
	0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, // , _mtl_u.cAmbien
	0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x78, 0x79, 0x7a, // t_LightRange.xyz
	0x2c, 0x20, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x39, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // , (_1849 * _mtl_
	0x75, 0x2e, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, // u.ballLightEmiss
	0x69, 0x6f, 0x6e, 0x5b, 0x5f, 0x31, 0x38, 0x33, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, // ion[_1834].xyz) 
	0x2a, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x36, 0x30, 0x36, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x36, 0x30, // * ((_1606 * _160
	0x36, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x38, 0x39, 0x20, 0x2b, 0x20, 0x31, 0x2e, // 6) / (_1589 + 1.
	0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0)));.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, //           if (_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, // tl_u.fDisableLig
	0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, // hting_top_below.
	0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // x != 0.0).      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, //               {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x35, 0x31, 0x20, 0x3d, 0x20, //         _1851 = 
	0x6d, 0x69, 0x78, 0x28, 0x5f, 0x31, 0x36, 0x33, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x36, // mix(_1630, _1836
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // , float3(_mtl_u.
	0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, // fDisableLighting
	0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, // _top_below.x));.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, //         break;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    }.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, //          else.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   {.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x35, //             _185
	0x31, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x33, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 1 = _1630;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    break;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, //               }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, //     break; // un
	0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, // reachable workar
	0x6f, 0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ound.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, //      } while(fal
	0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // se);.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x34, 0x36, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x38, //      _1463 = _18
	0x34, 0x33, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, 0x35, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 43 + _1851;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, //       _1842 = _1
	0x38, 0x34, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, // 843;.        }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, //        else.    
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //   _1842 = float3
	0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, // (0.0);.        }
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // .        float3 
	0x5f, 0x31, 0x38, 0x34, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, // _1844;.        i
	0x66, 0x20, 0x28, 0x74, 0x72, 0x75, 0x65, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x34, 0x31, // f (true && (_141
	0x32, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 2 > 0.0)).      
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   {.            
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x34, 0x38, 0x33, 0x20, 0x3d, 0x20, 0x66, // float3 _1483 = f
	0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, // ast::normalize((
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, // _mtl_u.matView *
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x30, 0x30, 0x37, 0x2c, 0x20, 0x30, //  float4(_1007, 0
	0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .0)).xyz);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, //        float _16
	0x37, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x34, 0x38, 0x33, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, // 79 = _1483.y;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //           float 
	0x5f, 0x31, 0x36, 0x38, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x34, 0x38, 0x33, 0x2e, 0x78, 0x3b, // _1680 = _1483.x;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // .            flo
	0x61, 0x74, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // at _1838;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       do.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, //        float _16
	0x39, 0x35, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x31, 0x36, 0x37, 0x39, 0x29, 0x3b, // 95 = abs(_1679);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x39, 0x36, 0x20, 0x3d, 0x20, 0x61, //  float _1696 = a
	0x62, 0x73, 0x28, 0x5f, 0x31, 0x36, 0x38, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // bs(_1680);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, //            if ((
	0x5f, 0x31, 0x36, 0x39, 0x36, 0x20, 0x3c, 0x3d, 0x20, 0x36, 0x2e, 0x31, 0x30, 0x33, 0x35, 0x31, // _1696 <= 6.10351
	0x35, 0x36, 0x32, 0x35, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, // 5625e-05) && (_1
	0x36, 0x39, 0x35, 0x20, 0x3c, 0x3d, 0x20, 0x36, 0x2e, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, // 695 <= 6.1035156
	0x32, 0x35, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 25e-05)).       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //                _
	0x31, 0x38, 0x33, 0x38, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 1838 = 0.0;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // break;.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        }.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, //          float _
	0x31, 0x37, 0x31, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x36, 0x39, 0x36, 0x20, 0x2d, 0x20, // 1710 = (_1696 - 
	0x5f, 0x31, 0x36, 0x39, 0x35, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x31, 0x36, 0x39, 0x36, 0x20, // _1695) / (_1696 
	0x2b, 0x20, 0x5f, 0x31, 0x36, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // + _1695);.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //           float 
	0x5f, 0x31, 0x37, 0x32, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x66, 0x6d, 0x61, 0x28, // _1724 = fma(fma(
	0x30, 0x2e, 0x30, 0x33, 0x33, 0x37, 0x31, 0x39, 0x38, 0x33, 0x37, 0x36, 0x36, 0x35, 0x35, 0x35, // 0.03371983766555
	0x37, 0x38, 0x36, 0x31, 0x33, 0x32, 0x38, 0x31, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x37, // 7861328125 * _17
	0x31, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x31, 0x30, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x31, 0x35, // 10, _1710, -0.15
	0x37, 0x31, 0x33, 0x34, 0x34, 0x37, 0x33, 0x33, 0x32, 0x33, 0x38, 0x32, 0x32, 0x30, 0x32, 0x31, // 7134473323822021
	0x34, 0x38, 0x34, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x36, 0x38, 0x30, 0x20, // 484375), (_1680 
	0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x2d, 0x5f, 0x31, 0x37, 0x31, 0x30, // < 0.0) ? (-_1710
	0x29, 0x20, 0x3a, 0x20, 0x5f, 0x31, 0x37, 0x31, 0x30, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x36, 0x38, // ) : _1710, (_168
	0x30, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x33, 0x37, 0x35, // 0 < 0.0) ? 0.375
	0x20, 0x3a, 0x20, 0x30, 0x2e, 0x31, 0x32, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //  : 0.125);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x38, //            _1838
	0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x36, 0x37, 0x39, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, //  = (_1679 < 0.0)
	0x20, 0x3f, 0x20, 0x28, 0x2d, 0x5f, 0x31, 0x37, 0x32, 0x34, 0x29, 0x20, 0x3a, 0x20, 0x5f, 0x31, //  ? (-_1724) : _1
	0x37, 0x32, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 724;.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //      break;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, //         } while(
	0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // false);.        
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x33, 0x20, //     float _1683 
	0x3d, 0x20, 0x5f, 0x31, 0x34, 0x38, 0x33, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // = _1483.z;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x38, //        float _18
	0x33, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 39;.            
	0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, // do.            {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x39, 0x20, 0x3d, 0x20, 0x61, //  float _1739 = a
	0x62, 0x73, 0x28, 0x5f, 0x31, 0x36, 0x38, 0x33, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // bs(_1683);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, //            if ((
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x39, 0x29, 0x20, 0x3c, 0x3d, 0x20, // 1.0 - _1739) <= 
	0x36, 0x2e, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x65, 0x2d, 0x30, 0x35, 0x29, // 6.103515625e-05)
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  {.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x39, 0x20, 0x3d, 0x20, 0x28, //        _1839 = (
	0x5f, 0x31, 0x36, 0x38, 0x33, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, // _1683 >= 0.0) ? 
	0x30, 0x2e, 0x30, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 0.0 : 1.0;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, //                b
	0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // reak;.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, //         float _1
	0x37, 0x34, 0x39, 0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x34, 0x39, // 749 = fma(-0.049
	0x36, 0x34, 0x37, 0x34, 0x32, 0x38, 0x30, 0x39, 0x35, 0x33, 0x34, 0x30, 0x37, 0x32, 0x38, 0x37, // 6474280953407287
	0x35, 0x39, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x39, 0x2c, // 59765625, _1739,
	0x20, 0x30, 0x2e, 0x34, 0x39, 0x38, 0x30, 0x34, 0x39, 0x39, 0x31, 0x34, 0x38, 0x33, 0x36, 0x38, //  0.4980499148368
	0x38, 0x33, 0x35, 0x34, 0x34, 0x39, 0x32, 0x31, 0x38, 0x37, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, // 83544921875);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x37, 0x35, 0x32, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, // oat _1752 = sqrt
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x39, 0x29, 0x3b, 0x0a, 0x20, // (1.0 - _1739);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //                _
	0x31, 0x38, 0x33, 0x39, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x36, 0x38, 0x33, 0x20, 0x3e, 0x3d, // 1839 = (_1683 >=
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x5f, 0x31, 0x37, 0x34, 0x39, 0x20, 0x2a, //  0.0) ? (_1749 *
	0x20, 0x5f, 0x31, 0x37, 0x35, 0x32, 0x29, 0x20, 0x3a, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x2d, 0x5f, //  _1752) : fma(-_
	0x31, 0x37, 0x34, 0x39, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x35, 0x32, 0x2c, 0x20, 0x31, 0x2e, 0x30, // 1749, _1752, 1.0
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    break;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, //       } while(fa
	0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // lse);.          
	0x20, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x32, 0x20, //   _1844 = _1842 
	0x2b, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x38, 0x33, 0x36, 0x20, 0x2a, 0x20, 0x74, 0x65, 0x78, 0x5f, // + ((_1836 * tex_
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x2e, 0x73, 0x61, 0x6d, 0x70, // diffuse_env.samp
	0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, // le(tex_diffuse_e
	0x6e, 0x76, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // nvSampler, float
	0x32, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x38, 0x2c, 0x20, 0x5f, // 2(0.5 + _1838, _
	0x31, 0x38, 0x33, 0x39, 0x29, 0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x30, 0x2e, 0x30, // 1839), level(0.0
	0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // )).xyz) * _mtl_u
	0x2e, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, // .fenvEmissionSca
	0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x29, 0x3b, 0x0a, // le_TexWidth.x);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, //   else.        {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, // .            _18
	0x34, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 44 = _1842;.    
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //     }.        fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // oat3 _1845;.    
	0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, //     if (fast::ma
	0x78, 0x28, 0x5f, 0x31, 0x32, 0x33, 0x32, 0x2e, 0x78, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, // x(_1232.x, fast:
	0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x32, 0x33, 0x32, 0x2e, 0x79, 0x2c, 0x20, 0x5f, 0x31, // :max(_1232.y, _1
	0x32, 0x33, 0x32, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, // 232.z)) > 0.0). 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, //      _1845 = fma
	0x28, 0x5f, 0x31, 0x32, 0x32, 0x38, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x33, 0x30, 0x2c, 0x20, 0x5f, // (_1228, _1230, _
	0x31, 0x38, 0x34, 0x34, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, // 1844);.        }
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, // .        else.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x38, 0x34, //     _1845 = _184
	0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, // 4;.        }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x36, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, //      _1860 = flo
	0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x35, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // at4(_1845, _mtl_
	0x75, 0x2e, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, 0x29, // u.cBase_Alpha.w)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, // ;.        break;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, // .    } while(fal
	0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, // se);.    out.bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, // x_FragData0 = _1
	0x38, 0x36, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 860;.    return 
	0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, 0x50, 0x03,                         // out;.}....P.
};
static const uint8_t fs_ball_equirectangular_nodecal_st_essl[14463] =
{
	0x46, 0x53, 0x48, 0x0b, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6c, 0x38, // FSH..N........l8
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // s.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, // arying in.precis
	0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3b, // ion highp float;
	0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // .precision highp
	0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, //  int;.precision 
	0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, // highp sampler2DA
	0x72, 0x72, 0x61, 0x79, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, // rray;.#define sh
	0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adow2D(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //  _coord) texture
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // (_sampler, _coor
	0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, // d).#define shado
	0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // w2DProj(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // eProj(_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, // _coord).#extensi
	0x6f, 0x6e, 0x20, 0x47, 0x4c, 0x5f, 0x45, 0x58, 0x54, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // on GL_EXT_textur
	0x65, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x20, 0x3a, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, // e_array : enable
	0x0a, 0x6f, 0x75, 0x74, 0x20, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x70, 0x20, 0x76, 0x65, 0x63, // .out mediump vec
	0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // 4 bgfx_FragColor
	0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ;.varying float 
	0x76, 0x5f, 0x65, 0x79, 0x65, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, // v_eye;.varying v
	0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x76, 0x61, // ec3 v_normal;.va
	0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, // rying vec2 v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, // coord0;.varying 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x3b, // vec3 v_worldPos;
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, // .vec3 instMul(ve
	0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, // c3 _vec, mat3 _m
	0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, // tx) { return ( (
	0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, // _vec) * (_mtx) )
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, // ; }.vec3 instMul
	0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // (mat3 _mtx, vec3
	0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _vec) { return 
	0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, // ( (_mtx) * (_vec
	0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, // ) ); }.vec4 inst
	0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, // Mul(vec4 _vec, m
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // at4 _mtx) { retu
	0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, // rn ( (_vec) * (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, // mtx) ); }.vec4 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, // nstMul(mat4 _mtx
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, // , vec4 _vec) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, // eturn ( (_mtx) *
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, //  (_vec) ); }.flo
	0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, // at rcp(float _a)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, //  { return 1.0/_a
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, // ; }.vec2 rcp(vec
	0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // 2 _a) { return v
	0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // ec2(1.0)/_a; }.v
	0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, // ec3 rcp(vec3 _a)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, //  { return vec3(1
	0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, // .0)/_a; }.vec4 r
	0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // cp(vec4 _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, // turn vec4(1.0)/_
	0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, // a; }.vec2 vec2_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // plat(float _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, //  return vec2(_x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, //  _x); }.vec3 vec
	0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, // 3_splat(float _x
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // ) { return vec3(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // _x, _x, _x); }.v
	0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, // ec4 vec4_splat(f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // loat _x) { retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // n vec4(_x, _x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, // x, _x); }.uvec2 
	0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec2_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, //  _x) { return uv
	0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, // ec2(_x, _x); }.u
	0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // vec3 uvec3_splat
	0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // (uint _x) { retu
	0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // rn uvec3(_x, _x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, //  _x); }.uvec4 uv
	0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, // ec4_splat(uint _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, // x) { return uvec
	0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // 4(_x, _x, _x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, // ); }.mat4 mtxFro
	0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, // mRows(vec4 _0, v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, // ec4 _1, vec4 _2,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  vec4 _3).{.retu
	0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, // rn transpose(mat
	0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, // 4(_0, _1, _2, _3
	0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, // ) );.}.mat4 mtxF
	0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, // romCols(vec4 _0,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, //  vec4 _1, vec4 _
	0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 2, vec4 _3).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, // turn mat4(_0, _1
	0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, // , _2, _3);.}.mat
	0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, // 3 mtxFromRows(ve
	0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, // c3 _0, vec3 _1, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // vec3 _2).{.retur
	0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, // n transpose(mat3
	0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, // (_0, _1, _2) );.
	0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, // }.mat3 mtxFromCo
	0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // ls(vec3 _0, vec3
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, //  _1, vec3 _2).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, // return mat3(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // _1, _2);.}.unifo
	0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, // rm vec4 u_viewRe
	0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // ct;.uniform vec4
	0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, //  u_viewTexel;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // iform mat4 u_vie
	0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // w;.uniform mat4 
	0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // u_invView;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, // rm mat4 u_proj;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, // uniform mat4 u_i
	0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // nvProj;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, // mat4 u_viewProj;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // invViewProj;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, // form mat4 u_mode
	0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // l[32];.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, // at4 u_modelView;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, // modelViewProj;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, // niform vec4 u_al
	0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // phaRef4;.float s
	0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, // qr(const float v
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, // ).{.return v*v;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // }.vec2 sqr(const
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  vec2 v).{.retur
	0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x71, // n v*v;.}.vec3 sq
	0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, // r(const vec3 v).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, // {.return v*v;.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x63, 0x6f, 0x6e, 0x73, // vec3 mul_w1(cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // t vec3 v, const 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // mat4 m).{.return
	0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, //  v.x*m[0].xyz + 
	0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, // (v.y*m[1].xyz + 
	0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, // (v.z*m[2].xyz + 
	0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // m[3].xyz));.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, // oat acos_approx_
	0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // divPI(const floa
	0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // t v).{.const flo
	0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, // at x = abs(v);.i
	0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, // f(1. - x <= 0.00
	0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, // 006103515625).re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // turn (v >= 0.) ?
	0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  0. : 1.;.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, // float res = ((-0
	0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, // .155972/3.141592
	0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, // 6535897932384626
	0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, // 433832795) * x +
	0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, //  (1.56467/3.1415
	0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, // 9265358979323846
	0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, // 26433832795) ) *
	0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, //  sqrt(1. - x);.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, // eturn (v >= 0.) 
	0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, // ? res : 1. - res
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, // ;.}.float atan2_
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x63, 0x6f, // approx_div2PI(co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, // nst float y, con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, // st float x).{.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, // nst float abs_y 
	0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // = abs(y);.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, // float abs_x = ab
	0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, // s(x);.if(abs_x <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, // = 0.000061035156
	0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, // 25 && abs_y <= 0
	0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, // .00006103515625)
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // .return 0.;.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, // t float r = (abs
	0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, // _x - abs_y) / (a
	0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x63, // bs_x + abs_y);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, // onst float angle
	0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, //  = ((x < 0.) ? (
	0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, // 3./8.) : (1./8.)
	0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, // ).+ (0.211868 /(
	0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, // 2.*3.14159265358
	0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, // 9793238462643383
	0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, // 2795) * r * r - 
	0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, // 0.987305 /(2.*3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, // ) * ((x < 0.) ? 
	0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // -r : r);.return 
	0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, // (y < 0.) ? -angl
	0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // e : angle;.}.flo
	0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, // at asin_approx_d
	0x69, 0x76, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ivPI(const float
	0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, //  v).{.const floa
	0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, // t x = abs(v);.if
	0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, // (1. - x <= 0.000
	0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, // 06103515625).ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, // urn (v >= 0.) ? 
	0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // 0.5 : -0.5;.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, // t float res = ((
	0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, // -0.155972/3.1415
	0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, // 9265358979323846
	0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, // 26433832795) * x
	0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, //  + (1.56467/3.14
	0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, // 1592653589793238
	0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, // 4626433832795) )
	0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, //  * sqrt(1. - x);
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, // .return (v >= 0.
	0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, // ) ? 0.5 - res : 
	0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // -0.5 + res;.}.ve
	0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, // c2 ray_to_equire
	0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x63, 0x6f, 0x6e, // ctangular_uv(con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // st vec3 ray).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, // eturn vec2(.0.5 
	0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, // + atan2_approx_d
	0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, // iv2PI(ray.y, ray
	0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, // .x),.acos_approx
	0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, // _divPI(ray.z));.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, // }.float InvsRGB(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // const float colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, // r).{.if (color <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // = 0.04045).retur
	0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, // n color * (1.0/1
	0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, // 2.92);.else.retu
	0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, // rn pow(color * (
	0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, // 1.0/1.055) + (0.
	0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, // 055/1.055), 2.4)
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, // ;.}.float InvRec
	0x37, 0x30, 0x39, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 709(const float 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, // color).{.if (col
	0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, // or <= 0.081).ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, // urn color * (1.0
	0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, // /4.5);.else.retu
	0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, // rn pow(color * (
	0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, // 1.0/1.099) + (0.
	0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, // 099/1.099), 1.0/
	0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, // 0.45);.}.float I
	0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // nvGamma(const fl
	0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // oat color).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // urn InvsRGB(colo
	0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, // r);.}.vec3 InvGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // mma(const vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // olor).{.return v
	0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, // ec3(InvGamma(col
	0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, // or.x),InvGamma(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, // olor.y),InvGamma
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // (color.z));.}.ve
	0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, // c3 InvToneMap(co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // nst vec3 color).
	0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, // {.const float in
	0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, // v_2bh = 0.5/0.25
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, // ;.const float bh
	0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, //  = 4.0*0.25 - 2.
	0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // 0;.return (color
	0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, //  - 1.0 + sqrt(co
	0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, // lor*(color + bh)
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, //  + 1.0))*inv_2bh
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, // ;.}.float sRGB(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, // onst float f).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, // float s;.if (f <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, // = 0.0031308).s =
	0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, //  12.92 * f;.else
	0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, // .s = 1.055 * pow
	0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, // (f, 1.0/2.4) - 0
	0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, // .055;.return s;.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x63, // }.float Rec709(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, // onst float f).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, // float s;.if (f <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, // = 0.018).s = 4.5
	0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, //  * f;.else.s = 1
	0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, // .099 * pow(f, 0.
	0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, // 45) - 0.099;.ret
	0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, // urn s;.}.float F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // BGamma(const flo
	0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // at color).{.retu
	0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, // rn sRGB(color);.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, // }.vec2 FBGamma(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // onst vec2 color)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x46, // .{.return vec2(F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, // BGamma(color.x),
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, // FBGamma(color.y)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // );.}.vec3 FBGamm
	0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, // a(const vec3 col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // or).{.return vec
	0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // 3(FBGamma(color.
	0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // x),FBGamma(color
	0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .y),FBGamma(colo
	0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, // r.z));.}.float F
	0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // BToneMap(const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // loat l).{.return
	0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, //  l * ((l*0.25 + 
	0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // 1.0) / (l + 1.0)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, // );.}.vec2 FBTone
	0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, // Map(const vec2 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // olor).{.const fl
	0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // oat l = dot(colo
	0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, // r,vec2(0.176204+
	0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, // 0.0108109*0.5,0.
	0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, // 812985+0.0108109
	0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, // *0.5));.return c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, // olor * ((l*0.25 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, // + 1.0) / (l + 1.
	0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, // 0));.}.vec3 FBTo
	0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, // neMap(const vec3
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  color).{.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, // float l = dot(co
	0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, // lor,vec3(0.17620
	0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, // 4,0.812985,0.010
	0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, // 8109));.return c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, // olor * ((l*0.25 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, // + 1.0) / (l + 1.
	0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, 0x64, 0x69, // 0));.}.vec4 Addi
	0x74, 0x69, 0x76, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // tive(const vec4 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // cBase, const vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // 4 cBlend, const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, // float percent).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, // .return cBase + 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, // cBlend*percent;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x63, // }.vec3 Screen (c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // onst vec3 cBase,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, //  const vec3 cBle
	0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, // nd).{.return 1.0
	0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, //  - (1.0 - cBase)
	0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, //  * (1.0 - cBlend
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, // );.}.vec4 Screen
	0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, //  (const vec4 cBa
	0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // se, const vec4 c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // Blend).{.return 
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, // 1.0 - (1.0 - cBa
	0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, // se) * (1.0 - cBl
	0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, // end);.}.vec3 Scr
	0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // eenHDR (const ve
	0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // c3 cBase, const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // vec3 cBlend).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // eturn max(1.0 - 
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, // (1.0 - cBase) * 
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, // (1.0 - cBlend), 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, // vec3(0.,0.,0.));
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, // .}.vec4 ScreenHD
	0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // R (const vec4 cB
	0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // ase, const vec4 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // cBlend).{.return
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, //  max(1.0 - (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // - cBase) * (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // - cBlend), vec4(
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, // 0.,0.,0.,0.));.}
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, // .vec4 Multiply (
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // const vec4 cBase
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, // , const vec4 cBl
	0x65, 0x6e, 0x64, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // end, const float
	0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  percent).{.retu
	0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // rn cBase * cBlen
	0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // d*percent;.}.vec
	0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // 4 Overlay (const
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, //  vec4 cBase, con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, // st vec4 cBlend).
	0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, // {.vec4 cNew = st
	0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, // ep(0.5, cBase);.
	0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, // cNew = mix(cBase
	0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, // *cBlend*2.0, 1.0
	0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, // -2.0*(1.0-cBase)
	0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, // *(1.0-cBlend), c
	0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, // New);.return cNe
	0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, // w;.}.vec4 Overla
	0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, // yHDR (const vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, //  cBase, const ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, // c4 cBlend).{.vec
	0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, // 4 cNew = step(0.
	0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, // 5, cBase);.cNew 
	0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, // = max(mix(cBase*
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, // cBlend*2.0, 1.0-
	0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, // 2.0*(1.0-cBase)*
	0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, // (1.0-cBlend), cN
	0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, // ew), vec4(0.,0.,
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 0.,0.));.return 
	0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, // cNew;.}.vec3 cos
	0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, // _hemisphere_samp
	0x6c, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, // le(const vec2 t)
	0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, // .{.const float p
	0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, // hi = t.y * (2.0*
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 5);.const float 
	0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // cosTheta = sqrt(
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // 1.0 - t.x);.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, // t float sinTheta
	0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, //  = sqrt(t.x);.fl
	0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x73, 0x69, 0x6e, 0x63, 0x6f, // oat sp,cp;.sinco
	0x73, 0x28, 0x70, 0x68, 0x69, 0x2c, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x29, 0x3b, 0x0a, 0x72, 0x65, // s(phi,sp,cp);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, // turn vec3(cp * s
	0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, // inTheta, cosThet
	0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, // a, sp * sinTheta
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, // );.}.vec3 rotate
	0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, // _to_vector_upper
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, // (const vec3 vec,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, //  const vec3 norm
	0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // al).{.if(normal.
	0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, // y > -0.99999).{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, // const float h = 
	0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // 1.0/(1.0+normal.
	0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // y);.const float 
	0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, // hz = h*normal.z;
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, // .const float hzx
	0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, //  = hz*normal.x;.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, // return vec3(.vec
	0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, // .x * (normal.y+h
	0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, // z*normal.z) + ve
	0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, // c.y * normal.x -
	0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, //  vec.z * hzx,.ve
	0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, // c.y * normal.y -
	0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, //  vec.x * normal.
	0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // x - vec.z * norm
	0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, // al.z,.vec.y * no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, // rmal.z - vec.x *
	0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, //  hzx + vec.z * (
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // normal.y+h*norma
	0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, // l.x*normal.x));.
	0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, // }.else return -v
	0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // ec;.}.uniform ma
	0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // t4 matView;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, // orm mat4 matWorl
	0x64, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // dView;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, // at4 matWorldView
	0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // Inverse;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, //  mat4 matWorldVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // ewProj[2];.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x5b, // rm mat4 matProj[
	0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, // 2];.uniform samp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, // ler2D tex_ball_c
	0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, // olor;.uniform sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x3b, // mpler2D tex_env;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .uniform sampler
	0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, // 2D tex_diffuse_e
	0x6e, 0x76, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, // nv;.uniform samp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, // ler2D tex_ball_d
	0x65, 0x63, 0x61, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, // ecal;.uniform sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x74, 0x65, 0x78, // mpler2DArray tex
	0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x3b, // _ball_playfield;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, // .uniform vec4 u_
	0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, // basic_shade_mode
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, // ;.uniform vec4 b
	0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x32, 0x20, 0x2b, 0x20, // allLightPos[2 + 
	0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // 8];.uniform vec4
	0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, //  ballLightEmissi
	0x6f, 0x6e, 0x5b, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // on[2 + 8];.unifo
	0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, // rm vec4 cAmbient
	0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // _LightRange;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, // form vec4 fenvEm
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, // issionScale_TexW
	0x69, 0x64, 0x74, 0x68, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // idth;.uniform ve
	0x63, 0x34, 0x20, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, // c4 fDisableLight
	0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x3b, 0x0a, 0x75, // ing_top_below;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x53, 0x63, 0x65, // niform vec4 fSce
	0x6e, 0x65, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // neScale;.uniform
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, //  vec4 cBase_Alph
	0x61, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // a;.uniform vec4 
	0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, // Roughness_WrapL_
	0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, // Edge_Thickness;.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4f, // float GeometricO
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // pacity(const flo
	0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // at NdotV, const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x6e, // float alpha, con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, // st float blendin
	0x67, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, // g, const float t
	0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // hickness).{.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, // t float x = abs(
	0x4e, 0x64, 0x6f, 0x74, 0x56, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // NdotV);.const fl
	0x6f, 0x61, 0x74, 0x20, 0x67, 0x20, 0x3d, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, // oat g = blending
	0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x78, 0x20, 0x2f, 0x20, 0x28, //  * (1.0 - (x / (
	0x78, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, // x * (1.0 - thick
	0x6e, 0x65, 0x73, 0x73, 0x29, 0x20, 0x2b, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, // ness) + thicknes
	0x73, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, // s)));.return mix
	0x28, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x67, 0x29, 0x3b, // (alpha, 1.0, g);
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, // .}.vec3 FresnelS
	0x63, 0x68, 0x6c, 0x69, 0x63, 0x6b, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // chlick(const vec
	0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // 3 spec, const fl
	0x6f, 0x61, 0x74, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, // oat LdotH, const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x72, //  float edge).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x70, 0x65, 0x63, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x65, // eturn spec + (ve
	0x63, 0x33, 0x28, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x65, 0x64, 0x67, // c3(edge,edge,edg
	0x65, 0x29, 0x20, 0x2d, 0x20, 0x73, 0x70, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, // e) - spec) * pow
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x35, 0x2e, // (1.0 - LdotH, 5.
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, // );.}.vec3 DoPoin
	0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // tLight(const vec
	0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // 3 pos, const vec
	0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // 3 N, const vec3 
	0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, // V, const vec3 di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // ffuse, const vec
	0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // 3 glossy, const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // float edge, cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, // t float glossyPo
	0x77, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x69, // wer, const int i
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, // , const bool is_
	0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // metal).{.const v
	0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x28, // ec3 lightDir = (
	0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, //  ( (matView) * (
	0x76, 0x65, 0x63, 0x34, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, // vec4(ballLightPo
	0x73, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, // s[i].xyz, 1.0)) 
	0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x70, 0x6f, 0x73, 0x3b, 0x0a, 0x63, // ) ).xyz - pos;.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4c, 0x20, 0x3d, 0x20, 0x6e, 0x6f, // onst vec3 L = no
	0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, // rmalize(lightDir
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, // );.const float N
	0x64, 0x6f, 0x74, 0x4c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x20, 0x4c, 0x29, // dotL = dot(N, L)
	0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, // ;.vec3 Out = vec
	0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // 3(0.0,0.0,0.0);.
	0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, // if (!is_metal &&
	0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x2b, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, //  (NdotL + Roughn
	0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, // ess_WrapL_Edge_T
	0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, // hickness.y > 0.0
	0x29, 0x29, 0x0a, 0x4f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // )).Out = diffuse
	0x20, 0x2a, 0x20, 0x28, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x2b, 0x20, 0x52, 0x6f, 0x75, //  * ((NdotL + Rou
	0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, // ghness_WrapL_Edg
	0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x29, 0x20, 0x2f, // e_Thickness.y) /
	0x20, 0x73, 0x71, 0x72, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, //  sqr(1.0+Roughne
	0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, // ss_WrapL_Edge_Th
	0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, // ickness.y));.if 
	0x28, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, // (NdotL > 0.0).{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x48, 0x20, 0x3d, 0x20, 0x6e, // const vec3 H = n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x4c, 0x20, 0x2b, 0x20, 0x56, 0x29, 0x3b, // ormalize(L + V);
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, // .const float Ndo
	0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, // tH = dot(N, H);.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4c, 0x64, 0x6f, 0x74, // const float Ldot
	0x48, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4c, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x63, // H = dot(L, H);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x56, 0x64, 0x6f, 0x74, 0x48, // onst float VdotH
	0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x56, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x69, 0x66, //  = dot(V, H);.if
	0x20, 0x28, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, //  ((NdotH > 0.0) 
	0x26, 0x26, 0x20, 0x28, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, // && (LdotH > 0.0)
	0x20, 0x26, 0x26, 0x20, 0x28, 0x56, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, //  && (VdotH > 0.0
	0x29, 0x29, 0x0a, 0x4f, 0x75, 0x74, 0x20, 0x2b, 0x3d, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, // )).Out += Fresne
	0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, 0x6b, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, // lSchlick(glossy,
	0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x65, 0x64, 0x67, 0x65, 0x29, 0x20, 0x2a, 0x20, //  LdotH, edge) * 
	0x28, 0x28, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x2b, // (((glossyPower +
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x38, 0x2e, 0x30, 0x2a, 0x56, 0x64, 0x6f, //  1.0) / (8.0*Vdo
	0x74, 0x48, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x48, // tH)) * pow(NdotH
	0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x29, 0x29, 0x3b, // , glossyPower));
	0x0a, 0x7d, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // .}.const float s
	0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x64, // qrl_lightDir = d
	0x6f, 0x74, 0x28, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2c, 0x6c, 0x69, 0x67, 0x68, // ot(lightDir,ligh
	0x74, 0x44, 0x69, 0x72, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x41, 0x74, // tDir);.float fAt
	0x74, 0x65, 0x6e, 0x20, 0x3d, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, // ten = clamp(1.0 
	0x2d, 0x20, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2a, // - sqrl_lightDir*
	0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2f, 0x28, 0x63, // sqrl_lightDir/(c
	0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, // Ambient_LightRan
	0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, // ge.w*cAmbient_Li
	0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, 0x69, // ghtRange.w*cAmbi
	0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, // ent_LightRange.w
	0x2a, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, // *cAmbient_LightR
	0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, // ange.w), 0.0, 1.
	0x30, 0x29, 0x3b, 0x0a, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x3d, 0x20, 0x66, 0x41, 0x74, // 0);.fAtten = fAt
	0x74, 0x65, 0x6e, 0x2a, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x2f, 0x28, 0x73, 0x71, 0x72, 0x6c, // ten*fAtten/(sqrl
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // _lightDir + 1.0)
	0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x3d, // ;.vec3 ambient =
	0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, //  glossy;.if (!is
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, // _metal).ambient 
	0x2b, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // += diffuse;.cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x20, 0x3d, 0x20, // t vec3 result = 
	0x4f, 0x75, 0x74, 0x20, 0x2a, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, // Out * ballLightE
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, // mission[i].xyz *
	0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x2b, 0x20, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, //  fAtten + ambien
	0x74, 0x20, 0x2a, 0x20, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, // t * cAmbient_Lig
	0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x69, 0x66, 0x20, // htRange.xyz;.if 
	0x28, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, // (fDisableLightin
	0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x21, 0x3d, // g_top_below.x !=
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, //  0.0).return mix
	0x28, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, // (result,diffuse,
	0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, // fDisableLighting
	0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x65, // _top_below.x);.e
	0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, // lse.return resul
	0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, // t;.}.vec3 DoEnvm
	0x61, 0x70, 0x44, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // apDiffuse(const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // vec3 N, const ve
	0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, // c3 diffuse).{.co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, // nst vec3 env = t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, // extureLod(tex_di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, // ffuse_env, ray_t
	0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, // o_equirectangula
	0x72, 0x5f, 0x75, 0x76, 0x28, 0x4e, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x79, // r_uv(N), 0.0).xy
	0x7a, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // z;.return diffus
	0x65, 0x20, 0x2a, 0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, // e * env*fenvEmis
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, // sionScale_TexWid
	0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, // th.x;.}.vec3 DoE
	0x6e, 0x76, 0x6d, 0x61, 0x70, 0x47, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x28, 0x63, 0x6f, 0x6e, 0x73, // nvmapGlossy(cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // t vec3 N, const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // vec3 V, const ve
	0x63, 0x32, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // c2 Ruv, const ve
	0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, // c3 glossy, const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, //  float glossyPow
	0x65, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // er).{.const floa
	0x74, 0x20, 0x6d, 0x69, 0x70, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, 0x6c, 0x6f, 0x67, 0x32, // t mip = min(log2
	0x28, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, // (fenvEmissionSca
	0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x79, 0x20, 0x2a, 0x20, // le_TexWidth.y * 
	0x73, 0x71, 0x72, 0x74, 0x28, 0x33, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x35, // sqrt(3.0)) - 0.5
	0x2a, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, // *log2(glossyPowe
	0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x66, // r + 1.0), log2(f
	0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, // envEmissionScale
	0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x79, 0x29, 0x2d, 0x31, 0x2e, 0x29, // _TexWidth.y)-1.)
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, // ;.const vec3 env
	0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, //  = textureLod(te
	0x78, 0x5f, 0x65, 0x6e, 0x76, 0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x6d, 0x69, 0x70, 0x29, // x_env, Ruv, mip)
	0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x67, 0x6c, 0x6f, // .xyz;.return glo
	0x73, 0x73, 0x79, 0x20, 0x2a, 0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, // ssy * env*fenvEm
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, // issionScale_TexW
	0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, // idth.x;.}.vec3 D
	0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x32, 0x6e, 0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x28, // oEnvmap2ndLayer(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // const vec3 color
	0x31, 0x73, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // 1stLayer, const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // vec3 pos, const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // vec3 N, const ve
	0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // c3 V, const floa
	0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // t NdotV, const v
	0x65, 0x63, 0x32, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // ec2 Ruv, const v
	0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // ec3 specular).{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x77, 0x20, 0x3d, 0x20, 0x46, // const vec3 w = F
	0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, 0x6b, 0x28, 0x73, 0x70, // resnelSchlick(sp
	0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x52, // ecular, NdotV, R
	0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, // oughness_WrapL_E
	0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x7a, 0x29, // dge_Thickness.z)
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, // ;.const vec3 env
	0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, //  = textureLod(te
	0x78, 0x5f, 0x65, 0x6e, 0x76, 0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, // x_env, Ruv, 0.0)
	0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, // .xyz;.return mix
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x31, 0x73, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2c, 0x20, // (color1stLayer, 
	0x65, 0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, // env*fenvEmission
	0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, // Scale_TexWidth.x
	0x2c, 0x20, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, // , w);.}.vec3 lig
	0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // htLoop(const vec
	0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, // 3 pos, vec3 N, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x76, 0x65, 0x63, // onst vec3 V, vec
	0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // 3 diffuse, vec3 
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // glossy, const ve
	0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, // c3 specular, con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, // st float edge, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, // onst bool is_met
	0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // al).{.vec3 color
	0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, //  = vec3_splat(0.
	0x30, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, // 0);.float NdotV 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x56, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, // = dot(N,V);.if (
	0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x4e, // NdotV < 0.0).{.N
	0x20, 0x3d, 0x20, 0x2d, 0x4e, 0x3b, 0x0a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x2d, //  = -N;.NdotV = -
	0x4e, 0x64, 0x6f, 0x74, 0x56, 0x3b, 0x0a, 0x7d, 0x0a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, // NdotV;.}.NdotV =
	0x20, 0x6d, 0x69, 0x6e, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, //  min(NdotV, 1.0)
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, // ;.const float di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, // ffuseMax = max(d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, // iffuse.x,max(dif
	0x66, 0x75, 0x73, 0x65, 0x2e, 0x79, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x7a, // fuse.y,diffuse.z
	0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ));.const float 
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, // glossyMax = max(
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, // glossy.x,max(glo
	0x73, 0x73, 0x79, 0x2e, 0x79, 0x2c, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x7a, 0x29, 0x29, // ssy.y,glossy.z))
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, // ;.const float sp
	0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, // ecularMax = max(
	0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x73, // specular.x,max(s
	0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x79, 0x2c, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, // pecular.y,specul
	0x61, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // ar.z));.const fl
	0x6f, 0x61, 0x74, 0x20, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // oat sum = diffus
	0x65, 0x4d, 0x61, 0x78, 0x20, 0x2b, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, // eMax + glossyMax
	0x20, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x73, 0x75, 0x6d, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, //  ;.if (sum > 1.0
	0x20, 0x26, 0x26, 0x20, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, //  && fDisableLigh
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, // ting_top_below.x
	0x20, 0x3c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  < 1.0).{.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, // float invsum = 1
	0x2e, 0x30, 0x2f, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, // .0/sum;.diffuse 
	0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, // *= invsum;.gloss
	0x79, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, // y *= invsum;.}.i
	0x66, 0x20, 0x28, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, // f ((!is_metal &&
	0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, //  (diffuseMax > 0
	0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, // .0)) || (glossyM
	0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, // ax > 0.0)).{.if 
	0x28, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, // (fDisableLightin
	0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x3d, 0x3d, // g_top_below.x ==
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x66, //  1.0).color += f
	0x6c, 0x6f, 0x61, 0x74, 0x28, 0x32, 0x29, 0x20, 0x2a, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // loat(2) * diffus
	0x65, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, // e;.else for (int
	0x20, 0x69, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x32, 0x3b, 0x20, 0x69, //  i = 0; i < 2; i
	0x2b, 0x2b, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x50, // ++).color += DoP
	0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, // ointLight(pos, N
	0x2c, 0x20, 0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, // , V, diffuse, gl
	0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, // ossy, edge, Roug
	0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, // hness_WrapL_Edge
	0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x2c, 0x20, 0x69, 0x2c, // _Thickness.x, i,
	0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, //  is_metal);.}.if
	0x20, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, //  (!is_metal && (
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, // diffuseMax > 0.0
	0x29, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, // )).color += DoEn
	0x76, 0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, 0x20, 0x28, 0x28, 0x20, // vmapDiffuse( (( 
	0x28, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x4e, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, // ( (vec4(N,0.0)) 
	0x2a, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, // * (matView) ) ).
	0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x3b, 0x0a, // xyz), diffuse);.
	0x69, 0x66, 0x20, 0x28, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, // if ((glossyMax >
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, //  0.0) || (specul
	0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, // arMax > 0.0)).{.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x52, 0x20, 0x3d, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x4e, 0x64, // vec3 R = (2.0*Nd
	0x6f, 0x74, 0x56, 0x29, 0x2a, 0x4e, 0x20, 0x2d, 0x20, 0x56, 0x3b, 0x0a, 0x52, 0x20, 0x3d, 0x20, // otV)*N - V;.R = 
	0x28, 0x28, 0x20, 0x28, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x52, 0x2c, 0x30, 0x2e, 0x30, // (( ( (vec4(R,0.0
	0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, // )) * (matView) )
	0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, //  ).xyz);.const v
	0x65, 0x63, 0x32, 0x20, 0x52, 0x75, 0x76, 0x20, 0x3d, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, // ec2 Ruv = ray_to
	0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, // _equirectangular
	0x5f, 0x75, 0x76, 0x28, 0x52, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, // _uv(R);.if (glos
	0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, // syMax > 0.0).col
	0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x47, 0x6c, // or += DoEnvmapGl
	0x6f, 0x73, 0x73, 0x79, 0x28, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, // ossy(N, V, Ruv, 
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, // glossy, Roughnes
	0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, // s_WrapL_Edge_Thi
	0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x73, // ckness.x);.if (s
	0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, // pecularMax > 0.0
	0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, // ).color = DoEnvm
	0x61, 0x70, 0x32, 0x6e, 0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // ap2ndLayer(color
	0x2c, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x4e, 0x64, 0x6f, // , pos, N, V, Ndo
	0x74, 0x56, 0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, // tV, Ruv, specula
	0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, // r);.}.return col
	0x6f, 0x72, 0x20, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // or ;.}.uniform v
	0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, // ec4 invTableRes_
	0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // reflection;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, // orm vec4 w_h_dis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x3b, 0x0a, 0x76, 0x65, // ableLighting;.ve
	0x63, 0x33, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, // c3 ballLightLoop
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, // (const vec3 pos,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, //  vec3 N, vec3 V,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x76, //  vec3 diffuse, v
	0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // ec3 glossy, cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, // t vec3 specular,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, //  const float edg
	0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, // e, const bool is
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // _metal).{.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, // float diffuseMax
	0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x78, //  = max(diffuse.x
	0x2c, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x79, 0x2c, 0x64, // ,max(diffuse.y,d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // iffuse.z));.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, // t float glossyMa
	0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x78, // x = max(glossy.x
	0x2c, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x79, 0x2c, 0x67, 0x6c, // ,max(glossy.y,gl
	0x6f, 0x73, 0x73, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // ossy.z));.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, // float specularMa
	0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, // x = max(specular
	0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, // .x,max(specular.
	0x79, 0x2c, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, // y,specular.z));.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x75, 0x6d, 0x20, // const float sum 
	0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x2b, 0x20, 0x67, // = diffuseMax + g
	0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x73, 0x75, 0x6d, // lossyMax;.if(sum
	0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  > 1.0).{.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, // float invsum = 1
	0x2e, 0x30, 0x2f, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, // .0/sum;.diffuse 
	0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, // *= invsum;.gloss
	0x79, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // y *= invsum;.}.v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, // ec3 color = vec3
	0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, // (0.0, 0.0, 0.0);
	0x0a, 0x69, 0x66, 0x28, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, // .if((!is_metal &
	0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, // & (diffuseMax > 
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, // 0.0)) || (glossy
	0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x66, 0x6f, 0x72, 0x28, // Max > 0.0)).for(
	0x69, 0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x32, // int i = 0; i < 2
	0x20, 0x2b, 0x20, 0x38, 0x3b, 0x20, 0x69, 0x2b, 0x2b, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, //  + 8; i++).color
	0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, //  += DoPointLight
	0x28, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, // (pos, N, V, diff
	0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x65, 0x64, 0x67, // use, glossy, edg
	0x65, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, // e, Roughness_Wra
	0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, // pL_Edge_Thicknes
	0x73, 0x2e, 0x78, 0x2c, 0x20, 0x69, 0x2c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, // s.x, i, is_metal
	0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, // );.if(!is_metal 
	0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, // && (diffuseMax >
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, //  0.0)).color += 
	0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, // DoEnvmapDiffuse(
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, // normalize(( (mat
	0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x4e, 0x2c, // View) * (vec4(N,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x64, //  0.0)) ).xyz), d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x73, 0x70, 0x65, 0x63, // iffuse);.if(spec
	0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, // ularMax > 0.0).c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, // olor += specular
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, // ;.return color;.
	0x7d, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, // }.void main().{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x20, 0x3d, 0x20, 0x6e, // const vec3 V = n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x20, 0x2d, 0x76, 0x5f, 0x77, 0x6f, 0x72, // ormalize( -v_wor
	0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // ldPos.xyz);.cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // t vec3 N = norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, // lize(v_normal.xy
	0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x52, // z);.const vec3 R
	0x20, 0x3d, 0x20, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x56, 0x2c, 0x20, 0x4e, 0x29, //  = reflect(V, N)
	0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, // ;.vec3 ballImage
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // Color;.const flo
	0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x56, 0x2c, // at edge = dot(V,
	0x20, 0x52, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  R);.const float
	0x20, 0x6c, 0x6f, 0x64, 0x20, 0x3d, 0x20, 0x28, 0x65, 0x64, 0x67, 0x65, 0x20, 0x3e, 0x20, 0x30, //  lod = (edge > 0
	0x2e, 0x36, 0x29, 0x20, 0x3f, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2a, 0x28, 0x36, 0x2e, 0x30, 0x2a, // .6) ? edge*(6.0*
	0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x29, 0x2d, 0x28, 0x36, 0x2e, 0x30, 0x2a, 0x30, 0x2e, // 1.0/0.4)-(6.0*0.
	0x36, 0x2f, 0x30, 0x2e, 0x34, 0x29, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x63, 0x6f, // 6/0.4) : 0.0;.co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x76, 0x20, 0x3d, 0x20, 0x28, 0x28, // nst vec3 rv = ((
	0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x2d, 0x52, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, //  (vec4(-R,0.0)) 
	0x2a, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, // * (matView) ).xy
	0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, // z);.const vec2 u
	0x76, 0x20, 0x3d, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, // v = ray_to_equir
	0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x72, 0x76, // ectangular_uv(rv
	0x29, 0x3b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, // );.ballImageColo
	0x72, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, // r = textureLod(t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x75, // ex_ball_color, u
	0x76, 0x2c, 0x20, 0x6c, 0x6f, 0x64, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // v, lod).rgb;.con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, // st vec4 decalCol
	0x6f, 0x72, 0x54, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, // orT = texture(te
	0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x2c, 0x20, 0x76, 0x5f, // x_ball_decal, v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, // texcoord0);.vec3
	0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x64, 0x65, //  decalColor = de
	0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x64, // calColorT.rgb;.d
	0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x3d, 0x20, 0x64, 0x65, 0x63, // ecalColor *= dec
	0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x2e, 0x61, 0x3b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, // alColorT.a;.ball
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x64, 0x65, // ImageColor += de
	0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x77, // calColor;.if ((w
	0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, // _h_disableLighti
	0x6e, 0x67, 0x2e, 0x7a, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x62, // ng.z != 0.)).{.b
	0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, // gfx_FragColor = 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, // vec4(ballImageCo
	0x6c, 0x6f, 0x72, 0x2c, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, // lor,cBase_Alpha.
	0x61, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x3b, 0x0a, 0x7d, 0x0a, 0x62, 0x61, // a);.return;.}.ba
	0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x3d, 0x20, // llImageColor *= 
	0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, // fenvEmissionScal
	0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x63, 0x6f, // e_TexWidth.x;.co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, // nst vec3 playfie
	0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, // ld_normal = ( (m
	0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, // atWorldView) * (
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x31, 0x2e, 0x2c, // float4(0.,0.,1.,
	0x30, 0x2e, 0x29, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // 0.)) ).xyz;.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x20, 0x3d, 0x20, // t float NdotR = 
	0x64, 0x6f, 0x74, 0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, // dot(playfield_no
	0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x52, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // rmal, R);.const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, // vec3 playfield_p
	0x30, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, // 0 = ( (matWorldV
	0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x20, 0x30, 0x2e, // iew) * (vec4( 0.
	0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x2e, 0x78, // ,0.,0.,1.0)) ).x
	0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // yz;.const float 
	0x74, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // t = dot(playfiel
	0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // d_normal, v_worl
	0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, // dPos.xyz - playf
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, // ield_p0) / NdotR
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, // ;.const vec3 pla
	0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x68, 0x69, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x5f, 0x77, // yfield_hit = v_w
	0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x74, 0x20, // orldPos.xyz - t 
	0x2a, 0x20, 0x52, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // * R;.const vec4 
	0x70, 0x72, 0x6f, 0x6a, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, // proj = ( (matPro
	0x6a, 0x5b, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x5d, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, // j[v_eye]) * (vec
	0x34, 0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x68, 0x69, 0x74, 0x2c, // 4(playfield_hit,
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  1.0)) );.const 
	0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x70, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // vec2 uvp = vec2(
	0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, // 0.5, 0.5) + vec2
	0x28, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x78, 0x2c, 0x20, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x79, // (proj.x, -proj.y
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2f, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x2e, // ) * (0.5 / proj.
	0x77, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, // w);.const vec3 p
	0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, // layfieldColor = 
	0x30, 0x2e, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x28, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // 0.25 * (.texture
	0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, // (tex_ball_playfi
	0x65, 0x6c, 0x64, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2b, // eld, vec3((uvp +
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, //  vec2(w_h_disabl
	0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, // eLighting.x, 0.)
	0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, // ).x, (uvp + vec2
	0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, // (w_h_disableLigh
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, // ting.x, 0.)).y, 
	0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, // v_eye)).rgb.+ te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, // xture(tex_ball_p
	0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, // layfield, vec3((
	0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, // uvp - vec2(w_h_d
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, // isableLighting.x
	0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2d, // , 0.)).x, (uvp -
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, //  vec2(w_h_disabl
	0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, // eLighting.x, 0.)
	0x29, 0x2e, 0x79, 0x2c, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, // ).y, v_eye)).rgb
	0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, // .+ texture(tex_b
	0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x76, // all_playfield, v
	0x65, 0x63, 0x33, 0x28, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // ec3((uvp + vec2(
	0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // 0., w_h_disableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, // ighting.y)).x, (
	0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, // uvp + vec2(0., w
	0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, // _h_disableLighti
	0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, // ng.y)).y, v_eye)
	0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, // ).rgb.+ texture(
	0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, // tex_ball_playfie
	0x6c, 0x64, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, // ld, vec3((uvp - 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, // vec2(0., w_h_dis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, // ableLighting.y))
	0x2e, 0x78, 0x2c, 0x20, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // .x, (uvp - vec2(
	0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // 0., w_h_disableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x76, // ighting.y)).y, v
	0x5f, 0x65, 0x79, 0x65, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x29, 0x3b, 0x0a, 0x69, 0x66, // _eye)).rgb.);.if
	0x20, 0x28, 0x21, 0x28, 0x75, 0x76, 0x70, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x20, 0x7c, //  (!(uvp.x < 0. |
	0x7c, 0x20, 0x75, 0x76, 0x70, 0x2e, 0x78, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x20, 0x7c, 0x7c, 0x20, // | uvp.x > 1. || 
	0x75, 0x76, 0x70, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x20, 0x7c, 0x7c, 0x20, 0x75, 0x76, // uvp.y < 0. || uv
	0x70, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x29, 0x0a, 0x26, 0x26, 0x20, 0x21, 0x28, 0x74, // p.y > 1.).&& !(t
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, //  <= 0.)).{.ballI
	0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x6c, 0x65, 0x72, 0x70, // mageColor = lerp
	0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, // (ballImageColor,
	0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, //  playfieldColor,
	0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x30, 0x2c, //  smoothstep(0.0,
	0x20, 0x30, 0x2e, 0x31, 0x35, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x29, 0x20, 0x2a, 0x20, //  0.15, NdotR) * 
	0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, // invTableRes_refl
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x62, 0x61, 0x6c, // ection.z);.}.bal
	0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x6d, 0x69, // lImageColor = mi
	0x6e, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // n(ballImageColor
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x35, 0x2e, 0x2c, 0x20, 0x31, 0x35, // , float3(15., 15
	0x2e, 0x2c, 0x20, 0x31, 0x35, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, // ., 15.));.vec3 d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x3d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, // iffuse = cBase_A
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x2a, 0x30, 0x2e, 0x30, 0x37, 0x35, 0x3b, 0x0a, // lpha.rgb*0.075;.
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x3d, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, // diffuse *= decal
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // Color;.const vec
	0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, // 3 glossy = max(d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // iffuse*2.0, vec3
	0x28, 0x30, 0x2e, 0x31, 0x2c, 0x30, 0x2e, 0x31, 0x2c, 0x30, 0x2e, 0x31, 0x29, 0x29, 0x3b, 0x0a, // (0.1,0.1,0.1));.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x20, 0x3d, 0x20, // vec3 specular = 
	0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // ballImageColor *
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, //  cBase_Alpha.rgb
	0x3b, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x20, 0x2a, 0x3d, 0x20, 0x76, 0x65, // ;.specular *= ve
	0x63, 0x33, 0x28, 0x31, 0x2e, 0x2c, 0x31, 0x2e, 0x2c, 0x31, 0x2e, 0x29, 0x2d, 0x64, 0x65, 0x63, // c3(1.,1.,1.)-dec
	0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, // alColor;.bgfx_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x62, 0x61, // agColor.rgb = ba
	0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x76, 0x5f, 0x77, 0x6f, // llLightLoop(v_wo
	0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, // rldPos.xyz, N, V
	0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // , diffuse, gloss
	0x79, 0x2c, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x31, 0x2e, 0x30, // y, specular, 1.0
	0x2c, 0x20, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, // , false);.bgfx_F
	0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x61, 0x20, 0x3d, 0x20, 0x63, 0x42, 0x61, // ragColor.a = cBa
	0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x61, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,       // se_Alpha.a;.}..
};
static const uint8_t fs_ball_equirectangular_nodecal_st_glsl[14756] =
{
	0x46, 0x53, 0x48, 0x0b, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x91, 0x39, // FSH..N.........9
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x6f, // ..#version 440.o
	0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, // ut vec4 bgfx_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // gColor;.#define 
	0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x62, 0x67, 0x66, // gl_FragColor bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x0a, 0x23, 0x64, 0x65, 0x66, // x_FragColor.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x20, 0x20, // ine texture2D   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, //        texture.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // Lod       textur
	0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, // eLod.#define tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ture2DGrad      
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, // textureGrad.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, // ine texture2DPro
	0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, // jLod   texturePr
	0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // ojLod.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, // xture2DProjGrad 
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, //  textureProjGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // CubeLod     text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, // ureLod.#define t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, // extureCubeGrad  
	0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, //   textureGrad.#d
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, // efine texture3D 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //          texture
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, 0x65, 0x78, 0x74, // 2DLodOffset text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, // ureLodOffset.#de
	0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, // fine attribute i
	0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // n.#define varyin
	0x67, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, // g in.#define bgf
	0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // xShadow2D(_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, // er, _coord)     
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // vec4_splat(textu
	0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // re(_sampler, _co
	0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, // ord) ).#define b
	0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, // gfxShadow2DProj(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, // ) vec4_splat(tex
	0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // tureProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x76, 0x61, 0x72, // r, _coord) ).var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, // ying float v_eye
	0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // ;.varying vec3 v
	0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // _normal;.varying
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, //  vec2 v_texcoord
	0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // 0;.varying vec3 
	0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, // v_worldPos;.vec3
	0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, //  instMul(vec3 _v
	0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, // ec, mat3 _mtx) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, //  return ( (_vec)
	0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, //  * (_mtx) ); }.v
	0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, // ec3 instMul(mat3
	0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, //  _mtx, vec3 _vec
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, // ) { return ( (_m
	0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, // tx) * (_vec) ); 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, // }.vec4 instMul(v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, // ec4 _vec, mat4 _
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, // mtx) { return ( 
	0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, // (_vec) * (_mtx) 
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, // ); }.vec4 instMu
	0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, // l(mat4 _mtx, vec
	0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 4 _vec) { return
	0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, //  ( (_mtx) * (_ve
	0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, // c) ); }.float rc
	0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // p(float _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // turn 1.0/_a; }.v
	0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, // ec2 rcp(vec2 _a)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, //  { return vec2(1
	0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, // .0)/_a; }.vec3 r
	0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // cp(vec3 _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, // turn vec3(1.0)/_
	0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, // a; }.vec4 rcp(ve
	0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c4 _a) { return 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, // vec4(1.0)/_a; }.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // vec2 vec2_splat(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // float _x) { retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // rn vec2(_x, _x);
	0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, //  }.vec3 vec3_spl
	0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // at(float _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // eturn vec3(_x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, // x, _x); }.vec4 v
	0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ec4_splat(float 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _x) { return vec
	0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // 4(_x, _x, _x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, // ); }.uvec2 uvec2
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // _splat(uint _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, // { return uvec2(_
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, // x, _x); }.uvec3 
	0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec3_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, //  _x) { return uv
	0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // ec3(_x, _x, _x);
	0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, //  }.uvec4 uvec4_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // plat(uint _x) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, // return uvec4(_x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, //  _x, _x, _x); }.
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, // mat4 mtxFromRows
	0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // (vec4 _0, vec4 _
	0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // 1, vec4 _2, vec4
	0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, //  _3).{.return tr
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, // anspose(mat4(_0,
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, //  _1, _2, _3) );.
	0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, // }.mat4 mtxFromCo
	0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // ls(vec4 _0, vec4
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, //  _1, vec4 _2, ve
	0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c4 _3).{.return 
	0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, // mat4(_0, _1, _2,
	0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, //  _3);.}.mat3 mtx
	0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, // FromRows(vec3 _0
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // , vec3 _1, vec3 
	0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, // _2).{.return tra
	0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, // nspose(mat3(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, // _1, _2) );.}.mat
	0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, // 3 mtxFromCols(ve
	0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, // c3 _0, vec3 _1, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // vec3 _2).{.retur
	0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, // n mat3(_0, _1, _
	0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // 2);.}.uniform ve
	0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, // c4 u_viewRect;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, // niform vec4 u_vi
	0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // ewTexel;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, //  mat4 u_view;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, // iform mat4 u_inv
	0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // View;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // t4 u_proj;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, // rm mat4 u_invPro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // u_viewProj;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, // orm mat4 u_invVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // ewProj;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, // mat4 u_model[32]
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // _modelView;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, // orm mat4 u_model
	0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // ViewProj;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, // m vec4 u_alphaRe
	0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, // f4;.float sqr(co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // nst float v).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // eturn v*v;.}.vec
	0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, // 2 sqr(const vec2
	0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, //  v).{.return v*v
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, // ;.}.vec3 sqr(con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // st vec3 v).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // urn v*v;.}.vec3 
	0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // mul_w1(const vec
	0x33, 0x20, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // 3 v, const mat4 
	0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, // m).{.return v.x*
	0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, // m[0].xyz + (v.y*
	0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, // m[1].xyz + (v.z*
	0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, // m[2].xyz + m[3].
	0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, // xyz));.}.float a
	0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, // cos_approx_divPI
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, // (const float v).
	0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, // {.const float x 
	0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, // = abs(v);.if(1. 
	0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, // - x <= 0.0000610
	0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 3515625).return 
	0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, // (v >= 0.) ? 0. :
	0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  1.;.const float
	0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, //  res = ((-0.1559
	0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, // 72/3.14159265358
	0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, // 9793238462643383
	0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, // 2795) * x + (1.5
	0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, // 6467/3.141592653
	0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, // 5897932384626433
	0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, // 832795) ) * sqrt
	0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // (1. - x);.return
	0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, //  (v >= 0.) ? res
	0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, //  : 1. - res;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, // loat atan2_appro
	0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // x_div2PI(const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // loat y, const fl
	0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // oat x).{.const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, // loat abs_y = abs
	0x28, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // (y);.const float
	0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, //  abs_x = abs(x);
	0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, // .if(abs_x <= 0.0
	0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, // 0006103515625 &&
	0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, //  abs_y <= 0.0000
	0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, // 6103515625).retu
	0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // rn 0.;.const flo
	0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, // at r = (abs_x - 
	0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, // abs_y) / (abs_x 
	0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // + abs_y);.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, // float angle = ((
	0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, // x < 0.) ? (3./8.
	0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, // ) : (1./8.)).+ (
	0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, // 0.211868 /(2.*3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, //  * r * r - 0.987
	0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // 305 /(2.*3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, // 6433832795)) * (
	0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, // (x < 0.) ? -r : 
	0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, // r);.return (y < 
	0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, // 0.) ? -angle : a
	0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, // ngle;.}.float as
	0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, // in_approx_divPI(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, // const float v).{
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, // .const float x =
	0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, //  abs(v);.if(1. -
	0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, //  x <= 0.00006103
	0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, // 515625).return (
	0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, // v >= 0.) ? 0.5 :
	0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, //  -0.5;.const flo
	0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, // at res = ((-0.15
	0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, // 5972/3.141592653
	0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, // 5897932384626433
	0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, // 832795) * x + (1
	0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, // .56467/3.1415926
	0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, // 5358979323846264
	0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, // 33832795) ) * sq
	0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // rt(1. - x);.retu
	0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, // rn (v >= 0.) ? 0
	0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, // .5 - res : -0.5 
	0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, // + res;.}.vec2 ra
	0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, // y_to_equirectang
	0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // ular_uv(const ve
	0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // c3 ray).{.return
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, //  vec2(.0.5 + ata
	0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, // n2_approx_div2PI
	0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, // (ray.y, ray.x),.
	0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, // acos_approx_divP
	0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // I(ray.z));.}.flo
	0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // at InvsRGB(const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, //  float color).{.
	0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, // if (color <= 0.0
	0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, // 4045).return col
	0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, // or * (1.0/12.92)
	0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, // ;.else.return po
	0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, // w(color * (1.0/1
	0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, // .055) + (0.055/1
	0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // .055), 2.4);.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x63, // loat InvRec709(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // onst float color
	0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, // ).{.if (color <=
	0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, //  0.081).return c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, // olor * (1.0/4.5)
	0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, // ;.else.return po
	0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, // w(color * (1.0/1
	0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, // .099) + (0.099/1
	0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, // .099), 1.0/0.45)
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // ;.}.float InvGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, // ma(const float c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, // olor).{.return I
	0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, // nvsRGB(color);.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, // .vec3 InvGamma(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // onst vec3 color)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, // .{.return vec3(I
	0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, // nvGamma(color.x)
	0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // ,InvGamma(color.
	0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // y),InvGamma(colo
	0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, // r.z));.}.vec3 In
	0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // vToneMap(const v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, // ec3 color).{.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, // st float inv_2bh
	0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, //  = 0.5/0.25;.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, // st float bh = 4.
	0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, // 0*0.25 - 2.0;.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, // turn (color - 1.
	0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, // 0 + sqrt(color*(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, // color + bh) + 1.
	0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // 0))*inv_2bh;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // loat sRGB(const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float f).{.float
	0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, //  s;.if (f <= 0.0
	0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, // 031308).s = 12.9
	0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, // 2 * f;.else.s = 
	0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, // 1.055 * pow(f, 1
	0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, // .0/2.4) - 0.055;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // .return s;.}.flo
	0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // at Rec709(const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float f).{.float
	0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, //  s;.if (f <= 0.0
	0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, // 18).s = 4.5 * f;
	0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, // .else.s = 1.099 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, // * pow(f, 0.45) -
	0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, //  0.099;.return s
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // ;.}.float FBGamm
	0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, // a(const float co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, // lor).{.return sR
	0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // GB(color);.}.vec
	0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // 2 FBGamma(const 
	0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // vec2 color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // turn vec2(FBGamm
	0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, // a(color.x),FBGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // ma(color.y));.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, // vec3 FBGamma(con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, // st vec3 color).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, // .return vec3(FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, // amma(color.x),FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, // Gamma(color.y),F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, // BGamma(color.z))
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, // ;.}.float FBTone
	0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // Map(const float 
	0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, // l).{.return l * 
	0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, // ((l*0.25 + 1.0) 
	0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // / (l + 1.0));.}.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, // vec2 FBToneMap(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // onst vec2 color)
	0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, // .{.const float l
	0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, //  = dot(color,vec
	0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, // 2(0.176204+0.010
	0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, // 8109*0.5,0.81298
	0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, // 5+0.0108109*0.5)
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // );.return color 
	0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, // * ((l*0.25 + 1.0
	0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, // ) / (l + 1.0));.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, // }.vec3 FBToneMap
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // (const vec3 colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // r).{.const float
	0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, //  l = dot(color,v
	0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, // ec3(0.176204,0.8
	0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, // 12985,0.0108109)
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // );.return color 
	0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, // * ((l*0.25 + 1.0
	0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, // ) / (l + 1.0));.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, // }.vec4 Additive(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // const vec4 cBase
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, // , const vec4 cBl
	0x65, 0x6e, 0x64, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // end, const float
	0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  percent).{.retu
	0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // rn cBase + cBlen
	0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // d*percent;.}.vec
	0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // 3 Screen (const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // vec3 cBase, cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, // t vec3 cBlend).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, // .return 1.0 - (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, // .0 - cBase) * (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // .0 - cBlend);.}.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6e, // vec4 Screen (con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, // st vec4 cBase, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // onst vec4 cBlend
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, // ).{.return 1.0 -
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, //  (1.0 - cBase) *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, //  (1.0 - cBlend);
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, // .}.vec3 ScreenHD
	0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, // R (const vec3 cB
	0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // ase, const vec3 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // cBlend).{.return
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, //  max(1.0 - (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // - cBase) * (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // - cBlend), vec3(
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // 0.,0.,0.));.}.ve
	0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, // c4 ScreenHDR (co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, // nst vec4 cBase, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // const vec4 cBlen
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, // d).{.return max(
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, // 1.0 - (1.0 - cBa
	0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, // se) * (1.0 - cBl
	0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, // end), vec4(0.,0.
	0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // ,0.,0.));.}.vec4
	0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, //  Multiply (const
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, //  vec4 cBase, con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, // st vec4 cBlend, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, // const float perc
	0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, // ent).{.return cB
	0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, // ase * cBlend*per
	0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, // cent;.}.vec4 Ove
	0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, // rlay (const vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, //  cBase, const ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, // c4 cBlend).{.vec
	0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, // 4 cNew = step(0.
	0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, // 5, cBase);.cNew 
	0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, // = mix(cBase*cBle
	0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, // nd*2.0, 1.0-2.0*
	0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, // (1.0-cBase)*(1.0
	0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, // -cBlend), cNew);
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, // .return cNew;.}.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, // vec4 OverlayHDR 
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, // (const vec4 cBas
	0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // e, const vec4 cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, // lend).{.vec4 cNe
	0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, // w = step(0.5, cB
	0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, // ase);.cNew = max
	0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, // (mix(cBase*cBlen
	0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, // d*2.0, 1.0-2.0*(
	0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, // 1.0-cBase)*(1.0-
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, // cBlend), cNew), 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, // vec4(0.,0.,0.,0.
	0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, // ));.return cNew;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, // .}.vec3 cos_hemi
	0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x63, 0x6f, // sphere_sample(co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, // nst vec2 t).{.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, // nst float phi = 
	0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, // t.y * (2.0*3.141
	0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, // 5926535897932384
	0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x63, // 626433832795);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, // onst float cosTh
	0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // eta = sqrt(1.0 -
	0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, //  t.x);.const flo
	0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, // at sinTheta = sq
	0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // rt(t.x);.float s
	0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x73, 0x69, 0x6e, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, // p,cp;.sincos(phi
	0x2c, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // ,sp,cp);.return 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, // vec3(cp * sinThe
	0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, // ta, cosTheta, sp
	0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, //  * sinTheta);.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, // vec3 rotate_to_v
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, // ector_upper(cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // t vec3 vec, cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, // t vec3 normal).{
	0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, // .if(normal.y > -
	0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // 0.99999).{.const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, //  float h = 1.0/(
	0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x63, // 1.0+normal.y);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, // onst float hz = 
	0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // h*normal.z;.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, // t float hzx = hz
	0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // *normal.x;.retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, // n vec3(.vec.x * 
	0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, // (normal.y+hz*nor
	0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, // mal.z) + vec.y *
	0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, //  normal.x - vec.
	0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, // z * hzx,.vec.y *
	0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, //  normal.y - vec.
	0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, // x * normal.x - v
	0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, // ec.z * normal.z,
	0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // .vec.y * normal.
	0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, // z - vec.x * hzx 
	0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // + vec.z * (norma
	0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, // l.y+h*normal.x*n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, // ormal.x));.}.els
	0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, // e return -vec;.}
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, // .uniform mat4 ma
	0x74, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // tView;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, // at4 matWorldView
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, // ;.uniform mat4 m
	0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x76, 0x65, 0x72, // atWorldViewInver
	0x73, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // se;.uniform mat4
	0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, //  matWorldViewPro
	0x6a, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // j[2];.uniform ma
	0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, 0x75, // t4 matProj[2];.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // niform sampler2D
	0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, //  tex_ball_color;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .uniform sampler
	0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // 2D tex_env;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, // orm sampler2D te
	0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x3b, 0x0a, 0x75, // x_diffuse_env;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // niform sampler2D
	0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x3b, //  tex_ball_decal;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .uniform sampler
	0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // 2DArray tex_ball
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // _playfield;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x62, 0x61, 0x73, 0x69, 0x63, // orm vec4 u_basic
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // _shade_mode;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, // form vec4 ballLi
	0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x5d, 0x3b, 0x0a, 0x75, // ghtPos[2 + 8];.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, // niform vec4 ball
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x32, 0x20, // LightEmission[2 
	0x2b, 0x20, 0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // + 8];.uniform ve
	0x63, 0x34, 0x20, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, // c4 cAmbient_Ligh
	0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // tRange;.uniform 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, // vec4 fenvEmissio
	0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x3b, // nScale_TexWidth;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x44, // .uniform vec4 fD
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, // isableLighting_t
	0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // op_below;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x53, 0x63, 0x61, // m vec4 fSceneSca
	0x6c, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // le;.uniform vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x0a, 0x75, 0x6e, //  cBase_Alpha;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, // iform vec4 Rough
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, // ness_WrapL_Edge_
	0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // Thickness;.float
	0x20, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, //  GeometricOpacit
	0x79, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, // y(const float Nd
	0x6f, 0x74, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // otV, const float
	0x20, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, //  alpha, const fl
	0x6f, 0x61, 0x74, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2c, 0x20, 0x63, 0x6f, // oat blending, co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, // nst float thickn
	0x65, 0x73, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // ess).{.const flo
	0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x56, // at x = abs(NdotV
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, // );.const float g
	0x20, 0x3d, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x2a, 0x20, 0x28, 0x31, //  = blending * (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x78, 0x20, 0x2f, 0x20, 0x28, 0x78, 0x20, 0x2a, 0x20, 0x28, // .0 - (x / (x * (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, // 1.0 - thickness)
	0x20, 0x2b, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, 0x29, 0x29, 0x3b, //  + thickness)));
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x61, 0x6c, 0x70, 0x68, // .return mix(alph
	0x61, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x67, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // a, 1.0, g);.}.ve
	0x63, 0x33, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, // c3 FresnelSchlic
	0x6b, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, // k(const vec3 spe
	0x63, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4c, // c, const float L
	0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // dotH, const floa
	0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // t edge).{.return
	0x20, 0x73, 0x70, 0x65, 0x63, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x65, 0x64, //  spec + (vec3(ed
	0x67, 0x65, 0x2c, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x65, 0x64, 0x67, 0x65, 0x29, 0x20, 0x2d, 0x20, // ge,edge,edge) - 
	0x73, 0x70, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x31, 0x2e, 0x30, 0x20, // spec) * pow(1.0 
	0x2d, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x35, 0x2e, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // - LdotH, 5.);.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, // vec3 DoPointLigh
	0x74, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, // t(const vec3 pos
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, // , const vec3 N, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x63, 0x6f, // const vec3 V, co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // nst vec3 diffuse
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, // , const vec3 glo
	0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ssy, const float
	0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, //  edge, const flo
	0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x2c, 0x20, // at glossyPower, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x2c, 0x20, 0x63, 0x6f, 0x6e, // const int i, con
	0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, // st bool is_metal
	0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, // ).{.const vec3 l
	0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x20, 0x28, 0x6d, // ightDir = ( ( (m
	0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, // atView) * (vec4(
	0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x69, 0x5d, 0x2e, // ballLightPos[i].
	0x78, 0x79, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, // xyz, 1.0)) ) ).x
	0x79, 0x7a, 0x20, 0x2d, 0x20, 0x70, 0x6f, 0x73, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // yz - pos;.const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x4c, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, // vec3 L = normali
	0x7a, 0x65, 0x28, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x29, 0x3b, 0x0a, 0x63, 0x6f, // ze(lightDir);.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, // nst float NdotL 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x20, 0x4c, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, // = dot(N, L);.vec
	0x33, 0x20, 0x4f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, // 3 Out = vec3(0.0
	0x2c, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, // ,0.0,0.0);.if (!
	0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x4e, 0x64, 0x6f, // is_metal && (Ndo
	0x74, 0x4c, 0x20, 0x2b, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, // tL + Roughness_W
	0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, // rapL_Edge_Thickn
	0x65, 0x73, 0x73, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x4f, 0x75, // ess.y > 0.0)).Ou
	0x74, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x28, 0x28, // t = diffuse * ((
	0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x2b, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, // NdotL + Roughnes
	0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, // s_WrapL_Edge_Thi
	0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x73, 0x71, 0x72, 0x28, // ckness.y) / sqr(
	0x31, 0x2e, 0x30, 0x2b, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, // 1.0+Roughness_Wr
	0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, // apL_Edge_Thickne
	0x73, 0x73, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, // ss.y));.if (Ndot
	0x4c, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // L > 0.0).{.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x48, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, //  vec3 H = normal
	0x69, 0x7a, 0x65, 0x28, 0x4c, 0x20, 0x2b, 0x20, 0x56, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // ize(L + V);.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, // t float NdotH = 
	0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // dot(N, H);.const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, //  float LdotH = d
	0x6f, 0x74, 0x28, 0x4c, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // ot(L, H);.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x56, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, 0x6f, // float VdotH = do
	0x74, 0x28, 0x56, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x4e, 0x64, // t(V, H);.if ((Nd
	0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x4c, // otH > 0.0) && (L
	0x64, 0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, // dotH > 0.0) && (
	0x56, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x4f, 0x75, // VdotH > 0.0)).Ou
	0x74, 0x20, 0x2b, 0x3d, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x6c, // t += FresnelSchl
	0x69, 0x63, 0x6b, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x4c, 0x64, 0x6f, 0x74, // ick(glossy, Ldot
	0x48, 0x2c, 0x20, 0x65, 0x64, 0x67, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x28, 0x67, 0x6c, // H, edge) * (((gl
	0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // ossyPower + 1.0)
	0x20, 0x2f, 0x20, 0x28, 0x38, 0x2e, 0x30, 0x2a, 0x56, 0x64, 0x6f, 0x74, 0x48, 0x29, 0x29, 0x20, //  / (8.0*VdotH)) 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x67, 0x6c, 0x6f, // * pow(NdotH, glo
	0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x63, 0x6f, // ssyPower));.}.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, // nst float sqrl_l
	0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x6c, 0x69, // ightDir = dot(li
	0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2c, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x29, // ghtDir,lightDir)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x3d, // ;.float fAtten =
	0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x73, 0x71, 0x72, //  clamp(1.0 - sqr
	0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2a, 0x73, 0x71, 0x72, 0x6c, 0x5f, // l_lightDir*sqrl_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2f, 0x28, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, // lightDir/(cAmbie
	0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, // nt_LightRange.w*
	0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, // cAmbient_LightRa
	0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, // nge.w*cAmbient_L
	0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, // ightRange.w*cAmb
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, // ient_LightRange.
	0x77, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x66, // w), 0.0, 1.0);.f
	0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x3d, 0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x2a, 0x66, // Atten = fAtten*f
	0x41, 0x74, 0x74, 0x65, 0x6e, 0x2f, 0x28, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, // Atten/(sqrl_ligh
	0x74, 0x44, 0x69, 0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, // tDir + 1.0);.vec
	0x33, 0x20, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x67, 0x6c, 0x6f, 0x73, // 3 ambient = glos
	0x73, 0x79, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, // sy;.if (!is_meta
	0x6c, 0x29, 0x0a, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x2b, 0x3d, 0x20, 0x64, 0x69, // l).ambient += di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // ffuse;.const vec
	0x33, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x20, 0x3d, 0x20, 0x4f, 0x75, 0x74, 0x20, 0x2a, // 3 result = Out *
	0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, //  ballLightEmissi
	0x6f, 0x6e, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x66, 0x41, 0x74, 0x74, // on[i].xyz * fAtt
	0x65, 0x6e, 0x20, 0x2b, 0x20, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x2a, 0x20, 0x63, // en + ambient * c
	0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, // Ambient_LightRan
	0x67, 0x65, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x44, 0x69, 0x73, // ge.xyz;.if (fDis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, // ableLighting_top
	0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, // _below.x != 0.0)
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x72, 0x65, 0x73, 0x75, // .return mix(resu
	0x6c, 0x74, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x66, 0x44, 0x69, 0x73, 0x61, // lt,diffuse,fDisa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, // bleLighting_top_
	0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, // below.x);.else.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, // eturn result;.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, // vec3 DoEnvmapDif
	0x66, 0x75, 0x73, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // fuse(const vec3 
	0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, // N, const vec3 di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // ffuse).{.const v
	0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // ec3 env = textur
	0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // eLod(tex_diffuse
	0x5f, 0x65, 0x6e, 0x76, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, // _env, ray_to_equ
	0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, // irectangular_uv(
	0x4e, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x72, 0x65, // N), 0.0).xyz;.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x65, // turn diffuse * e
	0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, // nv*fenvEmissionS
	0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, // cale_TexWidth.x;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, // .}.vec3 DoEnvmap
	0x47, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // Glossy(const vec
	0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // 3 N, const vec3 
	0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, 0x75, // V, const vec2 Ru
	0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, // v, const vec3 gl
	0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ossy, const floa
	0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x29, 0x0a, 0x7b, // t glossyPower).{
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x69, 0x70, // .const float mip
	0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x66, 0x65, 0x6e, 0x76, //  = min(log2(fenv
	0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, // EmissionScale_Te
	0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // xWidth.y * sqrt(
	0x33, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x35, 0x2a, 0x6c, 0x6f, 0x67, 0x32, // 3.0)) - 0.5*log2
	0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x2b, 0x20, 0x31, // (glossyPower + 1
	0x2e, 0x30, 0x29, 0x2c, 0x20, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, // .0), log2(fenvEm
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, // issionScale_TexW
	0x69, 0x64, 0x74, 0x68, 0x2e, 0x79, 0x29, 0x2d, 0x31, 0x2e, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // idth.y)-1.);.con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, // st vec3 env = te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, // xtureLod(tex_env
	0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x6d, 0x69, 0x70, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // , Ruv, mip).xyz;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, // .return glossy *
	0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, //  env*fenvEmissio
	0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, // nScale_TexWidth.
	0x78, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, // x;.}.vec3 DoEnvm
	0x61, 0x70, 0x32, 0x6e, 0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // ap2ndLayer(const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x31, 0x73, 0x74, 0x4c, 0x61, //  vec3 color1stLa
	0x79, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // yer, const vec3 
	0x70, 0x6f, 0x73, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // pos, const vec3 
	0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, // N, const vec3 V,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, //  const float Ndo
	0x74, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, // tV, const vec2 R
	0x75, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, // uv, const vec3 s
	0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // pecular).{.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x77, 0x20, 0x3d, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, //  vec3 w = Fresne
	0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, 0x6b, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, // lSchlick(specula
	0x72, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, // r, NdotV, Roughn
	0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, // ess_WrapL_Edge_T
	0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // hickness.z);.con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, // st vec3 env = te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, // xtureLod(tex_env
	0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // , Ruv, 0.0).xyz;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .return mix(colo
	0x72, 0x31, 0x73, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2c, 0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, // r1stLayer, env*f
	0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, // envEmissionScale
	0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x2c, 0x20, 0x77, 0x29, 0x3b, // _TexWidth.x, w);
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, // .}.vec3 lightLoo
	0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, // p(const vec3 pos
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // , vec3 N, const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, // vec3 V, vec3 dif
	0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // fuse, vec3 gloss
	0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, // y, const vec3 sp
	0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // ecular, const fl
	0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // oat edge, const 
	0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x7b, // bool is_metal).{
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, // .vec3 color = ve
	0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x66, // c3_splat(0.0);.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // loat NdotV = dot
	0x28, 0x4e, 0x2c, 0x56, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x56, // (N,V);.if (NdotV
	0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x4e, 0x20, 0x3d, 0x20, 0x2d, 0x4e, //  < 0.0).{.N = -N
	0x3b, 0x0a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x2d, 0x4e, 0x64, 0x6f, 0x74, 0x56, // ;.NdotV = -NdotV
	0x3b, 0x0a, 0x7d, 0x0a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, // ;.}.NdotV = min(
	0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // NdotV, 1.0);.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // st float diffuse
	0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // Max = max(diffus
	0x65, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, // e.x,max(diffuse.
	0x79, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, // y,diffuse.z));.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // onst float gloss
	0x79, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, // yMax = max(gloss
	0x79, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x79, // y.x,max(glossy.y
	0x2c, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // ,glossy.z));.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, // st float specula
	0x72, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, // rMax = max(specu
	0x6c, 0x61, 0x72, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, // lar.x,max(specul
	0x61, 0x72, 0x2e, 0x79, 0x2c, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x7a, 0x29, // ar.y,specular.z)
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // );.const float s
	0x75, 0x6d, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, // um = diffuseMax 
	0x2b, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3b, 0x0a, 0x69, 0x66, // + glossyMax ;.if
	0x20, 0x28, 0x73, 0x75, 0x6d, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x26, 0x26, 0x20, 0x66, //  (sum > 1.0 && f
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, // DisableLighting_
	0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x31, 0x2e, // top_below.x < 1.
	0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0).{.const float
	0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x73, 0x75, //  invsum = 1.0/su
	0x6d, 0x3b, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, // m;.diffuse *= in
	0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, 0x3d, 0x20, // vsum;.glossy *= 
	0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x21, // invsum;.}.if ((!
	0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, // is_metal && (dif
	0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, // fuseMax > 0.0)) 
	0x7c, 0x7c, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, // || (glossyMax > 
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x44, 0x69, 0x73, // 0.0)).{.if (fDis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, // ableLighting_top
	0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x29, // _below.x == 1.0)
	0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, // .color += float(
	0x32, 0x29, 0x20, 0x2a, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x3b, 0x0a, 0x65, 0x6c, // 2) * diffuse;.el
	0x73, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, // se for (int i = 
	0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x32, 0x3b, 0x20, 0x69, 0x2b, 0x2b, 0x29, 0x0a, 0x63, // 0; i < 2; i++).c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, // olor += DoPointL
	0x69, 0x67, 0x68, 0x74, 0x28, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, // ight(pos, N, V, 
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, // diffuse, glossy,
	0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, //  edge, Roughness
	0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, // _WrapL_Edge_Thic
	0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x2c, 0x20, 0x69, 0x2c, 0x20, 0x69, 0x73, 0x5f, 0x6d, // kness.x, i, is_m
	0x65, 0x74, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, // etal);.}.if (!is
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, // _metal && (diffu
	0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x63, 0x6f, // seMax > 0.0)).co
	0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, // lor += DoEnvmapD
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, 0x20, 0x28, 0x28, 0x20, 0x28, 0x20, 0x28, 0x76, 0x65, // iffuse( (( ( (ve
	0x63, 0x34, 0x28, 0x4e, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, // c4(N,0.0)) * (ma
	0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, // tView) ) ).xyz),
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, //  diffuse);.if ((
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, // glossyMax > 0.0)
	0x20, 0x7c, 0x7c, 0x20, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, //  || (specularMax
	0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, //  > 0.0)).{.vec3 
	0x52, 0x20, 0x3d, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x29, 0x2a, // R = (2.0*NdotV)*
	0x4e, 0x20, 0x2d, 0x20, 0x56, 0x3b, 0x0a, 0x52, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x20, 0x28, 0x20, // N - V;.R = (( ( 
	0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x52, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, // (vec4(R,0.0)) * 
	0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, // (matView) ) ).xy
	0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, // z);.const vec2 R
	0x75, 0x76, 0x20, 0x3d, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, // uv = ray_to_equi
	0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x52, // rectangular_uv(R
	0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, // );.if (glossyMax
	0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, //  > 0.0).color +=
	0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x47, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x28, //  DoEnvmapGlossy(
	0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // N, V, Ruv, gloss
	0x79, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, // y, Roughness_Wra
	0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, // pL_Edge_Thicknes
	0x73, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, // s.x);.if (specul
	0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, // arMax > 0.0).col
	0x6f, 0x72, 0x20, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x32, 0x6e, 0x64, // or = DoEnvmap2nd
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x70, 0x6f, 0x73, // Layer(color, pos
	0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x52, // , N, V, NdotV, R
	0x75, 0x76, 0x2c, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x29, 0x3b, 0x0a, 0x7d, // uv, specular);.}
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3b, 0x0a, // .return color ;.
	0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, // }.uniform vec4 i
	0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, // nvTableRes_refle
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // ction;.uniform v
	0x65, 0x63, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // ec4 w_h_disableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x61, // ighting;.vec3 ba
	0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, // llLightLoop(cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // t vec3 pos, vec3
	0x20, 0x4e, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, //  N, vec3 V, vec3
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, //  diffuse, vec3 g
	0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // lossy, const vec
	0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // 3 specular, cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, // t float edge, co
	0x6e, 0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, // nst bool is_meta
	0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // l).{.const float
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, //  diffuseMax = ma
	0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, // x(diffuse.x,max(
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x79, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // diffuse.y,diffus
	0x65, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // e.z));.const flo
	0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, // at glossyMax = m
	0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, // ax(glossy.x,max(
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x79, 0x2c, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, // glossy.y,glossy.
	0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // z));.const float
	0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, //  specularMax = m
	0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x78, 0x2c, 0x6d, 0x61, // ax(specular.x,ma
	0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x79, 0x2c, 0x73, 0x70, 0x65, // x(specular.y,spe
	0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // cular.z));.const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, //  float sum = dif
	0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x2b, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, // fuseMax + glossy
	0x4d, 0x61, 0x78, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x73, 0x75, 0x6d, 0x20, 0x3e, 0x20, 0x31, 0x2e, // Max;.if(sum > 1.
	0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0).{.const float
	0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x73, 0x75, //  invsum = 1.0/su
	0x6d, 0x3b, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, // m;.diffuse *= in
	0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, 0x3d, 0x20, // vsum;.glossy *= 
	0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // invsum;.}.vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, // olor = vec3(0.0,
	0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x28, //  0.0, 0.0);.if((
	0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, // !is_metal && (di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // ffuseMax > 0.0))
	0x20, 0x7c, 0x7c, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, //  || (glossyMax >
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x66, 0x6f, 0x72, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, //  0.0)).for(int i
	0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x3b, //  = 0; i < 2 + 8;
	0x20, 0x69, 0x2b, 0x2b, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, //  i++).color += D
	0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x70, 0x6f, 0x73, 0x2c, // oPointLight(pos,
	0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, //  N, V, diffuse, 
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x52, 0x6f, // glossy, edge, Ro
	0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, // ughness_WrapL_Ed
	0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x2c, 0x20, // ge_Thickness.x, 
	0x69, 0x2c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x69, 0x66, // i, is_metal);.if
	0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, // (!is_metal && (d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, // iffuseMax > 0.0)
	0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, // ).color += DoEnv
	0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // mapDiffuse(norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, // lize(( (matView)
	0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x4e, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, //  * (vec4(N, 0.0)
	0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // ) ).xyz), diffus
	0x65, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, // e);.if(specularM
	0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // ax > 0.0).color 
	0x2b, 0x3d, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x3b, 0x0a, 0x72, 0x65, 0x74, // += specular;.ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, 0x69, // urn color;.}.voi
	0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // d main().{.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, //  vec3 V = normal
	0x69, 0x7a, 0x65, 0x28, 0x20, 0x2d, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, // ize( -v_worldPos
	0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // .xyz);.const vec
	0x33, 0x20, 0x4e, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // 3 N = normalize(
	0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, // v_normal.xyz);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x52, 0x20, 0x3d, 0x20, 0x72, 0x65, // onst vec3 R = re
	0x66, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x56, 0x2c, 0x20, 0x4e, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, // flect(V, N);.vec
	0x33, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // 3 ballImageColor
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, // ;.const float ed
	0x67, 0x65, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x56, 0x2c, 0x20, 0x52, 0x29, 0x3b, 0x0a, // ge = dot(V, R);.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x6f, 0x64, 0x20, // const float lod 
	0x3d, 0x20, 0x28, 0x65, 0x64, 0x67, 0x65, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x36, 0x29, 0x20, 0x3f, // = (edge > 0.6) ?
	0x20, 0x65, 0x64, 0x67, 0x65, 0x2a, 0x28, 0x36, 0x2e, 0x30, 0x2a, 0x31, 0x2e, 0x30, 0x2f, 0x30, //  edge*(6.0*1.0/0
	0x2e, 0x34, 0x29, 0x2d, 0x28, 0x36, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x36, 0x2f, 0x30, 0x2e, 0x34, // .4)-(6.0*0.6/0.4
	0x29, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // ) : 0.0;.const v
	0x65, 0x63, 0x33, 0x20, 0x72, 0x76, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x20, 0x28, 0x76, 0x65, 0x63, // ec3 rv = (( (vec
	0x34, 0x28, 0x2d, 0x52, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, // 4(-R,0.0)) * (ma
	0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, // tView) ).xyz);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x20, 0x3d, 0x20, 0x72, // onst vec2 uv = r
	0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, // ay_to_equirectan
	0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x72, 0x76, 0x29, 0x3b, 0x0a, 0x62, 0x61, // gular_uv(rv);.ba
	0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x74, // llImageColor = t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, // extureLod(tex_ba
	0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x75, 0x76, 0x2c, 0x20, 0x6c, 0x6f, // ll_color, uv, lo
	0x64, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // d).rgb;.const ve
	0x63, 0x34, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x20, 0x3d, // c4 decalColorT =
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, //  texture(tex_bal
	0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // l_decal, v_texco
	0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x65, 0x63, 0x61, // ord0);.vec3 deca
	0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, // lColor = decalCo
	0x6c, 0x6f, 0x72, 0x54, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, // lorT.rgb;.decalC
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x3d, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, // olor *= decalCol
	0x6f, 0x72, 0x54, 0x2e, 0x61, 0x3b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, // orT.a;.ballImage
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, // Color += decalCo
	0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, // lor;.if ((w_h_di
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x7a, 0x20, // sableLighting.z 
	0x21, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, // != 0.)).{.gl_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x62, 0x61, // gColor = vec4(ba
	0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x63, 0x42, 0x61, // llImageColor,cBa
	0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x61, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // se_Alpha.a);.ret
	0x75, 0x72, 0x6e, 0x3b, 0x0a, 0x7d, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, // urn;.}.ballImage
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x3d, 0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, // Color *= fenvEmi
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, // ssionScale_TexWi
	0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // dth.x;.const vec
	0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // 3 playfield_norm
	0x61, 0x6c, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, // al = ( (matWorld
	0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, // View) * (float4(
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x31, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x20, 0x29, 0x2e, // 0.,0.,1.,0.)) ).
	0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // xyz;.const float
	0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x70, 0x6c, 0x61, //  NdotR = dot(pla
	0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x52, // yfield_normal, R
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, // );.const vec3 pl
	0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, // ayfield_p0 = ( (
	0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, // matWorldView) * 
	0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x20, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, // (vec4( 0.,0.,0.,
	0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // 1.0)) ).xyz;.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // st float t = dot
	0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // (playfield_norma
	0x6c, 0x2c, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, // l, v_worldPos.xy
	0x7a, 0x20, 0x2d, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x30, // z - playfield_p0
	0x29, 0x20, 0x2f, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // ) / NdotR;.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, //  vec3 playfield_
	0x68, 0x69, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, // hit = v_worldPos
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x74, 0x20, 0x2a, 0x20, 0x52, 0x3b, 0x0a, 0x63, 0x6f, // .xyz - t * R;.co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x20, 0x3d, 0x20, // nst vec4 proj = 
	0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x76, 0x5f, 0x65, 0x79, 0x65, // ( (matProj[v_eye
	0x5d, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, // ]) * (vec4(playf
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x68, 0x69, 0x74, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, // ield_hit, 1.0)) 
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, // );.const vec2 uv
	0x70, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, // p = vec2(0.5, 0.
	0x35, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x78, // 5) + vec2(proj.x
	0x2c, 0x20, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, // , -proj.y) * (0.
	0x35, 0x20, 0x2f, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // 5 / proj.w);.con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // st vec3 playfiel
	0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2a, 0x20, // dColor = 0.25 * 
	0x28, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, // (.texture(tex_ba
	0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x76, 0x65, // ll_playfield, ve
	0x63, 0x33, 0x28, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x77, // c3((uvp + vec2(w
	0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, // _h_disableLighti
	0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x75, // ng.x, 0.)).x, (u
	0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, // vp + vec2(w_h_di
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, // sableLighting.x,
	0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x29, //  0.)).y, v_eye))
	0x2e, 0x72, 0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, // .rgb.+ texture(t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // ex_ball_playfiel
	0x64, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, // d, vec3((uvp - v
	0x65, 0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // ec2(w_h_disableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, // ighting.x, 0.)).
	0x78, 0x2c, 0x20, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x77, // x, (uvp - vec2(w
	0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, // _h_disableLighti
	0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x76, 0x5f, // ng.x, 0.)).y, v_
	0x65, 0x79, 0x65, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, // eye)).rgb.+ text
	0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, // ure(tex_ball_pla
	0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x75, 0x76, // yfield, vec3((uv
	0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, 0x68, // p + vec2(0., w_h
	0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, // _disableLighting
	0x2e, 0x79, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, // .y)).x, (uvp + v
	0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, // ec2(0., w_h_disa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, // bleLighting.y)).
	0x79, 0x2c, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x2b, // y, v_eye)).rgb.+
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, //  texture(tex_bal
	0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x76, 0x65, 0x63, // l_playfield, vec
	0x33, 0x28, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, // 3((uvp - vec2(0.
	0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, // , w_h_disableLig
	0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x75, 0x76, // hting.y)).x, (uv
	0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, 0x68, // p - vec2(0., w_h
	0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, // _disableLighting
	0x2e, 0x79, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x29, 0x2e, // .y)).y, v_eye)).
	0x72, 0x67, 0x62, 0x0a, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x28, 0x75, 0x76, 0x70, // rgb.);.if (!(uvp
	0x2e, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x20, 0x7c, 0x7c, 0x20, 0x75, 0x76, 0x70, 0x2e, 0x78, // .x < 0. || uvp.x
	0x20, 0x3e, 0x20, 0x31, 0x2e, 0x20, 0x7c, 0x7c, 0x20, 0x75, 0x76, 0x70, 0x2e, 0x79, 0x20, 0x3c, //  > 1. || uvp.y <
	0x20, 0x30, 0x2e, 0x20, 0x7c, 0x7c, 0x20, 0x75, 0x76, 0x70, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x31, //  0. || uvp.y > 1
	0x2e, 0x29, 0x0a, 0x26, 0x26, 0x20, 0x21, 0x28, 0x74, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x29, // .).&& !(t <= 0.)
	0x29, 0x0a, 0x7b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, // ).{.ballImageCol
	0x6f, 0x72, 0x20, 0x3d, 0x20, 0x6c, 0x65, 0x72, 0x70, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, // or = lerp(ballIm
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, // ageColor, playfi
	0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, // eldColor, smooth
	0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x35, 0x2c, 0x20, // step(0.0, 0.15, 
	0x4e, 0x64, 0x6f, 0x74, 0x52, 0x29, 0x20, 0x2a, 0x20, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, // NdotR) * invTabl
	0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, // eRes_reflection.
	0x7a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, // z);.}.ballImageC
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, // olor = min(ballI
	0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // mageColor, float
	0x33, 0x28, 0x31, 0x35, 0x2e, 0x2c, 0x20, 0x31, 0x35, 0x2e, 0x2c, 0x20, 0x31, 0x35, 0x2e, 0x29, // 3(15., 15., 15.)
	0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, // );.vec3 diffuse 
	0x3d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, // = cBase_Alpha.rg
	0x62, 0x2a, 0x30, 0x2e, 0x30, 0x37, 0x35, 0x3b, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // b*0.075;.diffuse
	0x20, 0x2a, 0x3d, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, //  *= decalColor;.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // const vec3 gloss
	0x79, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2a, // y = max(diffuse*
	0x32, 0x2e, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x2c, 0x30, 0x2e, // 2.0, vec3(0.1,0.
	0x31, 0x2c, 0x30, 0x2e, 0x31, 0x29, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, // 1,0.1));.vec3 sp
	0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x20, 0x3d, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, // ecular = ballIma
	0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, // geColor * cBase_
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x75, // Alpha.rgb;.specu
	0x6c, 0x61, 0x72, 0x20, 0x2a, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x2c, 0x31, // lar *= vec3(1.,1
	0x2e, 0x2c, 0x31, 0x2e, 0x29, 0x2d, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // .,1.)-decalColor
	0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x72, // ;.gl_FragColor.r
	0x67, 0x62, 0x20, 0x3d, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, // gb = ballLightLo
	0x6f, 0x70, 0x28, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, // op(v_worldPos.xy
	0x7a, 0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // z, N, V, diffuse
	0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, // , glossy, specul
	0x61, 0x72, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, // ar, 1.0, false);
	0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x61, 0x20, // .gl_FragColor.a 
	0x3d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x61, 0x3b, // = cBase_Alpha.a;
	0x0a, 0x7d, 0x0a, 0x00,                                                                         // .}..
};
static const uint8_t fs_ball_equirectangular_nodecal_st_dx11[8088] =
{
	0x46, 0x53, 0x48, 0x0b, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x07, 0x6d, // FSH..N.........m
	0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x14, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, // atView..........
	0x0c, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x14, 0x00, 0x40, // .matWorldView..@
	0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x14, // ........matProj.
	0x02, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, // ..........ballLi
	0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x0a, 0x00, 0x01, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, // ghtPos..........
	0x11, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, // .ballLightEmissi
	0x6f, 0x6e, 0x12, 0x0a, 0xa0, 0x01, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x63, 0x41, 0x6d, // on...........cAm
	0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, // bient_LightRange
	0x12, 0x00, 0x40, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x65, 0x6e, 0x76, 0x45, // ..@........fenvE
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, // missionScale_Tex
	0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x00, 0x50, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // Width..P........
	0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, // fDisableLighting
	0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x12, 0x00, 0x60, 0x02, 0x01, 0x00, // _top_below..`...
	0x00, 0x00, 0x00, 0x00, 0x0b, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, // .....cBase_Alpha
	0x12, 0x00, 0x70, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x52, 0x6f, 0x75, 0x67, 0x68, // ..p........Rough
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, // ness_WrapL_Edge_
	0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x00, 0x80, 0x02, 0x01, 0x00, 0x00, // Thickness.......
	0x00, 0x00, 0x00, 0x16, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, // ....invTableRes_
	0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x00, 0x90, 0x02, 0x01, 0x00, // reflection......
	0x00, 0x00, 0x00, 0x00, 0x13, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // .....w_h_disable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x00, 0xa0, 0x02, 0x01, 0x00, 0x00, 0x00, // Lighting........
	0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // ...tex_ball_colo
	0x72, 0x30, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, // r0..........tex_
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x30, 0x01, 0x02, 0x00, 0x01, // diffuse_env0....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, // ......tex_ball_d
	0x65, 0x63, 0x61, 0x6c, 0x30, 0x01, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x74, // ecal0..........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // ex_ball_playfiel
	0x64, 0x30, 0x01, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, // d0..........tex_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x01, 0x00, 0x00, 0x01, 0x00, // ball_color0.....
	0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // .....tex_diffuse
	0x5f, 0x65, 0x6e, 0x76, 0x30, 0x01, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, // _env0..........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x30, 0x01, 0x03, // ex_ball_decal0..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // ........tex_ball
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x30, 0x01, 0x04, 0x00, 0x01, 0x00, // _playfield0.....
	0x00, 0x00, 0x00, 0x00, 0x5c, 0x1d, 0x00, 0x00, 0x44, 0x58, 0x42, 0x43, 0x0f, 0xca, 0xbc, 0xc5, // ........DXBC....
	0x3d, 0x8a, 0x66, 0x4a, 0x48, 0xd3, 0x07, 0x75, 0x55, 0xaf, 0xdf, 0x02, 0x01, 0x00, 0x00, 0x00, // =.fJH..uU.......
	0x5c, 0x1d, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00, // ........,.......
	0x04, 0x01, 0x00, 0x00, 0x49, 0x53, 0x47, 0x4e, 0x9c, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, // ....ISGN........
	0x08, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, // ................
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x01, 0x01, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0e, 0x0e, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x03, 0x03, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, // ............SV_P
	0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, // OSITION.TEXCOORD
	0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x4f, 0x53, 0x47, 0x4e, 0x2c, 0x00, 0x00, 0x00, // .NORMAL.OSGN,...
	0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........ .......
	0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, // ................
	0x53, 0x56, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x00, 0xab, 0xab, 0x53, 0x48, 0x45, 0x58, // SV_TARGET...SHEX
	0x50, 0x1c, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x14, 0x07, 0x00, 0x00, 0x6a, 0x28, 0x00, 0x01, // P...P.......j(..
	0x59, 0x08, 0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, // Y...F. .....+...
	0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, // Z....`......Z...
	0x00, 0x60, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, // .`......Z....`..
	0x03, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ....Z....`......
	0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, // X....p......UU..
	0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, // X....p......UU..
	0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, // X....p......UU..
	0x58, 0x40, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, // X@...p......UU..
	0x62, 0x10, 0x00, 0x03, 0x12, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, // b...........b...
	0xe2, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x32, 0x10, 0x10, 0x00, // ........b...2...
	0x02, 0x00, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x72, 0x10, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....b...r.......
	0x65, 0x00, 0x00, 0x03, 0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x02, // e.... ......h...
	0x0c, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x46, 0x12, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x80, // F...A.......F...
	0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x12, 0x00, 0x10, 0x00, // A.......D.......
	0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, // ............8...
	0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // r...............
	0x46, 0x12, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, // F...A...........
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x17, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x96, 0x17, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, // ........D.......
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ....:.......8...
	0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // r...............
	0x96, 0x17, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // :.......:.......
	0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 2...r.......F...
	0x01, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........A.......
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // F...............
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x02, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....1...........
	0x01, 0x40, 0x00, 0x00, 0x9a, 0x99, 0x19, 0x3f, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // .@.....?:.......
	0x32, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 2...........:...
	0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x70, 0x41, 0x01, 0x40, 0x00, 0x00, // .....@....pA.@..
	0x00, 0x00, 0x10, 0xc1, 0x01, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // :.......:.......
	0x10, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, // ............F...
	0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // A.......F. .....
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // F...A.......F. .
	0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, // ................
	0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ....F...A.......
	0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x08, // F. .............
	0x22, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, // "........@.....8
	0x3a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x08, // :...............
	0x42, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, // B........@.....8
	0x3a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, // :...............
	0x22, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ".......*.......
	0x1a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x42, 0x00, 0x10, 0x00, // ............B...
	0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ....:...........
	0x3a, 0x00, 0x10, 0x80, 0xc1, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, // :...............
	0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, // ........:.......
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ....:...........
	0x0e, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // ....B.......*...
	0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, // ....:.......1...
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........:.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, // .@......7.......
	0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....:........@..
	0x00, 0x00, 0xc0, 0x3e, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x38, 0x00, 0x00, 0x07, // ...>.@.....>8...
	0x12, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ........*.......
	0x2a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, // *.......2.......
	0x04, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // .............@..
	0xd0, 0x1d, 0x0a, 0x3d, 0x01, 0x40, 0x00, 0x00, 0xdc, 0xe7, 0x20, 0xbe, 0x37, 0x00, 0x00, 0x0a, // ...=.@.... .7...
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........:.......
	0x2a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // *...A.......*...
	0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....2...........
	0x0a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........:.......
	0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // :.......1.......
	0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....:........@..
	0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x0a, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....7...........
	0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // :.......:...A...
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // ....:...........
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........:.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x37, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, // .@.....?7.......
	0x04, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // .............@..
	0x00, 0x00, 0x00, 0x3f, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, // ...?:...........
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0xc1, 0x00, 0x00, 0x00, // ................
	0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x1d, 0x00, 0x00, 0x07, // .....@.....?....
	0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ................
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, // .@......7..."...
	0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....:........@..
	0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x31, 0x00, 0x00, 0x07, // .....@.....?1...
	0x42, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, // B........@.....8
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x12, 0x00, 0x10, 0x00, // :.......2.......
	0x03, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ................
	0x01, 0x40, 0x00, 0x00, 0x1a, 0x5b, 0x4b, 0xbd, 0x01, 0x40, 0x00, 0x00, 0x66, 0x00, 0xff, 0x3e, // .@...[K..@..f..>
	0x4b, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // K...........:...
	0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....8...........
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // :...............
	0x32, 0x00, 0x00, 0x0a, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, // 2...............
	0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // A.......:.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x37, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, // .@.....?7.......
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ....:.......:...
	0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, // ....:.......7...
	0x22, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ".......*.......
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // :...............
	0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, // H.......CU..r...
	0x03, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, // ....F.......F~..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // .....`......:...
	0x00, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, // ....E.......CU..
	0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........F.......
	0x46, 0x7e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // F~.......`......
	0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // 8...r...........
	0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, // ....F.......2...
	0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // r.......F.......
	0xf6, 0x0f, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ........F.......
	0x39, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x80, 0x20, 0x00, // 9...........*. .
	0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....*....@......
	0x1f, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, // ....:.......6...
	0x82, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // . ......:. .....
	0x27, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x72, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // '...6...r ......
	0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x01, 0x15, 0x00, 0x00, 0x01, // F.......>.......
	0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 8...r.......F...
	0x03, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, // ...... .....%...
	0x10, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // ............F. .
	0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........F.......
	0x00, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, // ....r.......F...
	0x03, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....F. .A.......
	0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // F. .........F...
	0x06, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // :.......:.......
	0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x80, // 2...r...........
	0x41, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // A.......F.......
	0x46, 0x12, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, // F...............
	0x02, 0x00, 0x00, 0x00, 0x0a, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x07, // ............)...
	0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........:.......
	0x01, 0x40, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, // .@......8...r...
	0x06, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x83, 0x20, 0x06, // ....V.......F. .
	0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........:.......
	0x32, 0x00, 0x00, 0x0c, 0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x83, 0x20, 0x06, // 2...r.......F. .
	0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........:.......
	0x06, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ........F.......
	0x32, 0x00, 0x00, 0x0c, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x83, 0x20, 0x06, // 2...r.......F. .
	0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........:.......
	0xa6, 0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ........F.......
	0x00, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....r.......F...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x83, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, // ....F. .........
	0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, // :...........B...
	0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x2a, 0x00, 0x10, 0x00, // .....@.....?*...
	0x02, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....6...........
	0x1a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, // ....A.......2...
	0x32, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // 2...............
	0xa6, 0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, // .........@.....?
	0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x0a, // ...?........1...
	0x32, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // 2.......F.......
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .@..............
	0x00, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x0a, 0xc2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ....1...........
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // .@.............?
	0x00, 0x00, 0x80, 0x3f, 0x06, 0x04, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x07, // ...?........<...
	0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ........*.......
	0x0a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ........<.......
	0x03, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x03, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....<...........
	0x3a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // :.......:.......
	0x3b, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ;...........:...
	0x03, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....1...........
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // .@......:.......
	0x01, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, // ....:...........
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x32, 0x00, 0x10, 0x00, // :...........2...
	0x06, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x80, 0x20, 0x00, // ....F.......F. .
	0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x42, 0x00, 0x10, 0x00, // ....*...6...B...
	0x06, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, // ............6...
	0x82, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0a, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x45, 0x00, 0x00, 0x8b, 0x02, 0x02, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, // E.......CU..r...
	0x07, 0x00, 0x00, 0x00, 0x86, 0x03, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, // ............F~..
	0x04, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, // .....`..........
	0x32, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // 2.......F.......
	0x46, 0x80, 0x20, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, // F. .A.......*...
	0x36, 0x00, 0x00, 0x05, 0xc2, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0xa6, 0x0e, 0x10, 0x00, // 6...............
	0x06, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, 0x02, 0x02, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, // ....E.......CU..
	0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x86, 0x03, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // r...............
	0x46, 0x7e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // F~.......`......
	0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....r.......F...
	0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, // ....F.......6...
	0xc2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x56, 0x0d, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ........V.......
	0x45, 0x00, 0x00, 0x8b, 0x02, 0x02, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, // E.......CU..r...
	0x06, 0x00, 0x00, 0x00, 0x86, 0x03, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, // ............F~..
	0x04, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // .....`..........
	0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x02, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x52, 0x00, 0x10, 0x00, // F.......6...R...
	0x08, 0x00, 0x00, 0x00, 0x06, 0x03, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, // ............E...
	0x02, 0x02, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....CU..r.......
	0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // F.......F~......
	0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // .`..........r...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x06, 0x00, 0x00, 0x00, 0x38, 0x20, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....8 ..........
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x55, 0x55, 0xd5, 0x40, // :........@..UU.@
	0x32, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 2...........:...
	0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x40, 0x00, 0x00, // .....@.......@..
	0x00, 0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ..@@8...........
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // :.......:.......
	0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 8...........:...
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, // ....:.......8...
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........:.......
	0x2a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0d, // *. .....)...2...
	0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // r.......F.......
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3e, 0x00, 0x00, 0x80, 0x3e, 0x00, 0x00, 0x80, 0x3e, // .@.....>...>...>
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ....F...A.......
	0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // 2...r...........
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x03, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, 0x33, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, // ........3...r...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // ....F........@..
	0x00, 0x00, 0x70, 0x41, 0x00, 0x00, 0x70, 0x41, 0x00, 0x00, 0x70, 0x41, 0x00, 0x00, 0x00, 0x00, // ..pA..pA..pA....
	0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 8...r.......F...
	0x05, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, // ....F. .....'...
	0x38, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 8...r.......F...
	0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x9a, 0x99, 0x99, 0x3d, 0x9a, 0x99, 0x99, 0x3d, // .....@.....=...=
	0x9a, 0x99, 0x99, 0x3d, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, // ...=....8...r...
	0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // ....F........@..
	0x9a, 0x99, 0x19, 0x3e, 0x9a, 0x99, 0x19, 0x3e, 0x9a, 0x99, 0x19, 0x3e, 0x00, 0x00, 0x00, 0x00, // ...>...>...>....
	0x34, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 4...r.......F...
	0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xcd, 0xcc, 0xcc, 0x3d, 0xcd, 0xcc, 0xcc, 0x3d, // .....@.....=...=
	0xcd, 0xcc, 0xcc, 0x3d, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, // ...=....8...r...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // ....F.......F. .
	0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0d, 0x72, 0x00, 0x10, 0x00, // ....'...2...r...
	0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // ....F...A.......
	0xf6, 0x0f, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // .........@.....?
	0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ...?...?....8...
	0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // F.......4.......
	0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, // ....*...........
	0x05, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....4...........
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // :...............
	0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // 4...........*...
	0x03, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, // ............4...
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........:.......
	0x0a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ........4.......
	0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, // ....*...........
	0x06, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....4...........
	0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // :...............
	0x00, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, // ....:.......1...
	0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // .........@.....?
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0a, 0x82, 0x00, 0x10, 0x00, // :...............
	0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, // .....@.....?...?
	0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ...?...?:.......
	0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // 8...r...........
	0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ....F.......8...
	0x72, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // r...............
	0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, // F.......7...r...
	0x05, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, // ....F.......7...
	0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // r...............
	0x46, 0x02, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // F.......F.......
	0x00, 0x00, 0x00, 0x0b, 0x32, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x16, 0x85, 0x20, 0x00, // ....2......... .
	0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // ....(....@.....?
	0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ...?........8...
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ................
	0x0a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, // ........8.......
	0x03, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, // ....:. .....$...
	0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, // :. .....$.......
	0xd2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // ............A...
	0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, // .....@.....?....
	0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ...?...?8.......
	0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ....:.......:...
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ........r.......
	0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // F.......F.......
	0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 8...r.......F...
	0x07, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, // ....F. .....$...
	0x39, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x00, // 9............. .
	0x00, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....&....@......
	0x36, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // 6...r........@..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x36, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // 6............@..
	0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x01, 0x21, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ....0...!.......
	0x07, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....:........@..
	0x0a, 0x00, 0x00, 0x00, 0x03, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ........:.......
	0x38, 0x00, 0x00, 0x0b, 0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // 8...r.......F. .
	0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x56, 0x85, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, // ........V. .....
	0x10, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0d, // ....:.......2...
	0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // r.......F. .....
	0x00, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, // ...... .........
	0x3a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // :.......F.......
	0x32, 0x00, 0x00, 0x0d, 0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // 2...r.......F. .
	0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa6, 0x8a, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, // .......... .....
	0x10, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....:.......F...
	0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ........r.......
	0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // F.......F. .....
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ........r.......
	0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // F.......F...A...
	0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // F.......F.......
	0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // D...........:...
	0x07, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, // ....8...r.......
	0xf6, 0x0f, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ........F.......
	0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, // ....F...........
	0x82, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ........:.......
	0x1a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, // .. .....(...1...
	0x12, 0x00, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........@......
	0x3a, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // :...............
	0x0a, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ....:.......:...
	0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0xe2, 0x00, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, // ....8...........
	0x06, 0x09, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, // ................
	0x01, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, // ....r...........
	0x0b, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, // ............1...
	0x82, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........@......
	0x3a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, // :...........:...
	0x09, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ....2...r.......
	0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // F...............
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // F...............
	0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x09, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ....D...........
	0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // :.......8...r...
	0x09, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x09, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // F.......F.......
	0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x0a, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, // ....F...........
	0x12, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........F.......
	0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, // F.......1..."...
	0x09, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // .....@......:...
	0x08, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ....1...B.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // .@......:.......
	0x01, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // ....".......*...
	0x09, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, // ............1...
	0x42, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // B........@......
	0x0a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, // ............"...
	0x09, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, // ....*...........
	0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x42, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ........B.......
	0x3a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // :...A........@..
	0x00, 0x00, 0x80, 0x3f, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ...?8...........
	0x2a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // *.......*.......
	0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 8...........:...
	0x09, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ....:.......8...
	0x42, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // B.......:.......
	0x2a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, // *.......2...r...
	0x0a, 0x00, 0x00, 0x00, 0x86, 0x03, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, // ................
	0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ....F.......8...
	0x12, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ................
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, // .@.....A........
	0x09, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ................
	0x09, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ..../...........
	0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, // :.......8.......
	0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x00, // ....:......... .
	0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, // ....(...........
	0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ....:.......8...
	0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ........:.......
	0x0a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xd2, 0x00, 0x10, 0x00, // ........2.......
	0x09, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // ................
	0x08, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, // ............7...
	0x72, 0x00, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // r.......V.......
	0x86, 0x03, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, // ........F.......
	0x15, 0x00, 0x00, 0x01, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ....8...........
	0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // :.......:.......
	0x0e, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x08, // ....:........ ..
	0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // ........:...A...
	0x08, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x38, 0x00, 0x00, 0x07, // .....@.....?8...
	0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ........:.......
	0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // :...............
	0x07, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....:........@..
	0x00, 0x00, 0x80, 0x3f, 0x0e, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ...?............
	0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // :.......:.......
	0x38, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 8...r.......F...
	0x0b, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, // ....F. .........
	0x3a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, // :.......2...r...
	0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // ....F...........
	0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, // ....F...........
	0x72, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, // F...A.......2...
	0x72, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // r......... .....
	0x26, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // &...F.......F...
	0x09, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ....7...r.......
	0xf6, 0x0f, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, // ........F.......
	0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // F...........r...
	0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x09, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // ................
	0x3a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // :........@......
	0x16, 0x00, 0x00, 0x01, 0x31, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....1...........
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // .@......:.......
	0x1f, 0x00, 0x04, 0x03, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, // ............8...
	0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // r.......V.......
	0x16, 0x86, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, // .. .........2...
	0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x86, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // r......... .....
	0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....2...r.......
	0x16, 0x86, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, // .. .............
	0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, // ....F...........
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........F.......
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, // F.......D.......
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ....:.......8...
	0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // r...............
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x0b, 0x32, 0x00, 0x10, 0x00, // F...........2...
	0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, 0x00, 0x00, 0x80, 0x38, // .....@.....8...8
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x05, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x1a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, // ................
	0xc1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........".......
	0x0a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, // ................
	0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x0a, 0x32, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....1...2.......
	0x16, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........@......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, // ............7...
	0x22, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // "...............
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x3e, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, // .@.....>.@.....>
	0x38, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // 8...B...........
	0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, // ............2...
	0x42, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // B.......*.......
	0x01, 0x40, 0x00, 0x00, 0xd0, 0x1d, 0x0a, 0x3d, 0x01, 0x40, 0x00, 0x00, 0xdc, 0xe7, 0x20, 0xbe, // .@.....=.@.... .
	0x37, 0x00, 0x00, 0x0a, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // 7...............
	0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ........A.......
	0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, // ........2.......
	0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ....*...........
	0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x0a, // ............7...
	0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x0a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ....A...........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, // .........@.....?
	0x37, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 7...........:...
	0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x0a, 0x00, 0x10, 0x00, // .....@.....?....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x2a, 0x00, 0x10, 0x80, 0xc1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // *............@..
	0x00, 0x00, 0x80, 0x3f, 0x1d, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ...?............
	0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // *........@......
	0x37, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // 7..."...........
	0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // .....@.......@..
	0x00, 0x00, 0x80, 0x3f, 0x31, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ...?1...B.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // .@.....8:.......
	0x32, 0x00, 0x00, 0x0a, 0x42, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x80, // 2...B.......*...
	0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x1a, 0x5b, 0x4b, 0xbd, // .........@...[K.
	0x01, 0x40, 0x00, 0x00, 0x66, 0x00, 0xff, 0x3e, 0x4b, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, // .@..f..>K.......
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ....:.......8...
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........:.......
	0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x42, 0x00, 0x10, 0x00, // *.......2...B...
	0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....*...A.......
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // :........@.....?
	0x37, 0x00, 0x00, 0x09, 0x42, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // 7...B...........
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // ....:.......*...
	0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....7...".......
	0x2a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // *.......*.......
	0x1a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, // ........H.......
	0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, // CU..r.......F...
	0x00, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, // ....F~.......`..
	0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // .....@......8...
	0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, // F.......2...r...
	0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x00, // ....F......... .
	0x00, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ....%...F.......
	0x15, 0x00, 0x00, 0x01, 0x31, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....1...........
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // .@......:.......
	0x32, 0x00, 0x00, 0x09, 0xe2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, // 2...............
	0x02, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, // ................
	0x08, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....7...r ......
	0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0x82, 0x20, 0x10, 0x00, // F.......6.... ..
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, // ....:. .....'...
	0x3e, 0x00, 0x00, 0x01, 0x00, 0x00, 0xb0, 0x02,                                                 // >.......
};
static const uint8_t fs_ball_equirectangular_nodecal_st_spv[13491] =
{
	0x46, 0x53, 0x48, 0x0b, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x0c, 0x62, // FSH..N.........b
	0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x0a, 0x00, 0x01, 0x0a, // allLightPos.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x14, 0x01, 0x00, // ......matView...
	0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, // ........Roughnes
	0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, // s_WrapL_Edge_Thi
	0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x01, 0x80, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // ckness..........
	0x13, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, // .cAmbient_LightR
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x01, 0x40, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x62, // ange..@........b
	0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, // allLightEmission
	0x12, 0x0a, 0xa0, 0x01, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x44, 0x69, 0x73, 0x61, // ...........fDisa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, // bleLighting_top_
	0x62, 0x65, 0x6c, 0x6f, 0x77, 0x12, 0x01, 0x60, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // below..`........
	0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, // fenvEmissionScal
	0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x01, 0x50, 0x02, 0x01, 0x00, // e_TexWidth..P...
	0x00, 0x00, 0x00, 0x00, 0x13, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // .....w_h_disable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x01, 0xa0, 0x02, 0x01, 0x00, 0x00, 0x00, // Lighting........
	0x00, 0x00, 0x0b, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x01, // ...cBase_Alpha..
	0x70, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, // p........matWorl
	0x64, 0x56, 0x69, 0x65, 0x77, 0x14, 0x01, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // dView..@........
	0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x14, 0x02, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, // matProj.........
	0x00, 0x16, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, // ..invTableRes_re
	0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x01, 0x90, 0x02, 0x01, 0x00, 0x00, 0x00, // flection........
	0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // ...tex_ball_colo
	0x72, 0x30, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, // r0......."..tex_
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x30, 0x00, 0x04, 0x00, 0x00, // diffuse_env0....
	0x00, 0x00, 0x02, 0x22, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, // ..."..tex_ball_d
	0x65, 0x63, 0x61, 0x6c, 0x30, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0x12, 0x74, // ecal0......."..t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // ex_ball_playfiel
	0x64, 0x30, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x03, 0x22, 0x00, 0xe0, 0x32, 0x00, 0x00, 0x03, // d0......."..2...
	0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x0b, 0x00, 0x08, 0x00, 0x45, 0x07, 0x00, 0x00, 0x00, // .#.........E....
	0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x06, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30, 0x00, // ...GLSL.std.450.
	0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, // ................
	0x00, 0x0a, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, // ...........main.
	0x00, 0x00, 0x00, 0x77, 0x03, 0x00, 0x00, 0x7b, 0x03, 0x00, 0x00, 0x7f, 0x03, 0x00, 0x00, 0x82, // ...w...{........
	0x03, 0x00, 0x00, 0x93, 0x03, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x03, // ................
	0x00, 0x03, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x6f, // ...main........o
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // ...tex_ball_colo
	0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x72, // rSampler.......r
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // ...tex_ball_colo
	0x72, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x7c, // rTexture.......|
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, // ...tex_diffuse_e
	0x6e, 0x76, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x7e, // nvSampler......~
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, // ...tex_diffuse_e
	0x6e, 0x76, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x82, // nvTexture.......
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, // ...tex_ball_deca
	0x6c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x84, // lSampler........
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, // ...tex_ball_deca
	0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x09, 0x00, 0x89, // lTexture........
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, // ...tex_ball_play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, // fieldSampler....
	0x00, 0x09, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // .......tex_ball_
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // playfieldTexture
	0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x55, 0x6e, 0x69, 0x66, 0x6f, // .......+...Unifo
	0x72, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x05, 0x00, 0x2b, // rmBlock........+
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x00, 0x06, // .......matView..
	0x00, 0x07, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x57, 0x6f, // ...+.......matWo
	0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x05, 0x00, 0x2b, // rldView........+
	0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x00, 0x06, // .......matProj..
	0x00, 0x07, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x62, 0x61, 0x6c, 0x6c, 0x4c, // ...+.......ballL
	0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x2b, // ightPos........+
	0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, // .......ballLight
	0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x2b, // Emission.......+
	0x01, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, // .......cAmbient_
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x00, 0x06, 0x00, 0x0a, 0x00, 0x2b, // LightRange.....+
	0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, // .......fenvEmiss
	0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, // ionScale_TexWidt
	0x68, 0x00, 0x00, 0x06, 0x00, 0x0a, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x66, // h......+.......f
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, // DisableLighting_
	0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x2b, // top_below......+
	0x01, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, // .......cBase_Alp
	0x68, 0x61, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x52, // ha.....+.......R
	0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, // oughness_WrapL_E
	0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x00, 0x00, 0x06, // dge_Thickness...
	0x00, 0x09, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x69, 0x6e, 0x76, 0x54, 0x61, // ...+.......invTa
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, // bleRes_reflectio
	0x6e, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x77, // n......+.......w
	0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, // _h_disableLighti
	0x6e, 0x67, 0x00, 0x05, 0x00, 0x03, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, // ng.....-........
	0x00, 0x04, 0x00, 0x77, 0x03, 0x00, 0x00, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x00, 0x00, 0x00, 0x05, // ...w...v_eye....
	0x00, 0x05, 0x00, 0x7b, 0x03, 0x00, 0x00, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x00, // ...{...v_normal.
	0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0x7f, 0x03, 0x00, 0x00, 0x76, 0x5f, 0x74, 0x65, 0x78, // ...........v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x05, 0x00, 0x05, 0x00, 0x82, 0x03, 0x00, 0x00, 0x76, // coord0.........v
	0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x93, // _worldPos.......
	0x03, 0x00, 0x00, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, // ...bgfx_FragData
	0x30, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x6f, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // 0..G...o..."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x6f, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x12, // ...G...o...!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x72, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G...r..."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x72, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x02, // ...G...r...!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G...|..."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x14, // ...G...|...!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G...~..."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x04, // ...G...~...!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x82, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G......."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x82, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x15, // ...G.......!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x84, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G......."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x84, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x05, // ...G.......!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x89, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G......."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x89, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x16, // ...G.......!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G......."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x06, // ...G.......!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x27, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x40, // ...G...'.......@
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x29, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x10, // ...G...)........
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x2a, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x10, // ...G...*........
	0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, // ...H...+........
	0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, // ...H...+.......#
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x00, // .......H...+....
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, 0x2b, // ...........H...+
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2b, // ...........H...+
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x48, // .......#...@...H
	0x00, 0x05, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, // ...+............
	0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, // ...H...+........
	0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x23, // ...H...+.......#
	0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x02, // .......H...+....
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2b, // ...........H...+
	0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x48, // .......#.......H
	0x00, 0x05, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0xa0, // ...+.......#....
	0x01, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x23, // ...H...+.......#
	0x00, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x06, // ...@...H...+....
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x50, 0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2b, // ...#...P...H...+
	0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0x48, // .......#...`...H
	0x00, 0x05, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x70, // ...+.......#...p
	0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x23, // ...H...+.......#
	0x00, 0x00, 0x00, 0x80, 0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x0a, // .......H...+....
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x90, 0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2b, // ...#.......H...+
	0x01, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0xa0, 0x02, 0x00, 0x00, 0x47, // .......#.......G
	0x00, 0x03, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x2d, // ...+.......G...-
	0x01, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x2d, // ...".......G...-
	0x01, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x77, // ...!.......G...w
	0x03, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x7b, // ...........G...{
	0x03, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x7f, // ...........G....
	0x03, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x82, // ...........G....
	0x03, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x93, // ...........G....
	0x03, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x21, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, // ...!............
	0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, // ............... 
	0x00, 0x00, 0x00, 0x19, 0x00, 0x09, 0x00, 0x08, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x19, 0x00, 0x09, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, 0x44, // ...............D
	0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x45, // ... ...........E
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, // ... ...n........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x6f, 0x00, 0x00, 0x00, 0x00, // ...;...n...o....
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x71, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, // ... ...q........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x71, 0x00, 0x00, 0x00, 0x72, 0x00, 0x00, 0x00, 0x00, // ...;...q...r....
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, // ...;...n...|....
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x71, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, // ...;...q...~....
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x00, // ...;...n........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x71, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00, // ...;...q........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00, 0x00, // ...;...n........
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x8b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // ... ............
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x8b, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x00, // ...;............
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x44, 0x00, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00, 0x01, // ...+...D........
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x44, 0x00, 0x00, 0x00, 0x93, 0x00, 0x00, 0x00, 0x00, // ...+...D........
	0x00, 0x00, 0x00, 0x1b, 0x00, 0x03, 0x00, 0x97, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, // ................
	0x00, 0x03, 0x00, 0xac, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...........+....
	0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........?+....
	0x00, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........8+....
	0x00, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...........+....
	0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00, 0x1a, 0x5b, 0x4b, 0xbd, 0x2b, 0x00, 0x04, 0x00, 0x07, // ........[K.+....
	0x00, 0x00, 0x00, 0xd3, 0x00, 0x00, 0x00, 0x66, 0x00, 0xff, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, // .......f..>+....
	0x00, 0x00, 0x00, 0xf6, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........>+....
	0x00, 0x00, 0x00, 0xf7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........>+....
	0x00, 0x00, 0x00, 0xf9, 0x00, 0x00, 0x00, 0xd0, 0x1d, 0x0a, 0x3d, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........=+....
	0x00, 0x00, 0x00, 0x0e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x15, 0x00, 0x04, 0x00, 0x0f, // ..........?.....
	0x01, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x0f, // ... .......+....
	0x01, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x0f, // ...........+....
	0x01, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x0f, // ...........+....
	0x01, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...........+....
	0x00, 0x00, 0x00, 0x1f, 0x01, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x40, 0x18, 0x00, 0x04, 0x00, 0x26, // ..........@....&
	0x01, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x27, // ...............'
	0x01, 0x00, 0x00, 0x26, 0x01, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x0f, // ...&.......+....
	0x01, 0x00, 0x00, 0x28, 0x01, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x29, // ...(...........)
	0x01, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x28, 0x01, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x2a, // .......(.......*
	0x01, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x28, 0x01, 0x00, 0x00, 0x1e, 0x00, 0x0e, 0x00, 0x2b, // .......(.......+
	0x01, 0x00, 0x00, 0x26, 0x01, 0x00, 0x00, 0x26, 0x01, 0x00, 0x00, 0x27, 0x01, 0x00, 0x00, 0x29, // ...&...&...'...)
	0x01, 0x00, 0x00, 0x2a, 0x01, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, // ...*............
	0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x2c, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, // ... ...,.......+
	0x01, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x2c, 0x01, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x02, // ...;...,...-....
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x44, 0x00, 0x00, 0x00, 0x2e, 0x01, 0x00, 0x00, 0x03, // ...+...D........
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x2f, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0d, // ... .../........
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x37, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x26, // ... ...7.......&
	0x01, 0x00, 0x00, 0x2c, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x44, 0x01, 0x00, 0x00, 0xcb, // ...,.......D....
	0x00, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x44, // ...........+...D
	0x00, 0x00, 0x00, 0x47, 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x48, // ...G....... ...H
	0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...........+....
	0x00, 0x00, 0x00, 0x79, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x2b, 0x00, 0x04, 0x00, 0x44, // ...y......A+...D
	0x00, 0x00, 0x00, 0x8b, 0x01, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x0f, // ...........+....
	0x01, 0x00, 0x00, 0x8c, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x44, // ...........+...D
	0x00, 0x00, 0x00, 0xa9, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x44, // ...........+...D
	0x00, 0x00, 0x00, 0xb6, 0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x44, // ...........+...D
	0x00, 0x00, 0x00, 0xd3, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x44, // ...........+...D
	0x00, 0x00, 0x00, 0x14, 0x02, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...........+....
	0x00, 0x00, 0x00, 0x53, 0x02, 0x00, 0x00, 0x9a, 0x99, 0x19, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...S......?+....
	0x00, 0x00, 0x00, 0x56, 0x02, 0x00, 0x00, 0x00, 0x00, 0x70, 0x41, 0x2b, 0x00, 0x04, 0x00, 0x44, // ...V.....pA+...D
	0x00, 0x00, 0x00, 0x82, 0x02, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x44, // ...........+...D
	0x00, 0x00, 0x00, 0x89, 0x02, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x07, 0x00, 0x0d, // ...........,....
	0x00, 0x00, 0x00, 0x96, 0x02, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xc4, // ................
	0x00, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xa0, // .......,........
	0x02, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xc4, // ................
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x44, 0x00, 0x00, 0x00, 0xb9, 0x02, 0x00, 0x00, 0x02, // ...+...D........
	0x00, 0x00, 0x00, 0x2c, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xc0, 0x02, 0x00, 0x00, 0x0e, // ...,............
	0x01, 0x00, 0x00, 0x0e, 0x01, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xcd, // .......+........
	0x02, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x36, // ......>+.......6
	0x03, 0x00, 0x00, 0x9a, 0x99, 0x19, 0x3e, 0x2c, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x3f, // ......>,.......?
	0x03, 0x00, 0x00, 0x56, 0x02, 0x00, 0x00, 0x56, 0x02, 0x00, 0x00, 0x56, 0x02, 0x00, 0x00, 0x2b, // ...V...V...V...+
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x45, 0x03, 0x00, 0x00, 0x9a, 0x99, 0x99, 0x3d, 0x2b, // .......E......=+
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4c, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x2b, // .......L......@+
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4e, 0x03, 0x00, 0x00, 0xcd, 0xcc, 0xcc, 0x3d, 0x2c, // .......N......=,
	0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x4f, 0x03, 0x00, 0x00, 0x4e, 0x03, 0x00, 0x00, 0x4e, // .......O...N...N
	0x03, 0x00, 0x00, 0x4e, 0x03, 0x00, 0x00, 0x2c, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x57, // ...N...,.......W
	0x03, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x20, // ............... 
	0x00, 0x04, 0x00, 0x76, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3b, // ...v...........;
	0x00, 0x04, 0x00, 0x76, 0x03, 0x00, 0x00, 0x77, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, // ...v...w....... 
	0x00, 0x04, 0x00, 0x7a, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x3b, // ...z...........;
	0x00, 0x04, 0x00, 0x7a, 0x03, 0x00, 0x00, 0x7b, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, // ...z...{....... 
	0x00, 0x04, 0x00, 0x7e, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3b, // ...~...........;
	0x00, 0x04, 0x00, 0x7e, 0x03, 0x00, 0x00, 0x7f, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3b, // ...~...........;
	0x00, 0x04, 0x00, 0x7a, 0x03, 0x00, 0x00, 0x82, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, // ...z........... 
	0x00, 0x04, 0x00, 0x92, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x3b, // ...............;
	0x00, 0x04, 0x00, 0x92, 0x03, 0x00, 0x00, 0x93, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x29, // ...............)
	0x00, 0x03, 0x00, 0x45, 0x00, 0x00, 0x00, 0xaf, 0x03, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...E.......+....
	0x00, 0x00, 0x00, 0x24, 0x07, 0x00, 0x00, 0x00, 0x00, 0x10, 0xc1, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...$.......+....
	0x00, 0x00, 0x00, 0x25, 0x07, 0x00, 0x00, 0xdc, 0xe7, 0x20, 0xbe, 0x01, 0x00, 0x03, 0x00, 0x07, // ...%..... ......
	0x00, 0x00, 0x00, 0x26, 0x07, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, // ...&...6........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, // ................
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x6f, // ...=.......p...o
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x73, 0x00, 0x00, 0x00, 0x72, // ...=.......s...r
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x7d, 0x00, 0x00, 0x00, 0x7c, // ...=.......}...|
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x7e, // ...=...........~
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x83, 0x00, 0x00, 0x00, 0x82, // ...=............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x85, 0x00, 0x00, 0x00, 0x84, // ...=............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x8a, 0x00, 0x00, 0x00, 0x89, // ...=............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x8d, 0x00, 0x00, 0x00, 0x8c, // ...=............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x78, 0x03, 0x00, 0x00, 0x77, // ...=.......x...w
	0x03, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x7c, 0x03, 0x00, 0x00, 0x7b, // ...=.......|...{
	0x03, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x80, 0x03, 0x00, 0x00, 0x7f, // ...=............
	0x03, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x83, 0x03, 0x00, 0x00, 0x82, // ...=............
	0x03, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xe1, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, // ................
	0x00, 0x03, 0x00, 0x12, 0x01, 0x00, 0x00, 0xe9, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xe9, // ................
	0x03, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xec, 0x03, 0x00, 0x00, 0x83, // ................
	0x03, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xed, 0x03, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0xec, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1d, // ...E............
	0x00, 0x00, 0x00, 0xef, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x7c, // ...........E...|
	0x03, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xf2, 0x03, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0xed, 0x03, 0x00, 0x00, 0xef, 0x03, 0x00, 0x00, 0x94, // ...G............
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf5, 0x03, 0x00, 0x00, 0xed, 0x03, 0x00, 0x00, 0xf2, // ................
	0x03, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xf7, 0x03, 0x00, 0x00, 0xf5, // .......E........
	0x03, 0x00, 0x00, 0x53, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xfa, // ...S............
	0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xf5, 0x03, 0x00, 0x00, 0x56, // .......2.......V
	0x02, 0x00, 0x00, 0x24, 0x07, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xfb, // ...$............
	0x03, 0x00, 0x00, 0xf7, 0x03, 0x00, 0x00, 0xfa, 0x03, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x05, 0x00, 0x37, 0x01, 0x00, 0x00, 0xfc, 0x03, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x93, // ...7.......-....
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x26, 0x01, 0x00, 0x00, 0xfd, 0x03, 0x00, 0x00, 0xfc, // ...=...&........
	0x03, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xff, 0x03, 0x00, 0x00, 0xf2, // ................
	0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0xff, // ...Q............
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, // .......Q........
	0x04, 0x00, 0x00, 0xff, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0xff, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, // ...............P
	0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x03, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x01, // ................
	0x04, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x91, 0x00, 0x05, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0xfd, 0x03, 0x00, 0x00, 0x03, 0x04, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xeb, 0x04, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xec, 0x04, 0x00, 0x00, 0x04, // ...Q............
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x1e, 0x05, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0x12, 0x01, 0x00, 0x00, 0xfa, 0x04, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xfa, 0x04, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xfb, // ................
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xeb, 0x04, 0x00, 0x00, 0x0c, // ................
	0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xfc, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0xec, 0x04, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xfe, // ...........E....
	0x04, 0x00, 0x00, 0xfc, 0x04, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x45, // ...............E
	0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0xfb, 0x04, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, 0xa7, // ................
	0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x01, 0x05, 0x00, 0x00, 0xfe, 0x04, 0x00, 0x00, 0x00, // ...E............
	0x05, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x03, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // ................
	0x00, 0x04, 0x00, 0x01, 0x05, 0x00, 0x00, 0x02, 0x05, 0x00, 0x00, 0x03, 0x05, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0x02, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x1e, 0x05, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0x03, 0x05, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x06, // ................
	0x05, 0x00, 0x00, 0xfc, 0x04, 0x00, 0x00, 0xfb, 0x04, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x09, 0x05, 0x00, 0x00, 0xfc, 0x04, 0x00, 0x00, 0xfb, 0x04, 0x00, 0x00, 0x88, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x00, 0x06, 0x05, 0x00, 0x00, 0x09, // ................
	0x05, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x0b, 0x05, 0x00, 0x00, 0xec, // .......E........
	0x04, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0c, // ................
	0x05, 0x00, 0x00, 0x0b, 0x05, 0x00, 0x00, 0xf6, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x00, 0x00, 0x85, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0e, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x00, 0x00, 0x0a, // ................
	0x05, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x11, 0x05, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x0e, 0x05, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x00, 0x25, // ...2...........%
	0x07, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x12, 0x05, 0x00, 0x00, 0xec, // .......E........
	0x04, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x14, // ................
	0x05, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x16, // ................
	0x05, 0x00, 0x00, 0x12, 0x05, 0x00, 0x00, 0x14, 0x05, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x00, 0x0c, // ................
	0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x18, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // ...............2
	0x00, 0x00, 0x00, 0x11, 0x05, 0x00, 0x00, 0x16, 0x05, 0x00, 0x00, 0x0c, 0x05, 0x00, 0x00, 0xb8, // ................
	0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x19, 0x05, 0x00, 0x00, 0xeb, 0x04, 0x00, 0x00, 0xcb, // ...E............
	0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1b, 0x05, 0x00, 0x00, 0x18, // ................
	0x05, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1d, 0x05, 0x00, 0x00, 0x19, // ................
	0x05, 0x00, 0x00, 0x1b, 0x05, 0x00, 0x00, 0x18, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x1e, // ................
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x1e, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x27, 0x07, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x02, 0x05, 0x00, 0x00, 0x1d, // ...'............
	0x05, 0x00, 0x00, 0x03, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xee, // ................
	0x04, 0x00, 0x00, 0x0e, 0x01, 0x00, 0x00, 0x27, 0x07, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // .......'...Q....
	0x00, 0x00, 0x00, 0xef, 0x04, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf7, // ................
	0x00, 0x03, 0x00, 0x3b, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0x12, // ...;............
	0x01, 0x00, 0x00, 0x26, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x26, 0x05, 0x00, 0x00, 0x0c, // ...&.......&....
	0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x27, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, // .......'........
	0x00, 0x00, 0x00, 0xef, 0x04, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x29, // ...............)
	0x05, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x27, 0x05, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x45, // .......'.......E
	0x00, 0x00, 0x00, 0x2a, 0x05, 0x00, 0x00, 0x29, 0x05, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, 0xf7, // ...*...)........
	0x00, 0x03, 0x00, 0x2e, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x2a, // ...............*
	0x05, 0x00, 0x00, 0x2b, 0x05, 0x00, 0x00, 0x2e, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x2b, // ...+...........+
	0x05, 0x00, 0x00, 0xbe, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x2c, 0x05, 0x00, 0x00, 0xef, // .......E...,....
	0x04, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2d, // ...............-
	0x05, 0x00, 0x00, 0x2c, 0x05, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0xf9, // ...,............
	0x00, 0x02, 0x00, 0x3b, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x2e, 0x05, 0x00, 0x00, 0x0c, // ...;............
	0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x31, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // .......1.......2
	0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00, 0x27, 0x05, 0x00, 0x00, 0xd3, 0x00, 0x00, 0x00, 0x83, // .......'........
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x33, 0x05, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x27, // .......3.......'
	0x05, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x34, 0x05, 0x00, 0x00, 0x01, // ...........4....
	0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x33, 0x05, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // .......3........
	0x00, 0x00, 0x00, 0x35, 0x05, 0x00, 0x00, 0x31, 0x05, 0x00, 0x00, 0x34, 0x05, 0x00, 0x00, 0xbe, // ...5...1...4....
	0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x36, 0x05, 0x00, 0x00, 0xef, 0x04, 0x00, 0x00, 0xcb, // ...E...6........
	0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, 0x07, 0x00, 0x00, 0x31, // ........... ...1
	0x05, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x39, 0x05, 0x00, 0x00, 0x01, // ...........9....
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x20, 0x07, 0x00, 0x00, 0x34, 0x05, 0x00, 0x00, 0xc4, // ...2... ...4....
	0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3a, 0x05, 0x00, 0x00, 0x36, // ...........:...6
	0x05, 0x00, 0x00, 0x35, 0x05, 0x00, 0x00, 0x39, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x3b, // ...5...9.......;
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x3b, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x07, // .......;........
	0x00, 0x00, 0x00, 0x28, 0x07, 0x00, 0x00, 0x2d, 0x05, 0x00, 0x00, 0x2b, 0x05, 0x00, 0x00, 0x3a, // ...(...-...+...:
	0x05, 0x00, 0x00, 0x2e, 0x05, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xf1, // .......P........
	0x04, 0x00, 0x00, 0xee, 0x04, 0x00, 0x00, 0x28, 0x07, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x97, // .......(...V....
	0x00, 0x00, 0x00, 0x43, 0x05, 0x00, 0x00, 0x73, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x58, // ...C...s...p...X
	0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x46, 0x05, 0x00, 0x00, 0x43, 0x05, 0x00, 0x00, 0xf1, // .......F...C....
	0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xfb, 0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, // ...........O....
	0x00, 0x00, 0x00, 0x0c, 0x04, 0x00, 0x00, 0x46, 0x05, 0x00, 0x00, 0x46, 0x05, 0x00, 0x00, 0x00, // .......F...F....
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x97, // ...........V....
	0x00, 0x00, 0x00, 0x4d, 0x05, 0x00, 0x00, 0x85, 0x00, 0x00, 0x00, 0x83, 0x00, 0x00, 0x00, 0x57, // ...M...........W
	0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x4f, 0x05, 0x00, 0x00, 0x4d, 0x05, 0x00, 0x00, 0x80, // .......O...M....
	0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x11, 0x04, 0x00, 0x00, 0x4f, // ...O...........O
	0x05, 0x00, 0x00, 0x4f, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ...O............
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x13, 0x04, 0x00, 0x00, 0x4f, // ...Q...........O
	0x05, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x15, // ................
	0x04, 0x00, 0x00, 0x11, 0x04, 0x00, 0x00, 0x13, 0x04, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0x18, 0x04, 0x00, 0x00, 0x0c, 0x04, 0x00, 0x00, 0x15, 0x04, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0x19, 0x04, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x82, // ...H.......-....
	0x02, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1a, // .......=........
	0x04, 0x00, 0x00, 0x19, 0x04, 0x00, 0x00, 0xb7, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x1b, // ...........E....
	0x04, 0x00, 0x00, 0x1a, 0x04, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x24, // ...............$
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x1b, 0x04, 0x00, 0x00, 0x1c, // ................
	0x04, 0x00, 0x00, 0x24, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x1c, 0x04, 0x00, 0x00, 0x41, // ...$...........A
	0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0x1e, 0x04, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x89, // ...H.......-....
	0x02, 0x00, 0x00, 0x8c, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1f, // .......=........
	0x04, 0x00, 0x00, 0x1e, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, // .......Q....... 
	0x04, 0x00, 0x00, 0x18, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x21, 0x04, 0x00, 0x00, 0x18, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, // ...!...........Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x22, 0x04, 0x00, 0x00, 0x18, 0x04, 0x00, 0x00, 0x02, // ......."........
	0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x23, 0x04, 0x00, 0x00, 0x20, // ...P.......#... 
	0x04, 0x00, 0x00, 0x21, 0x04, 0x00, 0x00, 0x22, 0x04, 0x00, 0x00, 0x1f, 0x04, 0x00, 0x00, 0xf9, // ...!..."........
	0x00, 0x02, 0x00, 0xe1, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x24, 0x04, 0x00, 0x00, 0x41, // ...........$...A
	0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0x25, 0x04, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0xd3, // ...H...%...-....
	0x01, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x26, // .......=.......&
	0x04, 0x00, 0x00, 0x25, 0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x28, // ...%...........(
	0x04, 0x00, 0x00, 0x18, 0x04, 0x00, 0x00, 0x26, 0x04, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x37, // .......&...A...7
	0x01, 0x00, 0x00, 0x29, 0x04, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00, 0x3d, // ...)...-.......=
	0x00, 0x04, 0x00, 0x26, 0x01, 0x00, 0x00, 0x2a, 0x04, 0x00, 0x00, 0x29, 0x04, 0x00, 0x00, 0x90, // ...&...*...)....
	0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x2b, 0x04, 0x00, 0x00, 0x96, 0x02, 0x00, 0x00, 0x2a, // .......+.......*
	0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x2c, 0x04, 0x00, 0x00, 0x2b, // ...O.......,...+
	0x04, 0x00, 0x00, 0x2b, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ...+............
	0x00, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2f, 0x04, 0x00, 0x00, 0x2c, // .........../...,
	0x04, 0x00, 0x00, 0xf2, 0x03, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x37, 0x01, 0x00, 0x00, 0x30, // .......A...7...0
	0x04, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x26, // ...-.......=...&
	0x01, 0x00, 0x00, 0x31, 0x04, 0x00, 0x00, 0x30, 0x04, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, // ...1...0........
	0x00, 0x00, 0x00, 0x32, 0x04, 0x00, 0x00, 0xa0, 0x02, 0x00, 0x00, 0x31, 0x04, 0x00, 0x00, 0x4f, // ...2.......1...O
	0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x33, 0x04, 0x00, 0x00, 0x32, 0x04, 0x00, 0x00, 0x32, // .......3...2...2
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x83, // ................
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x37, 0x04, 0x00, 0x00, 0x83, 0x03, 0x00, 0x00, 0x33, // .......7.......3
	0x04, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x38, 0x04, 0x00, 0x00, 0x2c, // ...........8...,
	0x04, 0x00, 0x00, 0x37, 0x04, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3a, // ...7...........:
	0x04, 0x00, 0x00, 0x38, 0x04, 0x00, 0x00, 0x2f, 0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, // ...8.../........
	0x00, 0x00, 0x00, 0x3e, 0x04, 0x00, 0x00, 0xf2, 0x03, 0x00, 0x00, 0x3a, 0x04, 0x00, 0x00, 0x83, // ...>.......:....
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00, 0x83, 0x03, 0x00, 0x00, 0x3e, // .......?.......>
	0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x00, 0x3f, // ...Q.......A...?
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x42, // .......Q.......B
	0x04, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...?.......Q....
	0x00, 0x00, 0x00, 0x43, 0x04, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, // ...C...?.......P
	0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x44, 0x04, 0x00, 0x00, 0x41, 0x04, 0x00, 0x00, 0x42, // .......D...A...B
	0x04, 0x00, 0x00, 0x43, 0x04, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x04, 0x00, 0x0f, // ...C.......m....
	0x01, 0x00, 0x00, 0x46, 0x04, 0x00, 0x00, 0x78, 0x03, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x37, // ...F...x...A...7
	0x01, 0x00, 0x00, 0x47, 0x04, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0xb9, 0x02, 0x00, 0x00, 0x46, // ...G...-.......F
	0x04, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x26, 0x01, 0x00, 0x00, 0x48, 0x04, 0x00, 0x00, 0x47, // ...=...&...H...G
	0x04, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x49, 0x04, 0x00, 0x00, 0x44, // ...........I...D
	0x04, 0x00, 0x00, 0x48, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4b, // ...H...Q.......K
	0x04, 0x00, 0x00, 0x49, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...I.......Q....
	0x00, 0x00, 0x00, 0x4d, 0x04, 0x00, 0x00, 0x49, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x7f, // ...M...I........
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4e, 0x04, 0x00, 0x00, 0x4d, 0x04, 0x00, 0x00, 0x50, // .......N...M...P
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x4f, 0x04, 0x00, 0x00, 0x4b, 0x04, 0x00, 0x00, 0x4e, // .......O...K...N
	0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x51, 0x04, 0x00, 0x00, 0x49, // ...Q.......Q...I
	0x04, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x52, // ...............R
	0x04, 0x00, 0x00, 0x0e, 0x01, 0x00, 0x00, 0x51, 0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x0b, // .......Q........
	0x00, 0x00, 0x00, 0x53, 0x04, 0x00, 0x00, 0x4f, 0x04, 0x00, 0x00, 0x52, 0x04, 0x00, 0x00, 0x81, // ...S...O...R....
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0xc0, 0x02, 0x00, 0x00, 0x53, // .......T.......S
	0x04, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0x56, 0x04, 0x00, 0x00, 0x2d, // ...A...H...V...-
	0x01, 0x00, 0x00, 0x82, 0x02, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...........=....
	0x00, 0x00, 0x00, 0x57, 0x04, 0x00, 0x00, 0x56, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, // ...W...V...P....
	0x00, 0x00, 0x00, 0x58, 0x04, 0x00, 0x00, 0x57, 0x04, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x81, // ...X...W........
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x59, 0x04, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0x58, // .......Y...T...X
	0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5a, 0x04, 0x00, 0x00, 0x59, // ...Q.......Z...Y
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x5e, // .......P.......^
	0x04, 0x00, 0x00, 0x26, 0x07, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, // ...&............
	0x00, 0x00, 0x00, 0x5f, 0x04, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0x5e, 0x04, 0x00, 0x00, 0x51, // ..._...T...^...Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x60, 0x04, 0x00, 0x00, 0x5f, 0x04, 0x00, 0x00, 0x01, // .......`..._....
	0x00, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x62, 0x04, 0x00, 0x00, 0x5a, // ...P.......b...Z
	0x04, 0x00, 0x00, 0x60, 0x04, 0x00, 0x00, 0x78, 0x03, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0xac, // ...`...x...V....
	0x00, 0x00, 0x00, 0x56, 0x05, 0x00, 0x00, 0x8d, 0x00, 0x00, 0x00, 0x8a, 0x00, 0x00, 0x00, 0x57, // ...V...........W
	0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x58, 0x05, 0x00, 0x00, 0x56, 0x05, 0x00, 0x00, 0x62, // .......X...V...b
	0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x65, 0x04, 0x00, 0x00, 0x58, // ...O.......e...X
	0x05, 0x00, 0x00, 0x58, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ...X............
	0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0x67, 0x04, 0x00, 0x00, 0x2d, // ...A...H...g...-
	0x01, 0x00, 0x00, 0x82, 0x02, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...........=....
	0x00, 0x00, 0x00, 0x68, 0x04, 0x00, 0x00, 0x67, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, // ...h...g...P....
	0x00, 0x00, 0x00, 0x69, 0x04, 0x00, 0x00, 0x68, 0x04, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x83, // ...i...h........
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x6a, 0x04, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0x69, // .......j...T...i
	0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6b, 0x04, 0x00, 0x00, 0x6a, // ...Q.......k...j
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x6f, // .......P.......o
	0x04, 0x00, 0x00, 0x26, 0x07, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x0b, // ...&............
	0x00, 0x00, 0x00, 0x70, 0x04, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0x6f, 0x04, 0x00, 0x00, 0x51, // ...p...T...o...Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x71, 0x04, 0x00, 0x00, 0x70, 0x04, 0x00, 0x00, 0x01, // .......q...p....
	0x00, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x73, 0x04, 0x00, 0x00, 0x6b, // ...P.......s...k
	0x04, 0x00, 0x00, 0x71, 0x04, 0x00, 0x00, 0x78, 0x03, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0xac, // ...q...x...V....
	0x00, 0x00, 0x00, 0x5f, 0x05, 0x00, 0x00, 0x8d, 0x00, 0x00, 0x00, 0x8a, 0x00, 0x00, 0x00, 0x57, // ..._...........W
	0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x61, 0x05, 0x00, 0x00, 0x5f, 0x05, 0x00, 0x00, 0x73, // .......a..._...s
	0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x76, 0x04, 0x00, 0x00, 0x61, // ...O.......v...a
	0x05, 0x00, 0x00, 0x61, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ...a............
	0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x77, 0x04, 0x00, 0x00, 0x65, // ...........w...e
	0x04, 0x00, 0x00, 0x76, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x7b, // ...v...P.......{
	0x04, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x26, 0x07, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, // .......&........
	0x00, 0x00, 0x00, 0x7c, 0x04, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0x7b, 0x04, 0x00, 0x00, 0x51, // ...|...T...{...Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7d, 0x04, 0x00, 0x00, 0x7c, 0x04, 0x00, 0x00, 0x00, // .......}...|....
	0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0x7f, 0x04, 0x00, 0x00, 0x2d, // ...A...H.......-
	0x01, 0x00, 0x00, 0x82, 0x02, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...........=....
	0x00, 0x00, 0x00, 0x80, 0x04, 0x00, 0x00, 0x7f, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, // ...........P....
	0x00, 0x00, 0x00, 0x81, 0x04, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x80, 0x04, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x82, 0x04, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0x81, // ...........T....
	0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x83, 0x04, 0x00, 0x00, 0x82, // ...Q............
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x85, // .......P........
	0x04, 0x00, 0x00, 0x7d, 0x04, 0x00, 0x00, 0x83, 0x04, 0x00, 0x00, 0x78, 0x03, 0x00, 0x00, 0x56, // ...}.......x...V
	0x00, 0x05, 0x00, 0xac, 0x00, 0x00, 0x00, 0x68, 0x05, 0x00, 0x00, 0x8d, 0x00, 0x00, 0x00, 0x8a, // .......h........
	0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x6a, 0x05, 0x00, 0x00, 0x68, // ...W.......j...h
	0x05, 0x00, 0x00, 0x85, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x88, // .......O........
	0x04, 0x00, 0x00, 0x6a, 0x05, 0x00, 0x00, 0x6a, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ...j...j........
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x89, // ................
	0x04, 0x00, 0x00, 0x77, 0x04, 0x00, 0x00, 0x88, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, // ...w.......P....
	0x00, 0x00, 0x00, 0x8d, 0x04, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x26, 0x07, 0x00, 0x00, 0x83, // ...........&....
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x8e, 0x04, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0x8d, // ...........T....
	0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8f, 0x04, 0x00, 0x00, 0x8e, // ...Q............
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0x91, // .......A...H....
	0x04, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x82, 0x02, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00, 0x3d, // ...-...........=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x92, 0x04, 0x00, 0x00, 0x91, 0x04, 0x00, 0x00, 0x50, // ...............P
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x93, 0x04, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x92, // ................
	0x04, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x94, 0x04, 0x00, 0x00, 0x54, // ...............T
	0x04, 0x00, 0x00, 0x93, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x95, // .......Q........
	0x04, 0x00, 0x00, 0x94, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x1d, // ...........P....
	0x00, 0x00, 0x00, 0x97, 0x04, 0x00, 0x00, 0x8f, 0x04, 0x00, 0x00, 0x95, 0x04, 0x00, 0x00, 0x78, // ...............x
	0x03, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0xac, 0x00, 0x00, 0x00, 0x71, 0x05, 0x00, 0x00, 0x8d, // ...V.......q....
	0x00, 0x00, 0x00, 0x8a, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x73, // .......W.......s
	0x05, 0x00, 0x00, 0x71, 0x05, 0x00, 0x00, 0x97, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, // ...q.......O....
	0x00, 0x00, 0x00, 0x9a, 0x04, 0x00, 0x00, 0x73, 0x05, 0x00, 0x00, 0x73, 0x05, 0x00, 0x00, 0x00, // .......s...s....
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0x9b, 0x04, 0x00, 0x00, 0x89, 0x04, 0x00, 0x00, 0x9a, 0x04, 0x00, 0x00, 0x8e, // ................
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x9c, 0x04, 0x00, 0x00, 0x9b, 0x04, 0x00, 0x00, 0xcd, // ................
	0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9e, 0x04, 0x00, 0x00, 0x54, // ...Q...........T
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x9f, // ...........E....
	0x04, 0x00, 0x00, 0x9e, 0x04, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xa1, 0x04, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xba, // .......T........
	0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xa2, 0x04, 0x00, 0x00, 0xa1, 0x04, 0x00, 0x00, 0xc4, // ...E............
	0x00, 0x00, 0x00, 0xa6, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xa3, 0x04, 0x00, 0x00, 0x9f, // .......E........
	0x04, 0x00, 0x00, 0xa2, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa5, // .......Q........
	0x04, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x45, // ...T...........E
	0x00, 0x00, 0x00, 0xa6, 0x04, 0x00, 0x00, 0xa5, 0x04, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xa6, // ................
	0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xa7, 0x04, 0x00, 0x00, 0xa3, 0x04, 0x00, 0x00, 0xa6, // ...E............
	0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa9, 0x04, 0x00, 0x00, 0x54, // ...Q...........T
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xaa, // ...........E....
	0x04, 0x00, 0x00, 0xa9, 0x04, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x05, 0x00, 0x45, // ...............E
	0x00, 0x00, 0x00, 0xab, 0x04, 0x00, 0x00, 0xa7, 0x04, 0x00, 0x00, 0xaa, 0x04, 0x00, 0x00, 0xa8, // ................
	0x00, 0x04, 0x00, 0x45, 0x00, 0x00, 0x00, 0xac, 0x04, 0x00, 0x00, 0xab, 0x04, 0x00, 0x00, 0xbc, // ...E............
	0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xae, 0x04, 0x00, 0x00, 0x3a, 0x04, 0x00, 0x00, 0xcb, // ...E.......:....
	0x00, 0x00, 0x00, 0xa8, 0x00, 0x04, 0x00, 0x45, 0x00, 0x00, 0x00, 0xaf, 0x04, 0x00, 0x00, 0xae, // .......E........
	0x04, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xb0, 0x04, 0x00, 0x00, 0xac, // .......E........
	0x04, 0x00, 0x00, 0xaf, 0x04, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xbb, 0x04, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xb0, 0x04, 0x00, 0x00, 0xb1, 0x04, 0x00, 0x00, 0xbb, // ................
	0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xb1, 0x04, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xb5, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0xcb, // ...........1....
	0x00, 0x00, 0x00, 0x36, 0x03, 0x00, 0x00, 0x2f, 0x04, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x48, // ...6.../...A...H
	0x01, 0x00, 0x00, 0xb6, 0x04, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x14, 0x02, 0x00, 0x00, 0x16, // .......-........
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb7, 0x04, 0x00, 0x00, 0xb6, // ...=............
	0x04, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb8, 0x04, 0x00, 0x00, 0xb5, // ................
	0x04, 0x00, 0x00, 0xb7, 0x04, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xb9, // .......P........
	0x04, 0x00, 0x00, 0xb8, 0x04, 0x00, 0x00, 0xb8, 0x04, 0x00, 0x00, 0xb8, 0x04, 0x00, 0x00, 0x0c, // ................
	0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xba, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2e, // ................
	0x00, 0x00, 0x00, 0x28, 0x04, 0x00, 0x00, 0x9c, 0x04, 0x00, 0x00, 0xb9, 0x04, 0x00, 0x00, 0xf9, // ...(............
	0x00, 0x02, 0x00, 0xbb, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xbb, 0x04, 0x00, 0x00, 0xf5, // ................
	0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x29, 0x07, 0x00, 0x00, 0x28, 0x04, 0x00, 0x00, 0x24, // .......)...(...$
	0x04, 0x00, 0x00, 0xba, 0x04, 0x00, 0x00, 0xb1, 0x04, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0xbd, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x29, // ...........%...)
	0x07, 0x00, 0x00, 0x3f, 0x03, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x2f, 0x01, 0x00, 0x00, 0xbe, // ...?...A.../....
	0x04, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x89, 0x02, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, // ...-.......=....
	0x00, 0x00, 0x00, 0xbf, 0x04, 0x00, 0x00, 0xbe, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, // ...........O....
	0x00, 0x00, 0x00, 0xc0, 0x04, 0x00, 0x00, 0xbf, 0x04, 0x00, 0x00, 0xbf, 0x04, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0xc1, 0x04, 0x00, 0x00, 0xc0, 0x04, 0x00, 0x00, 0x45, 0x03, 0x00, 0x00, 0x85, // ...........E....
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xc4, 0x04, 0x00, 0x00, 0xc1, 0x04, 0x00, 0x00, 0x15, // ................
	0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xc6, 0x04, 0x00, 0x00, 0xc4, // ................
	0x04, 0x00, 0x00, 0x4c, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xc7, // ...L............
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0xc6, 0x04, 0x00, 0x00, 0x4f, // .......(.......O
	0x03, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x2f, 0x01, 0x00, 0x00, 0xc9, 0x04, 0x00, 0x00, 0x2d, // ...A.../.......-
	0x01, 0x00, 0x00, 0x89, 0x02, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xca, // .......=........
	0x04, 0x00, 0x00, 0xc9, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xcb, // .......O........
	0x04, 0x00, 0x00, 0xca, 0x04, 0x00, 0x00, 0xca, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xcc, // ................
	0x04, 0x00, 0x00, 0xbd, 0x04, 0x00, 0x00, 0xcb, 0x04, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0xce, 0x04, 0x00, 0x00, 0x57, 0x03, 0x00, 0x00, 0x15, 0x04, 0x00, 0x00, 0x85, // .......W........
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xd0, 0x04, 0x00, 0x00, 0xcc, 0x04, 0x00, 0x00, 0xce, // ................
	0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7e, 0x05, 0x00, 0x00, 0xc4, // ...Q.......~....
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x80, // .......Q........
	0x05, 0x00, 0x00, 0xc4, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x82, 0x05, 0x00, 0x00, 0xc4, 0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, // ................
	0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x83, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, // ...............(
	0x00, 0x00, 0x00, 0x80, 0x05, 0x00, 0x00, 0x82, 0x05, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x84, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x7e, // ...........(...~
	0x05, 0x00, 0x00, 0x83, 0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x86, // .......Q........
	0x05, 0x00, 0x00, 0xc7, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x88, 0x05, 0x00, 0x00, 0xc7, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8a, 0x05, 0x00, 0x00, 0xc7, 0x04, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8b, 0x05, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x88, 0x05, 0x00, 0x00, 0x8a, 0x05, 0x00, 0x00, 0x0c, // ...(............
	0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8c, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, // ...............(
	0x00, 0x00, 0x00, 0x86, 0x05, 0x00, 0x00, 0x8b, 0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x8d, 0x05, 0x00, 0x00, 0xd0, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8e, 0x05, 0x00, 0x00, 0xd0, 0x04, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8f, 0x05, 0x00, 0x00, 0xd0, // ...Q............
	0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x90, // ................
	0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x8e, 0x05, 0x00, 0x00, 0x8f, // .......(........
	0x05, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x91, 0x05, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x8d, 0x05, 0x00, 0x00, 0x90, 0x05, 0x00, 0x00, 0x81, // ...(............
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x94, 0x05, 0x00, 0x00, 0x84, 0x05, 0x00, 0x00, 0x8c, // ................
	0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x96, 0x05, 0x00, 0x00, 0x94, // .......E........
	0x05, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xa0, 0x05, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x96, 0x05, 0x00, 0x00, 0x97, 0x05, 0x00, 0x00, 0xa0, // ................
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x97, 0x05, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x99, 0x05, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x94, 0x05, 0x00, 0x00, 0x8e, // ................
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x9c, 0x05, 0x00, 0x00, 0xc4, 0x04, 0x00, 0x00, 0x99, // ................
	0x05, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x9f, 0x05, 0x00, 0x00, 0xc7, // ................
	0x04, 0x00, 0x00, 0x99, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xa0, 0x05, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xa0, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x37, // ...............7
	0x07, 0x00, 0x00, 0xc7, 0x04, 0x00, 0x00, 0xbb, 0x04, 0x00, 0x00, 0x9f, 0x05, 0x00, 0x00, 0x97, // ................
	0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x2c, 0x07, 0x00, 0x00, 0xc4, // ...........,....
	0x04, 0x00, 0x00, 0xbb, 0x04, 0x00, 0x00, 0x9c, 0x05, 0x00, 0x00, 0x97, 0x05, 0x00, 0x00, 0xba, // ................
	0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xa3, 0x05, 0x00, 0x00, 0x84, 0x05, 0x00, 0x00, 0xcb, // ...E............
	0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xa4, 0x05, 0x00, 0x00, 0xaf, // .......E........
	0x03, 0x00, 0x00, 0xa3, 0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xa6, // ...........E....
	0x05, 0x00, 0x00, 0x8c, 0x05, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x05, 0x00, 0x45, // ...............E
	0x00, 0x00, 0x00, 0xa7, 0x05, 0x00, 0x00, 0xa4, 0x05, 0x00, 0x00, 0xa6, 0x05, 0x00, 0x00, 0xf7, // ................
	0x00, 0x03, 0x00, 0xbc, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xa7, // ................
	0x05, 0x00, 0x00, 0xa8, 0x05, 0x00, 0x00, 0xbc, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xa8, // ................
	0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xa9, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xa9, // ................
	0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x33, 0x07, 0x00, 0x00, 0x44, // ...........3...D
	0x01, 0x00, 0x00, 0xa8, 0x05, 0x00, 0x00, 0xb7, 0x05, 0x00, 0x00, 0xb8, 0x05, 0x00, 0x00, 0xf5, // ................
	0x00, 0x07, 0x00, 0x44, 0x00, 0x00, 0x00, 0x2a, 0x07, 0x00, 0x00, 0x93, 0x00, 0x00, 0x00, 0xa8, // ...D...*........
	0x05, 0x00, 0x00, 0xba, 0x05, 0x00, 0x00, 0xb8, 0x05, 0x00, 0x00, 0xb1, 0x00, 0x05, 0x00, 0x45, // ...............E
	0x00, 0x00, 0x00, 0xac, 0x05, 0x00, 0x00, 0x2a, 0x07, 0x00, 0x00, 0x14, 0x02, 0x00, 0x00, 0xf6, // .......*........
	0x00, 0x04, 0x00, 0xbb, 0x05, 0x00, 0x00, 0xb8, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // ................
	0x00, 0x04, 0x00, 0xac, 0x05, 0x00, 0x00, 0xad, 0x05, 0x00, 0x00, 0xbb, 0x05, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xad, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0xb2, // .......A...H....
	0x05, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x47, 0x01, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0x3d, // ...-...G.......=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb3, 0x05, 0x00, 0x00, 0xb2, 0x05, 0x00, 0x00, 0xf7, // ................
	0x00, 0x03, 0x00, 0x6b, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0x12, // ...k............
	0x01, 0x00, 0x00, 0xeb, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xeb, 0x05, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x06, 0x00, 0x2f, 0x01, 0x00, 0x00, 0xec, 0x05, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x2e, // .../.......-....
	0x01, 0x00, 0x00, 0x2a, 0x07, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xed, // ...*...=........
	0x05, 0x00, 0x00, 0xec, 0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xef, // .......Q........
	0x05, 0x00, 0x00, 0xed, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xf0, 0x05, 0x00, 0x00, 0xed, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf1, 0x05, 0x00, 0x00, 0xed, 0x05, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xf2, 0x05, 0x00, 0x00, 0xef, // ...P............
	0x05, 0x00, 0x00, 0xf0, 0x05, 0x00, 0x00, 0xf1, 0x05, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x05, 0x00, 0x37, 0x01, 0x00, 0x00, 0xf3, 0x05, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x93, // ...7.......-....
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x26, 0x01, 0x00, 0x00, 0xf4, 0x05, 0x00, 0x00, 0xf3, // ...=...&........
	0x05, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xf5, 0x05, 0x00, 0x00, 0xf2, // ................
	0x05, 0x00, 0x00, 0xf4, 0x05, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xf6, // .......O........
	0x05, 0x00, 0x00, 0xf5, 0x05, 0x00, 0x00, 0xf5, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xf7, // ................
	0x05, 0x00, 0x00, 0xf6, 0x05, 0x00, 0x00, 0x83, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0xf9, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0xf7, // ...........E....
	0x05, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xfb, 0x05, 0x00, 0x00, 0xef, // ................
	0x03, 0x00, 0x00, 0xf9, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0xfe, // .......A...H....
	0x05, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x47, 0x01, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00, 0x3d, // ...-...G.......=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xff, 0x05, 0x00, 0x00, 0xfe, 0x05, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0xfb, 0x05, 0x00, 0x00, 0xff, // ................
	0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x01, 0x06, 0x00, 0x00, 0x00, // .......E........
	0x06, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x02, // ...........E....
	0x06, 0x00, 0x00, 0xaf, 0x03, 0x00, 0x00, 0x01, 0x06, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x0e, // ................
	0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x02, 0x06, 0x00, 0x00, 0x03, // ................
	0x06, 0x00, 0x00, 0x0e, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x03, 0x06, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0x05, 0x06, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x47, // ...H.......-...G
	0x01, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x06, // .......=........
	0x06, 0x00, 0x00, 0x05, 0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, // ................
	0x06, 0x00, 0x00, 0xfb, 0x05, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x48, // ...........A...H
	0x01, 0x00, 0x00, 0x08, 0x06, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x47, 0x01, 0x00, 0x00, 0x10, // .......-...G....
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x09, 0x06, 0x00, 0x00, 0x08, // ...=............
	0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0a, 0x06, 0x00, 0x00, 0xc4, // ................
	0x00, 0x00, 0x00, 0x09, 0x06, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6f, // ...............o
	0x06, 0x00, 0x00, 0x0a, 0x06, 0x00, 0x00, 0x0a, 0x06, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x0c, 0x06, 0x00, 0x00, 0x07, 0x06, 0x00, 0x00, 0x6f, 0x06, 0x00, 0x00, 0x8e, // ...........o....
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x0d, 0x06, 0x00, 0x00, 0x2c, 0x07, 0x00, 0x00, 0x0c, // ...........,....
	0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x0e, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x0e, // ................
	0x06, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x38, 0x07, 0x00, 0x00, 0x44, // ...........8...D
	0x01, 0x00, 0x00, 0xeb, 0x05, 0x00, 0x00, 0x0d, 0x06, 0x00, 0x00, 0x03, 0x06, 0x00, 0x00, 0xba, // ................
	0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x10, 0x06, 0x00, 0x00, 0xfb, 0x05, 0x00, 0x00, 0xcb, // ...E............
	0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x32, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // .......2........
	0x00, 0x04, 0x00, 0x10, 0x06, 0x00, 0x00, 0x11, 0x06, 0x00, 0x00, 0x32, 0x06, 0x00, 0x00, 0xf8, // ...........2....
	0x00, 0x02, 0x00, 0x11, 0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x13, // ................
	0x06, 0x00, 0x00, 0xf9, 0x05, 0x00, 0x00, 0xed, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0x14, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x13, // ...........E....
	0x06, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x16, 0x06, 0x00, 0x00, 0xef, // ................
	0x03, 0x00, 0x00, 0x14, 0x06, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x19, // ................
	0x06, 0x00, 0x00, 0xf9, 0x05, 0x00, 0x00, 0x14, 0x06, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x1b, 0x06, 0x00, 0x00, 0xed, 0x03, 0x00, 0x00, 0x14, 0x06, 0x00, 0x00, 0xba, // ................
	0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x1d, 0x06, 0x00, 0x00, 0x16, 0x06, 0x00, 0x00, 0xcb, // ...E............
	0x00, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x1f, 0x06, 0x00, 0x00, 0x19, // .......E........
	0x06, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x20, // ...........E... 
	0x06, 0x00, 0x00, 0x1d, 0x06, 0x00, 0x00, 0x1f, 0x06, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x45, // ...............E
	0x00, 0x00, 0x00, 0x22, 0x06, 0x00, 0x00, 0x1b, 0x06, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xa7, // ..."............
	0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x23, 0x06, 0x00, 0x00, 0x20, 0x06, 0x00, 0x00, 0x22, // ...E...#... ..."
	0x06, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x31, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // .......1........
	0x00, 0x04, 0x00, 0x23, 0x06, 0x00, 0x00, 0x24, 0x06, 0x00, 0x00, 0x31, 0x06, 0x00, 0x00, 0xf8, // ...#...$...1....
	0x00, 0x02, 0x00, 0x24, 0x06, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x73, // ...$...........s
	0x06, 0x00, 0x00, 0x57, 0x03, 0x00, 0x00, 0x37, 0x07, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, // ...W...7........
	0x00, 0x00, 0x00, 0x74, 0x06, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x19, 0x06, 0x00, 0x00, 0x0c, // ...t............
	0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x75, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, // .......u........
	0x00, 0x00, 0x00, 0x74, 0x06, 0x00, 0x00, 0x1f, 0x01, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, // ...t............
	0x00, 0x00, 0x00, 0x76, 0x06, 0x00, 0x00, 0x73, 0x06, 0x00, 0x00, 0x75, 0x06, 0x00, 0x00, 0x81, // ...v...s...u....
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x77, 0x06, 0x00, 0x00, 0x37, 0x07, 0x00, 0x00, 0x76, // .......w...7...v
	0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x27, 0x06, 0x00, 0x00, 0xb3, // ...........'....
	0x05, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x29, // ...............)
	0x06, 0x00, 0x00, 0x79, 0x01, 0x00, 0x00, 0x1b, 0x06, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, // ...y............
	0x00, 0x00, 0x00, 0x2a, 0x06, 0x00, 0x00, 0x27, 0x06, 0x00, 0x00, 0x29, 0x06, 0x00, 0x00, 0x0c, // ...*...'...)....
	0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2c, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, // .......,........
	0x00, 0x00, 0x00, 0x16, 0x06, 0x00, 0x00, 0xb3, 0x05, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x2d, 0x06, 0x00, 0x00, 0x2a, 0x06, 0x00, 0x00, 0x2c, 0x06, 0x00, 0x00, 0x8e, // ...-...*...,....
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x2e, 0x06, 0x00, 0x00, 0x77, 0x06, 0x00, 0x00, 0x2d, // ...........w...-
	0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x30, 0x06, 0x00, 0x00, 0x38, // ...........0...8
	0x07, 0x00, 0x00, 0x2e, 0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x31, 0x06, 0x00, 0x00, 0xf8, // ...........1....
	0x00, 0x02, 0x00, 0x31, 0x06, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x3a, // ...1...........:
	0x07, 0x00, 0x00, 0x38, 0x07, 0x00, 0x00, 0x11, 0x06, 0x00, 0x00, 0x30, 0x06, 0x00, 0x00, 0x24, // ...8.......0...$
	0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x32, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x32, // .......2.......2
	0x06, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x39, 0x07, 0x00, 0x00, 0x38, // ...........9...8
	0x07, 0x00, 0x00, 0x0e, 0x06, 0x00, 0x00, 0x3a, 0x07, 0x00, 0x00, 0x31, 0x06, 0x00, 0x00, 0x94, // .......:...1....
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x35, 0x06, 0x00, 0x00, 0xf7, 0x05, 0x00, 0x00, 0xf7, // .......5........
	0x05, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x38, 0x06, 0x00, 0x00, 0x35, // ...........8...5
	0x06, 0x00, 0x00, 0x35, 0x06, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0x39, // ...5...A...H...9
	0x06, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x8b, 0x01, 0x00, 0x00, 0x8c, 0x01, 0x00, 0x00, 0x3d, // ...-...........=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3a, 0x06, 0x00, 0x00, 0x39, 0x06, 0x00, 0x00, 0x41, // .......:...9...A
	0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0x3b, 0x06, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x8b, // ...H...;...-....
	0x01, 0x00, 0x00, 0x8c, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3c, // .......=.......<
	0x06, 0x00, 0x00, 0x3b, 0x06, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3d, // ...;...........=
	0x06, 0x00, 0x00, 0x3a, 0x06, 0x00, 0x00, 0x3c, 0x06, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x48, // ...:...<...A...H
	0x01, 0x00, 0x00, 0x3e, 0x06, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x8b, 0x01, 0x00, 0x00, 0x8c, // ...>...-........
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3f, 0x06, 0x00, 0x00, 0x3e, // ...=.......?...>
	0x06, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x40, 0x06, 0x00, 0x00, 0x3d, // ...........@...=
	0x06, 0x00, 0x00, 0x3f, 0x06, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0x41, // ...?...A...H...A
	0x06, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x8b, 0x01, 0x00, 0x00, 0x8c, 0x01, 0x00, 0x00, 0x3d, // ...-...........=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x42, 0x06, 0x00, 0x00, 0x41, 0x06, 0x00, 0x00, 0x85, // .......B...A....
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x43, 0x06, 0x00, 0x00, 0x40, 0x06, 0x00, 0x00, 0x42, // .......C...@...B
	0x06, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x44, 0x06, 0x00, 0x00, 0x38, // ...........D...8
	0x06, 0x00, 0x00, 0x43, 0x06, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x45, // ...C...........E
	0x06, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x44, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, // .......D........
	0x00, 0x00, 0x00, 0x46, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x45, // ...F.......+...E
	0x06, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x49, 0x06, 0x00, 0x00, 0x46, 0x06, 0x00, 0x00, 0x46, 0x06, 0x00, 0x00, 0x81, // ...I...F...F....
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4b, 0x06, 0x00, 0x00, 0x35, 0x06, 0x00, 0x00, 0xc4, // .......K...5....
	0x00, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4c, 0x06, 0x00, 0x00, 0x49, // ...........L...I
	0x06, 0x00, 0x00, 0x4b, 0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x50, // ...K...........P
	0x06, 0x00, 0x00, 0x37, 0x07, 0x00, 0x00, 0x2c, 0x07, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x2f, // ...7...,...A.../
	0x01, 0x00, 0x00, 0x53, 0x06, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0xa9, 0x01, 0x00, 0x00, 0x2a, // ...S...-.......*
	0x07, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x54, 0x06, 0x00, 0x00, 0x53, // ...=.......T...S
	0x06, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x55, 0x06, 0x00, 0x00, 0x54, // ...O.......U...T
	0x06, 0x00, 0x00, 0x54, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ...T............
	0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x56, 0x06, 0x00, 0x00, 0x39, // ...........V...9
	0x07, 0x00, 0x00, 0x55, 0x06, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x58, // ...U...........X
	0x06, 0x00, 0x00, 0x56, 0x06, 0x00, 0x00, 0x4c, 0x06, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x2f, // ...V...L...A.../
	0x01, 0x00, 0x00, 0x5a, 0x06, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x8b, 0x01, 0x00, 0x00, 0x3d, // ...Z...-.......=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x5b, 0x06, 0x00, 0x00, 0x5a, 0x06, 0x00, 0x00, 0x4f, // .......[...Z...O
	0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x5c, 0x06, 0x00, 0x00, 0x5b, 0x06, 0x00, 0x00, 0x5b, // ...........[...[
	0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, // ................
	0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x5e, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // .......^.......2
	0x00, 0x00, 0x00, 0x50, 0x06, 0x00, 0x00, 0x5c, 0x06, 0x00, 0x00, 0x58, 0x06, 0x00, 0x00, 0x41, // ...P.......X...A
	0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0x5f, 0x06, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0xb6, // ...H..._...-....
	0x01, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x60, // .......=.......`
	0x06, 0x00, 0x00, 0x5f, 0x06, 0x00, 0x00, 0xb7, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x61, // ..._.......E...a
	0x06, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x6a, // ...`...........j
	0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x61, 0x06, 0x00, 0x00, 0x62, // ...........a...b
	0x06, 0x00, 0x00, 0x68, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x68, 0x06, 0x00, 0x00, 0xf9, // ...h.......h....
	0x00, 0x02, 0x00, 0x6b, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x62, 0x06, 0x00, 0x00, 0x41, // ...k.......b...A
	0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0x63, 0x06, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0xb6, // ...H...c...-....
	0x01, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x64, // .......=.......d
	0x06, 0x00, 0x00, 0x63, 0x06, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x65, // ...c...P.......e
	0x06, 0x00, 0x00, 0x64, 0x06, 0x00, 0x00, 0x64, 0x06, 0x00, 0x00, 0x64, 0x06, 0x00, 0x00, 0x0c, // ...d...d...d....
	0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x7d, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2e, // .......}........
	0x00, 0x00, 0x00, 0x5e, 0x06, 0x00, 0x00, 0x2c, 0x07, 0x00, 0x00, 0x65, 0x06, 0x00, 0x00, 0xf9, // ...^...,...e....
	0x00, 0x02, 0x00, 0x6b, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x6a, 0x06, 0x00, 0x00, 0xff, // ...k.......j....
	0x00, 0x01, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x6b, 0x06, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, // .......k........
	0x00, 0x00, 0x00, 0x3b, 0x07, 0x00, 0x00, 0x5e, 0x06, 0x00, 0x00, 0x68, 0x06, 0x00, 0x00, 0x7d, // ...;...^...h...}
	0x06, 0x00, 0x00, 0x62, 0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xb7, // ...b............
	0x05, 0x00, 0x00, 0x33, 0x07, 0x00, 0x00, 0x3b, 0x07, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xb8, // ...3...;........
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xb8, 0x05, 0x00, 0x00, 0x80, 0x00, 0x05, 0x00, 0x44, // ...............D
	0x00, 0x00, 0x00, 0xba, 0x05, 0x00, 0x00, 0x2a, 0x07, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00, 0xf9, // .......*........
	0x00, 0x02, 0x00, 0xa9, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xbb, 0x05, 0x00, 0x00, 0xf9, // ................
	0x00, 0x02, 0x00, 0xbc, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xbc, 0x05, 0x00, 0x00, 0xf5, // ................
	0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x32, 0x07, 0x00, 0x00, 0x44, 0x01, 0x00, 0x00, 0xa0, // .......2...D....
	0x05, 0x00, 0x00, 0x33, 0x07, 0x00, 0x00, 0xbb, 0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x45, // ...3...........E
	0x00, 0x00, 0x00, 0xbf, 0x05, 0x00, 0x00, 0x84, 0x05, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xa7, // ................
	0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xc0, 0x05, 0x00, 0x00, 0xaf, 0x03, 0x00, 0x00, 0xbf, // ...E............
	0x05, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xd0, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // ................
	0x00, 0x04, 0x00, 0xc0, 0x05, 0x00, 0x00, 0xc1, 0x05, 0x00, 0x00, 0xd0, 0x05, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xc1, 0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc3, // .......Q........
	0x05, 0x00, 0x00, 0xef, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xc4, 0x05, 0x00, 0x00, 0xef, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc5, 0x05, 0x00, 0x00, 0xef, 0x03, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xc6, 0x05, 0x00, 0x00, 0xc3, // ...P............
	0x05, 0x00, 0x00, 0xc4, 0x05, 0x00, 0x00, 0xc5, 0x05, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x05, 0x00, 0x37, 0x01, 0x00, 0x00, 0xc7, 0x05, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x93, // ...7.......-....
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x26, 0x01, 0x00, 0x00, 0xc8, 0x05, 0x00, 0x00, 0xc7, // ...=...&........
	0x05, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xc9, 0x05, 0x00, 0x00, 0xc6, // ................
	0x05, 0x00, 0x00, 0xc8, 0x05, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xca, // .......O........
	0x05, 0x00, 0x00, 0xc9, 0x05, 0x00, 0x00, 0xc9, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xcb, // ................
	0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0xca, 0x05, 0x00, 0x00, 0x51, // .......E.......Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8f, 0x06, 0x00, 0x00, 0xcb, 0x05, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x90, 0x06, 0x00, 0x00, 0xcb, // ...Q............
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xc2, 0x06, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0x12, 0x01, 0x00, 0x00, 0x9e, 0x06, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0x9e, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9f, // ................
	0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x8f, 0x06, 0x00, 0x00, 0x0c, // ................
	0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa0, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0x90, 0x06, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xa2, // ...........E....
	0x06, 0x00, 0x00, 0xa0, 0x06, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x45, // ...............E
	0x00, 0x00, 0x00, 0xa4, 0x06, 0x00, 0x00, 0x9f, 0x06, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, 0xa7, // ................
	0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xa5, 0x06, 0x00, 0x00, 0xa2, 0x06, 0x00, 0x00, 0xa4, // ...E............
	0x06, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xa7, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // ................
	0x00, 0x04, 0x00, 0xa5, 0x06, 0x00, 0x00, 0xa6, 0x06, 0x00, 0x00, 0xa7, 0x06, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xa6, 0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xc2, 0x06, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xa7, 0x06, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xaa, // ................
	0x06, 0x00, 0x00, 0xa0, 0x06, 0x00, 0x00, 0x9f, 0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xad, 0x06, 0x00, 0x00, 0xa0, 0x06, 0x00, 0x00, 0x9f, 0x06, 0x00, 0x00, 0x88, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xae, 0x06, 0x00, 0x00, 0xaa, 0x06, 0x00, 0x00, 0xad, // ................
	0x06, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xaf, 0x06, 0x00, 0x00, 0x90, // .......E........
	0x06, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb0, // ................
	0x06, 0x00, 0x00, 0xaf, 0x06, 0x00, 0x00, 0xf6, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x00, 0x00, 0x85, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb2, 0x06, 0x00, 0x00, 0xf9, 0x00, 0x00, 0x00, 0xae, // ................
	0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb5, 0x06, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xb2, 0x06, 0x00, 0x00, 0xae, 0x06, 0x00, 0x00, 0x25, // ...2...........%
	0x07, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xb6, 0x06, 0x00, 0x00, 0x90, // .......E........
	0x06, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb8, // ................
	0x06, 0x00, 0x00, 0xae, 0x06, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xba, // ................
	0x06, 0x00, 0x00, 0xb6, 0x06, 0x00, 0x00, 0xb8, 0x06, 0x00, 0x00, 0xae, 0x06, 0x00, 0x00, 0x0c, // ................
	0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbc, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // ...............2
	0x00, 0x00, 0x00, 0xb5, 0x06, 0x00, 0x00, 0xba, 0x06, 0x00, 0x00, 0xb0, 0x06, 0x00, 0x00, 0xb8, // ................
	0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xbd, 0x06, 0x00, 0x00, 0x8f, 0x06, 0x00, 0x00, 0xcb, // ...E............
	0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbf, 0x06, 0x00, 0x00, 0xbc, // ................
	0x06, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc1, 0x06, 0x00, 0x00, 0xbd, // ................
	0x06, 0x00, 0x00, 0xbf, 0x06, 0x00, 0x00, 0xbc, 0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xc2, // ................
	0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xc2, 0x06, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x2e, 0x07, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xa6, 0x06, 0x00, 0x00, 0xc1, // ................
	0x06, 0x00, 0x00, 0xa7, 0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x92, // ................
	0x06, 0x00, 0x00, 0x0e, 0x01, 0x00, 0x00, 0x2e, 0x07, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x93, 0x06, 0x00, 0x00, 0xcb, 0x05, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf7, // ................
	0x00, 0x03, 0x00, 0xdf, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0x12, // ................
	0x01, 0x00, 0x00, 0xca, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xca, 0x06, 0x00, 0x00, 0x0c, // ................
	0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xcb, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0x93, 0x06, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xcd, // ................
	0x06, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0xcb, 0x06, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x45, // ...............E
	0x00, 0x00, 0x00, 0xce, 0x06, 0x00, 0x00, 0xcd, 0x06, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, 0xf7, // ................
	0x00, 0x03, 0x00, 0xd2, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xce, // ................
	0x06, 0x00, 0x00, 0xcf, 0x06, 0x00, 0x00, 0xd2, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xcf, // ................
	0x06, 0x00, 0x00, 0xbe, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xd0, 0x06, 0x00, 0x00, 0x93, // .......E........
	0x06, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd1, // ................
	0x06, 0x00, 0x00, 0xd0, 0x06, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0xf9, // ................
	0x00, 0x02, 0x00, 0xdf, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xd2, 0x06, 0x00, 0x00, 0x0c, // ................
	0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd5, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // ...............2
	0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00, 0xcb, 0x06, 0x00, 0x00, 0xd3, 0x00, 0x00, 0x00, 0x83, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd7, 0x06, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0xcb, // ................
	0x06, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd8, 0x06, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0xd7, 0x06, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xd9, 0x06, 0x00, 0x00, 0xd5, 0x06, 0x00, 0x00, 0xd8, 0x06, 0x00, 0x00, 0xbe, // ................
	0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xda, 0x06, 0x00, 0x00, 0x93, 0x06, 0x00, 0x00, 0xcb, // ...E............
	0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x22, 0x07, 0x00, 0x00, 0xd5, // ..........."....
	0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xdd, 0x06, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x22, 0x07, 0x00, 0x00, 0xd8, 0x06, 0x00, 0x00, 0xc4, // ...2..."........
	0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xde, 0x06, 0x00, 0x00, 0xda, // ................
	0x06, 0x00, 0x00, 0xd9, 0x06, 0x00, 0x00, 0xdd, 0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xdf, // ................
	0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xdf, 0x06, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x2f, 0x07, 0x00, 0x00, 0xd1, 0x06, 0x00, 0x00, 0xcf, 0x06, 0x00, 0x00, 0xde, // .../............
	0x06, 0x00, 0x00, 0xd2, 0x06, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x95, // .......P........
	0x06, 0x00, 0x00, 0x92, 0x06, 0x00, 0x00, 0x2f, 0x07, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x97, // ......./...V....
	0x00, 0x00, 0x00, 0xe7, 0x06, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x7d, 0x00, 0x00, 0x00, 0x58, // ...........}...X
	0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xea, 0x06, 0x00, 0x00, 0xe7, 0x06, 0x00, 0x00, 0x95, // ................
	0x06, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, // ...........O....
	0x00, 0x00, 0x00, 0x87, 0x06, 0x00, 0x00, 0xea, 0x06, 0x00, 0x00, 0xea, 0x06, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0x89, 0x06, 0x00, 0x00, 0x2c, 0x07, 0x00, 0x00, 0x87, 0x06, 0x00, 0x00, 0x41, // .......,.......A
	0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0x8a, 0x06, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0xd3, // ...H.......-....
	0x01, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8b, // .......=........
	0x06, 0x00, 0x00, 0x8a, 0x06, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x8c, // ................
	0x06, 0x00, 0x00, 0x89, 0x06, 0x00, 0x00, 0x8b, 0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0xcf, 0x05, 0x00, 0x00, 0x32, 0x07, 0x00, 0x00, 0x8c, 0x06, 0x00, 0x00, 0xf9, // .......2........
	0x00, 0x02, 0x00, 0xd0, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xd0, 0x05, 0x00, 0x00, 0xf5, // ................
	0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x34, 0x07, 0x00, 0x00, 0x32, 0x07, 0x00, 0x00, 0xbc, // .......4...2....
	0x05, 0x00, 0x00, 0xcf, 0x05, 0x00, 0x00, 0xdf, 0x06, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x45, // ...............E
	0x00, 0x00, 0x00, 0xd2, 0x05, 0x00, 0x00, 0x91, 0x05, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xf7, // ................
	0x00, 0x03, 0x00, 0xd6, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xd2, // ................
	0x05, 0x00, 0x00, 0xd3, 0x05, 0x00, 0x00, 0xd6, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xd3, // ................
	0x05, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xd5, 0x05, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xcc, 0x04, 0x00, 0x00, 0xce, 0x04, 0x00, 0x00, 0x34, // ...2...........4
	0x07, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xd6, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xd6, // ................
	0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x35, 0x07, 0x00, 0x00, 0x34, // ...........5...4
	0x07, 0x00, 0x00, 0xd0, 0x05, 0x00, 0x00, 0xd5, 0x05, 0x00, 0x00, 0xd3, 0x05, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd9, 0x04, 0x00, 0x00, 0x35, 0x07, 0x00, 0x00, 0x00, // ...........5....
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xdb, 0x04, 0x00, 0x00, 0x35, // ...Q...........5
	0x07, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xdd, // .......Q........
	0x04, 0x00, 0x00, 0x35, 0x07, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x48, // ...5.......A...H
	0x01, 0x00, 0x00, 0xde, 0x04, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x89, 0x02, 0x00, 0x00, 0x8c, // .......-........
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xdf, 0x04, 0x00, 0x00, 0xde, // ...=............
	0x04, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x23, 0x07, 0x00, 0x00, 0xd9, // ...P.......#....
	0x04, 0x00, 0x00, 0xdb, 0x04, 0x00, 0x00, 0xdd, 0x04, 0x00, 0x00, 0xdf, 0x04, 0x00, 0x00, 0xf9, // ................
	0x00, 0x02, 0x00, 0xe1, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xe1, 0x04, 0x00, 0x00, 0xf5, // ................
	0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x44, 0x07, 0x00, 0x00, 0x23, 0x04, 0x00, 0x00, 0x1c, // .......D...#....
	0x04, 0x00, 0x00, 0x23, 0x07, 0x00, 0x00, 0xd6, 0x05, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x93, // ...#.......>....
	0x03, 0x00, 0x00, 0x44, 0x07, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00, 0x00, // ...D.......8....
	0x00, 0xb0, 0x02,                                                                               // ...
};
static const bgfx::EmbeddedShader fs_ball_equirectangular_nodecal_st = BGFX_EMBEDDED_SHADER(fs_ball_equirectangular_nodecal_st);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of fragment shader from fs_ball.sc to fs_ball_spherical_decal_st with options: STEREO SPHERICAL DECAL
static const uint8_t fs_ball_spherical_decal_st_mtl[10730] =
{
	0x46, 0x53, 0x48, 0x0b, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x15, 0x74, // FSH..N.........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, // ex_ball_colorSam
	0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x74, // pler...........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x65, 0x78, // ex_ball_colorTex
	0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, // ture...........t
	0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, // ex_envSampler...
	0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x54, // ........tex_envT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // exture..........
	0x16, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, // .tex_diffuse_env
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Sampler.........
	0x00, 0x16, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, // ..tex_diffuse_en
	0x76, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // vTexture........
	0x00, 0x00, 0x15, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, // ...tex_ball_deca
	0x6c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // lSampler........
	0x00, 0x00, 0x15, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, // ...tex_ball_deca
	0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // lTexture........
	0x00, 0x00, 0x19, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, // ...tex_ball_play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, // fieldSampler....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // .......tex_ball_
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // playfieldTexture
	0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x62, 0x61, 0x6c, 0x6c, 0x4c, // ...........ballL
	0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x0a, 0x00, 0x01, 0x0a, 0x00, 0x00, 0x00, 0x00, // ightPos.........
	0x00, 0x07, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x14, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, // ..matView.......
	0x00, 0x00, 0x00, 0x1e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, // ....Roughness_Wr
	0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, // apL_Edge_Thickne
	0x73, 0x73, 0x12, 0x01, 0x80, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x63, 0x41, 0x6d, // ss...........cAm
	0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, // bient_LightRange
	0x12, 0x01, 0x40, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x62, 0x61, 0x6c, 0x6c, 0x4c, // ..@........ballL
	0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0a, 0xa0, 0x01, // ightEmission....
	0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // .......fDisableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, // ighting_top_belo
	0x77, 0x12, 0x01, 0x60, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x65, 0x6e, 0x76, // w..`........fenv
	0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, // EmissionScale_Te
	0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x01, 0x50, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // xWidth..P.......
	0x13, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, // .w_h_disableLigh
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x01, 0xa0, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x63, // ting...........c
	0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x01, 0x70, 0x02, 0x01, 0x00, // Base_Alpha..p...
	0x00, 0x00, 0x00, 0x00, 0x0c, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, // .....matWorldVie
	0x77, 0x14, 0x01, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x6d, 0x61, 0x74, 0x50, // w..@........matP
	0x72, 0x6f, 0x6a, 0x14, 0x02, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x69, 0x6e, // roj...........in
	0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, // vTableRes_reflec
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x01, 0x90, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, // tion...........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x10, 0x00, 0x00, // ex_ball_color...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, // ........tex_diff
	0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // use_env.........
	0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, // ..tex_ball_decal
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x74, 0x65, 0x78, 0x5f, 0x62, // ...........tex_b
	0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x10, 0x00, 0x00, // all_playfield...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdb, 0x26, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, // ........&..#incl
	0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, // ude <metal_stdli
	0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, // b>.#include <sim
	0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, // d/simd.h>..using
	0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, //  namespace metal
	0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, // ;..struct _Globa
	0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, // l.{.    float4x4
	0x20, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //  matView;.    fl
	0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, // oat4x4 matWorldV
	0x69, 0x65, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, // iew;.    float4x
	0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, 0x20, 0x20, // 4 matProj[2];.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, //   float4 ballLig
	0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x31, 0x30, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // htPos[10];.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, // loat4 ballLightE
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x31, 0x30, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, // mission[10];.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, //  float4 cAmbient
	0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x3b, 0x0a, 0x20, 0x20, 0x20, // _LightRange;.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, //  float4 fenvEmis
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, // sionScale_TexWid
	0x74, 0x68, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x66, // th;.    float4 f
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, // DisableLighting_
	0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // top_below;.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, // loat4 cBase_Alph
	0x61, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x52, 0x6f, // a;.    float4 Ro
	0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, // ughness_WrapL_Ed
	0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x20, 0x20, // ge_Thickness;.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, //   float4 invTabl
	0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b, // eRes_reflection;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, // .    float4 w_h_
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x3b, // disableLighting;
	0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x66, 0x6c, // .};..constant fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x33, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, // oat _1773 = {};.
	0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, // .struct xlatMtlM
	0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // ain_out.{.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, // oat4 bgfx_FragDa
	0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, // ta0 [[color(0)]]
	0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, // ;.};..struct xla
	0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, // tMtlMain_in.{.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x20, 0x5b, 0x5b, //   float v_eye [[
	0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, // user(locn0)]];. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, //    float3 v_norm
	0x61, 0x6c, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, // al [[user(locn1)
	0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, // ]];.    float2 v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, // _texcoord0 [[use
	0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x32, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // r(locn2)]];.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, // float3 v_worldPo
	0x73, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x33, 0x29, 0x5d, // s [[user(locn3)]
	0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x5b, 0x5b, 0x20, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x5f, // ];.};..[[ early_
	0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x20, 0x5d, // fragment_tests ]
	0x5d, 0x20, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // ] fragment xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // tlMain_out xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // tlMain(xlatMtlMa
	0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, // in_in in [[stage
	0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, // _in]], constant 
	0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, // _Global& _mtl_u 
	0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, // [[buffer(0)]], t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, // exture2d<float> 
	0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x5b, // tex_ball_color [
	0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, // [texture(0)]], t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, // exture2d<float> 
	0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x20, // tex_diffuse_env 
	0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, // [[texture(2)]], 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, // texture2d<float>
	0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x20, //  tex_ball_decal 
	0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x33, 0x29, 0x5d, 0x5d, 0x2c, 0x20, // [[texture(3)]], 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x3c, // texture2d_array<
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // float> tex_ball_
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, // playfield [[text
	0x75, 0x72, 0x65, 0x28, 0x34, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ure(4)]], sample
	0x72, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // r tex_ball_color
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // Sampler [[sample
	0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, // r(0)]], sampler 
	0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x53, // tex_diffuse_envS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ampler [[sampler
	0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, // (2)]], sampler t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x53, 0x61, 0x6d, // ex_ball_decalSam
	0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x33, // pler [[sampler(3
	0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, 0x65, 0x78, // )]], sampler tex
	0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, // _ball_playfieldS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ampler [[sampler
	0x28, 0x34, 0x29, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, // (4)]]).{.    xla
	0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, // tMtlMain_out out
	0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  = {};.    float
	0x34, 0x20, 0x5f, 0x31, 0x38, 0x30, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, // 4 _1801;.    do.
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //     {.        fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x31, 0x38, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, // oat3 _1018 = fas
	0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x2d, 0x69, 0x6e, // t::normalize(-in
	0x2e, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x29, 0x3b, 0x0a, 0x20, 0x20, // .v_worldPos);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, //       float3 _10
	0x32, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // 20 = fast::norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // lize(in.v_normal
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // );.        float
	0x33, 0x20, 0x5f, 0x31, 0x30, 0x32, 0x33, 0x20, 0x3d, 0x20, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, // 3 _1023 = reflec
	0x74, 0x28, 0x5f, 0x31, 0x30, 0x31, 0x38, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x32, 0x30, 0x29, 0x3b, // t(_1018, _1020);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // .        float _
	0x31, 0x30, 0x32, 0x36, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x30, 0x31, 0x38, // 1026 = dot(_1018
	0x2c, 0x20, 0x5f, 0x31, 0x30, 0x32, 0x33, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // , _1023);.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x30, 0x34, 0x32, 0x20, 0x3d, 0x20, //   float _1042 = 
	0x28, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x30, 0x32, 0x33, 0x2e, 0x7a, 0x29, // ((1.0 - _1023.z)
	0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x30, 0x2e, 0x33, 0x35, 0x33, //  > 0.0) ? (0.353
	0x35, 0x35, 0x33, 0x33, 0x38, 0x34, 0x35, 0x34, 0x32, 0x34, 0x36, 0x35, 0x32, 0x30, 0x39, 0x39, // 5533845424652099
	0x36, 0x30, 0x39, 0x33, 0x37, 0x35, 0x20, 0x2a, 0x20, 0x72, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, // 609375 * rsqrt(1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x30, 0x32, 0x33, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x3a, // .0 - _1023.z)) :
	0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //  0.0;.        fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x32, 0x38, 0x37, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, // oat4 _1287 = tex
	0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x2e, 0x73, 0x61, 0x6d, 0x70, // _ball_decal.samp
	0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, // le(tex_ball_deca
	0x6c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, // lSampler, in.v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // excoord0);.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x32, 0x39, 0x37, 0x20, //    float3 _1297 
	0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x66, 0x6d, 0x61, 0x28, // = fast::max(fma(
	0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x73, // tex_ball_color.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, // ample(tex_ball_c
	0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // olorSampler, flo
	0x61, 0x74, 0x32, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x2d, 0x5f, 0x31, 0x30, 0x34, 0x32, 0x2c, 0x20, // at2(fma(-_1042, 
	0x5f, 0x31, 0x30, 0x32, 0x33, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x2c, 0x20, 0x66, // _1023.x, 0.5), f
	0x6d, 0x61, 0x28, 0x2d, 0x5f, 0x31, 0x30, 0x34, 0x32, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x32, 0x33, // ma(-_1042, _1023
	0x2e, 0x79, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, // .y, 0.5)), level
	0x28, 0x28, 0x5f, 0x31, 0x30, 0x32, 0x36, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x36, 0x30, 0x30, 0x30, // ((_1026 > 0.6000
	0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, // 0002384185791015
	0x36, 0x32, 0x35, 0x29, 0x20, 0x3f, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x30, 0x32, 0x36, // 625) ? fma(_1026
	0x2c, 0x20, 0x31, 0x35, 0x2e, 0x30, 0x2c, 0x20, 0x2d, 0x39, 0x2e, 0x30, 0x29, 0x20, 0x3a, 0x20, // , 15.0, -9.0) : 
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 0.0)).xyz - floa
	0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // t3(1.0), float3(
	0x31, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x32, 0x38, 0x37, 0x2e, 0x78, 0x79, 0x7a, // 1.0) - _1287.xyz
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2c, 0x20, // , float3(1.0)), 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // float3(0.0));.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, //       if (_mtl_u
	0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, // .w_h_disableLigh
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x7a, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, // ting.z != 0.0). 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x30, 0x31, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, //      _1801 = flo
	0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x32, 0x39, 0x37, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // at4(_1297, _mtl_
	0x75, 0x2e, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, 0x29, // u.cBase_Alpha.w)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, // ;.            br
	0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, // eak;.        }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, //        float3 _1
	0x30, 0x38, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x39, 0x37, 0x20, 0x2a, 0x20, 0x28, 0x30, // 083 = _1297 * (0
	0x2e, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x66, 0x65, 0x6e, 0x76, // .5 * _mtl_u.fenv
	0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, // EmissionScale_Te
	0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // xWidth.x);.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x38, 0x37, 0x20, //    float3 _1087 
	0x3d, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, // = (_mtl_u.matWor
	0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, // ldView * float4(
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x30, // 0.0, 0.0, 1.0, 0
	0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .0)).xyz;.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x30, 0x39, 0x30, 0x20, 0x3d, 0x20, //   float _1090 = 
	0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x30, 0x38, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x32, 0x33, // dot(_1087, _1023
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // );.        float
	0x20, 0x5f, 0x31, 0x31, 0x30, 0x31, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x30, //  _1101 = dot(_10
	0x38, 0x37, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, // 87, in.v_worldPo
	0x73, 0x20, 0x2d, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x57, // s - (_mtl_u.matW
	0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // orldView * float
	0x34, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, // 4(0.0, 0.0, 0.0,
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x31, //  1.0)).xyz) / _1
	0x30, 0x39, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // 090;.        flo
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x31, 0x31, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // at4 _1116 = _mtl
	0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x75, 0x69, 0x6e, 0x74, 0x28, // _u.matProj[uint(
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x5d, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, // in.v_eye)] * flo
	0x61, 0x74, 0x34, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, // at4(in.v_worldPo
	0x73, 0x20, 0x2d, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x32, 0x33, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x31, // s - (_1023 * _11
	0x30, 0x31, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 01), 1.0);.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x31, 0x31, 0x32, 0x37, 0x20, //    float2 _1127 
	0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, // = float2(0.5) + 
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x31, 0x31, 0x31, 0x36, 0x2e, 0x78, 0x2c, // (float2(_1116.x,
	0x20, 0x2d, 0x5f, 0x31, 0x31, 0x31, 0x36, 0x2e, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, //  -_1116.y) * (0.
	0x35, 0x20, 0x2f, 0x20, 0x5f, 0x31, 0x31, 0x31, 0x36, 0x2e, 0x77, 0x29, 0x29, 0x3b, 0x0a, 0x20, // 5 / _1116.w));. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, //        float3 _1
	0x31, 0x34, 0x31, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, // 141 = float3((_1
	0x31, 0x32, 0x37, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, // 127 + float2(_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // l_u.w_h_disableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // ighting.x, 0.0))
	0x2e, 0x78, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x32, 0x37, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, // .x, (_1127 + flo
	0x61, 0x74, 0x32, 0x28, 0x5f, 0x31, 0x37, 0x37, 0x33, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // at2(_1773, 0.0))
	0x2e, 0x79, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x3b, 0x0a, 0x20, // .y, in.v_eye);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, //        float4 _1
	0x33, 0x30, 0x36, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, // 306 = tex_ball_p
	0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // layfield.sample(
	0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, // tex_ball_playfie
	0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x31, 0x34, 0x31, // ldSampler, _1141
	0x2e, 0x78, 0x79, 0x2c, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x72, 0x69, 0x6e, 0x74, 0x28, 0x5f, // .xy, uint(rint(_
	0x31, 0x31, 0x34, 0x31, 0x2e, 0x7a, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 1141.z)));.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x31, 0x35, 0x38, 0x20, //    float3 _1158 
	0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, 0x31, 0x32, 0x37, 0x20, // = float3((_1127 
	0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // - float2(_mtl_u.
	0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, // w_h_disableLight
	0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, // ing.x, 0.0)).x, 
	0x28, 0x5f, 0x31, 0x31, 0x32, 0x37, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // (_1127 - float2(
	0x5f, 0x31, 0x37, 0x37, 0x33, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, // _1773, 0.0)).y, 
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // in.v_eye);.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x33, 0x31, 0x35, 0x20, //    float4 _1315 
	0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, // = tex_ball_playf
	0x69, 0x65, 0x6c, 0x64, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, // ield.sample(tex_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, // ball_playfieldSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x31, 0x35, 0x38, 0x2e, 0x78, 0x79, 0x2c, // mpler, _1158.xy,
	0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x72, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x31, 0x31, 0x35, 0x38, //  uint(rint(_1158
	0x2e, 0x7a, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // .z)));.        f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x31, 0x37, 0x36, 0x20, 0x3d, 0x20, 0x66, 0x6c, // loat3 _1176 = fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, 0x31, 0x32, 0x37, 0x20, 0x2b, 0x20, 0x66, 0x6c, // oat3((_1127 + fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x33, 0x29, // oat2(0.0, _1773)
	0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x32, 0x37, 0x20, 0x2b, 0x20, 0x66, 0x6c, // ).x, (_1127 + fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // oat2(0.0, _mtl_u
	0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, // .w_h_disableLigh
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, // ting.y)).y, in.v
	0x5f, 0x65, 0x79, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // _eye);.        f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x33, 0x32, 0x34, 0x20, 0x3d, 0x20, 0x74, 0x65, // loat4 _1324 = te
	0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, // x_ball_playfield
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // .sample(tex_ball
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // _playfieldSample
	0x72, 0x2c, 0x20, 0x5f, 0x31, 0x31, 0x37, 0x36, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x75, 0x69, 0x6e, // r, _1176.xy, uin
	0x74, 0x28, 0x72, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x31, 0x31, 0x37, 0x36, 0x2e, 0x7a, 0x29, 0x29, // t(rint(_1176.z))
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // );.        float
	0x33, 0x20, 0x5f, 0x31, 0x31, 0x39, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // 3 _1194 = float3
	0x28, 0x28, 0x5f, 0x31, 0x31, 0x32, 0x37, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // ((_1127 - float2
	0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x33, 0x29, 0x29, 0x2e, 0x78, 0x2c, // (0.0, _1773)).x,
	0x20, 0x28, 0x5f, 0x31, 0x31, 0x32, 0x37, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, //  (_1127 - float2
	0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, // (0.0, _mtl_u.w_h
	0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, // _disableLighting
	0x2e, 0x79, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x65, 0x79, 0x65, // .y)).y, in.v_eye
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // );.        float
	0x34, 0x20, 0x5f, 0x31, 0x33, 0x33, 0x33, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, // 4 _1333 = tex_ba
	0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x73, 0x61, 0x6d, // ll_playfield.sam
	0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, // ple(tex_ball_pla
	0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, // yfieldSampler, _
	0x31, 0x31, 0x39, 0x34, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x72, 0x69, // 1194.xy, uint(ri
	0x6e, 0x74, 0x28, 0x5f, 0x31, 0x31, 0x39, 0x34, 0x2e, 0x7a, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, // nt(_1194.z)));. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, //        float3 _1
	0x37, 0x37, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, // 774;.        if 
	0x28, 0x28, 0x21, 0x28, 0x28, 0x28, 0x28, 0x5f, 0x31, 0x31, 0x32, 0x37, 0x2e, 0x78, 0x20, 0x3c, // ((!((((_1127.x <
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x32, 0x37, 0x2e, //  0.0) || (_1127.
	0x78, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, // x > 1.0)) || (_1
	0x31, 0x32, 0x37, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, // 127.y < 0.0)) ||
	0x20, 0x28, 0x5f, 0x31, 0x31, 0x32, 0x37, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, //  (_1127.y > 1.0)
	0x29, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x21, 0x28, 0x5f, 0x31, 0x31, 0x30, 0x31, 0x20, 0x3c, // )) && (!(_1101 <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // = 0.0))).       
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //  {.            _
	0x31, 0x37, 0x37, 0x34, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x31, 0x30, 0x38, 0x33, // 1774 = mix(_1083
	0x2c, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x31, 0x33, 0x30, 0x36, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, // , (((_1306.xyz +
	0x20, 0x5f, 0x31, 0x33, 0x31, 0x35, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, //  _1315.xyz) + _1
	0x33, 0x32, 0x34, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x33, 0x33, 0x33, // 324.xyz) + _1333
	0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x2c, 0x20, 0x66, 0x6c, // .xyz) * 0.25, fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, // oat3(smoothstep(
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x35, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x35, // 0.0, 0.150000005
	0x39, 0x36, 0x30, 0x34, 0x36, 0x34, 0x34, 0x37, 0x37, 0x35, 0x33, 0x39, 0x30, 0x36, 0x32, 0x35, // 9604644775390625
	0x2c, 0x20, 0x5f, 0x31, 0x30, 0x39, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // , _1090) * _mtl_
	0x75, 0x2e, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, // u.invTableRes_re
	0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // flection.z));.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, // else.        {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x34, //            _1774
	0x20, 0x3d, 0x20, 0x5f, 0x31, 0x30, 0x38, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  = _1083;.      
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //   }.        floa
	0x74, 0x33, 0x20, 0x5f, 0x31, 0x32, 0x33, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, // t3 _1232 = fast:
	0x3a, 0x6d, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x37, 0x37, 0x34, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // :min(_1774, floa
	0x74, 0x33, 0x28, 0x31, 0x35, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // t3(15.0));.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x32, 0x33, 0x36, 0x20, //    float3 _1236 
	0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, // = _mtl_u.cBase_A
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x37, 0x35, // lpha.xyz * 0.075
	0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x39, 0x38, 0x30, 0x32, 0x33, 0x32, 0x32, 0x33, 0x38, 0x37, // 0000029802322387
	0x36, 0x39, 0x35, 0x33, 0x31, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 6953125;.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x32, 0x33, 0x39, 0x20, 0x3d, 0x20, //  float3 _1239 = 
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x32, 0x33, 0x36, 0x20, // fast::max(_1236 
	0x2a, 0x20, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, // * 2.0, float3(0.
	0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x34, 0x39, 0x30, 0x31, 0x31, 0x36, 0x31, // 1000000014901161
	0x31, 0x39, 0x33, 0x38, 0x34, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, // 19384765625));. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, //        float3 _1
	0x32, 0x34, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x33, 0x32, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // 244 = _1232 * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, // tl_u.cBase_Alpha
	0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // .xyz;.        fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x35, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, // oat _1350 = fast
	0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x32, 0x33, 0x36, 0x2e, 0x78, 0x2c, 0x20, 0x66, // ::max(_1236.x, f
	0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x32, 0x33, 0x36, 0x2e, 0x79, // ast::max(_1236.y
	0x2c, 0x20, 0x5f, 0x31, 0x32, 0x33, 0x36, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // , _1236.z));.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x35, 0x38, //      float _1358
	0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x32, //  = fast::max(_12
	0x33, 0x39, 0x2e, 0x78, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, // 39.x, fast::max(
	0x5f, 0x31, 0x32, 0x33, 0x39, 0x2e, 0x79, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x33, 0x39, 0x2e, 0x7a, // _1239.y, _1239.z
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ));.        floa
	0x74, 0x20, 0x5f, 0x31, 0x33, 0x36, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x33, 0x35, 0x30, 0x20, // t _1366 = _1350 
	0x2b, 0x20, 0x5f, 0x31, 0x33, 0x35, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // + _1358;.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x37, 0x3b, 0x0a, 0x20, //  float3 _1777;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, //        float3 _1
	0x37, 0x38, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, // 788;.        if 
	0x28, 0x5f, 0x31, 0x33, 0x36, 0x36, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, // (_1366 > 1.0).  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x37, 0x31, 0x20, //     float _1371 
	0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x5f, 0x31, 0x33, 0x36, 0x36, 0x3b, 0x0a, 0x20, // = 1.0 / _1366;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x38, //            _1788
	0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x33, 0x39, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x33, 0x37, 0x31, //  = _1239 * _1371
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, // ;.            _1
	0x37, 0x37, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x33, 0x36, 0x20, 0x2a, 0x20, 0x5f, 0x31, // 777 = _1236 * _1
	0x33, 0x37, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, // 371;.        }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, //        else.    
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x33, 0x39, 0x3b, //   _1788 = _1239;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, // .            _17
	0x37, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x33, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 77 = _1236;.    
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //     }.        fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // oat3 _1783;.    
	0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x74, 0x72, 0x75, 0x65, 0x20, 0x26, 0x26, //     if ((true &&
	0x20, 0x28, 0x5f, 0x31, 0x33, 0x35, 0x30, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, //  (_1350 > 0.0)) 
	0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x33, 0x35, 0x38, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, // || (_1358 > 0.0)
	0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ).        {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x31, 0x37, 0x38, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1784;.          
	0x20, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //   _1784 = float3
	0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // (0.0);.         
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x34, 0x30, 0x31, 0x3b, //    float3 _1401;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6f, 0x72, // .            for
	0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x35, 0x20, 0x3d, 0x20, 0x30, 0x3b, //  (int _1775 = 0;
	0x20, 0x5f, 0x31, 0x37, 0x37, 0x35, 0x20, 0x3c, 0x20, 0x31, 0x30, 0x3b, 0x20, 0x5f, 0x31, 0x37, //  _1775 < 10; _17
	0x38, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x34, 0x30, 0x31, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x37, // 84 = _1401, _177
	0x35, 0x2b, 0x2b, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 5++).           
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  {.             
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x39, 0x32, 0x3b, //    float3 _1792;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  do.            
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //           float3
	0x20, 0x5f, 0x31, 0x34, 0x36, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, //  _1465 = (_mtl_u
	0x2e, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // .matView * float
	0x34, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, // 4(_mtl_u.ballLig
	0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x5f, 0x31, 0x37, 0x37, 0x35, 0x5d, 0x2e, 0x78, 0x79, 0x7a, // htPos[_1775].xyz
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x69, 0x6e, // , 1.0)).xyz - in
	0x2e, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x3b, 0x0a, 0x20, 0x20, 0x20, // .v_worldPos;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x34, 0x36, 0x37, 0x20, 0x3d, 0x20, //  float3 _1467 = 
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // fast::normalize(
	0x5f, 0x31, 0x34, 0x36, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _1465);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //             floa
	0x74, 0x20, 0x5f, 0x31, 0x34, 0x36, 0x39, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, // t _1469 = dot(_1
	0x30, 0x32, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x36, 0x37, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 020, _1467);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x39, 0x3b, 0x0a, 0x20, //  float3 _1789;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x74, 0x72, 0x75, 0x65, 0x20, 0x26, 0x26, 0x20, 0x28, //    if (true && (
	0x28, 0x5f, 0x31, 0x34, 0x36, 0x39, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // (_1469 + _mtl_u.
	0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, // Roughness_WrapL_
	0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, // Edge_Thickness.y
	0x29, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ) > 0.0)).      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, //               {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, //         float _1
	0x34, 0x38, 0x34, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // 484 = 1.0 + _mtl
	0x5f, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, // _u.Roughness_Wra
	0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, // pL_Edge_Thicknes
	0x73, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // s.y;.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, //              _17
	0x38, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x37, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x5f, // 89 = _1777 * ((_
	0x31, 0x34, 0x36, 0x39, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x52, 0x6f, // 1469 + _mtl_u.Ro
	0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, // ughness_WrapL_Ed
	0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x29, 0x20, // ge_Thickness.y) 
	0x2f, 0x20, 0x28, 0x5f, 0x31, 0x34, 0x38, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x38, 0x34, // / (_1484 * _1484
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ));.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, //               el
	0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // se.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x5f, 0x31, 0x37, 0x38, 0x39, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, //  _1789 = float3(
	0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0.0);.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, //           }.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x39, 0x30, 0x3b, 0x0a, 0x20, 0x20, // float3 _1790;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x31, 0x34, 0x36, 0x39, 0x20, 0x3e, 0x20, 0x30, 0x2e, //   if (_1469 > 0.
	0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0).             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x34, 0x39, 0x34, 0x20, 0x3d, 0x20, //  float3 _1494 = 
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // fast::normalize(
	0x5f, 0x31, 0x34, 0x36, 0x37, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x30, 0x31, 0x38, 0x29, 0x3b, 0x0a, // _1467 + _1018);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, //         float _1
	0x34, 0x39, 0x36, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x30, 0x32, 0x30, 0x2c, // 496 = dot(_1020,
	0x20, 0x5f, 0x31, 0x34, 0x39, 0x34, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1494);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, 0x39, 0x39, 0x20, 0x3d, 0x20, 0x64, //  float _1499 = d
	0x6f, 0x74, 0x28, 0x5f, 0x31, 0x34, 0x36, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x39, 0x34, 0x29, // ot(_1467, _1494)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //           float 
	0x5f, 0x31, 0x35, 0x30, 0x31, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x30, 0x31, // _1501 = dot(_101
	0x38, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x39, 0x34, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 8, _1494);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x39, 0x31, 0x3b, //    float3 _1791;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x5f, //          if (((_
	0x31, 0x34, 0x39, 0x36, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, // 1496 > 0.0) && (
	0x5f, 0x31, 0x34, 0x39, 0x39, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x26, 0x26, // _1499 > 0.0)) &&
	0x20, 0x28, 0x5f, 0x31, 0x35, 0x30, 0x31, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, //  (_1501 > 0.0)).
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x39, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x31, //       _1791 = _1
	0x37, 0x38, 0x39, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x37, 0x38, 0x38, 0x20, 0x2b, 0x20, // 789 + ((_1788 + 
	0x28, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, // ((float3(1.0) - 
	0x5f, 0x31, 0x37, 0x38, 0x38, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x31, 0x2e, // _1788) * powr(1.
	0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x34, 0x39, 0x39, 0x2c, 0x20, 0x35, 0x2e, 0x30, 0x29, 0x29, // 0 - _1499, 5.0))
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x52, 0x6f, // ) * (((_mtl_u.Ro
	0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, // ughness_WrapL_Ed
	0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x20, 0x2b, // ge_Thickness.x +
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x38, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x5f, //  1.0) / (8.0 * _
	0x31, 0x35, 0x30, 0x31, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x5f, 0x31, // 1501)) * powr(_1
	0x34, 0x39, 0x36, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x67, // 496, _mtl_u.Roug
	0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, // hness_WrapL_Edge
	0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x3b, // _Thickness.x)));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          }.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    else.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, //               _1
	0x37, 0x39, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 791 = _1789;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      }.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //                _
	0x31, 0x37, 0x39, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, 0x39, 0x31, 0x3b, 0x0a, 0x20, 0x20, // 1790 = _1791;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   }.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, //         else.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  {.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x39, 0x30, //            _1790
	0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  = _1789;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, //               }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x32, 0x37, 0x20, //     float _1527 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x34, 0x36, 0x35, 0x2c, 0x20, 0x5f, 0x31, 0x34, // = dot(_1465, _14
	0x36, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 65);.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, //          float _
	0x31, 0x35, 0x34, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, // 1544 = fast::cla
	0x6d, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x35, 0x32, 0x37, // mp(1.0 - ((_1527
	0x20, 0x2a, 0x20, 0x5f, 0x31, 0x35, 0x32, 0x37, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x28, 0x28, 0x5f, //  * _1527) / (((_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, // mtl_u.cAmbient_L
	0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // ightRange.w * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, // tl_u.cAmbient_Li
	0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // ghtRange.w) * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, // tl_u.cAmbient_Li
	0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // ghtRange.w) * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, // tl_u.cAmbient_Li
	0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x29, 0x29, 0x2c, 0x20, 0x30, 0x2e, // ghtRange.w)), 0.
	0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0, 1.0);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, //              flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x35, 0x36, 0x38, 0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, // at3 _1568 = fma(
	0x5f, 0x31, 0x37, 0x38, 0x38, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x37, 0x2c, 0x20, 0x5f, // _1788 + _1777, _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, // mtl_u.cAmbient_L
	0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x28, // ightRange.xyz, (
	0x5f, 0x31, 0x37, 0x39, 0x30, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x62, // _1790 * _mtl_u.b
	0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, // allLightEmission
	0x5b, 0x5f, 0x31, 0x37, 0x37, 0x35, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x28, // [_1775].xyz) * (
	0x28, 0x5f, 0x31, 0x35, 0x34, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x35, 0x34, 0x34, 0x29, 0x20, // (_1544 * _1544) 
	0x2f, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x32, 0x37, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, // / (_1527 + 1.0))
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, //        if (_mtl_
	0x75, 0x2e, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, // u.fDisableLighti
	0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x21, // ng_top_below.x !
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // = 0.0).         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //            {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x39, 0x32, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, //      _1792 = mix
	0x28, 0x5f, 0x31, 0x35, 0x36, 0x38, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x37, 0x2c, 0x20, 0x66, // (_1568, _1777, f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x66, 0x44, 0x69, // loat3(_mtl_u.fDi
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, // sableLighting_to
	0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // p_below.x));.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //      break;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // }.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //       else.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, //                {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x39, 0x32, 0x20, 0x3d, //          _1792 =
	0x20, 0x5f, 0x31, 0x35, 0x36, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1568;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // break;.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, //            }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, 0x65, 0x61, //  break; // unrea
	0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, // chable workaroun
	0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // d.              
	0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, //   } while(false)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x5f, 0x31, 0x34, 0x30, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x34, 0x20, //   _1401 = _1784 
	0x2b, 0x20, 0x5f, 0x31, 0x37, 0x39, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // + _1792;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      }.         
	0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x34, //    _1783 = _1784
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, // ;.        }.    
	0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     else.       
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //  {.            _
	0x31, 0x37, 0x38, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, // 1783 = float3(0.
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, // 0);.        }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, //       float3 _17
	0x38, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, // 85;.        if (
	0x74, 0x72, 0x75, 0x65, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x33, 0x35, 0x30, 0x20, 0x3e, // true && (_1350 >
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, //  0.0)).        {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // .            flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x34, 0x32, 0x31, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, // at3 _1421 = fast
	0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x5f, 0x6d, 0x74, // ::normalize((_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, // l_u.matView * fl
	0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x30, 0x32, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, // oat4(_1020, 0.0)
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ).xyz);.        
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x31, 0x37, 0x20, //     float _1617 
	0x3d, 0x20, 0x5f, 0x31, 0x34, 0x32, 0x31, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // = _1421.y;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, //        float _16
	0x31, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x34, 0x32, 0x31, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, // 18 = _1421.x;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //           float 
	0x5f, 0x31, 0x37, 0x37, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _1779;.         
	0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    do.          
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   {.            
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x33, 0x33, 0x20, //     float _1633 
	0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x31, 0x36, 0x31, 0x37, 0x29, 0x3b, 0x0a, 0x20, 0x20, // = abs(_1617);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x33, 0x34, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, // oat _1634 = abs(
	0x5f, 0x31, 0x36, 0x31, 0x38, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _1618);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x36, //         if ((_16
	0x33, 0x34, 0x20, 0x3c, 0x3d, 0x20, 0x36, 0x2e, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, // 34 <= 6.10351562
	0x35, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x36, 0x33, 0x33, // 5e-05) && (_1633
	0x20, 0x3c, 0x3d, 0x20, 0x36, 0x2e, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x65, //  <= 6.103515625e
	0x2d, 0x30, 0x35, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // -05)).          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x37, //             _177
	0x39, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 9 = 0.0;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, //              bre
	0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ak;.            
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     }.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x34, //       float _164
	0x38, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x36, 0x33, 0x34, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x36, // 8 = (_1634 - _16
	0x33, 0x33, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x31, 0x36, 0x33, 0x34, 0x20, 0x2b, 0x20, 0x5f, // 33) / (_1634 + _
	0x31, 0x36, 0x33, 0x33, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1633);.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, //        float _16
	0x36, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x30, 0x2e, 0x30, // 62 = fma(fma(0.0
	0x33, 0x33, 0x37, 0x31, 0x39, 0x38, 0x33, 0x37, 0x36, 0x36, 0x35, 0x35, 0x35, 0x37, 0x38, 0x36, // 3371983766555786
	0x31, 0x33, 0x32, 0x38, 0x31, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x36, 0x34, 0x38, 0x2c, // 1328125 * _1648,
	0x20, 0x5f, 0x31, 0x36, 0x34, 0x38, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x37, 0x31, 0x33, //  _1648, -0.15713
	0x34, 0x34, 0x37, 0x33, 0x33, 0x32, 0x33, 0x38, 0x32, 0x32, 0x30, 0x32, 0x31, 0x34, 0x38, 0x34, // 4473323822021484
	0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x36, 0x31, 0x38, 0x20, 0x3c, 0x20, 0x30, // 375), (_1618 < 0
	0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x2d, 0x5f, 0x31, 0x36, 0x34, 0x38, 0x29, 0x20, 0x3a, // .0) ? (-_1648) :
	0x20, 0x5f, 0x31, 0x36, 0x34, 0x38, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x36, 0x31, 0x38, 0x20, 0x3c, //  _1648, (_1618 <
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x33, 0x37, 0x35, 0x20, 0x3a, 0x20, //  0.0) ? 0.375 : 
	0x30, 0x2e, 0x31, 0x32, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0.125);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x39, 0x20, 0x3d, 0x20, //         _1779 = 
	0x28, 0x5f, 0x31, 0x36, 0x31, 0x37, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, // (_1617 < 0.0) ? 
	0x28, 0x2d, 0x5f, 0x31, 0x36, 0x36, 0x32, 0x29, 0x20, 0x3a, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x32, // (-_1662) : _1662
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   break;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, //      } while(fal
	0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // se);.           
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x32, 0x31, 0x20, 0x3d, 0x20, 0x5f, //  float _1621 = _
	0x31, 0x34, 0x32, 0x31, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1421.z;.        
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x30, 0x3b, //     float _1780;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, // .            do.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, //             {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x37, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, // oat _1677 = abs(
	0x5f, 0x31, 0x36, 0x32, 0x31, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _1621);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x31, 0x2e, 0x30, //         if ((1.0
	0x20, 0x2d, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x37, 0x29, 0x20, 0x3c, 0x3d, 0x20, 0x36, 0x2e, 0x31, //  - _1677) <= 6.1
	0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x0a, 0x20, 0x20, // 03515625e-05).  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, //               {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x36, //     _1780 = (_16
	0x32, 0x31, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x30, // 21 >= 0.0) ? 0.0
	0x20, 0x3a, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  : 1.0;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, //             brea
	0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // k;.             
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    }.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x37, //      float _1687
	0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x34, 0x39, 0x36, 0x34, 0x37, //  = fma(-0.049647
	0x34, 0x32, 0x38, 0x30, 0x39, 0x35, 0x33, 0x34, 0x30, 0x37, 0x32, 0x38, 0x37, 0x35, 0x39, 0x37, // 4280953407287597
	0x36, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x37, 0x2c, 0x20, 0x30, 0x2e, // 65625, _1677, 0.
	0x34, 0x39, 0x38, 0x30, 0x34, 0x39, 0x39, 0x31, 0x34, 0x38, 0x33, 0x36, 0x38, 0x38, 0x33, 0x35, // 4980499148368835
	0x34, 0x34, 0x39, 0x32, 0x31, 0x38, 0x37, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 44921875);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x20, 0x5f, 0x31, 0x36, 0x39, 0x30, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, //  _1690 = sqrt(1.
	0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x37, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 0 - _1677);.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x38, //             _178
	0x30, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x36, 0x32, 0x31, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, // 0 = (_1621 >= 0.
	0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x5f, 0x31, 0x36, 0x38, 0x37, 0x20, 0x2a, 0x20, 0x5f, 0x31, // 0) ? (_1687 * _1
	0x36, 0x39, 0x30, 0x29, 0x20, 0x3a, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x2d, 0x5f, 0x31, 0x36, 0x38, // 690) : fma(-_168
	0x37, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x39, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // 7, _1690, 1.0);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // break;.         
	0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, //    } while(false
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, // );.            _
	0x31, 0x37, 0x38, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x33, 0x20, 0x2b, 0x20, 0x28, // 1785 = _1783 + (
	0x28, 0x5f, 0x31, 0x37, 0x37, 0x37, 0x20, 0x2a, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, // (_1777 * tex_dif
	0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // fuse_env.sample(
	0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x53, // tex_diffuse_envS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, // ampler, float2(0
	0x2e, 0x35, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x39, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x38, // .5 + _1779, _178
	0x30, 0x29, 0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, // 0), level(0.0)).
	0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x66, 0x65, // xyz) * _mtl_u.fe
	0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, // nvEmissionScale_
	0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // TexWidth.x);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, //      }.        e
	0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, // lse.        {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x35, 0x20, //           _1785 
	0x3d, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // = _1783;.       
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  }.        float
	0x33, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 3 _1786;.       
	0x20, 0x69, 0x66, 0x20, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, //  if (fast::max(_
	0x31, 0x32, 0x34, 0x34, 0x2e, 0x78, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, // 1244.x, fast::ma
	0x78, 0x28, 0x5f, 0x31, 0x32, 0x34, 0x34, 0x2e, 0x79, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x34, 0x34, // x(_1244.y, _1244
	0x2e, 0x7a, 0x29, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // .z)) > 0.0).    
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x36, 0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, //   _1786 = fma(_1
	0x32, 0x33, 0x32, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x42, 0x61, 0x73, // 232, _mtl_u.cBas
	0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x31, 0x37, // e_Alpha.xyz, _17
	0x38, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, // 85);.        }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, //        else.    
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x35, 0x3b, //   _1786 = _1785;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .        }.     
	0x20, 0x20, 0x20, 0x5f, 0x31, 0x38, 0x30, 0x31, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //    _1801 = float
	0x34, 0x28, 0x5f, 0x31, 0x37, 0x38, 0x36, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // 4(_1786, _mtl_u.
	0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, // cBase_Alpha.w);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, //         break;. 
	0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, //    } while(false
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, // );.    out.bgfx_
	0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x38, 0x30, // FragData0 = _180
	0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, // 1;.    return ou
	0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, 0x50, 0x03,                                     // t;.}....P.
};
static const uint8_t fs_ball_spherical_decal_st_essl[14435] =
{
	0x46, 0x53, 0x48, 0x0b, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x38, // FSH..N........P8
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // s.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, // arying in.precis
	0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3b, // ion highp float;
	0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // .precision highp
	0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, //  int;.precision 
	0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, // highp sampler2DA
	0x72, 0x72, 0x61, 0x79, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, // rray;.#define sh
	0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adow2D(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //  _coord) texture
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // (_sampler, _coor
	0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, // d).#define shado
	0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // w2DProj(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // eProj(_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, // _coord).#extensi
	0x6f, 0x6e, 0x20, 0x47, 0x4c, 0x5f, 0x45, 0x58, 0x54, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // on GL_EXT_textur
	0x65, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x20, 0x3a, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, // e_array : enable
	0x0a, 0x6f, 0x75, 0x74, 0x20, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x70, 0x20, 0x76, 0x65, 0x63, // .out mediump vec
	0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // 4 bgfx_FragColor
	0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ;.varying float 
	0x76, 0x5f, 0x65, 0x79, 0x65, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, // v_eye;.varying v
	0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x76, 0x61, // ec3 v_normal;.va
	0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, // rying vec2 v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, // coord0;.varying 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x3b, // vec3 v_worldPos;
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, // .vec3 instMul(ve
	0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, // c3 _vec, mat3 _m
	0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, // tx) { return ( (
	0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, // _vec) * (_mtx) )
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, // ; }.vec3 instMul
	0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // (mat3 _mtx, vec3
	0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _vec) { return 
	0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, // ( (_mtx) * (_vec
	0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, // ) ); }.vec4 inst
	0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, // Mul(vec4 _vec, m
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // at4 _mtx) { retu
	0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, // rn ( (_vec) * (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, // mtx) ); }.vec4 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, // nstMul(mat4 _mtx
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, // , vec4 _vec) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, // eturn ( (_mtx) *
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, //  (_vec) ); }.flo
	0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, // at rcp(float _a)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, //  { return 1.0/_a
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, // ; }.vec2 rcp(vec
	0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // 2 _a) { return v
	0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // ec2(1.0)/_a; }.v
	0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, // ec3 rcp(vec3 _a)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, //  { return vec3(1
	0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, // .0)/_a; }.vec4 r
	0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // cp(vec4 _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, // turn vec4(1.0)/_
	0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, // a; }.vec2 vec2_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // plat(float _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, //  return vec2(_x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, //  _x); }.vec3 vec
	0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, // 3_splat(float _x
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // ) { return vec3(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // _x, _x, _x); }.v
	0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, // ec4 vec4_splat(f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // loat _x) { retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // n vec4(_x, _x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, // x, _x); }.uvec2 
	0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec2_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, //  _x) { return uv
	0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, // ec2(_x, _x); }.u
	0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // vec3 uvec3_splat
	0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // (uint _x) { retu
	0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // rn uvec3(_x, _x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, //  _x); }.uvec4 uv
	0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, // ec4_splat(uint _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, // x) { return uvec
	0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // 4(_x, _x, _x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, // ); }.mat4 mtxFro
	0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, // mRows(vec4 _0, v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, // ec4 _1, vec4 _2,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  vec4 _3).{.retu
	0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, // rn transpose(mat
	0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, // 4(_0, _1, _2, _3
	0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, // ) );.}.mat4 mtxF
	0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, // romCols(vec4 _0,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, //  vec4 _1, vec4 _
	0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 2, vec4 _3).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, // turn mat4(_0, _1
	0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, // , _2, _3);.}.mat
	0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, // 3 mtxFromRows(ve
	0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, // c3 _0, vec3 _1, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // vec3 _2).{.retur
	0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, // n transpose(mat3
	0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, // (_0, _1, _2) );.
	0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, // }.mat3 mtxFromCo
	0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // ls(vec3 _0, vec3
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, //  _1, vec3 _2).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, // return mat3(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // _1, _2);.}.unifo
	0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, // rm vec4 u_viewRe
	0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // ct;.uniform vec4
	0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, //  u_viewTexel;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // iform mat4 u_vie
	0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // w;.uniform mat4 
	0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // u_invView;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, // rm mat4 u_proj;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, // uniform mat4 u_i
	0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // nvProj;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, // mat4 u_viewProj;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // invViewProj;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, // form mat4 u_mode
	0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // l[32];.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, // at4 u_modelView;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, // modelViewProj;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, // niform vec4 u_al
	0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // phaRef4;.float s
	0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, // qr(const float v
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, // ).{.return v*v;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // }.vec2 sqr(const
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  vec2 v).{.retur
	0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x71, // n v*v;.}.vec3 sq
	0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, // r(const vec3 v).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, // {.return v*v;.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x63, 0x6f, 0x6e, 0x73, // vec3 mul_w1(cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // t vec3 v, const 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // mat4 m).{.return
	0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, //  v.x*m[0].xyz + 
	0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, // (v.y*m[1].xyz + 
	0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, // (v.z*m[2].xyz + 
	0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // m[3].xyz));.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, // oat acos_approx_
	0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // divPI(const floa
	0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // t v).{.const flo
	0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, // at x = abs(v);.i
	0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, // f(1. - x <= 0.00
	0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, // 006103515625).re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // turn (v >= 0.) ?
	0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  0. : 1.;.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, // float res = ((-0
	0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, // .155972/3.141592
	0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, // 6535897932384626
	0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, // 433832795) * x +
	0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, //  (1.56467/3.1415
	0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, // 9265358979323846
	0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, // 26433832795) ) *
	0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, //  sqrt(1. - x);.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, // eturn (v >= 0.) 
	0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, // ? res : 1. - res
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, // ;.}.float atan2_
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x63, 0x6f, // approx_div2PI(co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, // nst float y, con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, // st float x).{.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, // nst float abs_y 
	0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // = abs(y);.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, // float abs_x = ab
	0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, // s(x);.if(abs_x <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, // = 0.000061035156
	0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, // 25 && abs_y <= 0
	0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, // .00006103515625)
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // .return 0.;.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, // t float r = (abs
	0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, // _x - abs_y) / (a
	0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x63, // bs_x + abs_y);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, // onst float angle
	0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, //  = ((x < 0.) ? (
	0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, // 3./8.) : (1./8.)
	0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, // ).+ (0.211868 /(
	0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, // 2.*3.14159265358
	0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, // 9793238462643383
	0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, // 2795) * r * r - 
	0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, // 0.987305 /(2.*3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, // ) * ((x < 0.) ? 
	0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // -r : r);.return 
	0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, // (y < 0.) ? -angl
	0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // e : angle;.}.flo
	0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, // at asin_approx_d
	0x69, 0x76, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ivPI(const float
	0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, //  v).{.const floa
	0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, // t x = abs(v);.if
	0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, // (1. - x <= 0.000
	0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, // 06103515625).ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, // urn (v >= 0.) ? 
	0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // 0.5 : -0.5;.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, // t float res = ((
	0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, // -0.155972/3.1415
	0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, // 9265358979323846
	0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, // 26433832795) * x
	0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, //  + (1.56467/3.14
	0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, // 1592653589793238
	0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, // 4626433832795) )
	0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, //  * sqrt(1. - x);
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, // .return (v >= 0.
	0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, // ) ? 0.5 - res : 
	0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // -0.5 + res;.}.ve
	0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, // c2 ray_to_equire
	0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x63, 0x6f, 0x6e, // ctangular_uv(con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // st vec3 ray).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, // eturn vec2(.0.5 
	0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, // + atan2_approx_d
	0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, // iv2PI(ray.y, ray
	0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, // .x),.acos_approx
	0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, // _divPI(ray.z));.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, // }.float InvsRGB(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // const float colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, // r).{.if (color <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // = 0.04045).retur
	0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, // n color * (1.0/1
	0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, // 2.92);.else.retu
	0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, // rn pow(color * (
	0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, // 1.0/1.055) + (0.
	0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, // 055/1.055), 2.4)
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, // ;.}.float InvRec
	0x37, 0x30, 0x39, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 709(const float 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, // color).{.if (col
	0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, // or <= 0.081).ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, // urn color * (1.0
	0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, // /4.5);.else.retu
	0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, // rn pow(color * (
	0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, // 1.0/1.099) + (0.
	0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, // 099/1.099), 1.0/
	0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, // 0.45);.}.float I
	0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // nvGamma(const fl
	0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // oat color).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // urn InvsRGB(colo
	0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, // r);.}.vec3 InvGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // mma(const vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // olor).{.return v
	0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, // ec3(InvGamma(col
	0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, // or.x),InvGamma(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, // olor.y),InvGamma
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // (color.z));.}.ve
	0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, // c3 InvToneMap(co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // nst vec3 color).
	0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, // {.const float in
	0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, // v_2bh = 0.5/0.25
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, // ;.const float bh
	0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, //  = 4.0*0.25 - 2.
	0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // 0;.return (color
	0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, //  - 1.0 + sqrt(co
	0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, // lor*(color + bh)
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, //  + 1.0))*inv_2bh
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, // ;.}.float sRGB(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, // onst float f).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, // float s;.if (f <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, // = 0.0031308).s =
	0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, //  12.92 * f;.else
	0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, // .s = 1.055 * pow
	0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, // (f, 1.0/2.4) - 0
	0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, // .055;.return s;.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x63, // }.float Rec709(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, // onst float f).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, // float s;.if (f <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, // = 0.018).s = 4.5
	0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, //  * f;.else.s = 1
	0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, // .099 * pow(f, 0.
	0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, // 45) - 0.099;.ret
	0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, // urn s;.}.float F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // BGamma(const flo
	0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // at color).{.retu
	0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, // rn sRGB(color);.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, // }.vec2 FBGamma(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // onst vec2 color)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x46, // .{.return vec2(F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, // BGamma(color.x),
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, // FBGamma(color.y)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // );.}.vec3 FBGamm
	0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, // a(const vec3 col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // or).{.return vec
	0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // 3(FBGamma(color.
	0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // x),FBGamma(color
	0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .y),FBGamma(colo
	0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, // r.z));.}.float F
	0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // BToneMap(const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // loat l).{.return
	0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, //  l * ((l*0.25 + 
	0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // 1.0) / (l + 1.0)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, // );.}.vec2 FBTone
	0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, // Map(const vec2 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // olor).{.const fl
	0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // oat l = dot(colo
	0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, // r,vec2(0.176204+
	0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, // 0.0108109*0.5,0.
	0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, // 812985+0.0108109
	0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, // *0.5));.return c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, // olor * ((l*0.25 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, // + 1.0) / (l + 1.
	0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, // 0));.}.vec3 FBTo
	0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, // neMap(const vec3
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  color).{.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, // float l = dot(co
	0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, // lor,vec3(0.17620
	0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, // 4,0.812985,0.010
	0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, // 8109));.return c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, // olor * ((l*0.25 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, // + 1.0) / (l + 1.
	0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, 0x64, 0x69, // 0));.}.vec4 Addi
	0x74, 0x69, 0x76, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // tive(const vec4 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // cBase, const vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // 4 cBlend, const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, // float percent).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, // .return cBase + 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, // cBlend*percent;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x63, // }.vec3 Screen (c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // onst vec3 cBase,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, //  const vec3 cBle
	0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, // nd).{.return 1.0
	0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, //  - (1.0 - cBase)
	0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, //  * (1.0 - cBlend
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, // );.}.vec4 Screen
	0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, //  (const vec4 cBa
	0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // se, const vec4 c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // Blend).{.return 
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, // 1.0 - (1.0 - cBa
	0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, // se) * (1.0 - cBl
	0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, // end);.}.vec3 Scr
	0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // eenHDR (const ve
	0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // c3 cBase, const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // vec3 cBlend).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // eturn max(1.0 - 
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, // (1.0 - cBase) * 
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, // (1.0 - cBlend), 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, // vec3(0.,0.,0.));
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, // .}.vec4 ScreenHD
	0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // R (const vec4 cB
	0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // ase, const vec4 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // cBlend).{.return
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, //  max(1.0 - (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // - cBase) * (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // - cBlend), vec4(
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, // 0.,0.,0.,0.));.}
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, // .vec4 Multiply (
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // const vec4 cBase
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, // , const vec4 cBl
	0x65, 0x6e, 0x64, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // end, const float
	0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  percent).{.retu
	0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // rn cBase * cBlen
	0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // d*percent;.}.vec
	0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // 4 Overlay (const
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, //  vec4 cBase, con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, // st vec4 cBlend).
	0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, // {.vec4 cNew = st
	0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, // ep(0.5, cBase);.
	0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, // cNew = mix(cBase
	0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, // *cBlend*2.0, 1.0
	0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, // -2.0*(1.0-cBase)
	0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, // *(1.0-cBlend), c
	0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, // New);.return cNe
	0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, // w;.}.vec4 Overla
	0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, // yHDR (const vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, //  cBase, const ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, // c4 cBlend).{.vec
	0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, // 4 cNew = step(0.
	0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, // 5, cBase);.cNew 
	0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, // = max(mix(cBase*
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, // cBlend*2.0, 1.0-
	0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, // 2.0*(1.0-cBase)*
	0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, // (1.0-cBlend), cN
	0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, // ew), vec4(0.,0.,
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 0.,0.));.return 
	0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, // cNew;.}.vec3 cos
	0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, // _hemisphere_samp
	0x6c, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, // le(const vec2 t)
	0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, // .{.const float p
	0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, // hi = t.y * (2.0*
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 5);.const float 
	0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // cosTheta = sqrt(
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // 1.0 - t.x);.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, // t float sinTheta
	0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, //  = sqrt(t.x);.fl
	0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x73, 0x69, 0x6e, 0x63, 0x6f, // oat sp,cp;.sinco
	0x73, 0x28, 0x70, 0x68, 0x69, 0x2c, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x29, 0x3b, 0x0a, 0x72, 0x65, // s(phi,sp,cp);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, // turn vec3(cp * s
	0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, // inTheta, cosThet
	0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, // a, sp * sinTheta
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, // );.}.vec3 rotate
	0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, // _to_vector_upper
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, // (const vec3 vec,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, //  const vec3 norm
	0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // al).{.if(normal.
	0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, // y > -0.99999).{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, // const float h = 
	0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // 1.0/(1.0+normal.
	0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // y);.const float 
	0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, // hz = h*normal.z;
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, // .const float hzx
	0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, //  = hz*normal.x;.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, // return vec3(.vec
	0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, // .x * (normal.y+h
	0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, // z*normal.z) + ve
	0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, // c.y * normal.x -
	0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, //  vec.z * hzx,.ve
	0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, // c.y * normal.y -
	0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, //  vec.x * normal.
	0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // x - vec.z * norm
	0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, // al.z,.vec.y * no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, // rmal.z - vec.x *
	0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, //  hzx + vec.z * (
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // normal.y+h*norma
	0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, // l.x*normal.x));.
	0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, // }.else return -v
	0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // ec;.}.uniform ma
	0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // t4 matView;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, // orm mat4 matWorl
	0x64, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // dView;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, // at4 matWorldView
	0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // Inverse;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, //  mat4 matWorldVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // ewProj[2];.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x5b, // rm mat4 matProj[
	0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, // 2];.uniform samp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, // ler2D tex_ball_c
	0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, // olor;.uniform sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x3b, // mpler2D tex_env;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .uniform sampler
	0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, // 2D tex_diffuse_e
	0x6e, 0x76, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, // nv;.uniform samp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, // ler2D tex_ball_d
	0x65, 0x63, 0x61, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, // ecal;.uniform sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x74, 0x65, 0x78, // mpler2DArray tex
	0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x3b, // _ball_playfield;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, // .uniform vec4 u_
	0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, // basic_shade_mode
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, // ;.uniform vec4 b
	0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x32, 0x20, 0x2b, 0x20, // allLightPos[2 + 
	0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // 8];.uniform vec4
	0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, //  ballLightEmissi
	0x6f, 0x6e, 0x5b, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // on[2 + 8];.unifo
	0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, // rm vec4 cAmbient
	0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // _LightRange;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, // form vec4 fenvEm
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, // issionScale_TexW
	0x69, 0x64, 0x74, 0x68, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // idth;.uniform ve
	0x63, 0x34, 0x20, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, // c4 fDisableLight
	0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x3b, 0x0a, 0x75, // ing_top_below;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x53, 0x63, 0x65, // niform vec4 fSce
	0x6e, 0x65, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // neScale;.uniform
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, //  vec4 cBase_Alph
	0x61, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // a;.uniform vec4 
	0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, // Roughness_WrapL_
	0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, // Edge_Thickness;.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4f, // float GeometricO
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // pacity(const flo
	0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // at NdotV, const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x6e, // float alpha, con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, // st float blendin
	0x67, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, // g, const float t
	0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // hickness).{.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, // t float x = abs(
	0x4e, 0x64, 0x6f, 0x74, 0x56, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // NdotV);.const fl
	0x6f, 0x61, 0x74, 0x20, 0x67, 0x20, 0x3d, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, // oat g = blending
	0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x78, 0x20, 0x2f, 0x20, 0x28, //  * (1.0 - (x / (
	0x78, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, // x * (1.0 - thick
	0x6e, 0x65, 0x73, 0x73, 0x29, 0x20, 0x2b, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, // ness) + thicknes
	0x73, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, // s)));.return mix
	0x28, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x67, 0x29, 0x3b, // (alpha, 1.0, g);
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, // .}.vec3 FresnelS
	0x63, 0x68, 0x6c, 0x69, 0x63, 0x6b, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // chlick(const vec
	0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // 3 spec, const fl
	0x6f, 0x61, 0x74, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, // oat LdotH, const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x72, //  float edge).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x70, 0x65, 0x63, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x65, // eturn spec + (ve
	0x63, 0x33, 0x28, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x65, 0x64, 0x67, // c3(edge,edge,edg
	0x65, 0x29, 0x20, 0x2d, 0x20, 0x73, 0x70, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, // e) - spec) * pow
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x35, 0x2e, // (1.0 - LdotH, 5.
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, // );.}.vec3 DoPoin
	0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // tLight(const vec
	0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // 3 pos, const vec
	0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // 3 N, const vec3 
	0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, // V, const vec3 di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // ffuse, const vec
	0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // 3 glossy, const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // float edge, cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, // t float glossyPo
	0x77, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x69, // wer, const int i
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, // , const bool is_
	0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // metal).{.const v
	0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x28, // ec3 lightDir = (
	0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, //  ( (matView) * (
	0x76, 0x65, 0x63, 0x34, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, // vec4(ballLightPo
	0x73, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, // s[i].xyz, 1.0)) 
	0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x70, 0x6f, 0x73, 0x3b, 0x0a, 0x63, // ) ).xyz - pos;.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4c, 0x20, 0x3d, 0x20, 0x6e, 0x6f, // onst vec3 L = no
	0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, // rmalize(lightDir
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, // );.const float N
	0x64, 0x6f, 0x74, 0x4c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x20, 0x4c, 0x29, // dotL = dot(N, L)
	0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, // ;.vec3 Out = vec
	0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // 3(0.0,0.0,0.0);.
	0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, // if (!is_metal &&
	0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x2b, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, //  (NdotL + Roughn
	0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, // ess_WrapL_Edge_T
	0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, // hickness.y > 0.0
	0x29, 0x29, 0x0a, 0x4f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // )).Out = diffuse
	0x20, 0x2a, 0x20, 0x28, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x2b, 0x20, 0x52, 0x6f, 0x75, //  * ((NdotL + Rou
	0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, // ghness_WrapL_Edg
	0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x29, 0x20, 0x2f, // e_Thickness.y) /
	0x20, 0x73, 0x71, 0x72, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, //  sqr(1.0+Roughne
	0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, // ss_WrapL_Edge_Th
	0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, // ickness.y));.if 
	0x28, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, // (NdotL > 0.0).{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x48, 0x20, 0x3d, 0x20, 0x6e, // const vec3 H = n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x4c, 0x20, 0x2b, 0x20, 0x56, 0x29, 0x3b, // ormalize(L + V);
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, // .const float Ndo
	0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, // tH = dot(N, H);.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4c, 0x64, 0x6f, 0x74, // const float Ldot
	0x48, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4c, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x63, // H = dot(L, H);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x56, 0x64, 0x6f, 0x74, 0x48, // onst float VdotH
	0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x56, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x69, 0x66, //  = dot(V, H);.if
	0x20, 0x28, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, //  ((NdotH > 0.0) 
	0x26, 0x26, 0x20, 0x28, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, // && (LdotH > 0.0)
	0x20, 0x26, 0x26, 0x20, 0x28, 0x56, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, //  && (VdotH > 0.0
	0x29, 0x29, 0x0a, 0x4f, 0x75, 0x74, 0x20, 0x2b, 0x3d, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, // )).Out += Fresne
	0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, 0x6b, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, // lSchlick(glossy,
	0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x65, 0x64, 0x67, 0x65, 0x29, 0x20, 0x2a, 0x20, //  LdotH, edge) * 
	0x28, 0x28, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x2b, // (((glossyPower +
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x38, 0x2e, 0x30, 0x2a, 0x56, 0x64, 0x6f, //  1.0) / (8.0*Vdo
	0x74, 0x48, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x48, // tH)) * pow(NdotH
	0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x29, 0x29, 0x3b, // , glossyPower));
	0x0a, 0x7d, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // .}.const float s
	0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x64, // qrl_lightDir = d
	0x6f, 0x74, 0x28, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2c, 0x6c, 0x69, 0x67, 0x68, // ot(lightDir,ligh
	0x74, 0x44, 0x69, 0x72, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x41, 0x74, // tDir);.float fAt
	0x74, 0x65, 0x6e, 0x20, 0x3d, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, // ten = clamp(1.0 
	0x2d, 0x20, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2a, // - sqrl_lightDir*
	0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2f, 0x28, 0x63, // sqrl_lightDir/(c
	0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, // Ambient_LightRan
	0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, // ge.w*cAmbient_Li
	0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, 0x69, // ghtRange.w*cAmbi
	0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, // ent_LightRange.w
	0x2a, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, // *cAmbient_LightR
	0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, // ange.w), 0.0, 1.
	0x30, 0x29, 0x3b, 0x0a, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x3d, 0x20, 0x66, 0x41, 0x74, // 0);.fAtten = fAt
	0x74, 0x65, 0x6e, 0x2a, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x2f, 0x28, 0x73, 0x71, 0x72, 0x6c, // ten*fAtten/(sqrl
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // _lightDir + 1.0)
	0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x3d, // ;.vec3 ambient =
	0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, //  glossy;.if (!is
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, // _metal).ambient 
	0x2b, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // += diffuse;.cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x20, 0x3d, 0x20, // t vec3 result = 
	0x4f, 0x75, 0x74, 0x20, 0x2a, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, // Out * ballLightE
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, // mission[i].xyz *
	0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x2b, 0x20, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, //  fAtten + ambien
	0x74, 0x20, 0x2a, 0x20, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, // t * cAmbient_Lig
	0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x69, 0x66, 0x20, // htRange.xyz;.if 
	0x28, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, // (fDisableLightin
	0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x21, 0x3d, // g_top_below.x !=
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, //  0.0).return mix
	0x28, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, // (result,diffuse,
	0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, // fDisableLighting
	0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x65, // _top_below.x);.e
	0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, // lse.return resul
	0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, // t;.}.vec3 DoEnvm
	0x61, 0x70, 0x44, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // apDiffuse(const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // vec3 N, const ve
	0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, // c3 diffuse).{.co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, // nst vec3 env = t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, // extureLod(tex_di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, // ffuse_env, ray_t
	0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, // o_equirectangula
	0x72, 0x5f, 0x75, 0x76, 0x28, 0x4e, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x79, // r_uv(N), 0.0).xy
	0x7a, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // z;.return diffus
	0x65, 0x20, 0x2a, 0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, // e * env*fenvEmis
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, // sionScale_TexWid
	0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, // th.x;.}.vec3 DoE
	0x6e, 0x76, 0x6d, 0x61, 0x70, 0x47, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x28, 0x63, 0x6f, 0x6e, 0x73, // nvmapGlossy(cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // t vec3 N, const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // vec3 V, const ve
	0x63, 0x32, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // c2 Ruv, const ve
	0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, // c3 glossy, const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, //  float glossyPow
	0x65, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // er).{.const floa
	0x74, 0x20, 0x6d, 0x69, 0x70, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, 0x6c, 0x6f, 0x67, 0x32, // t mip = min(log2
	0x28, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, // (fenvEmissionSca
	0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x79, 0x20, 0x2a, 0x20, // le_TexWidth.y * 
	0x73, 0x71, 0x72, 0x74, 0x28, 0x33, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x35, // sqrt(3.0)) - 0.5
	0x2a, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, // *log2(glossyPowe
	0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x66, // r + 1.0), log2(f
	0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, // envEmissionScale
	0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x79, 0x29, 0x2d, 0x31, 0x2e, 0x29, // _TexWidth.y)-1.)
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, // ;.const vec3 env
	0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, //  = textureLod(te
	0x78, 0x5f, 0x65, 0x6e, 0x76, 0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x6d, 0x69, 0x70, 0x29, // x_env, Ruv, mip)
	0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x67, 0x6c, 0x6f, // .xyz;.return glo
	0x73, 0x73, 0x79, 0x20, 0x2a, 0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, // ssy * env*fenvEm
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, // issionScale_TexW
	0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, // idth.x;.}.vec3 D
	0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x32, 0x6e, 0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x28, // oEnvmap2ndLayer(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // const vec3 color
	0x31, 0x73, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // 1stLayer, const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // vec3 pos, const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // vec3 N, const ve
	0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // c3 V, const floa
	0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // t NdotV, const v
	0x65, 0x63, 0x32, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // ec2 Ruv, const v
	0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // ec3 specular).{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x77, 0x20, 0x3d, 0x20, 0x46, // const vec3 w = F
	0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, 0x6b, 0x28, 0x73, 0x70, // resnelSchlick(sp
	0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x52, // ecular, NdotV, R
	0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, // oughness_WrapL_E
	0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x7a, 0x29, // dge_Thickness.z)
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, // ;.const vec3 env
	0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, //  = textureLod(te
	0x78, 0x5f, 0x65, 0x6e, 0x76, 0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, // x_env, Ruv, 0.0)
	0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, // .xyz;.return mix
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x31, 0x73, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2c, 0x20, // (color1stLayer, 
	0x65, 0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, // env*fenvEmission
	0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, // Scale_TexWidth.x
	0x2c, 0x20, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, // , w);.}.vec3 lig
	0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // htLoop(const vec
	0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, // 3 pos, vec3 N, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x76, 0x65, 0x63, // onst vec3 V, vec
	0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // 3 diffuse, vec3 
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // glossy, const ve
	0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, // c3 specular, con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, // st float edge, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, // onst bool is_met
	0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // al).{.vec3 color
	0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, //  = vec3_splat(0.
	0x30, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, // 0);.float NdotV 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x56, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, // = dot(N,V);.if (
	0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x4e, // NdotV < 0.0).{.N
	0x20, 0x3d, 0x20, 0x2d, 0x4e, 0x3b, 0x0a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x2d, //  = -N;.NdotV = -
	0x4e, 0x64, 0x6f, 0x74, 0x56, 0x3b, 0x0a, 0x7d, 0x0a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, // NdotV;.}.NdotV =
	0x20, 0x6d, 0x69, 0x6e, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, //  min(NdotV, 1.0)
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, // ;.const float di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, // ffuseMax = max(d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, // iffuse.x,max(dif
	0x66, 0x75, 0x73, 0x65, 0x2e, 0x79, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x7a, // fuse.y,diffuse.z
	0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ));.const float 
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, // glossyMax = max(
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, // glossy.x,max(glo
	0x73, 0x73, 0x79, 0x2e, 0x79, 0x2c, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x7a, 0x29, 0x29, // ssy.y,glossy.z))
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, // ;.const float sp
	0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, // ecularMax = max(
	0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x73, // specular.x,max(s
	0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x79, 0x2c, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, // pecular.y,specul
	0x61, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // ar.z));.const fl
	0x6f, 0x61, 0x74, 0x20, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // oat sum = diffus
	0x65, 0x4d, 0x61, 0x78, 0x20, 0x2b, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, // eMax + glossyMax
	0x20, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x73, 0x75, 0x6d, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, //  ;.if (sum > 1.0
	0x20, 0x26, 0x26, 0x20, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, //  && fDisableLigh
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, // ting_top_below.x
	0x20, 0x3c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  < 1.0).{.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, // float invsum = 1
	0x2e, 0x30, 0x2f, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, // .0/sum;.diffuse 
	0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, // *= invsum;.gloss
	0x79, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, // y *= invsum;.}.i
	0x66, 0x20, 0x28, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, // f ((!is_metal &&
	0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, //  (diffuseMax > 0
	0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, // .0)) || (glossyM
	0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, // ax > 0.0)).{.if 
	0x28, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, // (fDisableLightin
	0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x3d, 0x3d, // g_top_below.x ==
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x66, //  1.0).color += f
	0x6c, 0x6f, 0x61, 0x74, 0x28, 0x32, 0x29, 0x20, 0x2a, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // loat(2) * diffus
	0x65, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, // e;.else for (int
	0x20, 0x69, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x32, 0x3b, 0x20, 0x69, //  i = 0; i < 2; i
	0x2b, 0x2b, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x50, // ++).color += DoP
	0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, // ointLight(pos, N
	0x2c, 0x20, 0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, // , V, diffuse, gl
	0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, // ossy, edge, Roug
	0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, // hness_WrapL_Edge
	0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x2c, 0x20, 0x69, 0x2c, // _Thickness.x, i,
	0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, //  is_metal);.}.if
	0x20, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, //  (!is_metal && (
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, // diffuseMax > 0.0
	0x29, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, // )).color += DoEn
	0x76, 0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, 0x20, 0x28, 0x28, 0x20, // vmapDiffuse( (( 
	0x28, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x4e, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, // ( (vec4(N,0.0)) 
	0x2a, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, // * (matView) ) ).
	0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x3b, 0x0a, // xyz), diffuse);.
	0x69, 0x66, 0x20, 0x28, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, // if ((glossyMax >
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, //  0.0) || (specul
	0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, // arMax > 0.0)).{.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x52, 0x20, 0x3d, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x4e, 0x64, // vec3 R = (2.0*Nd
	0x6f, 0x74, 0x56, 0x29, 0x2a, 0x4e, 0x20, 0x2d, 0x20, 0x56, 0x3b, 0x0a, 0x52, 0x20, 0x3d, 0x20, // otV)*N - V;.R = 
	0x28, 0x28, 0x20, 0x28, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x52, 0x2c, 0x30, 0x2e, 0x30, // (( ( (vec4(R,0.0
	0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, // )) * (matView) )
	0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, //  ).xyz);.const v
	0x65, 0x63, 0x32, 0x20, 0x52, 0x75, 0x76, 0x20, 0x3d, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, // ec2 Ruv = ray_to
	0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, // _equirectangular
	0x5f, 0x75, 0x76, 0x28, 0x52, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, // _uv(R);.if (glos
	0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, // syMax > 0.0).col
	0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x47, 0x6c, // or += DoEnvmapGl
	0x6f, 0x73, 0x73, 0x79, 0x28, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, // ossy(N, V, Ruv, 
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, // glossy, Roughnes
	0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, // s_WrapL_Edge_Thi
	0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x73, // ckness.x);.if (s
	0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, // pecularMax > 0.0
	0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, // ).color = DoEnvm
	0x61, 0x70, 0x32, 0x6e, 0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // ap2ndLayer(color
	0x2c, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x4e, 0x64, 0x6f, // , pos, N, V, Ndo
	0x74, 0x56, 0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, // tV, Ruv, specula
	0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, // r);.}.return col
	0x6f, 0x72, 0x20, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // or ;.}.uniform v
	0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, // ec4 invTableRes_
	0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // reflection;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, // orm vec4 w_h_dis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x3b, 0x0a, 0x76, 0x65, // ableLighting;.ve
	0x63, 0x33, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, // c3 ballLightLoop
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, // (const vec3 pos,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, //  vec3 N, vec3 V,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x76, //  vec3 diffuse, v
	0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // ec3 glossy, cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, // t vec3 specular,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, //  const float edg
	0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, // e, const bool is
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // _metal).{.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, // float diffuseMax
	0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x78, //  = max(diffuse.x
	0x2c, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x79, 0x2c, 0x64, // ,max(diffuse.y,d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // iffuse.z));.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, // t float glossyMa
	0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x78, // x = max(glossy.x
	0x2c, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x79, 0x2c, 0x67, 0x6c, // ,max(glossy.y,gl
	0x6f, 0x73, 0x73, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // ossy.z));.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, // float specularMa
	0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, // x = max(specular
	0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, // .x,max(specular.
	0x79, 0x2c, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, // y,specular.z));.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x75, 0x6d, 0x20, // const float sum 
	0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x2b, 0x20, 0x67, // = diffuseMax + g
	0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x73, 0x75, 0x6d, // lossyMax;.if(sum
	0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  > 1.0).{.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, // float invsum = 1
	0x2e, 0x30, 0x2f, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, // .0/sum;.diffuse 
	0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, // *= invsum;.gloss
	0x79, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // y *= invsum;.}.v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, // ec3 color = vec3
	0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, // (0.0, 0.0, 0.0);
	0x0a, 0x69, 0x66, 0x28, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, // .if((!is_metal &
	0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, // & (diffuseMax > 
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, // 0.0)) || (glossy
	0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x66, 0x6f, 0x72, 0x28, // Max > 0.0)).for(
	0x69, 0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x32, // int i = 0; i < 2
	0x20, 0x2b, 0x20, 0x38, 0x3b, 0x20, 0x69, 0x2b, 0x2b, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, //  + 8; i++).color
	0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, //  += DoPointLight
	0x28, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, // (pos, N, V, diff
	0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x65, 0x64, 0x67, // use, glossy, edg
	0x65, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, // e, Roughness_Wra
	0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, // pL_Edge_Thicknes
	0x73, 0x2e, 0x78, 0x2c, 0x20, 0x69, 0x2c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, // s.x, i, is_metal
	0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, // );.if(!is_metal 
	0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, // && (diffuseMax >
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, //  0.0)).color += 
	0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, // DoEnvmapDiffuse(
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, // normalize(( (mat
	0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x4e, 0x2c, // View) * (vec4(N,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x64, //  0.0)) ).xyz), d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x73, 0x70, 0x65, 0x63, // iffuse);.if(spec
	0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, // ularMax > 0.0).c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, // olor += specular
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, // ;.return color;.
	0x7d, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, // }.void main().{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x20, 0x3d, 0x20, 0x6e, // const vec3 V = n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x20, 0x2d, 0x76, 0x5f, 0x77, 0x6f, 0x72, // ormalize( -v_wor
	0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // ldPos.xyz);.cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // t vec3 N = norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, // lize(v_normal.xy
	0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x52, // z);.const vec3 R
	0x20, 0x3d, 0x20, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x56, 0x2c, 0x20, 0x4e, 0x29, //  = reflect(V, N)
	0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, // ;.vec3 ballImage
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // Color;.const flo
	0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x56, 0x2c, // at edge = dot(V,
	0x20, 0x52, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  R);.const float
	0x20, 0x6c, 0x6f, 0x64, 0x20, 0x3d, 0x20, 0x28, 0x65, 0x64, 0x67, 0x65, 0x20, 0x3e, 0x20, 0x30, //  lod = (edge > 0
	0x2e, 0x36, 0x29, 0x20, 0x3f, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2a, 0x28, 0x36, 0x2e, 0x30, 0x2a, // .6) ? edge*(6.0*
	0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x29, 0x2d, 0x28, 0x36, 0x2e, 0x30, 0x2a, 0x30, 0x2e, // 1.0/0.4)-(6.0*0.
	0x36, 0x2f, 0x30, 0x2e, 0x34, 0x29, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x63, 0x6f, // 6/0.4) : 0.0;.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x20, 0x3d, 0x20, 0x28, 0x31, // nst float m = (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x52, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // .0 - R.z > 0.) ?
	0x20, 0x30, 0x2e, 0x33, 0x35, 0x33, 0x35, 0x35, 0x33, 0x33, 0x39, 0x30, 0x35, 0x39, 0x33, 0x32, //  0.3535533905932
	0x37, 0x33, 0x37, 0x36, 0x32, 0x32, 0x20, 0x2a, 0x20, 0x72, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, // 737622 * rsqrt(1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x52, 0x2e, 0x7a, 0x29, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x3b, 0x0a, // .0 - R.z) : 0.;.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x20, 0x3d, 0x20, // const vec2 uv = 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x6d, 0x20, 0x2a, 0x20, 0x52, // vec2(0.5 - m * R
	0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x6d, 0x20, 0x2a, 0x20, 0x52, 0x2e, // .x, 0.5 - m * R.
	0x79, 0x29, 0x3b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, // y);.ballImageCol
	0x6f, 0x72, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, // or = textureLod(
	0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, // tex_ball_color, 
	0x75, 0x76, 0x2c, 0x20, 0x6c, 0x6f, 0x64, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x63, 0x6f, // uv, lod).rgb;.co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, // nst vec4 decalCo
	0x6c, 0x6f, 0x72, 0x54, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, // lorT = texture(t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x2c, 0x20, 0x76, // ex_ball_decal, v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, // _texcoord0);.vec
	0x33, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x64, // 3 decalColor = d
	0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, // ecalColorT.rgb;.
	0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, // ballImageColor =
	0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, //  ScreenHDR(ballI
	0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, // mageColor, decal
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x77, 0x5f, 0x68, // Color);.if ((w_h
	0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, // _disableLighting
	0x2e, 0x7a, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x62, 0x67, 0x66, // .z != 0.)).{.bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, // x_FragColor = ve
	0x63, 0x34, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, // c4(ballImageColo
	0x72, 0x2c, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x61, 0x29, // r,cBase_Alpha.a)
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x3b, 0x0a, 0x7d, 0x0a, 0x62, 0x61, 0x6c, 0x6c, // ;.return;.}.ball
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x3d, 0x20, 0x30, 0x2e, // ImageColor *= 0.
	0x35, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, // 5*fenvEmissionSc
	0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, // ale_TexWidth.x;.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, // const vec3 playf
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x3d, 0x20, 0x28, 0x20, // ield_normal = ( 
	0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, // (matWorldView) *
	0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x31, //  (float4(0.,0.,1
	0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, // .,0.)) ).xyz;.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x20, // nst float NdotR 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, // = dot(playfield_
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x52, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // normal, R);.cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, // t vec3 playfield
	0x5f, 0x70, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, // _p0 = ( (matWorl
	0x64, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x20, // dView) * (vec4( 
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, // 0.,0.,0.,1.0)) )
	0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // .xyz;.const floa
	0x74, 0x20, 0x74, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, // t t = dot(playfi
	0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x76, 0x5f, 0x77, 0x6f, // eld_normal, v_wo
	0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x70, 0x6c, 0x61, // rldPos.xyz - pla
	0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x4e, 0x64, 0x6f, // yfield_p0) / Ndo
	0x74, 0x52, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, // tR;.const vec3 p
	0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x68, 0x69, 0x74, 0x20, 0x3d, 0x20, 0x76, // layfield_hit = v
	0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, // _worldPos.xyz - 
	0x74, 0x20, 0x2a, 0x20, 0x52, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // t * R;.const vec
	0x34, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x50, // 4 proj = ( (matP
	0x72, 0x6f, 0x6a, 0x5b, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x5d, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, // roj[v_eye]) * (v
	0x65, 0x63, 0x34, 0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x68, 0x69, // ec4(playfield_hi
	0x74, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // t, 1.0)) );.cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x70, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, // t vec2 uvp = vec
	0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, // 2(0.5, 0.5) + ve
	0x63, 0x32, 0x28, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x78, 0x2c, 0x20, 0x2d, 0x70, 0x72, 0x6f, 0x6a, // c2(proj.x, -proj
	0x2e, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2f, 0x20, 0x70, 0x72, 0x6f, // .y) * (0.5 / pro
	0x6a, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, // j.w);.const vec3
	0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, //  playfieldColor 
	0x3d, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x28, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x75, // = 0.25 * (.textu
	0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, // re(tex_ball_play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x75, 0x76, 0x70, // field, vec3((uvp
	0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, //  + vec2(w_h_disa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, // bleLighting.x, 0
	0x2e, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, // .)).x, (uvp + ve
	0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, // c2(w_h_disableLi
	0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x79, // ghting.x, 0.)).y
	0x2c, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x2b, 0x20, // , v_eye)).rgb.+ 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // texture(tex_ball
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // _playfield, vec3
	0x28, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, // ((uvp - vec2(w_h
	0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, // _disableLighting
	0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x75, 0x76, 0x70, // .x, 0.)).x, (uvp
	0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, //  - vec2(w_h_disa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, // bleLighting.x, 0
	0x2e, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x29, 0x2e, 0x72, // .)).y, v_eye)).r
	0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, // gb.+ texture(tex
	0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, // _ball_playfield,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, //  vec3((uvp + vec
	0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, // 2(0., w_h_disabl
	0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x78, 0x2c, // eLighting.y)).x,
	0x20, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, //  (uvp + vec2(0.,
	0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, //  w_h_disableLigh
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x76, 0x5f, 0x65, 0x79, // ting.y)).y, v_ey
	0x65, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // e)).rgb.+ textur
	0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, // e(tex_ball_playf
	0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x75, 0x76, 0x70, 0x20, // ield, vec3((uvp 
	0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, // - vec2(0., w_h_d
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, // isableLighting.y
	0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, // )).x, (uvp - vec
	0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, // 2(0., w_h_disabl
	0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x79, 0x2c, // eLighting.y)).y,
	0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x29, 0x3b, 0x0a, //  v_eye)).rgb.);.
	0x69, 0x66, 0x20, 0x28, 0x21, 0x28, 0x75, 0x76, 0x70, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, // if (!(uvp.x < 0.
	0x20, 0x7c, 0x7c, 0x20, 0x75, 0x76, 0x70, 0x2e, 0x78, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x20, 0x7c, //  || uvp.x > 1. |
	0x7c, 0x20, 0x75, 0x76, 0x70, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x20, 0x7c, 0x7c, 0x20, // | uvp.y < 0. || 
	0x75, 0x76, 0x70, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x29, 0x0a, 0x26, 0x26, 0x20, 0x21, // uvp.y > 1.).&& !
	0x28, 0x74, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x62, 0x61, 0x6c, // (t <= 0.)).{.bal
	0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x6c, 0x65, // lImageColor = le
	0x72, 0x70, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, // rp(ballImageColo
	0x72, 0x2c, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6c, 0x6f, // r, playfieldColo
	0x72, 0x2c, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, // r, smoothstep(0.
	0x30, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x35, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x29, 0x20, // 0, 0.15, NdotR) 
	0x2a, 0x20, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, // * invTableRes_re
	0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x62, // flection.z);.}.b
	0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, // allImageColor = 
	0x6d, 0x69, 0x6e, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, // min(ballImageCol
	0x6f, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x35, 0x2e, 0x2c, 0x20, // or, float3(15., 
	0x31, 0x35, 0x2e, 0x2c, 0x20, 0x31, 0x35, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, // 15., 15.));.vec3
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x3d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, //  diffuse = cBase
	0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x2a, 0x30, 0x2e, 0x30, 0x37, 0x35, // _Alpha.rgb*0.075
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, // ;.const vec3 glo
	0x73, 0x73, 0x79, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // ssy = max(diffus
	0x65, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x2c, // e*2.0, vec3(0.1,
	0x30, 0x2e, 0x31, 0x2c, 0x30, 0x2e, 0x31, 0x29, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // 0.1,0.1));.vec3 
	0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x20, 0x3d, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x49, // specular = ballI
	0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x61, 0x73, // mageColor * cBas
	0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x62, 0x67, 0x66, // e_Alpha.rgb;.bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x72, 0x67, 0x62, 0x20, // x_FragColor.rgb 
	0x3d, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, // = ballLightLoop(
	0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, // v_worldPos.xyz, 
	0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, // N, V, diffuse, g
	0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, // lossy, specular,
	0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x62, 0x67, //  1.0, false);.bg
	0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x61, 0x20, 0x3d, // fx_FragColor.a =
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x61, 0x3b, 0x0a, //  cBase_Alpha.a;.
	0x7d, 0x0a, 0x00,                                                                               // }..
};
static const uint8_t fs_ball_spherical_decal_st_glsl[14728] =
{
	0x46, 0x53, 0x48, 0x0b, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x75, 0x39, // FSH..N........u9
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x6f, // ..#version 440.o
	0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, // ut vec4 bgfx_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // gColor;.#define 
	0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x62, 0x67, 0x66, // gl_FragColor bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x0a, 0x23, 0x64, 0x65, 0x66, // x_FragColor.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x20, 0x20, // ine texture2D   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, //        texture.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // Lod       textur
	0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, // eLod.#define tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ture2DGrad      
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, // textureGrad.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, // ine texture2DPro
	0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, // jLod   texturePr
	0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // ojLod.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, // xture2DProjGrad 
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, //  textureProjGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // CubeLod     text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, // ureLod.#define t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, // extureCubeGrad  
	0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, //   textureGrad.#d
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, // efine texture3D 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //          texture
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, 0x65, 0x78, 0x74, // 2DLodOffset text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, // ureLodOffset.#de
	0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, // fine attribute i
	0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // n.#define varyin
	0x67, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, // g in.#define bgf
	0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // xShadow2D(_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, // er, _coord)     
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // vec4_splat(textu
	0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // re(_sampler, _co
	0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, // ord) ).#define b
	0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, // gfxShadow2DProj(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, // ) vec4_splat(tex
	0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // tureProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x76, 0x61, 0x72, // r, _coord) ).var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, // ying float v_eye
	0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // ;.varying vec3 v
	0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // _normal;.varying
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, //  vec2 v_texcoord
	0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // 0;.varying vec3 
	0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, // v_worldPos;.vec3
	0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, //  instMul(vec3 _v
	0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, // ec, mat3 _mtx) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, //  return ( (_vec)
	0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, //  * (_mtx) ); }.v
	0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, // ec3 instMul(mat3
	0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, //  _mtx, vec3 _vec
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, // ) { return ( (_m
	0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, // tx) * (_vec) ); 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, // }.vec4 instMul(v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, // ec4 _vec, mat4 _
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, // mtx) { return ( 
	0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, // (_vec) * (_mtx) 
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, // ); }.vec4 instMu
	0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, // l(mat4 _mtx, vec
	0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 4 _vec) { return
	0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, //  ( (_mtx) * (_ve
	0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, // c) ); }.float rc
	0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // p(float _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // turn 1.0/_a; }.v
	0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, // ec2 rcp(vec2 _a)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, //  { return vec2(1
	0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, // .0)/_a; }.vec3 r
	0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // cp(vec3 _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, // turn vec3(1.0)/_
	0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, // a; }.vec4 rcp(ve
	0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c4 _a) { return 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, // vec4(1.0)/_a; }.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // vec2 vec2_splat(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // float _x) { retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // rn vec2(_x, _x);
	0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, //  }.vec3 vec3_spl
	0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // at(float _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // eturn vec3(_x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, // x, _x); }.vec4 v
	0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ec4_splat(float 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _x) { return vec
	0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // 4(_x, _x, _x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, // ); }.uvec2 uvec2
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // _splat(uint _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, // { return uvec2(_
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, // x, _x); }.uvec3 
	0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec3_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, //  _x) { return uv
	0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // ec3(_x, _x, _x);
	0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, //  }.uvec4 uvec4_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // plat(uint _x) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, // return uvec4(_x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, //  _x, _x, _x); }.
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, // mat4 mtxFromRows
	0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // (vec4 _0, vec4 _
	0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // 1, vec4 _2, vec4
	0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, //  _3).{.return tr
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, // anspose(mat4(_0,
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, //  _1, _2, _3) );.
	0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, // }.mat4 mtxFromCo
	0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // ls(vec4 _0, vec4
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, //  _1, vec4 _2, ve
	0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c4 _3).{.return 
	0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, // mat4(_0, _1, _2,
	0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, //  _3);.}.mat3 mtx
	0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, // FromRows(vec3 _0
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // , vec3 _1, vec3 
	0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, // _2).{.return tra
	0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, // nspose(mat3(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, // _1, _2) );.}.mat
	0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, // 3 mtxFromCols(ve
	0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, // c3 _0, vec3 _1, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // vec3 _2).{.retur
	0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, // n mat3(_0, _1, _
	0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // 2);.}.uniform ve
	0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, // c4 u_viewRect;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, // niform vec4 u_vi
	0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // ewTexel;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, //  mat4 u_view;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, // iform mat4 u_inv
	0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // View;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // t4 u_proj;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, // rm mat4 u_invPro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // u_viewProj;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, // orm mat4 u_invVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // ewProj;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, // mat4 u_model[32]
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // _modelView;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, // orm mat4 u_model
	0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // ViewProj;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, // m vec4 u_alphaRe
	0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, // f4;.float sqr(co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // nst float v).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // eturn v*v;.}.vec
	0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, // 2 sqr(const vec2
	0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, //  v).{.return v*v
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, // ;.}.vec3 sqr(con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // st vec3 v).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // urn v*v;.}.vec3 
	0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // mul_w1(const vec
	0x33, 0x20, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // 3 v, const mat4 
	0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, // m).{.return v.x*
	0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, // m[0].xyz + (v.y*
	0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, // m[1].xyz + (v.z*
	0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, // m[2].xyz + m[3].
	0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, // xyz));.}.float a
	0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, // cos_approx_divPI
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, // (const float v).
	0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, // {.const float x 
	0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, // = abs(v);.if(1. 
	0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, // - x <= 0.0000610
	0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 3515625).return 
	0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, // (v >= 0.) ? 0. :
	0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  1.;.const float
	0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, //  res = ((-0.1559
	0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, // 72/3.14159265358
	0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, // 9793238462643383
	0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, // 2795) * x + (1.5
	0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, // 6467/3.141592653
	0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, // 5897932384626433
	0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, // 832795) ) * sqrt
	0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // (1. - x);.return
	0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, //  (v >= 0.) ? res
	0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, //  : 1. - res;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, // loat atan2_appro
	0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // x_div2PI(const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // loat y, const fl
	0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // oat x).{.const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, // loat abs_y = abs
	0x28, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // (y);.const float
	0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, //  abs_x = abs(x);
	0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, // .if(abs_x <= 0.0
	0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, // 0006103515625 &&
	0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, //  abs_y <= 0.0000
	0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, // 6103515625).retu
	0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // rn 0.;.const flo
	0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, // at r = (abs_x - 
	0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, // abs_y) / (abs_x 
	0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // + abs_y);.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, // float angle = ((
	0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, // x < 0.) ? (3./8.
	0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, // ) : (1./8.)).+ (
	0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, // 0.211868 /(2.*3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, //  * r * r - 0.987
	0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // 305 /(2.*3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, // 6433832795)) * (
	0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, // (x < 0.) ? -r : 
	0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, // r);.return (y < 
	0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, // 0.) ? -angle : a
	0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, // ngle;.}.float as
	0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, // in_approx_divPI(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, // const float v).{
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, // .const float x =
	0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, //  abs(v);.if(1. -
	0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, //  x <= 0.00006103
	0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, // 515625).return (
	0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, // v >= 0.) ? 0.5 :
	0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, //  -0.5;.const flo
	0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, // at res = ((-0.15
	0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, // 5972/3.141592653
	0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, // 5897932384626433
	0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, // 832795) * x + (1
	0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, // .56467/3.1415926
	0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, // 5358979323846264
	0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, // 33832795) ) * sq
	0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // rt(1. - x);.retu
	0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, // rn (v >= 0.) ? 0
	0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, // .5 - res : -0.5 
	0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, // + res;.}.vec2 ra
	0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, // y_to_equirectang
	0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // ular_uv(const ve
	0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // c3 ray).{.return
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, //  vec2(.0.5 + ata
	0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, // n2_approx_div2PI
	0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, // (ray.y, ray.x),.
	0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, // acos_approx_divP
	0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // I(ray.z));.}.flo
	0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // at InvsRGB(const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, //  float color).{.
	0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, // if (color <= 0.0
	0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, // 4045).return col
	0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, // or * (1.0/12.92)
	0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, // ;.else.return po
	0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, // w(color * (1.0/1
	0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, // .055) + (0.055/1
	0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // .055), 2.4);.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x63, // loat InvRec709(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // onst float color
	0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, // ).{.if (color <=
	0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, //  0.081).return c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, // olor * (1.0/4.5)
	0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, // ;.else.return po
	0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, // w(color * (1.0/1
	0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, // .099) + (0.099/1
	0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, // .099), 1.0/0.45)
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // ;.}.float InvGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, // ma(const float c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, // olor).{.return I
	0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, // nvsRGB(color);.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, // .vec3 InvGamma(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // onst vec3 color)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, // .{.return vec3(I
	0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, // nvGamma(color.x)
	0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // ,InvGamma(color.
	0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // y),InvGamma(colo
	0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, // r.z));.}.vec3 In
	0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // vToneMap(const v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, // ec3 color).{.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, // st float inv_2bh
	0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, //  = 0.5/0.25;.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, // st float bh = 4.
	0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, // 0*0.25 - 2.0;.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, // turn (color - 1.
	0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, // 0 + sqrt(color*(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, // color + bh) + 1.
	0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // 0))*inv_2bh;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // loat sRGB(const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float f).{.float
	0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, //  s;.if (f <= 0.0
	0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, // 031308).s = 12.9
	0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, // 2 * f;.else.s = 
	0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, // 1.055 * pow(f, 1
	0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, // .0/2.4) - 0.055;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // .return s;.}.flo
	0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // at Rec709(const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float f).{.float
	0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, //  s;.if (f <= 0.0
	0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, // 18).s = 4.5 * f;
	0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, // .else.s = 1.099 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, // * pow(f, 0.45) -
	0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, //  0.099;.return s
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // ;.}.float FBGamm
	0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, // a(const float co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, // lor).{.return sR
	0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // GB(color);.}.vec
	0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // 2 FBGamma(const 
	0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // vec2 color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // turn vec2(FBGamm
	0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, // a(color.x),FBGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // ma(color.y));.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, // vec3 FBGamma(con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, // st vec3 color).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, // .return vec3(FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, // amma(color.x),FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, // Gamma(color.y),F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, // BGamma(color.z))
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, // ;.}.float FBTone
	0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // Map(const float 
	0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, // l).{.return l * 
	0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, // ((l*0.25 + 1.0) 
	0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // / (l + 1.0));.}.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, // vec2 FBToneMap(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // onst vec2 color)
	0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, // .{.const float l
	0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, //  = dot(color,vec
	0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, // 2(0.176204+0.010
	0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, // 8109*0.5,0.81298
	0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, // 5+0.0108109*0.5)
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // );.return color 
	0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, // * ((l*0.25 + 1.0
	0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, // ) / (l + 1.0));.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, // }.vec3 FBToneMap
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // (const vec3 colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // r).{.const float
	0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, //  l = dot(color,v
	0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, // ec3(0.176204,0.8
	0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, // 12985,0.0108109)
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // );.return color 
	0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, // * ((l*0.25 + 1.0
	0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, // ) / (l + 1.0));.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, // }.vec4 Additive(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // const vec4 cBase
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, // , const vec4 cBl
	0x65, 0x6e, 0x64, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // end, const float
	0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  percent).{.retu
	0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // rn cBase + cBlen
	0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // d*percent;.}.vec
	0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // 3 Screen (const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // vec3 cBase, cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, // t vec3 cBlend).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, // .return 1.0 - (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, // .0 - cBase) * (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // .0 - cBlend);.}.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6e, // vec4 Screen (con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, // st vec4 cBase, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // onst vec4 cBlend
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, // ).{.return 1.0 -
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, //  (1.0 - cBase) *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, //  (1.0 - cBlend);
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, // .}.vec3 ScreenHD
	0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, // R (const vec3 cB
	0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // ase, const vec3 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // cBlend).{.return
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, //  max(1.0 - (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // - cBase) * (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // - cBlend), vec3(
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // 0.,0.,0.));.}.ve
	0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, // c4 ScreenHDR (co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, // nst vec4 cBase, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // const vec4 cBlen
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, // d).{.return max(
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, // 1.0 - (1.0 - cBa
	0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, // se) * (1.0 - cBl
	0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, // end), vec4(0.,0.
	0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // ,0.,0.));.}.vec4
	0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, //  Multiply (const
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, //  vec4 cBase, con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, // st vec4 cBlend, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, // const float perc
	0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, // ent).{.return cB
	0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, // ase * cBlend*per
	0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, // cent;.}.vec4 Ove
	0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, // rlay (const vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, //  cBase, const ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, // c4 cBlend).{.vec
	0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, // 4 cNew = step(0.
	0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, // 5, cBase);.cNew 
	0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, // = mix(cBase*cBle
	0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, // nd*2.0, 1.0-2.0*
	0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, // (1.0-cBase)*(1.0
	0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, // -cBlend), cNew);
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, // .return cNew;.}.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, // vec4 OverlayHDR 
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, // (const vec4 cBas
	0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // e, const vec4 cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, // lend).{.vec4 cNe
	0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, // w = step(0.5, cB
	0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, // ase);.cNew = max
	0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, // (mix(cBase*cBlen
	0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, // d*2.0, 1.0-2.0*(
	0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, // 1.0-cBase)*(1.0-
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, // cBlend), cNew), 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, // vec4(0.,0.,0.,0.
	0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, // ));.return cNew;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, // .}.vec3 cos_hemi
	0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x63, 0x6f, // sphere_sample(co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, // nst vec2 t).{.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, // nst float phi = 
	0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, // t.y * (2.0*3.141
	0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, // 5926535897932384
	0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x63, // 626433832795);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, // onst float cosTh
	0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // eta = sqrt(1.0 -
	0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, //  t.x);.const flo
	0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, // at sinTheta = sq
	0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // rt(t.x);.float s
	0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x73, 0x69, 0x6e, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, // p,cp;.sincos(phi
	0x2c, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // ,sp,cp);.return 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, // vec3(cp * sinThe
	0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, // ta, cosTheta, sp
	0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, //  * sinTheta);.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, // vec3 rotate_to_v
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, // ector_upper(cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // t vec3 vec, cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, // t vec3 normal).{
	0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, // .if(normal.y > -
	0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // 0.99999).{.const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, //  float h = 1.0/(
	0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x63, // 1.0+normal.y);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, // onst float hz = 
	0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // h*normal.z;.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, // t float hzx = hz
	0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // *normal.x;.retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, // n vec3(.vec.x * 
	0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, // (normal.y+hz*nor
	0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, // mal.z) + vec.y *
	0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, //  normal.x - vec.
	0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, // z * hzx,.vec.y *
	0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, //  normal.y - vec.
	0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, // x * normal.x - v
	0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, // ec.z * normal.z,
	0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // .vec.y * normal.
	0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, // z - vec.x * hzx 
	0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // + vec.z * (norma
	0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, // l.y+h*normal.x*n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, // ormal.x));.}.els
	0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, // e return -vec;.}
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, // .uniform mat4 ma
	0x74, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // tView;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, // at4 matWorldView
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, // ;.uniform mat4 m
	0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x76, 0x65, 0x72, // atWorldViewInver
	0x73, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // se;.uniform mat4
	0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, //  matWorldViewPro
	0x6a, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // j[2];.uniform ma
	0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, 0x75, // t4 matProj[2];.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // niform sampler2D
	0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, //  tex_ball_color;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .uniform sampler
	0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // 2D tex_env;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, // orm sampler2D te
	0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x3b, 0x0a, 0x75, // x_diffuse_env;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // niform sampler2D
	0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x3b, //  tex_ball_decal;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .uniform sampler
	0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // 2DArray tex_ball
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // _playfield;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x62, 0x61, 0x73, 0x69, 0x63, // orm vec4 u_basic
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // _shade_mode;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, // form vec4 ballLi
	0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x5d, 0x3b, 0x0a, 0x75, // ghtPos[2 + 8];.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, // niform vec4 ball
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x32, 0x20, // LightEmission[2 
	0x2b, 0x20, 0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // + 8];.uniform ve
	0x63, 0x34, 0x20, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, // c4 cAmbient_Ligh
	0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // tRange;.uniform 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, // vec4 fenvEmissio
	0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x3b, // nScale_TexWidth;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x44, // .uniform vec4 fD
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, // isableLighting_t
	0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // op_below;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x53, 0x63, 0x61, // m vec4 fSceneSca
	0x6c, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // le;.uniform vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x0a, 0x75, 0x6e, //  cBase_Alpha;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, // iform vec4 Rough
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, // ness_WrapL_Edge_
	0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // Thickness;.float
	0x20, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, //  GeometricOpacit
	0x79, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, // y(const float Nd
	0x6f, 0x74, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // otV, const float
	0x20, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, //  alpha, const fl
	0x6f, 0x61, 0x74, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2c, 0x20, 0x63, 0x6f, // oat blending, co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, // nst float thickn
	0x65, 0x73, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // ess).{.const flo
	0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x56, // at x = abs(NdotV
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, // );.const float g
	0x20, 0x3d, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x2a, 0x20, 0x28, 0x31, //  = blending * (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x78, 0x20, 0x2f, 0x20, 0x28, 0x78, 0x20, 0x2a, 0x20, 0x28, // .0 - (x / (x * (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, // 1.0 - thickness)
	0x20, 0x2b, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, 0x29, 0x29, 0x3b, //  + thickness)));
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x61, 0x6c, 0x70, 0x68, // .return mix(alph
	0x61, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x67, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // a, 1.0, g);.}.ve
	0x63, 0x33, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, // c3 FresnelSchlic
	0x6b, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, // k(const vec3 spe
	0x63, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4c, // c, const float L
	0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // dotH, const floa
	0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // t edge).{.return
	0x20, 0x73, 0x70, 0x65, 0x63, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x65, 0x64, //  spec + (vec3(ed
	0x67, 0x65, 0x2c, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x65, 0x64, 0x67, 0x65, 0x29, 0x20, 0x2d, 0x20, // ge,edge,edge) - 
	0x73, 0x70, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x31, 0x2e, 0x30, 0x20, // spec) * pow(1.0 
	0x2d, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x35, 0x2e, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // - LdotH, 5.);.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, // vec3 DoPointLigh
	0x74, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, // t(const vec3 pos
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, // , const vec3 N, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x63, 0x6f, // const vec3 V, co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // nst vec3 diffuse
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, // , const vec3 glo
	0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ssy, const float
	0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, //  edge, const flo
	0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x2c, 0x20, // at glossyPower, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x2c, 0x20, 0x63, 0x6f, 0x6e, // const int i, con
	0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, // st bool is_metal
	0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, // ).{.const vec3 l
	0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x20, 0x28, 0x6d, // ightDir = ( ( (m
	0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, // atView) * (vec4(
	0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x69, 0x5d, 0x2e, // ballLightPos[i].
	0x78, 0x79, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, // xyz, 1.0)) ) ).x
	0x79, 0x7a, 0x20, 0x2d, 0x20, 0x70, 0x6f, 0x73, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // yz - pos;.const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x4c, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, // vec3 L = normali
	0x7a, 0x65, 0x28, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x29, 0x3b, 0x0a, 0x63, 0x6f, // ze(lightDir);.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, // nst float NdotL 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x20, 0x4c, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, // = dot(N, L);.vec
	0x33, 0x20, 0x4f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, // 3 Out = vec3(0.0
	0x2c, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, // ,0.0,0.0);.if (!
	0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x4e, 0x64, 0x6f, // is_metal && (Ndo
	0x74, 0x4c, 0x20, 0x2b, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, // tL + Roughness_W
	0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, // rapL_Edge_Thickn
	0x65, 0x73, 0x73, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x4f, 0x75, // ess.y > 0.0)).Ou
	0x74, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x28, 0x28, // t = diffuse * ((
	0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x2b, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, // NdotL + Roughnes
	0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, // s_WrapL_Edge_Thi
	0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x73, 0x71, 0x72, 0x28, // ckness.y) / sqr(
	0x31, 0x2e, 0x30, 0x2b, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, // 1.0+Roughness_Wr
	0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, // apL_Edge_Thickne
	0x73, 0x73, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, // ss.y));.if (Ndot
	0x4c, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // L > 0.0).{.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x48, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, //  vec3 H = normal
	0x69, 0x7a, 0x65, 0x28, 0x4c, 0x20, 0x2b, 0x20, 0x56, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // ize(L + V);.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, // t float NdotH = 
	0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // dot(N, H);.const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, //  float LdotH = d
	0x6f, 0x74, 0x28, 0x4c, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // ot(L, H);.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x56, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, 0x6f, // float VdotH = do
	0x74, 0x28, 0x56, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x4e, 0x64, // t(V, H);.if ((Nd
	0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x4c, // otH > 0.0) && (L
	0x64, 0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, // dotH > 0.0) && (
	0x56, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x4f, 0x75, // VdotH > 0.0)).Ou
	0x74, 0x20, 0x2b, 0x3d, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x6c, // t += FresnelSchl
	0x69, 0x63, 0x6b, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x4c, 0x64, 0x6f, 0x74, // ick(glossy, Ldot
	0x48, 0x2c, 0x20, 0x65, 0x64, 0x67, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x28, 0x67, 0x6c, // H, edge) * (((gl
	0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // ossyPower + 1.0)
	0x20, 0x2f, 0x20, 0x28, 0x38, 0x2e, 0x30, 0x2a, 0x56, 0x64, 0x6f, 0x74, 0x48, 0x29, 0x29, 0x20, //  / (8.0*VdotH)) 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x67, 0x6c, 0x6f, // * pow(NdotH, glo
	0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x63, 0x6f, // ssyPower));.}.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, // nst float sqrl_l
	0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x6c, 0x69, // ightDir = dot(li
	0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2c, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x29, // ghtDir,lightDir)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x3d, // ;.float fAtten =
	0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x73, 0x71, 0x72, //  clamp(1.0 - sqr
	0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2a, 0x73, 0x71, 0x72, 0x6c, 0x5f, // l_lightDir*sqrl_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2f, 0x28, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, // lightDir/(cAmbie
	0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, // nt_LightRange.w*
	0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, // cAmbient_LightRa
	0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, // nge.w*cAmbient_L
	0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, // ightRange.w*cAmb
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, // ient_LightRange.
	0x77, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x66, // w), 0.0, 1.0);.f
	0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x3d, 0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x2a, 0x66, // Atten = fAtten*f
	0x41, 0x74, 0x74, 0x65, 0x6e, 0x2f, 0x28, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, // Atten/(sqrl_ligh
	0x74, 0x44, 0x69, 0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, // tDir + 1.0);.vec
	0x33, 0x20, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x67, 0x6c, 0x6f, 0x73, // 3 ambient = glos
	0x73, 0x79, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, // sy;.if (!is_meta
	0x6c, 0x29, 0x0a, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x2b, 0x3d, 0x20, 0x64, 0x69, // l).ambient += di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // ffuse;.const vec
	0x33, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x20, 0x3d, 0x20, 0x4f, 0x75, 0x74, 0x20, 0x2a, // 3 result = Out *
	0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, //  ballLightEmissi
	0x6f, 0x6e, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x66, 0x41, 0x74, 0x74, // on[i].xyz * fAtt
	0x65, 0x6e, 0x20, 0x2b, 0x20, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x2a, 0x20, 0x63, // en + ambient * c
	0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, // Ambient_LightRan
	0x67, 0x65, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x44, 0x69, 0x73, // ge.xyz;.if (fDis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, // ableLighting_top
	0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, // _below.x != 0.0)
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x72, 0x65, 0x73, 0x75, // .return mix(resu
	0x6c, 0x74, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x66, 0x44, 0x69, 0x73, 0x61, // lt,diffuse,fDisa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, // bleLighting_top_
	0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, // below.x);.else.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, // eturn result;.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, // vec3 DoEnvmapDif
	0x66, 0x75, 0x73, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // fuse(const vec3 
	0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, // N, const vec3 di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // ffuse).{.const v
	0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // ec3 env = textur
	0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // eLod(tex_diffuse
	0x5f, 0x65, 0x6e, 0x76, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, // _env, ray_to_equ
	0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, // irectangular_uv(
	0x4e, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x72, 0x65, // N), 0.0).xyz;.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x65, // turn diffuse * e
	0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, // nv*fenvEmissionS
	0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, // cale_TexWidth.x;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, // .}.vec3 DoEnvmap
	0x47, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // Glossy(const vec
	0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // 3 N, const vec3 
	0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, 0x75, // V, const vec2 Ru
	0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, // v, const vec3 gl
	0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ossy, const floa
	0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x29, 0x0a, 0x7b, // t glossyPower).{
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x69, 0x70, // .const float mip
	0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x66, 0x65, 0x6e, 0x76, //  = min(log2(fenv
	0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, // EmissionScale_Te
	0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // xWidth.y * sqrt(
	0x33, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x35, 0x2a, 0x6c, 0x6f, 0x67, 0x32, // 3.0)) - 0.5*log2
	0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x2b, 0x20, 0x31, // (glossyPower + 1
	0x2e, 0x30, 0x29, 0x2c, 0x20, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, // .0), log2(fenvEm
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, // issionScale_TexW
	0x69, 0x64, 0x74, 0x68, 0x2e, 0x79, 0x29, 0x2d, 0x31, 0x2e, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // idth.y)-1.);.con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, // st vec3 env = te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, // xtureLod(tex_env
	0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x6d, 0x69, 0x70, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // , Ruv, mip).xyz;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, // .return glossy *
	0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, //  env*fenvEmissio
	0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, // nScale_TexWidth.
	0x78, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, // x;.}.vec3 DoEnvm
	0x61, 0x70, 0x32, 0x6e, 0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // ap2ndLayer(const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x31, 0x73, 0x74, 0x4c, 0x61, //  vec3 color1stLa
	0x79, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // yer, const vec3 
	0x70, 0x6f, 0x73, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // pos, const vec3 
	0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, // N, const vec3 V,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, //  const float Ndo
	0x74, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, // tV, const vec2 R
	0x75, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, // uv, const vec3 s
	0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // pecular).{.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x77, 0x20, 0x3d, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, //  vec3 w = Fresne
	0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, 0x6b, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, // lSchlick(specula
	0x72, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, // r, NdotV, Roughn
	0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, // ess_WrapL_Edge_T
	0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // hickness.z);.con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, // st vec3 env = te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, // xtureLod(tex_env
	0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // , Ruv, 0.0).xyz;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .return mix(colo
	0x72, 0x31, 0x73, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2c, 0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, // r1stLayer, env*f
	0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, // envEmissionScale
	0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x2c, 0x20, 0x77, 0x29, 0x3b, // _TexWidth.x, w);
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, // .}.vec3 lightLoo
	0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, // p(const vec3 pos
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // , vec3 N, const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, // vec3 V, vec3 dif
	0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // fuse, vec3 gloss
	0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, // y, const vec3 sp
	0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // ecular, const fl
	0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // oat edge, const 
	0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x7b, // bool is_metal).{
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, // .vec3 color = ve
	0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x66, // c3_splat(0.0);.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // loat NdotV = dot
	0x28, 0x4e, 0x2c, 0x56, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x56, // (N,V);.if (NdotV
	0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x4e, 0x20, 0x3d, 0x20, 0x2d, 0x4e, //  < 0.0).{.N = -N
	0x3b, 0x0a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x2d, 0x4e, 0x64, 0x6f, 0x74, 0x56, // ;.NdotV = -NdotV
	0x3b, 0x0a, 0x7d, 0x0a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, // ;.}.NdotV = min(
	0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // NdotV, 1.0);.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // st float diffuse
	0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // Max = max(diffus
	0x65, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, // e.x,max(diffuse.
	0x79, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, // y,diffuse.z));.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // onst float gloss
	0x79, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, // yMax = max(gloss
	0x79, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x79, // y.x,max(glossy.y
	0x2c, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // ,glossy.z));.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, // st float specula
	0x72, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, // rMax = max(specu
	0x6c, 0x61, 0x72, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, // lar.x,max(specul
	0x61, 0x72, 0x2e, 0x79, 0x2c, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x7a, 0x29, // ar.y,specular.z)
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // );.const float s
	0x75, 0x6d, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, // um = diffuseMax 
	0x2b, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3b, 0x0a, 0x69, 0x66, // + glossyMax ;.if
	0x20, 0x28, 0x73, 0x75, 0x6d, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x26, 0x26, 0x20, 0x66, //  (sum > 1.0 && f
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, // DisableLighting_
	0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x31, 0x2e, // top_below.x < 1.
	0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0).{.const float
	0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x73, 0x75, //  invsum = 1.0/su
	0x6d, 0x3b, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, // m;.diffuse *= in
	0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, 0x3d, 0x20, // vsum;.glossy *= 
	0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x21, // invsum;.}.if ((!
	0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, // is_metal && (dif
	0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, // fuseMax > 0.0)) 
	0x7c, 0x7c, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, // || (glossyMax > 
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x44, 0x69, 0x73, // 0.0)).{.if (fDis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, // ableLighting_top
	0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x29, // _below.x == 1.0)
	0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, // .color += float(
	0x32, 0x29, 0x20, 0x2a, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x3b, 0x0a, 0x65, 0x6c, // 2) * diffuse;.el
	0x73, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, // se for (int i = 
	0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x32, 0x3b, 0x20, 0x69, 0x2b, 0x2b, 0x29, 0x0a, 0x63, // 0; i < 2; i++).c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, // olor += DoPointL
	0x69, 0x67, 0x68, 0x74, 0x28, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, // ight(pos, N, V, 
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, // diffuse, glossy,
	0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, //  edge, Roughness
	0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, // _WrapL_Edge_Thic
	0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x2c, 0x20, 0x69, 0x2c, 0x20, 0x69, 0x73, 0x5f, 0x6d, // kness.x, i, is_m
	0x65, 0x74, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, // etal);.}.if (!is
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, // _metal && (diffu
	0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x63, 0x6f, // seMax > 0.0)).co
	0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, // lor += DoEnvmapD
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, 0x20, 0x28, 0x28, 0x20, 0x28, 0x20, 0x28, 0x76, 0x65, // iffuse( (( ( (ve
	0x63, 0x34, 0x28, 0x4e, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, // c4(N,0.0)) * (ma
	0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, // tView) ) ).xyz),
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, //  diffuse);.if ((
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, // glossyMax > 0.0)
	0x20, 0x7c, 0x7c, 0x20, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, //  || (specularMax
	0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, //  > 0.0)).{.vec3 
	0x52, 0x20, 0x3d, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x29, 0x2a, // R = (2.0*NdotV)*
	0x4e, 0x20, 0x2d, 0x20, 0x56, 0x3b, 0x0a, 0x52, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x20, 0x28, 0x20, // N - V;.R = (( ( 
	0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x52, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, // (vec4(R,0.0)) * 
	0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, // (matView) ) ).xy
	0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, // z);.const vec2 R
	0x75, 0x76, 0x20, 0x3d, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, // uv = ray_to_equi
	0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x52, // rectangular_uv(R
	0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, // );.if (glossyMax
	0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, //  > 0.0).color +=
	0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x47, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x28, //  DoEnvmapGlossy(
	0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // N, V, Ruv, gloss
	0x79, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, // y, Roughness_Wra
	0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, // pL_Edge_Thicknes
	0x73, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, // s.x);.if (specul
	0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, // arMax > 0.0).col
	0x6f, 0x72, 0x20, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x32, 0x6e, 0x64, // or = DoEnvmap2nd
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x70, 0x6f, 0x73, // Layer(color, pos
	0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x52, // , N, V, NdotV, R
	0x75, 0x76, 0x2c, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x29, 0x3b, 0x0a, 0x7d, // uv, specular);.}
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3b, 0x0a, // .return color ;.
	0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, // }.uniform vec4 i
	0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, // nvTableRes_refle
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // ction;.uniform v
	0x65, 0x63, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // ec4 w_h_disableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x61, // ighting;.vec3 ba
	0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, // llLightLoop(cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // t vec3 pos, vec3
	0x20, 0x4e, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, //  N, vec3 V, vec3
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, //  diffuse, vec3 g
	0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // lossy, const vec
	0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // 3 specular, cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, // t float edge, co
	0x6e, 0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, // nst bool is_meta
	0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // l).{.const float
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, //  diffuseMax = ma
	0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, // x(diffuse.x,max(
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x79, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // diffuse.y,diffus
	0x65, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // e.z));.const flo
	0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, // at glossyMax = m
	0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, // ax(glossy.x,max(
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x79, 0x2c, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, // glossy.y,glossy.
	0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // z));.const float
	0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, //  specularMax = m
	0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x78, 0x2c, 0x6d, 0x61, // ax(specular.x,ma
	0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x79, 0x2c, 0x73, 0x70, 0x65, // x(specular.y,spe
	0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // cular.z));.const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, //  float sum = dif
	0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x2b, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, // fuseMax + glossy
	0x4d, 0x61, 0x78, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x73, 0x75, 0x6d, 0x20, 0x3e, 0x20, 0x31, 0x2e, // Max;.if(sum > 1.
	0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0).{.const float
	0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x73, 0x75, //  invsum = 1.0/su
	0x6d, 0x3b, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, // m;.diffuse *= in
	0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, 0x3d, 0x20, // vsum;.glossy *= 
	0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // invsum;.}.vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, // olor = vec3(0.0,
	0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x28, //  0.0, 0.0);.if((
	0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, // !is_metal && (di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // ffuseMax > 0.0))
	0x20, 0x7c, 0x7c, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, //  || (glossyMax >
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x66, 0x6f, 0x72, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, //  0.0)).for(int i
	0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x3b, //  = 0; i < 2 + 8;
	0x20, 0x69, 0x2b, 0x2b, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, //  i++).color += D
	0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x70, 0x6f, 0x73, 0x2c, // oPointLight(pos,
	0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, //  N, V, diffuse, 
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x52, 0x6f, // glossy, edge, Ro
	0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, // ughness_WrapL_Ed
	0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x2c, 0x20, // ge_Thickness.x, 
	0x69, 0x2c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x69, 0x66, // i, is_metal);.if
	0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, // (!is_metal && (d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, // iffuseMax > 0.0)
	0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, // ).color += DoEnv
	0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // mapDiffuse(norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, // lize(( (matView)
	0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x4e, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, //  * (vec4(N, 0.0)
	0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // ) ).xyz), diffus
	0x65, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, // e);.if(specularM
	0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // ax > 0.0).color 
	0x2b, 0x3d, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x3b, 0x0a, 0x72, 0x65, 0x74, // += specular;.ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, 0x69, // urn color;.}.voi
	0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // d main().{.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, //  vec3 V = normal
	0x69, 0x7a, 0x65, 0x28, 0x20, 0x2d, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, // ize( -v_worldPos
	0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // .xyz);.const vec
	0x33, 0x20, 0x4e, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // 3 N = normalize(
	0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, // v_normal.xyz);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x52, 0x20, 0x3d, 0x20, 0x72, 0x65, // onst vec3 R = re
	0x66, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x56, 0x2c, 0x20, 0x4e, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, // flect(V, N);.vec
	0x33, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // 3 ballImageColor
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, // ;.const float ed
	0x67, 0x65, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x56, 0x2c, 0x20, 0x52, 0x29, 0x3b, 0x0a, // ge = dot(V, R);.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x6f, 0x64, 0x20, // const float lod 
	0x3d, 0x20, 0x28, 0x65, 0x64, 0x67, 0x65, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x36, 0x29, 0x20, 0x3f, // = (edge > 0.6) ?
	0x20, 0x65, 0x64, 0x67, 0x65, 0x2a, 0x28, 0x36, 0x2e, 0x30, 0x2a, 0x31, 0x2e, 0x30, 0x2f, 0x30, //  edge*(6.0*1.0/0
	0x2e, 0x34, 0x29, 0x2d, 0x28, 0x36, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x36, 0x2f, 0x30, 0x2e, 0x34, // .4)-(6.0*0.6/0.4
	0x29, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // ) : 0.0;.const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // loat m = (1.0 - 
	0x52, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x33, 0x35, // R.z > 0.) ? 0.35
	0x33, 0x35, 0x35, 0x33, 0x33, 0x39, 0x30, 0x35, 0x39, 0x33, 0x32, 0x37, 0x33, 0x37, 0x36, 0x32, // 3553390593273762
	0x32, 0x20, 0x2a, 0x20, 0x72, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // 2 * rsqrt(1.0 - 
	0x52, 0x2e, 0x7a, 0x29, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // R.z) : 0.;.const
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, //  vec2 uv = vec2(
	0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x6d, 0x20, 0x2a, 0x20, 0x52, 0x2e, 0x78, 0x2c, 0x20, 0x30, // 0.5 - m * R.x, 0
	0x2e, 0x35, 0x20, 0x2d, 0x20, 0x6d, 0x20, 0x2a, 0x20, 0x52, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x62, // .5 - m * R.y);.b
	0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, // allImageColor = 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, // textureLod(tex_b
	0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x75, 0x76, 0x2c, 0x20, 0x6c, // all_color, uv, l
	0x6f, 0x64, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // od).rgb;.const v
	0x65, 0x63, 0x34, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x20, // ec4 decalColorT 
	0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, // = texture(tex_ba
	0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // ll_decal, v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x65, 0x63, // oord0);.vec3 dec
	0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, // alColor = decalC
	0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, // olorT.rgb;.ballI
	0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x53, 0x63, 0x72, 0x65, // mageColor = Scre
	0x65, 0x6e, 0x48, 0x44, 0x52, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, // enHDR(ballImageC
	0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // olor, decalColor
	0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, // );.if ((w_h_disa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x7a, 0x20, 0x21, 0x3d, // bleLighting.z !=
	0x20, 0x30, 0x2e, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, //  0.)).{.gl_FragC
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x62, 0x61, 0x6c, 0x6c, // olor = vec4(ball
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x63, 0x42, 0x61, 0x73, 0x65, // ImageColor,cBase
	0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x61, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // _Alpha.a);.retur
	0x6e, 0x3b, 0x0a, 0x7d, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, // n;.}.ballImageCo
	0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, // lor *= 0.5*fenvE
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, // missionScale_Tex
	0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // Width.x;.const v
	0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, // ec3 playfield_no
	0x72, 0x6d, 0x61, 0x6c, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, // rmal = ( (matWor
	0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ldView) * (float
	0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x31, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x20, // 4(0.,0.,1.,0.)) 
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // ).xyz;.const flo
	0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x70, // at NdotR = dot(p
	0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, // layfield_normal,
	0x20, 0x52, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, //  R);.const vec3 
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x30, 0x20, 0x3d, 0x20, 0x28, // playfield_p0 = (
	0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, //  (matWorldView) 
	0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x20, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, // * (vec4( 0.,0.,0
	0x2e, 0x2c, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, // .,1.0)) ).xyz;.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x20, 0x3d, 0x20, 0x64, // onst float t = d
	0x6f, 0x74, 0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, // ot(playfield_nor
	0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, // mal, v_worldPos.
	0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, // xyz - playfield_
	0x70, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // p0) / NdotR;.con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // st vec3 playfiel
	0x64, 0x5f, 0x68, 0x69, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, // d_hit = v_worldP
	0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x74, 0x20, 0x2a, 0x20, 0x52, 0x3b, 0x0a, // os.xyz - t * R;.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x20, // const vec4 proj 
	0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x76, 0x5f, 0x65, // = ( (matProj[v_e
	0x79, 0x65, 0x5d, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x70, 0x6c, 0x61, // ye]) * (vec4(pla
	0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x68, 0x69, 0x74, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, // yfield_hit, 1.0)
	0x29, 0x20, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, // ) );.const vec2 
	0x75, 0x76, 0x70, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, // uvp = vec2(0.5, 
	0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x70, 0x72, 0x6f, 0x6a, // 0.5) + vec2(proj
	0x2e, 0x78, 0x2c, 0x20, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x28, // .x, -proj.y) * (
	0x30, 0x2e, 0x35, 0x20, 0x2f, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x63, // 0.5 / proj.w);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, // onst vec3 playfi
	0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, // eldColor = 0.25 
	0x2a, 0x20, 0x28, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, // * (.texture(tex_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, // ball_playfield, 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, // vec3((uvp + vec2
	0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, // (w_h_disableLigh
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, // ting.x, 0.)).x, 
	0x28, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, // (uvp + vec2(w_h_
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, // disableLighting.
	0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, // x, 0.)).y, v_eye
	0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // )).rgb.+ texture
	0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, // (tex_ball_playfi
	0x65, 0x6c, 0x64, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2d, // eld, vec3((uvp -
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, //  vec2(w_h_disabl
	0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, // eLighting.x, 0.)
	0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, // ).x, (uvp - vec2
	0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, // (w_h_disableLigh
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, // ting.x, 0.)).y, 
	0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, // v_eye)).rgb.+ te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, // xture(tex_ball_p
	0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, // layfield, vec3((
	0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, // uvp + vec2(0., w
	0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, // _h_disableLighti
	0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2b, // ng.y)).x, (uvp +
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, //  vec2(0., w_h_di
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, // sableLighting.y)
	0x29, 0x2e, 0x79, 0x2c, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, // ).y, v_eye)).rgb
	0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, // .+ texture(tex_b
	0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x76, // all_playfield, v
	0x65, 0x63, 0x33, 0x28, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // ec3((uvp - vec2(
	0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // 0., w_h_disableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, // ighting.y)).x, (
	0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, // uvp - vec2(0., w
	0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, // _h_disableLighti
	0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, // ng.y)).y, v_eye)
	0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x28, 0x75, // ).rgb.);.if (!(u
	0x76, 0x70, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x20, 0x7c, 0x7c, 0x20, 0x75, 0x76, 0x70, // vp.x < 0. || uvp
	0x2e, 0x78, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x20, 0x7c, 0x7c, 0x20, 0x75, 0x76, 0x70, 0x2e, 0x79, // .x > 1. || uvp.y
	0x20, 0x3c, 0x20, 0x30, 0x2e, 0x20, 0x7c, 0x7c, 0x20, 0x75, 0x76, 0x70, 0x2e, 0x79, 0x20, 0x3e, //  < 0. || uvp.y >
	0x20, 0x31, 0x2e, 0x29, 0x0a, 0x26, 0x26, 0x20, 0x21, 0x28, 0x74, 0x20, 0x3c, 0x3d, 0x20, 0x30, //  1.).&& !(t <= 0
	0x2e, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, // .)).{.ballImageC
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x6c, 0x65, 0x72, 0x70, 0x28, 0x62, 0x61, 0x6c, 0x6c, // olor = lerp(ball
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x70, 0x6c, 0x61, 0x79, // ImageColor, play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x73, 0x6d, 0x6f, 0x6f, // fieldColor, smoo
	0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x35, // thstep(0.0, 0.15
	0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x29, 0x20, 0x2a, 0x20, 0x69, 0x6e, 0x76, 0x54, 0x61, // , NdotR) * invTa
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, // bleRes_reflectio
	0x6e, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, // n.z);.}.ballImag
	0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, 0x62, 0x61, 0x6c, // eColor = min(bal
	0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // lImageColor, flo
	0x61, 0x74, 0x33, 0x28, 0x31, 0x35, 0x2e, 0x2c, 0x20, 0x31, 0x35, 0x2e, 0x2c, 0x20, 0x31, 0x35, // at3(15., 15., 15
	0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // .));.vec3 diffus
	0x65, 0x20, 0x3d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, // e = cBase_Alpha.
	0x72, 0x67, 0x62, 0x2a, 0x30, 0x2e, 0x30, 0x37, 0x35, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // rgb*0.075;.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x3d, 0x20, 0x6d, //  vec3 glossy = m
	0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, // ax(diffuse*2.0, 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x2c, 0x30, 0x2e, 0x31, 0x2c, 0x30, 0x2e, 0x31, // vec3(0.1,0.1,0.1
	0x29, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, // ));.vec3 specula
	0x72, 0x20, 0x3d, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, // r = ballImageCol
	0x6f, 0x72, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, // or * cBase_Alpha
	0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, // .rgb;.gl_FragCol
	0x6f, 0x72, 0x2e, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, // or.rgb = ballLig
	0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, // htLoop(v_worldPo
	0x73, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, // s.xyz, N, V, dif
	0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x73, 0x70, // fuse, glossy, sp
	0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x66, 0x61, 0x6c, // ecular, 1.0, fal
	0x73, 0x65, 0x29, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, // se);.gl_FragColo
	0x72, 0x2e, 0x61, 0x20, 0x3d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, // r.a = cBase_Alph
	0x61, 0x2e, 0x61, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,                                                 // a.a;.}..
};
static const uint8_t fs_ball_spherical_decal_st_dx11[7360] =
{
	0x46, 0x53, 0x48, 0x0b, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x07, 0x6d, // FSH..N.........m
	0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x14, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, // atView..........
	0x0c, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x14, 0x00, 0x40, // .matWorldView..@
	0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x14, // ........matProj.
	0x02, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, // ..........ballLi
	0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x0a, 0x00, 0x01, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, // ghtPos..........
	0x11, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, // .ballLightEmissi
	0x6f, 0x6e, 0x12, 0x0a, 0xa0, 0x01, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x63, 0x41, 0x6d, // on...........cAm
	0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, // bient_LightRange
	0x12, 0x00, 0x40, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x65, 0x6e, 0x76, 0x45, // ..@........fenvE
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, // missionScale_Tex
	0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x00, 0x50, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // Width..P........
	0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, // fDisableLighting
	0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x12, 0x00, 0x60, 0x02, 0x01, 0x00, // _top_below..`...
	0x00, 0x00, 0x00, 0x00, 0x0b, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, // .....cBase_Alpha
	0x12, 0x00, 0x70, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x52, 0x6f, 0x75, 0x67, 0x68, // ..p........Rough
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, // ness_WrapL_Edge_
	0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x00, 0x80, 0x02, 0x01, 0x00, 0x00, // Thickness.......
	0x00, 0x00, 0x00, 0x16, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, // ....invTableRes_
	0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x00, 0x90, 0x02, 0x01, 0x00, // reflection......
	0x00, 0x00, 0x00, 0x00, 0x13, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // .....w_h_disable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x00, 0xa0, 0x02, 0x01, 0x00, 0x00, 0x00, // Lighting........
	0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // ...tex_ball_colo
	0x72, 0x30, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, // r0..........tex_
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x30, 0x01, 0x02, 0x00, 0x01, // diffuse_env0....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, // ......tex_ball_d
	0x65, 0x63, 0x61, 0x6c, 0x30, 0x01, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x74, // ecal0..........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // ex_ball_playfiel
	0x64, 0x30, 0x01, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, // d0..........tex_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x01, 0x00, 0x00, 0x01, 0x00, // ball_color0.....
	0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // .....tex_diffuse
	0x5f, 0x65, 0x6e, 0x76, 0x30, 0x01, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, // _env0..........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x30, 0x01, 0x03, // ex_ball_decal0..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // ........tex_ball
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x30, 0x01, 0x04, 0x00, 0x01, 0x00, // _playfield0.....
	0x00, 0x00, 0x00, 0x00, 0x84, 0x1a, 0x00, 0x00, 0x44, 0x58, 0x42, 0x43, 0x42, 0x30, 0x6a, 0xb9, // ........DXBCB0j.
	0xd3, 0x2b, 0x99, 0x0d, 0x05, 0x4d, 0x0b, 0xda, 0x45, 0x3f, 0xcf, 0x4d, 0x01, 0x00, 0x00, 0x00, // .+...M..E?.M....
	0x84, 0x1a, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00, // ........,.......
	0x04, 0x01, 0x00, 0x00, 0x49, 0x53, 0x47, 0x4e, 0x9c, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, // ....ISGN........
	0x08, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, // ................
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x01, 0x01, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0e, 0x0e, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x03, 0x03, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, // ............SV_P
	0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, // OSITION.TEXCOORD
	0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x4f, 0x53, 0x47, 0x4e, 0x2c, 0x00, 0x00, 0x00, // .NORMAL.OSGN,...
	0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........ .......
	0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, // ................
	0x53, 0x56, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x00, 0xab, 0xab, 0x53, 0x48, 0x45, 0x58, // SV_TARGET...SHEX
	0x78, 0x19, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x5e, 0x06, 0x00, 0x00, 0x6a, 0x28, 0x00, 0x01, // x...P...^...j(..
	0x59, 0x08, 0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, // Y...F. .....+...
	0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, // Z....`......Z...
	0x00, 0x60, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, // .`......Z....`..
	0x03, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ....Z....`......
	0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, // X....p......UU..
	0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, // X....p......UU..
	0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, // X....p......UU..
	0x58, 0x40, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, // X@...p......UU..
	0x62, 0x10, 0x00, 0x03, 0x12, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, // b...........b...
	0xe2, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x32, 0x10, 0x10, 0x00, // ........b...2...
	0x02, 0x00, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x72, 0x10, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....b...r.......
	0x65, 0x00, 0x00, 0x03, 0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x02, // e.... ......h...
	0x0b, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x46, 0x12, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x80, // F...A.......F...
	0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x12, 0x00, 0x10, 0x00, // A.......D.......
	0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, // ............8...
	0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // r...............
	0x46, 0x12, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, // F...A...........
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x17, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x96, 0x17, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, // ........D.......
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ....:.......8...
	0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // r...............
	0x96, 0x17, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // :.......:.......
	0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 2...r.......F...
	0x01, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........A.......
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // F...............
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x02, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....1...........
	0x01, 0x40, 0x00, 0x00, 0x9a, 0x99, 0x19, 0x3f, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // .@.....?:.......
	0x32, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 2...........:...
	0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x70, 0x41, 0x01, 0x40, 0x00, 0x00, // .....@....pA.@..
	0x00, 0x00, 0x10, 0xc1, 0x01, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // :.......:.......
	0x00, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x80, // ............*...
	0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // A........@.....?
	0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // 1............@..
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, // ....:.......D...
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........:.......
	0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 8...........:...
	0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0xf3, 0x04, 0xb5, 0x3e, 0x01, 0x00, 0x00, 0x07, // .....@.....>....
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........:.......
	0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0d, 0x32, 0x00, 0x10, 0x00, // :.......2...2...
	0x03, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ........A.......
	0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, // F........@.....?
	0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, // ...?........H...
	0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....CU..r.......
	0x46, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // F.......F~......
	0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // .`......:.......
	0x45, 0x00, 0x00, 0x8b, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, // E.......CU..r...
	0x04, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, // ....F.......F~..
	0x03, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, // .....`..........
	0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // r.......F...A...
	0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, // .....@.....?...?
	0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x72, 0x00, 0x10, 0x00, // ...?........r...
	0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // ....F...A.......
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, // .@.....?...?...?
	0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0d, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....2...r.......
	0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // F...A.......F...
	0x04, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, // .....@.....?...?
	0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, // ...?....4...r...
	0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // ....F........@..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x39, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x80, 0x20, 0x00, // 9...........*. .
	0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....*....@......
	0x1f, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, // ....:.......6...
	0x82, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // . ......:. .....
	0x27, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x72, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // '...6...r ......
	0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x01, 0x15, 0x00, 0x00, 0x01, // F.......>.......
	0x38, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x00, // 8............. .
	0x00, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, // ....%....@.....?
	0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // 8...r...........
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x08, // ....F...........
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // ........F. .....
	0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, // ....F...........
	0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x82, 0x20, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, // F. .A...........
	0x10, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // ............F. .
	0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ........F.......
	0x0e, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, // ....:.......2...
	0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // r...........A...
	0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, // ....F.......F...
	0x03, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x0a, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ........).......
	0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....:........@..
	0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ....8...r.......
	0x56, 0x05, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x83, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, // V.......F. .....
	0x09, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, // ....:.......2...
	0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x83, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, // r.......F. .....
	0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, // ....:...........
	0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, // ....F.......2...
	0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x83, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, // r.......F. .....
	0x0a, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, // ....:...........
	0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, // ....F...........
	0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x83, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // F. .........:...
	0x02, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........B.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x2a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // .@.....?*.......
	0x36, 0x00, 0x00, 0x06, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, // 6...............
	0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x32, 0x00, 0x10, 0x00, // A.......2...2...
	0x02, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, // ................
	0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, // .....@.....?...?
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x0a, 0x32, 0x00, 0x10, 0x00, // ........1...2...
	0x04, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // ....F........@..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x31, 0x00, 0x00, 0x0a, 0xc2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // 1............@..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, // ...........?...?
	0x06, 0x04, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ........<.......
	0x03, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ....*...........
	0x04, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....<...........
	0x1a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ........:.......
	0x3c, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // <...........:...
	0x04, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x05, // ....:.......;...
	0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ........:.......
	0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // 1............@..
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, // ....:...........
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........:.......
	0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, // :...........:...
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x32, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ........2.......
	0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // F.......F. .....
	0x2a, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x42, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // *...6...B.......
	0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, // ........6.......
	0x04, 0x00, 0x00, 0x00, 0x0a, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, // ............E...
	0x02, 0x02, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // ....CU..r.......
	0x86, 0x03, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ........F~......
	0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x32, 0x00, 0x10, 0x00, // .`..........2...
	0x06, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x80, 0x20, 0x80, // ....F.......F. .
	0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, // A.......*...6...
	0xc2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0xa6, 0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ................
	0x45, 0x00, 0x00, 0x8b, 0x02, 0x02, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, // E.......CU..r...
	0x07, 0x00, 0x00, 0x00, 0x86, 0x03, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, // ............F~..
	0x04, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // .....`..........
	0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x02, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0xc2, 0x00, 0x10, 0x00, // F.......6.......
	0x02, 0x00, 0x00, 0x00, 0x56, 0x0d, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, // ....V.......E...
	0x02, 0x02, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ....CU..r.......
	0x86, 0x03, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ........F~......
	0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // .`..........r...
	0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x05, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x52, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ....6...R.......
	0x06, 0x03, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, 0x02, 0x02, 0x00, 0x80, // ........E.......
	0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // CU..r.......F...
	0x06, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, // ....F~.......`..
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........r.......
	0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // F.......F.......
	0x38, 0x20, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 8 ..........:...
	0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x55, 0x55, 0xd5, 0x40, 0x32, 0x00, 0x00, 0x09, // .....@..UU.@2...
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........:.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, // .@.......@....@@
	0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 8...........:...
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ....:.......8...
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........:.......
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, // :.......8.......
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x80, 0x20, 0x00, // ....:.......*. .
	0x00, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0d, 0x72, 0x00, 0x10, 0x00, // ....)...2...r...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // ....F........@..
	0x00, 0x00, 0x80, 0x3e, 0x00, 0x00, 0x80, 0x3e, 0x00, 0x00, 0x80, 0x3e, 0x00, 0x00, 0x00, 0x00, // ...>...>...>....
	0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, // F...A.......2...
	0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // r...............
	0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // F.......F.......
	0x15, 0x00, 0x00, 0x01, 0x33, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....3...r.......
	0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x70, 0x41, // F........@....pA
	0x00, 0x00, 0x70, 0x41, 0x00, 0x00, 0x70, 0x41, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0b, // ..pA..pA....8...
	0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // r.......F. .....
	0x27, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x9a, 0x99, 0x99, 0x3d, 0x9a, 0x99, 0x99, 0x3d, // '....@.....=...=
	0x9a, 0x99, 0x99, 0x3d, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0b, 0x72, 0x00, 0x10, 0x00, // ...=....8...r...
	0x04, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, // ....F. .....'...
	0x02, 0x40, 0x00, 0x00, 0x9a, 0x99, 0x19, 0x3e, 0x9a, 0x99, 0x19, 0x3e, 0x9a, 0x99, 0x19, 0x3e, // .@.....>...>...>
	0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ....4...r.......
	0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xcd, 0xcc, 0xcc, 0x3d, // F........@.....=
	0xcd, 0xcc, 0xcc, 0x3d, 0xcd, 0xcc, 0xcc, 0x3d, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, // ...=...=....8...
	0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, // F. .....'...4...
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ........*.......
	0x1a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ........4.......
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ....:...........
	0x03, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....4...........
	0x2a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // *...............
	0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 4...........:...
	0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, // ............4...
	0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // ........*.......
	0x1a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ........4.......
	0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ....:...........
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // :.......:.......
	0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // 1............@..
	0x00, 0x00, 0x80, 0x3f, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0a, // ...?:...........
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // .........@.....?
	0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x3a, 0x00, 0x10, 0x00, // ...?...?...?:...
	0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // ....8...r.......
	0xf6, 0x0f, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ........F.......
	0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // 8...r...........
	0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, // ....F.......7...
	0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // r...............
	0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // F.......F.......
	0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // 7...r...........
	0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x32, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // ........2.......
	0x16, 0x85, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // .. .....(....@..
	0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ...?...?........
	0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // 8...............
	0x05, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x09, // ............8...
	0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // ........:. .....
	0x24, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, // $...:. .....$...
	0x00, 0x00, 0x00, 0x0b, 0xd2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x80, // ................
	0x41, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // A........@.....?
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x38, 0x00, 0x00, 0x07, // .......?...?8...
	0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ........:.......
	0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // :...........r...
	0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x04, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ....8...r.......
	0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // F.......F. .....
	0x24, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // $...9...........
	0x0a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // .. .....&....@..
	0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ....6...r.......
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .@..............
	0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ....6...........
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x01, 0x21, 0x00, 0x00, 0x07, // .@......0...!...
	0x82, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ........:.......
	0x01, 0x40, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x03, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, // .@..........:...
	0x07, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0b, 0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ....8...r.......
	0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x56, 0x85, 0x20, 0x06, // F. .........V. .
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ........:.......
	0x32, 0x00, 0x00, 0x0d, 0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // 2...r.......F. .
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, // .......... .....
	0x10, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....:.......F...
	0x08, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0d, 0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ....2...r.......
	0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa6, 0x8a, 0x20, 0x06, // F. ........... .
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ........:.......
	0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, // F...........r...
	0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // ....F.......F. .
	0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, // ............r...
	0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x80, // ....F.......F...
	0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // A...............
	0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x08, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ....D...........
	0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // :.......8...r...
	0x09, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // F.......F.......
	0x00, 0x00, 0x00, 0x08, 0x12, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x09, 0x00, 0x00, 0x00, 0x1a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, // ...... .....(...
	0x31, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // 1..."........@..
	0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, // ................
	0x12, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, // ................
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0xd2, 0x00, 0x10, 0x00, // :.......8.......
	0x0a, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, // ................
	0x0a, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, // ........r.......
	0x86, 0x03, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, // ........V.......
	0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // 1............@..
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, // ....:...........
	0x3a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, // :.......2...r...
	0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // ....F...........
	0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, // ....F...........
	0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ........F.......
	0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, // F.......D.......
	0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ....:.......8...
	0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // r...............
	0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // F...............
	0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // F.......F.......
	0x10, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, // ....F.......1...
	0x22, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // "........@......
	0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, // :.......1...B...
	0x08, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // .....@..........
	0x09, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ........".......
	0x2a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // *...............
	0x31, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // 1...B........@..
	0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, // ................
	0x22, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ".......*.......
	0x1a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x42, 0x00, 0x10, 0x00, // ............B...
	0x08, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, // ........A.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x38, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, // .@.....?8.......
	0x09, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // ....*.......*...
	0x08, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ....8...........
	0x0a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ................
	0x38, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // 8...B.......*...
	0x08, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, // ............2...
	0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x86, 0x03, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // r...............
	0xa6, 0x0a, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ........F.......
	0x38, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // 8...............
	0x08, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x00, 0x00, 0x07, // .....@.....A....
	0x12, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // ................
	0x0a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x05, 0x42, 0x00, 0x10, 0x00, // ......../...B...
	0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, // ....:.......8...
	0x42, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // B.......*.......
	0x0a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x05, // .. .....(.......
	0x42, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // B.......*.......
	0x38, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // 8...........*...
	0x08, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, // ............2...
	0xd2, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ................
	0x06, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, // ................
	0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, // 7...r.......V...
	0x08, 0x00, 0x00, 0x00, 0x86, 0x03, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x0a, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, 0x38, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, // ........8.......
	0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ....:.......:...
	0x07, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ................
	0x0a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ........:.......
	0x00, 0x20, 0x00, 0x08, 0x12, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, // . ..............
	0x41, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // A........@.....?
	0x38, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // 8...............
	0x08, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // ................
	0x82, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ........:.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x0e, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // .@.....?........
	0x07, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x07, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ....8...r.......
	0x46, 0x02, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, // F.......F. .....
	0x1a, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, // ....:.......2...
	0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // r.......F.......
	0xf6, 0x0f, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ........F.......
	0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....r.......F...
	0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, // ....F...A.......
	0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x00, // 2...r......... .
	0x00, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ....&...F.......
	0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, // F.......7...r...
	0x08, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // ....F...........
	0x72, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // F...............
	0x06, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....:........@..
	0x01, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x01, 0x31, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, // ........1.......
	0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // .....@......:...
	0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, // 8...r.......V...
	0x01, 0x00, 0x00, 0x00, 0x16, 0x86, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ...... .........
	0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x86, 0x20, 0x00, // 2...r......... .
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, // F.......2...r...
	0x00, 0x00, 0x00, 0x00, 0x16, 0x86, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ...... .........
	0xa6, 0x0a, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........F.......
	0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, // ....F.......D...
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........:.......
	0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // 8...r...........
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x0b, // ....F...........
	0x32, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, // 2........@.....8
	0x00, 0x00, 0x80, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x05, 0x10, 0x80, // ...8............
	0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x0a, 0x00, 0x10, 0x80, 0xc1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, // ................
	0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, // ............"...
	0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x1a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, // ................
	0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x1a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x0a, 0x32, 0x00, 0x10, 0x00, // ........1...2...
	0x00, 0x00, 0x00, 0x00, 0x16, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // .............@..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x37, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // 7..."...........
	0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x3e, 0x01, 0x40, 0x00, 0x00, // .....@.....>.@..
	0x00, 0x00, 0x00, 0x3e, 0x38, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ...>8...B.......
	0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x32, 0x00, 0x00, 0x09, 0x42, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // 2...B.......*...
	0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0xd0, 0x1d, 0x0a, 0x3d, 0x01, 0x40, 0x00, 0x00, // .....@.....=.@..
	0xdc, 0xe7, 0x20, 0xbe, 0x37, 0x00, 0x00, 0x0a, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // .. .7...........
	0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // ............A...
	0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, // ............2...
	0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........*.......
	0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x37, 0x00, 0x00, 0x0a, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, // 7...............
	0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........A.......
	0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // .............@..
	0x00, 0x00, 0x00, 0x3f, 0x37, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ...?7...........
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, // :........@.....?
	0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x80, 0xc1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....*...........
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x1d, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, // .@.....?........
	0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....*........@..
	0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....7...".......
	0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........@......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x31, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, // .@.....?1...B...
	0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, 0x3a, 0x00, 0x10, 0x00, // .....@.....8:...
	0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x42, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....2...B.......
	0x2a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // *............@..
	0x1a, 0x5b, 0x4b, 0xbd, 0x01, 0x40, 0x00, 0x00, 0x66, 0x00, 0xff, 0x3e, 0x4b, 0x00, 0x00, 0x05, // .[K..@..f..>K...
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........:.......
	0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 8...........:...
	0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, // ....*.......2...
	0x42, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // B.......*...A...
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....:........@..
	0x00, 0x00, 0x80, 0x3f, 0x37, 0x00, 0x00, 0x09, 0x42, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ...?7...B.......
	0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........:.......
	0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, // *.......7..."...
	0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // ....*.......*...
	0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, // ............H...
	0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....CU..r.......
	0x46, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // F.......F~......
	0x00, 0x60, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .`.......@......
	0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 8...r.......F...
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, // ....F.......2...
	0x72, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // r.......F.......
	0x06, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // .. .....%...F...
	0x07, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, 0x31, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, // ........1.......
	0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // .....@......:...
	0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0xe2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....2...........
	0x06, 0x09, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x89, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // .......... .....
	0x27, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, // '...........7...
	0x72, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // r ..............
	0x96, 0x07, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ........F.......
	0x36, 0x00, 0x00, 0x06, 0x82, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, // 6.... ......:. .
	0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x01, 0x00, 0x00, 0xb0, 0x02, // ....'...>.......
};
static const uint8_t fs_ball_spherical_decal_st_spv[12603] =
{
	0x46, 0x53, 0x48, 0x0b, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x0c, 0x62, // FSH..N.........b
	0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x0a, 0x00, 0x01, 0x0a, // allLightPos.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x14, 0x01, 0x00, // ......matView...
	0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, // ........Roughnes
	0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, // s_WrapL_Edge_Thi
	0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x01, 0x80, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // ckness..........
	0x13, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, // .cAmbient_LightR
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x01, 0x40, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x62, // ange..@........b
	0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, // allLightEmission
	0x12, 0x0a, 0xa0, 0x01, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x44, 0x69, 0x73, 0x61, // ...........fDisa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, // bleLighting_top_
	0x62, 0x65, 0x6c, 0x6f, 0x77, 0x12, 0x01, 0x60, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // below..`........
	0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, // fenvEmissionScal
	0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x01, 0x50, 0x02, 0x01, 0x00, // e_TexWidth..P...
	0x00, 0x00, 0x00, 0x00, 0x13, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // .....w_h_disable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x01, 0xa0, 0x02, 0x01, 0x00, 0x00, 0x00, // Lighting........
	0x00, 0x00, 0x0b, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x01, // ...cBase_Alpha..
	0x70, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, // p........matWorl
	0x64, 0x56, 0x69, 0x65, 0x77, 0x14, 0x01, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // dView..@........
	0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x14, 0x02, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, // matProj.........
	0x00, 0x16, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, // ..invTableRes_re
	0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x01, 0x90, 0x02, 0x01, 0x00, 0x00, 0x00, // flection........
	0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // ...tex_ball_colo
	0x72, 0x30, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, // r0......."..tex_
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x30, 0x00, 0x04, 0x00, 0x00, // diffuse_env0....
	0x00, 0x00, 0x02, 0x22, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, // ..."..tex_ball_d
	0x65, 0x63, 0x61, 0x6c, 0x30, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0x12, 0x74, // ecal0......."..t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // ex_ball_playfiel
	0x64, 0x30, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x03, 0x22, 0x00, 0x68, 0x2f, 0x00, 0x00, 0x03, // d0.......".h/...
	0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x0b, 0x00, 0x08, 0x00, 0x0a, 0x07, 0x00, 0x00, 0x00, // .#..............
	0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x06, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30, 0x00, // ...GLSL.std.450.
	0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, // ................
	0x00, 0x0a, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, // ...........main.
	0x00, 0x00, 0x00, 0x84, 0x03, 0x00, 0x00, 0x88, 0x03, 0x00, 0x00, 0x8c, 0x03, 0x00, 0x00, 0x8f, // ................
	0x03, 0x00, 0x00, 0xa0, 0x03, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x03, // ................
	0x00, 0x03, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x73, // ...main........s
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // ...tex_ball_colo
	0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x76, // rSampler.......v
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // ...tex_ball_colo
	0x72, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x80, // rTexture........
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, // ...tex_diffuse_e
	0x6e, 0x76, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x82, // nvSampler.......
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, // ...tex_diffuse_e
	0x6e, 0x76, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x86, // nvTexture.......
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, // ...tex_ball_deca
	0x6c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x88, // lSampler........
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, // ...tex_ball_deca
	0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x09, 0x00, 0x8d, // lTexture........
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, // ...tex_ball_play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, // fieldSampler....
	0x00, 0x09, 0x00, 0x90, 0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // .......tex_ball_
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // playfieldTexture
	0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x55, 0x6e, 0x69, 0x66, 0x6f, // .......:...Unifo
	0x72, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x05, 0x00, 0x3a, // rmBlock........:
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x00, 0x06, // .......matView..
	0x00, 0x07, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x57, 0x6f, // ...:.......matWo
	0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x05, 0x00, 0x3a, // rldView........:
	0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x00, 0x06, // .......matProj..
	0x00, 0x07, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x62, 0x61, 0x6c, 0x6c, 0x4c, // ...:.......ballL
	0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x3a, // ightPos........:
	0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, // .......ballLight
	0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x3a, // Emission.......:
	0x01, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, // .......cAmbient_
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x00, 0x06, 0x00, 0x0a, 0x00, 0x3a, // LightRange.....:
	0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, // .......fenvEmiss
	0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, // ionScale_TexWidt
	0x68, 0x00, 0x00, 0x06, 0x00, 0x0a, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x66, // h......:.......f
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, // DisableLighting_
	0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x3a, // top_below......:
	0x01, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, // .......cBase_Alp
	0x68, 0x61, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x52, // ha.....:.......R
	0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, // oughness_WrapL_E
	0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x00, 0x00, 0x06, // dge_Thickness...
	0x00, 0x09, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x69, 0x6e, 0x76, 0x54, 0x61, // ...:.......invTa
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, // bleRes_reflectio
	0x6e, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x77, // n......:.......w
	0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, // _h_disableLighti
	0x6e, 0x67, 0x00, 0x05, 0x00, 0x03, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, // ng.....<........
	0x00, 0x04, 0x00, 0x84, 0x03, 0x00, 0x00, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x00, 0x00, 0x00, 0x05, // .......v_eye....
	0x00, 0x05, 0x00, 0x88, 0x03, 0x00, 0x00, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x00, // .......v_normal.
	0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0x8c, 0x03, 0x00, 0x00, 0x76, 0x5f, 0x74, 0x65, 0x78, // ...........v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x05, 0x00, 0x05, 0x00, 0x8f, 0x03, 0x00, 0x00, 0x76, // coord0.........v
	0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0xa0, // _worldPos.......
	0x03, 0x00, 0x00, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, // ...bgfx_FragData
	0x30, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x73, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // 0..G...s..."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x73, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x12, // ...G...s...!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x76, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G...v..."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x76, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x02, // ...G...v...!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x80, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G......."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x80, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x14, // ...G.......!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x82, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G......."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x82, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x04, // ...G.......!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x86, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G......."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x86, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x15, // ...G.......!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x88, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G......."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x88, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x05, // ...G.......!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x8d, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G......."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x8d, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x16, // ...G.......!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x90, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G......."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x90, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x06, // ...G.......!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x36, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x40, // ...G...6.......@
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x38, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x10, // ...G...8........
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x39, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x10, // ...G...9........
	0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, // ...H...:........
	0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, // ...H...:.......#
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x00, // .......H...:....
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, 0x3a, // ...........H...:
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x3a, // ...........H...:
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x48, // .......#...@...H
	0x00, 0x05, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, // ...:............
	0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, // ...H...:........
	0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x23, // ...H...:.......#
	0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x02, // .......H...:....
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x3a, // ...........H...:
	0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x48, // .......#.......H
	0x00, 0x05, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0xa0, // ...:.......#....
	0x01, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x23, // ...H...:.......#
	0x00, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x06, // ...@...H...:....
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x50, 0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x3a, // ...#...P...H...:
	0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0x48, // .......#...`...H
	0x00, 0x05, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x70, // ...:.......#...p
	0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x23, // ...H...:.......#
	0x00, 0x00, 0x00, 0x80, 0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x0a, // .......H...:....
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x90, 0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x3a, // ...#.......H...:
	0x01, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0xa0, 0x02, 0x00, 0x00, 0x47, // .......#.......G
	0x00, 0x03, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x3c, // ...:.......G...<
	0x01, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x3c, // ...".......G...<
	0x01, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x84, // ...!.......G....
	0x03, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x88, // ...........G....
	0x03, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x8c, // ...........G....
	0x03, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x8f, // ...........G....
	0x03, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xa0, // ...........G....
	0x03, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x21, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, // ...!............
	0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, // ............... 
	0x00, 0x00, 0x00, 0x19, 0x00, 0x09, 0x00, 0x08, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x19, 0x00, 0x09, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, 0x49, // ...............I
	0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x4a, // ... ...........J
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, // ... ...r........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x72, 0x00, 0x00, 0x00, 0x73, 0x00, 0x00, 0x00, 0x00, // ...;...r...s....
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x75, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, // ... ...u........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x75, 0x00, 0x00, 0x00, 0x76, 0x00, 0x00, 0x00, 0x00, // ...;...u...v....
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x72, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, // ...;...r........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x75, 0x00, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x00, // ...;...u........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x72, 0x00, 0x00, 0x00, 0x86, 0x00, 0x00, 0x00, 0x00, // ...;...r........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x75, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, // ...;...u........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x72, 0x00, 0x00, 0x00, 0x8d, 0x00, 0x00, 0x00, 0x00, // ...;...r........
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // ... ............
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x8f, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x00, // ...;............
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x49, 0x00, 0x00, 0x00, 0x93, 0x00, 0x00, 0x00, 0x01, // ...+...I........
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x49, 0x00, 0x00, 0x00, 0x97, 0x00, 0x00, 0x00, 0x00, // ...+...I........
	0x00, 0x00, 0x00, 0x1b, 0x00, 0x03, 0x00, 0x9b, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, // ................
	0x00, 0x03, 0x00, 0xb0, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...........+....
	0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........?+....
	0x00, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........8+....
	0x00, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...........+....
	0x00, 0x00, 0x00, 0xd4, 0x00, 0x00, 0x00, 0x1a, 0x5b, 0x4b, 0xbd, 0x2b, 0x00, 0x04, 0x00, 0x07, // ........[K.+....
	0x00, 0x00, 0x00, 0xd7, 0x00, 0x00, 0x00, 0x66, 0x00, 0xff, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, // .......f..>+....
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........>+....
	0x00, 0x00, 0x00, 0xfb, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........>+....
	0x00, 0x00, 0x00, 0xfd, 0x00, 0x00, 0x00, 0xd0, 0x1d, 0x0a, 0x3d, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........=+....
	0x00, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x15, 0x00, 0x04, 0x00, 0x13, // ..........?.....
	0x01, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x13, // ... .......+....
	0x01, 0x00, 0x00, 0x14, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x13, // ...........+....
	0x01, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x13, // ...........+....
	0x01, 0x00, 0x00, 0x1a, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x06, 0x00, 0x1d, // ...........,....
	0x00, 0x00, 0x00, 0x27, 0x01, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xcf, // ...'............
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2e, 0x01, 0x00, 0x00, 0x00, // ...+............
	0x00, 0xa0, 0x40, 0x18, 0x00, 0x04, 0x00, 0x35, 0x01, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x04, // ..@....5........
	0x00, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x36, 0x01, 0x00, 0x00, 0x35, 0x01, 0x00, 0x00, 0x1a, // .......6...5....
	0x01, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x13, 0x01, 0x00, 0x00, 0x37, 0x01, 0x00, 0x00, 0x0a, // ...+.......7....
	0x00, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x38, 0x01, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x37, // .......8.......7
	0x01, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x39, 0x01, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x37, // .......9.......7
	0x01, 0x00, 0x00, 0x1e, 0x00, 0x0e, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x35, 0x01, 0x00, 0x00, 0x35, // .......:...5...5
	0x01, 0x00, 0x00, 0x36, 0x01, 0x00, 0x00, 0x38, 0x01, 0x00, 0x00, 0x39, 0x01, 0x00, 0x00, 0x0d, // ...6...8...9....
	0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x3b, // ........... ...;
	0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x3b, // .......:...;...;
	0x01, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x49, // ...<.......+...I
	0x00, 0x00, 0x00, 0x3d, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x3e, // ...=....... ...>
	0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x46, // ........... ...F
	0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x35, 0x01, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x49, // .......5...+...I
	0x00, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x56, // ...U....... ...V
	0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...........+....
	0x00, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x2b, 0x00, 0x04, 0x00, 0x49, // ..........A+...I
	0x00, 0x00, 0x00, 0x99, 0x01, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x13, // ...........+....
	0x01, 0x00, 0x00, 0x9a, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x49, // ...........+...I
	0x00, 0x00, 0x00, 0xb7, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x49, // ...........+...I
	0x00, 0x00, 0x00, 0xc4, 0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x49, // ...........+...I
	0x00, 0x00, 0x00, 0xe1, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x49, // ...........+...I
	0x00, 0x00, 0x00, 0x22, 0x02, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...".......+....
	0x00, 0x00, 0x00, 0x61, 0x02, 0x00, 0x00, 0x9a, 0x99, 0x19, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...a......?+....
	0x00, 0x00, 0x00, 0x64, 0x02, 0x00, 0x00, 0x00, 0x00, 0x70, 0x41, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...d.....pA+....
	0x00, 0x00, 0x00, 0x6e, 0x02, 0x00, 0x00, 0xf3, 0x04, 0xb5, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x49, // ...n......>+...I
	0x00, 0x00, 0x00, 0x96, 0x02, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x49, // ...........+...I
	0x00, 0x00, 0x00, 0x9d, 0x02, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x07, 0x00, 0x0d, // ...........,....
	0x00, 0x00, 0x00, 0xab, 0x02, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xc8, // ................
	0x00, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xb5, // .......,........
	0x02, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xc8, // ................
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x49, 0x00, 0x00, 0x00, 0xce, 0x02, 0x00, 0x00, 0x02, // ...+...I........
	0x00, 0x00, 0x00, 0x2c, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xd5, 0x02, 0x00, 0x00, 0x12, // ...,............
	0x01, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe2, // .......+........
	0x02, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4b, // ......>+.......K
	0x03, 0x00, 0x00, 0x9a, 0x99, 0x19, 0x3e, 0x2c, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x54, // ......>,.......T
	0x03, 0x00, 0x00, 0x64, 0x02, 0x00, 0x00, 0x64, 0x02, 0x00, 0x00, 0x64, 0x02, 0x00, 0x00, 0x2b, // ...d...d...d...+
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5a, 0x03, 0x00, 0x00, 0x9a, 0x99, 0x99, 0x3d, 0x2b, // .......Z......=+
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5e, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x2b, // .......^......@+
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0xcd, 0xcc, 0xcc, 0x3d, 0x2c, // .......`......=,
	0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x61, 0x03, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0x60, // .......a...`...`
	0x03, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x83, 0x03, 0x00, 0x00, 0x01, // ...`... ........
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x83, 0x03, 0x00, 0x00, 0x84, // .......;........
	0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x87, 0x03, 0x00, 0x00, 0x01, // ....... ........
	0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x87, 0x03, 0x00, 0x00, 0x88, // .......;........
	0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x8b, 0x03, 0x00, 0x00, 0x01, // ....... ........
	0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x8b, 0x03, 0x00, 0x00, 0x8c, // .......;........
	0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x87, 0x03, 0x00, 0x00, 0x8f, // .......;........
	0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x9f, 0x03, 0x00, 0x00, 0x03, // ....... ........
	0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x9f, 0x03, 0x00, 0x00, 0xa0, // .......;........
	0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x29, 0x00, 0x03, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xbc, // .......)...J....
	0x03, 0x00, 0x00, 0x2c, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xe6, 0x06, 0x00, 0x00, 0xc8, // ...,............
	0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...........+....
	0x00, 0x00, 0x00, 0xeb, 0x06, 0x00, 0x00, 0x00, 0x00, 0x10, 0xc1, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...........+....
	0x00, 0x00, 0x00, 0xec, 0x06, 0x00, 0x00, 0xdc, 0xe7, 0x20, 0xbe, 0x01, 0x00, 0x03, 0x00, 0x07, // ......... ......
	0x00, 0x00, 0x00, 0xed, 0x06, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, // .......6........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, // ................
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x73, // ...=.......t...s
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0x76, // ...=.......w...v
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x80, // ...=............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x83, 0x00, 0x00, 0x00, 0x82, // ...=............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x87, 0x00, 0x00, 0x00, 0x86, // ...=............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00, 0x88, // ...=............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x00, 0x00, 0x8d, // ...=............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x90, // ...=............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x85, 0x03, 0x00, 0x00, 0x84, // ...=............
	0x03, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x89, 0x03, 0x00, 0x00, 0x88, // ...=............
	0x03, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x8d, 0x03, 0x00, 0x00, 0x8c, // ...=............
	0x03, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x90, 0x03, 0x00, 0x00, 0x8f, // ...=............
	0x03, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xed, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, // ................
	0x00, 0x03, 0x00, 0x16, 0x01, 0x00, 0x00, 0xf6, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xf6, // ................
	0x03, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xf9, 0x03, 0x00, 0x00, 0x90, // ................
	0x03, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xfa, 0x03, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0xf9, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1d, // ...E............
	0x00, 0x00, 0x00, 0xfc, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x89, // ...........E....
	0x03, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xff, 0x03, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0xfa, 0x03, 0x00, 0x00, 0xfc, 0x03, 0x00, 0x00, 0x94, // ...G............
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0xfa, 0x03, 0x00, 0x00, 0xff, // ................
	0x03, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x02, // .......J........
	0x04, 0x00, 0x00, 0x61, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, // ...a............
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0x64, // .......2.......d
	0x02, 0x00, 0x00, 0xeb, 0x06, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x08, // ................
	0x04, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x07, 0x04, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0a, 0x04, 0x00, 0x00, 0xff, 0x03, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0b, 0x04, 0x00, 0x00, 0xc8, // ................
	0x00, 0x00, 0x00, 0x0a, 0x04, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x0c, // ...........J....
	0x04, 0x00, 0x00, 0x0b, 0x04, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x0e, 0x04, 0x00, 0x00, 0xff, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x83, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0f, 0x04, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x0e, // ................
	0x04, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x04, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x0f, 0x04, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ... ............
	0x00, 0x00, 0x00, 0x11, 0x04, 0x00, 0x00, 0x6e, 0x02, 0x00, 0x00, 0x10, 0x04, 0x00, 0x00, 0xa9, // .......n........
	0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x12, 0x04, 0x00, 0x00, 0x0c, 0x04, 0x00, 0x00, 0x11, // ................
	0x04, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x15, // .......Q........
	0x04, 0x00, 0x00, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xe4, 0x06, 0x00, 0x00, 0x12, 0x04, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x17, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xe4, // ...........2....
	0x06, 0x00, 0x00, 0x15, 0x04, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x1a, 0x04, 0x00, 0x00, 0xff, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x7f, // ................
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe5, 0x06, 0x00, 0x00, 0x12, 0x04, 0x00, 0x00, 0x0c, // ................
	0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1c, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // ...............2
	0x00, 0x00, 0x00, 0xe5, 0x06, 0x00, 0x00, 0x1a, 0x04, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0x50, // ...............P
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x1d, 0x04, 0x00, 0x00, 0x17, 0x04, 0x00, 0x00, 0x1c, // ................
	0x04, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x9b, 0x00, 0x00, 0x00, 0xfb, 0x04, 0x00, 0x00, 0x77, // ...V...........w
	0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x58, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xfe, // ...t...X........
	0x04, 0x00, 0x00, 0xfb, 0x04, 0x00, 0x00, 0x1d, 0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, // ................
	0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x22, 0x04, 0x00, 0x00, 0xfe, // ...O......."....
	0x04, 0x00, 0x00, 0xfe, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x9b, 0x00, 0x00, 0x00, 0x05, 0x05, 0x00, 0x00, 0x89, // ...V............
	0x00, 0x00, 0x00, 0x87, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x07, // .......W........
	0x05, 0x00, 0x00, 0x05, 0x05, 0x00, 0x00, 0x8d, 0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, // ...........O....
	0x00, 0x00, 0x00, 0x27, 0x04, 0x00, 0x00, 0x07, 0x05, 0x00, 0x00, 0x07, 0x05, 0x00, 0x00, 0x00, // ...'............
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0x0d, 0x05, 0x00, 0x00, 0xe6, 0x06, 0x00, 0x00, 0x27, 0x04, 0x00, 0x00, 0x83, // ...........'....
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xe7, 0x06, 0x00, 0x00, 0x22, 0x04, 0x00, 0x00, 0xe6, // ..........."....
	0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x10, 0x05, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xe7, 0x06, 0x00, 0x00, 0x0d, 0x05, 0x00, 0x00, 0xe6, // ...2............
	0x06, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x11, 0x05, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x10, 0x05, 0x00, 0x00, 0x27, 0x01, 0x00, 0x00, 0x41, // ...(.......'...A
	0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0x2b, 0x04, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x96, // ...V...+...<....
	0x02, 0x00, 0x00, 0x1a, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2c, // .......=.......,
	0x04, 0x00, 0x00, 0x2b, 0x04, 0x00, 0x00, 0xb7, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x2d, // ...+.......J...-
	0x04, 0x00, 0x00, 0x2c, 0x04, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x36, // ...,...........6
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x2d, 0x04, 0x00, 0x00, 0x2e, // ...........-....
	0x04, 0x00, 0x00, 0x36, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x2e, 0x04, 0x00, 0x00, 0x41, // ...6...........A
	0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0x30, 0x04, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x9d, // ...V...0...<....
	0x02, 0x00, 0x00, 0x9a, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x31, // .......=.......1
	0x04, 0x00, 0x00, 0x30, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x32, // ...0...Q.......2
	0x04, 0x00, 0x00, 0x11, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x33, 0x04, 0x00, 0x00, 0x11, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, // ...3...........Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x34, 0x04, 0x00, 0x00, 0x11, 0x05, 0x00, 0x00, 0x02, // .......4........
	0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x35, 0x04, 0x00, 0x00, 0x32, // ...P.......5...2
	0x04, 0x00, 0x00, 0x33, 0x04, 0x00, 0x00, 0x34, 0x04, 0x00, 0x00, 0x31, 0x04, 0x00, 0x00, 0xf9, // ...3...4...1....
	0x00, 0x02, 0x00, 0xed, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x36, 0x04, 0x00, 0x00, 0x41, // ...........6...A
	0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0x37, 0x04, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0xe1, // ...V...7...<....
	0x01, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x38, // .......=.......8
	0x04, 0x00, 0x00, 0x37, 0x04, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x39, // ...7...........9
	0x04, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0x38, 0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, // .......8........
	0x00, 0x00, 0x00, 0x3b, 0x04, 0x00, 0x00, 0x11, 0x05, 0x00, 0x00, 0x39, 0x04, 0x00, 0x00, 0x41, // ...;.......9...A
	0x00, 0x05, 0x00, 0x46, 0x01, 0x00, 0x00, 0x3c, 0x04, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x93, // ...F...<...<....
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x35, 0x01, 0x00, 0x00, 0x3d, 0x04, 0x00, 0x00, 0x3c, // ...=...5...=...<
	0x04, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x3e, 0x04, 0x00, 0x00, 0xab, // ...........>....
	0x02, 0x00, 0x00, 0x3d, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x3f, // ...=...O.......?
	0x04, 0x00, 0x00, 0x3e, 0x04, 0x00, 0x00, 0x3e, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ...>...>........
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x42, // ...............B
	0x04, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00, 0xff, 0x03, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x46, // ...?.......A...F
	0x01, 0x00, 0x00, 0x43, 0x04, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x93, 0x00, 0x00, 0x00, 0x3d, // ...C...<.......=
	0x00, 0x04, 0x00, 0x35, 0x01, 0x00, 0x00, 0x44, 0x04, 0x00, 0x00, 0x43, 0x04, 0x00, 0x00, 0x90, // ...5...D...C....
	0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x45, 0x04, 0x00, 0x00, 0xb5, 0x02, 0x00, 0x00, 0x44, // .......E.......D
	0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x46, 0x04, 0x00, 0x00, 0x45, // ...O.......F...E
	0x04, 0x00, 0x00, 0x45, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ...E............
	0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x4a, 0x04, 0x00, 0x00, 0x90, // ...........J....
	0x03, 0x00, 0x00, 0x46, 0x04, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4b, // ...F...........K
	0x04, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00, 0x4a, 0x04, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, // ...?...J........
	0x00, 0x00, 0x00, 0x4d, 0x04, 0x00, 0x00, 0x4b, 0x04, 0x00, 0x00, 0x42, 0x04, 0x00, 0x00, 0x8e, // ...M...K...B....
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x51, 0x04, 0x00, 0x00, 0xff, 0x03, 0x00, 0x00, 0x4d, // .......Q.......M
	0x04, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x52, 0x04, 0x00, 0x00, 0x90, // ...........R....
	0x03, 0x00, 0x00, 0x51, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x54, // ...Q...Q.......T
	0x04, 0x00, 0x00, 0x52, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...R.......Q....
	0x00, 0x00, 0x00, 0x55, 0x04, 0x00, 0x00, 0x52, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, // ...U...R.......Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x56, 0x04, 0x00, 0x00, 0x52, 0x04, 0x00, 0x00, 0x02, // .......V...R....
	0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x57, 0x04, 0x00, 0x00, 0x54, // ...P.......W...T
	0x04, 0x00, 0x00, 0x55, 0x04, 0x00, 0x00, 0x56, 0x04, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x6d, // ...U...V.......m
	0x00, 0x04, 0x00, 0x13, 0x01, 0x00, 0x00, 0x59, 0x04, 0x00, 0x00, 0x85, 0x03, 0x00, 0x00, 0x41, // .......Y.......A
	0x00, 0x06, 0x00, 0x46, 0x01, 0x00, 0x00, 0x5a, 0x04, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0xce, // ...F...Z...<....
	0x02, 0x00, 0x00, 0x59, 0x04, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x35, 0x01, 0x00, 0x00, 0x5b, // ...Y...=...5...[
	0x04, 0x00, 0x00, 0x5a, 0x04, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x5c, // ...Z............
	0x04, 0x00, 0x00, 0x57, 0x04, 0x00, 0x00, 0x5b, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...W...[...Q....
	0x00, 0x00, 0x00, 0x5e, 0x04, 0x00, 0x00, 0x5c, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, // ...^...........Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x60, 0x04, 0x00, 0x00, 0x5c, 0x04, 0x00, 0x00, 0x01, // .......`........
	0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x61, 0x04, 0x00, 0x00, 0x60, // ...........a...`
	0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x62, 0x04, 0x00, 0x00, 0x5e, // ...P.......b...^
	0x04, 0x00, 0x00, 0x61, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x64, // ...a...Q.......d
	0x04, 0x00, 0x00, 0x5c, 0x04, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x65, 0x04, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0x64, 0x04, 0x00, 0x00, 0x8e, // ...e.......d....
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x66, 0x04, 0x00, 0x00, 0x62, 0x04, 0x00, 0x00, 0x65, // .......f...b...e
	0x04, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x67, 0x04, 0x00, 0x00, 0xd5, // ...........g....
	0x02, 0x00, 0x00, 0x66, 0x04, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0x69, // ...f...A...V...i
	0x04, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x96, 0x02, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x3d, // ...<...........=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6a, 0x04, 0x00, 0x00, 0x69, 0x04, 0x00, 0x00, 0x50, // .......j...i...P
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x6b, 0x04, 0x00, 0x00, 0x6a, 0x04, 0x00, 0x00, 0xcf, // .......k...j....
	0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x6c, 0x04, 0x00, 0x00, 0x67, // ...........l...g
	0x04, 0x00, 0x00, 0x6b, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6d, // ...k...Q.......m
	0x04, 0x00, 0x00, 0x6c, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, // ...l.......P....
	0x00, 0x00, 0x00, 0x71, 0x04, 0x00, 0x00, 0xed, 0x06, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x81, // ...q............
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x72, 0x04, 0x00, 0x00, 0x67, 0x04, 0x00, 0x00, 0x71, // .......r...g...q
	0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x73, 0x04, 0x00, 0x00, 0x72, // ...Q.......s...r
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x75, // .......P.......u
	0x04, 0x00, 0x00, 0x6d, 0x04, 0x00, 0x00, 0x73, 0x04, 0x00, 0x00, 0x85, 0x03, 0x00, 0x00, 0x56, // ...m...s.......V
	0x00, 0x05, 0x00, 0xb0, 0x00, 0x00, 0x00, 0x18, 0x05, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x8e, // ................
	0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x1a, 0x05, 0x00, 0x00, 0x18, // ...W............
	0x05, 0x00, 0x00, 0x75, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x78, // ...u...O.......x
	0x04, 0x00, 0x00, 0x1a, 0x05, 0x00, 0x00, 0x1a, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0x7a, // .......A...V...z
	0x04, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x96, 0x02, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x3d, // ...<...........=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7b, 0x04, 0x00, 0x00, 0x7a, 0x04, 0x00, 0x00, 0x50, // .......{...z...P
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x7c, 0x04, 0x00, 0x00, 0x7b, 0x04, 0x00, 0x00, 0xcf, // .......|...{....
	0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x7d, 0x04, 0x00, 0x00, 0x67, // ...........}...g
	0x04, 0x00, 0x00, 0x7c, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7e, // ...|...Q.......~
	0x04, 0x00, 0x00, 0x7d, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, // ...}.......P....
	0x00, 0x00, 0x00, 0x82, 0x04, 0x00, 0x00, 0xed, 0x06, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x83, // ................
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x83, 0x04, 0x00, 0x00, 0x67, 0x04, 0x00, 0x00, 0x82, // ...........g....
	0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x84, 0x04, 0x00, 0x00, 0x83, // ...Q............
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x86, // .......P........
	0x04, 0x00, 0x00, 0x7e, 0x04, 0x00, 0x00, 0x84, 0x04, 0x00, 0x00, 0x85, 0x03, 0x00, 0x00, 0x56, // ...~...........V
	0x00, 0x05, 0x00, 0xb0, 0x00, 0x00, 0x00, 0x21, 0x05, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x8e, // .......!........
	0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x23, 0x05, 0x00, 0x00, 0x21, // ...W.......#...!
	0x05, 0x00, 0x00, 0x86, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x89, // .......O........
	0x04, 0x00, 0x00, 0x23, 0x05, 0x00, 0x00, 0x23, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ...#...#........
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x8a, // ................
	0x04, 0x00, 0x00, 0x78, 0x04, 0x00, 0x00, 0x89, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, // ...x.......P....
	0x00, 0x00, 0x00, 0x8e, 0x04, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xed, 0x06, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x8f, 0x04, 0x00, 0x00, 0x67, 0x04, 0x00, 0x00, 0x8e, // ...........g....
	0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x90, 0x04, 0x00, 0x00, 0x8f, // ...Q............
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0x92, // .......A...V....
	0x04, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x96, 0x02, 0x00, 0x00, 0x14, 0x01, 0x00, 0x00, 0x3d, // ...<...........=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x93, 0x04, 0x00, 0x00, 0x92, 0x04, 0x00, 0x00, 0x50, // ...............P
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x94, 0x04, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x93, // ................
	0x04, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x95, 0x04, 0x00, 0x00, 0x67, // ...............g
	0x04, 0x00, 0x00, 0x94, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x96, // .......Q........
	0x04, 0x00, 0x00, 0x95, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x1d, // ...........P....
	0x00, 0x00, 0x00, 0x98, 0x04, 0x00, 0x00, 0x90, 0x04, 0x00, 0x00, 0x96, 0x04, 0x00, 0x00, 0x85, // ................
	0x03, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0xb0, 0x00, 0x00, 0x00, 0x2a, 0x05, 0x00, 0x00, 0x91, // ...V.......*....
	0x00, 0x00, 0x00, 0x8e, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x2c, // .......W.......,
	0x05, 0x00, 0x00, 0x2a, 0x05, 0x00, 0x00, 0x98, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, // ...*.......O....
	0x00, 0x00, 0x00, 0x9b, 0x04, 0x00, 0x00, 0x2c, 0x05, 0x00, 0x00, 0x2c, 0x05, 0x00, 0x00, 0x00, // .......,...,....
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0x9c, 0x04, 0x00, 0x00, 0x8a, 0x04, 0x00, 0x00, 0x9b, 0x04, 0x00, 0x00, 0x50, // ...............P
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xa0, 0x04, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xed, // ................
	0x06, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xa1, 0x04, 0x00, 0x00, 0x67, // ...............g
	0x04, 0x00, 0x00, 0xa0, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa2, // .......Q........
	0x04, 0x00, 0x00, 0xa1, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x56, // ...........A...V
	0x01, 0x00, 0x00, 0xa4, 0x04, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x96, 0x02, 0x00, 0x00, 0x14, // .......<........
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa5, 0x04, 0x00, 0x00, 0xa4, // ...=............
	0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xa6, 0x04, 0x00, 0x00, 0xcf, // ...P............
	0x00, 0x00, 0x00, 0xa5, 0x04, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xa7, // ................
	0x04, 0x00, 0x00, 0x67, 0x04, 0x00, 0x00, 0xa6, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...g.......Q....
	0x00, 0x00, 0x00, 0xa8, 0x04, 0x00, 0x00, 0xa7, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x50, // ...............P
	0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xaa, 0x04, 0x00, 0x00, 0xa2, 0x04, 0x00, 0x00, 0xa8, // ................
	0x04, 0x00, 0x00, 0x85, 0x03, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0xb0, 0x00, 0x00, 0x00, 0x33, // .......V.......3
	0x05, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, // ...........W....
	0x00, 0x00, 0x00, 0x35, 0x05, 0x00, 0x00, 0x33, 0x05, 0x00, 0x00, 0xaa, 0x04, 0x00, 0x00, 0x4f, // ...5...3.......O
	0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xad, 0x04, 0x00, 0x00, 0x35, 0x05, 0x00, 0x00, 0x35, // ...........5...5
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xae, 0x04, 0x00, 0x00, 0x9c, 0x04, 0x00, 0x00, 0xad, // ................
	0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xaf, 0x04, 0x00, 0x00, 0xae, // ................
	0x04, 0x00, 0x00, 0xe2, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb1, // .......Q........
	0x04, 0x00, 0x00, 0x67, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x4a, // ...g...........J
	0x00, 0x00, 0x00, 0xb2, 0x04, 0x00, 0x00, 0xb1, 0x04, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb4, 0x04, 0x00, 0x00, 0x67, 0x04, 0x00, 0x00, 0x00, // ...........g....
	0x00, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xb5, 0x04, 0x00, 0x00, 0xb4, // .......J........
	0x04, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xb6, // ...........J....
	0x04, 0x00, 0x00, 0xb2, 0x04, 0x00, 0x00, 0xb5, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xb8, 0x04, 0x00, 0x00, 0x67, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xb8, // .......g........
	0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xb9, 0x04, 0x00, 0x00, 0xb8, 0x04, 0x00, 0x00, 0xcf, // ...J............
	0x00, 0x00, 0x00, 0xa6, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xba, 0x04, 0x00, 0x00, 0xb6, // .......J........
	0x04, 0x00, 0x00, 0xb9, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbc, // .......Q........
	0x04, 0x00, 0x00, 0x67, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x4a, // ...g...........J
	0x00, 0x00, 0x00, 0xbd, 0x04, 0x00, 0x00, 0xbc, 0x04, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0xa6, // ................
	0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xbe, 0x04, 0x00, 0x00, 0xba, 0x04, 0x00, 0x00, 0xbd, // ...J............
	0x04, 0x00, 0x00, 0xa8, 0x00, 0x04, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xbf, 0x04, 0x00, 0x00, 0xbe, // .......J........
	0x04, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xc1, 0x04, 0x00, 0x00, 0x4d, // .......J.......M
	0x04, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x04, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xc2, // ...........J....
	0x04, 0x00, 0x00, 0xc1, 0x04, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xc3, // ...........J....
	0x04, 0x00, 0x00, 0xbf, 0x04, 0x00, 0x00, 0xc2, 0x04, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xce, // ................
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xc3, 0x04, 0x00, 0x00, 0xc4, // ................
	0x04, 0x00, 0x00, 0xce, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xc4, 0x04, 0x00, 0x00, 0x0c, // ................
	0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc8, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, // ...............1
	0x00, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x4b, 0x03, 0x00, 0x00, 0x42, 0x04, 0x00, 0x00, 0x41, // .......K...B...A
	0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0xc9, 0x04, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x22, // ...V.......<..."
	0x02, 0x00, 0x00, 0x1a, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xca, // .......=........
	0x04, 0x00, 0x00, 0xc9, 0x04, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xcb, // ................
	0x04, 0x00, 0x00, 0xc8, 0x04, 0x00, 0x00, 0xca, 0x04, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x1d, // ...........P....
	0x00, 0x00, 0x00, 0xcc, 0x04, 0x00, 0x00, 0xcb, 0x04, 0x00, 0x00, 0xcb, 0x04, 0x00, 0x00, 0xcb, // ................
	0x04, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xcd, 0x04, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x3b, 0x04, 0x00, 0x00, 0xaf, 0x04, 0x00, 0x00, 0xcc, // .......;........
	0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xce, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xce, // ................
	0x04, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xee, 0x06, 0x00, 0x00, 0x3b, // ...............;
	0x04, 0x00, 0x00, 0x36, 0x04, 0x00, 0x00, 0xcd, 0x04, 0x00, 0x00, 0xc4, 0x04, 0x00, 0x00, 0x0c, // ...6............
	0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xd0, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x25, // ...............%
	0x00, 0x00, 0x00, 0xee, 0x06, 0x00, 0x00, 0x54, 0x03, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x3e, // .......T...A...>
	0x01, 0x00, 0x00, 0xd1, 0x04, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x9d, 0x02, 0x00, 0x00, 0x3d, // .......<.......=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xd2, 0x04, 0x00, 0x00, 0xd1, 0x04, 0x00, 0x00, 0x4f, // ...............O
	0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xd3, 0x04, 0x00, 0x00, 0xd2, 0x04, 0x00, 0x00, 0xd2, // ................
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x8e, // ................
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xd4, 0x04, 0x00, 0x00, 0xd3, 0x04, 0x00, 0x00, 0x5a, // ...............Z
	0x03, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xd6, 0x04, 0x00, 0x00, 0xd4, // ................
	0x04, 0x00, 0x00, 0x5e, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xd7, // ...^............
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0xd6, 0x04, 0x00, 0x00, 0x61, // .......(.......a
	0x03, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x3e, 0x01, 0x00, 0x00, 0xd9, 0x04, 0x00, 0x00, 0x3c, // ...A...>.......<
	0x01, 0x00, 0x00, 0x9d, 0x02, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xda, // .......=........
	0x04, 0x00, 0x00, 0xd9, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xdb, // .......O........
	0x04, 0x00, 0x00, 0xda, 0x04, 0x00, 0x00, 0xda, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xdc, // ................
	0x04, 0x00, 0x00, 0xd0, 0x04, 0x00, 0x00, 0xdb, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x40, 0x05, 0x00, 0x00, 0xd4, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, // ...@...........Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x42, 0x05, 0x00, 0x00, 0xd4, 0x04, 0x00, 0x00, 0x01, // .......B........
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x44, 0x05, 0x00, 0x00, 0xd4, // ...Q.......D....
	0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x45, // ...............E
	0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x42, 0x05, 0x00, 0x00, 0x44, // .......(...B...D
	0x05, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x05, 0x00, 0x00, 0x01, // ...........F....
	0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x40, 0x05, 0x00, 0x00, 0x45, 0x05, 0x00, 0x00, 0x51, // ...(...@...E...Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x48, 0x05, 0x00, 0x00, 0xd7, 0x04, 0x00, 0x00, 0x00, // .......H........
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4a, 0x05, 0x00, 0x00, 0xd7, // ...Q.......J....
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4c, // .......Q.......L
	0x05, 0x00, 0x00, 0xd7, 0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x4d, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x4a, // ...M.......(...J
	0x05, 0x00, 0x00, 0x4c, 0x05, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4e, // ...L...........N
	0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x48, 0x05, 0x00, 0x00, 0x4d, // .......(...H...M
	0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4f, 0x05, 0x00, 0x00, 0xdc, // ...Q.......O....
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x50, // .......Q.......P
	0x05, 0x00, 0x00, 0xdc, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, 0xdc, 0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, // ...Q............
	0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x52, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, // .......R.......(
	0x00, 0x00, 0x00, 0x50, 0x05, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, // ...P...Q........
	0x00, 0x00, 0x00, 0x53, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x4f, // ...S.......(...O
	0x05, 0x00, 0x00, 0x52, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x56, // ...R...........V
	0x05, 0x00, 0x00, 0x46, 0x05, 0x00, 0x00, 0x4e, 0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x4a, // ...F...N.......J
	0x00, 0x00, 0x00, 0x58, 0x05, 0x00, 0x00, 0x56, 0x05, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0xf7, // ...X...V........
	0x00, 0x03, 0x00, 0x62, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x58, // ...b...........X
	0x05, 0x00, 0x00, 0x59, 0x05, 0x00, 0x00, 0x62, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x59, // ...Y...b.......Y
	0x05, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5b, 0x05, 0x00, 0x00, 0xc8, // ...........[....
	0x00, 0x00, 0x00, 0x56, 0x05, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x5e, // ...V...........^
	0x05, 0x00, 0x00, 0xd4, 0x04, 0x00, 0x00, 0x5b, 0x05, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, // .......[........
	0x00, 0x00, 0x00, 0x61, 0x05, 0x00, 0x00, 0xd7, 0x04, 0x00, 0x00, 0x5b, 0x05, 0x00, 0x00, 0xf9, // ...a.......[....
	0x00, 0x02, 0x00, 0x62, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x62, 0x05, 0x00, 0x00, 0xf5, // ...b.......b....
	0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xfc, 0x06, 0x00, 0x00, 0xd7, 0x04, 0x00, 0x00, 0xce, // ................
	0x04, 0x00, 0x00, 0x61, 0x05, 0x00, 0x00, 0x59, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, // ...a...Y........
	0x00, 0x00, 0x00, 0xf1, 0x06, 0x00, 0x00, 0xd4, 0x04, 0x00, 0x00, 0xce, 0x04, 0x00, 0x00, 0x5e, // ...............^
	0x05, 0x00, 0x00, 0x59, 0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x65, // ...Y.......J...e
	0x05, 0x00, 0x00, 0x46, 0x05, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x4a, // ...F...........J
	0x00, 0x00, 0x00, 0x66, 0x05, 0x00, 0x00, 0xbc, 0x03, 0x00, 0x00, 0x65, 0x05, 0x00, 0x00, 0xba, // ...f.......e....
	0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x68, 0x05, 0x00, 0x00, 0x4e, 0x05, 0x00, 0x00, 0xcf, // ...J...h...N....
	0x00, 0x00, 0x00, 0xa6, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x69, 0x05, 0x00, 0x00, 0x66, // .......J...i...f
	0x05, 0x00, 0x00, 0x68, 0x05, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x7e, 0x05, 0x00, 0x00, 0x00, // ...h.......~....
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x69, 0x05, 0x00, 0x00, 0x6a, 0x05, 0x00, 0x00, 0x7e, // .......i...j...~
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x6a, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x6b, // .......j.......k
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x6b, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, // .......k........
	0x00, 0x00, 0x00, 0xf8, 0x06, 0x00, 0x00, 0x27, 0x01, 0x00, 0x00, 0x6a, 0x05, 0x00, 0x00, 0x79, // .......'...j...y
	0x05, 0x00, 0x00, 0x7a, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x49, 0x00, 0x00, 0x00, 0xef, // ...z.......I....
	0x06, 0x00, 0x00, 0x97, 0x00, 0x00, 0x00, 0x6a, 0x05, 0x00, 0x00, 0x7c, 0x05, 0x00, 0x00, 0x7a, // .......j...|...z
	0x05, 0x00, 0x00, 0xb1, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x6e, 0x05, 0x00, 0x00, 0xef, // .......J...n....
	0x06, 0x00, 0x00, 0x22, 0x02, 0x00, 0x00, 0xf6, 0x00, 0x04, 0x00, 0x7d, 0x05, 0x00, 0x00, 0x7a, // ...".......}...z
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x6e, 0x05, 0x00, 0x00, 0x6f, // ...........n...o
	0x05, 0x00, 0x00, 0x7d, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x6f, 0x05, 0x00, 0x00, 0x41, // ...}.......o...A
	0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0x74, 0x05, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x55, // ...V...t...<...U
	0x01, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x75, // .......=.......u
	0x05, 0x00, 0x00, 0x74, 0x05, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x2d, 0x06, 0x00, 0x00, 0x00, // ...t.......-....
	0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0x16, 0x01, 0x00, 0x00, 0xad, 0x05, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xad, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3e, 0x01, 0x00, 0x00, 0xae, // .......A...>....
	0x05, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x3d, 0x01, 0x00, 0x00, 0xef, 0x06, 0x00, 0x00, 0x3d, // ...<...=.......=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xaf, 0x05, 0x00, 0x00, 0xae, 0x05, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb1, 0x05, 0x00, 0x00, 0xaf, 0x05, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb2, 0x05, 0x00, 0x00, 0xaf, // ...Q............
	0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb3, // .......Q........
	0x05, 0x00, 0x00, 0xaf, 0x05, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, // ...........P....
	0x00, 0x00, 0x00, 0xb4, 0x05, 0x00, 0x00, 0xb1, 0x05, 0x00, 0x00, 0xb2, 0x05, 0x00, 0x00, 0xb3, // ................
	0x05, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x46, 0x01, 0x00, 0x00, 0xb5, // .......A...F....
	0x05, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x97, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x35, // ...<.......=...5
	0x01, 0x00, 0x00, 0xb6, 0x05, 0x00, 0x00, 0xb5, 0x05, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0xb7, 0x05, 0x00, 0x00, 0xb4, 0x05, 0x00, 0x00, 0xb6, 0x05, 0x00, 0x00, 0x4f, // ...............O
	0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xb8, 0x05, 0x00, 0x00, 0xb7, 0x05, 0x00, 0x00, 0xb7, // ................
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x83, // ................
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xb9, 0x05, 0x00, 0x00, 0xb8, 0x05, 0x00, 0x00, 0x90, // ................
	0x03, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xbb, 0x05, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0xb9, 0x05, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, // ...E............
	0x00, 0x00, 0x00, 0xbd, 0x05, 0x00, 0x00, 0xfc, 0x03, 0x00, 0x00, 0xbb, 0x05, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0xc0, 0x05, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x55, // ...V.......<...U
	0x01, 0x00, 0x00, 0x14, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc1, // .......=........
	0x05, 0x00, 0x00, 0xc0, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc2, // ................
	0x05, 0x00, 0x00, 0xbd, 0x05, 0x00, 0x00, 0xc1, 0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x4a, // ...............J
	0x00, 0x00, 0x00, 0xc3, 0x05, 0x00, 0x00, 0xc2, 0x05, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xa7, // ................
	0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xc4, 0x05, 0x00, 0x00, 0xbc, 0x03, 0x00, 0x00, 0xc3, // ...J............
	0x05, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xd0, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // ................
	0x00, 0x04, 0x00, 0xc4, 0x05, 0x00, 0x00, 0xc5, 0x05, 0x00, 0x00, 0xd0, 0x05, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xc5, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0xc7, // .......A...V....
	0x05, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0x14, 0x01, 0x00, 0x00, 0x3d, // ...<...U.......=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc8, 0x05, 0x00, 0x00, 0xc7, 0x05, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc9, 0x05, 0x00, 0x00, 0xbd, 0x05, 0x00, 0x00, 0xc8, // ................
	0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0xca, 0x05, 0x00, 0x00, 0x3c, // ...A...V.......<
	0x01, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0x14, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...U.......=....
	0x00, 0x00, 0x00, 0xcb, 0x05, 0x00, 0x00, 0xca, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xcc, 0x05, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0xcb, 0x05, 0x00, 0x00, 0x85, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x31, 0x06, 0x00, 0x00, 0xcc, 0x05, 0x00, 0x00, 0xcc, // .......1........
	0x05, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xce, 0x05, 0x00, 0x00, 0xc9, // ................
	0x05, 0x00, 0x00, 0x31, 0x06, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xcf, // ...1............
	0x05, 0x00, 0x00, 0xf1, 0x06, 0x00, 0x00, 0xce, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xd0, // ................
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xd0, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0xfd, 0x06, 0x00, 0x00, 0x27, 0x01, 0x00, 0x00, 0xad, 0x05, 0x00, 0x00, 0xcf, // .......'........
	0x05, 0x00, 0x00, 0xc5, 0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xd2, // ...........J....
	0x05, 0x00, 0x00, 0xbd, 0x05, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xf4, // ................
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xd2, 0x05, 0x00, 0x00, 0xd3, // ................
	0x05, 0x00, 0x00, 0xf4, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xd3, 0x05, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xd5, 0x05, 0x00, 0x00, 0xbb, 0x05, 0x00, 0x00, 0xfa, // ................
	0x03, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xd6, 0x05, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0xd5, 0x05, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, // ...E............
	0x00, 0x00, 0x00, 0xd8, 0x05, 0x00, 0x00, 0xfc, 0x03, 0x00, 0x00, 0xd6, 0x05, 0x00, 0x00, 0x94, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xdb, 0x05, 0x00, 0x00, 0xbb, 0x05, 0x00, 0x00, 0xd6, // ................
	0x05, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xdd, 0x05, 0x00, 0x00, 0xfa, // ................
	0x03, 0x00, 0x00, 0xd6, 0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xdf, // ...........J....
	0x05, 0x00, 0x00, 0xd8, 0x05, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x4a, // ...............J
	0x00, 0x00, 0x00, 0xe1, 0x05, 0x00, 0x00, 0xdb, 0x05, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xa7, // ................
	0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xe2, 0x05, 0x00, 0x00, 0xdf, 0x05, 0x00, 0x00, 0xe1, // ...J............
	0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xe4, 0x05, 0x00, 0x00, 0xdd, // .......J........
	0x05, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xe5, // ...........J....
	0x05, 0x00, 0x00, 0xe2, 0x05, 0x00, 0x00, 0xe4, 0x05, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xf3, // ................
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xe5, 0x05, 0x00, 0x00, 0xe6, // ................
	0x05, 0x00, 0x00, 0xf3, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xe6, 0x05, 0x00, 0x00, 0x83, // ................
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x35, 0x06, 0x00, 0x00, 0xe6, 0x06, 0x00, 0x00, 0xfc, // .......5........
	0x06, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x36, 0x06, 0x00, 0x00, 0xc8, // ...........6....
	0x00, 0x00, 0x00, 0xdb, 0x05, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x37, // ...............7
	0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x36, 0x06, 0x00, 0x00, 0x2e, // ...........6....
	0x01, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x38, 0x06, 0x00, 0x00, 0x35, // ...........8...5
	0x06, 0x00, 0x00, 0x37, 0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x39, // ...7...........9
	0x06, 0x00, 0x00, 0xfc, 0x06, 0x00, 0x00, 0x38, 0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, // .......8........
	0x00, 0x00, 0x00, 0xe9, 0x05, 0x00, 0x00, 0x75, 0x05, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x85, // .......u........
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xeb, 0x05, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 0xdd, // ................
	0x05, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xec, 0x05, 0x00, 0x00, 0xe9, // ................
	0x05, 0x00, 0x00, 0xeb, 0x05, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xee, // ................
	0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xd8, 0x05, 0x00, 0x00, 0x75, // ...............u
	0x05, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xef, 0x05, 0x00, 0x00, 0xec, // ................
	0x05, 0x00, 0x00, 0xee, 0x05, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xf0, // ................
	0x05, 0x00, 0x00, 0x39, 0x06, 0x00, 0x00, 0xef, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1d, // ...9............
	0x00, 0x00, 0x00, 0xf2, 0x05, 0x00, 0x00, 0xfd, 0x06, 0x00, 0x00, 0xf0, 0x05, 0x00, 0x00, 0xf9, // ................
	0x00, 0x02, 0x00, 0xf3, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xf3, 0x05, 0x00, 0x00, 0xf5, // ................
	0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xff, 0x06, 0x00, 0x00, 0xfd, 0x06, 0x00, 0x00, 0xd3, // ................
	0x05, 0x00, 0x00, 0xf2, 0x05, 0x00, 0x00, 0xe6, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xf4, // ................
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xf4, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0xfe, 0x06, 0x00, 0x00, 0xfd, 0x06, 0x00, 0x00, 0xd0, 0x05, 0x00, 0x00, 0xff, // ................
	0x06, 0x00, 0x00, 0xf3, 0x05, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf7, // ................
	0x05, 0x00, 0x00, 0xb9, 0x05, 0x00, 0x00, 0xb9, 0x05, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xfa, 0x05, 0x00, 0x00, 0xf7, 0x05, 0x00, 0x00, 0xf7, 0x05, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0xfb, 0x05, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x99, // ...V.......<....
	0x01, 0x00, 0x00, 0x9a, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xfc, // .......=........
	0x05, 0x00, 0x00, 0xfb, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0xfd, // .......A...V....
	0x05, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x99, 0x01, 0x00, 0x00, 0x9a, 0x01, 0x00, 0x00, 0x3d, // ...<...........=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xfe, 0x05, 0x00, 0x00, 0xfd, 0x05, 0x00, 0x00, 0x85, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xff, 0x05, 0x00, 0x00, 0xfc, 0x05, 0x00, 0x00, 0xfe, // ................
	0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x3c, // ...A...V.......<
	0x01, 0x00, 0x00, 0x99, 0x01, 0x00, 0x00, 0x9a, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...........=....
	0x00, 0x00, 0x00, 0x01, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x02, 0x06, 0x00, 0x00, 0xff, 0x05, 0x00, 0x00, 0x01, 0x06, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0x03, 0x06, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x99, // ...V.......<....
	0x01, 0x00, 0x00, 0x9a, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04, // .......=........
	0x06, 0x00, 0x00, 0x03, 0x06, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x05, // ................
	0x06, 0x00, 0x00, 0x02, 0x06, 0x00, 0x00, 0x04, 0x06, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0xfa, 0x05, 0x00, 0x00, 0x05, 0x06, 0x00, 0x00, 0x83, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x06, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x06, // ................
	0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x08, 0x06, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x07, 0x06, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xc8, // ...+............
	0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0b, 0x06, 0x00, 0x00, 0x08, // ................
	0x06, 0x00, 0x00, 0x08, 0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0d, // ................
	0x06, 0x00, 0x00, 0xf7, 0x05, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x0e, 0x06, 0x00, 0x00, 0x0b, 0x06, 0x00, 0x00, 0x0d, 0x06, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x12, 0x06, 0x00, 0x00, 0xfc, 0x06, 0x00, 0x00, 0xf1, // ................
	0x06, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x3e, 0x01, 0x00, 0x00, 0x15, 0x06, 0x00, 0x00, 0x3c, // ...A...>.......<
	0x01, 0x00, 0x00, 0xb7, 0x01, 0x00, 0x00, 0xef, 0x06, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, // ...........=....
	0x00, 0x00, 0x00, 0x16, 0x06, 0x00, 0x00, 0x15, 0x06, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, // ...........O....
	0x00, 0x00, 0x00, 0x17, 0x06, 0x00, 0x00, 0x16, 0x06, 0x00, 0x00, 0x16, 0x06, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0x18, 0x06, 0x00, 0x00, 0xfe, 0x06, 0x00, 0x00, 0x17, 0x06, 0x00, 0x00, 0x8e, // ................
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1a, 0x06, 0x00, 0x00, 0x18, 0x06, 0x00, 0x00, 0x0e, // ................
	0x06, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x3e, 0x01, 0x00, 0x00, 0x1c, 0x06, 0x00, 0x00, 0x3c, // ...A...>.......<
	0x01, 0x00, 0x00, 0x99, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x1d, // .......=........
	0x06, 0x00, 0x00, 0x1c, 0x06, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1e, // .......O........
	0x06, 0x00, 0x00, 0x1d, 0x06, 0x00, 0x00, 0x1d, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x20, // ............... 
	0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x12, 0x06, 0x00, 0x00, 0x1e, // .......2........
	0x06, 0x00, 0x00, 0x1a, 0x06, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0x21, // .......A...V...!
	0x06, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0xc4, 0x01, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x3d, // ...<...........=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x22, 0x06, 0x00, 0x00, 0x21, 0x06, 0x00, 0x00, 0xb7, // ......."...!....
	0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x23, 0x06, 0x00, 0x00, 0x22, 0x06, 0x00, 0x00, 0xcf, // ...J...#..."....
	0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x2c, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // .......,........
	0x00, 0x04, 0x00, 0x23, 0x06, 0x00, 0x00, 0x24, 0x06, 0x00, 0x00, 0x2a, 0x06, 0x00, 0x00, 0xf8, // ...#...$...*....
	0x00, 0x02, 0x00, 0x2a, 0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x2d, 0x06, 0x00, 0x00, 0xf8, // ...*.......-....
	0x00, 0x02, 0x00, 0x24, 0x06, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0x25, // ...$...A...V...%
	0x06, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0xc4, 0x01, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x3d, // ...<...........=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x26, 0x06, 0x00, 0x00, 0x25, 0x06, 0x00, 0x00, 0x50, // .......&...%...P
	0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x27, 0x06, 0x00, 0x00, 0x26, 0x06, 0x00, 0x00, 0x26, // .......'...&...&
	0x06, 0x00, 0x00, 0x26, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x3f, // ...&...........?
	0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x20, 0x06, 0x00, 0x00, 0xf1, // ........... ....
	0x06, 0x00, 0x00, 0x27, 0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x2d, 0x06, 0x00, 0x00, 0xf8, // ...'.......-....
	0x00, 0x02, 0x00, 0x2c, 0x06, 0x00, 0x00, 0xff, 0x00, 0x01, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x2d, // ...,...........-
	0x06, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x20, // ............... 
	0x06, 0x00, 0x00, 0x2a, 0x06, 0x00, 0x00, 0x3f, 0x06, 0x00, 0x00, 0x24, 0x06, 0x00, 0x00, 0x81, // ...*...?...$....
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x79, 0x05, 0x00, 0x00, 0xf8, 0x06, 0x00, 0x00, 0x00, // .......y........
	0x07, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x7a, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x7a, // .......z.......z
	0x05, 0x00, 0x00, 0x80, 0x00, 0x05, 0x00, 0x49, 0x00, 0x00, 0x00, 0x7c, 0x05, 0x00, 0x00, 0xef, // .......I...|....
	0x06, 0x00, 0x00, 0x93, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x6b, 0x05, 0x00, 0x00, 0xf8, // ...........k....
	0x00, 0x02, 0x00, 0x7d, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x7e, 0x05, 0x00, 0x00, 0xf8, // ...}.......~....
	0x00, 0x02, 0x00, 0x7e, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xf7, // ...~............
	0x06, 0x00, 0x00, 0x27, 0x01, 0x00, 0x00, 0x62, 0x05, 0x00, 0x00, 0xf8, 0x06, 0x00, 0x00, 0x7d, // ...'...b.......}
	0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x81, 0x05, 0x00, 0x00, 0x46, // .......J.......F
	0x05, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x82, // ...........J....
	0x05, 0x00, 0x00, 0xbc, 0x03, 0x00, 0x00, 0x81, 0x05, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x92, // ................
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x82, 0x05, 0x00, 0x00, 0x83, // ................
	0x05, 0x00, 0x00, 0x92, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x83, 0x05, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x85, 0x05, 0x00, 0x00, 0xfc, 0x03, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x86, 0x05, 0x00, 0x00, 0xfc, // ...Q............
	0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x87, // .......Q........
	0x05, 0x00, 0x00, 0xfc, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, // ...........P....
	0x00, 0x00, 0x00, 0x88, 0x05, 0x00, 0x00, 0x85, 0x05, 0x00, 0x00, 0x86, 0x05, 0x00, 0x00, 0x87, // ................
	0x05, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x46, 0x01, 0x00, 0x00, 0x89, // .......A...F....
	0x05, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x97, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x35, // ...<.......=...5
	0x01, 0x00, 0x00, 0x8a, 0x05, 0x00, 0x00, 0x89, 0x05, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0x8b, 0x05, 0x00, 0x00, 0x88, 0x05, 0x00, 0x00, 0x8a, 0x05, 0x00, 0x00, 0x4f, // ...............O
	0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x8c, 0x05, 0x00, 0x00, 0x8b, 0x05, 0x00, 0x00, 0x8b, // ................
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, // ................
	0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x8d, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, // ...............E
	0x00, 0x00, 0x00, 0x8c, 0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x51, // .......Q.......Q
	0x06, 0x00, 0x00, 0x8d, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x52, 0x06, 0x00, 0x00, 0x8d, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf7, // ...R............
	0x00, 0x03, 0x00, 0x84, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0x16, // ................
	0x01, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x60, 0x06, 0x00, 0x00, 0x0c, // ...`.......`....
	0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x61, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, // .......a........
	0x00, 0x00, 0x00, 0x51, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x62, // ...Q...........b
	0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x52, 0x06, 0x00, 0x00, 0xbc, // ...........R....
	0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x64, 0x06, 0x00, 0x00, 0x62, 0x06, 0x00, 0x00, 0xcb, // ...J...d...b....
	0x00, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x66, 0x06, 0x00, 0x00, 0x61, // .......J...f...a
	0x06, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x67, // ...........J...g
	0x06, 0x00, 0x00, 0x64, 0x06, 0x00, 0x00, 0x66, 0x06, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x69, // ...d...f.......i
	0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x67, 0x06, 0x00, 0x00, 0x68, // ...........g...h
	0x06, 0x00, 0x00, 0x69, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x68, 0x06, 0x00, 0x00, 0xf9, // ...i.......h....
	0x00, 0x02, 0x00, 0x84, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x69, 0x06, 0x00, 0x00, 0x83, // ...........i....
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6c, 0x06, 0x00, 0x00, 0x62, 0x06, 0x00, 0x00, 0x61, // .......l...b...a
	0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6f, 0x06, 0x00, 0x00, 0x62, // ...........o...b
	0x06, 0x00, 0x00, 0x61, 0x06, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x70, // ...a...........p
	0x06, 0x00, 0x00, 0x6c, 0x06, 0x00, 0x00, 0x6f, 0x06, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x4a, // ...l...o.......J
	0x00, 0x00, 0x00, 0x71, 0x06, 0x00, 0x00, 0x52, 0x06, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xa9, // ...q...R........
	0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x72, 0x06, 0x00, 0x00, 0x71, 0x06, 0x00, 0x00, 0xfa, // .......r...q....
	0x00, 0x00, 0x00, 0xfb, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x74, // ...............t
	0x06, 0x00, 0x00, 0xfd, 0x00, 0x00, 0x00, 0x70, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, // .......p........
	0x00, 0x00, 0x00, 0x77, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x74, // ...w.......2...t
	0x06, 0x00, 0x00, 0x70, 0x06, 0x00, 0x00, 0xec, 0x06, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x4a, // ...p...........J
	0x00, 0x00, 0x00, 0x78, 0x06, 0x00, 0x00, 0x52, 0x06, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x7f, // ...x...R........
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7a, 0x06, 0x00, 0x00, 0x70, 0x06, 0x00, 0x00, 0xa9, // .......z...p....
	0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7c, 0x06, 0x00, 0x00, 0x78, 0x06, 0x00, 0x00, 0x7a, // .......|...x...z
	0x06, 0x00, 0x00, 0x70, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7e, // ...p...........~
	0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x77, 0x06, 0x00, 0x00, 0x7c, // .......2...w...|
	0x06, 0x00, 0x00, 0x72, 0x06, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x7f, // ...r.......J....
	0x06, 0x00, 0x00, 0x51, 0x06, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, // ...Q............
	0x00, 0x00, 0x00, 0x81, 0x06, 0x00, 0x00, 0x7e, 0x06, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, // .......~........
	0x00, 0x00, 0x00, 0x83, 0x06, 0x00, 0x00, 0x7f, 0x06, 0x00, 0x00, 0x81, 0x06, 0x00, 0x00, 0x7e, // ...............~
	0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x84, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x84, // ................
	0x06, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf3, 0x06, 0x00, 0x00, 0xcf, // ................
	0x00, 0x00, 0x00, 0x68, 0x06, 0x00, 0x00, 0x83, 0x06, 0x00, 0x00, 0x69, 0x06, 0x00, 0x00, 0x81, // ...h.......i....
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x54, 0x06, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0xf3, // .......T........
	0x06, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x55, 0x06, 0x00, 0x00, 0x8d, // ...Q.......U....
	0x05, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xa1, 0x06, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0x16, 0x01, 0x00, 0x00, 0x8c, 0x06, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0x8c, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8d, // ................
	0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x55, 0x06, 0x00, 0x00, 0x83, // ...........U....
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8f, 0x06, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x8d, // ................
	0x06, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x90, 0x06, 0x00, 0x00, 0x8f, // .......J........
	0x06, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x94, 0x06, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x90, 0x06, 0x00, 0x00, 0x91, 0x06, 0x00, 0x00, 0x94, // ................
	0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x91, 0x06, 0x00, 0x00, 0xbe, 0x00, 0x05, 0x00, 0x4a, // ...............J
	0x00, 0x00, 0x00, 0x92, 0x06, 0x00, 0x00, 0x55, 0x06, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xa9, // .......U........
	0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x93, 0x06, 0x00, 0x00, 0x92, 0x06, 0x00, 0x00, 0xcf, // ................
	0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xa1, 0x06, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0x94, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x97, // ................
	0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xd4, 0x00, 0x00, 0x00, 0x8d, // .......2........
	0x06, 0x00, 0x00, 0xd7, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x99, // ................
	0x06, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x8d, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x9a, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x99, // ................
	0x06, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9b, 0x06, 0x00, 0x00, 0x97, // ................
	0x06, 0x00, 0x00, 0x9a, 0x06, 0x00, 0x00, 0xbe, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x9c, // ...........J....
	0x06, 0x00, 0x00, 0x55, 0x06, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, // ...U............
	0x00, 0x00, 0x00, 0xe9, 0x06, 0x00, 0x00, 0x97, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x9f, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xe9, // ...........2....
	0x06, 0x00, 0x00, 0x9a, 0x06, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xa0, 0x06, 0x00, 0x00, 0x9c, 0x06, 0x00, 0x00, 0x9b, 0x06, 0x00, 0x00, 0x9f, // ................
	0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xa1, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xa1, // ................
	0x06, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf4, 0x06, 0x00, 0x00, 0x93, // ................
	0x06, 0x00, 0x00, 0x91, 0x06, 0x00, 0x00, 0xa0, 0x06, 0x00, 0x00, 0x94, 0x06, 0x00, 0x00, 0x50, // ...............P
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x57, 0x06, 0x00, 0x00, 0x54, 0x06, 0x00, 0x00, 0xf4, // .......W...T....
	0x06, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x9b, 0x00, 0x00, 0x00, 0xa9, 0x06, 0x00, 0x00, 0x83, // ...V............
	0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x58, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xac, // .......X........
	0x06, 0x00, 0x00, 0xa9, 0x06, 0x00, 0x00, 0x57, 0x06, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xcf, // .......W........
	0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x49, 0x06, 0x00, 0x00, 0xac, // ...O.......I....
	0x06, 0x00, 0x00, 0xac, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x4b, 0x06, 0x00, 0x00, 0xf1, // ...........K....
	0x06, 0x00, 0x00, 0x49, 0x06, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0x4c, // ...I...A...V...L
	0x06, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0xe1, 0x01, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x3d, // ...<...........=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4d, 0x06, 0x00, 0x00, 0x4c, 0x06, 0x00, 0x00, 0x8e, // .......M...L....
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x4e, 0x06, 0x00, 0x00, 0x4b, 0x06, 0x00, 0x00, 0x4d, // .......N...K...M
	0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x91, 0x05, 0x00, 0x00, 0xf7, // ................
	0x06, 0x00, 0x00, 0x4e, 0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x92, 0x05, 0x00, 0x00, 0xf8, // ...N............
	0x00, 0x02, 0x00, 0x92, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xf9, // ................
	0x06, 0x00, 0x00, 0xf7, 0x06, 0x00, 0x00, 0x7e, 0x05, 0x00, 0x00, 0x91, 0x05, 0x00, 0x00, 0xa1, // .......~........
	0x06, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x94, 0x05, 0x00, 0x00, 0x53, // .......J.......S
	0x05, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x98, 0x05, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x94, 0x05, 0x00, 0x00, 0x95, 0x05, 0x00, 0x00, 0x98, // ................
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x95, 0x05, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0x97, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xd0, // ...........2....
	0x04, 0x00, 0x00, 0xdb, 0x04, 0x00, 0x00, 0xf9, 0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x98, // ................
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x98, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0xfa, 0x06, 0x00, 0x00, 0xf9, 0x06, 0x00, 0x00, 0x92, 0x05, 0x00, 0x00, 0x97, // ................
	0x05, 0x00, 0x00, 0x95, 0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe5, // .......Q........
	0x04, 0x00, 0x00, 0xfa, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xe7, 0x04, 0x00, 0x00, 0xfa, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe9, 0x04, 0x00, 0x00, 0xfa, 0x06, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x56, 0x01, 0x00, 0x00, 0xea, 0x04, 0x00, 0x00, 0x3c, // ...A...V.......<
	0x01, 0x00, 0x00, 0x9d, 0x02, 0x00, 0x00, 0x9a, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...........=....
	0x00, 0x00, 0x00, 0xeb, 0x04, 0x00, 0x00, 0xea, 0x04, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, // ...........P....
	0x00, 0x00, 0x00, 0xea, 0x06, 0x00, 0x00, 0xe5, 0x04, 0x00, 0x00, 0xe7, 0x04, 0x00, 0x00, 0xe9, // ................
	0x04, 0x00, 0x00, 0xeb, 0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xed, 0x04, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xed, 0x04, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x09, // ................
	0x07, 0x00, 0x00, 0x35, 0x04, 0x00, 0x00, 0x2e, 0x04, 0x00, 0x00, 0xea, 0x06, 0x00, 0x00, 0x98, // ...5............
	0x05, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0xa0, 0x03, 0x00, 0x00, 0x09, 0x07, 0x00, 0x00, 0xfd, // ...>............
	0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00, 0x00, 0x00, 0xb0, 0x02,                               // ...8.......
};
static const bgfx::EmbeddedShader fs_ball_spherical_decal_st = BGFX_EMBEDDED_SHADER(fs_ball_spherical_decal_st);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of fragment shader from fs_ball.sc to fs_ball_spherical_nodecal_st with options: STEREO SPHERICAL NODECAL
static const uint8_t fs_ball_spherical_nodecal_st_mtl[10738] =
{
	0x46, 0x53, 0x48, 0x0b, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x15, 0x74, // FSH..N.........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, // ex_ball_colorSam
	0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x74, // pler...........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x65, 0x78, // ex_ball_colorTex
	0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, // ture...........t
	0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, // ex_envSampler...
	0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x54, // ........tex_envT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // exture..........
	0x16, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, // .tex_diffuse_env
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Sampler.........
	0x00, 0x16, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, // ..tex_diffuse_en
	0x76, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // vTexture........
	0x00, 0x00, 0x15, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, // ...tex_ball_deca
	0x6c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // lSampler........
	0x00, 0x00, 0x15, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, // ...tex_ball_deca
	0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // lTexture........
	0x00, 0x00, 0x19, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, // ...tex_ball_play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, // fieldSampler....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // .......tex_ball_
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // playfieldTexture
	0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x62, 0x61, 0x6c, 0x6c, 0x4c, // ...........ballL
	0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x0a, 0x00, 0x01, 0x0a, 0x00, 0x00, 0x00, 0x00, // ightPos.........
	0x00, 0x07, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x14, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, // ..matView.......
	0x00, 0x00, 0x00, 0x1e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, // ....Roughness_Wr
	0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, // apL_Edge_Thickne
	0x73, 0x73, 0x12, 0x01, 0x80, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x63, 0x41, 0x6d, // ss...........cAm
	0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, // bient_LightRange
	0x12, 0x01, 0x40, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x62, 0x61, 0x6c, 0x6c, 0x4c, // ..@........ballL
	0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0a, 0xa0, 0x01, // ightEmission....
	0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // .......fDisableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, // ighting_top_belo
	0x77, 0x12, 0x01, 0x60, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x65, 0x6e, 0x76, // w..`........fenv
	0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, // EmissionScale_Te
	0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x01, 0x50, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // xWidth..P.......
	0x13, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, // .w_h_disableLigh
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x01, 0xa0, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x63, // ting...........c
	0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x01, 0x70, 0x02, 0x01, 0x00, // Base_Alpha..p...
	0x00, 0x00, 0x00, 0x00, 0x0c, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, // .....matWorldVie
	0x77, 0x14, 0x01, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x6d, 0x61, 0x74, 0x50, // w..@........matP
	0x72, 0x6f, 0x6a, 0x14, 0x02, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x69, 0x6e, // roj...........in
	0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, // vTableRes_reflec
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x01, 0x90, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, // tion...........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x10, 0x00, 0x00, // ex_ball_color...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, // ........tex_diff
	0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // use_env.........
	0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, // ..tex_ball_decal
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x74, 0x65, 0x78, 0x5f, 0x62, // ...........tex_b
	0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x10, 0x00, 0x00, // all_playfield...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe3, 0x26, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, // ........&..#incl
	0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, // ude <metal_stdli
	0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, // b>.#include <sim
	0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, // d/simd.h>..using
	0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, //  namespace metal
	0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, // ;..struct _Globa
	0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, // l.{.    float4x4
	0x20, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //  matView;.    fl
	0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, // oat4x4 matWorldV
	0x69, 0x65, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, // iew;.    float4x
	0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, 0x20, 0x20, // 4 matProj[2];.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, //   float4 ballLig
	0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x31, 0x30, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // htPos[10];.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, // loat4 ballLightE
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x31, 0x30, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, // mission[10];.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, //  float4 cAmbient
	0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x3b, 0x0a, 0x20, 0x20, 0x20, // _LightRange;.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, //  float4 fenvEmis
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, // sionScale_TexWid
	0x74, 0x68, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x66, // th;.    float4 f
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, // DisableLighting_
	0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // top_below;.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, // loat4 cBase_Alph
	0x61, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x52, 0x6f, // a;.    float4 Ro
	0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, // ughness_WrapL_Ed
	0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x20, 0x20, // ge_Thickness;.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, //   float4 invTabl
	0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b, // eRes_reflection;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, // .    float4 w_h_
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x3b, // disableLighting;
	0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x66, 0x6c, // .};..constant fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x37, 0x36, 0x39, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, // oat _1769 = {};.
	0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, // .struct xlatMtlM
	0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // ain_out.{.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, // oat4 bgfx_FragDa
	0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, // ta0 [[color(0)]]
	0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, // ;.};..struct xla
	0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, // tMtlMain_in.{.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x20, 0x5b, 0x5b, //   float v_eye [[
	0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, // user(locn0)]];. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, //    float3 v_norm
	0x61, 0x6c, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, // al [[user(locn1)
	0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, // ]];.    float2 v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, // _texcoord0 [[use
	0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x32, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // r(locn2)]];.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, // float3 v_worldPo
	0x73, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x33, 0x29, 0x5d, // s [[user(locn3)]
	0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x5b, 0x5b, 0x20, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x5f, // ];.};..[[ early_
	0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x20, 0x5d, // fragment_tests ]
	0x5d, 0x20, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // ] fragment xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // tlMain_out xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // tlMain(xlatMtlMa
	0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, // in_in in [[stage
	0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, // _in]], constant 
	0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, // _Global& _mtl_u 
	0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, // [[buffer(0)]], t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, // exture2d<float> 
	0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x5b, // tex_ball_color [
	0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, // [texture(0)]], t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, // exture2d<float> 
	0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x20, // tex_diffuse_env 
	0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, // [[texture(2)]], 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, // texture2d<float>
	0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x20, //  tex_ball_decal 
	0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x33, 0x29, 0x5d, 0x5d, 0x2c, 0x20, // [[texture(3)]], 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x3c, // texture2d_array<
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // float> tex_ball_
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, // playfield [[text
	0x75, 0x72, 0x65, 0x28, 0x34, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ure(4)]], sample
	0x72, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // r tex_ball_color
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // Sampler [[sample
	0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, // r(0)]], sampler 
	0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x53, // tex_diffuse_envS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ampler [[sampler
	0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, // (2)]], sampler t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x53, 0x61, 0x6d, // ex_ball_decalSam
	0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x33, // pler [[sampler(3
	0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, 0x65, 0x78, // )]], sampler tex
	0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, // _ball_playfieldS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ampler [[sampler
	0x28, 0x34, 0x29, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, // (4)]]).{.    xla
	0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, // tMtlMain_out out
	0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  = {};.    float
	0x34, 0x20, 0x5f, 0x31, 0x37, 0x39, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, // 4 _1797;.    do.
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //     {.        fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x31, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, // oat3 _1015 = fas
	0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x2d, 0x69, 0x6e, // t::normalize(-in
	0x2e, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x29, 0x3b, 0x0a, 0x20, 0x20, // .v_worldPos);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, //       float3 _10
	0x31, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // 17 = fast::norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // lize(in.v_normal
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // );.        float
	0x33, 0x20, 0x5f, 0x31, 0x30, 0x32, 0x30, 0x20, 0x3d, 0x20, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, // 3 _1020 = reflec
	0x74, 0x28, 0x5f, 0x31, 0x30, 0x31, 0x35, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x31, 0x37, 0x29, 0x3b, // t(_1015, _1017);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // .        float _
	0x31, 0x30, 0x32, 0x33, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x30, 0x31, 0x35, // 1023 = dot(_1015
	0x2c, 0x20, 0x5f, 0x31, 0x30, 0x32, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // , _1020);.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x30, 0x33, 0x39, 0x20, 0x3d, 0x20, //   float _1039 = 
	0x28, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x30, 0x32, 0x30, 0x2e, 0x7a, 0x29, // ((1.0 - _1020.z)
	0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x30, 0x2e, 0x33, 0x35, 0x33, //  > 0.0) ? (0.353
	0x35, 0x35, 0x33, 0x33, 0x38, 0x34, 0x35, 0x34, 0x32, 0x34, 0x36, 0x35, 0x32, 0x30, 0x39, 0x39, // 5533845424652099
	0x36, 0x30, 0x39, 0x33, 0x37, 0x35, 0x20, 0x2a, 0x20, 0x72, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, // 609375 * rsqrt(1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x30, 0x32, 0x30, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x3a, // .0 - _1020.z)) :
	0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //  0.0;.        fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x32, 0x39, 0x34, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, // oat4 _1294 = tex
	0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x2e, 0x73, 0x61, 0x6d, 0x70, // _ball_decal.samp
	0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, // le(tex_ball_deca
	0x6c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, // lSampler, in.v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // excoord0);.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x34, 0x20, //    float3 _1064 
	0x3d, 0x20, 0x5f, 0x31, 0x32, 0x39, 0x34, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, // = _1294.xyz * _1
	0x32, 0x39, 0x34, 0x2e, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // 294.w;.        f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x37, 0x20, 0x3d, 0x20, 0x74, 0x65, // loat3 _1067 = te
	0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x73, 0x61, 0x6d, // x_ball_color.sam
	0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, // ple(tex_ball_col
	0x6f, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // orSampler, float
	0x32, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x2d, 0x5f, 0x31, 0x30, 0x33, 0x39, 0x2c, 0x20, 0x5f, 0x31, // 2(fma(-_1039, _1
	0x30, 0x32, 0x30, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x6d, 0x61, // 020.x, 0.5), fma
	0x28, 0x2d, 0x5f, 0x31, 0x30, 0x33, 0x39, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x32, 0x30, 0x2e, 0x79, // (-_1039, _1020.y
	0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x28, // , 0.5)), level((
	0x5f, 0x31, 0x30, 0x32, 0x33, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x36, 0x30, 0x30, 0x30, 0x30, 0x30, // _1023 > 0.600000
	0x30, 0x32, 0x33, 0x38, 0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, // 0238418579101562
	0x35, 0x29, 0x20, 0x3f, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x30, 0x32, 0x33, 0x2c, 0x20, // 5) ? fma(_1023, 
	0x31, 0x35, 0x2e, 0x30, 0x2c, 0x20, 0x2d, 0x39, 0x2e, 0x30, 0x29, 0x20, 0x3a, 0x20, 0x30, 0x2e, // 15.0, -9.0) : 0.
	0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x34, 0x3b, // 0)).xyz + _1064;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, // .        if (_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // l_u.w_h_disableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x7a, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, // ighting.z != 0.0
	0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ).        {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x39, 0x37, 0x20, 0x3d, 0x20, //         _1797 = 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x30, 0x36, 0x37, 0x2c, 0x20, 0x5f, 0x6d, // float4(_1067, _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, // tl_u.cBase_Alpha
	0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .w);.           
	0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  break;.        
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // }.        float3
	0x20, 0x5f, 0x31, 0x30, 0x38, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x37, 0x20, 0x2a, //  _1083 = _1067 *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, //  _mtl_u.fenvEmis
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, // sionScale_TexWid
	0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // th.x;.        fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x38, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x6d, // oat3 _1087 = (_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, // tl_u.matWorldVie
	0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, // w * float4(0.0, 
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, // 0.0, 1.0, 0.0)).
	0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // xyz;.        flo
	0x61, 0x74, 0x20, 0x5f, 0x31, 0x30, 0x39, 0x30, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, // at _1090 = dot(_
	0x31, 0x30, 0x38, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x32, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, // 1087, _1020);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x31, 0x30, //       float _110
	0x31, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x30, 0x38, 0x37, 0x2c, 0x20, 0x69, // 1 = dot(_1087, i
	0x6e, 0x2e, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x20, 0x2d, 0x20, 0x28, // n.v_worldPos - (
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, // _mtl_u.matWorldV
	0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x30, // iew * float4(0.0
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, // , 0.0, 0.0, 1.0)
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x31, 0x30, 0x39, 0x30, 0x3b, 0x0a, // ).xyz) / _1090;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, //         float4 _
	0x31, 0x31, 0x31, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, // 1116 = _mtl_u.ma
	0x74, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, // tProj[uint(in.v_
	0x65, 0x79, 0x65, 0x29, 0x5d, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x69, // eye)] * float4(i
	0x6e, 0x2e, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x20, 0x2d, 0x20, 0x28, // n.v_worldPos - (
	0x5f, 0x31, 0x30, 0x32, 0x30, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x31, 0x30, 0x31, 0x29, 0x2c, 0x20, // _1020 * _1101), 
	0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // 1.0);.        fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x31, 0x31, 0x32, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, // oat2 _1127 = flo
	0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, // at2(0.5) + (floa
	0x74, 0x32, 0x28, 0x5f, 0x31, 0x31, 0x31, 0x36, 0x2e, 0x78, 0x2c, 0x20, 0x2d, 0x5f, 0x31, 0x31, // t2(_1116.x, -_11
	0x31, 0x36, 0x2e, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2f, 0x20, 0x5f, // 16.y) * (0.5 / _
	0x31, 0x31, 0x31, 0x36, 0x2e, 0x77, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1116.w));.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x31, 0x34, 0x31, 0x20, 0x3d, //   float3 _1141 =
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, 0x31, 0x32, 0x37, 0x20, 0x2b, //  float3((_1127 +
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, //  float2(_mtl_u.w
	0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, // _h_disableLighti
	0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, // ng.x, 0.0)).x, (
	0x5f, 0x31, 0x31, 0x32, 0x37, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, // _1127 + float2(_
	0x31, 0x37, 0x36, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x69, // 1769, 0.0)).y, i
	0x6e, 0x2e, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // n.v_eye);.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x33, 0x30, 0x33, 0x20, 0x3d, //   float4 _1303 =
	0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, //  tex_ball_playfi
	0x65, 0x6c, 0x64, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, // eld.sample(tex_b
	0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, // all_playfieldSam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x31, 0x34, 0x31, 0x2e, 0x78, 0x79, 0x2c, 0x20, // pler, _1141.xy, 
	0x75, 0x69, 0x6e, 0x74, 0x28, 0x72, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x31, 0x31, 0x34, 0x31, 0x2e, // uint(rint(_1141.
	0x7a, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // z)));.        fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x31, 0x35, 0x38, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, // oat3 _1158 = flo
	0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, 0x31, 0x32, 0x37, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, // at3((_1127 - flo
	0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, // at2(_mtl_u.w_h_d
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, // isableLighting.x
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x32, // , 0.0)).x, (_112
	0x37, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x31, 0x37, 0x36, 0x39, // 7 - float2(_1769
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, // , 0.0)).y, in.v_
	0x65, 0x79, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // eye);.        fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x33, 0x31, 0x32, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, // oat4 _1312 = tex
	0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2e, // _ball_playfield.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // sample(tex_ball_
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // playfieldSampler
	0x2c, 0x20, 0x5f, 0x31, 0x31, 0x35, 0x38, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x75, 0x69, 0x6e, 0x74, // , _1158.xy, uint
	0x28, 0x72, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x31, 0x31, 0x35, 0x38, 0x2e, 0x7a, 0x29, 0x29, 0x29, // (rint(_1158.z)))
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // ;.        float3
	0x20, 0x5f, 0x31, 0x31, 0x37, 0x36, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, //  _1176 = float3(
	0x28, 0x5f, 0x31, 0x31, 0x32, 0x37, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // (_1127 + float2(
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x36, 0x39, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, // 0.0, _1769)).x, 
	0x28, 0x5f, 0x31, 0x31, 0x32, 0x37, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // (_1127 + float2(
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, // 0.0, _mtl_u.w_h_
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, // disableLighting.
	0x79, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, // y)).y, in.v_eye)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // ;.        float4
	0x20, 0x5f, 0x31, 0x33, 0x32, 0x31, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, //  _1321 = tex_bal
	0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x73, 0x61, 0x6d, 0x70, // l_playfield.samp
	0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, // le(tex_ball_play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, // fieldSampler, _1
	0x31, 0x37, 0x36, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x72, 0x69, 0x6e, // 176.xy, uint(rin
	0x74, 0x28, 0x5f, 0x31, 0x31, 0x37, 0x36, 0x2e, 0x7a, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // t(_1176.z)));.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x31, //       float3 _11
	0x39, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, 0x31, // 94 = float3((_11
	0x32, 0x37, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x2c, // 27 - float2(0.0,
	0x20, 0x5f, 0x31, 0x37, 0x36, 0x39, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x31, //  _1769)).x, (_11
	0x32, 0x37, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x2c, // 27 - float2(0.0,
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, //  _mtl_u.w_h_disa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, // bleLighting.y)).
	0x79, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, // y, in.v_eye);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x33, //       float4 _13
	0x33, 0x30, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, // 30 = tex_ball_pl
	0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, // ayfield.sample(t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // ex_ball_playfiel
	0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x31, 0x39, 0x34, 0x2e, // dSampler, _1194.
	0x78, 0x79, 0x2c, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x72, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x31, // xy, uint(rint(_1
	0x31, 0x39, 0x34, 0x2e, 0x7a, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 194.z)));.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x30, 0x3b, 0x0a, //   float3 _1770;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x21, 0x28, 0x28, //         if ((!((
	0x28, 0x28, 0x5f, 0x31, 0x31, 0x32, 0x37, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, // ((_1127.x < 0.0)
	0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x32, 0x37, 0x2e, 0x78, 0x20, 0x3e, 0x20, 0x31, //  || (_1127.x > 1
	0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x32, 0x37, 0x2e, 0x79, // .0)) || (_1127.y
	0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x31, //  < 0.0)) || (_11
	0x32, 0x37, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x26, 0x26, // 27.y > 1.0))) &&
	0x20, 0x28, 0x21, 0x28, 0x5f, 0x31, 0x31, 0x30, 0x31, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, //  (!(_1101 <= 0.0
	0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, // ))).        {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x30, 0x20, //           _1770 
	0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x31, 0x30, 0x38, 0x33, 0x2c, 0x20, 0x28, 0x28, 0x28, // = mix(_1083, (((
	0x5f, 0x31, 0x33, 0x30, 0x33, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x33, 0x31, // _1303.xyz + _131
	0x32, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x33, 0x32, 0x31, 0x2e, 0x78, // 2.xyz) + _1321.x
	0x79, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x33, 0x33, 0x30, 0x2e, 0x78, 0x79, 0x7a, 0x29, // yz) + _1330.xyz)
	0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, //  * 0.25, float3(
	0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, // smoothstep(0.0, 
	0x30, 0x2e, 0x31, 0x35, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x35, 0x39, 0x36, 0x30, 0x34, 0x36, // 0.15000000596046
	0x34, 0x34, 0x37, 0x37, 0x35, 0x33, 0x39, 0x30, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x5f, 0x31, 0x30, // 44775390625, _10
	0x39, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x69, 0x6e, 0x76, // 90) * _mtl_u.inv
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, // TableRes_reflect
	0x69, 0x6f, 0x6e, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ion.z));.       
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, //  }.        else.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, //       _1770 = _1
	0x30, 0x38, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, // 083;.        }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, //        float3 _1
	0x32, 0x33, 0x39, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x42, // 239 = (_mtl_u.cB
	0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, // ase_Alpha.xyz * 
	0x30, 0x2e, 0x30, 0x37, 0x35, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x39, 0x38, 0x30, 0x32, 0x33, // 0.07500000298023
	0x32, 0x32, 0x33, 0x38, 0x37, 0x36, 0x39, 0x35, 0x33, 0x31, 0x32, 0x35, 0x29, 0x20, 0x2a, 0x20, // 223876953125) * 
	0x5f, 0x31, 0x30, 0x36, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // _1064;.        f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x32, 0x34, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x61, // loat3 _1242 = fa
	0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x32, 0x33, 0x39, 0x20, 0x2a, 0x20, // st::max(_1239 * 
	0x32, 0x2e, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x30, // 2.0, float3(0.10
	0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x34, 0x39, 0x30, 0x31, 0x31, 0x36, 0x31, 0x31, 0x39, // 0000001490116119
	0x33, 0x38, 0x34, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 384765625));.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x32, 0x34, //      float3 _124
	0x37, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x69, 0x6e, 0x28, 0x5f, 0x31, // 7 = fast::min(_1
	0x37, 0x37, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x35, 0x2e, 0x30, // 770, float3(15.0
	0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x42, 0x61, 0x73, // )) * _mtl_u.cBas
	0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, // e_Alpha.xyz;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x32, 0x34, //      float3 _124
	0x39, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, // 9 = float3(1.0) 
	0x2d, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // - _1064;.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x32, 0x35, 0x31, 0x20, 0x3d, 0x20, //  float3 _1251 = 
	0x5f, 0x31, 0x32, 0x34, 0x37, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x32, 0x34, 0x39, 0x3b, 0x0a, 0x20, // _1247 * _1249;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, //        float _13
	0x34, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, // 47 = fast::max(_
	0x31, 0x32, 0x33, 0x39, 0x2e, 0x78, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, // 1239.x, fast::ma
	0x78, 0x28, 0x5f, 0x31, 0x32, 0x33, 0x39, 0x2e, 0x79, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x33, 0x39, // x(_1239.y, _1239
	0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // .z));.        fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x35, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, // oat _1355 = fast
	0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x32, 0x34, 0x32, 0x2e, 0x78, 0x2c, 0x20, 0x66, // ::max(_1242.x, f
	0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x32, 0x34, 0x32, 0x2e, 0x79, // ast::max(_1242.y
	0x2c, 0x20, 0x5f, 0x31, 0x32, 0x34, 0x32, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // , _1242.z));.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x36, 0x33, //      float _1363
	0x20, 0x3d, 0x20, 0x5f, 0x31, 0x33, 0x34, 0x37, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x33, 0x35, 0x35, //  = _1347 + _1355
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // ;.        float3
	0x20, 0x5f, 0x31, 0x37, 0x37, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1773;.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x34, 0x3b, 0x0a, 0x20, 0x20, // float3 _1784;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x31, 0x33, 0x36, 0x33, 0x20, //       if (_1363 
	0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, // > 1.0).        {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // .            flo
	0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x36, 0x38, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, // at _1368 = 1.0 /
	0x20, 0x5f, 0x31, 0x33, 0x36, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1363;.        
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x34, //     _1784 = _124
	0x32, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x33, 0x36, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 2 * _1368;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x33, 0x20, 0x3d, 0x20, 0x5f, //        _1773 = _
	0x31, 0x32, 0x33, 0x39, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x33, 0x36, 0x38, 0x3b, 0x0a, 0x20, 0x20, // 1239 * _1368;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, // else.        {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x34, //            _1784
	0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x34, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  = _1242;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x31, //       _1773 = _1
	0x32, 0x33, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, // 239;.        }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, //        float3 _1
	0x37, 0x37, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, // 779;.        if 
	0x28, 0x28, 0x74, 0x72, 0x75, 0x65, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x33, 0x34, 0x37, // ((true && (_1347
	0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x33, //  > 0.0)) || (_13
	0x35, 0x35, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 55 > 0.0)).     
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x30, 0x3b, 0x0a, 0x20, //  float3 _1780;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x30, //            _1780
	0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, //  = float3(0.0);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //             floa
	0x74, 0x33, 0x20, 0x5f, 0x31, 0x33, 0x39, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // t3 _1398;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x5f, //       for (int _
	0x31, 0x37, 0x37, 0x31, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x31, 0x20, // 1771 = 0; _1771 
	0x3c, 0x20, 0x31, 0x30, 0x3b, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, // < 10; _1780 = _1
	0x33, 0x39, 0x38, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x31, 0x2b, 0x2b, 0x29, 0x0a, 0x20, 0x20, // 398, _1771++).  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //           {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //             floa
	0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // t3 _1788;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, //           do.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, //              {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x34, 0x36, 0x32, 0x20, //    float3 _1462 
	0x3d, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, // = (_mtl_u.matVie
	0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // w * float4(_mtl_
	0x75, 0x2e, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x5f, // u.ballLightPos[_
	0x31, 0x37, 0x37, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, // 1771].xyz, 1.0))
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // .xyz - in.v_worl
	0x64, 0x50, 0x6f, 0x73, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // dPos;.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //           float3
	0x20, 0x5f, 0x31, 0x34, 0x36, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, //  _1464 = fast::n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x31, 0x34, 0x36, 0x32, 0x29, 0x3b, // ormalize(_1462);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, 0x36, 0x36, //      float _1466
	0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x30, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, //  = dot(_1017, _1
	0x34, 0x36, 0x34, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 464);.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //           float3
	0x20, 0x5f, 0x31, 0x37, 0x38, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1785;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, //             if (
	0x74, 0x72, 0x75, 0x65, 0x20, 0x26, 0x26, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x34, 0x36, 0x36, 0x20, // true && ((_1466 
	0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, // + _mtl_u.Roughne
	0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, // ss_WrapL_Edge_Th
	0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, // ickness.y) > 0.0
	0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // )).             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, 0x38, 0x31, 0x20, 0x3d, 0x20, 0x31, //  float _1481 = 1
	0x2e, 0x30, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x67, // .0 + _mtl_u.Roug
	0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, // hness_WrapL_Edge
	0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, // _Thickness.y;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x31, //       _1785 = _1
	0x37, 0x37, 0x33, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x34, 0x36, 0x36, 0x20, 0x2b, 0x20, // 773 * ((_1466 + 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, // _mtl_u.Roughness
	0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, // _WrapL_Edge_Thic
	0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x31, 0x34, 0x38, // kness.y) / (_148
	0x31, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x38, 0x31, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 1 * _1481));.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  }.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, //        else.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x35, 0x20, //           _1785 
	0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, // = float3(0.0);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    }.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, //          float3 
	0x5f, 0x31, 0x37, 0x38, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _1786;.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, //            if (_
	0x31, 0x34, 0x36, 0x36, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // 1466 > 0.0).    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //           float3
	0x20, 0x5f, 0x31, 0x34, 0x39, 0x31, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, //  _1491 = fast::n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x31, 0x34, 0x36, 0x34, 0x20, 0x2b, // ormalize(_1464 +
	0x20, 0x5f, 0x31, 0x30, 0x31, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1015);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, 0x39, 0x33, 0x20, 0x3d, 0x20, 0x64, //  float _1493 = d
	0x6f, 0x74, 0x28, 0x5f, 0x31, 0x30, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x39, 0x31, 0x29, // ot(_1017, _1491)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //           float 
	0x5f, 0x31, 0x34, 0x39, 0x36, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x34, 0x36, // _1496 = dot(_146
	0x34, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x39, 0x31, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 4, _1491);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, 0x39, 0x38, 0x20, 0x3d, //    float _1498 =
	0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x30, 0x31, 0x35, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x39, //  dot(_1015, _149
	0x31, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1);.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //             floa
	0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // t3 _1787;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x31, 0x34, 0x39, 0x33, 0x20, 0x3e, 0x20, //   if (((_1493 > 
	0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x34, 0x39, 0x36, 0x20, 0x3e, // 0.0) && (_1496 >
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x34, 0x39, 0x38, //  0.0)) && (_1498
	0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  > 0.0)).       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  {.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //                _
	0x31, 0x37, 0x38, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x35, 0x20, 0x2b, 0x20, 0x28, // 1787 = _1785 + (
	0x28, 0x5f, 0x31, 0x37, 0x38, 0x34, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // (_1784 + ((float
	0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x34, 0x29, 0x20, // 3(1.0) - _1784) 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x34, // * powr(1.0 - _14
	0x39, 0x36, 0x2c, 0x20, 0x35, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x28, // 96, 5.0))) * (((
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, // _mtl_u.Roughness
	0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, // _WrapL_Edge_Thic
	0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, // kness.x + 1.0) /
	0x20, 0x28, 0x38, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x39, 0x38, 0x29, 0x29, 0x20, //  (8.0 * _1498)) 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x5f, 0x31, 0x34, 0x39, 0x33, 0x2c, 0x20, 0x5f, 0x6d, // * powr(_1493, _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, // tl_u.Roughness_W
	0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, // rapL_Edge_Thickn
	0x65, 0x73, 0x73, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ess.x)));.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   }.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, //             else
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x37, 0x20, 0x3d, 0x20, 0x5f, //        _1787 = _
	0x31, 0x37, 0x38, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1785;.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, //               }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x36, 0x20, 0x3d, 0x20, //         _1786 = 
	0x5f, 0x31, 0x37, 0x38, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _1787;.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, //            }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  else.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //           {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, 0x38, //     _1786 = _178
	0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 5;.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        }.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, //              flo
	0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x32, 0x34, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, // at _1524 = dot(_
	0x31, 0x34, 0x36, 0x32, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x36, 0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20, // 1462, _1462);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x34, 0x31, 0x20, 0x3d, 0x20, //   float _1541 = 
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, // fast::clamp(1.0 
	0x2d, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x35, 0x32, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x35, 0x32, // - ((_1524 * _152
	0x34, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, // 4) / (((_mtl_u.c
	0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, // Ambient_LightRan
	0x67, 0x65, 0x2e, 0x77, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x41, // ge.w * _mtl_u.cA
	0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, // mbient_LightRang
	0x65, 0x2e, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x41, // e.w) * _mtl_u.cA
	0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, // mbient_LightRang
	0x65, 0x2e, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x41, // e.w) * _mtl_u.cA
	0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, // mbient_LightRang
	0x65, 0x2e, 0x77, 0x29, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, // e.w)), 0.0, 1.0)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x35, //       float3 _15
	0x36, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x37, 0x38, 0x34, 0x20, 0x2b, // 65 = fma(_1784 +
	0x20, 0x5f, 0x31, 0x37, 0x37, 0x33, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, //  _1773, _mtl_u.c
	0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, // Ambient_LightRan
	0x67, 0x65, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x37, 0x38, 0x36, 0x20, 0x2a, // ge.xyz, (_1786 *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, //  _mtl_u.ballLigh
	0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x5f, 0x31, 0x37, 0x37, 0x31, 0x5d, // tEmission[_1771]
	0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x35, 0x34, 0x31, 0x20, // .xyz) * ((_1541 
	0x2a, 0x20, 0x5f, 0x31, 0x35, 0x34, 0x31, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x32, // * _1541) / (_152
	0x34, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 4 + 1.0)));.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x66, 0x44, 0x69, 0x73, 0x61, // if (_mtl_u.fDisa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, // bleLighting_top_
	0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, // below.x != 0.0).
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, //               _1
	0x37, 0x38, 0x38, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x31, 0x35, 0x36, 0x35, 0x2c, // 788 = mix(_1565,
	0x20, 0x5f, 0x31, 0x37, 0x37, 0x33, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, //  _1773, float3(_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, // mtl_u.fDisableLi
	0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, // ghting_top_below
	0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .x));.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, //               br
	0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // eak;.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          }.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, //                e
	0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // lse.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x36, 0x35, 0x3b, //   _1788 = _1565;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, //          break;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     }.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, //           break;
	0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, //  // unreachable 
	0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // workaround.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, //            } whi
	0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // le(false);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x33, 0x39, 0x38, //            _1398
	0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x30, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x38, //  = _1780 + _1788
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, // ;.            }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x37, //             _177
	0x39, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 9 = _1780;.     
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, //    }.        els
	0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // e.        {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x39, 0x20, 0x3d, 0x20, //         _1779 = 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // float3(0.0);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //      }.        f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, // loat3 _1781;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x74, 0x72, 0x75, 0x65, 0x20, 0x26, 0x26, //      if (true &&
	0x20, 0x28, 0x5f, 0x31, 0x33, 0x34, 0x37, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, //  (_1347 > 0.0)).
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x34, //       float3 _14
	0x31, 0x38, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // 18 = fast::norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, // lize((_mtl_u.mat
	0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, // View * float4(_1
	0x30, 0x31, 0x37, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, // 017, 0.0)).xyz);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // .            flo
	0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x31, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x34, 0x31, 0x38, // at _1614 = _1418
	0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .y;.            
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x31, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x31, // float _1615 = _1
	0x34, 0x31, 0x38, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 418.x;.         
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x35, 0x3b, 0x0a, //    float _1775;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, //             do. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //            {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, //              flo
	0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x33, 0x30, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, // at _1630 = abs(_
	0x31, 0x36, 0x31, 0x34, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1614);.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, //        float _16
	0x33, 0x31, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x31, 0x36, 0x31, 0x35, 0x29, 0x3b, // 31 = abs(_1615);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x36, 0x33, 0x31, 0x20, 0x3c, 0x3d, 0x20, 0x36, //  if ((_1631 <= 6
	0x2e, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x20, // .103515625e-05) 
	0x26, 0x26, 0x20, 0x28, 0x5f, 0x31, 0x36, 0x33, 0x30, 0x20, 0x3c, 0x3d, 0x20, 0x36, 0x2e, 0x31, // && (_1630 <= 6.1
	0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x29, 0x0a, 0x20, // 03515625e-05)). 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, //                {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x35, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, //      _1775 = 0.0
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, //       break;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, //              }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x34, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, // loat _1645 = (_1
	0x36, 0x33, 0x31, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x36, 0x33, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, // 631 - _1630) / (
	0x5f, 0x31, 0x36, 0x33, 0x31, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x36, 0x33, 0x30, 0x29, 0x3b, 0x0a, // _1631 + _1630);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x35, 0x39, 0x20, 0x3d, 0x20, 0x66, 0x6d, // float _1659 = fm
	0x61, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x30, 0x2e, 0x30, 0x33, 0x33, 0x37, 0x31, 0x39, 0x38, 0x33, // a(fma(0.03371983
	0x37, 0x36, 0x36, 0x35, 0x35, 0x35, 0x37, 0x38, 0x36, 0x31, 0x33, 0x32, 0x38, 0x31, 0x32, 0x35, // 7665557861328125
	0x20, 0x2a, 0x20, 0x5f, 0x31, 0x36, 0x34, 0x35, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x34, 0x35, 0x2c, //  * _1645, _1645,
	0x20, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x37, 0x31, 0x33, 0x34, 0x34, 0x37, 0x33, 0x33, 0x32, 0x33, //  -0.157134473323
	0x38, 0x32, 0x32, 0x30, 0x32, 0x31, 0x34, 0x38, 0x34, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x28, // 822021484375), (
	0x5f, 0x31, 0x36, 0x31, 0x35, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, // _1615 < 0.0) ? (
	0x2d, 0x5f, 0x31, 0x36, 0x34, 0x35, 0x29, 0x20, 0x3a, 0x20, 0x5f, 0x31, 0x36, 0x34, 0x35, 0x2c, // -_1645) : _1645,
	0x20, 0x28, 0x5f, 0x31, 0x36, 0x31, 0x35, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, //  (_1615 < 0.0) ?
	0x20, 0x30, 0x2e, 0x33, 0x37, 0x35, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x31, 0x32, 0x35, 0x29, 0x3b, //  0.375 : 0.125);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x5f, 0x31, 0x37, 0x37, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x36, 0x31, 0x34, 0x20, //  _1775 = (_1614 
	0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x2d, 0x5f, 0x31, 0x36, 0x35, 0x39, // < 0.0) ? (-_1659
	0x29, 0x20, 0x3a, 0x20, 0x5f, 0x31, 0x36, 0x35, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // ) : _1659;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, //            break
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, // ;.            } 
	0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, // while(false);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //           float 
	0x5f, 0x31, 0x36, 0x31, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x34, 0x31, 0x38, 0x2e, 0x7a, 0x3b, // _1618 = _1418.z;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // .            flo
	0x61, 0x74, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // at _1776;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       do.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, //        float _16
	0x37, 0x34, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x31, 0x36, 0x31, 0x38, 0x29, 0x3b, // 74 = abs(_1618);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x36, 0x37, //  if ((1.0 - _167
	0x34, 0x29, 0x20, 0x3c, 0x3d, 0x20, 0x36, 0x2e, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, // 4) <= 6.10351562
	0x35, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 5e-05).         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, //              _17
	0x37, 0x36, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x36, 0x31, 0x38, 0x20, 0x3e, 0x3d, 0x20, 0x30, // 76 = (_1618 >= 0
	0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x30, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x30, 0x3b, // .0) ? 0.0 : 1.0;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //      break;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, //             }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, // oat _1684 = fma(
	0x2d, 0x30, 0x2e, 0x30, 0x34, 0x39, 0x36, 0x34, 0x37, 0x34, 0x32, 0x38, 0x30, 0x39, 0x35, 0x33, // -0.0496474280953
	0x34, 0x30, 0x37, 0x32, 0x38, 0x37, 0x35, 0x39, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, // 40728759765625, 
	0x5f, 0x31, 0x36, 0x37, 0x34, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x39, 0x38, 0x30, 0x34, 0x39, 0x39, // _1674, 0.4980499
	0x31, 0x34, 0x38, 0x33, 0x36, 0x38, 0x38, 0x33, 0x35, 0x34, 0x34, 0x39, 0x32, 0x31, 0x38, 0x37, // 1483688354492187
	0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 5);.            
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x37, 0x20, //     float _1687 
	0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x36, // = sqrt(1.0 - _16
	0x37, 0x34, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 74);.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x36, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, //      _1776 = (_1
	0x36, 0x31, 0x38, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x5f, // 618 >= 0.0) ? (_
	0x31, 0x36, 0x38, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x37, 0x29, 0x20, 0x3a, 0x20, // 1684 * _1687) : 
	0x66, 0x6d, 0x61, 0x28, 0x2d, 0x5f, 0x31, 0x36, 0x38, 0x34, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x38, // fma(-_1684, _168
	0x37, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 7, 1.0);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, //          break;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, //             } wh
	0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ile(false);.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x31, 0x20, 0x3d, 0x20, //         _1781 = 
	0x5f, 0x31, 0x37, 0x37, 0x39, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x37, 0x37, 0x33, 0x20, // _1779 + ((_1773 
	0x2a, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, // * tex_diffuse_en
	0x76, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, // v.sample(tex_dif
	0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // fuse_envSampler,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x5f, 0x31, //  float2(0.5 + _1
	0x37, 0x37, 0x35, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x36, 0x29, 0x2c, 0x20, 0x6c, 0x65, 0x76, // 775, _1776), lev
	0x65, 0x6c, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, // el(0.0)).xyz) * 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, // _mtl_u.fenvEmiss
	0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, // ionScale_TexWidt
	0x68, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, // h.x);.        }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, //         else.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x39, //    _1781 = _1779
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, // ;.        }.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x32, //     float3 _1782
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x66, 0x61, // ;.        if (fa
	0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x32, 0x35, 0x31, 0x2e, 0x78, 0x2c, // st::max(_1251.x,
	0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x32, 0x35, 0x31, //  fast::max(_1251
	0x2e, 0x79, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x35, 0x31, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x3e, 0x20, // .y, _1251.z)) > 
	0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, // 0.0).        {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x32, //            _1782
	0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x32, 0x34, 0x37, 0x2c, 0x20, 0x5f, 0x31, //  = fma(_1247, _1
	0x32, 0x34, 0x39, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x31, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 249, _1781);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, //      }.        e
	0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, // lse.        {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x32, 0x20, //           _1782 
	0x3d, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // = _1781;.       
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x37, 0x39, 0x37, //  }.        _1797
	0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x37, 0x38, 0x32, 0x2c, //  = float4(_1782,
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, //  _mtl_u.cBase_Al
	0x70, 0x68, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // pha.w);.        
	0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, // break;.    } whi
	0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, // le(false);.    o
	0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, // ut.bgfx_FragData
	0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, 0x39, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, // 0 = _1797;.    r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, // eturn out;.}....
	0x50, 0x03,                                                                                     // P.
};
static const uint8_t fs_ball_spherical_nodecal_st_essl[14496] =
{
	0x46, 0x53, 0x48, 0x0b, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8d, 0x38, // FSH..N.........8
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // s.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, // arying in.precis
	0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3b, // ion highp float;
	0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // .precision highp
	0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, //  int;.precision 
	0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, // highp sampler2DA
	0x72, 0x72, 0x61, 0x79, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, // rray;.#define sh
	0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adow2D(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //  _coord) texture
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // (_sampler, _coor
	0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, // d).#define shado
	0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // w2DProj(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // eProj(_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, // _coord).#extensi
	0x6f, 0x6e, 0x20, 0x47, 0x4c, 0x5f, 0x45, 0x58, 0x54, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // on GL_EXT_textur
	0x65, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x20, 0x3a, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, // e_array : enable
	0x0a, 0x6f, 0x75, 0x74, 0x20, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x70, 0x20, 0x76, 0x65, 0x63, // .out mediump vec
	0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // 4 bgfx_FragColor
	0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ;.varying float 
	0x76, 0x5f, 0x65, 0x79, 0x65, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, // v_eye;.varying v
	0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x76, 0x61, // ec3 v_normal;.va
	0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, // rying vec2 v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, // coord0;.varying 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x3b, // vec3 v_worldPos;
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, // .vec3 instMul(ve
	0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, // c3 _vec, mat3 _m
	0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, // tx) { return ( (
	0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, // _vec) * (_mtx) )
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, // ; }.vec3 instMul
	0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // (mat3 _mtx, vec3
	0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _vec) { return 
	0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, // ( (_mtx) * (_vec
	0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, // ) ); }.vec4 inst
	0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, // Mul(vec4 _vec, m
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // at4 _mtx) { retu
	0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, // rn ( (_vec) * (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, // mtx) ); }.vec4 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, // nstMul(mat4 _mtx
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, // , vec4 _vec) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, // eturn ( (_mtx) *
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, //  (_vec) ); }.flo
	0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, // at rcp(float _a)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, //  { return 1.0/_a
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, // ; }.vec2 rcp(vec
	0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // 2 _a) { return v
	0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // ec2(1.0)/_a; }.v
	0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, // ec3 rcp(vec3 _a)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, //  { return vec3(1
	0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, // .0)/_a; }.vec4 r
	0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // cp(vec4 _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, // turn vec4(1.0)/_
	0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, // a; }.vec2 vec2_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // plat(float _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, //  return vec2(_x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, //  _x); }.vec3 vec
	0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, // 3_splat(float _x
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // ) { return vec3(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // _x, _x, _x); }.v
	0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, // ec4 vec4_splat(f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // loat _x) { retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // n vec4(_x, _x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, // x, _x); }.uvec2 
	0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec2_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, //  _x) { return uv
	0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, // ec2(_x, _x); }.u
	0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // vec3 uvec3_splat
	0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // (uint _x) { retu
	0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // rn uvec3(_x, _x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, //  _x); }.uvec4 uv
	0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, // ec4_splat(uint _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, // x) { return uvec
	0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // 4(_x, _x, _x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, // ); }.mat4 mtxFro
	0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, // mRows(vec4 _0, v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, // ec4 _1, vec4 _2,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  vec4 _3).{.retu
	0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, // rn transpose(mat
	0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, // 4(_0, _1, _2, _3
	0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, // ) );.}.mat4 mtxF
	0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, // romCols(vec4 _0,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, //  vec4 _1, vec4 _
	0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 2, vec4 _3).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, // turn mat4(_0, _1
	0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, // , _2, _3);.}.mat
	0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, // 3 mtxFromRows(ve
	0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, // c3 _0, vec3 _1, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // vec3 _2).{.retur
	0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, // n transpose(mat3
	0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, // (_0, _1, _2) );.
	0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, // }.mat3 mtxFromCo
	0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // ls(vec3 _0, vec3
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, //  _1, vec3 _2).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, // return mat3(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // _1, _2);.}.unifo
	0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, // rm vec4 u_viewRe
	0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // ct;.uniform vec4
	0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, //  u_viewTexel;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // iform mat4 u_vie
	0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // w;.uniform mat4 
	0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // u_invView;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, // rm mat4 u_proj;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, // uniform mat4 u_i
	0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // nvProj;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, // mat4 u_viewProj;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // invViewProj;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, // form mat4 u_mode
	0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // l[32];.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, // at4 u_modelView;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, // modelViewProj;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, // niform vec4 u_al
	0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // phaRef4;.float s
	0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, // qr(const float v
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, // ).{.return v*v;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // }.vec2 sqr(const
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  vec2 v).{.retur
	0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x71, // n v*v;.}.vec3 sq
	0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, // r(const vec3 v).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, // {.return v*v;.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x63, 0x6f, 0x6e, 0x73, // vec3 mul_w1(cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // t vec3 v, const 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // mat4 m).{.return
	0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, //  v.x*m[0].xyz + 
	0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, // (v.y*m[1].xyz + 
	0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, // (v.z*m[2].xyz + 
	0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // m[3].xyz));.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, // oat acos_approx_
	0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // divPI(const floa
	0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // t v).{.const flo
	0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, // at x = abs(v);.i
	0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, // f(1. - x <= 0.00
	0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, // 006103515625).re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // turn (v >= 0.) ?
	0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  0. : 1.;.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, // float res = ((-0
	0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, // .155972/3.141592
	0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, // 6535897932384626
	0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, // 433832795) * x +
	0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, //  (1.56467/3.1415
	0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, // 9265358979323846
	0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, // 26433832795) ) *
	0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, //  sqrt(1. - x);.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, // eturn (v >= 0.) 
	0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, // ? res : 1. - res
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, // ;.}.float atan2_
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x63, 0x6f, // approx_div2PI(co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, // nst float y, con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, // st float x).{.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, // nst float abs_y 
	0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // = abs(y);.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, // float abs_x = ab
	0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, // s(x);.if(abs_x <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, // = 0.000061035156
	0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, // 25 && abs_y <= 0
	0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, // .00006103515625)
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // .return 0.;.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, // t float r = (abs
	0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, // _x - abs_y) / (a
	0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x63, // bs_x + abs_y);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, // onst float angle
	0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, //  = ((x < 0.) ? (
	0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, // 3./8.) : (1./8.)
	0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, // ).+ (0.211868 /(
	0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, // 2.*3.14159265358
	0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, // 9793238462643383
	0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, // 2795) * r * r - 
	0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, // 0.987305 /(2.*3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, // ) * ((x < 0.) ? 
	0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // -r : r);.return 
	0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, // (y < 0.) ? -angl
	0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // e : angle;.}.flo
	0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, // at asin_approx_d
	0x69, 0x76, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ivPI(const float
	0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, //  v).{.const floa
	0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, // t x = abs(v);.if
	0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, // (1. - x <= 0.000
	0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, // 06103515625).ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, // urn (v >= 0.) ? 
	0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // 0.5 : -0.5;.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, // t float res = ((
	0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, // -0.155972/3.1415
	0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, // 9265358979323846
	0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, // 26433832795) * x
	0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, //  + (1.56467/3.14
	0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, // 1592653589793238
	0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, // 4626433832795) )
	0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, //  * sqrt(1. - x);
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, // .return (v >= 0.
	0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, // ) ? 0.5 - res : 
	0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // -0.5 + res;.}.ve
	0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, // c2 ray_to_equire
	0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x63, 0x6f, 0x6e, // ctangular_uv(con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // st vec3 ray).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, // eturn vec2(.0.5 
	0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, // + atan2_approx_d
	0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, // iv2PI(ray.y, ray
	0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, // .x),.acos_approx
	0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, // _divPI(ray.z));.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, // }.float InvsRGB(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // const float colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, // r).{.if (color <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // = 0.04045).retur
	0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, // n color * (1.0/1
	0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, // 2.92);.else.retu
	0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, // rn pow(color * (
	0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, // 1.0/1.055) + (0.
	0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, // 055/1.055), 2.4)
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, // ;.}.float InvRec
	0x37, 0x30, 0x39, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 709(const float 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, // color).{.if (col
	0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, // or <= 0.081).ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, // urn color * (1.0
	0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, // /4.5);.else.retu
	0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, // rn pow(color * (
	0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, // 1.0/1.099) + (0.
	0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, // 099/1.099), 1.0/
	0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, // 0.45);.}.float I
	0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // nvGamma(const fl
	0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // oat color).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // urn InvsRGB(colo
	0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, // r);.}.vec3 InvGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // mma(const vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // olor).{.return v
	0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, // ec3(InvGamma(col
	0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, // or.x),InvGamma(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, // olor.y),InvGamma
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // (color.z));.}.ve
	0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, // c3 InvToneMap(co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // nst vec3 color).
	0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, // {.const float in
	0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, // v_2bh = 0.5/0.25
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, // ;.const float bh
	0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, //  = 4.0*0.25 - 2.
	0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // 0;.return (color
	0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, //  - 1.0 + sqrt(co
	0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, // lor*(color + bh)
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, //  + 1.0))*inv_2bh
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, // ;.}.float sRGB(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, // onst float f).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, // float s;.if (f <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, // = 0.0031308).s =
	0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, //  12.92 * f;.else
	0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, // .s = 1.055 * pow
	0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, // (f, 1.0/2.4) - 0
	0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, // .055;.return s;.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x63, // }.float Rec709(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, // onst float f).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, // float s;.if (f <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, // = 0.018).s = 4.5
	0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, //  * f;.else.s = 1
	0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, // .099 * pow(f, 0.
	0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, // 45) - 0.099;.ret
	0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, // urn s;.}.float F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // BGamma(const flo
	0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // at color).{.retu
	0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, // rn sRGB(color);.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, // }.vec2 FBGamma(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // onst vec2 color)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x46, // .{.return vec2(F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, // BGamma(color.x),
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, // FBGamma(color.y)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // );.}.vec3 FBGamm
	0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, // a(const vec3 col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // or).{.return vec
	0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // 3(FBGamma(color.
	0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // x),FBGamma(color
	0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .y),FBGamma(colo
	0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, // r.z));.}.float F
	0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // BToneMap(const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // loat l).{.return
	0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, //  l * ((l*0.25 + 
	0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // 1.0) / (l + 1.0)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, // );.}.vec2 FBTone
	0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, // Map(const vec2 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // olor).{.const fl
	0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // oat l = dot(colo
	0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, // r,vec2(0.176204+
	0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, // 0.0108109*0.5,0.
	0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, // 812985+0.0108109
	0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, // *0.5));.return c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, // olor * ((l*0.25 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, // + 1.0) / (l + 1.
	0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, // 0));.}.vec3 FBTo
	0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, // neMap(const vec3
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  color).{.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, // float l = dot(co
	0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, // lor,vec3(0.17620
	0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, // 4,0.812985,0.010
	0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, // 8109));.return c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, // olor * ((l*0.25 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, // + 1.0) / (l + 1.
	0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, 0x64, 0x69, // 0));.}.vec4 Addi
	0x74, 0x69, 0x76, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // tive(const vec4 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // cBase, const vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // 4 cBlend, const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, // float percent).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, // .return cBase + 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, // cBlend*percent;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x63, // }.vec3 Screen (c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // onst vec3 cBase,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, //  const vec3 cBle
	0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, // nd).{.return 1.0
	0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, //  - (1.0 - cBase)
	0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, //  * (1.0 - cBlend
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, // );.}.vec4 Screen
	0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, //  (const vec4 cBa
	0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // se, const vec4 c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // Blend).{.return 
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, // 1.0 - (1.0 - cBa
	0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, // se) * (1.0 - cBl
	0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, // end);.}.vec3 Scr
	0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // eenHDR (const ve
	0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // c3 cBase, const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // vec3 cBlend).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // eturn max(1.0 - 
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, // (1.0 - cBase) * 
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, // (1.0 - cBlend), 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, // vec3(0.,0.,0.));
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, // .}.vec4 ScreenHD
	0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // R (const vec4 cB
	0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // ase, const vec4 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // cBlend).{.return
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, //  max(1.0 - (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // - cBase) * (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // - cBlend), vec4(
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, // 0.,0.,0.,0.));.}
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, // .vec4 Multiply (
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // const vec4 cBase
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, // , const vec4 cBl
	0x65, 0x6e, 0x64, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // end, const float
	0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  percent).{.retu
	0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // rn cBase * cBlen
	0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // d*percent;.}.vec
	0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // 4 Overlay (const
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, //  vec4 cBase, con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, // st vec4 cBlend).
	0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, // {.vec4 cNew = st
	0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, // ep(0.5, cBase);.
	0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, // cNew = mix(cBase
	0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, // *cBlend*2.0, 1.0
	0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, // -2.0*(1.0-cBase)
	0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, // *(1.0-cBlend), c
	0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, // New);.return cNe
	0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, // w;.}.vec4 Overla
	0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, // yHDR (const vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, //  cBase, const ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, // c4 cBlend).{.vec
	0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, // 4 cNew = step(0.
	0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, // 5, cBase);.cNew 
	0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, // = max(mix(cBase*
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, // cBlend*2.0, 1.0-
	0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, // 2.0*(1.0-cBase)*
	0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, // (1.0-cBlend), cN
	0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, // ew), vec4(0.,0.,
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 0.,0.));.return 
	0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, // cNew;.}.vec3 cos
	0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, // _hemisphere_samp
	0x6c, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, // le(const vec2 t)
	0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, // .{.const float p
	0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, // hi = t.y * (2.0*
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 5);.const float 
	0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // cosTheta = sqrt(
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // 1.0 - t.x);.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, // t float sinTheta
	0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, //  = sqrt(t.x);.fl
	0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x73, 0x69, 0x6e, 0x63, 0x6f, // oat sp,cp;.sinco
	0x73, 0x28, 0x70, 0x68, 0x69, 0x2c, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x29, 0x3b, 0x0a, 0x72, 0x65, // s(phi,sp,cp);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, // turn vec3(cp * s
	0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, // inTheta, cosThet
	0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, // a, sp * sinTheta
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, // );.}.vec3 rotate
	0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, // _to_vector_upper
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, // (const vec3 vec,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, //  const vec3 norm
	0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // al).{.if(normal.
	0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, // y > -0.99999).{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, // const float h = 
	0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // 1.0/(1.0+normal.
	0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // y);.const float 
	0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, // hz = h*normal.z;
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, // .const float hzx
	0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, //  = hz*normal.x;.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, // return vec3(.vec
	0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, // .x * (normal.y+h
	0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, // z*normal.z) + ve
	0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, // c.y * normal.x -
	0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, //  vec.z * hzx,.ve
	0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, // c.y * normal.y -
	0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, //  vec.x * normal.
	0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // x - vec.z * norm
	0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, // al.z,.vec.y * no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, // rmal.z - vec.x *
	0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, //  hzx + vec.z * (
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // normal.y+h*norma
	0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, // l.x*normal.x));.
	0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, // }.else return -v
	0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // ec;.}.uniform ma
	0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // t4 matView;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, // orm mat4 matWorl
	0x64, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // dView;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, // at4 matWorldView
	0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // Inverse;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, //  mat4 matWorldVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // ewProj[2];.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x5b, // rm mat4 matProj[
	0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, // 2];.uniform samp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, // ler2D tex_ball_c
	0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, // olor;.uniform sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x3b, // mpler2D tex_env;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .uniform sampler
	0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, // 2D tex_diffuse_e
	0x6e, 0x76, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, // nv;.uniform samp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, // ler2D tex_ball_d
	0x65, 0x63, 0x61, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, // ecal;.uniform sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x74, 0x65, 0x78, // mpler2DArray tex
	0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x3b, // _ball_playfield;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, // .uniform vec4 u_
	0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, // basic_shade_mode
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, // ;.uniform vec4 b
	0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x32, 0x20, 0x2b, 0x20, // allLightPos[2 + 
	0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // 8];.uniform vec4
	0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, //  ballLightEmissi
	0x6f, 0x6e, 0x5b, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // on[2 + 8];.unifo
	0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, // rm vec4 cAmbient
	0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // _LightRange;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, // form vec4 fenvEm
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, // issionScale_TexW
	0x69, 0x64, 0x74, 0x68, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // idth;.uniform ve
	0x63, 0x34, 0x20, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, // c4 fDisableLight
	0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x3b, 0x0a, 0x75, // ing_top_below;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x53, 0x63, 0x65, // niform vec4 fSce
	0x6e, 0x65, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // neScale;.uniform
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, //  vec4 cBase_Alph
	0x61, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // a;.uniform vec4 
	0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, // Roughness_WrapL_
	0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, // Edge_Thickness;.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4f, // float GeometricO
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // pacity(const flo
	0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // at NdotV, const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x6e, // float alpha, con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, // st float blendin
	0x67, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, // g, const float t
	0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // hickness).{.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, // t float x = abs(
	0x4e, 0x64, 0x6f, 0x74, 0x56, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // NdotV);.const fl
	0x6f, 0x61, 0x74, 0x20, 0x67, 0x20, 0x3d, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, // oat g = blending
	0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x78, 0x20, 0x2f, 0x20, 0x28, //  * (1.0 - (x / (
	0x78, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, // x * (1.0 - thick
	0x6e, 0x65, 0x73, 0x73, 0x29, 0x20, 0x2b, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, // ness) + thicknes
	0x73, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, // s)));.return mix
	0x28, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x67, 0x29, 0x3b, // (alpha, 1.0, g);
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, // .}.vec3 FresnelS
	0x63, 0x68, 0x6c, 0x69, 0x63, 0x6b, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // chlick(const vec
	0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // 3 spec, const fl
	0x6f, 0x61, 0x74, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, // oat LdotH, const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x72, //  float edge).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x70, 0x65, 0x63, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x65, // eturn spec + (ve
	0x63, 0x33, 0x28, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x65, 0x64, 0x67, // c3(edge,edge,edg
	0x65, 0x29, 0x20, 0x2d, 0x20, 0x73, 0x70, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, // e) - spec) * pow
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x35, 0x2e, // (1.0 - LdotH, 5.
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, // );.}.vec3 DoPoin
	0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // tLight(const vec
	0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // 3 pos, const vec
	0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // 3 N, const vec3 
	0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, // V, const vec3 di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // ffuse, const vec
	0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // 3 glossy, const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // float edge, cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, // t float glossyPo
	0x77, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x69, // wer, const int i
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, // , const bool is_
	0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // metal).{.const v
	0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x28, // ec3 lightDir = (
	0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, //  ( (matView) * (
	0x76, 0x65, 0x63, 0x34, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, // vec4(ballLightPo
	0x73, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, // s[i].xyz, 1.0)) 
	0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x70, 0x6f, 0x73, 0x3b, 0x0a, 0x63, // ) ).xyz - pos;.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4c, 0x20, 0x3d, 0x20, 0x6e, 0x6f, // onst vec3 L = no
	0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, // rmalize(lightDir
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, // );.const float N
	0x64, 0x6f, 0x74, 0x4c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x20, 0x4c, 0x29, // dotL = dot(N, L)
	0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, // ;.vec3 Out = vec
	0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // 3(0.0,0.0,0.0);.
	0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, // if (!is_metal &&
	0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x2b, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, //  (NdotL + Roughn
	0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, // ess_WrapL_Edge_T
	0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, // hickness.y > 0.0
	0x29, 0x29, 0x0a, 0x4f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // )).Out = diffuse
	0x20, 0x2a, 0x20, 0x28, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x2b, 0x20, 0x52, 0x6f, 0x75, //  * ((NdotL + Rou
	0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, // ghness_WrapL_Edg
	0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x29, 0x20, 0x2f, // e_Thickness.y) /
	0x20, 0x73, 0x71, 0x72, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, //  sqr(1.0+Roughne
	0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, // ss_WrapL_Edge_Th
	0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, // ickness.y));.if 
	0x28, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, // (NdotL > 0.0).{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x48, 0x20, 0x3d, 0x20, 0x6e, // const vec3 H = n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x4c, 0x20, 0x2b, 0x20, 0x56, 0x29, 0x3b, // ormalize(L + V);
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, // .const float Ndo
	0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, // tH = dot(N, H);.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4c, 0x64, 0x6f, 0x74, // const float Ldot
	0x48, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4c, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x63, // H = dot(L, H);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x56, 0x64, 0x6f, 0x74, 0x48, // onst float VdotH
	0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x56, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x69, 0x66, //  = dot(V, H);.if
	0x20, 0x28, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, //  ((NdotH > 0.0) 
	0x26, 0x26, 0x20, 0x28, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, // && (LdotH > 0.0)
	0x20, 0x26, 0x26, 0x20, 0x28, 0x56, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, //  && (VdotH > 0.0
	0x29, 0x29, 0x0a, 0x4f, 0x75, 0x74, 0x20, 0x2b, 0x3d, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, // )).Out += Fresne
	0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, 0x6b, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, // lSchlick(glossy,
	0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x65, 0x64, 0x67, 0x65, 0x29, 0x20, 0x2a, 0x20, //  LdotH, edge) * 
	0x28, 0x28, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x2b, // (((glossyPower +
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x38, 0x2e, 0x30, 0x2a, 0x56, 0x64, 0x6f, //  1.0) / (8.0*Vdo
	0x74, 0x48, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x48, // tH)) * pow(NdotH
	0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x29, 0x29, 0x3b, // , glossyPower));
	0x0a, 0x7d, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // .}.const float s
	0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x64, // qrl_lightDir = d
	0x6f, 0x74, 0x28, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2c, 0x6c, 0x69, 0x67, 0x68, // ot(lightDir,ligh
	0x74, 0x44, 0x69, 0x72, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x41, 0x74, // tDir);.float fAt
	0x74, 0x65, 0x6e, 0x20, 0x3d, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, // ten = clamp(1.0 
	0x2d, 0x20, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2a, // - sqrl_lightDir*
	0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2f, 0x28, 0x63, // sqrl_lightDir/(c
	0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, // Ambient_LightRan
	0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, // ge.w*cAmbient_Li
	0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, 0x69, // ghtRange.w*cAmbi
	0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, // ent_LightRange.w
	0x2a, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, // *cAmbient_LightR
	0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, // ange.w), 0.0, 1.
	0x30, 0x29, 0x3b, 0x0a, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x3d, 0x20, 0x66, 0x41, 0x74, // 0);.fAtten = fAt
	0x74, 0x65, 0x6e, 0x2a, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x2f, 0x28, 0x73, 0x71, 0x72, 0x6c, // ten*fAtten/(sqrl
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // _lightDir + 1.0)
	0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x3d, // ;.vec3 ambient =
	0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, //  glossy;.if (!is
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, // _metal).ambient 
	0x2b, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // += diffuse;.cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x20, 0x3d, 0x20, // t vec3 result = 
	0x4f, 0x75, 0x74, 0x20, 0x2a, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, // Out * ballLightE
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, // mission[i].xyz *
	0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x2b, 0x20, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, //  fAtten + ambien
	0x74, 0x20, 0x2a, 0x20, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, // t * cAmbient_Lig
	0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x69, 0x66, 0x20, // htRange.xyz;.if 
	0x28, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, // (fDisableLightin
	0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x21, 0x3d, // g_top_below.x !=
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, //  0.0).return mix
	0x28, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, // (result,diffuse,
	0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, // fDisableLighting
	0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x65, // _top_below.x);.e
	0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, // lse.return resul
	0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, // t;.}.vec3 DoEnvm
	0x61, 0x70, 0x44, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // apDiffuse(const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // vec3 N, const ve
	0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, // c3 diffuse).{.co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, // nst vec3 env = t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, // extureLod(tex_di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, // ffuse_env, ray_t
	0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, // o_equirectangula
	0x72, 0x5f, 0x75, 0x76, 0x28, 0x4e, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x79, // r_uv(N), 0.0).xy
	0x7a, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // z;.return diffus
	0x65, 0x20, 0x2a, 0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, // e * env*fenvEmis
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, // sionScale_TexWid
	0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, // th.x;.}.vec3 DoE
	0x6e, 0x76, 0x6d, 0x61, 0x70, 0x47, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x28, 0x63, 0x6f, 0x6e, 0x73, // nvmapGlossy(cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // t vec3 N, const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // vec3 V, const ve
	0x63, 0x32, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // c2 Ruv, const ve
	0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, // c3 glossy, const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, //  float glossyPow
	0x65, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // er).{.const floa
	0x74, 0x20, 0x6d, 0x69, 0x70, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, 0x6c, 0x6f, 0x67, 0x32, // t mip = min(log2
	0x28, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, // (fenvEmissionSca
	0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x79, 0x20, 0x2a, 0x20, // le_TexWidth.y * 
	0x73, 0x71, 0x72, 0x74, 0x28, 0x33, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x35, // sqrt(3.0)) - 0.5
	0x2a, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, // *log2(glossyPowe
	0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x66, // r + 1.0), log2(f
	0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, // envEmissionScale
	0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x79, 0x29, 0x2d, 0x31, 0x2e, 0x29, // _TexWidth.y)-1.)
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, // ;.const vec3 env
	0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, //  = textureLod(te
	0x78, 0x5f, 0x65, 0x6e, 0x76, 0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x6d, 0x69, 0x70, 0x29, // x_env, Ruv, mip)
	0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x67, 0x6c, 0x6f, // .xyz;.return glo
	0x73, 0x73, 0x79, 0x20, 0x2a, 0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, // ssy * env*fenvEm
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, // issionScale_TexW
	0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, // idth.x;.}.vec3 D
	0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x32, 0x6e, 0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x28, // oEnvmap2ndLayer(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // const vec3 color
	0x31, 0x73, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // 1stLayer, const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // vec3 pos, const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // vec3 N, const ve
	0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // c3 V, const floa
	0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // t NdotV, const v
	0x65, 0x63, 0x32, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // ec2 Ruv, const v
	0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // ec3 specular).{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x77, 0x20, 0x3d, 0x20, 0x46, // const vec3 w = F
	0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, 0x6b, 0x28, 0x73, 0x70, // resnelSchlick(sp
	0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x52, // ecular, NdotV, R
	0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, // oughness_WrapL_E
	0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x7a, 0x29, // dge_Thickness.z)
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, // ;.const vec3 env
	0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, //  = textureLod(te
	0x78, 0x5f, 0x65, 0x6e, 0x76, 0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, // x_env, Ruv, 0.0)
	0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, // .xyz;.return mix
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x31, 0x73, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2c, 0x20, // (color1stLayer, 
	0x65, 0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, // env*fenvEmission
	0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, // Scale_TexWidth.x
	0x2c, 0x20, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, // , w);.}.vec3 lig
	0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // htLoop(const vec
	0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, // 3 pos, vec3 N, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x76, 0x65, 0x63, // onst vec3 V, vec
	0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // 3 diffuse, vec3 
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // glossy, const ve
	0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, // c3 specular, con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, // st float edge, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, // onst bool is_met
	0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // al).{.vec3 color
	0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, //  = vec3_splat(0.
	0x30, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, // 0);.float NdotV 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x56, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, // = dot(N,V);.if (
	0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x4e, // NdotV < 0.0).{.N
	0x20, 0x3d, 0x20, 0x2d, 0x4e, 0x3b, 0x0a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x2d, //  = -N;.NdotV = -
	0x4e, 0x64, 0x6f, 0x74, 0x56, 0x3b, 0x0a, 0x7d, 0x0a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, // NdotV;.}.NdotV =
	0x20, 0x6d, 0x69, 0x6e, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, //  min(NdotV, 1.0)
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, // ;.const float di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, // ffuseMax = max(d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, // iffuse.x,max(dif
	0x66, 0x75, 0x73, 0x65, 0x2e, 0x79, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x7a, // fuse.y,diffuse.z
	0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ));.const float 
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, // glossyMax = max(
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, // glossy.x,max(glo
	0x73, 0x73, 0x79, 0x2e, 0x79, 0x2c, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x7a, 0x29, 0x29, // ssy.y,glossy.z))
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, // ;.const float sp
	0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, // ecularMax = max(
	0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x73, // specular.x,max(s
	0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x79, 0x2c, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, // pecular.y,specul
	0x61, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // ar.z));.const fl
	0x6f, 0x61, 0x74, 0x20, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // oat sum = diffus
	0x65, 0x4d, 0x61, 0x78, 0x20, 0x2b, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, // eMax + glossyMax
	0x20, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x73, 0x75, 0x6d, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, //  ;.if (sum > 1.0
	0x20, 0x26, 0x26, 0x20, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, //  && fDisableLigh
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, // ting_top_below.x
	0x20, 0x3c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  < 1.0).{.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, // float invsum = 1
	0x2e, 0x30, 0x2f, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, // .0/sum;.diffuse 
	0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, // *= invsum;.gloss
	0x79, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, // y *= invsum;.}.i
	0x66, 0x20, 0x28, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, // f ((!is_metal &&
	0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, //  (diffuseMax > 0
	0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, // .0)) || (glossyM
	0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, // ax > 0.0)).{.if 
	0x28, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, // (fDisableLightin
	0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x3d, 0x3d, // g_top_below.x ==
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x66, //  1.0).color += f
	0x6c, 0x6f, 0x61, 0x74, 0x28, 0x32, 0x29, 0x20, 0x2a, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // loat(2) * diffus
	0x65, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, // e;.else for (int
	0x20, 0x69, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x32, 0x3b, 0x20, 0x69, //  i = 0; i < 2; i
	0x2b, 0x2b, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x50, // ++).color += DoP
	0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, // ointLight(pos, N
	0x2c, 0x20, 0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, // , V, diffuse, gl
	0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, // ossy, edge, Roug
	0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, // hness_WrapL_Edge
	0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x2c, 0x20, 0x69, 0x2c, // _Thickness.x, i,
	0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, //  is_metal);.}.if
	0x20, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, //  (!is_metal && (
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, // diffuseMax > 0.0
	0x29, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, // )).color += DoEn
	0x76, 0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, 0x20, 0x28, 0x28, 0x20, // vmapDiffuse( (( 
	0x28, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x4e, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, // ( (vec4(N,0.0)) 
	0x2a, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, // * (matView) ) ).
	0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x3b, 0x0a, // xyz), diffuse);.
	0x69, 0x66, 0x20, 0x28, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, // if ((glossyMax >
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, //  0.0) || (specul
	0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, // arMax > 0.0)).{.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x52, 0x20, 0x3d, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x4e, 0x64, // vec3 R = (2.0*Nd
	0x6f, 0x74, 0x56, 0x29, 0x2a, 0x4e, 0x20, 0x2d, 0x20, 0x56, 0x3b, 0x0a, 0x52, 0x20, 0x3d, 0x20, // otV)*N - V;.R = 
	0x28, 0x28, 0x20, 0x28, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x52, 0x2c, 0x30, 0x2e, 0x30, // (( ( (vec4(R,0.0
	0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, // )) * (matView) )
	0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, //  ).xyz);.const v
	0x65, 0x63, 0x32, 0x20, 0x52, 0x75, 0x76, 0x20, 0x3d, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, // ec2 Ruv = ray_to
	0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, // _equirectangular
	0x5f, 0x75, 0x76, 0x28, 0x52, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, // _uv(R);.if (glos
	0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, // syMax > 0.0).col
	0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x47, 0x6c, // or += DoEnvmapGl
	0x6f, 0x73, 0x73, 0x79, 0x28, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, // ossy(N, V, Ruv, 
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, // glossy, Roughnes
	0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, // s_WrapL_Edge_Thi
	0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x73, // ckness.x);.if (s
	0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, // pecularMax > 0.0
	0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, // ).color = DoEnvm
	0x61, 0x70, 0x32, 0x6e, 0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // ap2ndLayer(color
	0x2c, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x4e, 0x64, 0x6f, // , pos, N, V, Ndo
	0x74, 0x56, 0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, // tV, Ruv, specula
	0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, // r);.}.return col
	0x6f, 0x72, 0x20, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // or ;.}.uniform v
	0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, // ec4 invTableRes_
	0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // reflection;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, // orm vec4 w_h_dis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x3b, 0x0a, 0x76, 0x65, // ableLighting;.ve
	0x63, 0x33, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, // c3 ballLightLoop
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, // (const vec3 pos,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, //  vec3 N, vec3 V,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x76, //  vec3 diffuse, v
	0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // ec3 glossy, cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, // t vec3 specular,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, //  const float edg
	0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, // e, const bool is
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // _metal).{.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, // float diffuseMax
	0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x78, //  = max(diffuse.x
	0x2c, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x79, 0x2c, 0x64, // ,max(diffuse.y,d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // iffuse.z));.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, // t float glossyMa
	0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x78, // x = max(glossy.x
	0x2c, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x79, 0x2c, 0x67, 0x6c, // ,max(glossy.y,gl
	0x6f, 0x73, 0x73, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // ossy.z));.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, // float specularMa
	0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, // x = max(specular
	0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, // .x,max(specular.
	0x79, 0x2c, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, // y,specular.z));.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x75, 0x6d, 0x20, // const float sum 
	0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x2b, 0x20, 0x67, // = diffuseMax + g
	0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x73, 0x75, 0x6d, // lossyMax;.if(sum
	0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, //  > 1.0).{.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, // float invsum = 1
	0x2e, 0x30, 0x2f, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, // .0/sum;.diffuse 
	0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, // *= invsum;.gloss
	0x79, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // y *= invsum;.}.v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, // ec3 color = vec3
	0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, // (0.0, 0.0, 0.0);
	0x0a, 0x69, 0x66, 0x28, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, // .if((!is_metal &
	0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, // & (diffuseMax > 
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, // 0.0)) || (glossy
	0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x66, 0x6f, 0x72, 0x28, // Max > 0.0)).for(
	0x69, 0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x32, // int i = 0; i < 2
	0x20, 0x2b, 0x20, 0x38, 0x3b, 0x20, 0x69, 0x2b, 0x2b, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, //  + 8; i++).color
	0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, //  += DoPointLight
	0x28, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, // (pos, N, V, diff
	0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x65, 0x64, 0x67, // use, glossy, edg
	0x65, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, // e, Roughness_Wra
	0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, // pL_Edge_Thicknes
	0x73, 0x2e, 0x78, 0x2c, 0x20, 0x69, 0x2c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, // s.x, i, is_metal
	0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, // );.if(!is_metal 
	0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, // && (diffuseMax >
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, //  0.0)).color += 
	0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, // DoEnvmapDiffuse(
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, // normalize(( (mat
	0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x4e, 0x2c, // View) * (vec4(N,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x64, //  0.0)) ).xyz), d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x73, 0x70, 0x65, 0x63, // iffuse);.if(spec
	0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, // ularMax > 0.0).c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, // olor += specular
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, // ;.return color;.
	0x7d, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, // }.void main().{.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x20, 0x3d, 0x20, 0x6e, // const vec3 V = n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x20, 0x2d, 0x76, 0x5f, 0x77, 0x6f, 0x72, // ormalize( -v_wor
	0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // ldPos.xyz);.cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // t vec3 N = norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, // lize(v_normal.xy
	0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x52, // z);.const vec3 R
	0x20, 0x3d, 0x20, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x56, 0x2c, 0x20, 0x4e, 0x29, //  = reflect(V, N)
	0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, // ;.vec3 ballImage
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // Color;.const flo
	0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x56, 0x2c, // at edge = dot(V,
	0x20, 0x52, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  R);.const float
	0x20, 0x6c, 0x6f, 0x64, 0x20, 0x3d, 0x20, 0x28, 0x65, 0x64, 0x67, 0x65, 0x20, 0x3e, 0x20, 0x30, //  lod = (edge > 0
	0x2e, 0x36, 0x29, 0x20, 0x3f, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2a, 0x28, 0x36, 0x2e, 0x30, 0x2a, // .6) ? edge*(6.0*
	0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x29, 0x2d, 0x28, 0x36, 0x2e, 0x30, 0x2a, 0x30, 0x2e, // 1.0/0.4)-(6.0*0.
	0x36, 0x2f, 0x30, 0x2e, 0x34, 0x29, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x63, 0x6f, // 6/0.4) : 0.0;.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x20, 0x3d, 0x20, 0x28, 0x31, // nst float m = (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x52, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // .0 - R.z > 0.) ?
	0x20, 0x30, 0x2e, 0x33, 0x35, 0x33, 0x35, 0x35, 0x33, 0x33, 0x39, 0x30, 0x35, 0x39, 0x33, 0x32, //  0.3535533905932
	0x37, 0x33, 0x37, 0x36, 0x32, 0x32, 0x20, 0x2a, 0x20, 0x72, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, // 737622 * rsqrt(1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x52, 0x2e, 0x7a, 0x29, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x3b, 0x0a, // .0 - R.z) : 0.;.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x20, 0x3d, 0x20, // const vec2 uv = 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x6d, 0x20, 0x2a, 0x20, 0x52, // vec2(0.5 - m * R
	0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x6d, 0x20, 0x2a, 0x20, 0x52, 0x2e, // .x, 0.5 - m * R.
	0x79, 0x29, 0x3b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, // y);.ballImageCol
	0x6f, 0x72, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, // or = textureLod(
	0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, // tex_ball_color, 
	0x75, 0x76, 0x2c, 0x20, 0x6c, 0x6f, 0x64, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x63, 0x6f, // uv, lod).rgb;.co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, // nst vec4 decalCo
	0x6c, 0x6f, 0x72, 0x54, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, // lorT = texture(t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x2c, 0x20, 0x76, // ex_ball_decal, v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, // _texcoord0);.vec
	0x33, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x64, // 3 decalColor = d
	0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, // ecalColorT.rgb;.
	0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x3d, 0x20, 0x64, 0x65, // decalColor *= de
	0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x2e, 0x61, 0x3b, 0x0a, 0x62, 0x61, 0x6c, // calColorT.a;.bal
	0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x64, // lImageColor += d
	0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, // ecalColor;.if ((
	0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, // w_h_disableLight
	0x69, 0x6e, 0x67, 0x2e, 0x7a, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x0a, 0x7b, 0x0a, // ing.z != 0.)).{.
	0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, // bgfx_FragColor =
	0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, //  vec4(ballImageC
	0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, // olor,cBase_Alpha
	0x2e, 0x61, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x3b, 0x0a, 0x7d, 0x0a, 0x62, // .a);.return;.}.b
	0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x3d, // allImageColor *=
	0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, //  fenvEmissionSca
	0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x63, // le_TexWidth.x;.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, // onst vec3 playfi
	0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, // eld_normal = ( (
	0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, // matWorldView) * 
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x31, 0x2e, // (float4(0.,0.,1.
	0x2c, 0x30, 0x2e, 0x29, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // ,0.)) ).xyz;.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x20, 0x3d, // st float NdotR =
	0x20, 0x64, 0x6f, 0x74, 0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, //  dot(playfield_n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x52, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // ormal, R);.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, //  vec3 playfield_
	0x70, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, // p0 = ( (matWorld
	0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x20, 0x30, // View) * (vec4( 0
	0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x2e, // .,0.,0.,1.0)) ).
	0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // xyz;.const float
	0x20, 0x74, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, //  t = dot(playfie
	0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, // ld_normal, v_wor
	0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x70, 0x6c, 0x61, 0x79, // ldPos.xyz - play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x4e, 0x64, 0x6f, 0x74, // field_p0) / Ndot
	0x52, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, // R;.const vec3 pl
	0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x68, 0x69, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x5f, // ayfield_hit = v_
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x74, // worldPos.xyz - t
	0x20, 0x2a, 0x20, 0x52, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, //  * R;.const vec4
	0x20, 0x70, 0x72, 0x6f, 0x6a, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x50, 0x72, //  proj = ( (matPr
	0x6f, 0x6a, 0x5b, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x5d, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, // oj[v_eye]) * (ve
	0x63, 0x34, 0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x68, 0x69, 0x74, // c4(playfield_hit
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // , 1.0)) );.const
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x70, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, //  vec2 uvp = vec2
	0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, // (0.5, 0.5) + vec
	0x32, 0x28, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x78, 0x2c, 0x20, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x2e, // 2(proj.x, -proj.
	0x79, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2f, 0x20, 0x70, 0x72, 0x6f, 0x6a, // y) * (0.5 / proj
	0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // .w);.const vec3 
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, // playfieldColor =
	0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x28, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, //  0.25 * (.textur
	0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, // e(tex_ball_playf
	0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x75, 0x76, 0x70, 0x20, // ield, vec3((uvp 
	0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, // + vec2(w_h_disab
	0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, // leLighting.x, 0.
	0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, // )).x, (uvp + vec
	0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, // 2(w_h_disableLig
	0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x79, 0x2c, // hting.x, 0.)).y,
	0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, //  v_eye)).rgb.+ t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // exture(tex_ball_
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // playfield, vec3(
	0x28, 0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, // (uvp - vec2(w_h_
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, // disableLighting.
	0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x75, 0x76, 0x70, 0x20, // x, 0.)).x, (uvp 
	0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, // - vec2(w_h_disab
	0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, // leLighting.x, 0.
	0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x29, 0x2e, 0x72, 0x67, // )).y, v_eye)).rg
	0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, // b.+ texture(tex_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, // ball_playfield, 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, // vec3((uvp + vec2
	0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // (0., w_h_disable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, // Lighting.y)).x, 
	0x28, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, // (uvp + vec2(0., 
	0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, // w_h_disableLight
	0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, // ing.y)).y, v_eye
	0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // )).rgb.+ texture
	0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, // (tex_ball_playfi
	0x65, 0x6c, 0x64, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2d, // eld, vec3((uvp -
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, //  vec2(0., w_h_di
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, // sableLighting.y)
	0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, // ).x, (uvp - vec2
	0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // (0., w_h_disable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, // Lighting.y)).y, 
	0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x29, 0x3b, 0x0a, 0x69, // v_eye)).rgb.);.i
	0x66, 0x20, 0x28, 0x21, 0x28, 0x75, 0x76, 0x70, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x20, // f (!(uvp.x < 0. 
	0x7c, 0x7c, 0x20, 0x75, 0x76, 0x70, 0x2e, 0x78, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x20, 0x7c, 0x7c, // || uvp.x > 1. ||
	0x20, 0x75, 0x76, 0x70, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x20, 0x7c, 0x7c, 0x20, 0x75, //  uvp.y < 0. || u
	0x76, 0x70, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x29, 0x0a, 0x26, 0x26, 0x20, 0x21, 0x28, // vp.y > 1.).&& !(
	0x74, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, // t <= 0.)).{.ball
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x6c, 0x65, 0x72, // ImageColor = ler
	0x70, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // p(ballImageColor
	0x2c, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // , playfieldColor
	0x2c, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x30, // , smoothstep(0.0
	0x2c, 0x20, 0x30, 0x2e, 0x31, 0x35, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x29, 0x20, 0x2a, // , 0.15, NdotR) *
	0x20, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, //  invTableRes_ref
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x62, 0x61, // lection.z);.}.ba
	0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x6d, // llImageColor = m
	0x69, 0x6e, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, // in(ballImageColo
	0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x35, 0x2e, 0x2c, 0x20, 0x31, // r, float3(15., 1
	0x35, 0x2e, 0x2c, 0x20, 0x31, 0x35, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // 5., 15.));.vec3 
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x3d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, // diffuse = cBase_
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x2a, 0x30, 0x2e, 0x30, 0x37, 0x35, 0x3b, // Alpha.rgb*0.075;
	0x0a, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x3d, 0x20, 0x64, 0x65, 0x63, 0x61, // .diffuse *= deca
	0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // lColor;.const ve
	0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, // c3 glossy = max(
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, // diffuse*2.0, vec
	0x33, 0x28, 0x30, 0x2e, 0x31, 0x2c, 0x30, 0x2e, 0x31, 0x2c, 0x30, 0x2e, 0x31, 0x29, 0x29, 0x3b, // 3(0.1,0.1,0.1));
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x20, 0x3d, // .vec3 specular =
	0x20, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, //  ballImageColor 
	0x2a, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, // * cBase_Alpha.rg
	0x62, 0x3b, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x20, 0x2a, 0x3d, 0x20, 0x76, // b;.specular *= v
	0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x2c, 0x31, 0x2e, 0x2c, 0x31, 0x2e, 0x29, 0x2d, 0x64, 0x65, // ec3(1.,1.,1.)-de
	0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, // calColor;.bgfx_F
	0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x62, // ragColor.rgb = b
	0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x76, 0x5f, 0x77, // allLightLoop(v_w
	0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x4e, 0x2c, 0x20, // orldPos.xyz, N, 
	0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, // V, diffuse, glos
	0x73, 0x79, 0x2c, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x31, 0x2e, // sy, specular, 1.
	0x30, 0x2c, 0x20, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, // 0, false);.bgfx_
	0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x61, 0x20, 0x3d, 0x20, 0x63, 0x42, // FragColor.a = cB
	0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x61, 0x3b, 0x0a, 0x7d, 0x0a, 0x00, // ase_Alpha.a;.}..
};
static const uint8_t fs_ball_spherical_nodecal_st_glsl[14789] =
{
	0x46, 0x53, 0x48, 0x0b, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb2, 0x39, // FSH..N.........9
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x6f, // ..#version 440.o
	0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, // ut vec4 bgfx_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // gColor;.#define 
	0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x62, 0x67, 0x66, // gl_FragColor bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x0a, 0x23, 0x64, 0x65, 0x66, // x_FragColor.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x20, 0x20, // ine texture2D   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, //        texture.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // Lod       textur
	0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, // eLod.#define tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ture2DGrad      
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, // textureGrad.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, // ine texture2DPro
	0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, // jLod   texturePr
	0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // ojLod.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, // xture2DProjGrad 
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, //  textureProjGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // CubeLod     text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, // ureLod.#define t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, // extureCubeGrad  
	0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, //   textureGrad.#d
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, // efine texture3D 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //          texture
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, 0x65, 0x78, 0x74, // 2DLodOffset text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, // ureLodOffset.#de
	0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, // fine attribute i
	0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // n.#define varyin
	0x67, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, // g in.#define bgf
	0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // xShadow2D(_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, // er, _coord)     
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // vec4_splat(textu
	0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // re(_sampler, _co
	0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, // ord) ).#define b
	0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, // gfxShadow2DProj(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, // ) vec4_splat(tex
	0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // tureProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x76, 0x61, 0x72, // r, _coord) ).var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, // ying float v_eye
	0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // ;.varying vec3 v
	0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // _normal;.varying
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, //  vec2 v_texcoord
	0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // 0;.varying vec3 
	0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, // v_worldPos;.vec3
	0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, //  instMul(vec3 _v
	0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, // ec, mat3 _mtx) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, //  return ( (_vec)
	0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, //  * (_mtx) ); }.v
	0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, // ec3 instMul(mat3
	0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, //  _mtx, vec3 _vec
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, // ) { return ( (_m
	0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, // tx) * (_vec) ); 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, // }.vec4 instMul(v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, // ec4 _vec, mat4 _
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, // mtx) { return ( 
	0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, // (_vec) * (_mtx) 
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, // ); }.vec4 instMu
	0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, // l(mat4 _mtx, vec
	0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 4 _vec) { return
	0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, //  ( (_mtx) * (_ve
	0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, // c) ); }.float rc
	0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // p(float _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // turn 1.0/_a; }.v
	0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, // ec2 rcp(vec2 _a)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, //  { return vec2(1
	0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, // .0)/_a; }.vec3 r
	0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // cp(vec3 _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, // turn vec3(1.0)/_
	0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, // a; }.vec4 rcp(ve
	0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c4 _a) { return 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, // vec4(1.0)/_a; }.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // vec2 vec2_splat(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // float _x) { retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // rn vec2(_x, _x);
	0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, //  }.vec3 vec3_spl
	0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // at(float _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // eturn vec3(_x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, // x, _x); }.vec4 v
	0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ec4_splat(float 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _x) { return vec
	0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // 4(_x, _x, _x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, // ); }.uvec2 uvec2
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // _splat(uint _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, // { return uvec2(_
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, // x, _x); }.uvec3 
	0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec3_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, //  _x) { return uv
	0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // ec3(_x, _x, _x);
	0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, //  }.uvec4 uvec4_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // plat(uint _x) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, // return uvec4(_x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, //  _x, _x, _x); }.
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, // mat4 mtxFromRows
	0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // (vec4 _0, vec4 _
	0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // 1, vec4 _2, vec4
	0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, //  _3).{.return tr
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, // anspose(mat4(_0,
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, //  _1, _2, _3) );.
	0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, // }.mat4 mtxFromCo
	0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // ls(vec4 _0, vec4
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, //  _1, vec4 _2, ve
	0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c4 _3).{.return 
	0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, // mat4(_0, _1, _2,
	0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, //  _3);.}.mat3 mtx
	0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, // FromRows(vec3 _0
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // , vec3 _1, vec3 
	0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, // _2).{.return tra
	0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, // nspose(mat3(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, // _1, _2) );.}.mat
	0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, // 3 mtxFromCols(ve
	0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, // c3 _0, vec3 _1, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // vec3 _2).{.retur
	0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, // n mat3(_0, _1, _
	0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // 2);.}.uniform ve
	0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, // c4 u_viewRect;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, // niform vec4 u_vi
	0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // ewTexel;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, //  mat4 u_view;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, // iform mat4 u_inv
	0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // View;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // t4 u_proj;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, // rm mat4 u_invPro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // u_viewProj;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, // orm mat4 u_invVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // ewProj;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, // mat4 u_model[32]
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // _modelView;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, // orm mat4 u_model
	0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // ViewProj;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, // m vec4 u_alphaRe
	0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, // f4;.float sqr(co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // nst float v).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // eturn v*v;.}.vec
	0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, // 2 sqr(const vec2
	0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, //  v).{.return v*v
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x63, 0x6f, 0x6e, // ;.}.vec3 sqr(con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // st vec3 v).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // urn v*v;.}.vec3 
	0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // mul_w1(const vec
	0x33, 0x20, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // 3 v, const mat4 
	0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, // m).{.return v.x*
	0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, // m[0].xyz + (v.y*
	0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, // m[1].xyz + (v.z*
	0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, // m[2].xyz + m[3].
	0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, // xyz));.}.float a
	0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, // cos_approx_divPI
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, // (const float v).
	0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, // {.const float x 
	0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, // = abs(v);.if(1. 
	0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, // - x <= 0.0000610
	0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 3515625).return 
	0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, // (v >= 0.) ? 0. :
	0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  1.;.const float
	0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, //  res = ((-0.1559
	0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, // 72/3.14159265358
	0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, // 9793238462643383
	0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, // 2795) * x + (1.5
	0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, // 6467/3.141592653
	0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, // 5897932384626433
	0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, // 832795) ) * sqrt
	0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // (1. - x);.return
	0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, //  (v >= 0.) ? res
	0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, //  : 1. - res;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, // loat atan2_appro
	0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // x_div2PI(const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // loat y, const fl
	0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // oat x).{.const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, // loat abs_y = abs
	0x28, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // (y);.const float
	0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, //  abs_x = abs(x);
	0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, // .if(abs_x <= 0.0
	0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, // 0006103515625 &&
	0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, //  abs_y <= 0.0000
	0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, // 6103515625).retu
	0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // rn 0.;.const flo
	0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, // at r = (abs_x - 
	0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, // abs_y) / (abs_x 
	0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // + abs_y);.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, // float angle = ((
	0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, // x < 0.) ? (3./8.
	0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, // ) : (1./8.)).+ (
	0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, // 0.211868 /(2.*3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, //  * r * r - 0.987
	0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // 305 /(2.*3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, // 6433832795)) * (
	0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, // (x < 0.) ? -r : 
	0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, // r);.return (y < 
	0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, // 0.) ? -angle : a
	0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, // ngle;.}.float as
	0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, // in_approx_divPI(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, // const float v).{
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, // .const float x =
	0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, //  abs(v);.if(1. -
	0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, //  x <= 0.00006103
	0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, // 515625).return (
	0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, // v >= 0.) ? 0.5 :
	0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, //  -0.5;.const flo
	0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, // at res = ((-0.15
	0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, // 5972/3.141592653
	0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, // 5897932384626433
	0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, // 832795) * x + (1
	0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, // .56467/3.1415926
	0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, // 5358979323846264
	0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, // 33832795) ) * sq
	0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // rt(1. - x);.retu
	0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, // rn (v >= 0.) ? 0
	0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, // .5 - res : -0.5 
	0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, // + res;.}.vec2 ra
	0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, // y_to_equirectang
	0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // ular_uv(const ve
	0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // c3 ray).{.return
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, //  vec2(.0.5 + ata
	0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, // n2_approx_div2PI
	0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, // (ray.y, ray.x),.
	0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, // acos_approx_divP
	0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // I(ray.z));.}.flo
	0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // at InvsRGB(const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, //  float color).{.
	0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, // if (color <= 0.0
	0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, // 4045).return col
	0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, // or * (1.0/12.92)
	0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, // ;.else.return po
	0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, // w(color * (1.0/1
	0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, // .055) + (0.055/1
	0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // .055), 2.4);.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x63, // loat InvRec709(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // onst float color
	0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, // ).{.if (color <=
	0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, //  0.081).return c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, // olor * (1.0/4.5)
	0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, // ;.else.return po
	0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, // w(color * (1.0/1
	0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, // .099) + (0.099/1
	0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, // .099), 1.0/0.45)
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // ;.}.float InvGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, // ma(const float c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, // olor).{.return I
	0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, // nvsRGB(color);.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, // .vec3 InvGamma(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // onst vec3 color)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, // .{.return vec3(I
	0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, // nvGamma(color.x)
	0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // ,InvGamma(color.
	0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // y),InvGamma(colo
	0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, // r.z));.}.vec3 In
	0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // vToneMap(const v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, // ec3 color).{.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, // st float inv_2bh
	0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, //  = 0.5/0.25;.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, // st float bh = 4.
	0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, // 0*0.25 - 2.0;.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, // turn (color - 1.
	0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, // 0 + sqrt(color*(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, // color + bh) + 1.
	0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // 0))*inv_2bh;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // loat sRGB(const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float f).{.float
	0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, //  s;.if (f <= 0.0
	0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, // 031308).s = 12.9
	0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, // 2 * f;.else.s = 
	0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, // 1.055 * pow(f, 1
	0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, // .0/2.4) - 0.055;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // .return s;.}.flo
	0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // at Rec709(const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float f).{.float
	0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, //  s;.if (f <= 0.0
	0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, // 18).s = 4.5 * f;
	0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, // .else.s = 1.099 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, // * pow(f, 0.45) -
	0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, //  0.099;.return s
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // ;.}.float FBGamm
	0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, // a(const float co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, // lor).{.return sR
	0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // GB(color);.}.vec
	0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // 2 FBGamma(const 
	0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // vec2 color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // turn vec2(FBGamm
	0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, // a(color.x),FBGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // ma(color.y));.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6e, // vec3 FBGamma(con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, // st vec3 color).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, // .return vec3(FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, // amma(color.x),FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, // Gamma(color.y),F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, // BGamma(color.z))
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, // ;.}.float FBTone
	0x4d, 0x61, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // Map(const float 
	0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, // l).{.return l * 
	0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, // ((l*0.25 + 1.0) 
	0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // / (l + 1.0));.}.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x63, // vec2 FBToneMap(c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // onst vec2 color)
	0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, // .{.const float l
	0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, //  = dot(color,vec
	0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, // 2(0.176204+0.010
	0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, // 8109*0.5,0.81298
	0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, // 5+0.0108109*0.5)
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // );.return color 
	0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, // * ((l*0.25 + 1.0
	0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, // ) / (l + 1.0));.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, // }.vec3 FBToneMap
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // (const vec3 colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // r).{.const float
	0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, //  l = dot(color,v
	0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, // ec3(0.176204,0.8
	0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, // 12985,0.0108109)
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // );.return color 
	0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, // * ((l*0.25 + 1.0
	0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, // ) / (l + 1.0));.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, // }.vec4 Additive(
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // const vec4 cBase
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, // , const vec4 cBl
	0x65, 0x6e, 0x64, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // end, const float
	0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  percent).{.retu
	0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // rn cBase + cBlen
	0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // d*percent;.}.vec
	0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // 3 Screen (const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // vec3 cBase, cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, // t vec3 cBlend).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, // .return 1.0 - (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, // .0 - cBase) * (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // .0 - cBlend);.}.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6e, // vec4 Screen (con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, // st vec4 cBase, c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // onst vec4 cBlend
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, // ).{.return 1.0 -
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, //  (1.0 - cBase) *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, //  (1.0 - cBlend);
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, // .}.vec3 ScreenHD
	0x52, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, // R (const vec3 cB
	0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // ase, const vec3 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // cBlend).{.return
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, //  max(1.0 - (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // - cBase) * (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // - cBlend), vec3(
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // 0.,0.,0.));.}.ve
	0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x63, 0x6f, // c4 ScreenHDR (co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, // nst vec4 cBase, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // const vec4 cBlen
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, // d).{.return max(
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, // 1.0 - (1.0 - cBa
	0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, // se) * (1.0 - cBl
	0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, // end), vec4(0.,0.
	0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // ,0.,0.));.}.vec4
	0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, //  Multiply (const
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, //  vec4 cBase, con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, // st vec4 cBlend, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, // const float perc
	0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, // ent).{.return cB
	0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, // ase * cBlend*per
	0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, // cent;.}.vec4 Ove
	0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, // rlay (const vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, //  cBase, const ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, // c4 cBlend).{.vec
	0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, // 4 cNew = step(0.
	0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, // 5, cBase);.cNew 
	0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, // = mix(cBase*cBle
	0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, // nd*2.0, 1.0-2.0*
	0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, // (1.0-cBase)*(1.0
	0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, // -cBlend), cNew);
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, // .return cNew;.}.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, // vec4 OverlayHDR 
	0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, // (const vec4 cBas
	0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // e, const vec4 cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, // lend).{.vec4 cNe
	0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, // w = step(0.5, cB
	0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, // ase);.cNew = max
	0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, // (mix(cBase*cBlen
	0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, // d*2.0, 1.0-2.0*(
	0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, // 1.0-cBase)*(1.0-
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, // cBlend), cNew), 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, // vec4(0.,0.,0.,0.
	0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, // ));.return cNew;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, // .}.vec3 cos_hemi
	0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x63, 0x6f, // sphere_sample(co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, // nst vec2 t).{.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, // nst float phi = 
	0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, // t.y * (2.0*3.141
	0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, // 5926535897932384
	0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x63, // 626433832795);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, // onst float cosTh
	0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // eta = sqrt(1.0 -
	0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, //  t.x);.const flo
	0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, // at sinTheta = sq
	0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // rt(t.x);.float s
	0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x73, 0x69, 0x6e, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, // p,cp;.sincos(phi
	0x2c, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // ,sp,cp);.return 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, // vec3(cp * sinThe
	0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, // ta, cosTheta, sp
	0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, //  * sinTheta);.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, // vec3 rotate_to_v
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, // ector_upper(cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // t vec3 vec, cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, // t vec3 normal).{
	0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, // .if(normal.y > -
	0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // 0.99999).{.const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, //  float h = 1.0/(
	0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x63, // 1.0+normal.y);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, // onst float hz = 
	0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // h*normal.z;.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, // t float hzx = hz
	0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // *normal.x;.retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, // n vec3(.vec.x * 
	0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, // (normal.y+hz*nor
	0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, // mal.z) + vec.y *
	0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, //  normal.x - vec.
	0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, // z * hzx,.vec.y *
	0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, //  normal.y - vec.
	0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, // x * normal.x - v
	0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, // ec.z * normal.z,
	0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // .vec.y * normal.
	0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, // z - vec.x * hzx 
	0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // + vec.z * (norma
	0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, // l.y+h*normal.x*n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, // ormal.x));.}.els
	0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, // e return -vec;.}
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, // .uniform mat4 ma
	0x74, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // tView;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, // at4 matWorldView
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, // ;.uniform mat4 m
	0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x76, 0x65, 0x72, // atWorldViewInver
	0x73, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // se;.uniform mat4
	0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, //  matWorldViewPro
	0x6a, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // j[2];.uniform ma
	0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, 0x75, // t4 matProj[2];.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // niform sampler2D
	0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, //  tex_ball_color;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .uniform sampler
	0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // 2D tex_env;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, // orm sampler2D te
	0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x3b, 0x0a, 0x75, // x_diffuse_env;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // niform sampler2D
	0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x3b, //  tex_ball_decal;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .uniform sampler
	0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // 2DArray tex_ball
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // _playfield;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x62, 0x61, 0x73, 0x69, 0x63, // orm vec4 u_basic
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // _shade_mode;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, // form vec4 ballLi
	0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x5d, 0x3b, 0x0a, 0x75, // ghtPos[2 + 8];.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, // niform vec4 ball
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5b, 0x32, 0x20, // LightEmission[2 
	0x2b, 0x20, 0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // + 8];.uniform ve
	0x63, 0x34, 0x20, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, // c4 cAmbient_Ligh
	0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // tRange;.uniform 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, // vec4 fenvEmissio
	0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x3b, // nScale_TexWidth;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x44, // .uniform vec4 fD
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, // isableLighting_t
	0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // op_below;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x53, 0x63, 0x61, // m vec4 fSceneSca
	0x6c, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // le;.uniform vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x0a, 0x75, 0x6e, //  cBase_Alpha;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, // iform vec4 Rough
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, // ness_WrapL_Edge_
	0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // Thickness;.float
	0x20, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, //  GeometricOpacit
	0x79, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, // y(const float Nd
	0x6f, 0x74, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // otV, const float
	0x20, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, //  alpha, const fl
	0x6f, 0x61, 0x74, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2c, 0x20, 0x63, 0x6f, // oat blending, co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, // nst float thickn
	0x65, 0x73, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // ess).{.const flo
	0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x56, // at x = abs(NdotV
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, // );.const float g
	0x20, 0x3d, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x2a, 0x20, 0x28, 0x31, //  = blending * (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x78, 0x20, 0x2f, 0x20, 0x28, 0x78, 0x20, 0x2a, 0x20, 0x28, // .0 - (x / (x * (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, // 1.0 - thickness)
	0x20, 0x2b, 0x20, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x29, 0x29, 0x29, 0x3b, //  + thickness)));
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x61, 0x6c, 0x70, 0x68, // .return mix(alph
	0x61, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x67, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // a, 1.0, g);.}.ve
	0x63, 0x33, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, // c3 FresnelSchlic
	0x6b, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, // k(const vec3 spe
	0x63, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4c, // c, const float L
	0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // dotH, const floa
	0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // t edge).{.return
	0x20, 0x73, 0x70, 0x65, 0x63, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x65, 0x64, //  spec + (vec3(ed
	0x67, 0x65, 0x2c, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x65, 0x64, 0x67, 0x65, 0x29, 0x20, 0x2d, 0x20, // ge,edge,edge) - 
	0x73, 0x70, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x31, 0x2e, 0x30, 0x20, // spec) * pow(1.0 
	0x2d, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x35, 0x2e, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // - LdotH, 5.);.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, // vec3 DoPointLigh
	0x74, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, // t(const vec3 pos
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, // , const vec3 N, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x63, 0x6f, // const vec3 V, co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // nst vec3 diffuse
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, // , const vec3 glo
	0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ssy, const float
	0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, //  edge, const flo
	0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x2c, 0x20, // at glossyPower, 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x2c, 0x20, 0x63, 0x6f, 0x6e, // const int i, con
	0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, // st bool is_metal
	0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, // ).{.const vec3 l
	0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x20, 0x28, 0x6d, // ightDir = ( ( (m
	0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, // atView) * (vec4(
	0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x5b, 0x69, 0x5d, 0x2e, // ballLightPos[i].
	0x78, 0x79, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, // xyz, 1.0)) ) ).x
	0x79, 0x7a, 0x20, 0x2d, 0x20, 0x70, 0x6f, 0x73, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // yz - pos;.const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x4c, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, // vec3 L = normali
	0x7a, 0x65, 0x28, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x29, 0x3b, 0x0a, 0x63, 0x6f, // ze(lightDir);.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, // nst float NdotL 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x20, 0x4c, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, // = dot(N, L);.vec
	0x33, 0x20, 0x4f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, // 3 Out = vec3(0.0
	0x2c, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, // ,0.0,0.0);.if (!
	0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x4e, 0x64, 0x6f, // is_metal && (Ndo
	0x74, 0x4c, 0x20, 0x2b, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, // tL + Roughness_W
	0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, // rapL_Edge_Thickn
	0x65, 0x73, 0x73, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x4f, 0x75, // ess.y > 0.0)).Ou
	0x74, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x28, 0x28, // t = diffuse * ((
	0x4e, 0x64, 0x6f, 0x74, 0x4c, 0x20, 0x2b, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, // NdotL + Roughnes
	0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, // s_WrapL_Edge_Thi
	0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x73, 0x71, 0x72, 0x28, // ckness.y) / sqr(
	0x31, 0x2e, 0x30, 0x2b, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, // 1.0+Roughness_Wr
	0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, // apL_Edge_Thickne
	0x73, 0x73, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, // ss.y));.if (Ndot
	0x4c, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // L > 0.0).{.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x48, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, //  vec3 H = normal
	0x69, 0x7a, 0x65, 0x28, 0x4c, 0x20, 0x2b, 0x20, 0x56, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // ize(L + V);.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, // t float NdotH = 
	0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // dot(N, H);.const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4c, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, //  float LdotH = d
	0x6f, 0x74, 0x28, 0x4c, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // ot(L, H);.const 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x56, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3d, 0x20, 0x64, 0x6f, // float VdotH = do
	0x74, 0x28, 0x56, 0x2c, 0x20, 0x48, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x4e, 0x64, // t(V, H);.if ((Nd
	0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x4c, // otH > 0.0) && (L
	0x64, 0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, // dotH > 0.0) && (
	0x56, 0x64, 0x6f, 0x74, 0x48, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x4f, 0x75, // VdotH > 0.0)).Ou
	0x74, 0x20, 0x2b, 0x3d, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x6c, // t += FresnelSchl
	0x69, 0x63, 0x6b, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x4c, 0x64, 0x6f, 0x74, // ick(glossy, Ldot
	0x48, 0x2c, 0x20, 0x65, 0x64, 0x67, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x28, 0x67, 0x6c, // H, edge) * (((gl
	0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // ossyPower + 1.0)
	0x20, 0x2f, 0x20, 0x28, 0x38, 0x2e, 0x30, 0x2a, 0x56, 0x64, 0x6f, 0x74, 0x48, 0x29, 0x29, 0x20, //  / (8.0*VdotH)) 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x48, 0x2c, 0x20, 0x67, 0x6c, 0x6f, // * pow(NdotH, glo
	0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x63, 0x6f, // ssyPower));.}.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, // nst float sqrl_l
	0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x6c, 0x69, // ightDir = dot(li
	0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2c, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x29, // ghtDir,lightDir)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x3d, // ;.float fAtten =
	0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x73, 0x71, 0x72, //  clamp(1.0 - sqr
	0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2a, 0x73, 0x71, 0x72, 0x6c, 0x5f, // l_lightDir*sqrl_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2f, 0x28, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, // lightDir/(cAmbie
	0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, // nt_LightRange.w*
	0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, // cAmbient_LightRa
	0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, // nge.w*cAmbient_L
	0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x77, 0x2a, 0x63, 0x41, 0x6d, 0x62, // ightRange.w*cAmb
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, // ient_LightRange.
	0x77, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x66, // w), 0.0, 1.0);.f
	0x41, 0x74, 0x74, 0x65, 0x6e, 0x20, 0x3d, 0x20, 0x66, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x2a, 0x66, // Atten = fAtten*f
	0x41, 0x74, 0x74, 0x65, 0x6e, 0x2f, 0x28, 0x73, 0x71, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, // Atten/(sqrl_ligh
	0x74, 0x44, 0x69, 0x72, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, // tDir + 1.0);.vec
	0x33, 0x20, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x67, 0x6c, 0x6f, 0x73, // 3 ambient = glos
	0x73, 0x79, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, // sy;.if (!is_meta
	0x6c, 0x29, 0x0a, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x2b, 0x3d, 0x20, 0x64, 0x69, // l).ambient += di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // ffuse;.const vec
	0x33, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x20, 0x3d, 0x20, 0x4f, 0x75, 0x74, 0x20, 0x2a, // 3 result = Out *
	0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, //  ballLightEmissi
	0x6f, 0x6e, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x66, 0x41, 0x74, 0x74, // on[i].xyz * fAtt
	0x65, 0x6e, 0x20, 0x2b, 0x20, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x2a, 0x20, 0x63, // en + ambient * c
	0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, // Ambient_LightRan
	0x67, 0x65, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x44, 0x69, 0x73, // ge.xyz;.if (fDis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, // ableLighting_top
	0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, // _below.x != 0.0)
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x72, 0x65, 0x73, 0x75, // .return mix(resu
	0x6c, 0x74, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x66, 0x44, 0x69, 0x73, 0x61, // lt,diffuse,fDisa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, // bleLighting_top_
	0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, // below.x);.else.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, // eturn result;.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, // vec3 DoEnvmapDif
	0x66, 0x75, 0x73, 0x65, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // fuse(const vec3 
	0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, // N, const vec3 di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // ffuse).{.const v
	0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // ec3 env = textur
	0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // eLod(tex_diffuse
	0x5f, 0x65, 0x6e, 0x76, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, // _env, ray_to_equ
	0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, // irectangular_uv(
	0x4e, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x72, 0x65, // N), 0.0).xyz;.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x65, // turn diffuse * e
	0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, // nv*fenvEmissionS
	0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, // cale_TexWidth.x;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, // .}.vec3 DoEnvmap
	0x47, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // Glossy(const vec
	0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // 3 N, const vec3 
	0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, 0x75, // V, const vec2 Ru
	0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, // v, const vec3 gl
	0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ossy, const floa
	0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x29, 0x0a, 0x7b, // t glossyPower).{
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x69, 0x70, // .const float mip
	0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x66, 0x65, 0x6e, 0x76, //  = min(log2(fenv
	0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, // EmissionScale_Te
	0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // xWidth.y * sqrt(
	0x33, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x35, 0x2a, 0x6c, 0x6f, 0x67, 0x32, // 3.0)) - 0.5*log2
	0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x2b, 0x20, 0x31, // (glossyPower + 1
	0x2e, 0x30, 0x29, 0x2c, 0x20, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, // .0), log2(fenvEm
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, // issionScale_TexW
	0x69, 0x64, 0x74, 0x68, 0x2e, 0x79, 0x29, 0x2d, 0x31, 0x2e, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // idth.y)-1.);.con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, // st vec3 env = te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, // xtureLod(tex_env
	0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x6d, 0x69, 0x70, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // , Ruv, mip).xyz;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, // .return glossy *
	0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, //  env*fenvEmissio
	0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, // nScale_TexWidth.
	0x78, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, // x;.}.vec3 DoEnvm
	0x61, 0x70, 0x32, 0x6e, 0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, // ap2ndLayer(const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x31, 0x73, 0x74, 0x4c, 0x61, //  vec3 color1stLa
	0x79, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // yer, const vec3 
	0x70, 0x6f, 0x73, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // pos, const vec3 
	0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, // N, const vec3 V,
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, //  const float Ndo
	0x74, 0x56, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, // tV, const vec2 R
	0x75, 0x76, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, // uv, const vec3 s
	0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // pecular).{.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x77, 0x20, 0x3d, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, //  vec3 w = Fresne
	0x6c, 0x53, 0x63, 0x68, 0x6c, 0x69, 0x63, 0x6b, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, // lSchlick(specula
	0x72, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, // r, NdotV, Roughn
	0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, // ess_WrapL_Edge_T
	0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // hickness.z);.con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, // st vec3 env = te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x76, // xtureLod(tex_env
	0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // , Ruv, 0.0).xyz;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .return mix(colo
	0x72, 0x31, 0x73, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2c, 0x20, 0x65, 0x6e, 0x76, 0x2a, 0x66, // r1stLayer, env*f
	0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, // envEmissionScale
	0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x2c, 0x20, 0x77, 0x29, 0x3b, // _TexWidth.x, w);
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, // .}.vec3 lightLoo
	0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, // p(const vec3 pos
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x4e, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // , vec3 N, const 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, // vec3 V, vec3 dif
	0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // fuse, vec3 gloss
	0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, // y, const vec3 sp
	0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // ecular, const fl
	0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // oat edge, const 
	0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x0a, 0x7b, // bool is_metal).{
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, // .vec3 color = ve
	0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x66, // c3_splat(0.0);.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // loat NdotV = dot
	0x28, 0x4e, 0x2c, 0x56, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x4e, 0x64, 0x6f, 0x74, 0x56, // (N,V);.if (NdotV
	0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x4e, 0x20, 0x3d, 0x20, 0x2d, 0x4e, //  < 0.0).{.N = -N
	0x3b, 0x0a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x2d, 0x4e, 0x64, 0x6f, 0x74, 0x56, // ;.NdotV = -NdotV
	0x3b, 0x0a, 0x7d, 0x0a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, // ;.}.NdotV = min(
	0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // NdotV, 1.0);.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // st float diffuse
	0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // Max = max(diffus
	0x65, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, // e.x,max(diffuse.
	0x79, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, // y,diffuse.z));.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // onst float gloss
	0x79, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, // yMax = max(gloss
	0x79, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x79, // y.x,max(glossy.y
	0x2c, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, // ,glossy.z));.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, // st float specula
	0x72, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, // rMax = max(specu
	0x6c, 0x61, 0x72, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, // lar.x,max(specul
	0x61, 0x72, 0x2e, 0x79, 0x2c, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x7a, 0x29, // ar.y,specular.z)
	0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // );.const float s
	0x75, 0x6d, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, // um = diffuseMax 
	0x2b, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3b, 0x0a, 0x69, 0x66, // + glossyMax ;.if
	0x20, 0x28, 0x73, 0x75, 0x6d, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x26, 0x26, 0x20, 0x66, //  (sum > 1.0 && f
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, // DisableLighting_
	0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x31, 0x2e, // top_below.x < 1.
	0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0).{.const float
	0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x73, 0x75, //  invsum = 1.0/su
	0x6d, 0x3b, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, // m;.diffuse *= in
	0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, 0x3d, 0x20, // vsum;.glossy *= 
	0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x21, // invsum;.}.if ((!
	0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, // is_metal && (dif
	0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, // fuseMax > 0.0)) 
	0x7c, 0x7c, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, // || (glossyMax > 
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x44, 0x69, 0x73, // 0.0)).{.if (fDis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, // ableLighting_top
	0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x78, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x29, // _below.x == 1.0)
	0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, // .color += float(
	0x32, 0x29, 0x20, 0x2a, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x3b, 0x0a, 0x65, 0x6c, // 2) * diffuse;.el
	0x73, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, // se for (int i = 
	0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x32, 0x3b, 0x20, 0x69, 0x2b, 0x2b, 0x29, 0x0a, 0x63, // 0; i < 2; i++).c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, // olor += DoPointL
	0x69, 0x67, 0x68, 0x74, 0x28, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, // ight(pos, N, V, 
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, // diffuse, glossy,
	0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, //  edge, Roughness
	0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, // _WrapL_Edge_Thic
	0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x2c, 0x20, 0x69, 0x2c, 0x20, 0x69, 0x73, 0x5f, 0x6d, // kness.x, i, is_m
	0x65, 0x74, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x69, 0x73, // etal);.}.if (!is
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, // _metal && (diffu
	0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x63, 0x6f, // seMax > 0.0)).co
	0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x44, // lor += DoEnvmapD
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, 0x20, 0x28, 0x28, 0x20, 0x28, 0x20, 0x28, 0x76, 0x65, // iffuse( (( ( (ve
	0x63, 0x34, 0x28, 0x4e, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, // c4(N,0.0)) * (ma
	0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, // tView) ) ).xyz),
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, //  diffuse);.if ((
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, // glossyMax > 0.0)
	0x20, 0x7c, 0x7c, 0x20, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, //  || (specularMax
	0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, //  > 0.0)).{.vec3 
	0x52, 0x20, 0x3d, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x29, 0x2a, // R = (2.0*NdotV)*
	0x4e, 0x20, 0x2d, 0x20, 0x56, 0x3b, 0x0a, 0x52, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x20, 0x28, 0x20, // N - V;.R = (( ( 
	0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x52, 0x2c, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, // (vec4(R,0.0)) * 
	0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, // (matView) ) ).xy
	0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x52, // z);.const vec2 R
	0x75, 0x76, 0x20, 0x3d, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, // uv = ray_to_equi
	0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x52, // rectangular_uv(R
	0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, // );.if (glossyMax
	0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, //  > 0.0).color +=
	0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x47, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x28, //  DoEnvmapGlossy(
	0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x52, 0x75, 0x76, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, // N, V, Ruv, gloss
	0x79, 0x2c, 0x20, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, // y, Roughness_Wra
	0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, // pL_Edge_Thicknes
	0x73, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, // s.x);.if (specul
	0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, // arMax > 0.0).col
	0x6f, 0x72, 0x20, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, 0x6d, 0x61, 0x70, 0x32, 0x6e, 0x64, // or = DoEnvmap2nd
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x70, 0x6f, 0x73, // Layer(color, pos
	0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x56, 0x2c, 0x20, 0x52, // , N, V, NdotV, R
	0x75, 0x76, 0x2c, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x29, 0x3b, 0x0a, 0x7d, // uv, specular);.}
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3b, 0x0a, // .return color ;.
	0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, // }.uniform vec4 i
	0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, // nvTableRes_refle
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // ction;.uniform v
	0x65, 0x63, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, // ec4 w_h_disableL
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x61, // ighting;.vec3 ba
	0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x28, 0x63, 0x6f, 0x6e, 0x73, // llLightLoop(cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // t vec3 pos, vec3
	0x20, 0x4e, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, //  N, vec3 V, vec3
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, //  diffuse, vec3 g
	0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // lossy, const vec
	0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // 3 specular, cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x63, 0x6f, // t float edge, co
	0x6e, 0x73, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, // nst bool is_meta
	0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // l).{.const float
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, //  diffuseMax = ma
	0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, // x(diffuse.x,max(
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x79, 0x2c, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // diffuse.y,diffus
	0x65, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // e.z));.const flo
	0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, // at glossyMax = m
	0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x78, 0x2c, 0x6d, 0x61, 0x78, 0x28, // ax(glossy.x,max(
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, 0x79, 0x2c, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2e, // glossy.y,glossy.
	0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // z));.const float
	0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, //  specularMax = m
	0x61, 0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x78, 0x2c, 0x6d, 0x61, // ax(specular.x,ma
	0x78, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x79, 0x2c, 0x73, 0x70, 0x65, // x(specular.y,spe
	0x63, 0x75, 0x6c, 0x61, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // cular.z));.const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, //  float sum = dif
	0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x2b, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, // fuseMax + glossy
	0x4d, 0x61, 0x78, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x73, 0x75, 0x6d, 0x20, 0x3e, 0x20, 0x31, 0x2e, // Max;.if(sum > 1.
	0x30, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0).{.const float
	0x20, 0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x73, 0x75, //  invsum = 1.0/su
	0x6d, 0x3b, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x2a, 0x3d, 0x20, 0x69, 0x6e, // m;.diffuse *= in
	0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x20, 0x2a, 0x3d, 0x20, // vsum;.glossy *= 
	0x69, 0x6e, 0x76, 0x73, 0x75, 0x6d, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // invsum;.}.vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, // olor = vec3(0.0,
	0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x28, //  0.0, 0.0);.if((
	0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, 0x69, // !is_metal && (di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // ffuseMax > 0.0))
	0x20, 0x7c, 0x7c, 0x20, 0x28, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x4d, 0x61, 0x78, 0x20, 0x3e, //  || (glossyMax >
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x66, 0x6f, 0x72, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, //  0.0)).for(int i
	0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x32, 0x20, 0x2b, 0x20, 0x38, 0x3b, //  = 0; i < 2 + 8;
	0x20, 0x69, 0x2b, 0x2b, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, //  i++).color += D
	0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x70, 0x6f, 0x73, 0x2c, // oPointLight(pos,
	0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, //  N, V, diffuse, 
	0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x65, 0x64, 0x67, 0x65, 0x2c, 0x20, 0x52, 0x6f, // glossy, edge, Ro
	0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, // ughness_WrapL_Ed
	0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x2c, 0x20, // ge_Thickness.x, 
	0x69, 0x2c, 0x20, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x69, 0x66, // i, is_metal);.if
	0x28, 0x21, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x26, 0x26, 0x20, 0x28, 0x64, // (!is_metal && (d
	0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, // iffuseMax > 0.0)
	0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x45, 0x6e, 0x76, // ).color += DoEnv
	0x6d, 0x61, 0x70, 0x44, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // mapDiffuse(norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x29, // lize(( (matView)
	0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x4e, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, //  * (vec4(N, 0.0)
	0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // ) ).xyz), diffus
	0x65, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, // e);.if(specularM
	0x61, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // ax > 0.0).color 
	0x2b, 0x3d, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x3b, 0x0a, 0x72, 0x65, 0x74, // += specular;.ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, 0x69, // urn color;.}.voi
	0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // d main().{.const
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x56, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, //  vec3 V = normal
	0x69, 0x7a, 0x65, 0x28, 0x20, 0x2d, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, // ize( -v_worldPos
	0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, // .xyz);.const vec
	0x33, 0x20, 0x4e, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // 3 N = normalize(
	0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x63, // v_normal.xyz);.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x52, 0x20, 0x3d, 0x20, 0x72, 0x65, // onst vec3 R = re
	0x66, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x56, 0x2c, 0x20, 0x4e, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, // flect(V, N);.vec
	0x33, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // 3 ballImageColor
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, // ;.const float ed
	0x67, 0x65, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x56, 0x2c, 0x20, 0x52, 0x29, 0x3b, 0x0a, // ge = dot(V, R);.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x6f, 0x64, 0x20, // const float lod 
	0x3d, 0x20, 0x28, 0x65, 0x64, 0x67, 0x65, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x36, 0x29, 0x20, 0x3f, // = (edge > 0.6) ?
	0x20, 0x65, 0x64, 0x67, 0x65, 0x2a, 0x28, 0x36, 0x2e, 0x30, 0x2a, 0x31, 0x2e, 0x30, 0x2f, 0x30, //  edge*(6.0*1.0/0
	0x2e, 0x34, 0x29, 0x2d, 0x28, 0x36, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x36, 0x2f, 0x30, 0x2e, 0x34, // .4)-(6.0*0.6/0.4
	0x29, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // ) : 0.0;.const f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // loat m = (1.0 - 
	0x52, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x33, 0x35, // R.z > 0.) ? 0.35
	0x33, 0x35, 0x35, 0x33, 0x33, 0x39, 0x30, 0x35, 0x39, 0x33, 0x32, 0x37, 0x33, 0x37, 0x36, 0x32, // 3553390593273762
	0x32, 0x20, 0x2a, 0x20, 0x72, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // 2 * rsqrt(1.0 - 
	0x52, 0x2e, 0x7a, 0x29, 0x20, 0x3a, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // R.z) : 0.;.const
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, //  vec2 uv = vec2(
	0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x6d, 0x20, 0x2a, 0x20, 0x52, 0x2e, 0x78, 0x2c, 0x20, 0x30, // 0.5 - m * R.x, 0
	0x2e, 0x35, 0x20, 0x2d, 0x20, 0x6d, 0x20, 0x2a, 0x20, 0x52, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x62, // .5 - m * R.y);.b
	0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, // allImageColor = 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, // textureLod(tex_b
	0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x75, 0x76, 0x2c, 0x20, 0x6c, // all_color, uv, l
	0x6f, 0x64, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // od).rgb;.const v
	0x65, 0x63, 0x34, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x20, // ec4 decalColorT 
	0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, // = texture(tex_ba
	0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // ll_decal, v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x65, 0x63, // oord0);.vec3 dec
	0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, // alColor = decalC
	0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x64, 0x65, 0x63, 0x61, 0x6c, // olorT.rgb;.decal
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x3d, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, // Color *= decalCo
	0x6c, 0x6f, 0x72, 0x54, 0x2e, 0x61, 0x3b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, // lorT.a;.ballImag
	0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, // eColor += decalC
	0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, // olor;.if ((w_h_d
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x7a, // isableLighting.z
	0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, //  != 0.)).{.gl_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x62, // agColor = vec4(b
	0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x63, 0x42, // allImageColor,cB
	0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x61, 0x29, 0x3b, 0x0a, 0x72, 0x65, // ase_Alpha.a);.re
	0x74, 0x75, 0x72, 0x6e, 0x3b, 0x0a, 0x7d, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, // turn;.}.ballImag
	0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x3d, 0x20, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, // eColor *= fenvEm
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, // issionScale_TexW
	0x69, 0x64, 0x74, 0x68, 0x2e, 0x78, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, // idth.x;.const ve
	0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, // c3 playfield_nor
	0x6d, 0x61, 0x6c, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, // mal = ( (matWorl
	0x64, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // dView) * (float4
	0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x31, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x20, 0x29, // (0.,0.,1.,0.)) )
	0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, // .xyz;.const floa
	0x74, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x70, 0x6c, // t NdotR = dot(pl
	0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, // ayfield_normal, 
	0x52, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, // R);.const vec3 p
	0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x20, // layfield_p0 = ( 
	0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x29, 0x20, 0x2a, // (matWorldView) *
	0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x20, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, //  (vec4( 0.,0.,0.
	0x2c, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x63, 0x6f, // ,1.0)) ).xyz;.co
	0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x20, 0x3d, 0x20, 0x64, 0x6f, // nst float t = do
	0x74, 0x28, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // t(playfield_norm
	0x61, 0x6c, 0x2c, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, // al, v_worldPos.x
	0x79, 0x7a, 0x20, 0x2d, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, // yz - playfield_p
	0x30, 0x29, 0x20, 0x2f, 0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // 0) / NdotR;.cons
	0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, // t vec3 playfield
	0x5f, 0x68, 0x69, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, // _hit = v_worldPo
	0x73, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x74, 0x20, 0x2a, 0x20, 0x52, 0x3b, 0x0a, 0x63, // s.xyz - t * R;.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x20, 0x3d, // onst vec4 proj =
	0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x76, 0x5f, 0x65, 0x79, //  ( (matProj[v_ey
	0x65, 0x5d, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x70, 0x6c, 0x61, 0x79, // e]) * (vec4(play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x68, 0x69, 0x74, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, // field_hit, 1.0))
	0x20, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, //  );.const vec2 u
	0x76, 0x70, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, // vp = vec2(0.5, 0
	0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x70, 0x72, 0x6f, 0x6a, 0x2e, // .5) + vec2(proj.
	0x78, 0x2c, 0x20, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x30, // x, -proj.y) * (0
	0x2e, 0x35, 0x20, 0x2f, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x63, 0x6f, // .5 / proj.w);.co
	0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, // nst vec3 playfie
	0x6c, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2a, // ldColor = 0.25 *
	0x20, 0x28, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, //  (.texture(tex_b
	0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x76, // all_playfield, v
	0x65, 0x63, 0x33, 0x28, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // ec3((uvp + vec2(
	0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, // w_h_disableLight
	0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, // ing.x, 0.)).x, (
	0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, // uvp + vec2(w_h_d
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, // isableLighting.x
	0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, // , 0.)).y, v_eye)
	0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, // ).rgb.+ texture(
	0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, // tex_ball_playfie
	0x6c, 0x64, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, // ld, vec3((uvp - 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // vec2(w_h_disable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, // Lighting.x, 0.))
	0x2e, 0x78, 0x2c, 0x20, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // .x, (uvp - vec2(
	0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, // w_h_disableLight
	0x69, 0x6e, 0x67, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x76, // ing.x, 0.)).y, v
	0x5f, 0x65, 0x79, 0x65, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, 0x2b, 0x20, 0x74, 0x65, 0x78, // _eye)).rgb.+ tex
	0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, // ture(tex_ball_pl
	0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x75, // ayfield, vec3((u
	0x76, 0x70, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, // vp + vec2(0., w_
	0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, // h_disableLightin
	0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2b, 0x20, // g.y)).x, (uvp + 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, // vec2(0., w_h_dis
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, // ableLighting.y))
	0x2e, 0x79, 0x2c, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x0a, // .y, v_eye)).rgb.
	0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, // + texture(tex_ba
	0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2c, 0x20, 0x76, 0x65, // ll_playfield, ve
	0x63, 0x33, 0x28, 0x28, 0x75, 0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, // c3((uvp - vec2(0
	0x2e, 0x2c, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, // ., w_h_disableLi
	0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x75, // ghting.y)).x, (u
	0x76, 0x70, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x2c, 0x20, 0x77, 0x5f, // vp - vec2(0., w_
	0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, // h_disableLightin
	0x67, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x29, // g.y)).y, v_eye))
	0x2e, 0x72, 0x67, 0x62, 0x0a, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x21, 0x28, 0x75, 0x76, // .rgb.);.if (!(uv
	0x70, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x20, 0x7c, 0x7c, 0x20, 0x75, 0x76, 0x70, 0x2e, // p.x < 0. || uvp.
	0x78, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x20, 0x7c, 0x7c, 0x20, 0x75, 0x76, 0x70, 0x2e, 0x79, 0x20, // x > 1. || uvp.y 
	0x3c, 0x20, 0x30, 0x2e, 0x20, 0x7c, 0x7c, 0x20, 0x75, 0x76, 0x70, 0x2e, 0x79, 0x20, 0x3e, 0x20, // < 0. || uvp.y > 
	0x31, 0x2e, 0x29, 0x0a, 0x26, 0x26, 0x20, 0x21, 0x28, 0x74, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, // 1.).&& !(t <= 0.
	0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, // )).{.ballImageCo
	0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x6c, 0x65, 0x72, 0x70, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x49, // lor = lerp(ballI
	0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x66, // mageColor, playf
	0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, // ieldColor, smoot
	0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x35, 0x2c, // hstep(0.0, 0.15,
	0x20, 0x4e, 0x64, 0x6f, 0x74, 0x52, 0x29, 0x20, 0x2a, 0x20, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, //  NdotR) * invTab
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, // leRes_reflection
	0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, // .z);.}.ballImage
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, 0x62, 0x61, 0x6c, 0x6c, // Color = min(ball
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ImageColor, floa
	0x74, 0x33, 0x28, 0x31, 0x35, 0x2e, 0x2c, 0x20, 0x31, 0x35, 0x2e, 0x2c, 0x20, 0x31, 0x35, 0x2e, // t3(15., 15., 15.
	0x29, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // ));.vec3 diffuse
	0x20, 0x3d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, //  = cBase_Alpha.r
	0x67, 0x62, 0x2a, 0x30, 0x2e, 0x30, 0x37, 0x35, 0x3b, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // gb*0.075;.diffus
	0x65, 0x20, 0x2a, 0x3d, 0x20, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, // e *= decalColor;
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x73, // .const vec3 glos
	0x73, 0x79, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // sy = max(diffuse
	0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x2c, 0x30, // *2.0, vec3(0.1,0
	0x2e, 0x31, 0x2c, 0x30, 0x2e, 0x31, 0x29, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, // .1,0.1));.vec3 s
	0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x20, 0x3d, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x49, 0x6d, // pecular = ballIm
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // ageColor * cBase
	0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x73, 0x70, 0x65, 0x63, // _Alpha.rgb;.spec
	0x75, 0x6c, 0x61, 0x72, 0x20, 0x2a, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x2c, // ular *= vec3(1.,
	0x31, 0x2e, 0x2c, 0x31, 0x2e, 0x29, 0x2d, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, // 1.,1.)-decalColo
	0x72, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // r;.gl_FragColor.
	0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, // rgb = ballLightL
	0x6f, 0x6f, 0x70, 0x28, 0x76, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x2e, 0x78, // oop(v_worldPos.x
	0x79, 0x7a, 0x2c, 0x20, 0x4e, 0x2c, 0x20, 0x56, 0x2c, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // yz, N, V, diffus
	0x65, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x79, 0x2c, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, // e, glossy, specu
	0x6c, 0x61, 0x72, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, // lar, 1.0, false)
	0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x61, // ;.gl_FragColor.a
	0x20, 0x3d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x61, //  = cBase_Alpha.a
	0x3b, 0x0a, 0x7d, 0x0a, 0x00,                                                                   // ;.}..
};
static const uint8_t fs_ball_spherical_nodecal_st_dx11[7316] =
{
	0x46, 0x53, 0x48, 0x0b, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x07, 0x6d, // FSH..N.........m
	0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x14, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, // atView..........
	0x0c, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x14, 0x00, 0x40, // .matWorldView..@
	0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x14, // ........matProj.
	0x02, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, // ..........ballLi
	0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x0a, 0x00, 0x01, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, // ghtPos..........
	0x11, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, // .ballLightEmissi
	0x6f, 0x6e, 0x12, 0x0a, 0xa0, 0x01, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x63, 0x41, 0x6d, // on...........cAm
	0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, // bient_LightRange
	0x12, 0x00, 0x40, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x65, 0x6e, 0x76, 0x45, // ..@........fenvE
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, // missionScale_Tex
	0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x00, 0x50, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // Width..P........
	0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, // fDisableLighting
	0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x12, 0x00, 0x60, 0x02, 0x01, 0x00, // _top_below..`...
	0x00, 0x00, 0x00, 0x00, 0x0b, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, // .....cBase_Alpha
	0x12, 0x00, 0x70, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x52, 0x6f, 0x75, 0x67, 0x68, // ..p........Rough
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, // ness_WrapL_Edge_
	0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x00, 0x80, 0x02, 0x01, 0x00, 0x00, // Thickness.......
	0x00, 0x00, 0x00, 0x16, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, // ....invTableRes_
	0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x00, 0x90, 0x02, 0x01, 0x00, // reflection......
	0x00, 0x00, 0x00, 0x00, 0x13, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // .....w_h_disable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x00, 0xa0, 0x02, 0x01, 0x00, 0x00, 0x00, // Lighting........
	0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // ...tex_ball_colo
	0x72, 0x30, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, // r0..........tex_
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x30, 0x01, 0x02, 0x00, 0x01, // diffuse_env0....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, // ......tex_ball_d
	0x65, 0x63, 0x61, 0x6c, 0x30, 0x01, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x74, // ecal0..........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // ex_ball_playfiel
	0x64, 0x30, 0x01, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, // d0..........tex_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x01, 0x00, 0x00, 0x01, 0x00, // ball_color0.....
	0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // .....tex_diffuse
	0x5f, 0x65, 0x6e, 0x76, 0x30, 0x01, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, // _env0..........t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x30, 0x01, 0x03, // ex_ball_decal0..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // ........tex_ball
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x30, 0x01, 0x04, 0x00, 0x01, 0x00, // _playfield0.....
	0x00, 0x00, 0x00, 0x00, 0x58, 0x1a, 0x00, 0x00, 0x44, 0x58, 0x42, 0x43, 0xac, 0x0f, 0xce, 0x69, // ....X...DXBC...i
	0xb0, 0x02, 0x68, 0x57, 0xe4, 0x83, 0xe2, 0x17, 0x97, 0xcf, 0x33, 0xa5, 0x01, 0x00, 0x00, 0x00, // ..hW......3.....
	0x58, 0x1a, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00, // X.......,.......
	0x04, 0x01, 0x00, 0x00, 0x49, 0x53, 0x47, 0x4e, 0x9c, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, // ....ISGN........
	0x08, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, // ................
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x01, 0x01, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0e, 0x0e, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x03, 0x03, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, // ............SV_P
	0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, // OSITION.TEXCOORD
	0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x4f, 0x53, 0x47, 0x4e, 0x2c, 0x00, 0x00, 0x00, // .NORMAL.OSGN,...
	0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........ .......
	0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, // ................
	0x53, 0x56, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x00, 0xab, 0xab, 0x53, 0x48, 0x45, 0x58, // SV_TARGET...SHEX
	0x4c, 0x19, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x53, 0x06, 0x00, 0x00, 0x6a, 0x28, 0x00, 0x01, // L...P...S...j(..
	0x59, 0x08, 0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, // Y...F. .....+...
	0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, // Z....`......Z...
	0x00, 0x60, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, // .`......Z....`..
	0x03, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ....Z....`......
	0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, // X....p......UU..
	0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, // X....p......UU..
	0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, // X....p......UU..
	0x58, 0x40, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, // X@...p......UU..
	0x62, 0x10, 0x00, 0x03, 0x12, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, // b...........b...
	0xe2, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x32, 0x10, 0x10, 0x00, // ........b...2...
	0x02, 0x00, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x72, 0x10, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....b...r.......
	0x65, 0x00, 0x00, 0x03, 0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x02, // e.... ......h...
	0x0c, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x46, 0x12, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x80, // F...A.......F...
	0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x12, 0x00, 0x10, 0x00, // A.......D.......
	0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, // ............8...
	0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // r...............
	0x46, 0x12, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, // F...A...........
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x17, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x96, 0x17, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, // ........D.......
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ....:.......8...
	0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // r...............
	0x96, 0x17, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // :.......:.......
	0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 2...r.......F...
	0x01, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........A.......
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // F...............
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x02, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....1...........
	0x01, 0x40, 0x00, 0x00, 0x9a, 0x99, 0x19, 0x3f, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // .@.....?:.......
	0x32, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 2...........:...
	0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x70, 0x41, 0x01, 0x40, 0x00, 0x00, // .....@....pA.@..
	0x00, 0x00, 0x10, 0xc1, 0x01, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // :.......:.......
	0x00, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x80, // ............*...
	0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // A........@.....?
	0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // 1............@..
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, // ....:.......D...
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........:.......
	0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 8...........:...
	0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0xf3, 0x04, 0xb5, 0x3e, 0x01, 0x00, 0x00, 0x07, // .....@.....>....
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........:.......
	0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0d, 0x32, 0x00, 0x10, 0x00, // :.......2...2...
	0x03, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ........A.......
	0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, // F........@.....?
	0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, // ...?........H...
	0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....CU..r.......
	0x46, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // F.......F~......
	0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // .`......:.......
	0x45, 0x00, 0x00, 0x8b, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0xf2, 0x00, 0x10, 0x00, // E.......CU......
	0x04, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, // ....F.......F~..
	0x03, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // .....`......8...
	0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // r...............
	0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, // F.......2...r...
	0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // ....F...........
	0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x08, // ....F.......9...
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // ........*. .....
	0x2a, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, // *....@..........
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0x82, 0x20, 0x10, 0x00, // :.......6.... ..
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, // ....:. .....'...
	0x36, 0x00, 0x00, 0x05, 0x72, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 6...r ......F...
	0x03, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x01, 0x15, 0x00, 0x00, 0x01, 0x38, 0x00, 0x00, 0x08, // ....>.......8...
	0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // r.......F.......
	0x06, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x08, // .. .....%.......
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // ........F. .....
	0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, // ....F...........
	0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x82, 0x20, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, // F. .A...........
	0x10, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // ............F. .
	0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ........F.......
	0x0e, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, // ....:.......2...
	0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, // r...........A...
	0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, // ....F.......F...
	0x03, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x0a, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ........).......
	0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....:........@..
	0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ....8...r.......
	0x56, 0x05, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x83, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, // V.......F. .....
	0x09, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, // ....:.......2...
	0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x83, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, // r.......F. .....
	0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, // ....:...........
	0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, // ....F.......2...
	0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x83, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, // r.......F. .....
	0x0a, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, // ....:...........
	0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, // ....F...........
	0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x83, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // F. .........:...
	0x02, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........B.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x2a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // .@.....?*.......
	0x36, 0x00, 0x00, 0x06, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, // 6...............
	0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x32, 0x00, 0x10, 0x00, // A.......2...2...
	0x02, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, // ................
	0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, // .....@.....?...?
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x0a, 0x32, 0x00, 0x10, 0x00, // ........1...2...
	0x06, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // ....F........@..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x31, 0x00, 0x00, 0x0a, 0xc2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // 1............@..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, // ...........?...?
	0x06, 0x04, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ........<.......
	0x03, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ....*...........
	0x06, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....<...........
	0x1a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ........:.......
	0x3c, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // <...........:...
	0x06, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x05, // ....:.......;...
	0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ........:.......
	0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // 1............@..
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, // ....:...........
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........:.......
	0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, // :...........:...
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x32, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ........2.......
	0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // F.......F. .....
	0x2a, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x42, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // *...6...B.......
	0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, // ........6.......
	0x06, 0x00, 0x00, 0x00, 0x0a, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, // ............E...
	0x02, 0x02, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ....CU..r.......
	0x86, 0x03, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ........F~......
	0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x32, 0x00, 0x10, 0x00, // .`..........2...
	0x08, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x80, 0x20, 0x80, // ....F.......F. .
	0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, // A.......*...6...
	0xc2, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0xa6, 0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ................
	0x45, 0x00, 0x00, 0x8b, 0x02, 0x02, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, // E.......CU..r...
	0x09, 0x00, 0x00, 0x00, 0x86, 0x03, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, // ............F~..
	0x04, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // .....`..........
	0x72, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0xc2, 0x00, 0x10, 0x00, // F.......6.......
	0x02, 0x00, 0x00, 0x00, 0x56, 0x0d, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, // ....V.......E...
	0x02, 0x02, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ....CU..r.......
	0x86, 0x03, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // ........F~......
	0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // .`..........r...
	0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x07, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x52, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ....6...R.......
	0x06, 0x03, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, 0x02, 0x02, 0x00, 0x80, // ........E.......
	0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // CU..r.......F...
	0x08, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, // ....F~.......`..
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........r.......
	0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // F.......F.......
	0x38, 0x20, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 8 ..........:...
	0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x55, 0x55, 0xd5, 0x40, 0x32, 0x00, 0x00, 0x09, // .....@..UU.@2...
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........:.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, // .@.......@....@@
	0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 8...........:...
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ....:.......8...
	0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........:.......
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, // :.......8.......
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x80, 0x20, 0x00, // ....:.......*. .
	0x00, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0d, 0x72, 0x00, 0x10, 0x00, // ....)...2...r...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // ....F........@..
	0x00, 0x00, 0x80, 0x3e, 0x00, 0x00, 0x80, 0x3e, 0x00, 0x00, 0x80, 0x3e, 0x00, 0x00, 0x00, 0x00, // ...>...>...>....
	0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, // F...A.......2...
	0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // r...............
	0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // F.......F.......
	0x15, 0x00, 0x00, 0x01, 0x33, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....3...r.......
	0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x70, 0x41, // F........@....pA
	0x00, 0x00, 0x70, 0x41, 0x00, 0x00, 0x70, 0x41, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, // ..pA..pA....8...
	0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, // F. .....'...8...
	0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // r.......F.......
	0x02, 0x40, 0x00, 0x00, 0x9a, 0x99, 0x99, 0x3d, 0x9a, 0x99, 0x99, 0x3d, 0x9a, 0x99, 0x99, 0x3d, // .@.....=...=...=
	0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....8...r.......
	0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x9a, 0x99, 0x19, 0x3e, // F........@.....>
	0x9a, 0x99, 0x19, 0x3e, 0x9a, 0x99, 0x19, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x0a, // ...>...>....4...
	0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // r.......F.......
	0x02, 0x40, 0x00, 0x00, 0xcd, 0xcc, 0xcc, 0x3d, 0xcd, 0xcc, 0xcc, 0x3d, 0xcd, 0xcc, 0xcc, 0x3d, // .@.....=...=...=
	0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....8...r.......
	0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // F.......F. .....
	0x27, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0d, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, // '...2...r.......
	0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // F...A...........
	0x04, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, // .....@.....?...?
	0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // ...?....8...r...
	0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x04, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....4...........
	0x2a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // *...............
	0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 4...........:...
	0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, // ............4...
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ........*.......
	0x1a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ........4.......
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ....:...........
	0x03, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....4...........
	0x2a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // *...............
	0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 4...........:...
	0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // ................
	0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........:.......
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // :.......1.......
	0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x3a, 0x00, 0x10, 0x00, // .....@.....?:...
	0x01, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0a, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, // .@.....?...?...?
	0x00, 0x00, 0x80, 0x3f, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ...?:.......8...
	0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // r...............
	0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // F.......8...r...
	0x07, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x03, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, // ....7...r.......
	0xf6, 0x0f, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, // ........F.......
	0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, // F.......7...r...
	0x03, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, // ....F...........
	0x32, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x16, 0x85, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // 2......... .....
	0x28, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, // (....@.....?...?
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ........8.......
	0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ................
	0x06, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ....8...........
	0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, // :. .....$...:. .
	0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0xd2, 0x00, 0x10, 0x00, // ....$...........
	0x06, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ........A.......
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // .@.....?.......?
	0x00, 0x00, 0x80, 0x3f, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ...?8...........
	0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // :.......:.......
	0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....r.......F...
	0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, // ....F.......8...
	0x72, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x08, // F. .....$...9...
	0x82, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // .......... .....
	0x26, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x08, // &....@......6...
	0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // r........@......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, // ............6...
	0x82, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........@......
	0x30, 0x00, 0x00, 0x01, 0x21, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // 0...!...........
	0x3a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, // :........@......
	0x03, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0b, // ....:.......8...
	0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // r.......F. .....
	0x01, 0x00, 0x00, 0x00, 0x56, 0x85, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, // ....V. .........
	0x3a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0d, 0x72, 0x00, 0x10, 0x00, // :.......2...r...
	0x09, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....F. .........
	0x06, 0x80, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // .. .........:...
	0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0d, // ....F.......2...
	0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // r.......F. .....
	0x02, 0x00, 0x00, 0x00, 0xa6, 0x8a, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, // ...... .........
	0x3a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // :.......F.......
	0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....r.......F...
	0x09, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ....F. .........
	0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....r.......F...
	0x09, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ....F...A.......
	0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, // ....F.......D...
	0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ........:.......
	0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // 8...r...........
	0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, // ....F...........
	0x82, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........F.......
	0x46, 0x02, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, // F...............
	0x0a, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x1a, 0x80, 0x20, 0x00, // ....:......... .
	0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, // ....(...1.......
	0x0b, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // .....@......:...
	0x0a, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, // ................
	0x3a, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // :.......:.......
	0x38, 0x00, 0x00, 0x07, 0xe2, 0x00, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, // 8...............
	0x05, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, // ................
	0x72, 0x00, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, // r...............
	0x06, 0x00, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // ........1.......
	0x09, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // .....@......:...
	0x09, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ........:.......
	0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 2...r.......F...
	0x09, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // F.......F.......
	0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // D...........:...
	0x08, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ....8...r.......
	0xf6, 0x0f, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ........F.......
	0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, // ....F...........
	0x82, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, // ........F.......
	0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, // F...............
	0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x09, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ....1...".......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // .@......:.......
	0x31, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // 1...B........@..
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, // ....:...........
	0x22, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ".......*.......
	0x1a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, // ........1...B...
	0x09, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // .....@..........
	0x09, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ........".......
	0x2a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // *...............
	0x00, 0x00, 0x00, 0x08, 0x42, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x80, // ....B.......:...
	0x41, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // A........@.....?
	0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // 8...........*...
	0x09, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ....*.......8...
	0x82, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ........:.......
	0x3a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, // :.......8...B...
	0x09, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // ....:.......*...
	0x09, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, // ....2...r.......
	0x86, 0x03, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, // F.......8.......
	0x09, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // .............@..
	0x00, 0x00, 0x00, 0x41, 0x0e, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ...A............
	0x1a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ................
	0x2f, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // /...........:...
	0x08, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ....8...........
	0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // :......... .....
	0x28, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // (...............
	0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // :.......8.......
	0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ....:...........
	0x09, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xd2, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ....2...........
	0x06, 0x09, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ................
	0x06, 0x09, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, // ........7...r...
	0x0b, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x86, 0x03, 0x10, 0x00, // ....V...........
	0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, // ....F...........
	0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // 8...........:...
	0x07, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, // ....:...........
	0x82, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ........:.......
	0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, // :........ ......
	0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, // ....:...A.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // .@.....?8.......
	0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ....:.......:...
	0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // ................
	0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // :........@.....?
	0x0e, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, // ....:.......8...
	0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x82, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // F. .........:...
	0x05, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // ....2...r.......
	0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, // F...............
	0x46, 0x02, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, // F...........r...
	0x0a, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, // ....F.......F...
	0x41, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, // A.......2...r...
	0x0a, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, // ...... .....&...
	0x46, 0x02, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // F.......F.......
	0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // 7...r...........
	0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ........r.......
	0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, // F.......F.......
	0x1e, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // ............:...
	0x05, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x01, // .....@..........
	0x31, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // 1............@..
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, // ....:...........
	0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, // ........8...r...
	0x00, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x16, 0x86, 0x20, 0x00, // ....V......... .
	0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, // ........2...r...
	0x00, 0x00, 0x00, 0x00, 0x16, 0x86, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ...... .........
	0x06, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........F.......
	0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x86, 0x20, 0x00, // 2...r......... .
	0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // F...............
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....D...........
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // :.......8...r...
	0x00, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x00, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x0b, 0x32, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ........2.......
	0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, 0x00, 0x00, 0x80, 0x38, 0x00, 0x00, 0x00, 0x00, // .@.....8...8....
	0x00, 0x00, 0x00, 0x00, 0x16, 0x05, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x01, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, // ................
	0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0xc1, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, // ...."...........
	0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x31, 0x00, 0x00, 0x0a, 0x32, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x05, 0x10, 0x00, // 1...2...........
	0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .....@..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, // ........7..."...
	0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // .............@..
	0x00, 0x00, 0xc0, 0x3e, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x38, 0x00, 0x00, 0x07, // ...>.@.....>8...
	0x42, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // B...............
	0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x42, 0x00, 0x10, 0x00, // ........2...B...
	0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // ....*........@..
	0xd0, 0x1d, 0x0a, 0x3d, 0x01, 0x40, 0x00, 0x00, 0xdc, 0xe7, 0x20, 0xbe, 0x37, 0x00, 0x00, 0x0a, // ...=.@.... .7...
	0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x0a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ....A...........
	0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....2...........
	0x2a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // *...............
	0x1a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x0a, 0x12, 0x00, 0x10, 0x00, // ........7.......
	0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, // ................
	0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // A...............
	0x00, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x37, 0x00, 0x00, 0x09, // .....@.....?7...
	0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........:.......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // .@.....?........
	0x00, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x80, // ............*...
	0xc1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // .........@.....?
	0x1d, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // ............*...
	0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, // .....@......7...
	0x22, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // "...............
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // .@.......@.....?
	0x31, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // 1...B........@..
	0x00, 0x00, 0x80, 0x38, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, // ...8:.......2...
	0x42, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, // B.......*.......
	0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x1a, 0x5b, 0x4b, 0xbd, 0x01, 0x40, 0x00, 0x00, // .....@...[K..@..
	0x66, 0x00, 0xff, 0x3e, 0x4b, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // f..>K...........
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, // :.......8.......
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // ....:.......*...
	0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x42, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....2...B.......
	0x2a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, // *...A.......:...
	0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x37, 0x00, 0x00, 0x09, // .....@.....?7...
	0x42, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // B...............
	0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // :.......*.......
	0x37, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, // 7...".......*...
	0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, // ....*...........
	0x01, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, // ....H.......CU..
	0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // r.......F.......
	0x46, 0x7e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // F~.......`......
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // .@......8...r...
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x05, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ....2...r.......
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // F......... .....
	0x25, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, // %...F...........
	0x31, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, // 1............@..
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, // ....:.......2...
	0xe2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x06, 0x09, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, // ................
	0x37, 0x00, 0x00, 0x09, 0x72, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, // 7...r ..........
	0x00, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ............F...
	0x08, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0x82, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....6.... ......
	0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x01, // :. .....'...>...
	0x00, 0x00, 0xb0, 0x02,                                                                         // ....
};
static const uint8_t fs_ball_spherical_nodecal_st_spv[12603] =
{
	0x46, 0x53, 0x48, 0x0b, 0x8b, 0x4e, 0x06, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x0c, 0x62, // FSH..N.........b
	0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x0a, 0x00, 0x01, 0x0a, // allLightPos.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x14, 0x01, 0x00, // ......matView...
	0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, // ........Roughnes
	0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, 0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, // s_WrapL_Edge_Thi
	0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x01, 0x80, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // ckness..........
	0x13, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, // .cAmbient_LightR
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x01, 0x40, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x62, // ange..@........b
	0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, // allLightEmission
	0x12, 0x0a, 0xa0, 0x01, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x66, 0x44, 0x69, 0x73, 0x61, // ...........fDisa
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, // bleLighting_top_
	0x62, 0x65, 0x6c, 0x6f, 0x77, 0x12, 0x01, 0x60, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // below..`........
	0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, // fenvEmissionScal
	0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x01, 0x50, 0x02, 0x01, 0x00, // e_TexWidth..P...
	0x00, 0x00, 0x00, 0x00, 0x13, 0x77, 0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, // .....w_h_disable
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x01, 0xa0, 0x02, 0x01, 0x00, 0x00, 0x00, // Lighting........
	0x00, 0x00, 0x0b, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x01, // ...cBase_Alpha..
	0x70, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, // p........matWorl
	0x64, 0x56, 0x69, 0x65, 0x77, 0x14, 0x01, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // dView..@........
	0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x14, 0x02, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, // matProj.........
	0x00, 0x16, 0x69, 0x6e, 0x76, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, // ..invTableRes_re
	0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x01, 0x90, 0x02, 0x01, 0x00, 0x00, 0x00, // flection........
	0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // ...tex_ball_colo
	0x72, 0x30, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, // r0......."..tex_
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x30, 0x00, 0x04, 0x00, 0x00, // diffuse_env0....
	0x00, 0x00, 0x02, 0x22, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, // ..."..tex_ball_d
	0x65, 0x63, 0x61, 0x6c, 0x30, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0x12, 0x74, // ecal0......."..t
	0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, // ex_ball_playfiel
	0x64, 0x30, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x03, 0x22, 0x00, 0x68, 0x2f, 0x00, 0x00, 0x03, // d0.......".h/...
	0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x0b, 0x00, 0x08, 0x00, 0x06, 0x07, 0x00, 0x00, 0x00, // .#..............
	0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x06, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30, 0x00, // ...GLSL.std.450.
	0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, // ................
	0x00, 0x0a, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, // ...........main.
	0x00, 0x00, 0x00, 0x81, 0x03, 0x00, 0x00, 0x85, 0x03, 0x00, 0x00, 0x89, 0x03, 0x00, 0x00, 0x8c, // ................
	0x03, 0x00, 0x00, 0x9d, 0x03, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x03, // ................
	0x00, 0x03, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x6f, // ...main........o
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // ...tex_ball_colo
	0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x72, // rSampler.......r
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // ...tex_ball_colo
	0x72, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x7c, // rTexture.......|
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, // ...tex_diffuse_e
	0x6e, 0x76, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x7e, // nvSampler......~
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, // ...tex_diffuse_e
	0x6e, 0x76, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x82, // nvTexture.......
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, // ...tex_ball_deca
	0x6c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x84, // lSampler........
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x61, // ...tex_ball_deca
	0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x09, 0x00, 0x89, // lTexture........
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, // ...tex_ball_play
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, // fieldSampler....
	0x00, 0x09, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // .......tex_ball_
	0x70, 0x6c, 0x61, 0x79, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // playfieldTexture
	0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x55, 0x6e, 0x69, 0x66, 0x6f, // .......+...Unifo
	0x72, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x05, 0x00, 0x2b, // rmBlock........+
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x00, 0x06, // .......matView..
	0x00, 0x07, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x57, 0x6f, // ...+.......matWo
	0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x05, 0x00, 0x2b, // rldView........+
	0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x00, 0x06, // .......matProj..
	0x00, 0x07, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x62, 0x61, 0x6c, 0x6c, 0x4c, // ...+.......ballL
	0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x2b, // ightPos........+
	0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, // .......ballLight
	0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x2b, // Emission.......+
	0x01, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x63, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, // .......cAmbient_
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x00, 0x06, 0x00, 0x0a, 0x00, 0x2b, // LightRange.....+
	0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x66, 0x65, 0x6e, 0x76, 0x45, 0x6d, 0x69, 0x73, 0x73, // .......fenvEmiss
	0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x57, 0x69, 0x64, 0x74, // ionScale_TexWidt
	0x68, 0x00, 0x00, 0x06, 0x00, 0x0a, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x66, // h......+.......f
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, // DisableLighting_
	0x74, 0x6f, 0x70, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x2b, // top_below......+
	0x01, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x63, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x70, // .......cBase_Alp
	0x68, 0x61, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x52, // ha.....+.......R
	0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x57, 0x72, 0x61, 0x70, 0x4c, 0x5f, 0x45, // oughness_WrapL_E
	0x64, 0x67, 0x65, 0x5f, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x00, 0x00, 0x06, // dge_Thickness...
	0x00, 0x09, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x69, 0x6e, 0x76, 0x54, 0x61, // ...+.......invTa
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, // bleRes_reflectio
	0x6e, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x77, // n......+.......w
	0x5f, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, // _h_disableLighti
	0x6e, 0x67, 0x00, 0x05, 0x00, 0x03, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, // ng.....-........
	0x00, 0x04, 0x00, 0x81, 0x03, 0x00, 0x00, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x00, 0x00, 0x00, 0x05, // .......v_eye....
	0x00, 0x05, 0x00, 0x85, 0x03, 0x00, 0x00, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x00, // .......v_normal.
	0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0x89, 0x03, 0x00, 0x00, 0x76, 0x5f, 0x74, 0x65, 0x78, // ...........v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x05, 0x00, 0x05, 0x00, 0x8c, 0x03, 0x00, 0x00, 0x76, // coord0.........v
	0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x9d, // _worldPos.......
	0x03, 0x00, 0x00, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, // ...bgfx_FragData
	0x30, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x6f, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // 0..G...o..."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x6f, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x12, // ...G...o...!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x72, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G...r..."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x72, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x02, // ...G...r...!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G...|..."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x14, // ...G...|...!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G...~..."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x04, // ...G...~...!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x82, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G......."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x82, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x15, // ...G.......!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x84, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G......."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x84, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x05, // ...G.......!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x89, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G......."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x89, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x16, // ...G.......!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G......."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x06, // ...G.......!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x27, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x40, // ...G...'.......@
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x29, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x10, // ...G...)........
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x2a, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x10, // ...G...*........
	0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, // ...H...+........
	0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, // ...H...+.......#
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x00, // .......H...+....
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, 0x2b, // ...........H...+
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2b, // ...........H...+
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x48, // .......#...@...H
	0x00, 0x05, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, // ...+............
	0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, // ...H...+........
	0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x23, // ...H...+.......#
	0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x02, // .......H...+....
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2b, // ...........H...+
	0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x48, // .......#.......H
	0x00, 0x05, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0xa0, // ...+.......#....
	0x01, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x23, // ...H...+.......#
	0x00, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x06, // ...@...H...+....
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x50, 0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2b, // ...#...P...H...+
	0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0x48, // .......#...`...H
	0x00, 0x05, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x70, // ...+.......#...p
	0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x23, // ...H...+.......#
	0x00, 0x00, 0x00, 0x80, 0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x0a, // .......H...+....
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x90, 0x02, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2b, // ...#.......H...+
	0x01, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0xa0, 0x02, 0x00, 0x00, 0x47, // .......#.......G
	0x00, 0x03, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x2d, // ...+.......G...-
	0x01, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x2d, // ...".......G...-
	0x01, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x81, // ...!.......G....
	0x03, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x85, // ...........G....
	0x03, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x89, // ...........G....
	0x03, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x8c, // ...........G....
	0x03, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x9d, // ...........G....
	0x03, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x21, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, // ...!............
	0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, // ............... 
	0x00, 0x00, 0x00, 0x19, 0x00, 0x09, 0x00, 0x08, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x19, 0x00, 0x09, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, 0x44, // ...............D
	0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x45, // ... ...........E
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, // ... ...n........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x6f, 0x00, 0x00, 0x00, 0x00, // ...;...n...o....
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x71, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, // ... ...q........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x71, 0x00, 0x00, 0x00, 0x72, 0x00, 0x00, 0x00, 0x00, // ...;...q...r....
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, // ...;...n...|....
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x71, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, // ...;...q...~....
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x00, // ...;...n........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x71, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00, // ...;...q........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00, 0x00, // ...;...n........
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x8b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // ... ............
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x8b, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x00, // ...;............
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x44, 0x00, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00, 0x01, // ...+...D........
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x44, 0x00, 0x00, 0x00, 0x93, 0x00, 0x00, 0x00, 0x00, // ...+...D........
	0x00, 0x00, 0x00, 0x1b, 0x00, 0x03, 0x00, 0x97, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, // ................
	0x00, 0x03, 0x00, 0xac, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...........+....
	0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........?+....
	0x00, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........8+....
	0x00, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...........+....
	0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00, 0x1a, 0x5b, 0x4b, 0xbd, 0x2b, 0x00, 0x04, 0x00, 0x07, // ........[K.+....
	0x00, 0x00, 0x00, 0xd3, 0x00, 0x00, 0x00, 0x66, 0x00, 0xff, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, // .......f..>+....
	0x00, 0x00, 0x00, 0xf6, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........>+....
	0x00, 0x00, 0x00, 0xf7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........>+....
	0x00, 0x00, 0x00, 0xf9, 0x00, 0x00, 0x00, 0xd0, 0x1d, 0x0a, 0x3d, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........=+....
	0x00, 0x00, 0x00, 0x0e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x15, 0x00, 0x04, 0x00, 0x0f, // ..........?.....
	0x01, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x0f, // ... .......+....
	0x01, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x0f, // ...........+....
	0x01, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x0f, // ...........+....
	0x01, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...........+....
	0x00, 0x00, 0x00, 0x1f, 0x01, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x40, 0x18, 0x00, 0x04, 0x00, 0x26, // ..........@....&
	0x01, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x27, // ...............'
	0x01, 0x00, 0x00, 0x26, 0x01, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x0f, // ...&.......+....
	0x01, 0x00, 0x00, 0x28, 0x01, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x29, // ...(...........)
	0x01, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x28, 0x01, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x2a, // .......(.......*
	0x01, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x28, 0x01, 0x00, 0x00, 0x1e, 0x00, 0x0e, 0x00, 0x2b, // .......(.......+
	0x01, 0x00, 0x00, 0x26, 0x01, 0x00, 0x00, 0x26, 0x01, 0x00, 0x00, 0x27, 0x01, 0x00, 0x00, 0x29, // ...&...&...'...)
	0x01, 0x00, 0x00, 0x2a, 0x01, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, // ...*............
	0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x2c, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, // ... ...,.......+
	0x01, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x2c, 0x01, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x02, // ...;...,...-....
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x44, 0x00, 0x00, 0x00, 0x2e, 0x01, 0x00, 0x00, 0x03, // ...+...D........
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x2f, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0d, // ... .../........
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x37, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x26, // ... ...7.......&
	0x01, 0x00, 0x00, 0x2c, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x44, 0x01, 0x00, 0x00, 0xcb, // ...,.......D....
	0x00, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x44, // ...........+...D
	0x00, 0x00, 0x00, 0x47, 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x48, // ...G....... ...H
	0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...........+....
	0x00, 0x00, 0x00, 0x79, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x2b, 0x00, 0x04, 0x00, 0x44, // ...y......A+...D
	0x00, 0x00, 0x00, 0x8b, 0x01, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x0f, // ...........+....
	0x01, 0x00, 0x00, 0x8c, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x44, // ...........+...D
	0x00, 0x00, 0x00, 0xa9, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x44, // ...........+...D
	0x00, 0x00, 0x00, 0xb6, 0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x44, // ...........+...D
	0x00, 0x00, 0x00, 0xd3, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x44, // ...........+...D
	0x00, 0x00, 0x00, 0x14, 0x02, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...........+....
	0x00, 0x00, 0x00, 0x53, 0x02, 0x00, 0x00, 0x9a, 0x99, 0x19, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...S......?+....
	0x00, 0x00, 0x00, 0x56, 0x02, 0x00, 0x00, 0x00, 0x00, 0x70, 0x41, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...V.....pA+....
	0x00, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0xf3, 0x04, 0xb5, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x44, // ...`......>+...D
	0x00, 0x00, 0x00, 0x8c, 0x02, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x44, // ...........+...D
	0x00, 0x00, 0x00, 0x93, 0x02, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x07, 0x00, 0x0d, // ...........,....
	0x00, 0x00, 0x00, 0xa0, 0x02, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xc4, // ................
	0x00, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xaa, // .......,........
	0x02, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xc4, // ................
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x44, 0x00, 0x00, 0x00, 0xc3, 0x02, 0x00, 0x00, 0x02, // ...+...D........
	0x00, 0x00, 0x00, 0x2c, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xca, 0x02, 0x00, 0x00, 0x0e, // ...,............
	0x01, 0x00, 0x00, 0x0e, 0x01, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd7, // .......+........
	0x02, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x40, // ......>+.......@
	0x03, 0x00, 0x00, 0x9a, 0x99, 0x19, 0x3e, 0x2c, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x49, // ......>,.......I
	0x03, 0x00, 0x00, 0x56, 0x02, 0x00, 0x00, 0x56, 0x02, 0x00, 0x00, 0x56, 0x02, 0x00, 0x00, 0x2b, // ...V...V...V...+
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4f, 0x03, 0x00, 0x00, 0x9a, 0x99, 0x99, 0x3d, 0x2b, // .......O......=+
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x56, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x2b, // .......V......@+
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x58, 0x03, 0x00, 0x00, 0xcd, 0xcc, 0xcc, 0x3d, 0x2c, // .......X......=,
	0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x59, 0x03, 0x00, 0x00, 0x58, 0x03, 0x00, 0x00, 0x58, // .......Y...X...X
	0x03, 0x00, 0x00, 0x58, 0x03, 0x00, 0x00, 0x2c, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x61, // ...X...,.......a
	0x03, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x20, // ............... 
	0x00, 0x04, 0x00, 0x80, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3b, // ...............;
	0x00, 0x04, 0x00, 0x80, 0x03, 0x00, 0x00, 0x81, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, // ............... 
	0x00, 0x04, 0x00, 0x84, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x3b, // ...............;
	0x00, 0x04, 0x00, 0x84, 0x03, 0x00, 0x00, 0x85, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, // ............... 
	0x00, 0x04, 0x00, 0x88, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3b, // ...............;
	0x00, 0x04, 0x00, 0x88, 0x03, 0x00, 0x00, 0x89, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3b, // ...............;
	0x00, 0x04, 0x00, 0x84, 0x03, 0x00, 0x00, 0x8c, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, // ............... 
	0x00, 0x04, 0x00, 0x9c, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x3b, // ...............;
	0x00, 0x04, 0x00, 0x9c, 0x03, 0x00, 0x00, 0x9d, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x29, // ...............)
	0x00, 0x03, 0x00, 0x45, 0x00, 0x00, 0x00, 0xb9, 0x03, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...E.......+....
	0x00, 0x00, 0x00, 0xe7, 0x06, 0x00, 0x00, 0x00, 0x00, 0x10, 0xc1, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...........+....
	0x00, 0x00, 0x00, 0xe8, 0x06, 0x00, 0x00, 0xdc, 0xe7, 0x20, 0xbe, 0x01, 0x00, 0x03, 0x00, 0x07, // ......... ......
	0x00, 0x00, 0x00, 0xe9, 0x06, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, // .......6........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, // ................
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x6f, // ...=.......p...o
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x73, 0x00, 0x00, 0x00, 0x72, // ...=.......s...r
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x7d, 0x00, 0x00, 0x00, 0x7c, // ...=.......}...|
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x7e, // ...=...........~
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x83, 0x00, 0x00, 0x00, 0x82, // ...=............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x85, 0x00, 0x00, 0x00, 0x84, // ...=............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x8a, 0x00, 0x00, 0x00, 0x89, // ...=............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x8d, 0x00, 0x00, 0x00, 0x8c, // ...=............
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x82, 0x03, 0x00, 0x00, 0x81, // ...=............
	0x03, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x86, 0x03, 0x00, 0x00, 0x85, // ...=............
	0x03, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x8a, 0x03, 0x00, 0x00, 0x89, // ...=............
	0x03, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x8d, 0x03, 0x00, 0x00, 0x8c, // ...=............
	0x03, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xf4, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, // ................
	0x00, 0x03, 0x00, 0x12, 0x01, 0x00, 0x00, 0xf3, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xf3, // ................
	0x03, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xf6, 0x03, 0x00, 0x00, 0x8d, // ................
	0x03, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xf7, 0x03, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0xf6, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1d, // ...E............
	0x00, 0x00, 0x00, 0xf9, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x86, // ...........E....
	0x03, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xfc, 0x03, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0xf7, 0x03, 0x00, 0x00, 0xf9, 0x03, 0x00, 0x00, 0x94, // ...G............
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xff, 0x03, 0x00, 0x00, 0xf7, 0x03, 0x00, 0x00, 0xfc, // ................
	0x03, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x01, 0x04, 0x00, 0x00, 0xff, // .......E........
	0x03, 0x00, 0x00, 0x53, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04, // ...S............
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xff, 0x03, 0x00, 0x00, 0x56, // .......2.......V
	0x02, 0x00, 0x00, 0xe7, 0x06, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x05, // ................
	0x04, 0x00, 0x00, 0x01, 0x04, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x04, 0x00, 0x00, 0xfc, 0x03, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x08, 0x04, 0x00, 0x00, 0xc4, // ................
	0x00, 0x00, 0x00, 0x07, 0x04, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x09, // ...........E....
	0x04, 0x00, 0x00, 0x08, 0x04, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x0b, 0x04, 0x00, 0x00, 0xfc, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x83, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0c, 0x04, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x0b, // ................
	0x04, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0d, 0x04, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x0c, 0x04, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ... ............
	0x00, 0x00, 0x00, 0x0e, 0x04, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0x0d, 0x04, 0x00, 0x00, 0xa9, // .......`........
	0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0f, 0x04, 0x00, 0x00, 0x09, 0x04, 0x00, 0x00, 0x0e, // ................
	0x04, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x12, // .......Q........
	0x04, 0x00, 0x00, 0xfc, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xe2, 0x06, 0x00, 0x00, 0x0f, 0x04, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x14, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xe2, // ...........2....
	0x06, 0x00, 0x00, 0x12, 0x04, 0x00, 0x00, 0x0e, 0x01, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x17, 0x04, 0x00, 0x00, 0xfc, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x7f, // ................
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe3, 0x06, 0x00, 0x00, 0x0f, 0x04, 0x00, 0x00, 0x0c, // ................
	0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x19, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // ...............2
	0x00, 0x00, 0x00, 0xe3, 0x06, 0x00, 0x00, 0x17, 0x04, 0x00, 0x00, 0x0e, 0x01, 0x00, 0x00, 0x50, // ...............P
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x1a, 0x04, 0x00, 0x00, 0x14, 0x04, 0x00, 0x00, 0x19, // ................
	0x04, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x97, 0x00, 0x00, 0x00, 0x02, 0x05, 0x00, 0x00, 0x73, // ...V...........s
	0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x58, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x05, // ...p...X........
	0x05, 0x00, 0x00, 0x02, 0x05, 0x00, 0x00, 0x1a, 0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x05, // ................
	0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1f, 0x04, 0x00, 0x00, 0x05, // ...O............
	0x05, 0x00, 0x00, 0x05, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x97, 0x00, 0x00, 0x00, 0x0c, 0x05, 0x00, 0x00, 0x85, // ...V............
	0x00, 0x00, 0x00, 0x83, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0e, // .......W........
	0x05, 0x00, 0x00, 0x0c, 0x05, 0x00, 0x00, 0x8a, 0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, // ...........O....
	0x00, 0x00, 0x00, 0x24, 0x04, 0x00, 0x00, 0x0e, 0x05, 0x00, 0x00, 0x0e, 0x05, 0x00, 0x00, 0x00, // ...$............
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x26, 0x04, 0x00, 0x00, 0x0e, 0x05, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x8e, // ...&............
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x28, 0x04, 0x00, 0x00, 0x24, 0x04, 0x00, 0x00, 0x26, // .......(...$...&
	0x04, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x2b, 0x04, 0x00, 0x00, 0x1f, // ...........+....
	0x04, 0x00, 0x00, 0x28, 0x04, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0x2c, // ...(...A...H...,
	0x04, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x8c, 0x02, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x3d, // ...-...........=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2d, 0x04, 0x00, 0x00, 0x2c, 0x04, 0x00, 0x00, 0xb7, // .......-...,....
	0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x2e, 0x04, 0x00, 0x00, 0x2d, 0x04, 0x00, 0x00, 0xcb, // ...E.......-....
	0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x37, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // .......7........
	0x00, 0x04, 0x00, 0x2e, 0x04, 0x00, 0x00, 0x2f, 0x04, 0x00, 0x00, 0x37, 0x04, 0x00, 0x00, 0xf8, // ......./...7....
	0x00, 0x02, 0x00, 0x2f, 0x04, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0x31, // .../...A...H...1
	0x04, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x93, 0x02, 0x00, 0x00, 0x8c, 0x01, 0x00, 0x00, 0x3d, // ...-...........=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x32, 0x04, 0x00, 0x00, 0x31, 0x04, 0x00, 0x00, 0x51, // .......2...1...Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x33, 0x04, 0x00, 0x00, 0x2b, 0x04, 0x00, 0x00, 0x00, // .......3...+....
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x34, 0x04, 0x00, 0x00, 0x2b, // ...Q.......4...+
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x35, // .......Q.......5
	0x04, 0x00, 0x00, 0x2b, 0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, // ...+.......P....
	0x00, 0x00, 0x00, 0x36, 0x04, 0x00, 0x00, 0x33, 0x04, 0x00, 0x00, 0x34, 0x04, 0x00, 0x00, 0x35, // ...6...3...4...5
	0x04, 0x00, 0x00, 0x32, 0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xf4, 0x04, 0x00, 0x00, 0xf8, // ...2............
	0x00, 0x02, 0x00, 0x37, 0x04, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0x38, // ...7...A...H...8
	0x04, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0xd3, 0x01, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0x3d, // ...-...........=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x39, 0x04, 0x00, 0x00, 0x38, 0x04, 0x00, 0x00, 0x8e, // .......9...8....
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x3b, 0x04, 0x00, 0x00, 0x2b, 0x04, 0x00, 0x00, 0x39, // .......;...+...9
	0x04, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x37, 0x01, 0x00, 0x00, 0x3c, 0x04, 0x00, 0x00, 0x2d, // ...A...7...<...-
	0x01, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x26, 0x01, 0x00, 0x00, 0x3d, // .......=...&...=
	0x04, 0x00, 0x00, 0x3c, 0x04, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x3e, // ...<...........>
	0x04, 0x00, 0x00, 0xa0, 0x02, 0x00, 0x00, 0x3d, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, // .......=...O....
	0x00, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00, 0x3e, 0x04, 0x00, 0x00, 0x3e, 0x04, 0x00, 0x00, 0x00, // ...?...>...>....
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x42, 0x04, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00, 0xfc, 0x03, 0x00, 0x00, 0x41, // ...B...?.......A
	0x00, 0x05, 0x00, 0x37, 0x01, 0x00, 0x00, 0x43, 0x04, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x8f, // ...7...C...-....
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x26, 0x01, 0x00, 0x00, 0x44, 0x04, 0x00, 0x00, 0x43, // ...=...&...D...C
	0x04, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x45, 0x04, 0x00, 0x00, 0xaa, // ...........E....
	0x02, 0x00, 0x00, 0x44, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x46, // ...D...O.......F
	0x04, 0x00, 0x00, 0x45, 0x04, 0x00, 0x00, 0x45, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ...E...E........
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x4a, // ...............J
	0x04, 0x00, 0x00, 0x8d, 0x03, 0x00, 0x00, 0x46, 0x04, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, // .......F........
	0x00, 0x00, 0x00, 0x4b, 0x04, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00, 0x4a, 0x04, 0x00, 0x00, 0x88, // ...K...?...J....
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4d, 0x04, 0x00, 0x00, 0x4b, 0x04, 0x00, 0x00, 0x42, // .......M...K...B
	0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x51, 0x04, 0x00, 0x00, 0xfc, // ...........Q....
	0x03, 0x00, 0x00, 0x4d, 0x04, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x52, // ...M...........R
	0x04, 0x00, 0x00, 0x8d, 0x03, 0x00, 0x00, 0x51, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // .......Q...Q....
	0x00, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0x52, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, // ...T...R.......Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x55, 0x04, 0x00, 0x00, 0x52, 0x04, 0x00, 0x00, 0x01, // .......U...R....
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x56, 0x04, 0x00, 0x00, 0x52, // ...Q.......V...R
	0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x57, // .......P.......W
	0x04, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0x55, 0x04, 0x00, 0x00, 0x56, 0x04, 0x00, 0x00, 0xc4, // ...T...U...V....
	0x00, 0x00, 0x00, 0x6d, 0x00, 0x04, 0x00, 0x0f, 0x01, 0x00, 0x00, 0x59, 0x04, 0x00, 0x00, 0x82, // ...m.......Y....
	0x03, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x37, 0x01, 0x00, 0x00, 0x5a, 0x04, 0x00, 0x00, 0x2d, // ...A...7...Z...-
	0x01, 0x00, 0x00, 0xc3, 0x02, 0x00, 0x00, 0x59, 0x04, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x26, // .......Y...=...&
	0x01, 0x00, 0x00, 0x5b, 0x04, 0x00, 0x00, 0x5a, 0x04, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, // ...[...Z........
	0x00, 0x00, 0x00, 0x5c, 0x04, 0x00, 0x00, 0x57, 0x04, 0x00, 0x00, 0x5b, 0x04, 0x00, 0x00, 0x51, // .......W...[...Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5e, 0x04, 0x00, 0x00, 0x5c, 0x04, 0x00, 0x00, 0x00, // .......^........
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x60, 0x04, 0x00, 0x00, 0x5c, // ...Q.......`....
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x61, // ...............a
	0x04, 0x00, 0x00, 0x60, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x62, // ...`...P.......b
	0x04, 0x00, 0x00, 0x5e, 0x04, 0x00, 0x00, 0x61, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...^...a...Q....
	0x00, 0x00, 0x00, 0x64, 0x04, 0x00, 0x00, 0x5c, 0x04, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x88, // ...d............
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x65, 0x04, 0x00, 0x00, 0x0e, 0x01, 0x00, 0x00, 0x64, // .......e.......d
	0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x66, 0x04, 0x00, 0x00, 0x62, // ...........f...b
	0x04, 0x00, 0x00, 0x65, 0x04, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x67, // ...e...........g
	0x04, 0x00, 0x00, 0xca, 0x02, 0x00, 0x00, 0x66, 0x04, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x48, // .......f...A...H
	0x01, 0x00, 0x00, 0x69, 0x04, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x8c, 0x02, 0x00, 0x00, 0x12, // ...i...-........
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6a, 0x04, 0x00, 0x00, 0x69, // ...=.......j...i
	0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x6b, 0x04, 0x00, 0x00, 0x6a, // ...P.......k...j
	0x04, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x6c, // ...............l
	0x04, 0x00, 0x00, 0x67, 0x04, 0x00, 0x00, 0x6b, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...g...k...Q....
	0x00, 0x00, 0x00, 0x6d, 0x04, 0x00, 0x00, 0x6c, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, // ...m...l.......P
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x71, 0x04, 0x00, 0x00, 0xe9, 0x06, 0x00, 0x00, 0xcb, // .......q........
	0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x72, 0x04, 0x00, 0x00, 0x67, // ...........r...g
	0x04, 0x00, 0x00, 0x71, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x73, // ...q...Q.......s
	0x04, 0x00, 0x00, 0x72, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x1d, // ...r.......P....
	0x00, 0x00, 0x00, 0x75, 0x04, 0x00, 0x00, 0x6d, 0x04, 0x00, 0x00, 0x73, 0x04, 0x00, 0x00, 0x82, // ...u...m...s....
	0x03, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0xac, 0x00, 0x00, 0x00, 0x15, 0x05, 0x00, 0x00, 0x8d, // ...V............
	0x00, 0x00, 0x00, 0x8a, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x17, // .......W........
	0x05, 0x00, 0x00, 0x15, 0x05, 0x00, 0x00, 0x75, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, // .......u...O....
	0x00, 0x00, 0x00, 0x78, 0x04, 0x00, 0x00, 0x17, 0x05, 0x00, 0x00, 0x17, 0x05, 0x00, 0x00, 0x00, // ...x............
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x48, // ...........A...H
	0x01, 0x00, 0x00, 0x7a, 0x04, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x8c, 0x02, 0x00, 0x00, 0x12, // ...z...-........
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7b, 0x04, 0x00, 0x00, 0x7a, // ...=.......{...z
	0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x7c, 0x04, 0x00, 0x00, 0x7b, // ...P.......|...{
	0x04, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x7d, // ...............}
	0x04, 0x00, 0x00, 0x67, 0x04, 0x00, 0x00, 0x7c, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...g...|...Q....
	0x00, 0x00, 0x00, 0x7e, 0x04, 0x00, 0x00, 0x7d, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, // ...~...}.......P
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x82, 0x04, 0x00, 0x00, 0xe9, 0x06, 0x00, 0x00, 0xcb, // ................
	0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x83, 0x04, 0x00, 0x00, 0x67, // ...............g
	0x04, 0x00, 0x00, 0x82, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x84, // .......Q........
	0x04, 0x00, 0x00, 0x83, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x1d, // ...........P....
	0x00, 0x00, 0x00, 0x86, 0x04, 0x00, 0x00, 0x7e, 0x04, 0x00, 0x00, 0x84, 0x04, 0x00, 0x00, 0x82, // .......~........
	0x03, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0xac, 0x00, 0x00, 0x00, 0x1e, 0x05, 0x00, 0x00, 0x8d, // ...V............
	0x00, 0x00, 0x00, 0x8a, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x20, // .......W....... 
	0x05, 0x00, 0x00, 0x1e, 0x05, 0x00, 0x00, 0x86, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, // ...........O....
	0x00, 0x00, 0x00, 0x89, 0x04, 0x00, 0x00, 0x20, 0x05, 0x00, 0x00, 0x20, 0x05, 0x00, 0x00, 0x00, // ....... ... ....
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0x8a, 0x04, 0x00, 0x00, 0x78, 0x04, 0x00, 0x00, 0x89, 0x04, 0x00, 0x00, 0x50, // .......x.......P
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x8e, 0x04, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xe9, // ................
	0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x8f, 0x04, 0x00, 0x00, 0x67, // ...............g
	0x04, 0x00, 0x00, 0x8e, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x90, // .......Q........
	0x04, 0x00, 0x00, 0x8f, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x48, // ...........A...H
	0x01, 0x00, 0x00, 0x92, 0x04, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x8c, 0x02, 0x00, 0x00, 0x10, // .......-........
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x93, 0x04, 0x00, 0x00, 0x92, // ...=............
	0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x94, 0x04, 0x00, 0x00, 0xcb, // ...P............
	0x00, 0x00, 0x00, 0x93, 0x04, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x95, // ................
	0x04, 0x00, 0x00, 0x67, 0x04, 0x00, 0x00, 0x94, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...g.......Q....
	0x00, 0x00, 0x00, 0x96, 0x04, 0x00, 0x00, 0x95, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x50, // ...............P
	0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x98, 0x04, 0x00, 0x00, 0x90, 0x04, 0x00, 0x00, 0x96, // ................
	0x04, 0x00, 0x00, 0x82, 0x03, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0xac, 0x00, 0x00, 0x00, 0x27, // .......V.......'
	0x05, 0x00, 0x00, 0x8d, 0x00, 0x00, 0x00, 0x8a, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, // ...........W....
	0x00, 0x00, 0x00, 0x29, 0x05, 0x00, 0x00, 0x27, 0x05, 0x00, 0x00, 0x98, 0x04, 0x00, 0x00, 0x4f, // ...)...'.......O
	0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x9b, 0x04, 0x00, 0x00, 0x29, 0x05, 0x00, 0x00, 0x29, // ...........)...)
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x9c, 0x04, 0x00, 0x00, 0x8a, 0x04, 0x00, 0x00, 0x9b, // ................
	0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xa0, 0x04, 0x00, 0x00, 0xcb, // ...P............
	0x00, 0x00, 0x00, 0xe9, 0x06, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xa1, // ................
	0x04, 0x00, 0x00, 0x67, 0x04, 0x00, 0x00, 0xa0, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...g.......Q....
	0x00, 0x00, 0x00, 0xa2, 0x04, 0x00, 0x00, 0xa1, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0xa4, 0x04, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x8c, // ...H.......-....
	0x02, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa5, // .......=........
	0x04, 0x00, 0x00, 0xa4, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xa6, // .......P........
	0x04, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xa5, 0x04, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x0b, // ................
	0x00, 0x00, 0x00, 0xa7, 0x04, 0x00, 0x00, 0x67, 0x04, 0x00, 0x00, 0xa6, 0x04, 0x00, 0x00, 0x51, // .......g.......Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa8, 0x04, 0x00, 0x00, 0xa7, 0x04, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xaa, 0x04, 0x00, 0x00, 0xa2, // ...P............
	0x04, 0x00, 0x00, 0xa8, 0x04, 0x00, 0x00, 0x82, 0x03, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0xac, // ...........V....
	0x00, 0x00, 0x00, 0x30, 0x05, 0x00, 0x00, 0x8d, 0x00, 0x00, 0x00, 0x8a, 0x00, 0x00, 0x00, 0x57, // ...0...........W
	0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x32, 0x05, 0x00, 0x00, 0x30, 0x05, 0x00, 0x00, 0xaa, // .......2...0....
	0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xad, 0x04, 0x00, 0x00, 0x32, // ...O...........2
	0x05, 0x00, 0x00, 0x32, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ...2............
	0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xae, 0x04, 0x00, 0x00, 0x9c, // ................
	0x04, 0x00, 0x00, 0xad, 0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xaf, // ................
	0x04, 0x00, 0x00, 0xae, 0x04, 0x00, 0x00, 0xd7, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xb1, 0x04, 0x00, 0x00, 0x67, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, // .......g........
	0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xb2, 0x04, 0x00, 0x00, 0xb1, 0x04, 0x00, 0x00, 0xcb, // ...E............
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb4, 0x04, 0x00, 0x00, 0x67, // ...Q...........g
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xb5, // ...........E....
	0x04, 0x00, 0x00, 0xb4, 0x04, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x05, 0x00, 0x45, // ...............E
	0x00, 0x00, 0x00, 0xb6, 0x04, 0x00, 0x00, 0xb2, 0x04, 0x00, 0x00, 0xb5, 0x04, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb8, 0x04, 0x00, 0x00, 0x67, 0x04, 0x00, 0x00, 0x01, // ...........g....
	0x00, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xb9, 0x04, 0x00, 0x00, 0xb8, // .......E........
	0x04, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xba, // ...........E....
	0x04, 0x00, 0x00, 0xb6, 0x04, 0x00, 0x00, 0xb9, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xbc, 0x04, 0x00, 0x00, 0x67, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xba, // .......g........
	0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xbd, 0x04, 0x00, 0x00, 0xbc, 0x04, 0x00, 0x00, 0xc4, // ...E............
	0x00, 0x00, 0x00, 0xa6, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xbe, 0x04, 0x00, 0x00, 0xba, // .......E........
	0x04, 0x00, 0x00, 0xbd, 0x04, 0x00, 0x00, 0xa8, 0x00, 0x04, 0x00, 0x45, 0x00, 0x00, 0x00, 0xbf, // ...........E....
	0x04, 0x00, 0x00, 0xbe, 0x04, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xc1, // ...........E....
	0x04, 0x00, 0x00, 0x4d, 0x04, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x04, 0x00, 0x45, // ...M...........E
	0x00, 0x00, 0x00, 0xc2, 0x04, 0x00, 0x00, 0xc1, 0x04, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x45, // ...............E
	0x00, 0x00, 0x00, 0xc3, 0x04, 0x00, 0x00, 0xbf, 0x04, 0x00, 0x00, 0xc2, 0x04, 0x00, 0x00, 0xf7, // ................
	0x00, 0x03, 0x00, 0xce, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xc3, // ................
	0x04, 0x00, 0x00, 0xc4, 0x04, 0x00, 0x00, 0xce, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xc4, // ................
	0x04, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc8, 0x04, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x40, 0x03, 0x00, 0x00, 0x42, // ...1.......@...B
	0x04, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0xc9, 0x04, 0x00, 0x00, 0x2d, // ...A...H.......-
	0x01, 0x00, 0x00, 0x14, 0x02, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...........=....
	0x00, 0x00, 0x00, 0xca, 0x04, 0x00, 0x00, 0xc9, 0x04, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xcb, 0x04, 0x00, 0x00, 0xc8, 0x04, 0x00, 0x00, 0xca, 0x04, 0x00, 0x00, 0x50, // ...............P
	0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xcc, 0x04, 0x00, 0x00, 0xcb, 0x04, 0x00, 0x00, 0xcb, // ................
	0x04, 0x00, 0x00, 0xcb, 0x04, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xcd, // ................
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x3b, 0x04, 0x00, 0x00, 0xaf, // ...........;....
	0x04, 0x00, 0x00, 0xcc, 0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xce, 0x04, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xce, 0x04, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xea, // ................
	0x06, 0x00, 0x00, 0x3b, 0x04, 0x00, 0x00, 0x37, 0x04, 0x00, 0x00, 0xcd, 0x04, 0x00, 0x00, 0xc4, // ...;...7........
	0x04, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xd0, 0x04, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0xea, 0x06, 0x00, 0x00, 0x49, 0x03, 0x00, 0x00, 0x41, // ...%.......I...A
	0x00, 0x05, 0x00, 0x2f, 0x01, 0x00, 0x00, 0xd1, 0x04, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x93, // .../.......-....
	0x02, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xd2, 0x04, 0x00, 0x00, 0xd1, // ...=............
	0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xd3, 0x04, 0x00, 0x00, 0xd2, // ...O............
	0x04, 0x00, 0x00, 0xd2, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xd4, 0x04, 0x00, 0x00, 0xd3, // ................
	0x04, 0x00, 0x00, 0x4f, 0x03, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xd7, // ...O............
	0x04, 0x00, 0x00, 0xd4, 0x04, 0x00, 0x00, 0x28, 0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, // .......(........
	0x00, 0x00, 0x00, 0xd9, 0x04, 0x00, 0x00, 0xd7, 0x04, 0x00, 0x00, 0x56, 0x03, 0x00, 0x00, 0x0c, // ...........V....
	0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xda, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, // ...............(
	0x00, 0x00, 0x00, 0xd9, 0x04, 0x00, 0x00, 0x59, 0x03, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x2f, // .......Y...A.../
	0x01, 0x00, 0x00, 0xdc, 0x04, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x93, 0x02, 0x00, 0x00, 0x3d, // .......-.......=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xdd, 0x04, 0x00, 0x00, 0xdc, 0x04, 0x00, 0x00, 0x4f, // ...............O
	0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xde, 0x04, 0x00, 0x00, 0xdd, 0x04, 0x00, 0x00, 0xdd, // ................
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x85, // ................
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xdf, 0x04, 0x00, 0x00, 0xd0, 0x04, 0x00, 0x00, 0xde, // ................
	0x04, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xe1, 0x04, 0x00, 0x00, 0x61, // ...............a
	0x03, 0x00, 0x00, 0x28, 0x04, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xe3, // ...(............
	0x04, 0x00, 0x00, 0xdf, 0x04, 0x00, 0x00, 0xe1, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x3d, 0x05, 0x00, 0x00, 0xd7, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, // ...=...........Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3f, 0x05, 0x00, 0x00, 0xd7, 0x04, 0x00, 0x00, 0x01, // .......?........
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x41, 0x05, 0x00, 0x00, 0xd7, // ...Q.......A....
	0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x42, // ...............B
	0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x3f, 0x05, 0x00, 0x00, 0x41, // .......(...?...A
	0x05, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x43, 0x05, 0x00, 0x00, 0x01, // ...........C....
	0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x3d, 0x05, 0x00, 0x00, 0x42, 0x05, 0x00, 0x00, 0x51, // ...(...=...B...Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x45, 0x05, 0x00, 0x00, 0xda, 0x04, 0x00, 0x00, 0x00, // .......E........
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x47, 0x05, 0x00, 0x00, 0xda, // ...Q.......G....
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x49, // .......Q.......I
	0x05, 0x00, 0x00, 0xda, 0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x4a, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x47, // ...J.......(...G
	0x05, 0x00, 0x00, 0x49, 0x05, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4b, // ...I...........K
	0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x45, 0x05, 0x00, 0x00, 0x4a, // .......(...E...J
	0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4c, 0x05, 0x00, 0x00, 0xe3, // ...Q.......L....
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4d, // .......Q.......M
	0x05, 0x00, 0x00, 0xe3, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x4e, 0x05, 0x00, 0x00, 0xe3, 0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, // ...N............
	0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4f, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, // .......O.......(
	0x00, 0x00, 0x00, 0x4d, 0x05, 0x00, 0x00, 0x4e, 0x05, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, // ...M...N........
	0x00, 0x00, 0x00, 0x50, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x4c, // ...P.......(...L
	0x05, 0x00, 0x00, 0x4f, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x53, // ...O...........S
	0x05, 0x00, 0x00, 0x43, 0x05, 0x00, 0x00, 0x4b, 0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x45, // ...C...K.......E
	0x00, 0x00, 0x00, 0x55, 0x05, 0x00, 0x00, 0x53, 0x05, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0xf7, // ...U...S........
	0x00, 0x03, 0x00, 0x5f, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x55, // ..._...........U
	0x05, 0x00, 0x00, 0x56, 0x05, 0x00, 0x00, 0x5f, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x56, // ...V..._.......V
	0x05, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x58, 0x05, 0x00, 0x00, 0xc4, // ...........X....
	0x00, 0x00, 0x00, 0x53, 0x05, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x5b, // ...S...........[
	0x05, 0x00, 0x00, 0xd7, 0x04, 0x00, 0x00, 0x58, 0x05, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, // .......X........
	0x00, 0x00, 0x00, 0x5e, 0x05, 0x00, 0x00, 0xda, 0x04, 0x00, 0x00, 0x58, 0x05, 0x00, 0x00, 0xf9, // ...^.......X....
	0x00, 0x02, 0x00, 0x5f, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x5f, 0x05, 0x00, 0x00, 0xf5, // ..._......._....
	0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xf8, 0x06, 0x00, 0x00, 0xda, 0x04, 0x00, 0x00, 0xce, // ................
	0x04, 0x00, 0x00, 0x5e, 0x05, 0x00, 0x00, 0x56, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, // ...^...V........
	0x00, 0x00, 0x00, 0xed, 0x06, 0x00, 0x00, 0xd7, 0x04, 0x00, 0x00, 0xce, 0x04, 0x00, 0x00, 0x5b, // ...............[
	0x05, 0x00, 0x00, 0x56, 0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x62, // ...V.......E...b
	0x05, 0x00, 0x00, 0x43, 0x05, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x45, // ...C...........E
	0x00, 0x00, 0x00, 0x63, 0x05, 0x00, 0x00, 0xb9, 0x03, 0x00, 0x00, 0x62, 0x05, 0x00, 0x00, 0xba, // ...c.......b....
	0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x65, 0x05, 0x00, 0x00, 0x4b, 0x05, 0x00, 0x00, 0xcb, // ...E...e...K....
	0x00, 0x00, 0x00, 0xa6, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x66, 0x05, 0x00, 0x00, 0x63, // .......E...f...c
	0x05, 0x00, 0x00, 0x65, 0x05, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x7b, 0x05, 0x00, 0x00, 0x00, // ...e.......{....
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x66, 0x05, 0x00, 0x00, 0x67, 0x05, 0x00, 0x00, 0x7b, // .......f...g...{
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x67, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x68, // .......g.......h
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x68, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, // .......h........
	0x00, 0x00, 0x00, 0xf4, 0x06, 0x00, 0x00, 0x44, 0x01, 0x00, 0x00, 0x67, 0x05, 0x00, 0x00, 0x76, // .......D...g...v
	0x05, 0x00, 0x00, 0x77, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x44, 0x00, 0x00, 0x00, 0xeb, // ...w.......D....
	0x06, 0x00, 0x00, 0x93, 0x00, 0x00, 0x00, 0x67, 0x05, 0x00, 0x00, 0x79, 0x05, 0x00, 0x00, 0x77, // .......g...y...w
	0x05, 0x00, 0x00, 0xb1, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x6b, 0x05, 0x00, 0x00, 0xeb, // .......E...k....
	0x06, 0x00, 0x00, 0x14, 0x02, 0x00, 0x00, 0xf6, 0x00, 0x04, 0x00, 0x7a, 0x05, 0x00, 0x00, 0x77, // ...........z...w
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x6b, 0x05, 0x00, 0x00, 0x6c, // ...........k...l
	0x05, 0x00, 0x00, 0x7a, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x6c, 0x05, 0x00, 0x00, 0x41, // ...z.......l...A
	0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0x71, 0x05, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x47, // ...H...q...-...G
	0x01, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x72, // .......=.......r
	0x05, 0x00, 0x00, 0x71, 0x05, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x2a, 0x06, 0x00, 0x00, 0x00, // ...q.......*....
	0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0x12, 0x01, 0x00, 0x00, 0xaa, 0x05, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xaa, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x2f, 0x01, 0x00, 0x00, 0xab, // .......A.../....
	0x05, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x2e, 0x01, 0x00, 0x00, 0xeb, 0x06, 0x00, 0x00, 0x3d, // ...-...........=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xac, 0x05, 0x00, 0x00, 0xab, 0x05, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xae, 0x05, 0x00, 0x00, 0xac, 0x05, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xaf, 0x05, 0x00, 0x00, 0xac, // ...Q............
	0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb0, // .......Q........
	0x05, 0x00, 0x00, 0xac, 0x05, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, // ...........P....
	0x00, 0x00, 0x00, 0xb1, 0x05, 0x00, 0x00, 0xae, 0x05, 0x00, 0x00, 0xaf, 0x05, 0x00, 0x00, 0xb0, // ................
	0x05, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x37, 0x01, 0x00, 0x00, 0xb2, // .......A...7....
	0x05, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x93, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x26, // ...-.......=...&
	0x01, 0x00, 0x00, 0xb3, 0x05, 0x00, 0x00, 0xb2, 0x05, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0xb4, 0x05, 0x00, 0x00, 0xb1, 0x05, 0x00, 0x00, 0xb3, 0x05, 0x00, 0x00, 0x4f, // ...............O
	0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xb5, 0x05, 0x00, 0x00, 0xb4, 0x05, 0x00, 0x00, 0xb4, // ................
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x83, // ................
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xb6, 0x05, 0x00, 0x00, 0xb5, 0x05, 0x00, 0x00, 0x8d, // ................
	0x03, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xb8, 0x05, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0xb6, 0x05, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, // ...E............
	0x00, 0x00, 0x00, 0xba, 0x05, 0x00, 0x00, 0xf9, 0x03, 0x00, 0x00, 0xb8, 0x05, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0xbd, 0x05, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x47, // ...H.......-...G
	0x01, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbe, // .......=........
	0x05, 0x00, 0x00, 0xbd, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbf, // ................
	0x05, 0x00, 0x00, 0xba, 0x05, 0x00, 0x00, 0xbe, 0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x45, // ...............E
	0x00, 0x00, 0x00, 0xc0, 0x05, 0x00, 0x00, 0xbf, 0x05, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xa7, // ................
	0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xc1, 0x05, 0x00, 0x00, 0xb9, 0x03, 0x00, 0x00, 0xc0, // ...E............
	0x05, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xcd, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // ................
	0x00, 0x04, 0x00, 0xc1, 0x05, 0x00, 0x00, 0xc2, 0x05, 0x00, 0x00, 0xcd, 0x05, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xc2, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0xc4, // .......A...H....
	0x05, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x47, 0x01, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00, 0x3d, // ...-...G.......=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc5, 0x05, 0x00, 0x00, 0xc4, 0x05, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc6, 0x05, 0x00, 0x00, 0xba, 0x05, 0x00, 0x00, 0xc5, // ................
	0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0xc7, 0x05, 0x00, 0x00, 0x2d, // ...A...H.......-
	0x01, 0x00, 0x00, 0x47, 0x01, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...G.......=....
	0x00, 0x00, 0x00, 0xc8, 0x05, 0x00, 0x00, 0xc7, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xc9, 0x05, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0xc8, 0x05, 0x00, 0x00, 0x85, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2e, 0x06, 0x00, 0x00, 0xc9, 0x05, 0x00, 0x00, 0xc9, // ................
	0x05, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xcb, 0x05, 0x00, 0x00, 0xc6, // ................
	0x05, 0x00, 0x00, 0x2e, 0x06, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xcc, // ................
	0x05, 0x00, 0x00, 0xed, 0x06, 0x00, 0x00, 0xcb, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xcd, // ................
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xcd, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0xf9, 0x06, 0x00, 0x00, 0x44, 0x01, 0x00, 0x00, 0xaa, 0x05, 0x00, 0x00, 0xcc, // .......D........
	0x05, 0x00, 0x00, 0xc2, 0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xcf, // ...........E....
	0x05, 0x00, 0x00, 0xba, 0x05, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xf1, // ................
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xcf, 0x05, 0x00, 0x00, 0xd0, // ................
	0x05, 0x00, 0x00, 0xf1, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xd0, 0x05, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xd2, 0x05, 0x00, 0x00, 0xb8, 0x05, 0x00, 0x00, 0xf7, // ................
	0x03, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xd3, 0x05, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0xd2, 0x05, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, // ...E............
	0x00, 0x00, 0x00, 0xd5, 0x05, 0x00, 0x00, 0xf9, 0x03, 0x00, 0x00, 0xd3, 0x05, 0x00, 0x00, 0x94, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd8, 0x05, 0x00, 0x00, 0xb8, 0x05, 0x00, 0x00, 0xd3, // ................
	0x05, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xda, 0x05, 0x00, 0x00, 0xf7, // ................
	0x03, 0x00, 0x00, 0xd3, 0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xdc, // ...........E....
	0x05, 0x00, 0x00, 0xd5, 0x05, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x45, // ...............E
	0x00, 0x00, 0x00, 0xde, 0x05, 0x00, 0x00, 0xd8, 0x05, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xa7, // ................
	0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xdf, 0x05, 0x00, 0x00, 0xdc, 0x05, 0x00, 0x00, 0xde, // ...E............
	0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xe1, 0x05, 0x00, 0x00, 0xda, // .......E........
	0x05, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0xe2, // ...........E....
	0x05, 0x00, 0x00, 0xdf, 0x05, 0x00, 0x00, 0xe1, 0x05, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xf0, // ................
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xe2, 0x05, 0x00, 0x00, 0xe3, // ................
	0x05, 0x00, 0x00, 0xf0, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xe3, 0x05, 0x00, 0x00, 0x83, // ................
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x32, 0x06, 0x00, 0x00, 0x61, 0x03, 0x00, 0x00, 0xf8, // .......2...a....
	0x06, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x33, 0x06, 0x00, 0x00, 0xc4, // ...........3....
	0x00, 0x00, 0x00, 0xd8, 0x05, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x34, // ...............4
	0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x33, 0x06, 0x00, 0x00, 0x1f, // ...........3....
	0x01, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x35, 0x06, 0x00, 0x00, 0x32, // ...........5...2
	0x06, 0x00, 0x00, 0x34, 0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x36, // ...4...........6
	0x06, 0x00, 0x00, 0xf8, 0x06, 0x00, 0x00, 0x35, 0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, // .......5........
	0x00, 0x00, 0x00, 0xe6, 0x05, 0x00, 0x00, 0x72, 0x05, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x85, // .......r........
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe8, 0x05, 0x00, 0x00, 0x79, 0x01, 0x00, 0x00, 0xda, // ...........y....
	0x05, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe9, 0x05, 0x00, 0x00, 0xe6, // ................
	0x05, 0x00, 0x00, 0xe8, 0x05, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xeb, // ................
	0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xd5, 0x05, 0x00, 0x00, 0x72, // ...............r
	0x05, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xec, 0x05, 0x00, 0x00, 0xe9, // ................
	0x05, 0x00, 0x00, 0xeb, 0x05, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xed, // ................
	0x05, 0x00, 0x00, 0x36, 0x06, 0x00, 0x00, 0xec, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1d, // ...6............
	0x00, 0x00, 0x00, 0xef, 0x05, 0x00, 0x00, 0xf9, 0x06, 0x00, 0x00, 0xed, 0x05, 0x00, 0x00, 0xf9, // ................
	0x00, 0x02, 0x00, 0xf0, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xf0, 0x05, 0x00, 0x00, 0xf5, // ................
	0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xfb, 0x06, 0x00, 0x00, 0xf9, 0x06, 0x00, 0x00, 0xd0, // ................
	0x05, 0x00, 0x00, 0xef, 0x05, 0x00, 0x00, 0xe3, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xf1, // ................
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xf1, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0xfa, 0x06, 0x00, 0x00, 0xf9, 0x06, 0x00, 0x00, 0xcd, 0x05, 0x00, 0x00, 0xfb, // ................
	0x06, 0x00, 0x00, 0xf0, 0x05, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf4, // ................
	0x05, 0x00, 0x00, 0xb6, 0x05, 0x00, 0x00, 0xb6, 0x05, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xf7, 0x05, 0x00, 0x00, 0xf4, 0x05, 0x00, 0x00, 0xf4, 0x05, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0xf8, 0x05, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x8b, // ...H.......-....
	0x01, 0x00, 0x00, 0x8c, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf9, // .......=........
	0x05, 0x00, 0x00, 0xf8, 0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0xfa, // .......A...H....
	0x05, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x8b, 0x01, 0x00, 0x00, 0x8c, 0x01, 0x00, 0x00, 0x3d, // ...-...........=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xfb, 0x05, 0x00, 0x00, 0xfa, 0x05, 0x00, 0x00, 0x85, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xfc, 0x05, 0x00, 0x00, 0xf9, 0x05, 0x00, 0x00, 0xfb, // ................
	0x05, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0xfd, 0x05, 0x00, 0x00, 0x2d, // ...A...H.......-
	0x01, 0x00, 0x00, 0x8b, 0x01, 0x00, 0x00, 0x8c, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...........=....
	0x00, 0x00, 0x00, 0xfe, 0x05, 0x00, 0x00, 0xfd, 0x05, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xff, 0x05, 0x00, 0x00, 0xfc, 0x05, 0x00, 0x00, 0xfe, 0x05, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x8b, // ...H.......-....
	0x01, 0x00, 0x00, 0x8c, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, // .......=........
	0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, // ................
	0x06, 0x00, 0x00, 0xff, 0x05, 0x00, 0x00, 0x01, 0x06, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x03, 0x06, 0x00, 0x00, 0xf7, 0x05, 0x00, 0x00, 0x02, 0x06, 0x00, 0x00, 0x83, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04, 0x06, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x03, // ................
	0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x05, 0x06, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x04, 0x06, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xc4, // ...+............
	0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x08, 0x06, 0x00, 0x00, 0x05, // ................
	0x06, 0x00, 0x00, 0x05, 0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0a, // ................
	0x06, 0x00, 0x00, 0xf4, 0x05, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x0b, 0x06, 0x00, 0x00, 0x08, 0x06, 0x00, 0x00, 0x0a, 0x06, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x0f, 0x06, 0x00, 0x00, 0xf8, 0x06, 0x00, 0x00, 0xed, // ................
	0x06, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x2f, 0x01, 0x00, 0x00, 0x12, 0x06, 0x00, 0x00, 0x2d, // ...A.../.......-
	0x01, 0x00, 0x00, 0xa9, 0x01, 0x00, 0x00, 0xeb, 0x06, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, // ...........=....
	0x00, 0x00, 0x00, 0x13, 0x06, 0x00, 0x00, 0x12, 0x06, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, // ...........O....
	0x00, 0x00, 0x00, 0x14, 0x06, 0x00, 0x00, 0x13, 0x06, 0x00, 0x00, 0x13, 0x06, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0x15, 0x06, 0x00, 0x00, 0xfa, 0x06, 0x00, 0x00, 0x14, 0x06, 0x00, 0x00, 0x8e, // ................
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x17, 0x06, 0x00, 0x00, 0x15, 0x06, 0x00, 0x00, 0x0b, // ................
	0x06, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x2f, 0x01, 0x00, 0x00, 0x19, 0x06, 0x00, 0x00, 0x2d, // ...A.../.......-
	0x01, 0x00, 0x00, 0x8b, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x1a, // .......=........
	0x06, 0x00, 0x00, 0x19, 0x06, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1b, // .......O........
	0x06, 0x00, 0x00, 0x1a, 0x06, 0x00, 0x00, 0x1a, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1d, // ................
	0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x0f, 0x06, 0x00, 0x00, 0x1b, // .......2........
	0x06, 0x00, 0x00, 0x17, 0x06, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0x1e, // .......A...H....
	0x06, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0xb6, 0x01, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0x3d, // ...-...........=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1f, 0x06, 0x00, 0x00, 0x1e, 0x06, 0x00, 0x00, 0xb7, // ................
	0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x20, 0x06, 0x00, 0x00, 0x1f, 0x06, 0x00, 0x00, 0xcb, // ...E... ........
	0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x29, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // .......)........
	0x00, 0x04, 0x00, 0x20, 0x06, 0x00, 0x00, 0x21, 0x06, 0x00, 0x00, 0x27, 0x06, 0x00, 0x00, 0xf8, // ... ...!...'....
	0x00, 0x02, 0x00, 0x27, 0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x2a, 0x06, 0x00, 0x00, 0xf8, // ...'.......*....
	0x00, 0x02, 0x00, 0x21, 0x06, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0x22, // ...!...A...H..."
	0x06, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0xb6, 0x01, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0x3d, // ...-...........=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x23, 0x06, 0x00, 0x00, 0x22, 0x06, 0x00, 0x00, 0x50, // .......#..."...P
	0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x24, 0x06, 0x00, 0x00, 0x23, 0x06, 0x00, 0x00, 0x23, // .......$...#...#
	0x06, 0x00, 0x00, 0x23, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x3c, // ...#...........<
	0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x1d, 0x06, 0x00, 0x00, 0xed, // ................
	0x06, 0x00, 0x00, 0x24, 0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x2a, 0x06, 0x00, 0x00, 0xf8, // ...$.......*....
	0x00, 0x02, 0x00, 0x29, 0x06, 0x00, 0x00, 0xff, 0x00, 0x01, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x2a, // ...)...........*
	0x06, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xfc, 0x06, 0x00, 0x00, 0x1d, // ................
	0x06, 0x00, 0x00, 0x27, 0x06, 0x00, 0x00, 0x3c, 0x06, 0x00, 0x00, 0x21, 0x06, 0x00, 0x00, 0x81, // ...'...<...!....
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x76, 0x05, 0x00, 0x00, 0xf4, 0x06, 0x00, 0x00, 0xfc, // .......v........
	0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x77, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x77, // .......w.......w
	0x05, 0x00, 0x00, 0x80, 0x00, 0x05, 0x00, 0x44, 0x00, 0x00, 0x00, 0x79, 0x05, 0x00, 0x00, 0xeb, // .......D...y....
	0x06, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x68, 0x05, 0x00, 0x00, 0xf8, // ...........h....
	0x00, 0x02, 0x00, 0x7a, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x7b, 0x05, 0x00, 0x00, 0xf8, // ...z.......{....
	0x00, 0x02, 0x00, 0x7b, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xf3, // ...{............
	0x06, 0x00, 0x00, 0x44, 0x01, 0x00, 0x00, 0x5f, 0x05, 0x00, 0x00, 0xf4, 0x06, 0x00, 0x00, 0x7a, // ...D..._.......z
	0x05, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x7e, 0x05, 0x00, 0x00, 0x43, // .......E...~...C
	0x05, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x7f, // ...........E....
	0x05, 0x00, 0x00, 0xb9, 0x03, 0x00, 0x00, 0x7e, 0x05, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x8f, // .......~........
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x7f, 0x05, 0x00, 0x00, 0x80, // ................
	0x05, 0x00, 0x00, 0x8f, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x80, 0x05, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x82, 0x05, 0x00, 0x00, 0xf9, 0x03, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x83, 0x05, 0x00, 0x00, 0xf9, // ...Q............
	0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x84, // .......Q........
	0x05, 0x00, 0x00, 0xf9, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, // ...........P....
	0x00, 0x00, 0x00, 0x85, 0x05, 0x00, 0x00, 0x82, 0x05, 0x00, 0x00, 0x83, 0x05, 0x00, 0x00, 0x84, // ................
	0x05, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x37, 0x01, 0x00, 0x00, 0x86, // .......A...7....
	0x05, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x93, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x26, // ...-.......=...&
	0x01, 0x00, 0x00, 0x87, 0x05, 0x00, 0x00, 0x86, 0x05, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0x88, 0x05, 0x00, 0x00, 0x85, 0x05, 0x00, 0x00, 0x87, 0x05, 0x00, 0x00, 0x4f, // ...............O
	0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x89, 0x05, 0x00, 0x00, 0x88, 0x05, 0x00, 0x00, 0x88, // ................
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, // ................
	0x00, 0x06, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x8a, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, // ...............E
	0x00, 0x00, 0x00, 0x89, 0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4e, // .......Q.......N
	0x06, 0x00, 0x00, 0x8a, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x4f, 0x06, 0x00, 0x00, 0x8a, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf7, // ...O............
	0x00, 0x03, 0x00, 0x81, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0x12, // ................
	0x01, 0x00, 0x00, 0x5d, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x5d, 0x06, 0x00, 0x00, 0x0c, // ...].......]....
	0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5e, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, // .......^........
	0x00, 0x00, 0x00, 0x4e, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5f, // ...N..........._
	0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x4f, 0x06, 0x00, 0x00, 0xbc, // ...........O....
	0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x61, 0x06, 0x00, 0x00, 0x5f, 0x06, 0x00, 0x00, 0xc7, // ...E...a..._....
	0x00, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x63, 0x06, 0x00, 0x00, 0x5e, // .......E...c...^
	0x06, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x64, // ...........E...d
	0x06, 0x00, 0x00, 0x61, 0x06, 0x00, 0x00, 0x63, 0x06, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x66, // ...a...c.......f
	0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x64, 0x06, 0x00, 0x00, 0x65, // ...........d...e
	0x06, 0x00, 0x00, 0x66, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x65, 0x06, 0x00, 0x00, 0xf9, // ...f.......e....
	0x00, 0x02, 0x00, 0x81, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x66, 0x06, 0x00, 0x00, 0x83, // ...........f....
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x69, 0x06, 0x00, 0x00, 0x5f, 0x06, 0x00, 0x00, 0x5e, // .......i..._...^
	0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6c, 0x06, 0x00, 0x00, 0x5f, // ...........l..._
	0x06, 0x00, 0x00, 0x5e, 0x06, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6d, // ...^...........m
	0x06, 0x00, 0x00, 0x69, 0x06, 0x00, 0x00, 0x6c, 0x06, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x45, // ...i...l.......E
	0x00, 0x00, 0x00, 0x6e, 0x06, 0x00, 0x00, 0x4f, 0x06, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xa9, // ...n...O........
	0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6f, 0x06, 0x00, 0x00, 0x6e, 0x06, 0x00, 0x00, 0xf6, // .......o...n....
	0x00, 0x00, 0x00, 0xf7, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x71, // ...............q
	0x06, 0x00, 0x00, 0xf9, 0x00, 0x00, 0x00, 0x6d, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, // .......m........
	0x00, 0x00, 0x00, 0x74, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x71, // ...t.......2...q
	0x06, 0x00, 0x00, 0x6d, 0x06, 0x00, 0x00, 0xe8, 0x06, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x45, // ...m...........E
	0x00, 0x00, 0x00, 0x75, 0x06, 0x00, 0x00, 0x4f, 0x06, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x7f, // ...u...O........
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x77, 0x06, 0x00, 0x00, 0x6d, 0x06, 0x00, 0x00, 0xa9, // .......w...m....
	0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x79, 0x06, 0x00, 0x00, 0x75, 0x06, 0x00, 0x00, 0x77, // .......y...u...w
	0x06, 0x00, 0x00, 0x6d, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7b, // ...m...........{
	0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x74, 0x06, 0x00, 0x00, 0x79, // .......2...t...y
	0x06, 0x00, 0x00, 0x6f, 0x06, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x7c, // ...o.......E...|
	0x06, 0x00, 0x00, 0x4e, 0x06, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, // ...N............
	0x00, 0x00, 0x00, 0x7e, 0x06, 0x00, 0x00, 0x7b, 0x06, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, // ...~...{........
	0x00, 0x00, 0x00, 0x80, 0x06, 0x00, 0x00, 0x7c, 0x06, 0x00, 0x00, 0x7e, 0x06, 0x00, 0x00, 0x7b, // .......|...~...{
	0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x81, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x81, // ................
	0x06, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xef, 0x06, 0x00, 0x00, 0xcb, // ................
	0x00, 0x00, 0x00, 0x65, 0x06, 0x00, 0x00, 0x80, 0x06, 0x00, 0x00, 0x66, 0x06, 0x00, 0x00, 0x81, // ...e.......f....
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x51, 0x06, 0x00, 0x00, 0x0e, 0x01, 0x00, 0x00, 0xef, // .......Q........
	0x06, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x52, 0x06, 0x00, 0x00, 0x8a, // ...Q.......R....
	0x05, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x9e, 0x06, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0x12, 0x01, 0x00, 0x00, 0x89, 0x06, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0x89, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8a, // ................
	0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x52, 0x06, 0x00, 0x00, 0x83, // ...........R....
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8c, 0x06, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x8a, // ................
	0x06, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x8d, 0x06, 0x00, 0x00, 0x8c, // .......E........
	0x06, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x91, 0x06, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x8d, 0x06, 0x00, 0x00, 0x8e, 0x06, 0x00, 0x00, 0x91, // ................
	0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x8e, 0x06, 0x00, 0x00, 0xbe, 0x00, 0x05, 0x00, 0x45, // ...............E
	0x00, 0x00, 0x00, 0x8f, 0x06, 0x00, 0x00, 0x52, 0x06, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xa9, // .......R........
	0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x90, 0x06, 0x00, 0x00, 0x8f, 0x06, 0x00, 0x00, 0xcb, // ................
	0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x9e, 0x06, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0x91, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x94, // ................
	0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00, 0x8a, // .......2........
	0x06, 0x00, 0x00, 0xd3, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x96, // ................
	0x06, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x8a, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x97, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x96, // ................
	0x06, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x98, 0x06, 0x00, 0x00, 0x94, // ................
	0x06, 0x00, 0x00, 0x97, 0x06, 0x00, 0x00, 0xbe, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x99, // ...........E....
	0x06, 0x00, 0x00, 0x52, 0x06, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, // ...R............
	0x00, 0x00, 0x00, 0xe5, 0x06, 0x00, 0x00, 0x94, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x9c, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xe5, // ...........2....
	0x06, 0x00, 0x00, 0x97, 0x06, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x9d, 0x06, 0x00, 0x00, 0x99, 0x06, 0x00, 0x00, 0x98, 0x06, 0x00, 0x00, 0x9c, // ................
	0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x9e, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x9e, // ................
	0x06, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf0, 0x06, 0x00, 0x00, 0x90, // ................
	0x06, 0x00, 0x00, 0x8e, 0x06, 0x00, 0x00, 0x9d, 0x06, 0x00, 0x00, 0x91, 0x06, 0x00, 0x00, 0x50, // ...............P
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x54, 0x06, 0x00, 0x00, 0x51, 0x06, 0x00, 0x00, 0xf0, // .......T...Q....
	0x06, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x97, 0x00, 0x00, 0x00, 0xa6, 0x06, 0x00, 0x00, 0x7f, // ...V............
	0x00, 0x00, 0x00, 0x7d, 0x00, 0x00, 0x00, 0x58, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xa9, // ...}...X........
	0x06, 0x00, 0x00, 0xa6, 0x06, 0x00, 0x00, 0x54, 0x06, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xcb, // .......T........
	0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x46, 0x06, 0x00, 0x00, 0xa9, // ...O.......F....
	0x06, 0x00, 0x00, 0xa9, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x48, 0x06, 0x00, 0x00, 0xed, // ...........H....
	0x06, 0x00, 0x00, 0x46, 0x06, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0x49, // ...F...A...H...I
	0x06, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0xd3, 0x01, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0x3d, // ...-...........=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4a, 0x06, 0x00, 0x00, 0x49, 0x06, 0x00, 0x00, 0x8e, // .......J...I....
	0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x4b, 0x06, 0x00, 0x00, 0x48, 0x06, 0x00, 0x00, 0x4a, // .......K...H...J
	0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x8e, 0x05, 0x00, 0x00, 0xf3, // ................
	0x06, 0x00, 0x00, 0x4b, 0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x8f, 0x05, 0x00, 0x00, 0xf8, // ...K............
	0x00, 0x02, 0x00, 0x8f, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, 0x00, 0x00, 0x00, 0xf5, // ................
	0x06, 0x00, 0x00, 0xf3, 0x06, 0x00, 0x00, 0x7b, 0x05, 0x00, 0x00, 0x8e, 0x05, 0x00, 0x00, 0x9e, // .......{........
	0x06, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x91, 0x05, 0x00, 0x00, 0x50, // .......E.......P
	0x05, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x95, 0x05, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x91, 0x05, 0x00, 0x00, 0x92, 0x05, 0x00, 0x00, 0x95, // ................
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x92, 0x05, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0x94, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0xdf, // ...........2....
	0x04, 0x00, 0x00, 0xe1, 0x04, 0x00, 0x00, 0xf5, 0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x95, // ................
	0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x95, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0xf6, 0x06, 0x00, 0x00, 0xf5, 0x06, 0x00, 0x00, 0x8f, 0x05, 0x00, 0x00, 0x94, // ................
	0x05, 0x00, 0x00, 0x92, 0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xec, // .......Q........
	0x04, 0x00, 0x00, 0xf6, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xee, 0x04, 0x00, 0x00, 0xf6, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf0, 0x04, 0x00, 0x00, 0xf6, 0x06, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0xf1, 0x04, 0x00, 0x00, 0x2d, // ...A...H.......-
	0x01, 0x00, 0x00, 0x93, 0x02, 0x00, 0x00, 0x8c, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...........=....
	0x00, 0x00, 0x00, 0xf2, 0x04, 0x00, 0x00, 0xf1, 0x04, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, // ...........P....
	0x00, 0x00, 0x00, 0xe6, 0x06, 0x00, 0x00, 0xec, 0x04, 0x00, 0x00, 0xee, 0x04, 0x00, 0x00, 0xf0, // ................
	0x04, 0x00, 0x00, 0xf2, 0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xf4, 0x04, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xf4, 0x04, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x05, // ................
	0x07, 0x00, 0x00, 0x36, 0x04, 0x00, 0x00, 0x2f, 0x04, 0x00, 0x00, 0xe6, 0x06, 0x00, 0x00, 0x95, // ...6.../........
	0x05, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x9d, 0x03, 0x00, 0x00, 0x05, 0x07, 0x00, 0x00, 0xfd, // ...>............
	0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00, 0x00, 0x00, 0xb0, 0x02,                               // ...8.......
};
static const bgfx::EmbeddedShader fs_ball_spherical_nodecal_st = BGFX_EMBEDDED_SHADER(fs_ball_spherical_nodecal_st);

// DMD Shaders

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of vertex shader from vs_dmd.sc to vs_dmd_noworld with options: 
static const uint8_t vs_dmd_noworld_mtl[978] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x8f, 0x07, 0x01, 0x00, 0x08, 0x67, // VSH............g
	0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x02, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // lassPad.........
	0x00, 0xa5, 0x03, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, // .....#include <m
	0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, // etal_stdlib>.#in
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, // clude <simd/simd
	0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, // .h>..using names
	0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, // pace metal;..str
	0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, // uct _Global.{.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, //   float4 glassPa
	0x64, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, // d;.};..struct xl
	0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, // atMtlMain_out.{.
	0x09, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x6d, 0x65, 0x74, 0x61, // .float bgfx_meta
	0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x20, 0x5b, 0x5b, 0x70, 0x6f, // l_pointSize [[po
	0x69, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5d, 0x5d, 0x20, 0x3d, 0x20, 0x31, 0x3b, 0x0a, // int_size]] = 1;.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x65, 0x6e, 0x74, 0x72, //     float2 _entr
	0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x74, // yPointOutput_v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, // excoord0 [[user(
	0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // locn0)]];.    fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, // oat2 _entryPoint
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // Output_v_texcoor
	0x64, 0x31, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, // d1 [[user(locn1)
	0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x67, // ]];.    float4 g
	0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x5b, 0x5b, 0x70, 0x6f, 0x73, // l_Position [[pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, // ition]];.};..str
	0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, // uct xlatMtlMain_
	0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // in.{.    float3 
	0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x5b, 0x5b, 0x61, 0x74, 0x74, // a_position [[att
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, // ribute(0)]];.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, //  float2 a_texcoo
	0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x28, // rd0 [[attribute(
	0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, // 1)]];.};..vertex
	0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, //  xlatMtlMain_out
	0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, //  xlatMtlMain(xla
	0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, // tMtlMain_in in [
	0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, // [stage_in]], con
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, // stant _Global& _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, // mtl_u [[buffer(0
	0x29, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // )]]).{.    xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, // tlMain_out out =
	0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x67, 0x6c, 0x5f, //  {};.    out.gl_
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // Position = float
	0x34, 0x28, 0x69, 0x6e, 0x2e, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, // 4(in.a_position.
	0x78, 0x79, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, // xy, 1.0, 1.0);. 
	0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, //    out._entryPoi
	0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // ntOutput_v_texco
	0x6f, 0x72, 0x64, 0x30, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, // ord0 = in.a_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x5f, // oord0;.    out._
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, // entryPointOutput
	0x5f, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x3d, 0x20, 0x28, // _v_texcoord1 = (
	0x69, 0x6e, 0x2e, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2a, // in.a_texcoord0 *
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x5f, //  float2((1.0 + _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x78, // mtl_u.glassPad.x
	0x29, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, 0x6c, 0x61, 0x73, 0x73, // ) + _mtl_u.glass
	0x50, 0x61, 0x64, 0x2e, 0x79, 0x2c, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x5f, 0x6d, // Pad.y, (1.0 + _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x7a, 0x29, // tl_u.glassPad.z)
	0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, //  + _mtl_u.glassP
	0x61, 0x64, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // ad.w)) - float2(
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, // _mtl_u.glassPad.
	0x78, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, // x, _mtl_u.glassP
	0x61, 0x64, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // ad.z);.    retur
	0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x02, 0x01, 0x00, 0x10, 0x00, // n out;.}........
	0x10, 0x00,                                                                                     // ..
};
static const uint8_t vs_dmd_noworld_essl[6471] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x34, 0x19, // VSH...........4.
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // s.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x75, 0x74, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, // arying out.preci
	0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // sion highp float
	0x3b, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, // ;.precision high
	0x70, 0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, // p int;.#define s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // hadow2D(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // e(_sampler, _coo
	0x72, 0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, // rd).#define shad
	0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ow2DProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // r, _coord) textu
	0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // reProj(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, //  _coord).attribu
	0x74, 0x65, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, // te vec3 a_positi
	0x6f, 0x6e, 0x3b, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x76, 0x65, // on;.attribute ve
	0x63, 0x32, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, // c2 a_texcoord0;.
	0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, // varying vec2 v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // excoord0;.varyin
	0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // g vec2 v_texcoor
	0x64, 0x31, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, // d1;.vec3 instMul
	0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, // (vec3 _vec, mat3
	0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _mtx) { return 
	0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, // ( (_vec) * (_mtx
	0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, // ) ); }.vec3 inst
	0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, // Mul(mat3 _mtx, v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // ec3 _vec) { retu
	0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, // rn ( (_mtx) * (_
	0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, // vec) ); }.vec4 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, // nstMul(vec4 _vec
	0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // , mat4 _mtx) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, // eturn ( (_vec) *
	0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, //  (_mtx) ); }.vec
	0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, // 4 instMul(mat4 _
	0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, // mtx, vec4 _vec) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, // { return ( (_mtx
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // ) * (_vec) ); }.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // float rcp(float 
	0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, // _a) { return 1.0
	0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, // /_a; }.vec2 rcp(
	0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // vec2 _a) { retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, // n vec2(1.0)/_a; 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, // }.vec3 rcp(vec3 
	0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _a) { return vec
	0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, // 3(1.0)/_a; }.vec
	0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, // 4 rcp(vec4 _a) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, //  return vec4(1.0
	0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, // )/_a; }.vec2 vec
	0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, // 2_splat(float _x
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // ) { return vec2(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // _x, _x); }.vec3 
	0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // vec3_splat(float
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, //  _x) { return ve
	0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, // c3(_x, _x, _x); 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, // }.vec4 vec4_spla
	0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // t(float _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // turn vec4(_x, _x
	0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, // , _x, _x); }.uve
	0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, // c2 uvec2_splat(u
	0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // int _x) { return
	0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, //  uvec2(_x, _x); 
	0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, // }.uvec3 uvec3_sp
	0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // lat(uint _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, // eturn uvec3(_x, 
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, // _x, _x); }.uvec4
	0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, //  uvec4_splat(uin
	0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, // t _x) { return u
	0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // vec4(_x, _x, _x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, //  _x); }.mat4 mtx
	0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, // FromRows(vec4 _0
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // , vec4 _1, vec4 
	0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // _2, vec4 _3).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, // eturn transpose(
	0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, // mat4(_0, _1, _2,
	0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, //  _3) );.}.mat4 m
	0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, // txFromCols(vec4 
	0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, // _0, vec4 _1, vec
	0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, // 4 _2, vec4 _3).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, // .return mat4(_0,
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, //  _1, _2, _3);.}.
	0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, // mat3 mtxFromRows
	0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // (vec3 _0, vec3 _
	0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 1, vec3 _2).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, // turn transpose(m
	0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, // at3(_0, _1, _2) 
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, // );.}.mat3 mtxFro
	0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, // mCols(vec3 _0, v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, // ec3 _1, vec3 _2)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, // .{.return mat3(_
	0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, // 0, _1, _2);.}.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // iform vec4 u_vie
	0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // wRect;.uniform v
	0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, // ec4 u_viewTexel;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // view;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, // t4 u_invView;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, // iform mat4 u_pro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // u_invProj;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, // rm mat4 u_viewPr
	0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // oj;.uniform mat4
	0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, //  u_invViewProj;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, // uniform mat4 u_m
	0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // odel[32];.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, // m mat4 u_modelVi
	0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // ew;.uniform mat4
	0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, //  u_modelViewProj
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, // ;.uniform vec4 u
	0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // _alphaRef4;.floa
	0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, // t sqr( float v).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, // {.return v*v;.}.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, // vec2 sqr( vec2 v
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, // ).{.return v*v;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, // }.vec3 sqr( vec3
	0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, //  v).{.return v*v
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, // ;.}.vec3 mul_w1(
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, //  vec3 v, mat4 m)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, // .{.return v.x*m[
	0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, // 0].xyz + (v.y*m[
	0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, // 1].xyz + (v.z*m[
	0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, // 2].xyz + m[3].xy
	0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, // z));.}.float aco
	0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, // s_approx_divPI( 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float v).{.float
	0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, //  x = abs(v);.if(
	0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, // 1. - x <= 0.0000
	0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, // 6103515625).retu
	0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, // rn (v >= 0.) ? 0
	0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, // . : 1.;.float re
	0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, // s = ((-0.155972/
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, // 5) * x + (1.5646
	0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, // 7/3.141592653589
	0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, // 7932384626433832
	0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, // 795) ) * sqrt(1.
	0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, //  - x);.return (v
	0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, //  >= 0.) ? res : 
	0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // 1. - res;.}.floa
	0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, // t atan2_approx_d
	0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, // iv2PI( float y, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float x).{.float
	0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, //  abs_y = abs(y);
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, // .float abs_x = a
	0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, // bs(x);.if(abs_x 
	0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, // <= 0.00006103515
	0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, // 625 && abs_y <= 
	0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, // 0.00006103515625
	0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, // ).return 0.;.flo
	0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, // at r = (abs_x - 
	0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, // abs_y) / (abs_x 
	0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // + abs_y);.float 
	0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, // angle = ((x < 0.
	0x29, 0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, // ) ? (3./8.) : (1
	0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, // ./8.)).+ (0.2118
	0x36, 0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, // 68 /(2.*3.141592
	0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, // 6535897932384626
	0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, // 433832795) * r *
	0x20, 0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, //  r - 0.987305 /(
	0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, // 2.*3.14159265358
	0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, // 9793238462643383
	0x32, 0x37, 0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, // 2795)) * ((x < 0
	0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, // .) ? -r : r);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, // turn (y < 0.) ? 
	0x2d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, // -angle : angle;.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, // }.float asin_app
	0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // rox_divPI( float
	0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, //  v).{.float x = 
	0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, // abs(v);.if(1. - 
	0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, // x <= 0.000061035
	0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, // 15625).return (v
	0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, //  >= 0.) ? 0.5 : 
	0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, // -0.5;.float res 
	0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, // = ((-0.155972/3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, //  * x + (1.56467/
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, // 5) ) * sqrt(1. -
	0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, //  x);.return (v >
	0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, // = 0.) ? 0.5 - re
	0x73, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, // s : -0.5 + res;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, // }.vec2 ray_to_eq
	0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, // uirectangular_uv
	0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // ( vec3 ray).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, // turn vec2(.0.5 +
	0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, //  atan2_approx_di
	0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, // v2PI(ray.y, ray.
	0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, // x),.acos_approx_
	0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, // divPI(ray.z));.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, // .float InvsRGB( 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, // float color).{.i
	0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, // f (color <= 0.04
	0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // 045).return colo
	0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, // r * (1.0/12.92);
	0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, // .else.return pow
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, // (color * (1.0/1.
	0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, // 055) + (0.055/1.
	0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // 055), 2.4);.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, // oat InvRec709( f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, // loat color).{.if
	0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, //  (color <= 0.081
	0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // ).return color *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, //  (1.0/4.5);.else
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .return pow(colo
	0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, // r * (1.0/1.099) 
	0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, // + (0.099/1.099),
	0x20, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, //  1.0/0.45);.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, // oat InvGamma( fl
	0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // oat color).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // urn InvsRGB(colo
	0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, // r);.}.vec3 InvGa
	0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // mma( vec3 color)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, // .{.return vec3(I
	0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, // nvGamma(color.x)
	0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // ,InvGamma(color.
	0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // y),InvGamma(colo
	0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, // r.z));.}.vec3 In
	0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // vToneMap( vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, // olor).{.float in
	0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, // v_2bh = 0.5/0.25
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, // ;.float bh = 4.0
	0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, // *0.25 - 2.0;.ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, // urn (color - 1.0
	0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, //  + sqrt(color*(c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, // olor + bh) + 1.0
	0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // ))*inv_2bh;.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // oat sRGB( float 
	0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, // f).{.float s;.if
	0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, //  (f <= 0.0031308
	0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, // ).s = 12.92 * f;
	0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, // .else.s = 1.055 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, // * pow(f, 1.0/2.4
	0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // ) - 0.055;.retur
	0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, // n s;.}.float Rec
	0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, // 709( float f).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, // float s;.if (f <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, // = 0.018).s = 4.5
	0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, //  * f;.else.s = 1
	0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, // .099 * pow(f, 0.
	0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, // 45) - 0.099;.ret
	0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, // urn s;.}.float F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, // BGamma( float co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, // lor).{.return sR
	0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // GB(color);.}.vec
	0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, // 2 FBGamma( vec2 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // color).{.return 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, // vec2(FBGamma(col
	0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, // or.x),FBGamma(co
	0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // lor.y));.}.vec3 
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, // FBGamma( vec3 co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, // lor).{.return ve
	0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // c3(FBGamma(color
	0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .x),FBGamma(colo
	0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, // r.y),FBGamma(col
	0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, // or.z));.}.vec3 F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // BGamma22( vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // olor).{.return v
	0x65, 0x63, 0x33, 0x28, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, // ec3(pow(color.x,
	0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, //  1.0/2.2),pow(co
	0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, // lor.y, 1.0/2.2),
	0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, // pow(color.z, 1.0
	0x2f, 0x32, 0x2e, 0x32, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // /2.2));.}.float 
	0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // FBToneMap( float
	0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, //  l).{.return l *
	0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, //  ((l*0.25 + 1.0)
	0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, //  / (l + 1.0));.}
	0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, // .vec2 FBToneMap(
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, //  vec2 color).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, // loat l = dot(col
	0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, // or,vec2(0.176204
	0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, // +0.0108109*0.5,0
	0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, // .812985+0.010810
	0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 9*0.5));.return 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, // color * ((l*0.25
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, //  + 1.0) / (l + 1
	0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, // .0));.}.vec3 FBT
	0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, // oneMap( vec3 col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, // or).{.float l = 
	0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, // dot(color,vec3(0
	0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, // .176204,0.812985
	0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, // ,0.0108109));.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, // turn color * ((l
	0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, // *0.25 + 1.0) / (
	0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // l + 1.0));.}.vec
	0x34, 0x20, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, // 4 Additive( vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, //  cBase, vec4 cBl
	0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, // end, float perce
	0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, // nt).{.return cBa
	0x73, 0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, // se + cBlend*perc
	0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, // ent;.}.vec3 Scre
	0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // en ( vec3 cBase,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, //  vec3 cBlend).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, // return 1.0 - (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // 0 - cBase) * (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // 0 - cBlend);.}.v
	0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, // ec4 Screen ( vec
	0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // 4 cBase, vec4 cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, // lend).{.return 1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, // .0 - (1.0 - cBas
	0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, // e) * (1.0 - cBle
	0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, // nd);.}.vec3 Scre
	0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, // enHDR ( vec3 cBa
	0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // se, vec3 cBlend)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, // .{.return max(1.
	0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // 0 - (1.0 - cBase
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // ) * (1.0 - cBlen
	0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, // d), vec3(0.,0.,0
	0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, // .));.}.vec4 Scre
	0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, // enHDR ( vec4 cBa
	0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // se, vec4 cBlend)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, // .{.return max(1.
	0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // 0 - (1.0 - cBase
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // ) * (1.0 - cBlen
	0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, // d), vec4(0.,0.,0
	0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, // .,0.));.}.vec4 M
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // ultiply ( vec4 c
	0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // Base, vec4 cBlen
	0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, // d, float percent
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // ).{.return cBase
	0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, //  * cBlend*percen
	0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, // t;.}.vec4 Overla
	0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, // y ( vec4 cBase, 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, // vec4 cBlend).{.v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, // ec4 cNew = step(
	0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, // 0.5, cBase);.cNe
	0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, // w = mix(cBase*cB
	0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, // lend*2.0, 1.0-2.
	0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, // 0*(1.0-cBase)*(1
	0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, // .0-cBlend), cNew
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, // );.return cNew;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, // }.vec4 OverlayHD
	0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, // R ( vec4 cBase, 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, // vec4 cBlend).{.v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, // ec4 cNew = step(
	0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, // 0.5, cBase);.cNe
	0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, // w = max(mix(cBas
	0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, // e*cBlend*2.0, 1.
	0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, // 0-2.0*(1.0-cBase
	0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, // )*(1.0-cBlend), 
	0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, // cNew), vec4(0.,0
	0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // .,0.,0.));.retur
	0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // n cNew;.}.vec3 c
	0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, // os_hemisphere_sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, // mple( vec2 t).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, // float phi = t.y 
	0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, // * (2.0*3.1415926
	0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, // 5358979323846264
	0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 33832795);.float
	0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, //  cosTheta = sqrt
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, // (1.0 - t.x);.flo
	0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, // at sinTheta = sq
	0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // rt(t.x);.float s
	0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x7b, 0x73, 0x70, 0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, // p,cp;.{sp=sin(ph
	0x69, 0x29, 0x3b, 0x63, 0x70, 0x3d, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, // i);cp=cos(phi);}
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, // ;.return vec3(cp
	0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, //  * sinTheta, cos
	0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, // Theta, sp * sinT
	0x68, 0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, // heta);.}.vec3 ro
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, // tate_to_vector_u
	0x70, 0x70, 0x65, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, // pper( vec3 vec, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, // vec3 normal).{.i
	0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, // f(normal.y > -0.
	0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, // 99999).{.float h
	0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, //  = 1.0/(1.0+norm
	0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, // al.y);.float hz 
	0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, // = h*normal.z;.fl
	0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, // oat hzx = hz*nor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, // mal.x;.return ve
	0x63, 0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, // c3(.vec.x * (nor
	0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // mal.y+hz*normal.
	0x7a, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, // z) + vec.y * nor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, // mal.x - vec.z * 
	0x68, 0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, // hzx,.vec.y * nor
	0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, // mal.y - vec.x * 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, // normal.x - vec.z
	0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, //  * normal.z,.vec
	0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, // .y * normal.z - 
	0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, // vec.x * hzx + ve
	0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, // c.z * (normal.y+
	0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // h*normal.x*norma
	0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, // l.x));.}.else re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, // turn -vec;.}.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, // form vec4 glassP
	0x61, 0x64, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, // ad;.void main().
	0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, // {.vec4 pos = vec
	0x34, 0x28, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, // 4(a_position, 1.
	0x30, 0x29, 0x3b, 0x0a, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, // 0);.v_texcoord0 
	0x3d, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, // = a_texcoord0;.v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x74, // _texcoord1 = a_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // excoord0 * vec2(
	0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, // 1.0 + (glassPad.
	0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x79, // x) + (glassPad.y
	0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, // ), 1.0 + (glassP
	0x61, 0x64, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, // ad.z) + (glassPa
	0x64, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x28, 0x67, 0x6c, // d.w)) - vec2((gl
	0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, // assPad.x), (glas
	0x73, 0x50, 0x61, 0x64, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, // sPad.z));.gl_Pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x61, 0x5f, 0x70, // ition = vec4(a_p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x2c, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, // osition.x, a_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x79, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, // ition.y, 1.0, 1.
	0x30, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,                                                       // 0);.}..
};
static const uint8_t vs_dmd_noworld_glsl[6815] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x8c, 0x1a, // VSH.............
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x23, // ..#version 440.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, //           textur
	0x65, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // e.#define textur
	0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, // e2DLod       tex
	0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // tureLod.#define 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, // texture2DGrad   
	0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, //    textureGrad.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x50, 0x72, 0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // ProjLod   textur
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, // eProjLod.#define
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, //  texture2DProjGr
	0x61, 0x64, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, // ad  textureProjG
	0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, // rad.#define text
	0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, // ureCubeLod     t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, // extureLod.#defin
	0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, // e textureCubeGra
	0x64, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, // d    textureGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x33, 0x44, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // 3D          text
	0x75, 0x72, 0x65, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, // ure.#define text
	0x75, 0x72, 0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, // ure2DLodOffset t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, // extureLodOffset.
	0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, // #define attribut
	0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, // e in.#define var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x75, 0x74, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, // ying out.#define
	0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, //  bgfxShadow2D(_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, // ampler, _coord) 
	0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, //     vec4_splat(t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // exture(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, //  _coord) ).#defi
	0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, // ne bgfxShadow2DP
	0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, // roj(_sampler, _c
	0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // oord) vec4_splat
	0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, // (textureProj(_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, // mpler, _coord) )
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // .attribute vec3 
	0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x61, 0x74, 0x74, 0x72, // a_position;.attr
	0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, // ibute vec2 a_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, // coord0;.varying 
	0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, // vec2 v_texcoord0
	0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, // ;.varying vec2 v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, // _texcoord1;.vec3
	0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, //  instMul(vec3 _v
	0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, // ec, mat3 _mtx) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, //  return ( (_vec)
	0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, //  * (_mtx) ); }.v
	0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, // ec3 instMul(mat3
	0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, //  _mtx, vec3 _vec
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, // ) { return ( (_m
	0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, // tx) * (_vec) ); 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, // }.vec4 instMul(v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, // ec4 _vec, mat4 _
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, // mtx) { return ( 
	0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, // (_vec) * (_mtx) 
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, // ); }.vec4 instMu
	0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, // l(mat4 _mtx, vec
	0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 4 _vec) { return
	0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, //  ( (_mtx) * (_ve
	0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, // c) ); }.float rc
	0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // p(float _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // turn 1.0/_a; }.v
	0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, // ec2 rcp(vec2 _a)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, //  { return vec2(1
	0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, // .0)/_a; }.vec3 r
	0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // cp(vec3 _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, // turn vec3(1.0)/_
	0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, // a; }.vec4 rcp(ve
	0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c4 _a) { return 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, // vec4(1.0)/_a; }.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // vec2 vec2_splat(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // float _x) { retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // rn vec2(_x, _x);
	0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, //  }.vec3 vec3_spl
	0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // at(float _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // eturn vec3(_x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, // x, _x); }.vec4 v
	0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ec4_splat(float 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _x) { return vec
	0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // 4(_x, _x, _x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, // ); }.uvec2 uvec2
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // _splat(uint _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, // { return uvec2(_
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, // x, _x); }.uvec3 
	0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec3_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, //  _x) { return uv
	0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // ec3(_x, _x, _x);
	0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, //  }.uvec4 uvec4_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // plat(uint _x) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, // return uvec4(_x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, //  _x, _x, _x); }.
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, // mat4 mtxFromRows
	0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // (vec4 _0, vec4 _
	0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // 1, vec4 _2, vec4
	0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, //  _3).{.return tr
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, // anspose(mat4(_0,
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, //  _1, _2, _3) );.
	0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, // }.mat4 mtxFromCo
	0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // ls(vec4 _0, vec4
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, //  _1, vec4 _2, ve
	0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c4 _3).{.return 
	0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, // mat4(_0, _1, _2,
	0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, //  _3);.}.mat3 mtx
	0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, // FromRows(vec3 _0
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // , vec3 _1, vec3 
	0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, // _2).{.return tra
	0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, // nspose(mat3(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, // _1, _2) );.}.mat
	0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, // 3 mtxFromCols(ve
	0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, // c3 _0, vec3 _1, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // vec3 _2).{.retur
	0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, // n mat3(_0, _1, _
	0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // 2);.}.uniform ve
	0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, // c4 u_viewRect;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, // niform vec4 u_vi
	0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // ewTexel;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, //  mat4 u_view;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, // iform mat4 u_inv
	0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // View;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // t4 u_proj;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, // rm mat4 u_invPro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // u_viewProj;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, // orm mat4 u_invVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // ewProj;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, // mat4 u_model[32]
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // _modelView;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, // orm mat4 u_model
	0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // ViewProj;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, // m vec4 u_alphaRe
	0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x66, // f4;.float sqr( f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // loat v).{.return
	0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, //  v*v;.}.vec2 sqr
	0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // ( vec2 v).{.retu
	0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, // rn v*v;.}.vec3 s
	0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // qr( vec3 v).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // turn v*v;.}.vec3
	0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, //  mul_w1( vec3 v,
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  mat4 m).{.retur
	0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, // n v.x*m[0].xyz +
	0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, //  (v.y*m[1].xyz +
	0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, //  (v.z*m[2].xyz +
	0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, //  m[3].xyz));.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, // loat acos_approx
	0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, // _divPI( float v)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, // .{.float x = abs
	0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, // (v);.if(1. - x <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, // = 0.000061035156
	0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, // 25).return (v >=
	0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, //  0.) ? 0. : 1.;.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, // float res = ((-0
	0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, // .155972/3.141592
	0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, // 6535897932384626
	0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, // 433832795) * x +
	0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, //  (1.56467/3.1415
	0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, // 9265358979323846
	0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, // 26433832795) ) *
	0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, //  sqrt(1. - x);.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, // eturn (v >= 0.) 
	0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, // ? res : 1. - res
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, // ;.}.float atan2_
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x20, 0x66, // approx_div2PI( f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, // loat y, float x)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3d, // .{.float abs_y =
	0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, //  abs(y);.float a
	0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, // bs_x = abs(x);.i
	0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, // f(abs_x <= 0.000
	0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, // 06103515625 && a
	0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, // bs_y <= 0.000061
	0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 03515625).return
	0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, //  0.;.float r = (
	0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, // abs_x - abs_y) /
	0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, //  (abs_x + abs_y)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, // ;.float angle = 
	0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, // ((x < 0.) ? (3./
	0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, // 8.) : (1./8.)).+
	0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, //  (0.211868 /(2.*
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, // 5) * r * r - 0.9
	0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, // 87305 /(2.*3.141
	0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, // 5926535897932384
	0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, // 626433832795)) *
	0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, //  ((x < 0.) ? -r 
	0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, // : r);.return (y 
	0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, // < 0.) ? -angle :
	0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //  angle;.}.float 
	0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, // asin_approx_divP
	0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, // I( float v).{.fl
	0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, // oat x = abs(v);.
	0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, // if(1. - x <= 0.0
	0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, // 0006103515625).r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, // eturn (v >= 0.) 
	0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x66, 0x6c, // ? 0.5 : -0.5;.fl
	0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, // oat res = ((-0.1
	0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, // 55972/3.14159265
	0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, // 3589793238462643
	0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, // 3832795) * x + (
	0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, // 1.56467/3.141592
	0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, // 6535897932384626
	0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, // 433832795) ) * s
	0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // qrt(1. - x);.ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, // urn (v >= 0.) ? 
	0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, // 0.5 - res : -0.5
	0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, //  + res;.}.vec2 r
	0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, // ay_to_equirectan
	0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, // gular_uv( vec3 r
	0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // ay).{.return vec
	0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, // 2(.0.5 + atan2_a
	0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, // pprox_div2PI(ray
	0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, // .y, ray.x),.acos
	0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, // _approx_divPI(ra
	0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, // y.z));.}.float I
	0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, // nvsRGB( float co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // lor).{.if (color
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, //  <= 0.04045).ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, // urn color * (1.0
	0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, // /12.92);.else.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // turn pow(color *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, //  (1.0/1.055) + (
	0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, // 0.055/1.055), 2.
	0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, // 4);.}.float InvR
	0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, // ec709( float col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // or).{.if (color 
	0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // <= 0.081).return
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, //  color * (1.0/4.
	0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 5);.else.return 
	0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, // pow(color * (1.0
	0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, // /1.099) + (0.099
	0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, // /1.099), 1.0/0.4
	0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, // 5);.}.float InvG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // amma( float colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, // r).{.return Invs
	0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // RGB(color);.}.ve
	0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, // c3 InvGamma( vec
	0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // 3 color).{.retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, // n vec3(InvGamma(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, // color.x),InvGamm
	0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, // a(color.y),InvGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, // mma(color.z));.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, // .vec3 InvToneMap
	0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // ( vec3 color).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, // float inv_2bh = 
	0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 0.5/0.25;.float 
	0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, // bh = 4.0*0.25 - 
	0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, // 2.0;.return (col
	0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // or - 1.0 + sqrt(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, // color*(color + b
	0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, // h) + 1.0))*inv_2
	0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, // bh;.}.float sRGB
	0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // ( float f).{.flo
	0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, // at s;.if (f <= 0
	0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, // .0031308).s = 12
	0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, // .92 * f;.else.s 
	0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, // = 1.055 * pow(f,
	0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, //  1.0/2.4) - 0.05
	0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // 5;.return s;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, // loat Rec709( flo
	0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, // at f).{.float s;
	0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, // .if (f <= 0.018)
	0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, // .s = 4.5 * f;.el
	0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, // se.s = 1.099 * p
	0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, // ow(f, 0.45) - 0.
	0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, // 099;.return s;.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, // .float FBGamma( 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // float color).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // eturn sRGB(color
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // );.}.vec2 FBGamm
	0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, // a( vec2 color).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x46, 0x42, 0x47, // .return vec2(FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, // amma(color.x),FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, 0x3b, // Gamma(color.y));
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, // .}.vec3 FBGamma(
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, //  vec3 color).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, // eturn vec3(FBGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, // ma(color.x),FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, // mma(color.y),FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, // amma(color.z));.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x32, 0x32, // }.vec3 FBGamma22
	0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // ( vec3 color).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x70, 0x6f, 0x77, 0x28, // return vec3(pow(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, // color.x, 1.0/2.2
	0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x2c, 0x20, 0x31, // ),pow(color.y, 1
	0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .0/2.2),pow(colo
	0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x29, 0x3b, 0x0a, // r.z, 1.0/2.2));.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, // }.float FBToneMa
	0x70, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // p( float l).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, // turn l * ((l*0.2
	0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, // 5 + 1.0) / (l + 
	0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, // 1.0));.}.vec2 FB
	0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, // ToneMap( vec2 co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, // lor).{.float l =
	0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, //  dot(color,vec2(
	0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, // 0.176204+0.01081
	0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, // 09*0.5,0.812985+
	0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, // 0.0108109*0.5));
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, // .return color * 
	0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, // ((l*0.25 + 1.0) 
	0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // / (l + 1.0));.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, // vec3 FBToneMap( 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, // vec3 color).{.fl
	0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // oat l = dot(colo
	0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, // r,vec3(0.176204,
	0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, // 0.812985,0.01081
	0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, // 09));.return col
	0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, // or * ((l*0.25 + 
	0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // 1.0) / (l + 1.0)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, // );.}.vec4 Additi
	0x76, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, // ve( vec4 cBase, 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // vec4 cBlend, flo
	0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // at percent).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, // turn cBase + cBl
	0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // end*percent;.}.v
	0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, // ec3 Screen ( vec
	0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, // 3 cBase, vec3 cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, // lend).{.return 1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, // .0 - (1.0 - cBas
	0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, // e) * (1.0 - cBle
	0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, // nd);.}.vec4 Scre
	0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // en ( vec4 cBase,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, //  vec4 cBlend).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, // return 1.0 - (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // 0 - cBase) * (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // 0 - cBlend);.}.v
	0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, // ec3 ScreenHDR ( 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // vec3 cBase, vec3
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  cBlend).{.retur
	0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, // n max(1.0 - (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, //  - cBase) * (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, //  - cBlend), vec3
	0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // (0.,0.,0.));.}.v
	0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, // ec4 ScreenHDR ( 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // vec4 cBase, vec4
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  cBlend).{.retur
	0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, // n max(1.0 - (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, //  - cBase) * (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, //  - cBlend), vec4
	0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, // (0.,0.,0.,0.));.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x20, // }.vec4 Multiply 
	0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, // ( vec4 cBase, ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // c4 cBlend, float
	0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  percent).{.retu
	0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // rn cBase * cBlen
	0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // d*percent;.}.vec
	0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, // 4 Overlay ( vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, //  cBase, vec4 cBl
	0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, // end).{.vec4 cNew
	0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, //  = step(0.5, cBa
	0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, // se);.cNew = mix(
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, // cBase*cBlend*2.0
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, // , 1.0-2.0*(1.0-c
	0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, // Base)*(1.0-cBlen
	0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // d), cNew);.retur
	0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, // n cNew;.}.vec4 O
	0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, // verlayHDR ( vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, //  cBase, vec4 cBl
	0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, // end).{.vec4 cNew
	0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, //  = step(0.5, cBa
	0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, // se);.cNew = max(
	0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // mix(cBase*cBlend
	0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, // *2.0, 1.0-2.0*(1
	0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, // .0-cBase)*(1.0-c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, // Blend), cNew), v
	0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, // ec4(0.,0.,0.,0.)
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, // );.return cNew;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, // }.vec3 cos_hemis
	0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x20, 0x76, 0x65, // phere_sample( ve
	0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x68, // c2 t).{.float ph
	0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x33, // i = t.y * (2.0*3
	0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, // .141592653589793
	0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, // 2384626433832795
	0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, // );.float cosThet
	0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, // a = sqrt(1.0 - t
	0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, // .x);.float sinTh
	0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, // eta = sqrt(t.x);
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x7b, 0x73, // .float sp,cp;.{s
	0x70, 0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x63, 0x70, 0x3d, 0x63, 0x6f, // p=sin(phi);cp=co
	0x73, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // s(phi);};.return
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, //  vec3(cp * sinTh
	0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, // eta, cosTheta, s
	0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, // p * sinTheta);.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, // .vec3 rotate_to_
	0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x28, 0x20, 0x76, 0x65, // vector_upper( ve
	0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, // c3 vec, vec3 nor
	0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // mal).{.if(normal
	0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, 0x7b, // .y > -0.99999).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, // .float h = 1.0/(
	0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, // 1.0+normal.y);.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, // loat hz = h*norm
	0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, 0x20, // al.z;.float hzx 
	0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, 0x72, // = hz*normal.x;.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, 0x2e, // eturn vec3(.vec.
	0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x7a, // x * (normal.y+hz
	0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, // *normal.z) + vec
	0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, // .y * normal.x - 
	0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, 0x63, // vec.z * hzx,.vec
	0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, 0x20, // .y * normal.y - 
	0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // vec.x * normal.x
	0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, //  - vec.z * norma
	0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, // l.z,.vec.y * nor
	0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, // mal.z - vec.x * 
	0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x6e, // hzx + vec.z * (n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // ormal.y+h*normal
	0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, // .x*normal.x));.}
	0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, 0x65, // .else return -ve
	0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, // c;.}.uniform vec
	0x34, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, // 4 glassPad;.void
	0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, //  main().{.vec4 p
	0x6f, 0x73, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, // os = vec4(a_posi
	0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x5f, 0x74, 0x65, // tion, 1.0);.v_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, // xcoord0 = a_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // oord0;.v_texcoor
	0x64, 0x31, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, // d1 = a_texcoord0
	0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x67, //  * vec2(1.0 + (g
	0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, // lassPad.x) + (gl
	0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, // assPad.y), 1.0 +
	0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, //  (glassPad.z) + 
	0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x2d, 0x20, // (glassPad.w)) - 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x78, // vec2((glassPad.x
	0x29, 0x2c, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x7a, 0x29, 0x29, // ), (glassPad.z))
	0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, // ;.gl_Position = 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, // vec4(a_position.
	0x78, 0x2c, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x79, 0x2c, // x, a_position.y,
	0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,       //  1.0, 1.0);.}..
};
static const uint8_t vs_dmd_noworld_dx11[589] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x8f, 0x07, 0x01, 0x00, 0x08, 0x67, // VSH............g
	0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // lassPad.........
	0x00, 0x20, 0x02, 0x00, 0x00, 0x44, 0x58, 0x42, 0x43, 0x44, 0xa6, 0x27, 0x1f, 0x70, 0x2c, 0xa6, // . ...DXBCD.'.p,.
	0xe9, 0x3e, 0x3f, 0x1e, 0xbf, 0x1b, 0xf6, 0xa5, 0xf9, 0x01, 0x00, 0x00, 0x00, 0x20, 0x02, 0x00, // .>?.......... ..
	0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, // .....,..........
	0x00, 0x49, 0x53, 0x47, 0x4e, 0x4c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, // .ISGNL..........
	0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // .8..............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x03, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........A......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, // ................
	0x00, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, // .POSITION.TEXCOO
	0x52, 0x44, 0x00, 0xab, 0xab, 0x4f, 0x53, 0x47, 0x4e, 0x68, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // RD...OSGNh......
	0x00, 0x08, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // .....P..........
	0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x03, 0x0c, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0c, 0x03, 0x00, 0x00, 0x53, 0x56, 0x5f, // .............SV_
	0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, // POSITION.TEXCOOR
	0x44, 0x00, 0xab, 0xab, 0xab, 0x53, 0x48, 0x45, 0x58, 0x28, 0x01, 0x00, 0x00, 0x50, 0x00, 0x01, // D....SHEX(...P..
	0x00, 0x4a, 0x00, 0x00, 0x00, 0x6a, 0x08, 0x00, 0x01, 0x59, 0x00, 0x00, 0x04, 0x46, 0x8e, 0x20, // .J...j...Y...F. 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0x32, 0x10, 0x10, // ........._...2..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0x32, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, // ....._...2......
	0x00, 0x67, 0x00, 0x00, 0x04, 0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // .g.... .........
	0x00, 0x65, 0x00, 0x00, 0x03, 0x32, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, // .e...2 ......e..
	0x03, 0xc2, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, // .. ......h......
	0x00, 0x36, 0x00, 0x00, 0x05, 0x32, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, // .6...2 ......F..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x08, 0xc2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, // .....6.... .....
	0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, // ..@.............
	0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x09, 0x32, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, // ?...?....2......
	0x00, 0x86, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd6, 0x85, 0x20, // ... ........... 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x32, 0x00, 0x10, // .............2..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, // .....F........@.
	0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....?...?.......
	0x00, 0x32, 0x00, 0x00, 0x0b, 0xc2, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x14, 0x10, // .2.... .........
	0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x04, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x88, 0x20, // ............... 
	0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, // .A...........6..
	0x05, 0x32, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, // .2 ......F......
	0x00, 0x3e, 0x00, 0x00, 0x01, 0x00, 0x02, 0x01, 0x00, 0x10, 0x00, 0x10, 0x00,                   // .>...........
};
static const uint8_t vs_dmd_noworld_spv[1525] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x8f, 0x07, 0x01, 0x00, 0x08, 0x67, // VSH............g
	0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x02, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // lassPad.........
	0x00, 0xc8, 0x05, 0x00, 0x00, 0x03, 0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x0b, 0x00, 0x08, // .......#........
	0x00, 0xa2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x0b, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, // .........GLSL.st
	0x64, 0x2e, 0x34, 0x35, 0x30, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, // d.450...........
	0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, // ................
	0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, // .main....Q...U..
	0x00, 0x5e, 0x00, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, // .^...b...e......
	0x00, 0x05, 0x00, 0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, // ................
	0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x26, 0x00, 0x00, // .main........&..
	0x00, 0x55, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00, // .UniformBlock...
	0x00, 0x06, 0x00, 0x06, 0x00, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0x6c, 0x61, // .....&.......gla
	0x73, 0x73, 0x50, 0x61, 0x64, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x03, 0x00, 0x28, 0x00, 0x00, // ssPad........(..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0x51, 0x00, 0x00, 0x00, 0x61, 0x5f, 0x70, // .........Q...a_p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0x55, 0x00, 0x00, // osition......U..
	0x00, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x05, 0x00, 0x0a, // .a_texcoord0....
	0x00, 0x5e, 0x00, 0x00, 0x00, 0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, // .^...@entryPoint
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, // Output.gl_Positi
	0x6f, 0x6e, 0x00, 0x00, 0x00, 0x05, 0x00, 0x0a, 0x00, 0x62, 0x00, 0x00, 0x00, 0x40, 0x65, 0x6e, // on.......b...@en
	0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x76, // tryPointOutput.v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x00, 0x00, 0x05, 0x00, 0x0a, // _texcoord0......
	0x00, 0x65, 0x00, 0x00, 0x00, 0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, // .e...@entryPoint
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // Output.v_texcoor
	0x64, 0x31, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // d1...H...&......
	0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00, 0x26, 0x00, 0x00, // .#.......G...&..
	0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x28, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, // .....G...(..."..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x28, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, // .....G...(...!..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x51, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, // .....G...Q......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x55, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, // .....G...U......
	0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x5e, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, // .....G...^......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x62, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, // .....G...b......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x65, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, // .....G...e......
	0x00, 0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x21, 0x00, 0x03, // .............!..
	0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00, 0x06, 0x00, 0x00, // ................
	0x00, 0x20, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, // . ..............
	0x00, 0x03, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x09, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, // ................
	0x00, 0x02, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, // ................
	0x00, 0x04, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, 0x14, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, // ............. ..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, // .....+..........
	0x00, 0x00, 0x00, 0x80, 0x3f, 0x1e, 0x00, 0x03, 0x00, 0x26, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, // ....?....&......
	0x00, 0x20, 0x00, 0x04, 0x00, 0x27, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, // . ...'.......&..
	0x00, 0x3b, 0x00, 0x04, 0x00, 0x27, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // .;...'...(......
	0x00, 0x2b, 0x00, 0x04, 0x00, 0x14, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .+.......)......
	0x00, 0x15, 0x00, 0x04, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .....*... ......
	0x00, 0x2b, 0x00, 0x04, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .+...*...+......
	0x00, 0x20, 0x00, 0x04, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, // . ...,..........
	0x00, 0x2b, 0x00, 0x04, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // .+...*...0......
	0x00, 0x2b, 0x00, 0x04, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // .+...*...4......
	0x00, 0x2b, 0x00, 0x04, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // .+...*...8......
	0x00, 0x20, 0x00, 0x04, 0x00, 0x50, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, // . ...P..........
	0x00, 0x3b, 0x00, 0x04, 0x00, 0x50, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // .;...P...Q......
	0x00, 0x20, 0x00, 0x04, 0x00, 0x54, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, // . ...T..........
	0x00, 0x3b, 0x00, 0x04, 0x00, 0x54, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // .;...T...U......
	0x00, 0x20, 0x00, 0x04, 0x00, 0x5d, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, // . ...]..........
	0x00, 0x3b, 0x00, 0x04, 0x00, 0x5d, 0x00, 0x00, 0x00, 0x5e, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // .;...]...^......
	0x00, 0x20, 0x00, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, // . ...a..........
	0x00, 0x3b, 0x00, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // .;...a...b......
	0x00, 0x3b, 0x00, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // .;...a...e......
	0x00, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .6..............
	0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .............=..
	0x00, 0x07, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .....R...Q...=..
	0x00, 0x09, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, // .....V...U...A..
	0x00, 0x2c, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, // .,.......(...)..
	0x00, 0x2b, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x89, 0x00, 0x00, // .+...=..........
	0x00, 0x88, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x8a, 0x00, 0x00, // ................
	0x00, 0x1e, 0x00, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x2c, 0x00, 0x00, // .........A...,..
	0x00, 0x8b, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, // .....(...)...0..
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x8b, 0x00, 0x00, // .=..............
	0x00, 0x81, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x8d, 0x00, 0x00, 0x00, 0x8a, 0x00, 0x00, // ................
	0x00, 0x8c, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x00, // .....A...,......
	0x00, 0x28, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .(...)...4...=..
	0x00, 0x06, 0x00, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, // ................
	0x00, 0x06, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x8f, 0x00, 0x00, // ................
	0x00, 0x41, 0x00, 0x06, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, // .A...,.......(..
	0x00, 0x29, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, // .)...8...=......
	0x00, 0x92, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, // ................
	0x00, 0x93, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x92, 0x00, 0x00, 0x00, 0x50, 0x00, 0x05, // .............P..
	0x00, 0x09, 0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00, 0x8d, 0x00, 0x00, 0x00, 0x93, 0x00, 0x00, // ................
	0x00, 0x85, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, // .............V..
	0x00, 0x94, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x96, 0x00, 0x00, // .....A...,......
	0x00, 0x28, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .(...)...+...=..
	0x00, 0x06, 0x00, 0x00, 0x00, 0x97, 0x00, 0x00, 0x00, 0x96, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, // .............A..
	0x00, 0x2c, 0x00, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, // .,.......(...)..
	0x00, 0x34, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x99, 0x00, 0x00, // .4...=..........
	0x00, 0x98, 0x00, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x00, // .....P..........
	0x00, 0x97, 0x00, 0x00, 0x00, 0x99, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, // ................
	0x00, 0x9b, 0x00, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, // .............Q..
	0x00, 0x06, 0x00, 0x00, 0x00, 0x9e, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........R......
	0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, // .Q...........R..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xa1, 0x00, 0x00, // .....P..........
	0x00, 0x9e, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, // ................
	0x00, 0x3e, 0x00, 0x03, 0x00, 0x5e, 0x00, 0x00, 0x00, 0xa1, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, // .>...^.......>..
	0x00, 0x62, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x65, 0x00, 0x00, // .b...V...>...e..
	0x00, 0x9b, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00, 0x00, 0x02, 0x01, // .........8......
	0x00, 0x10, 0x00, 0x10, 0x00,                                                                   // .....
};
static const bgfx::EmbeddedShader vs_dmd_noworld = BGFX_EMBEDDED_SHADER(vs_dmd_noworld);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of vertex shader from vs_dmd.sc to vs_dmd_noworld_st with options: STEREO
static const uint8_t vs_dmd_noworld_st_mtl[1105] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x8f, 0x07, 0x01, 0x00, 0x08, 0x67, // VSH............g
	0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x02, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // lassPad.........
	0x00, 0x22, 0x04, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, // ."...#include <m
	0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, // etal_stdlib>.#in
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, // clude <simd/simd
	0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, // .h>..using names
	0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, // pace metal;..str
	0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, // uct _Global.{.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, //   float4 glassPa
	0x64, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, // d;.};..struct xl
	0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, // atMtlMain_out.{.
	0x09, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x6d, 0x65, 0x74, 0x61, // .float bgfx_meta
	0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x20, 0x5b, 0x5b, 0x70, 0x6f, // l_pointSize [[po
	0x69, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5d, 0x5d, 0x20, 0x3d, 0x20, 0x31, 0x3b, 0x0a, // int_size]] = 1;.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x65, 0x6e, 0x74, 0x72, //     float2 _entr
	0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x74, // yPointOutput_v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, // excoord0 [[user(
	0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // locn0)]];.    fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, // oat2 _entryPoint
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // Output_v_texcoor
	0x64, 0x31, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, // d1 [[user(locn1)
	0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x67, // ]];.    float4 g
	0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x5b, 0x5b, 0x70, 0x6f, 0x73, // l_Position [[pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, // ition]];.    uin
	0x74, 0x20, 0x67, 0x6c, 0x5f, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x72, 0x65, 0x6e, // t gl_Layer [[ren
	0x64, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, // der_target_array
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, // _index]];.};..st
	0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, // ruct xlatMtlMain
	0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // _in.{.    float3
	0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x5b, 0x5b, 0x61, 0x74, //  a_position [[at
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, // tribute(0)]];.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, //   float2 a_texco
	0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, // ord0 [[attribute
	0x28, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x74, 0x65, // (1)]];.};..verte
	0x78, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, // x xlatMtlMain_ou
	0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, // t xlatMtlMain(xl
	0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, // atMtlMain_in in 
	0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, // [[stage_in]], co
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, // nstant _Global& 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, // _mtl_u [[buffer(
	0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x67, 0x6c, 0x5f, 0x49, 0x6e, // 0)]], uint gl_In
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x20, 0x5b, 0x5b, 0x69, 0x6e, // stanceIndex [[in
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, // stance_id]]).{. 
	0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, //    xlatMtlMain_o
	0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, // ut out = {};.   
	0x20, 0x6f, 0x75, 0x74, 0x2e, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, //  out.gl_Position
	0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x69, 0x6e, 0x2e, 0x61, 0x5f, 0x70, //  = float4(in.a_p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, // osition.xy, 1.0,
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x5f, //  1.0);.    out._
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, // entryPointOutput
	0x5f, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3d, 0x20, 0x69, // _v_texcoord0 = i
	0x6e, 0x2e, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x20, // n.a_texcoord0;. 
	0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, //    out._entryPoi
	0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // ntOutput_v_texco
	0x6f, 0x72, 0x64, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x61, 0x5f, 0x74, 0x65, 0x78, // ord1 = (in.a_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // coord0 * float2(
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, 0x6c, // (1.0 + _mtl_u.gl
	0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // assPad.x) + _mtl
	0x5f, 0x75, 0x2e, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x79, 0x2c, 0x20, 0x28, // _u.glassPad.y, (
	0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, 0x6c, 0x61, // 1.0 + _mtl_u.gla
	0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // ssPad.z) + _mtl_
	0x75, 0x2e, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x2d, // u.glassPad.w)) -
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, //  float2(_mtl_u.g
	0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x78, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // lassPad.x, _mtl_
	0x75, 0x2e, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, // u.glassPad.z);. 
	0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x67, 0x6c, 0x5f, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x20, //    out.gl_Layer 
	0x3d, 0x20, 0x67, 0x6c, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, // = gl_InstanceInd
	0x65, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, // ex;.    return o
	0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x03, 0x01, 0x00, 0x10, 0x00, 0xff, 0xff, 0x10, // ut;.}...........
	0x00,                                                                                           // .
};
static const uint8_t vs_dmd_noworld_st_essl[6497] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x4e, 0x19, // VSH...........N.
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // s.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x75, 0x74, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, // arying out.preci
	0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // sion highp float
	0x3b, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, // ;.precision high
	0x70, 0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, // p int;.#define s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // hadow2D(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // e(_sampler, _coo
	0x72, 0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, // rd).#define shad
	0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ow2DProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // r, _coord) textu
	0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // reProj(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, //  _coord).attribu
	0x74, 0x65, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, // te vec3 a_positi
	0x6f, 0x6e, 0x3b, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x76, 0x65, // on;.attribute ve
	0x63, 0x32, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, // c2 a_texcoord0;.
	0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, // varying vec2 v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // excoord0;.varyin
	0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // g vec2 v_texcoor
	0x64, 0x31, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, // d1;.vec3 instMul
	0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, // (vec3 _vec, mat3
	0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _mtx) { return 
	0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, // ( (_vec) * (_mtx
	0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, // ) ); }.vec3 inst
	0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, // Mul(mat3 _mtx, v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // ec3 _vec) { retu
	0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, // rn ( (_mtx) * (_
	0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, // vec) ); }.vec4 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, // nstMul(vec4 _vec
	0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // , mat4 _mtx) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, // eturn ( (_vec) *
	0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, //  (_mtx) ); }.vec
	0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, // 4 instMul(mat4 _
	0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, // mtx, vec4 _vec) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, // { return ( (_mtx
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // ) * (_vec) ); }.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // float rcp(float 
	0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, // _a) { return 1.0
	0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, // /_a; }.vec2 rcp(
	0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // vec2 _a) { retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, // n vec2(1.0)/_a; 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, // }.vec3 rcp(vec3 
	0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _a) { return vec
	0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, // 3(1.0)/_a; }.vec
	0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, // 4 rcp(vec4 _a) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, //  return vec4(1.0
	0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, // )/_a; }.vec2 vec
	0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, // 2_splat(float _x
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // ) { return vec2(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // _x, _x); }.vec3 
	0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // vec3_splat(float
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, //  _x) { return ve
	0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, // c3(_x, _x, _x); 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, // }.vec4 vec4_spla
	0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // t(float _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // turn vec4(_x, _x
	0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, // , _x, _x); }.uve
	0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, // c2 uvec2_splat(u
	0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // int _x) { return
	0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, //  uvec2(_x, _x); 
	0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, // }.uvec3 uvec3_sp
	0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // lat(uint _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, // eturn uvec3(_x, 
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, // _x, _x); }.uvec4
	0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, //  uvec4_splat(uin
	0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, // t _x) { return u
	0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // vec4(_x, _x, _x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, //  _x); }.mat4 mtx
	0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, // FromRows(vec4 _0
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // , vec4 _1, vec4 
	0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // _2, vec4 _3).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, // eturn transpose(
	0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, // mat4(_0, _1, _2,
	0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, //  _3) );.}.mat4 m
	0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, // txFromCols(vec4 
	0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, // _0, vec4 _1, vec
	0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, // 4 _2, vec4 _3).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, // .return mat4(_0,
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, //  _1, _2, _3);.}.
	0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, // mat3 mtxFromRows
	0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // (vec3 _0, vec3 _
	0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 1, vec3 _2).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, // turn transpose(m
	0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, // at3(_0, _1, _2) 
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, // );.}.mat3 mtxFro
	0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, // mCols(vec3 _0, v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, // ec3 _1, vec3 _2)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, // .{.return mat3(_
	0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, // 0, _1, _2);.}.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // iform vec4 u_vie
	0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // wRect;.uniform v
	0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, // ec4 u_viewTexel;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // view;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, // t4 u_invView;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, // iform mat4 u_pro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // u_invProj;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, // rm mat4 u_viewPr
	0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // oj;.uniform mat4
	0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, //  u_invViewProj;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, // uniform mat4 u_m
	0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // odel[32];.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, // m mat4 u_modelVi
	0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // ew;.uniform mat4
	0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, //  u_modelViewProj
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, // ;.uniform vec4 u
	0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // _alphaRef4;.floa
	0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, // t sqr( float v).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, // {.return v*v;.}.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, // vec2 sqr( vec2 v
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, // ).{.return v*v;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, // }.vec3 sqr( vec3
	0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, //  v).{.return v*v
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, // ;.}.vec3 mul_w1(
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, //  vec3 v, mat4 m)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, // .{.return v.x*m[
	0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, // 0].xyz + (v.y*m[
	0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, // 1].xyz + (v.z*m[
	0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, // 2].xyz + m[3].xy
	0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, // z));.}.float aco
	0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, // s_approx_divPI( 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float v).{.float
	0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, //  x = abs(v);.if(
	0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, // 1. - x <= 0.0000
	0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, // 6103515625).retu
	0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, // rn (v >= 0.) ? 0
	0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, // . : 1.;.float re
	0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, // s = ((-0.155972/
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, // 5) * x + (1.5646
	0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, // 7/3.141592653589
	0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, // 7932384626433832
	0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, // 795) ) * sqrt(1.
	0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, //  - x);.return (v
	0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, //  >= 0.) ? res : 
	0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // 1. - res;.}.floa
	0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, // t atan2_approx_d
	0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, // iv2PI( float y, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float x).{.float
	0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, //  abs_y = abs(y);
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, // .float abs_x = a
	0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, // bs(x);.if(abs_x 
	0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, // <= 0.00006103515
	0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, // 625 && abs_y <= 
	0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, // 0.00006103515625
	0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, // ).return 0.;.flo
	0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, // at r = (abs_x - 
	0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, // abs_y) / (abs_x 
	0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // + abs_y);.float 
	0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, // angle = ((x < 0.
	0x29, 0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, // ) ? (3./8.) : (1
	0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, // ./8.)).+ (0.2118
	0x36, 0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, // 68 /(2.*3.141592
	0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, // 6535897932384626
	0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, // 433832795) * r *
	0x20, 0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, //  r - 0.987305 /(
	0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, // 2.*3.14159265358
	0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, // 9793238462643383
	0x32, 0x37, 0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, // 2795)) * ((x < 0
	0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, // .) ? -r : r);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, // turn (y < 0.) ? 
	0x2d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, // -angle : angle;.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, // }.float asin_app
	0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // rox_divPI( float
	0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, //  v).{.float x = 
	0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, // abs(v);.if(1. - 
	0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, // x <= 0.000061035
	0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, // 15625).return (v
	0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, //  >= 0.) ? 0.5 : 
	0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, // -0.5;.float res 
	0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, // = ((-0.155972/3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, //  * x + (1.56467/
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, // 5) ) * sqrt(1. -
	0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, //  x);.return (v >
	0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, // = 0.) ? 0.5 - re
	0x73, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, // s : -0.5 + res;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, // }.vec2 ray_to_eq
	0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, // uirectangular_uv
	0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // ( vec3 ray).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, // turn vec2(.0.5 +
	0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, //  atan2_approx_di
	0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, // v2PI(ray.y, ray.
	0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, // x),.acos_approx_
	0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, // divPI(ray.z));.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, // .float InvsRGB( 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, // float color).{.i
	0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, // f (color <= 0.04
	0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // 045).return colo
	0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, // r * (1.0/12.92);
	0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, // .else.return pow
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, // (color * (1.0/1.
	0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, // 055) + (0.055/1.
	0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // 055), 2.4);.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, // oat InvRec709( f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, // loat color).{.if
	0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, //  (color <= 0.081
	0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // ).return color *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, //  (1.0/4.5);.else
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .return pow(colo
	0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, // r * (1.0/1.099) 
	0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, // + (0.099/1.099),
	0x20, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, //  1.0/0.45);.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, // oat InvGamma( fl
	0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // oat color).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // urn InvsRGB(colo
	0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, // r);.}.vec3 InvGa
	0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // mma( vec3 color)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, // .{.return vec3(I
	0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, // nvGamma(color.x)
	0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // ,InvGamma(color.
	0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // y),InvGamma(colo
	0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, // r.z));.}.vec3 In
	0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // vToneMap( vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, // olor).{.float in
	0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, // v_2bh = 0.5/0.25
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, // ;.float bh = 4.0
	0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, // *0.25 - 2.0;.ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, // urn (color - 1.0
	0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, //  + sqrt(color*(c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, // olor + bh) + 1.0
	0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // ))*inv_2bh;.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // oat sRGB( float 
	0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, // f).{.float s;.if
	0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, //  (f <= 0.0031308
	0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, // ).s = 12.92 * f;
	0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, // .else.s = 1.055 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, // * pow(f, 1.0/2.4
	0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // ) - 0.055;.retur
	0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, // n s;.}.float Rec
	0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, // 709( float f).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, // float s;.if (f <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, // = 0.018).s = 4.5
	0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, //  * f;.else.s = 1
	0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, // .099 * pow(f, 0.
	0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, // 45) - 0.099;.ret
	0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, // urn s;.}.float F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, // BGamma( float co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, // lor).{.return sR
	0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // GB(color);.}.vec
	0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, // 2 FBGamma( vec2 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // color).{.return 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, // vec2(FBGamma(col
	0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, // or.x),FBGamma(co
	0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // lor.y));.}.vec3 
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, // FBGamma( vec3 co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, // lor).{.return ve
	0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // c3(FBGamma(color
	0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .x),FBGamma(colo
	0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, // r.y),FBGamma(col
	0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, // or.z));.}.vec3 F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // BGamma22( vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // olor).{.return v
	0x65, 0x63, 0x33, 0x28, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, // ec3(pow(color.x,
	0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, //  1.0/2.2),pow(co
	0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, // lor.y, 1.0/2.2),
	0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, // pow(color.z, 1.0
	0x2f, 0x32, 0x2e, 0x32, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // /2.2));.}.float 
	0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // FBToneMap( float
	0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, //  l).{.return l *
	0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, //  ((l*0.25 + 1.0)
	0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, //  / (l + 1.0));.}
	0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, // .vec2 FBToneMap(
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, //  vec2 color).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, // loat l = dot(col
	0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, // or,vec2(0.176204
	0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, // +0.0108109*0.5,0
	0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, // .812985+0.010810
	0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 9*0.5));.return 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, // color * ((l*0.25
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, //  + 1.0) / (l + 1
	0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, // .0));.}.vec3 FBT
	0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, // oneMap( vec3 col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, // or).{.float l = 
	0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, // dot(color,vec3(0
	0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, // .176204,0.812985
	0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, // ,0.0108109));.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, // turn color * ((l
	0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, // *0.25 + 1.0) / (
	0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // l + 1.0));.}.vec
	0x34, 0x20, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, // 4 Additive( vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, //  cBase, vec4 cBl
	0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, // end, float perce
	0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, // nt).{.return cBa
	0x73, 0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, // se + cBlend*perc
	0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, // ent;.}.vec3 Scre
	0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // en ( vec3 cBase,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, //  vec3 cBlend).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, // return 1.0 - (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // 0 - cBase) * (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // 0 - cBlend);.}.v
	0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, // ec4 Screen ( vec
	0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // 4 cBase, vec4 cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, // lend).{.return 1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, // .0 - (1.0 - cBas
	0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, // e) * (1.0 - cBle
	0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, // nd);.}.vec3 Scre
	0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, // enHDR ( vec3 cBa
	0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // se, vec3 cBlend)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, // .{.return max(1.
	0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // 0 - (1.0 - cBase
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // ) * (1.0 - cBlen
	0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, // d), vec3(0.,0.,0
	0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, // .));.}.vec4 Scre
	0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, // enHDR ( vec4 cBa
	0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // se, vec4 cBlend)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, // .{.return max(1.
	0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // 0 - (1.0 - cBase
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // ) * (1.0 - cBlen
	0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, // d), vec4(0.,0.,0
	0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, // .,0.));.}.vec4 M
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // ultiply ( vec4 c
	0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // Base, vec4 cBlen
	0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, // d, float percent
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // ).{.return cBase
	0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, //  * cBlend*percen
	0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, // t;.}.vec4 Overla
	0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, // y ( vec4 cBase, 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, // vec4 cBlend).{.v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, // ec4 cNew = step(
	0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, // 0.5, cBase);.cNe
	0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, // w = mix(cBase*cB
	0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, // lend*2.0, 1.0-2.
	0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, // 0*(1.0-cBase)*(1
	0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, // .0-cBlend), cNew
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, // );.return cNew;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, // }.vec4 OverlayHD
	0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, // R ( vec4 cBase, 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, // vec4 cBlend).{.v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, // ec4 cNew = step(
	0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, // 0.5, cBase);.cNe
	0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, // w = max(mix(cBas
	0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, // e*cBlend*2.0, 1.
	0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, // 0-2.0*(1.0-cBase
	0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, // )*(1.0-cBlend), 
	0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, // cNew), vec4(0.,0
	0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // .,0.,0.));.retur
	0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // n cNew;.}.vec3 c
	0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, // os_hemisphere_sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, // mple( vec2 t).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, // float phi = t.y 
	0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, // * (2.0*3.1415926
	0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, // 5358979323846264
	0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 33832795);.float
	0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, //  cosTheta = sqrt
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, // (1.0 - t.x);.flo
	0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, // at sinTheta = sq
	0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // rt(t.x);.float s
	0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x7b, 0x73, 0x70, 0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, // p,cp;.{sp=sin(ph
	0x69, 0x29, 0x3b, 0x63, 0x70, 0x3d, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, // i);cp=cos(phi);}
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, // ;.return vec3(cp
	0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, //  * sinTheta, cos
	0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, // Theta, sp * sinT
	0x68, 0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, // heta);.}.vec3 ro
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, // tate_to_vector_u
	0x70, 0x70, 0x65, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, // pper( vec3 vec, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, // vec3 normal).{.i
	0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, // f(normal.y > -0.
	0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, // 99999).{.float h
	0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, //  = 1.0/(1.0+norm
	0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, // al.y);.float hz 
	0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, // = h*normal.z;.fl
	0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, // oat hzx = hz*nor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, // mal.x;.return ve
	0x63, 0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, // c3(.vec.x * (nor
	0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // mal.y+hz*normal.
	0x7a, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, // z) + vec.y * nor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, // mal.x - vec.z * 
	0x68, 0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, // hzx,.vec.y * nor
	0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, // mal.y - vec.x * 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, // normal.x - vec.z
	0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, //  * normal.z,.vec
	0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, // .y * normal.z - 
	0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, // vec.x * hzx + ve
	0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, // c.z * (normal.y+
	0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // h*normal.x*norma
	0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, // l.x));.}.else re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, // turn -vec;.}.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, // form vec4 glassP
	0x61, 0x64, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, // ad;.void main().
	0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, // {.vec4 pos = vec
	0x34, 0x28, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, // 4(a_position, 1.
	0x30, 0x29, 0x3b, 0x0a, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, // 0);.v_texcoord0 
	0x3d, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, // = a_texcoord0;.v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x74, // _texcoord1 = a_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // excoord0 * vec2(
	0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, // 1.0 + (glassPad.
	0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x79, // x) + (glassPad.y
	0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, // ), 1.0 + (glassP
	0x61, 0x64, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, // ad.z) + (glassPa
	0x64, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x28, 0x67, 0x6c, // d.w)) - vec2((gl
	0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, // assPad.x), (glas
	0x73, 0x50, 0x61, 0x64, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x4c, 0x61, 0x79, // sPad.z));.gl_Lay
	0x65, 0x72, 0x20, 0x3d, 0x20, 0x67, 0x6c, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, // er = gl_Instance
	0x49, 0x44, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, // ID;.gl_Position 
	0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // = vec4(a_positio
	0x6e, 0x2e, 0x78, 0x2c, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, // n.x, a_position.
	0x79, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // y, 1.0, 1.0);.}.
	0x00,                                                                                           // .
};
static const uint8_t vs_dmd_noworld_st_glsl[6896] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0xdd, 0x1a, // VSH.............
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x23, // ..#version 440.#
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x47, 0x4c, 0x5f, 0x41, 0x52, 0x42, // extension GL_ARB
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x70, 0x6f, 0x72, 0x74, // _shader_viewport
	0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x20, 0x3a, 0x20, 0x65, // _layer_array : e
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // nable.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // xture2D         
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, //  texture.#define
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, //  texture2DLod   
	0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, //     textureLod.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // Grad      textur
	0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // eGrad.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, // xture2DProjLod  
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, //  textureProjLod.
	0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, // #define texture2
	0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // DProjGrad  textu
	0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, // reProjGrad.#defi
	0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, // ne textureCubeLo
	0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, // d     textureLod
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // CubeGrad    text
	0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // ureGrad.#define 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // texture3D       
	0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, //    texture.#defi
	0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, // ne texture2DLodO
	0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, // ffset textureLod
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, // Offset.#define a
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, // ttribute in.#def
	0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x75, 0x74, 0x0a, // ine varying out.
	0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, // #define bgfxShad
	0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, // ow2D(_sampler, _
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, // coord)     vec4_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x5f, 0x73, // splat(texture(_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, // ampler, _coord) 
	0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, // ).#define bgfxSh
	0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, // adow2DProj(_samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x76, 0x65, 0x63, // ler, _coord) vec
	0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, // 4_splat(textureP
	0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, // roj(_sampler, _c
	0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, // oord) ).attribut
	0x65, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // e vec3 a_positio
	0x6e, 0x3b, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x76, 0x65, 0x63, // n;.attribute vec
	0x32, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, // 2 a_texcoord0;.v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, // arying vec2 v_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // xcoord0;.varying
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, //  vec2 v_texcoord
	0x31, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, // 1;.vec3 instMul(
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, // vec3 _vec, mat3 
	0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, // _mtx) { return (
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, //  (_vec) * (_mtx)
	0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, //  ); }.vec3 instM
	0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, // ul(mat3 _mtx, ve
	0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // c3 _vec) { retur
	0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, // n ( (_mtx) * (_v
	0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, // ec) ); }.vec4 in
	0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, // stMul(vec4 _vec,
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, //  mat4 _mtx) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, // turn ( (_vec) * 
	0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // (_mtx) ); }.vec4
	0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, //  instMul(mat4 _m
	0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, // tx, vec4 _vec) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, //  return ( (_mtx)
	0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, //  * (_vec) ); }.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // loat rcp(float _
	0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, // a) { return 1.0/
	0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, // _a; }.vec2 rcp(v
	0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec2 _a) { return
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, //  vec2(1.0)/_a; }
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // .vec3 rcp(vec3 _
	0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, // a) { return vec3
	0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // (1.0)/_a; }.vec4
	0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, //  rcp(vec4 _a) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, // return vec4(1.0)
	0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, // /_a; }.vec2 vec2
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, // _splat(float _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, //  { return vec2(_
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // x, _x); }.vec3 v
	0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ec3_splat(float 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _x) { return vec
	0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // 3(_x, _x, _x); }
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // .vec4 vec4_splat
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // (float _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // urn vec4(_x, _x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, //  _x, _x); }.uvec
	0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, // 2 uvec2_splat(ui
	0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // nt _x) { return 
	0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // uvec2(_x, _x); }
	0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, // .uvec3 uvec3_spl
	0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // at(uint _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // turn uvec3(_x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, // x, _x); }.uvec4 
	0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec4_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, //  _x) { return uv
	0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, // ec4(_x, _x, _x, 
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, // _x); }.mat4 mtxF
	0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, // romRows(vec4 _0,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, //  vec4 _1, vec4 _
	0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 2, vec4 _3).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, // turn transpose(m
	0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, // at4(_0, _1, _2, 
	0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, // _3) );.}.mat4 mt
	0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // xFromCols(vec4 _
	0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // 0, vec4 _1, vec4
	0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, //  _2, vec4 _3).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, // return mat4(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, // _1, _2, _3);.}.m
	0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, // at3 mtxFromRows(
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, // vec3 _0, vec3 _1
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // , vec3 _2).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, // urn transpose(ma
	0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, // t3(_0, _1, _2) )
	0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, // ;.}.mat3 mtxFrom
	0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, // Cols(vec3 _0, ve
	0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, // c3 _1, vec3 _2).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, // {.return mat3(_0
	0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, // , _1, _2);.}.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, // form vec4 u_view
	0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // Rect;.uniform ve
	0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, // c4 u_viewTexel;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, // uniform mat4 u_v
	0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, // iew;.uniform mat
	0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // 4 u_invView;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, // form mat4 u_proj
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // _invProj;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, // m mat4 u_viewPro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, // u_invViewProj;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, // niform mat4 u_mo
	0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // del[32];.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, //  mat4 u_modelVie
	0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // w;.uniform mat4 
	0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, // u_modelViewProj;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, // .uniform vec4 u_
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // alphaRef4;.float
	0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, //  sqr( float v).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // .return v*v;.}.v
	0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, // ec2 sqr( vec2 v)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, // .{.return v*v;.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // .vec3 sqr( vec3 
	0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, // v).{.return v*v;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x20, // .}.vec3 mul_w1( 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, // vec3 v, mat4 m).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, // {.return v.x*m[0
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, // ].xyz + (v.y*m[1
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, // ].xyz + (v.z*m[2
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, // ].xyz + m[3].xyz
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, // ));.}.float acos
	0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, // _approx_divPI( f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // loat v).{.float 
	0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, // x = abs(v);.if(1
	0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, // . - x <= 0.00006
	0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // 103515625).retur
	0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, // n (v >= 0.) ? 0.
	0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, //  : 1.;.float res
	0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, //  = ((-0.155972/3
	0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, // .141592653589793
	0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, // 2384626433832795
	0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, // ) * x + (1.56467
	0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, // /3.1415926535897
	0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, // 9323846264338327
	0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, // 95) ) * sqrt(1. 
	0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, // - x);.return (v 
	0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, // >= 0.) ? res : 1
	0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // . - res;.}.float
	0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, //  atan2_approx_di
	0x76, 0x32, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x66, // v2PI( float y, f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // loat x).{.float 
	0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, // abs_y = abs(y);.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, // float abs_x = ab
	0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, // s(x);.if(abs_x <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, // = 0.000061035156
	0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, // 25 && abs_y <= 0
	0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, // .00006103515625)
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // .return 0.;.floa
	0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, // t r = (abs_x - a
	0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, // bs_y) / (abs_x +
	0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, //  abs_y);.float a
	0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, // ngle = ((x < 0.)
	0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, //  ? (3./8.) : (1.
	0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, // /8.)).+ (0.21186
	0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, // 8 /(2.*3.1415926
	0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, // 5358979323846264
	0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, // 33832795) * r * 
	0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, // r - 0.987305 /(2
	0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, // .*3.141592653589
	0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, // 7932384626433832
	0x37, 0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, // 795)) * ((x < 0.
	0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // ) ? -r : r);.ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, // urn (y < 0.) ? -
	0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, // angle : angle;.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, // .float asin_appr
	0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ox_divPI( float 
	0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, // v).{.float x = a
	0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, // bs(v);.if(1. - x
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, //  <= 0.0000610351
	0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, // 5625).return (v 
	0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, // >= 0.) ? 0.5 : -
	0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, // 0.5;.float res =
	0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, //  ((-0.155972/3.1
	0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, // 4159265358979323
	0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, // 84626433832795) 
	0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, // * x + (1.56467/3
	0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, // .141592653589793
	0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, // 2384626433832795
	0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, // ) ) * sqrt(1. - 
	0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, // x);.return (v >=
	0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, //  0.) ? 0.5 - res
	0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, //  : -0.5 + res;.}
	0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, // .vec2 ray_to_equ
	0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, // irectangular_uv(
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, //  vec3 ray).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, // urn vec2(.0.5 + 
	0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, // atan2_approx_div
	0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, // 2PI(ray.y, ray.x
	0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, // ),.acos_approx_d
	0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // ivPI(ray.z));.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, // float InvsRGB( f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, // loat color).{.if
	0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, //  (color <= 0.040
	0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // 45).return color
	0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, //  * (1.0/12.92);.
	0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, // else.return pow(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, // color * (1.0/1.0
	0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, // 55) + (0.055/1.0
	0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // 55), 2.4);.}.flo
	0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, // at InvRec709( fl
	0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, // oat color).{.if 
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, // (color <= 0.081)
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, // .return color * 
	0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, // (1.0/4.5);.else.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // return pow(color
	0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, //  * (1.0/1.099) +
	0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, //  (0.099/1.099), 
	0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // 1.0/0.45);.}.flo
	0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, // at InvGamma( flo
	0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // at color).{.retu
	0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // rn InvsRGB(color
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // );.}.vec3 InvGam
	0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // ma( vec3 color).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, // {.return vec3(In
	0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, // vGamma(color.x),
	0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, // InvGamma(color.y
	0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // ),InvGamma(color
	0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, // .z));.}.vec3 Inv
	0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, // ToneMap( vec3 co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, // lor).{.float inv
	0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, // _2bh = 0.5/0.25;
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, // .float bh = 4.0*
	0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 0.25 - 2.0;.retu
	0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, // rn (color - 1.0 
	0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, // + sqrt(color*(co
	0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // lor + bh) + 1.0)
	0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // )*inv_2bh;.}.flo
	0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, // at sRGB( float f
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, // ).{.float s;.if 
	0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, // (f <= 0.0031308)
	0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, // .s = 12.92 * f;.
	0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, // else.s = 1.055 *
	0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, //  pow(f, 1.0/2.4)
	0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  - 0.055;.return
	0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, //  s;.}.float Rec7
	0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, // 09( float f).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, // loat s;.if (f <=
	0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, //  0.018).s = 4.5 
	0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, // * f;.else.s = 1.
	0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, // 099 * pow(f, 0.4
	0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 5) - 0.099;.retu
	0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, // rn s;.}.float FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, // Gamma( float col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, // or).{.return sRG
	0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, // B(color);.}.vec2
	0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, //  FBGamma( vec2 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // olor).{.return v
	0x65, 0x63, 0x32, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // ec2(FBGamma(colo
	0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, // r.x),FBGamma(col
	0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, // or.y));.}.vec3 F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, // BGamma( vec3 col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // or).{.return vec
	0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // 3(FBGamma(color.
	0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // x),FBGamma(color
	0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .y),FBGamma(colo
	0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, // r.z));.}.vec3 FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, // Gamma22( vec3 co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, // lor).{.return ve
	0x63, 0x33, 0x28, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, 0x20, // c3(pow(color.x, 
	0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, // 1.0/2.2),pow(col
	0x6f, 0x72, 0x2e, 0x79, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, // or.y, 1.0/2.2),p
	0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, // ow(color.z, 1.0/
	0x32, 0x2e, 0x32, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, // 2.2));.}.float F
	0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // BToneMap( float 
	0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, // l).{.return l * 
	0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, // ((l*0.25 + 1.0) 
	0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // / (l + 1.0));.}.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, // vec2 FBToneMap( 
	0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, // vec2 color).{.fl
	0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // oat l = dot(colo
	0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, // r,vec2(0.176204+
	0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, // 0.0108109*0.5,0.
	0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, // 812985+0.0108109
	0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, // *0.5));.return c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, // olor * ((l*0.25 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, // + 1.0) / (l + 1.
	0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, // 0));.}.vec3 FBTo
	0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // neMap( vec3 colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, // r).{.float l = d
	0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, // ot(color,vec3(0.
	0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, // 176204,0.812985,
	0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // 0.0108109));.ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, // urn color * ((l*
	0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, // 0.25 + 1.0) / (l
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, //  + 1.0));.}.vec4
	0x20, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, //  Additive( vec4 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, // cBase, vec4 cBle
	0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, // nd, float percen
	0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, // t).{.return cBas
	0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, // e + cBlend*perce
	0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, // nt;.}.vec3 Scree
	0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, // n ( vec3 cBase, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // vec3 cBlend).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, // eturn 1.0 - (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, //  - cBase) * (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, //  - cBlend);.}.ve
	0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, // c4 Screen ( vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, //  cBase, vec4 cBl
	0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, // end).{.return 1.
	0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // 0 - (1.0 - cBase
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // ) * (1.0 - cBlen
	0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, // d);.}.vec3 Scree
	0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, // nHDR ( vec3 cBas
	0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, // e, vec3 cBlend).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, // {.return max(1.0
	0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, //  - (1.0 - cBase)
	0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, //  * (1.0 - cBlend
	0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, // ), vec3(0.,0.,0.
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, // ));.}.vec4 Scree
	0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, // nHDR ( vec4 cBas
	0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, // e, vec4 cBlend).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, // {.return max(1.0
	0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, //  - (1.0 - cBase)
	0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, //  * (1.0 - cBlend
	0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, // ), vec4(0.,0.,0.
	0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, // ,0.));.}.vec4 Mu
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // ltiply ( vec4 cB
	0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // ase, vec4 cBlend
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, // , float percent)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, // .{.return cBase 
	0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, // * cBlend*percent
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, // ;.}.vec4 Overlay
	0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, //  ( vec4 cBase, v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, // ec4 cBlend).{.ve
	0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, // c4 cNew = step(0
	0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, // .5, cBase);.cNew
	0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, //  = mix(cBase*cBl
	0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, // end*2.0, 1.0-2.0
	0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, // *(1.0-cBase)*(1.
	0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, // 0-cBlend), cNew)
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, // ;.return cNew;.}
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, // .vec4 OverlayHDR
	0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, //  ( vec4 cBase, v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, // ec4 cBlend).{.ve
	0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, // c4 cNew = step(0
	0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, // .5, cBase);.cNew
	0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, //  = max(mix(cBase
	0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, // *cBlend*2.0, 1.0
	0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, // -2.0*(1.0-cBase)
	0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, // *(1.0-cBlend), c
	0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, // New), vec4(0.,0.
	0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ,0.,0.));.return
	0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, //  cNew;.}.vec3 co
	0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, // s_hemisphere_sam
	0x70, 0x6c, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x66, // ple( vec2 t).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, // loat phi = t.y *
	0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, //  (2.0*3.14159265
	0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, // 3589793238462643
	0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 3832795);.float 
	0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // cosTheta = sqrt(
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // 1.0 - t.x);.floa
	0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, // t sinTheta = sqr
	0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, // t(t.x);.float sp
	0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x7b, 0x73, 0x70, 0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, 0x69, // ,cp;.{sp=sin(phi
	0x29, 0x3b, 0x63, 0x70, 0x3d, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, 0x3b, // );cp=cos(phi);};
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, // .return vec3(cp 
	0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, // * sinTheta, cosT
	0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, // heta, sp * sinTh
	0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, // eta);.}.vec3 rot
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, // ate_to_vector_up
	0x70, 0x65, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x76, // per( vec3 vec, v
	0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, // ec3 normal).{.if
	0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, // (normal.y > -0.9
	0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, // 9999).{.float h 
	0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // = 1.0/(1.0+norma
	0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, // l.y);.float hz =
	0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, //  h*normal.z;.flo
	0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, // at hzx = hz*norm
	0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // al.x;.return vec
	0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, // 3(.vec.x * (norm
	0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, // al.y+hz*normal.z
	0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // ) + vec.y * norm
	0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, // al.x - vec.z * h
	0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // zx,.vec.y * norm
	0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, // al.y - vec.x * n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, // ormal.x - vec.z 
	0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, // * normal.z,.vec.
	0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, // y * normal.z - v
	0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, // ec.x * hzx + vec
	0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, // .z * (normal.y+h
	0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // *normal.x*normal
	0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, // .x));.}.else ret
	0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, // urn -vec;.}.unif
	0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, // orm vec4 glassPa
	0x64, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, // d;.void main().{
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, // .vec4 pos = vec4
	0x28, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, // (a_position, 1.0
	0x29, 0x3b, 0x0a, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3d, // );.v_texcoord0 =
	0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x5f, //  a_texcoord0;.v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x74, 0x65, // texcoord1 = a_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, // xcoord0 * vec2(1
	0x2e, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x78, // .0 + (glassPad.x
	0x29, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x79, 0x29, // ) + (glassPad.y)
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, // , 1.0 + (glassPa
	0x64, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, // d.z) + (glassPad
	0x2e, 0x77, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x28, 0x67, 0x6c, 0x61, // .w)) - vec2((gla
	0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, // ssPad.x), (glass
	0x50, 0x61, 0x64, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x4c, 0x61, 0x79, 0x65, // Pad.z));.gl_Laye
	0x72, 0x20, 0x3d, 0x20, 0x67, 0x6c, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, // r = gl_InstanceI
	0x44, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, // D;.gl_Position =
	0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, //  vec4(a_position
	0x2e, 0x78, 0x2c, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x79, // .x, a_position.y
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00, // , 1.0, 1.0);.}..
};
static const uint8_t vs_dmd_noworld_st_dx11[745] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x8f, 0x07, 0x01, 0x00, 0x08, 0x67, // VSH............g
	0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // lassPad.........
	0x00, 0xbc, 0x02, 0x00, 0x00, 0x44, 0x58, 0x42, 0x43, 0x63, 0x5f, 0x26, 0xd5, 0xc9, 0x49, 0xc6, // .....DXBCc_&..I.
	0xf8, 0xfd, 0x22, 0x2a, 0xc3, 0xd2, 0xa9, 0xfb, 0x9e, 0x01, 0x00, 0x00, 0x00, 0xbc, 0x02, 0x00, // .."*............
	0x00, 0x04, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x48, 0x01, 0x00, // .....0.......H..
	0x00, 0xac, 0x02, 0x00, 0x00, 0x49, 0x53, 0x47, 0x4e, 0x70, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // .....ISGNp......
	0x00, 0x08, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .....P..........
	0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x03, 0x00, 0x00, 0x59, 0x00, 0x00, // .............Y..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x03, 0x03, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, // .....b..........
	0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x50, 0x4f, 0x53, // .............POS
	0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x53, // ITION.TEXCOORD.S
	0x56, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x00, 0x4f, 0x53, 0x47, // V_InstanceID.OSG
	0x4e, 0x98, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, // N............h..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x0f, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .....t..........
	0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x0c, 0x00, 0x00, 0x74, 0x00, 0x00, // .............t..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x0c, 0x03, 0x00, 0x00, 0x7d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, // .....}..........
	0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x0e, 0x00, 0x00, 0x53, 0x56, 0x5f, // .............SV_
	0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, // POSITION.TEXCOOR
	0x44, 0x00, 0x53, 0x56, 0x5f, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, // D.SV_RenderTarge
	0x74, 0x41, 0x72, 0x72, 0x61, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x00, 0xab, 0x53, 0x48, 0x45, // tArrayIndex..SHE
	0x58, 0x5c, 0x01, 0x00, 0x00, 0x50, 0x00, 0x01, 0x00, 0x57, 0x00, 0x00, 0x00, 0x6a, 0x08, 0x00, // X....P...W...j..
	0x01, 0x59, 0x00, 0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // .Y...F. ........
	0x00, 0x5f, 0x00, 0x00, 0x03, 0x32, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, // ._...2......._..
	0x03, 0x32, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x04, 0x12, 0x10, 0x10, // .2.......`......
	0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x04, 0xf2, 0x20, 0x10, // .........g.... .
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0x32, 0x20, 0x10, // .........e...2 .
	0x00, 0x01, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0xc2, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, // .....e.... .....
	0x00, 0x67, 0x00, 0x00, 0x04, 0x12, 0x20, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, // .g.... .........
	0x00, 0x68, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x32, 0x20, 0x10, // .h.......6...2 .
	0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, // .....F.......6..
	0x08, 0xc2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, // .. .......@.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, // ........?...?...
	0x09, 0x32, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, // .2......... ....
	0x00, 0x00, 0x00, 0x00, 0x00, 0xd6, 0x85, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....... ........
	0x00, 0x00, 0x00, 0x00, 0x0a, 0x32, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, // .....2.......F..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, // ......@.....?...
	0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0b, 0xc2, 0x20, 0x10, // ?........2.... .
	0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x14, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x04, 0x10, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x88, 0x20, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....... .A......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x32, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, // .....6...2 .....
	0x00, 0x46, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x12, 0x20, 0x10, // .F.......6.... .
	0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, // .............>..
	0x01, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // .SFI0..... .....
	0x00, 0x00, 0x02, 0x01, 0x00, 0x10, 0x00, 0x10, 0x00,                                           // .........
};
static const uint8_t vs_dmd_noworld_st_spv[1767] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x8f, 0x07, 0x01, 0x00, 0x08, 0x67, // VSH............g
	0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x02, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // lassPad.........
	0x00, 0xb8, 0x06, 0x00, 0x00, 0x03, 0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x0b, 0x00, 0x08, // .......#........
	0x00, 0xb3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x11, 0x00, 0x02, 0x00, 0x86, 0x14, 0x00, 0x00, 0x0a, 0x00, 0x0a, 0x00, 0x53, 0x50, 0x56, // .............SPV
	0x5f, 0x45, 0x58, 0x54, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x76, 0x69, 0x65, 0x77, // _EXT_shader_view
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, // port_index_layer
	0x00, 0x0b, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, // .........GLSL.st
	0x64, 0x2e, 0x34, 0x35, 0x30, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, // d.450...........
	0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, // ................
	0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, // .main....V...Z..
	0x00, 0x5e, 0x00, 0x00, 0x00, 0x69, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, // .^...i...m...p..
	0x00, 0x74, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf4, 0x01, 0x00, // .t..............
	0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, // .........main...
	0x00, 0x05, 0x00, 0x06, 0x00, 0x29, 0x00, 0x00, 0x00, 0x55, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // .....)...Uniform
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x29, 0x00, 0x00, // Block........)..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x00, 0x00, 0x00, // .....glassPad...
	0x00, 0x05, 0x00, 0x03, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, // .....+..........
	0x00, 0x56, 0x00, 0x00, 0x00, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, // .V...a_position.
	0x00, 0x05, 0x00, 0x05, 0x00, 0x5a, 0x00, 0x00, 0x00, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // .....Z...a_texco
	0x6f, 0x72, 0x64, 0x30, 0x00, 0x05, 0x00, 0x06, 0x00, 0x5e, 0x00, 0x00, 0x00, 0x67, 0x6c, 0x5f, // ord0.....^...gl_
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x00, 0x00, 0x00, 0x05, 0x00, 0x0a, // InstanceID......
	0x00, 0x69, 0x00, 0x00, 0x00, 0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, // .i...@entryPoint
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, // Output.gl_Positi
	0x6f, 0x6e, 0x00, 0x00, 0x00, 0x05, 0x00, 0x0a, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x40, 0x65, 0x6e, // on.......m...@en
	0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x76, // tryPointOutput.v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x00, 0x00, 0x05, 0x00, 0x0a, // _texcoord0......
	0x00, 0x70, 0x00, 0x00, 0x00, 0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, // .p...@entryPoint
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // Output.v_texcoor
	0x64, 0x31, 0x00, 0x00, 0x00, 0x05, 0x00, 0x09, 0x00, 0x74, 0x00, 0x00, 0x00, 0x40, 0x65, 0x6e, // d1.......t...@en
	0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x67, // tryPointOutput.g
	0x6c, 0x5f, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x29, 0x00, 0x00, // l_Layer..H...)..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x03, // .....#.......G..
	0x00, 0x29, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x2b, 0x00, 0x00, // .).......G...+..
	0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x2b, 0x00, 0x00, // .".......G...+..
	0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x56, 0x00, 0x00, // .!.......G...V..
	0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x5a, 0x00, 0x00, // .........G...Z..
	0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x5e, 0x00, 0x00, // .........G...^..
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x69, 0x00, 0x00, // .....+...G...i..
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x6d, 0x00, 0x00, // .........G...m..
	0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x70, 0x00, 0x00, // .........G...p..
	0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x74, 0x00, 0x00, // .........G...t..
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, // ................
	0x00, 0x21, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x16, 0x00, 0x03, // .!..............
	0x00, 0x06, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, // ..... ..........
	0x00, 0x06, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x09, 0x00, 0x00, // ................
	0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, // ................
	0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, // . ..............
	0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, 0x17, 0x00, 0x00, // ................
	0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, // . .......+......
	0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x1e, 0x00, 0x03, 0x00, 0x29, 0x00, 0x00, // .!......?....)..
	0x00, 0x0d, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // ..... ...*......
	0x00, 0x29, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, // .)...;...*...+..
	0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x17, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, // .....+.......,..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x2d, 0x00, 0x00, // .....+.......-..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // ..... ..........
	0x00, 0x06, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, // .....+.......2..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, // .....+.......6..
	0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x00, // .....+.......:..
	0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x55, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ..... ...U......
	0x00, 0x07, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x55, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, // .....;...U...V..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x59, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ..... ...Y......
	0x00, 0x09, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x59, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, // .....;...Y...Z..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x5d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ..... ...]......
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x5d, 0x00, 0x00, 0x00, 0x5e, 0x00, 0x00, // .....;...]...^..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x68, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // ..... ...h......
	0x00, 0x0d, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x68, 0x00, 0x00, 0x00, 0x69, 0x00, 0x00, // .....;...h...i..
	0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // ..... ...l......
	0x00, 0x09, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, // .....;...l...m..
	0x00, 0x03, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, // .....;...l...p..
	0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x73, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // ..... ...s......
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x73, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, // .....;...s...t..
	0x00, 0x03, 0x00, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, // .....6..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, // ................
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, // .=.......W...V..
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x09, 0x00, 0x00, 0x00, 0x5b, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, // .=.......[...Z..
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x00, 0x5e, 0x00, 0x00, // .=......._...^..
	0x00, 0x41, 0x00, 0x06, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x97, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, // .A...........+..
	0x00, 0x2c, 0x00, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, // .,...-...=......
	0x00, 0x98, 0x00, 0x00, 0x00, 0x97, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, // ................
	0x00, 0x99, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, // .....!.......A..
	0x00, 0x2e, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, // .........+...,..
	0x00, 0x32, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x9b, 0x00, 0x00, // .2...=..........
	0x00, 0x9a, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x9c, 0x00, 0x00, // ................
	0x00, 0x99, 0x00, 0x00, 0x00, 0x9b, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x2e, 0x00, 0x00, // .........A......
	0x00, 0x9d, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, // .....+...,...6..
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x9e, 0x00, 0x00, 0x00, 0x9d, 0x00, 0x00, // .=..............
	0x00, 0x81, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x9f, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, // .............!..
	0x00, 0x9e, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x2e, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x00, // .....A..........
	0x00, 0x2b, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .+...,...:...=..
	0x00, 0x06, 0x00, 0x00, 0x00, 0xa1, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, // ................
	0x00, 0x06, 0x00, 0x00, 0x00, 0xa2, 0x00, 0x00, 0x00, 0x9f, 0x00, 0x00, 0x00, 0xa1, 0x00, 0x00, // ................
	0x00, 0x50, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0x9c, 0x00, 0x00, // .P..............
	0x00, 0xa2, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, 0x00, 0xa4, 0x00, 0x00, // ................
	0x00, 0x5b, 0x00, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x2e, 0x00, 0x00, // .[.......A......
	0x00, 0xa5, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x2d, 0x00, 0x00, // .....+...,...-..
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x00, 0x00, 0xa5, 0x00, 0x00, // .=..............
	0x00, 0x41, 0x00, 0x06, 0x00, 0x2e, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, // .A...........+..
	0x00, 0x2c, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, // .,...6...=......
	0x00, 0xa8, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, // .........P......
	0x00, 0xa9, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, // ................
	0x00, 0x09, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0xa4, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x00, // ................
	0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xaf, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, // .Q...........W..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xb1, 0x00, 0x00, // .....Q..........
	0x00, 0x57, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, // .W.......P......
	0x00, 0xb2, 0x00, 0x00, 0x00, 0xaf, 0x00, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, // .............!..
	0x00, 0x21, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x69, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, // .!...>...i......
	0x00, 0x3e, 0x00, 0x03, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x5b, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, // .>...m...[...>..
	0x00, 0x70, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x74, 0x00, 0x00, // .p.......>...t..
	0x00, 0x5f, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00, 0x00, 0x03, 0x01, // ._.......8......
	0x00, 0x10, 0x00, 0xff, 0xff, 0x10, 0x00,                                                       // .......
};
static const bgfx::EmbeddedShader vs_dmd_noworld_st = BGFX_EMBEDDED_SHADER(vs_dmd_noworld_st);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of vertex shader from vs_dmd.sc to vs_dmd_world_clip with options: WORLD CLIP
static const uint8_t vs_dmd_world_clip_mtl[1255] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x4e, 0xbd, 0x0b, 0x9f, 0x03, 0x00, 0x08, 0x67, // VSH.....N......g
	0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x02, 0x01, 0x50, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // lassPad..P......
	0x00, 0x10, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, // ..matWorldViewPr
	0x6f, 0x6a, 0x04, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x63, 0x6c, 0x69, // oj...........cli
	0x70, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x02, 0x01, 0x40, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // p_plane..@......
	0x00, 0x8a, 0x04, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, // .....#include <m
	0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, // etal_stdlib>.#in
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, // clude <simd/simd
	0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, // .h>..using names
	0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, // pace metal;..str
	0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, // uct _Global.{.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, //   float4x4 matWo
	0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x20, 0x20, 0x20, // rldViewProj;.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x63, 0x6c, 0x69, 0x70, 0x5f, 0x70, 0x6c, 0x61, //  float4 clip_pla
	0x6e, 0x65, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x67, // ne;.    float4 g
	0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, // lassPad;.};..str
	0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, // uct xlatMtlMain_
	0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x67, 0x66, // out.{..float bgf
	0x78, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x69, 0x7a, // x_metal_pointSiz
	0x65, 0x20, 0x5b, 0x5b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5d, 0x5d, // e [[point_size]]
	0x20, 0x3d, 0x20, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //  = 1;.    float 
	0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, // _entryPointOutpu
	0x74, 0x5f, 0x76, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, // t_v_clipDistance
	0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, //  [[user(locn0)]]
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x65, 0x6e, // ;.    float2 _en
	0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, // tryPointOutput_v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, // _texcoord0 [[use
	0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // r(locn1)]];.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, // float2 _entryPoi
	0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // ntOutput_v_texco
	0x6f, 0x72, 0x64, 0x31, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, // ord1 [[user(locn
	0x32, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // 2)]];.    float4
	0x20, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x5b, 0x5b, 0x70, //  gl_Position [[p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, // osition]];.};..s
	0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, // truct xlatMtlMai
	0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // n_in.{.    float
	0x33, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x5b, 0x5b, 0x61, // 3 a_position [[a
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, // ttribute(0)]];. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, //    float2 a_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, // oord0 [[attribut
	0x65, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x74, // e(1)]];.};..vert
	0x65, 0x78, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, // ex xlatMtlMain_o
	0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, // ut xlatMtlMain(x
	0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, // latMtlMain_in in
	0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, //  [[stage_in]], c
	0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, // onstant _Global&
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, //  _mtl_u [[buffer
	0x28, 0x30, 0x29, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, // (0)]]).{.    xla
	0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, // tMtlMain_out out
	0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  = {};.    float
	0x34, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, // 4 _145 = float4(
	0x69, 0x6e, 0x2e, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, // in.a_position, 1
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x67, 0x6c, 0x5f, // .0);.    out.gl_
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // Position = _mtl_
	0x75, 0x2e, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, // u.matWorldViewPr
	0x6f, 0x6a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, // oj * _145;.    o
	0x75, 0x74, 0x2e, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, // ut._entryPointOu
	0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, 0x74, 0x61, // tput_v_clipDista
	0x6e, 0x63, 0x65, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // nce = dot(_mtl_u
	0x2e, 0x63, 0x6c, 0x69, 0x70, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2c, 0x20, 0x5f, 0x31, 0x34, // .clip_plane, _14
	0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x5f, 0x65, 0x6e, 0x74, // 5);.    out._ent
	0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, // ryPointOutput_v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x61, // texcoord0 = in.a
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // _texcoord0;.    
	0x6f, 0x75, 0x74, 0x2e, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, // out._entryPointO
	0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, // utput_v_texcoord
	0x31, 0x20, 0x3d, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, // 1 = (in.a_texcoo
	0x72, 0x64, 0x30, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x28, 0x31, 0x2e, // rd0 * float2((1.
	0x30, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, 0x6c, 0x61, 0x73, 0x73, // 0 + _mtl_u.glass
	0x50, 0x61, 0x64, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // Pad.x) + _mtl_u.
	0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x79, 0x2c, 0x20, 0x28, 0x31, 0x2e, 0x30, // glassPad.y, (1.0
	0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, //  + _mtl_u.glassP
	0x61, 0x64, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, // ad.z) + _mtl_u.g
	0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x66, 0x6c, // lassPad.w)) - fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, 0x6c, 0x61, 0x73, // oat2(_mtl_u.glas
	0x73, 0x50, 0x61, 0x64, 0x2e, 0x78, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, // sPad.x, _mtl_u.g
	0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // lassPad.z);.    
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, // return out;.}...
	0x02, 0x01, 0x00, 0x10, 0x00, 0x60, 0x00,                                                       // .....`.
};
static const uint8_t vs_dmd_world_clip_essl[6584] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x4e, 0xbd, 0x0b, 0x9f, 0x00, 0x00, 0xa5, 0x19, // VSH.....N.......
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // s.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x75, 0x74, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, // arying out.preci
	0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // sion highp float
	0x3b, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, // ;.precision high
	0x70, 0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, // p int;.#define s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // hadow2D(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // e(_sampler, _coo
	0x72, 0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, // rd).#define shad
	0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ow2DProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // r, _coord) textu
	0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // reProj(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, //  _coord).attribu
	0x74, 0x65, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, // te vec3 a_positi
	0x6f, 0x6e, 0x3b, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x76, 0x65, // on;.attribute ve
	0x63, 0x32, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, // c2 a_texcoord0;.
	0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, // varying float v_
	0x63, 0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x3b, 0x0a, 0x76, 0x61, // clipDistance;.va
	0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, // rying vec2 v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, // coord0;.varying 
	0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, // vec2 v_texcoord1
	0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, // ;.vec3 instMul(v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, // ec3 _vec, mat3 _
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, // mtx) { return ( 
	0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, // (_vec) * (_mtx) 
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, // ); }.vec3 instMu
	0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, // l(mat3 _mtx, vec
	0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 3 _vec) { return
	0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, //  ( (_mtx) * (_ve
	0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, // c) ); }.vec4 ins
	0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, // tMul(vec4 _vec, 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // mat4 _mtx) { ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, // urn ( (_vec) * (
	0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // _mtx) ); }.vec4 
	0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, // instMul(mat4 _mt
	0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, // x, vec4 _vec) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, // return ( (_mtx) 
	0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, // * (_vec) ); }.fl
	0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, // oat rcp(float _a
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, // ) { return 1.0/_
	0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, // a; }.vec2 rcp(ve
	0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c2 _a) { return 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, // vec2(1.0)/_a; }.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, // vec3 rcp(vec3 _a
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // ) { return vec3(
	0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // 1.0)/_a; }.vec4 
	0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, // rcp(vec4 _a) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, // eturn vec4(1.0)/
	0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, // _a; }.vec2 vec2_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // splat(float _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, // { return vec2(_x
	0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, // , _x); }.vec3 ve
	0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // c3_splat(float _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, // x) { return vec3
	0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // (_x, _x, _x); }.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // vec4 vec4_splat(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // float _x) { retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, // rn vec4(_x, _x, 
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, // _x, _x); }.uvec2
	0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, //  uvec2_splat(uin
	0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, // t _x) { return u
	0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // vec2(_x, _x); }.
	0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, // uvec3 uvec3_spla
	0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // t(uint _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // urn uvec3(_x, _x
	0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, // , _x); }.uvec4 u
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, // vec4_splat(uint 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, // _x) { return uve
	0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // c4(_x, _x, _x, _
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, // x); }.mat4 mtxFr
	0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, // omRows(vec4 _0, 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, // vec4 _1, vec4 _2
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // , vec4 _3).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, // urn transpose(ma
	0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, // t4(_0, _1, _2, _
	0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, // 3) );.}.mat4 mtx
	0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, // FromCols(vec4 _0
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // , vec4 _1, vec4 
	0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // _2, vec4 _3).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, // eturn mat4(_0, _
	0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, // 1, _2, _3);.}.ma
	0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, // t3 mtxFromRows(v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, // ec3 _0, vec3 _1,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  vec3 _2).{.retu
	0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, // rn transpose(mat
	0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, // 3(_0, _1, _2) );
	0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, // .}.mat3 mtxFromC
	0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, // ols(vec3 _0, vec
	0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, // 3 _1, vec3 _2).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, // .return mat3(_0,
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, //  _1, _2);.}.unif
	0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, // orm vec4 u_viewR
	0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, // ect;.uniform vec
	0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, // 4 u_viewTexel;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, // niform mat4 u_vi
	0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // ew;.uniform mat4
	0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, //  u_invView;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, // orm mat4 u_proj;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // invProj;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, //  mat4 u_viewProj
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, // _invViewProj;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, // iform mat4 u_mod
	0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // el[32];.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, // mat4 u_modelView
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, // _modelViewProj;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, // uniform vec4 u_a
	0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // lphaRef4;.float 
	0x73, 0x71, 0x72, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, // sqr( float v).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // return v*v;.}.ve
	0x63, 0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, // c2 sqr( vec2 v).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, // {.return v*v;.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // vec3 sqr( vec3 v
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, // ).{.return v*v;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x20, 0x76, // }.vec3 mul_w1( v
	0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, // ec3 v, mat4 m).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, // .return v.x*m[0]
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, // .xyz + (v.y*m[1]
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, // .xyz + (v.z*m[2]
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, // .xyz + m[3].xyz)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, // );.}.float acos_
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, // approx_divPI( fl
	0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, // oat v).{.float x
	0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, //  = abs(v);.if(1.
	0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, //  - x <= 0.000061
	0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 03515625).return
	0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, //  (v >= 0.) ? 0. 
	0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, // : 1.;.float res 
	0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, // = ((-0.155972/3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, //  * x + (1.56467/
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, // 5) ) * sqrt(1. -
	0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, //  x);.return (v >
	0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, // = 0.) ? res : 1.
	0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //  - res;.}.float 
	0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, // atan2_approx_div
	0x32, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x66, 0x6c, // 2PI( float y, fl
	0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, // oat x).{.float a
	0x62, 0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x66, // bs_y = abs(y);.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, // loat abs_x = abs
	0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, // (x);.if(abs_x <=
	0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, //  0.0000610351562
	0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, // 5 && abs_y <= 0.
	0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, // 00006103515625).
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // return 0.;.float
	0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, //  r = (abs_x - ab
	0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, // s_y) / (abs_x + 
	0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, // abs_y);.float an
	0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, // gle = ((x < 0.) 
	0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, // ? (3./8.) : (1./
	0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, // 8.)).+ (0.211868
	0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, //  /(2.*3.14159265
	0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, // 3589793238462643
	0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, // 3832795) * r * r
	0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, //  - 0.987305 /(2.
	0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, // *3.1415926535897
	0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, // 9323846264338327
	0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, // 95)) * ((x < 0.)
	0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  ? -r : r);.retu
	0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, // rn (y < 0.) ? -a
	0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, // ngle : angle;.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, // float asin_appro
	0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, // x_divPI( float v
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, // ).{.float x = ab
	0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, // s(v);.if(1. - x 
	0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, // <= 0.00006103515
	0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, // 625).return (v >
	0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, // = 0.) ? 0.5 : -0
	0x2e, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, // .5;.float res = 
	0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, // ((-0.155972/3.14
	0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, // 1592653589793238
	0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, // 4626433832795) *
	0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, //  x + (1.56467/3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, //  ) * sqrt(1. - x
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, // );.return (v >= 
	0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, // 0.) ? 0.5 - res 
	0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, // : -0.5 + res;.}.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, // vec2 ray_to_equi
	0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x20, // rectangular_uv( 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // vec3 ray).{.retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, // rn vec2(.0.5 + a
	0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, // tan2_approx_div2
	0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, // PI(ray.y, ray.x)
	0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, // ,.acos_approx_di
	0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // vPI(ray.z));.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, // loat InvsRGB( fl
	0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, // oat color).{.if 
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, // (color <= 0.0404
	0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // 5).return color 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, // * (1.0/12.92);.e
	0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, // lse.return pow(c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, // olor * (1.0/1.05
	0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, // 5) + (0.055/1.05
	0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // 5), 2.4);.}.floa
	0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, // t InvRec709( flo
	0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, // at color).{.if (
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, // color <= 0.081).
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, // return color * (
	0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, // 1.0/4.5);.else.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // eturn pow(color 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, // * (1.0/1.099) + 
	0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, // (0.099/1.099), 1
	0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // .0/0.45);.}.floa
	0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, // t InvGamma( floa
	0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // t color).{.retur
	0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // n InvsRGB(color)
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, // ;.}.vec3 InvGamm
	0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, // a( vec3 color).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, // .return vec3(Inv
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, // Gamma(color.x),I
	0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, // nvGamma(color.y)
	0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // ,InvGamma(color.
	0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, // z));.}.vec3 InvT
	0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, // oneMap( vec3 col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, // or).{.float inv_
	0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, // 2bh = 0.5/0.25;.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, // float bh = 4.0*0
	0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // .25 - 2.0;.retur
	0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, // n (color - 1.0 +
	0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, //  sqrt(color*(col
	0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, // or + bh) + 1.0))
	0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // *inv_2bh;.}.floa
	0x74, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, // t sRGB( float f)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, // .{.float s;.if (
	0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, // f <= 0.0031308).
	0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, // s = 12.92 * f;.e
	0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, // lse.s = 1.055 * 
	0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, // pow(f, 1.0/2.4) 
	0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // - 0.055;.return 
	0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, // s;.}.float Rec70
	0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, // 9( float f).{.fl
	0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, // oat s;.if (f <= 
	0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, // 0.018).s = 4.5 *
	0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, //  f;.else.s = 1.0
	0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, // 99 * pow(f, 0.45
	0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // ) - 0.099;.retur
	0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, // n s;.}.float FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // amma( float colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, // r).{.return sRGB
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // (color);.}.vec2 
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, // FBGamma( vec2 co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, // lor).{.return ve
	0x63, 0x32, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // c2(FBGamma(color
	0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .x),FBGamma(colo
	0x72, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, // r.y));.}.vec3 FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // Gamma( vec3 colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, // r).{.return vec3
	0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, // (FBGamma(color.x
	0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // ),FBGamma(color.
	0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // y),FBGamma(color
	0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, // .z));.}.vec3 FBG
	0x61, 0x6d, 0x6d, 0x61, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, // amma22( vec3 col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // or).{.return vec
	0x33, 0x28, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x31, // 3(pow(color.x, 1
	0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .0/2.2),pow(colo
	0x72, 0x2e, 0x79, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, // r.y, 1.0/2.2),po
	0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, // w(color.z, 1.0/2
	0x2e, 0x32, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, // .2));.}.float FB
	0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, // ToneMap( float l
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, // ).{.return l * (
	0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, // (l*0.25 + 1.0) /
	0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, //  (l + 1.0));.}.v
	0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, // ec2 FBToneMap( v
	0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // ec2 color).{.flo
	0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // at l = dot(color
	0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, // ,vec2(0.176204+0
	0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, // .0108109*0.5,0.8
	0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, // 12985+0.0108109*
	0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, // 0.5));.return co
	0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, // lor * ((l*0.25 +
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, //  1.0) / (l + 1.0
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, // ));.}.vec3 FBTon
	0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // eMap( vec3 color
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, // ).{.float l = do
	0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, // t(color,vec3(0.1
	0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, // 76204,0.812985,0
	0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // .0108109));.retu
	0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, // rn color * ((l*0
	0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, // .25 + 1.0) / (l 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // + 1.0));.}.vec4 
	0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // Additive( vec4 c
	0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // Base, vec4 cBlen
	0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, // d, float percent
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // ).{.return cBase
	0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, //  + cBlend*percen
	0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, // t;.}.vec3 Screen
	0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, //  ( vec3 cBase, v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // ec3 cBlend).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // turn 1.0 - (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // - cBase) * (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // - cBlend);.}.vec
	0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // 4 Screen ( vec4 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, // cBase, vec4 cBle
	0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, // nd).{.return 1.0
	0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, //  - (1.0 - cBase)
	0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, //  * (1.0 - cBlend
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, // );.}.vec3 Screen
	0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // HDR ( vec3 cBase
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, // , vec3 cBlend).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, // .return max(1.0 
	0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, // - (1.0 - cBase) 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // * (1.0 - cBlend)
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, // , vec3(0.,0.,0.)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, // );.}.vec4 Screen
	0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // HDR ( vec4 cBase
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, // , vec4 cBlend).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, // .return max(1.0 
	0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, // - (1.0 - cBase) 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // * (1.0 - cBlend)
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, // , vec4(0.,0.,0.,
	0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, // 0.));.}.vec4 Mul
	0x74, 0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, // tiply ( vec4 cBa
	0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, // se, vec4 cBlend,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, //  float percent).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, // {.return cBase *
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, //  cBlend*percent;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, // .}.vec4 Overlay 
	0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, // ( vec4 cBase, ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, // c4 cBlend).{.vec
	0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, // 4 cNew = step(0.
	0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, // 5, cBase);.cNew 
	0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, // = mix(cBase*cBle
	0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, // nd*2.0, 1.0-2.0*
	0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, // (1.0-cBase)*(1.0
	0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, // -cBlend), cNew);
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, // .return cNew;.}.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, // vec4 OverlayHDR 
	0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, // ( vec4 cBase, ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, // c4 cBlend).{.vec
	0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, // 4 cNew = step(0.
	0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, // 5, cBase);.cNew 
	0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, // = max(mix(cBase*
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, // cBlend*2.0, 1.0-
	0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, // 2.0*(1.0-cBase)*
	0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, // (1.0-cBlend), cN
	0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, // ew), vec4(0.,0.,
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 0.,0.));.return 
	0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, // cNew;.}.vec3 cos
	0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, // _hemisphere_samp
	0x6c, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, // le( vec2 t).{.fl
	0x6f, 0x61, 0x74, 0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, // oat phi = t.y * 
	0x28, 0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, // (2.0*3.141592653
	0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, // 5897932384626433
	0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, // 832795);.float c
	0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, // osTheta = sqrt(1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // .0 - t.x);.float
	0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, //  sinTheta = sqrt
	0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, // (t.x);.float sp,
	0x63, 0x70, 0x3b, 0x0a, 0x7b, 0x73, 0x70, 0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, 0x69, 0x29, // cp;.{sp=sin(phi)
	0x3b, 0x63, 0x70, 0x3d, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, 0x3b, 0x0a, // ;cp=cos(phi);};.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, // return vec3(cp *
	0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, //  sinTheta, cosTh
	0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, // eta, sp * sinThe
	0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, // ta);.}.vec3 rota
	0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, // te_to_vector_upp
	0x65, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x76, 0x65, // er( vec3 vec, ve
	0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, // c3 normal).{.if(
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, // normal.y > -0.99
	0x39, 0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, // 999).{.float h =
	0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, //  1.0/(1.0+normal
	0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, // .y);.float hz = 
	0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // h*normal.z;.floa
	0x74, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // t hzx = hz*norma
	0x6c, 0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, // l.x;.return vec3
	0x28, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // (.vec.x * (norma
	0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, // l.y+hz*normal.z)
	0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, //  + vec.y * norma
	0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, // l.x - vec.z * hz
	0x78, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // x,.vec.y * norma
	0x6c, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, // l.y - vec.x * no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, // rmal.x - vec.z *
	0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, //  normal.z,.vec.y
	0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, //  * normal.z - ve
	0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, // c.x * hzx + vec.
	0x7a, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, // z * (normal.y+h*
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // normal.x*normal.
	0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, // x));.}.else retu
	0x72, 0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // rn -vec;.}.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, // rm mat4 matWorld
	0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // ViewProj;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x6c, 0x69, 0x70, 0x5f, 0x70, 0x6c, 0x61, 0x6e, // m vec4 clip_plan
	0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // e;.uniform vec4 
	0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, // glassPad;.void m
	0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x6f, 0x73, // ain().{.vec4 pos
	0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, //  = vec4(a_positi
	0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // on, 1.0);.v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, // oord0 = a_texcoo
	0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, // rd0;.v_texcoord1
	0x20, 0x3d, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2a, //  = a_texcoord0 *
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, //  vec2(1.0 + (gla
	0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, // ssPad.x) + (glas
	0x73, 0x50, 0x61, 0x64, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x28, // sPad.y), 1.0 + (
	0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x67, // glassPad.z) + (g
	0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x76, 0x65, // lassPad.w)) - ve
	0x63, 0x32, 0x28, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x78, 0x29, 0x2c, // c2((glassPad.x),
	0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, //  (glassPad.z));.
	0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x28, 0x20, // gl_Position = ( 
	0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, // (matWorldViewPro
	0x6a, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x70, 0x6f, 0x73, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x76, 0x5f, // j) * (pos) );.v_
	0x63, 0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x3d, 0x20, 0x64, // clipDistance = d
	0x6f, 0x74, 0x28, 0x63, 0x6c, 0x69, 0x70, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2c, 0x20, 0x70, // ot(clip_plane, p
	0x6f, 0x73, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,                                                 // os);.}..
};
static const uint8_t vs_dmd_world_clip_glsl[6928] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x4e, 0xbd, 0x0b, 0x9f, 0x00, 0x00, 0xfd, 0x1a, // VSH.....N.......
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x23, // ..#version 440.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, //           textur
	0x65, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // e.#define textur
	0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, // e2DLod       tex
	0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // tureLod.#define 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, // texture2DGrad   
	0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, //    textureGrad.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x50, 0x72, 0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // ProjLod   textur
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, // eProjLod.#define
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, //  texture2DProjGr
	0x61, 0x64, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, // ad  textureProjG
	0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, // rad.#define text
	0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, // ureCubeLod     t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, // extureLod.#defin
	0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, // e textureCubeGra
	0x64, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, // d    textureGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x33, 0x44, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // 3D          text
	0x75, 0x72, 0x65, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, // ure.#define text
	0x75, 0x72, 0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, // ure2DLodOffset t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, // extureLodOffset.
	0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, // #define attribut
	0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, // e in.#define var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x75, 0x74, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, // ying out.#define
	0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, //  bgfxShadow2D(_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, // ampler, _coord) 
	0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, //     vec4_splat(t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // exture(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, //  _coord) ).#defi
	0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, // ne bgfxShadow2DP
	0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, // roj(_sampler, _c
	0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // oord) vec4_splat
	0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, // (textureProj(_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, // mpler, _coord) )
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // .attribute vec3 
	0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x61, 0x74, 0x74, 0x72, // a_position;.attr
	0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, // ibute vec2 a_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, // coord0;.varying 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, 0x74, // float v_clipDist
	0x61, 0x6e, 0x63, 0x65, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, // ance;.varying ve
	0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, // c2 v_texcoord0;.
	0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, // varying vec2 v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, // excoord1;.vec3 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, // nstMul(vec3 _vec
	0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // , mat3 _mtx) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, // eturn ( (_vec) *
	0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, //  (_mtx) ); }.vec
	0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, // 3 instMul(mat3 _
	0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, // mtx, vec3 _vec) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, // { return ( (_mtx
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // ) * (_vec) ); }.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, // vec4 instMul(vec
	0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, // 4 _vec, mat4 _mt
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, // x) { return ( (_
	0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, // vec) * (_mtx) );
	0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, //  }.vec4 instMul(
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // mat4 _mtx, vec4 
	0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, // _vec) { return (
	0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, //  (_mtx) * (_vec)
	0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, //  ); }.float rcp(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // float _a) { retu
	0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, // rn 1.0/_a; }.vec
	0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, // 2 rcp(vec2 _a) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, //  return vec2(1.0
	0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, // )/_a; }.vec3 rcp
	0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // (vec3 _a) { retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, // rn vec3(1.0)/_a;
	0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, //  }.vec4 rcp(vec4
	0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, //  _a) { return ve
	0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, // c4(1.0)/_a; }.ve
	0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, // c2 vec2_splat(fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // oat _x) { return
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, //  vec2(_x, _x); }
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // .vec3 vec3_splat
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // (float _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // urn vec3(_x, _x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, //  _x); }.vec4 vec
	0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, // 4_splat(float _x
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // ) { return vec4(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // _x, _x, _x, _x);
	0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, //  }.uvec2 uvec2_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // plat(uint _x) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, // return uvec2(_x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, //  _x); }.uvec3 uv
	0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, // ec3_splat(uint _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, // x) { return uvec
	0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // 3(_x, _x, _x); }
	0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, // .uvec4 uvec4_spl
	0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // at(uint _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // turn uvec4(_x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, // x, _x, _x); }.ma
	0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, // t4 mtxFromRows(v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, // ec4 _0, vec4 _1,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, //  vec4 _2, vec4 _
	0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, // 3).{.return tran
	0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, // spose(mat4(_0, _
	0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // 1, _2, _3) );.}.
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, // mat4 mtxFromCols
	0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // (vec4 _0, vec4 _
	0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // 1, vec4 _2, vec4
	0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, //  _3).{.return ma
	0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, // t4(_0, _1, _2, _
	0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, // 3);.}.mat3 mtxFr
	0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, // omRows(vec3 _0, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, // vec3 _1, vec3 _2
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, // ).{.return trans
	0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, // pose(mat3(_0, _1
	0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, // , _2) );.}.mat3 
	0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, // mtxFromCols(vec3
	0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, //  _0, vec3 _1, ve
	0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c3 _2).{.return 
	0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, // mat3(_0, _1, _2)
	0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // ;.}.uniform vec4
	0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, //  u_viewRect;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, // form vec4 u_view
	0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // Texel;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // at4 u_view;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, // orm mat4 u_invVi
	0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // ew;.uniform mat4
	0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, //  u_proj;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, //  mat4 u_invProj;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // viewProj;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, // m mat4 u_invView
	0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // Proj;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, // t4 u_model[32];.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, // uniform mat4 u_m
	0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // odelView;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, // m mat4 u_modelVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // ewProj;.uniform 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, // vec4 u_alphaRef4
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x66, 0x6c, 0x6f, // ;.float sqr( flo
	0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // at v).{.return v
	0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, // *v;.}.vec2 sqr( 
	0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // vec2 v).{.return
	0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x71, 0x72, //  v*v;.}.vec3 sqr
	0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // ( vec3 v).{.retu
	0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, // rn v*v;.}.vec3 m
	0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, 0x6d, // ul_w1( vec3 v, m
	0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // at4 m).{.return 
	0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, // v.x*m[0].xyz + (
	0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, // v.y*m[1].xyz + (
	0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x6d, // v.z*m[2].xyz + m
	0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // [3].xyz));.}.flo
	0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, // at acos_approx_d
	0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, // ivPI( float v).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, // .float x = abs(v
	0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, // );.if(1. - x <= 
	0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, // 0.00006103515625
	0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, // ).return (v >= 0
	0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, // .) ? 0. : 1.;.fl
	0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, // oat res = ((-0.1
	0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, // 55972/3.14159265
	0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, // 3589793238462643
	0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, // 3832795) * x + (
	0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, // 1.56467/3.141592
	0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, // 6535897932384626
	0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, // 433832795) ) * s
	0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // qrt(1. - x);.ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, // urn (v >= 0.) ? 
	0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, // res : 1. - res;.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, // }.float atan2_ap
	0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, // prox_div2PI( flo
	0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, // at y, float x).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, 0x61, // .float abs_y = a
	0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, // bs(y);.float abs
	0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, // _x = abs(x);.if(
	0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, // abs_x <= 0.00006
	0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, // 103515625 && abs
	0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, // _y <= 0.00006103
	0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, // 515625).return 0
	0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, // .;.float r = (ab
	0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, // s_x - abs_y) / (
	0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, 0x0a, // abs_x + abs_y);.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, // float angle = ((
	0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, // x < 0.) ? (3./8.
	0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, // ) : (1./8.)).+ (
	0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, // 0.211868 /(2.*3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, //  * r * r - 0.987
	0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // 305 /(2.*3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, // 6433832795)) * (
	0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, // (x < 0.) ? -r : 
	0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, // r);.return (y < 
	0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, // 0.) ? -angle : a
	0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, // ngle;.}.float as
	0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, // in_approx_divPI(
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, //  float v).{.floa
	0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, // t x = abs(v);.if
	0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, // (1. - x <= 0.000
	0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, // 06103515625).ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, // urn (v >= 0.) ? 
	0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // 0.5 : -0.5;.floa
	0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, // t res = ((-0.155
	0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, // 972/3.1415926535
	0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, // 8979323846264338
	0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, // 32795) * x + (1.
	0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, // 56467/3.14159265
	0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, // 3589793238462643
	0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, // 3832795) ) * sqr
	0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // t(1. - x);.retur
	0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, // n (v >= 0.) ? 0.
	0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, // 5 - res : -0.5 +
	0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, 0x79, //  res;.}.vec2 ray
	0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, // _to_equirectangu
	0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, // lar_uv( vec3 ray
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // ).{.return vec2(
	0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, // .0.5 + atan2_app
	0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, // rox_div2PI(ray.y
	0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, // , ray.x),.acos_a
	0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, // pprox_divPI(ray.
	0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, // z));.}.float Inv
	0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // sRGB( float colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, // r).{.if (color <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // = 0.04045).retur
	0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, // n color * (1.0/1
	0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, // 2.92);.else.retu
	0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, // rn pow(color * (
	0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, // 1.0/1.055) + (0.
	0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, // 055/1.055), 2.4)
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, // ;.}.float InvRec
	0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // 709( float color
	0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, // ).{.if (color <=
	0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, //  0.081).return c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, // olor * (1.0/4.5)
	0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, // ;.else.return po
	0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, // w(color * (1.0/1
	0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, // .099) + (0.099/1
	0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, // .099), 1.0/0.45)
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // ;.}.float InvGam
	0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // ma( float color)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, // .{.return InvsRG
	0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // B(color);.}.vec3
	0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, //  InvGamma( vec3 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // color).{.return 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, // vec3(InvGamma(co
	0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, // lor.x),InvGamma(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, // color.y),InvGamm
	0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // a(color.z));.}.v
	0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, // ec3 InvToneMap( 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, // vec3 color).{.fl
	0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, // oat inv_2bh = 0.
	0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, // 5/0.25;.float bh
	0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, //  = 4.0*0.25 - 2.
	0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // 0;.return (color
	0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, //  - 1.0 + sqrt(co
	0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, // lor*(color + bh)
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, //  + 1.0))*inv_2bh
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, // ;.}.float sRGB( 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float f).{.float
	0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, //  s;.if (f <= 0.0
	0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, // 031308).s = 12.9
	0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, // 2 * f;.else.s = 
	0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, // 1.055 * pow(f, 1
	0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, // .0/2.4) - 0.055;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // .return s;.}.flo
	0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // at Rec709( float
	0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, //  f).{.float s;.i
	0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, // f (f <= 0.018).s
	0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, //  = 4.5 * f;.else
	0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, // .s = 1.099 * pow
	0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, // (f, 0.45) - 0.09
	0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // 9;.return s;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, // loat FBGamma( fl
	0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // oat color).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, // urn sRGB(color);
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, // .}.vec2 FBGamma(
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, //  vec2 color).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, // eturn vec2(FBGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, // ma(color.x),FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, // mma(color.y));.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, // .vec3 FBGamma( v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // ec3 color).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, // urn vec3(FBGamma
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // (color.x),FBGamm
	0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, // a(color.y),FBGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // ma(color.z));.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x32, 0x32, 0x28, 0x20, // vec3 FBGamma22( 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // vec3 color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, // turn vec3(pow(co
	0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, // lor.x, 1.0/2.2),
	0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x2c, 0x20, 0x31, 0x2e, 0x30, // pow(color.y, 1.0
	0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // /2.2),pow(color.
	0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // z, 1.0/2.2));.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, // float FBToneMap(
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  float l).{.retu
	0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, // rn l * ((l*0.25 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, // + 1.0) / (l + 1.
	0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, // 0));.}.vec2 FBTo
	0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // neMap( vec2 colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, // r).{.float l = d
	0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, // ot(color,vec2(0.
	0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, // 176204+0.0108109
	0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, // *0.5,0.812985+0.
	0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, // 0108109*0.5));.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, // eturn color * ((
	0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, // l*0.25 + 1.0) / 
	0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // (l + 1.0));.}.ve
	0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, // c3 FBToneMap( ve
	0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // c3 color).{.floa
	0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, // t l = dot(color,
	0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, // vec3(0.176204,0.
	0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, // 812985,0.0108109
	0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // ));.return color
	0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, //  * ((l*0.25 + 1.
	0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, // 0) / (l + 1.0));
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, // .}.vec4 Additive
	0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, // ( vec4 cBase, ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // c4 cBlend, float
	0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  percent).{.retu
	0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // rn cBase + cBlen
	0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // d*percent;.}.vec
	0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // 3 Screen ( vec3 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, // cBase, vec3 cBle
	0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, // nd).{.return 1.0
	0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, //  - (1.0 - cBase)
	0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, //  * (1.0 - cBlend
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, // );.}.vec4 Screen
	0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, //  ( vec4 cBase, v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // ec4 cBlend).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // turn 1.0 - (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // - cBase) * (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // - cBlend);.}.vec
	0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, // 3 ScreenHDR ( ve
	0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // c3 cBase, vec3 c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // Blend).{.return 
	0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // max(1.0 - (1.0 -
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, //  cBase) * (1.0 -
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, //  cBlend), vec3(0
	0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // .,0.,0.));.}.vec
	0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, // 4 ScreenHDR ( ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // c4 cBase, vec4 c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // Blend).{.return 
	0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // max(1.0 - (1.0 -
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, //  cBase) * (1.0 -
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, //  cBlend), vec4(0
	0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // .,0.,0.,0.));.}.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, 0x20, // vec4 Multiply ( 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // vec4 cBase, vec4
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, //  cBlend, float p
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ercent).{.return
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, //  cBase * cBlend*
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // percent;.}.vec4 
	0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // Overlay ( vec4 c
	0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // Base, vec4 cBlen
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, // d).{.vec4 cNew =
	0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, //  step(0.5, cBase
	0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, // );.cNew = mix(cB
	0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, // ase*cBlend*2.0, 
	0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, // 1.0-2.0*(1.0-cBa
	0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // se)*(1.0-cBlend)
	0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // , cNew);.return 
	0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, // cNew;.}.vec4 Ove
	0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // rlayHDR ( vec4 c
	0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // Base, vec4 cBlen
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, // d).{.vec4 cNew =
	0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, //  step(0.5, cBase
	0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, // );.cNew = max(mi
	0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, // x(cBase*cBlend*2
	0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, // .0, 1.0-2.0*(1.0
	0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, // -cBase)*(1.0-cBl
	0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, // end), cNew), vec
	0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, // 4(0.,0.,0.,0.));
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, // .return cNew;.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, // vec3 cos_hemisph
	0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, // ere_sample( vec2
	0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x68, 0x69, 0x20, //  t).{.float phi 
	0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, 0x31, // = t.y * (2.0*3.1
	0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, // 4159265358979323
	0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x3b, // 84626433832795);
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, // .float cosTheta 
	0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, // = sqrt(1.0 - t.x
	0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, // );.float sinThet
	0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, // a = sqrt(t.x);.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x7b, 0x73, 0x70, 0x3d, // loat sp,cp;.{sp=
	0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x63, 0x70, 0x3d, 0x63, 0x6f, 0x73, 0x28, // sin(phi);cp=cos(
	0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // phi);};.return v
	0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, // ec3(cp * sinThet
	0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, // a, cosTheta, sp 
	0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // * sinTheta);.}.v
	0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, // ec3 rotate_to_ve
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, // ctor_upper( vec3
	0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, //  vec, vec3 norma
	0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, // l).{.if(normal.y
	0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, 0x66, //  > -0.99999).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, // loat h = 1.0/(1.
	0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, // 0+normal.y);.flo
	0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // at hz = h*normal
	0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, 0x20, // .z;.float hzx = 
	0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, 0x74, // hz*normal.x;.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, // urn vec3(.vec.x 
	0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, 0x6e, // * (normal.y+hz*n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x79, // ormal.z) + vec.y
	0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, //  * normal.x - ve
	0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, // c.z * hzx,.vec.y
	0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, 0x65, //  * normal.y - ve
	0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, // c.x * normal.x -
	0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, //  vec.z * normal.
	0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // z,.vec.y * norma
	0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, 0x7a, // l.z - vec.x * hz
	0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, // x + vec.z * (nor
	0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // mal.y+h*normal.x
	0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x65, // *normal.x));.}.e
	0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, 0x3b, // lse return -vec;
	0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // .}.uniform mat4 
	0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, // matWorldViewProj
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // ;.uniform vec4 c
	0x6c, 0x69, 0x70, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // lip_plane;.unifo
	0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, // rm vec4 glassPad
	0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, // ;.void main().{.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // vec4 pos = vec4(
	0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, // a_position, 1.0)
	0x3b, 0x0a, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3d, 0x20, // ;.v_texcoord0 = 
	0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x5f, 0x74, // a_texcoord0;.v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, // excoord1 = a_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, // coord0 * vec2(1.
	0x30, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x78, 0x29, // 0 + (glassPad.x)
	0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x79, 0x29, 0x2c, //  + (glassPad.y),
	0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, //  1.0 + (glassPad
	0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, // .z) + (glassPad.
	0x77, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x28, 0x67, 0x6c, 0x61, 0x73, // w)) - vec2((glas
	0x73, 0x50, 0x61, 0x64, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, // sPad.x), (glassP
	0x61, 0x64, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, // ad.z));.gl_Posit
	0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, // ion = ( (matWorl
	0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x70, 0x6f, // dViewProj) * (po
	0x73, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x76, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, 0x74, // s) );.v_clipDist
	0x61, 0x6e, 0x63, 0x65, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6c, 0x69, 0x70, 0x5f, // ance = dot(clip_
	0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2c, 0x20, 0x70, 0x6f, 0x73, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00, // plane, pos);.}..
};
static const uint8_t vs_dmd_world_clip_dx11[837] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x4e, 0xbd, 0x0b, 0x9f, 0x03, 0x00, 0x10, 0x6d, // VSH.....N......m
	0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x04, // atWorldViewProj.
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x63, 0x6c, 0x69, 0x70, 0x5f, 0x70, // ..........clip_p
	0x6c, 0x61, 0x6e, 0x65, 0x02, 0x00, 0x40, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x67, // lane..@........g
	0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x02, 0x00, 0x50, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // lassPad..P......
	0x00, 0xe8, 0x02, 0x00, 0x00, 0x44, 0x58, 0x42, 0x43, 0x9d, 0xd2, 0x12, 0x3c, 0x23, 0x0b, 0x29, // .....DXBC...<#.)
	0xd4, 0xfa, 0x0d, 0xa9, 0x12, 0xe0, 0x1f, 0xf9, 0xb4, 0x01, 0x00, 0x00, 0x00, 0xe8, 0x02, 0x00, // ................
	0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00, // .....,..........
	0x00, 0x49, 0x53, 0x47, 0x4e, 0x4c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, // .ISGNL..........
	0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // .8..............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........A......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, // ................
	0x00, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, // .POSITION.TEXCOO
	0x52, 0x44, 0x00, 0xab, 0xab, 0x4f, 0x53, 0x47, 0x4e, 0x80, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, // RD...OSGN.......
	0x00, 0x08, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // .....h..........
	0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, // .............t..
	0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x01, 0x0e, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .....t..........
	0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x09, 0x00, 0x00, 0x74, 0x00, 0x00, // .............t..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // ................
	0x00, 0x03, 0x0c, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, // .....SV_POSITION
	0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0xab, 0xab, 0xab, 0x53, 0x48, 0x45, // .TEXCOORD....SHE
	0x58, 0xd8, 0x01, 0x00, 0x00, 0x50, 0x00, 0x01, 0x00, 0x76, 0x00, 0x00, 0x00, 0x6a, 0x08, 0x00, // X....P...v...j..
	0x01, 0x59, 0x00, 0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, // .Y...F. ........
	0x00, 0x5f, 0x00, 0x00, 0x03, 0x72, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, // ._...r......._..
	0x03, 0x32, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x04, 0xf2, 0x20, 0x10, // .2.......g.... .
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0x12, 0x20, 0x10, // .........e.... .
	0x00, 0x01, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0x62, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, // .....e...b .....
	0x00, 0x65, 0x00, 0x00, 0x03, 0x32, 0x20, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, // .e...2 ......h..
	0x02, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, // .....8..........
	0x00, 0x56, 0x15, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, // .V.......F. ....
	0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, // .....2..........
	0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x10, 0x10, // .F. ............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, // .....F.......2..
	0x0a, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, // .........F. ....
	0x00, 0x02, 0x00, 0x00, 0x00, 0xa6, 0x1a, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, // .............F..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, // .......... .....
	0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, // .F.......F. ....
	0x00, 0x03, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, // .....6...r......
	0x00, 0x46, 0x12, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, // .F.......6......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x11, 0x00, 0x00, // ......@.....?...
	0x08, 0x12, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, // .. ......F. ....
	0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, // .....F.......6..
	0x05, 0x62, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x11, 0x10, 0x00, 0x01, 0x00, 0x00, // .b .............
	0x00, 0x00, 0x00, 0x00, 0x09, 0x32, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x80, 0x20, // .....2......... 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xd6, 0x85, 0x20, 0x00, 0x00, 0x00, 0x00, // ........... ....
	0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x32, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, // .........2......
	0x00, 0x46, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, // .F........@.....
	0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, // ?...?........2..
	0x0b, 0x32, 0x20, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, // .2 ......F......
	0x00, 0x46, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x80, 0x20, 0x80, 0x41, 0x00, 0x00, // .F......... .A..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x01, 0x00, 0x02, 0x01, // .........>......
	0x00, 0x10, 0x00, 0x60, 0x00,                                                                   // ...`.
};
static const uint8_t vs_dmd_world_clip_spv[2033] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x4e, 0xbd, 0x0b, 0x9f, 0x03, 0x00, 0x08, 0x67, // VSH.....N......g
	0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x02, 0x01, 0x50, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // lassPad..P......
	0x00, 0x10, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, // ..matWorldViewPr
	0x6f, 0x6a, 0x04, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x63, 0x6c, 0x69, // oj...........cli
	0x70, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x02, 0x01, 0x40, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // p_plane..@......
	0x00, 0x94, 0x07, 0x00, 0x00, 0x03, 0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x0b, 0x00, 0x08, // .......#........
	0x00, 0xb3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x0b, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, // .........GLSL.st
	0x64, 0x2e, 0x34, 0x35, 0x30, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, // d.450...........
	0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, // ................
	0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x00, 0x5e, 0x00, 0x00, // .main....Z...^..
	0x00, 0x67, 0x00, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x6f, 0x00, 0x00, 0x00, 0x72, 0x00, 0x00, // .g...k...o...r..
	0x00, 0x03, 0x00, 0x03, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, 0x05, 0x00, 0x04, // ................
	0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, // .....main.......
	0x00, 0x2a, 0x00, 0x00, 0x00, 0x55, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x6c, 0x6f, 0x63, // .*...UniformBloc
	0x6b, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // k........*......
	0x00, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, // .matWorldViewPro
	0x6a, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // j........*......
	0x00, 0x63, 0x6c, 0x69, 0x70, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x00, 0x00, 0x06, 0x00, 0x06, // .clip_plane.....
	0x00, 0x2a, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, // .*.......glassPa
	0x64, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x03, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // d........,......
	0x00, 0x05, 0x00, 0x05, 0x00, 0x5a, 0x00, 0x00, 0x00, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, // .....Z...a_posit
	0x69, 0x6f, 0x6e, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0x5e, 0x00, 0x00, 0x00, 0x61, 0x5f, 0x74, // ion......^...a_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x05, 0x00, 0x0a, 0x00, 0x67, 0x00, 0x00, // excoord0.....g..
	0x00, 0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, // .@entryPointOutp
	0x75, 0x74, 0x2e, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, // ut.gl_Position..
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, // .....k...@entryP
	0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x76, 0x5f, 0x63, 0x6c, 0x69, // ointOutput.v_cli
	0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x0a, // pDistance.......
	0x00, 0x6f, 0x00, 0x00, 0x00, 0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, // .o...@entryPoint
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // Output.v_texcoor
	0x64, 0x30, 0x00, 0x00, 0x00, 0x05, 0x00, 0x0a, 0x00, 0x72, 0x00, 0x00, 0x00, 0x40, 0x65, 0x6e, // d0.......r...@en
	0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x76, // tryPointOutput.v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x00, 0x00, 0x00, 0x48, 0x00, 0x04, // _texcoord1...H..
	0x00, 0x2a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, // .*...........H..
	0x00, 0x2a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .*.......#......
	0x00, 0x48, 0x00, 0x05, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, // .H...*..........
	0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // .....H...*......
	0x00, 0x23, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2a, 0x00, 0x00, // .#...@...H...*..
	0x00, 0x02, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x47, 0x00, 0x03, // .....#...P...G..
	0x00, 0x2a, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x2c, 0x00, 0x00, // .*.......G...,..
	0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x2c, 0x00, 0x00, // .".......G...,..
	0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x5a, 0x00, 0x00, // .!.......G...Z..
	0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x5e, 0x00, 0x00, // .........G...^..
	0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x67, 0x00, 0x00, // .........G...g..
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x6b, 0x00, 0x00, // .........G...k..
	0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x6f, 0x00, 0x00, // .........G...o..
	0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x72, 0x00, 0x00, // .........G...r..
	0x00, 0x1e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, // ................
	0x00, 0x21, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x16, 0x00, 0x03, // .!..............
	0x00, 0x06, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, // ..... ..........
	0x00, 0x06, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x09, 0x00, 0x00, // ................
	0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, // ................
	0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, 0x14, 0x00, 0x00, // ................
	0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x14, 0x00, 0x00, // . .......+......
	0x00, 0x15, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x14, 0x00, 0x00, // .........+......
	0x00, 0x19, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, // .........+......
	0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x18, 0x00, 0x04, 0x00, 0x29, 0x00, 0x00, // .!......?....)..
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x05, 0x00, 0x2a, 0x00, 0x00, // .............*..
	0x00, 0x29, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, // .)........... ..
	0x00, 0x2b, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, // .+.......*...;..
	0x00, 0x2b, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, // .+...,..........
	0x00, 0x2d, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, // .-... .......+..
	0x00, 0x2d, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, // .-........... ..
	0x00, 0x2f, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, // ./...........+..
	0x00, 0x2d, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, // .-...3.......+..
	0x00, 0x2d, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, // .-...7.......+..
	0x00, 0x2d, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, // .-...;.......+..
	0x00, 0x14, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, // .....H....... ..
	0x00, 0x4a, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, // .J.......)... ..
	0x00, 0x4f, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, // .O........... ..
	0x00, 0x59, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, // .Y...........;..
	0x00, 0x59, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, // .Y...Z....... ..
	0x00, 0x5d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, // .]...........;..
	0x00, 0x5d, 0x00, 0x00, 0x00, 0x5e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, // .]...^....... ..
	0x00, 0x66, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, // .f...........;..
	0x00, 0x66, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, // .f...g....... ..
	0x00, 0x6a, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, // .j...........;..
	0x00, 0x6a, 0x00, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, // .j...k....... ..
	0x00, 0x6e, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, // .n...........;..
	0x00, 0x6e, 0x00, 0x00, 0x00, 0x6f, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, // .n...o.......;..
	0x00, 0x6e, 0x00, 0x00, 0x00, 0x72, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x36, 0x00, 0x05, // .n...r.......6..
	0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // ................
	0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, // .........=......
	0x00, 0x5b, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x09, 0x00, 0x00, // .[...Z...=......
	0x00, 0x5f, 0x00, 0x00, 0x00, 0x5e, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, // ._...^...Q......
	0x00, 0x8e, 0x00, 0x00, 0x00, 0x5b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, // .....[.......Q..
	0x00, 0x06, 0x00, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00, 0x5b, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // .........[......
	0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x5b, 0x00, 0x00, // .Q...........[..
	0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, // .....P..........
	0x00, 0x8e, 0x00, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, // .............!..
	0x00, 0x41, 0x00, 0x06, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, // .A.../.......,..
	0x00, 0x19, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, // .........=......
	0x00, 0x96, 0x00, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, // ................
	0x00, 0x97, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x96, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, // .....!.......A..
	0x00, 0x2f, 0x00, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, // ./.......,......
	0x00, 0x33, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x99, 0x00, 0x00, // .3...=..........
	0x00, 0x98, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x00, // ................
	0x00, 0x97, 0x00, 0x00, 0x00, 0x99, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x2f, 0x00, 0x00, // .........A.../..
	0x00, 0x9b, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, // .....,.......7..
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x9c, 0x00, 0x00, 0x00, 0x9b, 0x00, 0x00, // .=..............
	0x00, 0x81, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x9d, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, // .............!..
	0x00, 0x9c, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x9e, 0x00, 0x00, // .....A.../......
	0x00, 0x2c, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .,.......;...=..
	0x00, 0x06, 0x00, 0x00, 0x00, 0x9f, 0x00, 0x00, 0x00, 0x9e, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, // ................
	0x00, 0x06, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x9d, 0x00, 0x00, 0x00, 0x9f, 0x00, 0x00, // ................
	0x00, 0x50, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, 0x00, 0xa1, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x00, // .P..............
	0x00, 0xa0, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, 0x00, 0xa2, 0x00, 0x00, // ................
	0x00, 0x5f, 0x00, 0x00, 0x00, 0xa1, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x2f, 0x00, 0x00, // ._.......A.../..
	0x00, 0xa3, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, // .....,..........
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0xa4, 0x00, 0x00, 0x00, 0xa3, 0x00, 0x00, // .=..............
	0x00, 0x41, 0x00, 0x06, 0x00, 0x2f, 0x00, 0x00, 0x00, 0xa5, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, // .A.../.......,..
	0x00, 0x19, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, // .....7...=......
	0x00, 0xa6, 0x00, 0x00, 0x00, 0xa5, 0x00, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, // .........P......
	0x00, 0xa7, 0x00, 0x00, 0x00, 0xa4, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, // ................
	0x00, 0x09, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0xa2, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x00, // ................
	0x00, 0x41, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xab, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, // .A...J.......,..
	0x00, 0x48, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x29, 0x00, 0x00, 0x00, 0xac, 0x00, 0x00, // .H...=...)......
	0x00, 0xab, 0x00, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xad, 0x00, 0x00, // ................
	0x00, 0x91, 0x00, 0x00, 0x00, 0xac, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x4f, 0x00, 0x00, // .........A...O..
	0x00, 0xaf, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .....,.......=..
	0x00, 0x0b, 0x00, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, 0xaf, 0x00, 0x00, 0x00, 0x94, 0x00, 0x05, // ................
	0x00, 0x06, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, // ................
	0x00, 0x3e, 0x00, 0x03, 0x00, 0x67, 0x00, 0x00, 0x00, 0xad, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, // .>...g.......>..
	0x00, 0x6b, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x6f, 0x00, 0x00, // .k.......>...o..
	0x00, 0x5f, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x72, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, // ._...>...r......
	0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00, 0x00, 0x02, 0x01, 0x00, 0x10, 0x00, 0x60, // .....8.........`
	0x00,                                                                                           // .
};
static const bgfx::EmbeddedShader vs_dmd_world_clip = BGFX_EMBEDDED_SHADER(vs_dmd_world_clip);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of vertex shader from vs_dmd.sc to vs_dmd_world_clip_st with options: WORLD STEREO CLIP
static const uint8_t vs_dmd_world_clip_st_mtl[1403] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x4e, 0xbd, 0x0b, 0x9f, 0x03, 0x00, 0x08, 0x67, // VSH.....N......g
	0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x02, 0x01, 0x90, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // lassPad.........
	0x00, 0x10, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, // ..matWorldViewPr
	0x6f, 0x6a, 0x04, 0x02, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x63, 0x6c, 0x69, // oj...........cli
	0x70, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x02, 0x01, 0x80, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // p_plane.........
	0x00, 0x1c, 0x05, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, // .....#include <m
	0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, // etal_stdlib>.#in
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, // clude <simd/simd
	0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, // .h>..using names
	0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, // pace metal;..str
	0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, // uct _Global.{.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, //   float4x4 matWo
	0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, // rldViewProj[2];.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x63, 0x6c, 0x69, 0x70, 0x5f, //     float4 clip_
	0x70, 0x6c, 0x61, 0x6e, 0x65, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // plane;.    float
	0x34, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, // 4 glassPad;.};..
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // struct xlatMtlMa
	0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // in_out.{..float 
	0x62, 0x67, 0x66, 0x78, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, // bgfx_metal_point
	0x53, 0x69, 0x7a, 0x65, 0x20, 0x5b, 0x5b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x7a, // Size [[point_siz
	0x65, 0x5d, 0x5d, 0x20, 0x3d, 0x20, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // e]] = 1;.    flo
	0x61, 0x74, 0x20, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, // at _entryPointOu
	0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, 0x74, 0x61, // tput_v_clipDista
	0x6e, 0x63, 0x65, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, // nce [[user(locn0
	0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // )]];.    float2 
	0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, // _entryPointOutpu
	0x74, 0x5f, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, // t_v_texcoord0 [[
	0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, // user(locn1)]];. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, //    float2 _entry
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x74, 0x65, // PointOutput_v_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, // xcoord1 [[user(l
	0x6f, 0x63, 0x6e, 0x32, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // ocn2)]];.    flo
	0x61, 0x74, 0x34, 0x20, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, // at4 gl_Position 
	0x5b, 0x5b, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, // [[position]];.  
	0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x67, 0x6c, 0x5f, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x20, //   uint gl_Layer 
	0x5b, 0x5b, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, // [[render_target_
	0x61, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, // array_index]];.}
	0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, // ;..struct xlatMt
	0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // lMain_in.{.    f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, // loat3 a_position
	0x20, 0x5b, 0x5b, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x28, 0x30, 0x29, 0x5d, //  [[attribute(0)]
	0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x61, 0x5f, // ];.    float2 a_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x61, 0x74, 0x74, 0x72, // texcoord0 [[attr
	0x69, 0x62, 0x75, 0x74, 0x65, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, // ibute(1)]];.};..
	0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // vertex xlatMtlMa
	0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // in_out xlatMtlMa
	0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, // in(xlatMtlMain_i
	0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, // n in [[stage_in]
	0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, // ], constant _Glo
	0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, // bal& _mtl_u [[bu
	0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, // ffer(0)]], uint 
	0x67, 0x6c, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, // gl_InstanceIndex
	0x20, 0x5b, 0x5b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x5d, 0x5d, //  [[instance_id]]
	0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, // ).{.    xlatMtlM
	0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, // ain_out out = {}
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x36, // ;.    float4 _16
	0x32, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x69, 0x6e, 0x2e, 0x61, 0x5f, // 2 = float4(in.a_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // position, 1.0);.
	0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, //     out.gl_Posit
	0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, // ion = _mtl_u.mat
	0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x67, 0x6c, // WorldViewProj[gl
	0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x5d, 0x20, // _InstanceIndex] 
	0x2a, 0x20, 0x5f, 0x31, 0x36, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, // * _162;.    out.
	0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, // _entryPointOutpu
	0x74, 0x5f, 0x76, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, // t_v_clipDistance
	0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x63, 0x6c, //  = dot(_mtl_u.cl
	0x69, 0x70, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x32, 0x29, 0x3b, // ip_plane, _162);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, // .    out._entryP
	0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x74, 0x65, 0x78, // ointOutput_v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x61, 0x5f, 0x74, 0x65, // coord0 = in.a_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, // xcoord0;.    out
	0x2e, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, // ._entryPointOutp
	0x75, 0x74, 0x5f, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x3d, // ut_v_texcoord1 =
	0x20, 0x28, 0x69, 0x6e, 0x2e, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, //  (in.a_texcoord0
	0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2b, //  * float2((1.0 +
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, //  _mtl_u.glassPad
	0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, 0x6c, 0x61, // .x) + _mtl_u.gla
	0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x79, 0x2c, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, // ssPad.y, (1.0 + 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, // _mtl_u.glassPad.
	0x7a, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, 0x6c, 0x61, 0x73, // z) + _mtl_u.glas
	0x73, 0x50, 0x61, 0x64, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // sPad.w)) - float
	0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, // 2(_mtl_u.glassPa
	0x64, 0x2e, 0x78, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, 0x6c, 0x61, 0x73, // d.x, _mtl_u.glas
	0x73, 0x50, 0x61, 0x64, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, // sPad.z);.    out
	0x2e, 0x67, 0x6c, 0x5f, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x3d, 0x20, 0x67, 0x6c, 0x5f, 0x49, // .gl_Layer = gl_I
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x3b, 0x0a, 0x20, 0x20, // nstanceIndex;.  
	0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, //   return out;.}.
	0x0a, 0x00, 0x03, 0x01, 0x00, 0x10, 0x00, 0xff, 0xff, 0xa0, 0x00,                               // ...........
};
static const uint8_t vs_dmd_world_clip_st_essl[6628] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x4e, 0xbd, 0x0b, 0x9f, 0x00, 0x00, 0xd1, 0x19, // VSH.....N.......
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // s.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x75, 0x74, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, // arying out.preci
	0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // sion highp float
	0x3b, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, // ;.precision high
	0x70, 0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, // p int;.#define s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // hadow2D(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // e(_sampler, _coo
	0x72, 0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, // rd).#define shad
	0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ow2DProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // r, _coord) textu
	0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // reProj(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, //  _coord).attribu
	0x74, 0x65, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, // te vec3 a_positi
	0x6f, 0x6e, 0x3b, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x76, 0x65, // on;.attribute ve
	0x63, 0x32, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, // c2 a_texcoord0;.
	0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, // varying float v_
	0x63, 0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x3b, 0x0a, 0x76, 0x61, // clipDistance;.va
	0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, // rying vec2 v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, // coord0;.varying 
	0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, // vec2 v_texcoord1
	0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, // ;.vec3 instMul(v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, // ec3 _vec, mat3 _
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, // mtx) { return ( 
	0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, // (_vec) * (_mtx) 
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, // ); }.vec3 instMu
	0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, // l(mat3 _mtx, vec
	0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 3 _vec) { return
	0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, //  ( (_mtx) * (_ve
	0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, // c) ); }.vec4 ins
	0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, // tMul(vec4 _vec, 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // mat4 _mtx) { ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, // urn ( (_vec) * (
	0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // _mtx) ); }.vec4 
	0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, // instMul(mat4 _mt
	0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, // x, vec4 _vec) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, // return ( (_mtx) 
	0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, // * (_vec) ); }.fl
	0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, // oat rcp(float _a
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, // ) { return 1.0/_
	0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, // a; }.vec2 rcp(ve
	0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c2 _a) { return 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, // vec2(1.0)/_a; }.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, // vec3 rcp(vec3 _a
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // ) { return vec3(
	0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // 1.0)/_a; }.vec4 
	0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, // rcp(vec4 _a) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, // eturn vec4(1.0)/
	0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, // _a; }.vec2 vec2_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // splat(float _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, // { return vec2(_x
	0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, // , _x); }.vec3 ve
	0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // c3_splat(float _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, // x) { return vec3
	0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // (_x, _x, _x); }.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // vec4 vec4_splat(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // float _x) { retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, // rn vec4(_x, _x, 
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, // _x, _x); }.uvec2
	0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, //  uvec2_splat(uin
	0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, // t _x) { return u
	0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // vec2(_x, _x); }.
	0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, // uvec3 uvec3_spla
	0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // t(uint _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // urn uvec3(_x, _x
	0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, // , _x); }.uvec4 u
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, // vec4_splat(uint 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, // _x) { return uve
	0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // c4(_x, _x, _x, _
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, // x); }.mat4 mtxFr
	0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, // omRows(vec4 _0, 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, // vec4 _1, vec4 _2
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // , vec4 _3).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, // urn transpose(ma
	0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, // t4(_0, _1, _2, _
	0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, // 3) );.}.mat4 mtx
	0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, // FromCols(vec4 _0
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // , vec4 _1, vec4 
	0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // _2, vec4 _3).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, // eturn mat4(_0, _
	0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, // 1, _2, _3);.}.ma
	0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, // t3 mtxFromRows(v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, // ec3 _0, vec3 _1,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  vec3 _2).{.retu
	0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, // rn transpose(mat
	0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, // 3(_0, _1, _2) );
	0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, // .}.mat3 mtxFromC
	0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, // ols(vec3 _0, vec
	0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, // 3 _1, vec3 _2).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, // .return mat3(_0,
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, //  _1, _2);.}.unif
	0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, // orm vec4 u_viewR
	0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, // ect;.uniform vec
	0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, // 4 u_viewTexel;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, // niform mat4 u_vi
	0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // ew;.uniform mat4
	0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, //  u_invView;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, // orm mat4 u_proj;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // invProj;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, //  mat4 u_viewProj
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, // _invViewProj;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, // iform mat4 u_mod
	0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // el[32];.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, // mat4 u_modelView
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, // _modelViewProj;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, // uniform vec4 u_a
	0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // lphaRef4;.float 
	0x73, 0x71, 0x72, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, // sqr( float v).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // return v*v;.}.ve
	0x63, 0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, // c2 sqr( vec2 v).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, // {.return v*v;.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // vec3 sqr( vec3 v
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, // ).{.return v*v;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x20, 0x76, // }.vec3 mul_w1( v
	0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, // ec3 v, mat4 m).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, // .return v.x*m[0]
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, // .xyz + (v.y*m[1]
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, // .xyz + (v.z*m[2]
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, // .xyz + m[3].xyz)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, // );.}.float acos_
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, // approx_divPI( fl
	0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, // oat v).{.float x
	0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, //  = abs(v);.if(1.
	0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, //  - x <= 0.000061
	0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 03515625).return
	0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, //  (v >= 0.) ? 0. 
	0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, // : 1.;.float res 
	0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, // = ((-0.155972/3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, //  * x + (1.56467/
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, // 5) ) * sqrt(1. -
	0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, //  x);.return (v >
	0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, // = 0.) ? res : 1.
	0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //  - res;.}.float 
	0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, // atan2_approx_div
	0x32, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x66, 0x6c, // 2PI( float y, fl
	0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, // oat x).{.float a
	0x62, 0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x66, // bs_y = abs(y);.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, // loat abs_x = abs
	0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, // (x);.if(abs_x <=
	0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, //  0.0000610351562
	0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, // 5 && abs_y <= 0.
	0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, // 00006103515625).
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // return 0.;.float
	0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, //  r = (abs_x - ab
	0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, // s_y) / (abs_x + 
	0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, // abs_y);.float an
	0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, // gle = ((x < 0.) 
	0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, // ? (3./8.) : (1./
	0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, // 8.)).+ (0.211868
	0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, //  /(2.*3.14159265
	0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, // 3589793238462643
	0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, // 3832795) * r * r
	0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, //  - 0.987305 /(2.
	0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, // *3.1415926535897
	0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, // 9323846264338327
	0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, // 95)) * ((x < 0.)
	0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  ? -r : r);.retu
	0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, // rn (y < 0.) ? -a
	0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, // ngle : angle;.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, // float asin_appro
	0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, // x_divPI( float v
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, // ).{.float x = ab
	0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, // s(v);.if(1. - x 
	0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, // <= 0.00006103515
	0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, // 625).return (v >
	0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, // = 0.) ? 0.5 : -0
	0x2e, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, // .5;.float res = 
	0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, // ((-0.155972/3.14
	0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, // 1592653589793238
	0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, // 4626433832795) *
	0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, //  x + (1.56467/3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, //  ) * sqrt(1. - x
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, // );.return (v >= 
	0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, // 0.) ? 0.5 - res 
	0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, // : -0.5 + res;.}.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, // vec2 ray_to_equi
	0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x20, // rectangular_uv( 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // vec3 ray).{.retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, // rn vec2(.0.5 + a
	0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, // tan2_approx_div2
	0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, // PI(ray.y, ray.x)
	0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, // ,.acos_approx_di
	0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // vPI(ray.z));.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, // loat InvsRGB( fl
	0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, // oat color).{.if 
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, // (color <= 0.0404
	0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // 5).return color 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, // * (1.0/12.92);.e
	0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, // lse.return pow(c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, // olor * (1.0/1.05
	0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, // 5) + (0.055/1.05
	0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // 5), 2.4);.}.floa
	0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, // t InvRec709( flo
	0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, // at color).{.if (
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, // color <= 0.081).
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, // return color * (
	0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, // 1.0/4.5);.else.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // eturn pow(color 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, // * (1.0/1.099) + 
	0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, // (0.099/1.099), 1
	0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // .0/0.45);.}.floa
	0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, // t InvGamma( floa
	0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // t color).{.retur
	0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // n InvsRGB(color)
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, // ;.}.vec3 InvGamm
	0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, // a( vec3 color).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, // .return vec3(Inv
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, // Gamma(color.x),I
	0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, // nvGamma(color.y)
	0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // ,InvGamma(color.
	0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, // z));.}.vec3 InvT
	0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, // oneMap( vec3 col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, // or).{.float inv_
	0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, // 2bh = 0.5/0.25;.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, // float bh = 4.0*0
	0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // .25 - 2.0;.retur
	0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, // n (color - 1.0 +
	0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, //  sqrt(color*(col
	0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, // or + bh) + 1.0))
	0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // *inv_2bh;.}.floa
	0x74, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, // t sRGB( float f)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, // .{.float s;.if (
	0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, // f <= 0.0031308).
	0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, // s = 12.92 * f;.e
	0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, // lse.s = 1.055 * 
	0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, // pow(f, 1.0/2.4) 
	0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // - 0.055;.return 
	0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, // s;.}.float Rec70
	0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, // 9( float f).{.fl
	0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, // oat s;.if (f <= 
	0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, // 0.018).s = 4.5 *
	0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, //  f;.else.s = 1.0
	0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, // 99 * pow(f, 0.45
	0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // ) - 0.099;.retur
	0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, // n s;.}.float FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // amma( float colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, // r).{.return sRGB
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // (color);.}.vec2 
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, // FBGamma( vec2 co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, // lor).{.return ve
	0x63, 0x32, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // c2(FBGamma(color
	0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .x),FBGamma(colo
	0x72, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, // r.y));.}.vec3 FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // Gamma( vec3 colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, // r).{.return vec3
	0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, // (FBGamma(color.x
	0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // ),FBGamma(color.
	0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // y),FBGamma(color
	0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, // .z));.}.vec3 FBG
	0x61, 0x6d, 0x6d, 0x61, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, // amma22( vec3 col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // or).{.return vec
	0x33, 0x28, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x31, // 3(pow(color.x, 1
	0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .0/2.2),pow(colo
	0x72, 0x2e, 0x79, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, // r.y, 1.0/2.2),po
	0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, // w(color.z, 1.0/2
	0x2e, 0x32, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, // .2));.}.float FB
	0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, // ToneMap( float l
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, // ).{.return l * (
	0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, // (l*0.25 + 1.0) /
	0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, //  (l + 1.0));.}.v
	0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, // ec2 FBToneMap( v
	0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // ec2 color).{.flo
	0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // at l = dot(color
	0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, // ,vec2(0.176204+0
	0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, // .0108109*0.5,0.8
	0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, // 12985+0.0108109*
	0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, // 0.5));.return co
	0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, // lor * ((l*0.25 +
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, //  1.0) / (l + 1.0
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, // ));.}.vec3 FBTon
	0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // eMap( vec3 color
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, // ).{.float l = do
	0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, // t(color,vec3(0.1
	0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, // 76204,0.812985,0
	0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // .0108109));.retu
	0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, // rn color * ((l*0
	0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, // .25 + 1.0) / (l 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // + 1.0));.}.vec4 
	0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // Additive( vec4 c
	0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // Base, vec4 cBlen
	0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, // d, float percent
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // ).{.return cBase
	0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, //  + cBlend*percen
	0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, // t;.}.vec3 Screen
	0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, //  ( vec3 cBase, v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // ec3 cBlend).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // turn 1.0 - (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // - cBase) * (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // - cBlend);.}.vec
	0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // 4 Screen ( vec4 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, // cBase, vec4 cBle
	0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, // nd).{.return 1.0
	0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, //  - (1.0 - cBase)
	0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, //  * (1.0 - cBlend
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, // );.}.vec3 Screen
	0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // HDR ( vec3 cBase
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, // , vec3 cBlend).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, // .return max(1.0 
	0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, // - (1.0 - cBase) 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // * (1.0 - cBlend)
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, // , vec3(0.,0.,0.)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, // );.}.vec4 Screen
	0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // HDR ( vec4 cBase
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, // , vec4 cBlend).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, // .return max(1.0 
	0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, // - (1.0 - cBase) 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // * (1.0 - cBlend)
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, // , vec4(0.,0.,0.,
	0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, // 0.));.}.vec4 Mul
	0x74, 0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, // tiply ( vec4 cBa
	0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, // se, vec4 cBlend,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, //  float percent).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, // {.return cBase *
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, //  cBlend*percent;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, // .}.vec4 Overlay 
	0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, // ( vec4 cBase, ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, // c4 cBlend).{.vec
	0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, // 4 cNew = step(0.
	0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, // 5, cBase);.cNew 
	0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, // = mix(cBase*cBle
	0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, // nd*2.0, 1.0-2.0*
	0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, // (1.0-cBase)*(1.0
	0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, // -cBlend), cNew);
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, // .return cNew;.}.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, // vec4 OverlayHDR 
	0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, // ( vec4 cBase, ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, // c4 cBlend).{.vec
	0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, // 4 cNew = step(0.
	0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, // 5, cBase);.cNew 
	0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, // = max(mix(cBase*
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, // cBlend*2.0, 1.0-
	0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, // 2.0*(1.0-cBase)*
	0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, // (1.0-cBlend), cN
	0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, // ew), vec4(0.,0.,
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 0.,0.));.return 
	0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, // cNew;.}.vec3 cos
	0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, // _hemisphere_samp
	0x6c, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, // le( vec2 t).{.fl
	0x6f, 0x61, 0x74, 0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, // oat phi = t.y * 
	0x28, 0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, // (2.0*3.141592653
	0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, // 5897932384626433
	0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, // 832795);.float c
	0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, // osTheta = sqrt(1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // .0 - t.x);.float
	0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, //  sinTheta = sqrt
	0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, // (t.x);.float sp,
	0x63, 0x70, 0x3b, 0x0a, 0x7b, 0x73, 0x70, 0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, 0x69, 0x29, // cp;.{sp=sin(phi)
	0x3b, 0x63, 0x70, 0x3d, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, 0x3b, 0x0a, // ;cp=cos(phi);};.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, // return vec3(cp *
	0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, //  sinTheta, cosTh
	0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, // eta, sp * sinThe
	0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, // ta);.}.vec3 rota
	0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, // te_to_vector_upp
	0x65, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x76, 0x65, // er( vec3 vec, ve
	0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, // c3 normal).{.if(
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, // normal.y > -0.99
	0x39, 0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, // 999).{.float h =
	0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, //  1.0/(1.0+normal
	0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, // .y);.float hz = 
	0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // h*normal.z;.floa
	0x74, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // t hzx = hz*norma
	0x6c, 0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, // l.x;.return vec3
	0x28, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // (.vec.x * (norma
	0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, // l.y+hz*normal.z)
	0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, //  + vec.y * norma
	0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, // l.x - vec.z * hz
	0x78, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // x,.vec.y * norma
	0x6c, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, // l.y - vec.x * no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, // rmal.x - vec.z *
	0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, //  normal.z,.vec.y
	0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, //  * normal.z - ve
	0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, // c.x * hzx + vec.
	0x7a, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, // z * (normal.y+h*
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // normal.x*normal.
	0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, // x));.}.else retu
	0x72, 0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // rn -vec;.}.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, // rm mat4 matWorld
	0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // ViewProj[2];.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x6c, 0x69, 0x70, 0x5f, 0x70, // form vec4 clip_p
	0x6c, 0x61, 0x6e, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // lane;.uniform ve
	0x63, 0x34, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x3b, 0x0a, 0x76, 0x6f, 0x69, // c4 glassPad;.voi
	0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // d main().{.vec4 
	0x70, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x61, 0x5f, 0x70, 0x6f, 0x73, // pos = vec4(a_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x5f, 0x74, // ition, 1.0);.v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, // excoord0 = a_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, // coord0;.v_texcoo
	0x72, 0x64, 0x31, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, // rd1 = a_texcoord
	0x30, 0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x28, // 0 * vec2(1.0 + (
	0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x67, // glassPad.x) + (g
	0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, // lassPad.y), 1.0 
	0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x7a, 0x29, 0x20, 0x2b, // + (glassPad.z) +
	0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x2d, //  (glassPad.w)) -
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, //  vec2((glassPad.
	0x78, 0x29, 0x2c, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x7a, 0x29, // x), (glassPad.z)
	0x29, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x3d, 0x20, 0x67, 0x6c, // );.gl_Layer = gl
	0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, // _InstanceID;.gl_
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, // Position = ( (ma
	0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x67, // tWorldViewProj[g
	0x6c, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x5d, 0x29, 0x20, 0x2a, // l_InstanceID]) *
	0x20, 0x28, 0x70, 0x6f, 0x73, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x76, 0x5f, 0x63, 0x6c, 0x69, 0x70, //  (pos) );.v_clip
	0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, // Distance = dot(c
	0x6c, 0x69, 0x70, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2c, 0x20, 0x70, 0x6f, 0x73, 0x29, 0x3b, // lip_plane, pos);
	0x0a, 0x7d, 0x0a, 0x00,                                                                         // .}..
};
static const uint8_t vs_dmd_world_clip_st_glsl[7027] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x4e, 0xbd, 0x0b, 0x9f, 0x00, 0x00, 0x60, 0x1b, // VSH.....N.....`.
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x23, // ..#version 440.#
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x47, 0x4c, 0x5f, 0x41, 0x52, 0x42, // extension GL_ARB
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x70, 0x6f, 0x72, 0x74, // _shader_viewport
	0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x20, 0x3a, 0x20, 0x65, // _layer_array : e
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // nable.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // xture2D         
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, //  texture.#define
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, //  texture2DLod   
	0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, //     textureLod.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // Grad      textur
	0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // eGrad.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, // xture2DProjLod  
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, //  textureProjLod.
	0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, // #define texture2
	0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // DProjGrad  textu
	0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, // reProjGrad.#defi
	0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, // ne textureCubeLo
	0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, // d     textureLod
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // CubeGrad    text
	0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // ureGrad.#define 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // texture3D       
	0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, //    texture.#defi
	0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, // ne texture2DLodO
	0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, // ffset textureLod
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, // Offset.#define a
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, // ttribute in.#def
	0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x75, 0x74, 0x0a, // ine varying out.
	0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, // #define bgfxShad
	0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, // ow2D(_sampler, _
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, // coord)     vec4_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x5f, 0x73, // splat(texture(_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, // ampler, _coord) 
	0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, // ).#define bgfxSh
	0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, // adow2DProj(_samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x76, 0x65, 0x63, // ler, _coord) vec
	0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, // 4_splat(textureP
	0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, // roj(_sampler, _c
	0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, // oord) ).attribut
	0x65, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // e vec3 a_positio
	0x6e, 0x3b, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x76, 0x65, 0x63, // n;.attribute vec
	0x32, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, // 2 a_texcoord0;.v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x63, // arying float v_c
	0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x3b, 0x0a, 0x76, 0x61, 0x72, // lipDistance;.var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // ying vec2 v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, // oord0;.varying v
	0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x3b, // ec2 v_texcoord1;
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, // .vec3 instMul(ve
	0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, // c3 _vec, mat3 _m
	0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, // tx) { return ( (
	0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, // _vec) * (_mtx) )
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, // ; }.vec3 instMul
	0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // (mat3 _mtx, vec3
	0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _vec) { return 
	0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, // ( (_mtx) * (_vec
	0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, // ) ); }.vec4 inst
	0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, // Mul(vec4 _vec, m
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // at4 _mtx) { retu
	0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, // rn ( (_vec) * (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, // mtx) ); }.vec4 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, // nstMul(mat4 _mtx
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, // , vec4 _vec) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, // eturn ( (_mtx) *
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, //  (_vec) ); }.flo
	0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, // at rcp(float _a)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, //  { return 1.0/_a
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, // ; }.vec2 rcp(vec
	0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // 2 _a) { return v
	0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // ec2(1.0)/_a; }.v
	0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, // ec3 rcp(vec3 _a)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, //  { return vec3(1
	0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, // .0)/_a; }.vec4 r
	0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // cp(vec4 _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, // turn vec4(1.0)/_
	0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, // a; }.vec2 vec2_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // plat(float _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, //  return vec2(_x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, //  _x); }.vec3 vec
	0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, // 3_splat(float _x
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // ) { return vec3(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // _x, _x, _x); }.v
	0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, // ec4 vec4_splat(f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // loat _x) { retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // n vec4(_x, _x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, // x, _x); }.uvec2 
	0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec2_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, //  _x) { return uv
	0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, // ec2(_x, _x); }.u
	0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // vec3 uvec3_splat
	0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // (uint _x) { retu
	0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // rn uvec3(_x, _x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, //  _x); }.uvec4 uv
	0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, // ec4_splat(uint _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, // x) { return uvec
	0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // 4(_x, _x, _x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, // ); }.mat4 mtxFro
	0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, // mRows(vec4 _0, v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, // ec4 _1, vec4 _2,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  vec4 _3).{.retu
	0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, // rn transpose(mat
	0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, // 4(_0, _1, _2, _3
	0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, // ) );.}.mat4 mtxF
	0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, // romCols(vec4 _0,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, //  vec4 _1, vec4 _
	0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 2, vec4 _3).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, // turn mat4(_0, _1
	0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, // , _2, _3);.}.mat
	0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, // 3 mtxFromRows(ve
	0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, // c3 _0, vec3 _1, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // vec3 _2).{.retur
	0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, // n transpose(mat3
	0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, // (_0, _1, _2) );.
	0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, // }.mat3 mtxFromCo
	0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // ls(vec3 _0, vec3
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, //  _1, vec3 _2).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, // return mat3(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // _1, _2);.}.unifo
	0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, // rm vec4 u_viewRe
	0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // ct;.uniform vec4
	0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, //  u_viewTexel;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // iform mat4 u_vie
	0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // w;.uniform mat4 
	0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // u_invView;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, // rm mat4 u_proj;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, // uniform mat4 u_i
	0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // nvProj;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, // mat4 u_viewProj;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // invViewProj;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, // form mat4 u_mode
	0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // l[32];.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, // at4 u_modelView;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, // modelViewProj;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, // niform vec4 u_al
	0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // phaRef4;.float s
	0x71, 0x72, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // qr( float v).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // eturn v*v;.}.vec
	0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, // 2 sqr( vec2 v).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // .return v*v;.}.v
	0x65, 0x63, 0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, // ec3 sqr( vec3 v)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, // .{.return v*v;.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x20, 0x76, 0x65, // .vec3 mul_w1( ve
	0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, // c3 v, mat4 m).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, // return v.x*m[0].
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, // xyz + (v.y*m[1].
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, // xyz + (v.z*m[2].
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, // xyz + m[3].xyz))
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, // ;.}.float acos_a
	0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, // pprox_divPI( flo
	0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, // at v).{.float x 
	0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, // = abs(v);.if(1. 
	0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, // - x <= 0.0000610
	0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 3515625).return 
	0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, // (v >= 0.) ? 0. :
	0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, //  1.;.float res =
	0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, //  ((-0.155972/3.1
	0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, // 4159265358979323
	0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, // 84626433832795) 
	0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, // * x + (1.56467/3
	0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, // .141592653589793
	0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, // 2384626433832795
	0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, // ) ) * sqrt(1. - 
	0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, // x);.return (v >=
	0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, //  0.) ? res : 1. 
	0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, // - res;.}.float a
	0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, // tan2_approx_div2
	0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // PI( float y, flo
	0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, // at x).{.float ab
	0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, // s_y = abs(y);.fl
	0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, // oat abs_x = abs(
	0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, // x);.if(abs_x <= 
	0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, // 0.00006103515625
	0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, //  && abs_y <= 0.0
	0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, // 0006103515625).r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // eturn 0.;.float 
	0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, // r = (abs_x - abs
	0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, // _y) / (abs_x + a
	0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, // bs_y);.float ang
	0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // le = ((x < 0.) ?
	0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, //  (3./8.) : (1./8
	0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, // .)).+ (0.211868 
	0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, // /(2.*3.141592653
	0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, // 5897932384626433
	0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, // 832795) * r * r 
	0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, // - 0.987305 /(2.*
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, // 5)) * ((x < 0.) 
	0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // ? -r : r);.retur
	0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, // n (y < 0.) ? -an
	0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // gle : angle;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, // loat asin_approx
	0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, // _divPI( float v)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, // .{.float x = abs
	0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, // (v);.if(1. - x <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, // = 0.000061035156
	0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, // 25).return (v >=
	0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, //  0.) ? 0.5 : -0.
	0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, // 5;.float res = (
	0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, // (-0.155972/3.141
	0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, // 5926535897932384
	0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, // 626433832795) * 
	0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, // x + (1.56467/3.1
	0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, // 4159265358979323
	0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, // 84626433832795) 
	0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, // ) * sqrt(1. - x)
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, // ;.return (v >= 0
	0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, // .) ? 0.5 - res :
	0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, //  -0.5 + res;.}.v
	0x65, 0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, // ec2 ray_to_equir
	0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x20, 0x76, // ectangular_uv( v
	0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // ec3 ray).{.retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, // n vec2(.0.5 + at
	0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, // an2_approx_div2P
	0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, // I(ray.y, ray.x),
	0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, // .acos_approx_div
	0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // PI(ray.z));.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, // oat InvsRGB( flo
	0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, // at color).{.if (
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, // color <= 0.04045
	0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // ).return color *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, //  (1.0/12.92);.el
	0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, // se.return pow(co
	0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, // lor * (1.0/1.055
	0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, // ) + (0.055/1.055
	0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ), 2.4);.}.float
	0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, //  InvRec709( floa
	0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, // t color).{.if (c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, // olor <= 0.081).r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, // eturn color * (1
	0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, // .0/4.5);.else.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // turn pow(color *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, //  (1.0/1.099) + (
	0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, // 0.099/1.099), 1.
	0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0/0.45);.}.float
	0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  InvGamma( float
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  color).{.return
	0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, //  InvsRGB(color);
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, // .}.vec3 InvGamma
	0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // ( vec3 color).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, // return vec3(InvG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, // amma(color.x),In
	0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, // vGamma(color.y),
	0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, // InvGamma(color.z
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, // ));.}.vec3 InvTo
	0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // neMap( vec3 colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, // r).{.float inv_2
	0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x66, // bh = 0.5/0.25;.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, // loat bh = 4.0*0.
	0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 25 - 2.0;.return
	0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, //  (color - 1.0 + 
	0x73, 0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // sqrt(color*(colo
	0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, // r + bh) + 1.0))*
	0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // inv_2bh;.}.float
	0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, //  sRGB( float f).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, // {.float s;.if (f
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, //  <= 0.0031308).s
	0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, //  = 12.92 * f;.el
	0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, // se.s = 1.055 * p
	0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, // ow(f, 1.0/2.4) -
	0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, //  0.055;.return s
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, // ;.}.float Rec709
	0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // ( float f).{.flo
	0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, // at s;.if (f <= 0
	0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, // .018).s = 4.5 * 
	0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, // f;.else.s = 1.09
	0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, // 9 * pow(f, 0.45)
	0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  - 0.099;.return
	0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, //  s;.}.float FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // mma( float color
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, // ).{.return sRGB(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, // color);.}.vec2 F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, // BGamma( vec2 col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // or).{.return vec
	0x32, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // 2(FBGamma(color.
	0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // x),FBGamma(color
	0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, // .y));.}.vec3 FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // amma( vec3 color
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // ).{.return vec3(
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, // FBGamma(color.x)
	0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, // ,FBGamma(color.y
	0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // ),FBGamma(color.
	0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, // z));.}.vec3 FBGa
	0x6d, 0x6d, 0x61, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // mma22( vec3 colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, // r).{.return vec3
	0x28, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, // (pow(color.x, 1.
	0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // 0/2.2),pow(color
	0x2e, 0x79, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, // .y, 1.0/2.2),pow
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, // (color.z, 1.0/2.
	0x32, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, // 2));.}.float FBT
	0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, // oneMap( float l)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, // .{.return l * ((
	0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, // l*0.25 + 1.0) / 
	0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // (l + 1.0));.}.ve
	0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, // c2 FBToneMap( ve
	0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // c2 color).{.floa
	0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, // t l = dot(color,
	0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, // vec2(0.176204+0.
	0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, // 0108109*0.5,0.81
	0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, // 2985+0.0108109*0
	0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, // .5));.return col
	0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, // or * ((l*0.25 + 
	0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // 1.0) / (l + 1.0)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, // );.}.vec3 FBTone
	0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // Map( vec3 color)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // .{.float l = dot
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, // (color,vec3(0.17
	0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, // 6204,0.812985,0.
	0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // 0108109));.retur
	0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, // n color * ((l*0.
	0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, // 25 + 1.0) / (l +
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, //  1.0));.}.vec4 A
	0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // dditive( vec4 cB
	0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // ase, vec4 cBlend
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, // , float percent)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, // .{.return cBase 
	0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, // + cBlend*percent
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, // ;.}.vec3 Screen 
	0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, // ( vec3 cBase, ve
	0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // c3 cBlend).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // urn 1.0 - (1.0 -
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, //  cBase) * (1.0 -
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, //  cBlend);.}.vec4
	0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, //  Screen ( vec4 c
	0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // Base, vec4 cBlen
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, // d).{.return 1.0 
	0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, // - (1.0 - cBase) 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // * (1.0 - cBlend)
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, // ;.}.vec3 ScreenH
	0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // DR ( vec3 cBase,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, //  vec3 cBlend).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // return max(1.0 -
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, //  (1.0 - cBase) *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, //  (1.0 - cBlend),
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, //  vec3(0.,0.,0.))
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, // ;.}.vec4 ScreenH
	0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // DR ( vec4 cBase,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, //  vec4 cBlend).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // return max(1.0 -
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, //  (1.0 - cBase) *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, //  (1.0 - cBlend),
	0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, //  vec4(0.,0.,0.,0
	0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, // .));.}.vec4 Mult
	0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, // iply ( vec4 cBas
	0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, // e, vec4 cBlend, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, // float percent).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, // .return cBase * 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, // cBlend*percent;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, // }.vec4 Overlay (
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, //  vec4 cBase, vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, // 4 cBlend).{.vec4
	0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, //  cNew = step(0.5
	0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, // , cBase);.cNew =
	0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, //  mix(cBase*cBlen
	0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, // d*2.0, 1.0-2.0*(
	0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, // 1.0-cBase)*(1.0-
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, // cBlend), cNew);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // return cNew;.}.v
	0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, // ec4 OverlayHDR (
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, //  vec4 cBase, vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, // 4 cBlend).{.vec4
	0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, //  cNew = step(0.5
	0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, // , cBase);.cNew =
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, //  max(mix(cBase*c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, // Blend*2.0, 1.0-2
	0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, // .0*(1.0-cBase)*(
	0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, // 1.0-cBlend), cNe
	0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, // w), vec4(0.,0.,0
	0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, // .,0.));.return c
	0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, // New;.}.vec3 cos_
	0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // hemisphere_sampl
	0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // e( vec2 t).{.flo
	0x61, 0x74, 0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, // at phi = t.y * (
	0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, // 2.0*3.1415926535
	0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, // 8979323846264338
	0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, // 32795);.float co
	0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, // sTheta = sqrt(1.
	0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 0 - t.x);.float 
	0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // sinTheta = sqrt(
	0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, // t.x);.float sp,c
	0x70, 0x3b, 0x0a, 0x7b, 0x73, 0x70, 0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, // p;.{sp=sin(phi);
	0x63, 0x70, 0x3d, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, 0x3b, 0x0a, 0x72, // cp=cos(phi);};.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, // eturn vec3(cp * 
	0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, // sinTheta, cosThe
	0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, // ta, sp * sinThet
	0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, // a);.}.vec3 rotat
	0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, // e_to_vector_uppe
	0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x76, 0x65, 0x63, // r( vec3 vec, vec
	0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, // 3 normal).{.if(n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, // ormal.y > -0.999
	0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, // 99).{.float h = 
	0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // 1.0/(1.0+normal.
	0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, // y);.float hz = h
	0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // *normal.z;.float
	0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, //  hzx = hz*normal
	0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // .x;.return vec3(
	0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // .vec.x * (normal
	0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, // .y+hz*normal.z) 
	0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // + vec.y * normal
	0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, // .x - vec.z * hzx
	0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // ,.vec.y * normal
	0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, // .y - vec.x * nor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, // mal.x - vec.z * 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, // normal.z,.vec.y 
	0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, // * normal.z - vec
	0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, // .x * hzx + vec.z
	0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, //  * (normal.y+h*n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // ormal.x*normal.x
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // ));.}.else retur
	0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // n -vec;.}.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, // m mat4 matWorldV
	0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // iewProj[2];.unif
	0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x6c, 0x69, 0x70, 0x5f, 0x70, 0x6c, // orm vec4 clip_pl
	0x61, 0x6e, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, // ane;.uniform vec
	0x34, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, // 4 glassPad;.void
	0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, //  main().{.vec4 p
	0x6f, 0x73, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, // os = vec4(a_posi
	0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x5f, 0x74, 0x65, // tion, 1.0);.v_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, // xcoord0 = a_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // oord0;.v_texcoor
	0x64, 0x31, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, // d1 = a_texcoord0
	0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x67, //  * vec2(1.0 + (g
	0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, // lassPad.x) + (gl
	0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, // assPad.y), 1.0 +
	0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, //  (glassPad.z) + 
	0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x2d, 0x20, // (glassPad.w)) - 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x78, // vec2((glassPad.x
	0x29, 0x2c, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x7a, 0x29, 0x29, // ), (glassPad.z))
	0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x3d, 0x20, 0x67, 0x6c, 0x5f, // ;.gl_Layer = gl_
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x50, // InstanceID;.gl_P
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, // osition = ( (mat
	0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x67, 0x6c, // WorldViewProj[gl
	0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x5d, 0x29, 0x20, 0x2a, 0x20, // _InstanceID]) * 
	0x28, 0x70, 0x6f, 0x73, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x76, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x44, // (pos) );.v_clipD
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6c, // istance = dot(cl
	0x69, 0x70, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2c, 0x20, 0x70, 0x6f, 0x73, 0x29, 0x3b, 0x0a, // ip_plane, pos);.
	0x7d, 0x0a, 0x00,                                                                               // }..
};
static const uint8_t vs_dmd_world_clip_st_dx11[1049] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x4e, 0xbd, 0x0b, 0x9f, 0x03, 0x00, 0x10, 0x6d, // VSH.....N......m
	0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x04, // atWorldViewProj.
	0x02, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x63, 0x6c, 0x69, 0x70, 0x5f, 0x70, // ..........clip_p
	0x6c, 0x61, 0x6e, 0x65, 0x02, 0x00, 0x80, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x67, // lane...........g
	0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x02, 0x00, 0x90, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // lassPad.........
	0x00, 0xbc, 0x03, 0x00, 0x00, 0x44, 0x58, 0x42, 0x43, 0x7c, 0x13, 0xe4, 0xbe, 0xdb, 0x94, 0x63, // .....DXBC|.....c
	0x54, 0xb6, 0x22, 0xa2, 0x9e, 0x80, 0x6d, 0xba, 0x26, 0x01, 0x00, 0x00, 0x00, 0xbc, 0x03, 0x00, // T."...m.&.......
	0x00, 0x04, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x60, 0x01, 0x00, // .....0.......`..
	0x00, 0xac, 0x03, 0x00, 0x00, 0x49, 0x53, 0x47, 0x4e, 0x70, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // .....ISGNp......
	0x00, 0x08, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .....P..........
	0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x59, 0x00, 0x00, // .............Y..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x03, 0x03, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, // .....b..........
	0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x50, 0x4f, 0x53, // .............POS
	0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x53, // ITION.TEXCOORD.S
	0x56, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x00, 0x4f, 0x53, 0x47, // V_InstanceID.OSG
	0x4e, 0xb0, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, // N...............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x0f, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x0e, 0x00, 0x00, 0x8c, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x06, 0x09, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x0c, 0x00, 0x00, 0x95, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // ................
	0x00, 0x01, 0x0e, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, // .....SV_POSITION
	0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x53, 0x56, 0x5f, 0x52, 0x65, 0x6e, // .TEXCOORD.SV_Ren
	0x64, 0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x72, 0x72, 0x61, 0x79, 0x49, 0x6e, // derTargetArrayIn
	0x64, 0x65, 0x78, 0x00, 0xab, 0x53, 0x48, 0x45, 0x58, 0x44, 0x02, 0x00, 0x00, 0x50, 0x00, 0x01, // dex..SHEXD...P..
	0x00, 0x91, 0x00, 0x00, 0x00, 0x6a, 0x08, 0x00, 0x01, 0x59, 0x08, 0x00, 0x04, 0x46, 0x8e, 0x20, // .....j...Y...F. 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0x72, 0x10, 0x10, // ........._...r..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0x32, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, // ....._...2......
	0x00, 0x60, 0x00, 0x00, 0x04, 0x12, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, // .`..............
	0x00, 0x67, 0x00, 0x00, 0x04, 0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // .g.... .........
	0x00, 0x65, 0x00, 0x00, 0x03, 0x12, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, // .e.... ......e..
	0x03, 0x62, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0x32, 0x20, 0x10, // .b ......e...2 .
	0x00, 0x02, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x04, 0x12, 0x20, 0x10, 0x00, 0x03, 0x00, 0x00, // .....g.... .....
	0x00, 0x04, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, // .....h.......)..
	0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, // ................
	0x00, 0x01, 0x40, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, // ..@......8......
	0x00, 0x01, 0x00, 0x00, 0x00, 0x56, 0x15, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, // .....V.......F. 
	0x06, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x32, 0x00, 0x00, 0x0b, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, // .2...........F. 
	0x04, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x10, 0x10, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, // .....F.......2..
	0x0c, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x06, 0x00, 0x00, 0x00, // .........F. ....
	0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa6, 0x1a, 0x10, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .....F..........
	0x0a, 0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, // .. ......F......
	0x00, 0x46, 0x8e, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, // .F. ............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, // .....6...r......
	0x00, 0x46, 0x12, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, // .F.......6......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x11, 0x00, 0x00, // ......@.....?...
	0x08, 0x12, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, // .. ......F. ....
	0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, // .....F.......6..
	0x05, 0x62, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x11, 0x10, 0x00, 0x01, 0x00, 0x00, // .b .............
	0x00, 0x00, 0x00, 0x00, 0x09, 0x32, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x80, 0x20, // .....2......... 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0xd6, 0x85, 0x20, 0x00, 0x00, 0x00, 0x00, // ........... ....
	0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x32, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, // .........2......
	0x00, 0x46, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, // .F........@.....
	0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, // ?...?........2..
	0x0b, 0x32, 0x20, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, // .2 ......F......
	0x00, 0x46, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x80, 0x20, 0x80, 0x41, 0x00, 0x00, // .F......... .A..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x12, 0x20, 0x10, // .........6.... .
	0x00, 0x03, 0x00, 0x00, 0x00, 0x0a, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, // .............>..
	0x01, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // .SFI0..... .....
	0x00, 0x00, 0x02, 0x01, 0x00, 0x10, 0x00, 0xa0, 0x00,                                           // .........
};
static const uint8_t vs_dmd_world_clip_st_spv[2311] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x4e, 0xbd, 0x0b, 0x9f, 0x03, 0x00, 0x08, 0x67, // VSH.....N......g
	0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x02, 0x01, 0x90, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // lassPad.........
	0x00, 0x10, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, // ..matWorldViewPr
	0x6f, 0x6a, 0x04, 0x02, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x63, 0x6c, 0x69, // oj...........cli
	0x70, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x02, 0x01, 0x80, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // p_plane.........
	0x00, 0xa8, 0x08, 0x00, 0x00, 0x03, 0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x0b, 0x00, 0x08, // .......#........
	0x00, 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x11, 0x00, 0x02, 0x00, 0x86, 0x14, 0x00, 0x00, 0x0a, 0x00, 0x0a, 0x00, 0x53, 0x50, 0x56, // .............SPV
	0x5f, 0x45, 0x58, 0x54, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x76, 0x69, 0x65, 0x77, // _EXT_shader_view
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, // port_index_layer
	0x00, 0x0b, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, // .........GLSL.st
	0x64, 0x2e, 0x34, 0x35, 0x30, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, // d.450...........
	0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, // ................
	0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, // .main....a...e..
	0x00, 0x69, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, // .i...t...x...|..
	0x00, 0x7f, 0x00, 0x00, 0x00, 0x83, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x05, 0x00, 0x00, // ................
	0x00, 0xf4, 0x01, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, // .............mai
	0x6e, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x55, 0x6e, 0x69, // n......../...Uni
	0x66, 0x6f, 0x72, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, // formBlock.......
	0x00, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, // ./.......matWorl
	0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x06, // dViewProj.......
	0x00, 0x2f, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x63, 0x6c, 0x69, 0x70, 0x5f, 0x70, 0x6c, // ./.......clip_pl
	0x61, 0x6e, 0x65, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // ane....../......
	0x00, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x03, // .glassPad.......
	0x00, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0x61, 0x00, 0x00, // .1...........a..
	0x00, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x05, 0x00, 0x05, // .a_position.....
	0x00, 0x65, 0x00, 0x00, 0x00, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, // .e...a_texcoord0
	0x00, 0x05, 0x00, 0x06, 0x00, 0x69, 0x00, 0x00, 0x00, 0x67, 0x6c, 0x5f, 0x49, 0x6e, 0x73, 0x74, // .....i...gl_Inst
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x00, 0x00, 0x00, 0x05, 0x00, 0x0a, 0x00, 0x74, 0x00, 0x00, // anceID.......t..
	0x00, 0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, // .@entryPointOutp
	0x75, 0x74, 0x2e, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, // ut.gl_Position..
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x78, 0x00, 0x00, 0x00, 0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, // .....x...@entryP
	0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x76, 0x5f, 0x63, 0x6c, 0x69, // ointOutput.v_cli
	0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x0a, // pDistance.......
	0x00, 0x7c, 0x00, 0x00, 0x00, 0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, // .|...@entryPoint
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // Output.v_texcoor
	0x64, 0x30, 0x00, 0x00, 0x00, 0x05, 0x00, 0x0a, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x40, 0x65, 0x6e, // d0...........@en
	0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x76, // tryPointOutput.v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x00, 0x00, 0x00, 0x05, 0x00, 0x09, // _texcoord1......
	0x00, 0x83, 0x00, 0x00, 0x00, 0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, // .....@entryPoint
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x67, 0x6c, 0x5f, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x00, // Output.gl_Layer.
	0x00, 0x47, 0x00, 0x04, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, // .G...........@..
	0x00, 0x48, 0x00, 0x04, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, // .H.../..........
	0x00, 0x48, 0x00, 0x05, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, // .H.../.......#..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .....H.../......
	0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2f, 0x00, 0x00, // .........H.../..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, // .....#.......H..
	0x00, 0x2f, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, // ./.......#......
	0x00, 0x47, 0x00, 0x03, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, // .G.../.......G..
	0x00, 0x31, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, // .1...".......G..
	0x00, 0x31, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, // .1...!.......G..
	0x00, 0x61, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, // .a...........G..
	0x00, 0x65, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, // .e...........G..
	0x00, 0x69, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, // .i.......+...G..
	0x00, 0x74, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, // .t...........G..
	0x00, 0x78, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, // .x...........G..
	0x00, 0x7c, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, // .|...........G..
	0x00, 0x7f, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, // .............G..
	0x00, 0x83, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, // ................
	0x00, 0x02, 0x00, 0x00, 0x00, 0x21, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // .....!..........
	0x00, 0x16, 0x00, 0x03, 0x00, 0x06, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, // ......... ......
	0x00, 0x07, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, // ................
	0x00, 0x09, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, // ................
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, // ..... ..........
	0x00, 0x0d, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, // ................
	0x00, 0x17, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, // ..... .......+..
	0x00, 0x17, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, // .............+..
	0x00, 0x17, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, // .............+..
	0x00, 0x06, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x18, 0x00, 0x04, // .....$......?...
	0x00, 0x2c, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, // .,...........+..
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x04, // .....-..........
	0x00, 0x2e, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x05, // .....,...-......
	0x00, 0x2f, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, // ./..............
	0x00, 0x20, 0x00, 0x04, 0x00, 0x30, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, // . ...0......./..
	0x00, 0x3b, 0x00, 0x04, 0x00, 0x30, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // .;...0...1......
	0x00, 0x2b, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .+.......2......
	0x00, 0x20, 0x00, 0x04, 0x00, 0x33, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, // . ...3..........
	0x00, 0x2b, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // .+.......7......
	0x00, 0x2b, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // .+.......>......
	0x00, 0x2b, 0x00, 0x04, 0x00, 0x17, 0x00, 0x00, 0x00, 0x4e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .+.......N......
	0x00, 0x20, 0x00, 0x04, 0x00, 0x51, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, // . ...Q.......,..
	0x00, 0x20, 0x00, 0x04, 0x00, 0x56, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, // . ...V..........
	0x00, 0x20, 0x00, 0x04, 0x00, 0x60, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, // . ...`..........
	0x00, 0x3b, 0x00, 0x04, 0x00, 0x60, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // .;...`...a......
	0x00, 0x20, 0x00, 0x04, 0x00, 0x64, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, // . ...d..........
	0x00, 0x3b, 0x00, 0x04, 0x00, 0x64, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // .;...d...e......
	0x00, 0x20, 0x00, 0x04, 0x00, 0x68, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, // . ...h..........
	0x00, 0x3b, 0x00, 0x04, 0x00, 0x68, 0x00, 0x00, 0x00, 0x69, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // .;...h...i......
	0x00, 0x20, 0x00, 0x04, 0x00, 0x73, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, // . ...s..........
	0x00, 0x3b, 0x00, 0x04, 0x00, 0x73, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // .;...s...t......
	0x00, 0x20, 0x00, 0x04, 0x00, 0x77, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, // . ...w..........
	0x00, 0x3b, 0x00, 0x04, 0x00, 0x77, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // .;...w...x......
	0x00, 0x20, 0x00, 0x04, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, // . ...{..........
	0x00, 0x3b, 0x00, 0x04, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // .;...{...|......
	0x00, 0x3b, 0x00, 0x04, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // .;...{..........
	0x00, 0x20, 0x00, 0x04, 0x00, 0x82, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, // . ..............
	0x00, 0x3b, 0x00, 0x04, 0x00, 0x82, 0x00, 0x00, 0x00, 0x83, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // .;..............
	0x00, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .6..............
	0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .............=..
	0x00, 0x07, 0x00, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .....b...a...=..
	0x00, 0x09, 0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .....f...e...=..
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x69, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, // .....j...i...Q..
	0x00, 0x06, 0x00, 0x00, 0x00, 0x9f, 0x00, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........b......
	0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x62, 0x00, 0x00, // .Q...........b..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xa1, 0x00, 0x00, // .....Q..........
	0x00, 0x62, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, // .b.......P......
	0x00, 0xa2, 0x00, 0x00, 0x00, 0x9f, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 0xa1, 0x00, 0x00, // ................
	0x00, 0x24, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x33, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x00, // .$...A...3......
	0x00, 0x31, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .1.......2...=..
	0x00, 0x06, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, // ................
	0x00, 0x06, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x00, // .........$......
	0x00, 0x41, 0x00, 0x06, 0x00, 0x33, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, // .A...3.......1..
	0x00, 0x1c, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, // .....7...=......
	0x00, 0xaa, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, // ................
	0x00, 0xab, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, // .............A..
	0x00, 0x33, 0x00, 0x00, 0x00, 0xac, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, // .3.......1......
	0x00, 0x2d, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0xad, 0x00, 0x00, // .-...=..........
	0x00, 0xac, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xae, 0x00, 0x00, // ................
	0x00, 0x24, 0x00, 0x00, 0x00, 0xad, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x33, 0x00, 0x00, // .$.......A...3..
	0x00, 0xaf, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, // .....1.......>..
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, 0xaf, 0x00, 0x00, // .=..............
	0x00, 0x81, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, 0xae, 0x00, 0x00, // ................
	0x00, 0xb0, 0x00, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, // .....P..........
	0x00, 0xab, 0x00, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, // ................
	0x00, 0xb3, 0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, // .....f.......A..
	0x00, 0x33, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, // .3.......1......
	0x00, 0x32, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0xb5, 0x00, 0x00, // .2...=..........
	0x00, 0xb4, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x33, 0x00, 0x00, 0x00, 0xb6, 0x00, 0x00, // .....A...3......
	0x00, 0x31, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .1.......-...=..
	0x00, 0x06, 0x00, 0x00, 0x00, 0xb7, 0x00, 0x00, 0x00, 0xb6, 0x00, 0x00, 0x00, 0x50, 0x00, 0x05, // .............P..
	0x00, 0x09, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xb7, 0x00, 0x00, // ................
	0x00, 0x83, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xb3, 0x00, 0x00, // ................
	0x00, 0xb8, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x51, 0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, // .....A...Q......
	0x00, 0x31, 0x00, 0x00, 0x00, 0x4e, 0x00, 0x00, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .1...N...j...=..
	0x00, 0x2c, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, 0x00, 0x90, 0x00, 0x05, // .,..............
	0x00, 0x0d, 0x00, 0x00, 0x00, 0xc1, 0x00, 0x00, 0x00, 0xa2, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, // ................
	0x00, 0x41, 0x00, 0x05, 0x00, 0x56, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, // .A...V.......1..
	0x00, 0x18, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, // .....=..........
	0x00, 0xc3, 0x00, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x00, // ................
	0x00, 0xc4, 0x00, 0x00, 0x00, 0xa2, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x74, 0x00, 0x00, // .........>...t..
	0x00, 0xc1, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x78, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x00, // .....>...x......
	0x00, 0x3e, 0x00, 0x03, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, // .>...|...f...>..
	0x00, 0x7f, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x83, 0x00, 0x00, // .........>......
	0x00, 0x6a, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00, 0x00, 0x03, 0x01, // .j.......8......
	0x00, 0x10, 0x00, 0xff, 0xff, 0xa0, 0x00,                                                       // .......
};
static const bgfx::EmbeddedShader vs_dmd_world_clip_st = BGFX_EMBEDDED_SHADER(vs_dmd_world_clip_st);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of fragment shader from fs_dmd.sc to fs_dmd_clip with options: DMD CLIP
static const uint8_t fs_dmd_clip_mtl[2917] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4e, 0xbd, 0x0b, 0x9f, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x0e, 0x74, // FSH.N..........t
	0x65, 0x78, 0x5f, 0x64, 0x6d, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, // ex_dmdSampler...
	0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x6d, 0x64, 0x54, // ........tex_dmdT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // exture..........
	0x0f, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, // .vRes_Alpha_time
	0x12, 0x01, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x76, 0x43, 0x6f, 0x6c, 0x6f, // ...........vColo
	0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, 0x01, 0x00, 0x00, 0x01, // r_Intensity.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x6d, 0x64, 0x10, 0x00, 0x00, // ......tex_dmd...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd6, 0x0a, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, // ...........#incl
	0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, // ude <metal_stdli
	0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, // b>.#include <sim
	0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, // d/simd.h>..using
	0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, //  namespace metal
	0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, // ;..struct _Globa
	0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, // l.{.    float4 v
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x3b, // Color_Intensity;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, 0x52, 0x65, 0x73, // .    float4 vRes
	0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, // _Alpha_time;.};.
	0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, // .struct xlatMtlM
	0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // ain_out.{.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, // oat4 bgfx_FragDa
	0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, // ta0 [[color(0)]]
	0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, // ;.};..struct xla
	0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, // tMtlMain_in.{.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x44, 0x69, //   float v_clipDi
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, // stance [[user(lo
	0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // cn0)]];.    floa
	0x74, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, // t2 v_texcoord0 [
	0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, // [user(locn1)]];.
	0x7d, 0x3b, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, // };..fragment xla
	0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, // tMtlMain_out xla
	0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, // tMtlMain(xlatMtl
	0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, // Main_in in [[sta
	0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, // ge_in]], constan
	0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // t _Global& _mtl_
	0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, // u [[buffer(0)]],
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  texture2d<float
	0x3e, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x6d, 0x64, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, // > tex_dmd [[text
	0x75, 0x72, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ure(0)]], sample
	0x72, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x6d, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // r tex_dmdSampler
	0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x29, //  [[sampler(0)]])
	0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // .{.    xlatMtlMa
	0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, // in_out out = {};
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x63, 0x6c, // .    if (in.v_cl
	0x69, 0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, // ipDistance < 0.0
	0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ).    {.        
	0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, // discard_fragment
	0x28, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // ();.    }.    fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, 0x37, 0x39, 0x20, 0x3d, 0x20, 0x64, 0x66, 0x64, 0x78, // oat2 _379 = dfdx
	0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, // (in.v_texcoord0)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, 0x38, // ;.    float2 _38
	0x30, 0x20, 0x3d, 0x20, 0x5f, 0x33, 0x37, 0x39, 0x20, 0x2a, 0x20, 0x31, 0x2e, 0x35, 0x3b, 0x0a, // 0 = _379 * 1.5;.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, 0x38, 0x33, 0x20, //     float2 _383 
	0x3d, 0x20, 0x64, 0x66, 0x64, 0x79, 0x28, 0x2d, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, // = dfdy(-in.v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // coord0);.    flo
	0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, 0x38, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x33, 0x38, 0x33, 0x20, // at2 _384 = _383 
	0x2a, 0x20, 0x31, 0x2e, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // * 1.5;.    float
	0x20, 0x5f, 0x33, 0x39, 0x31, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x63, 0x6c, //  _391 = fast::cl
	0x61, 0x6d, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x6c, 0x65, 0x6e, 0x67, 0x74, // amp(1.0 - (lengt
	0x68, 0x28, 0x5f, 0x33, 0x38, 0x30, 0x20, 0x2b, 0x20, 0x5f, 0x33, 0x38, 0x34, 0x29, 0x20, 0x2a, // h(_380 + _384) *
	0x20, 0x36, 0x2e, 0x36, 0x35, 0x39, 0x39, 0x39, 0x39, 0x38, 0x34, 0x37, 0x34, 0x31, 0x32, 0x31, //  6.6599998474121
	0x30, 0x39, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x30, 0x30, 0x30, 0x30, 0x30, // 09375), 0.400000
	0x30, 0x30, 0x35, 0x39, 0x36, 0x30, 0x34, 0x36, 0x34, 0x34, 0x37, 0x37, 0x35, 0x33, 0x39, 0x30, // 0059604644775390
	0x36, 0x32, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // 625, 1.0);.    f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x35, 0x30, 0x39, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, // loat3 _509 = fra
	0x63, 0x74, 0x28, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // ct((in.v_texcoor
	0x64, 0x30, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // d0 + float2(_mtl
	0x5f, 0x75, 0x2e, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, // _u.vRes_Alpha_ti
	0x6d, 0x65, 0x2e, 0x77, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x78, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, // me.w)).xyx * flo
	0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x30, 0x33, 0x31, 0x30, 0x30, 0x30, 0x30, 0x31, 0x38, // at3(0.1031000018
	0x31, 0x31, 0x39, 0x38, 0x31, 0x32, 0x30, 0x31, 0x31, 0x37, 0x31, 0x38, 0x37, 0x35, 0x2c, 0x20, // 11981201171875, 
	0x30, 0x2e, 0x31, 0x30, 0x33, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x31, 0x39, 0x32, 0x30, // 0.10300000011920
	0x39, 0x32, 0x38, 0x39, 0x35, 0x35, 0x30, 0x37, 0x38, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, // 928955078125, 0.
	0x30, 0x39, 0x37, 0x33, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x38, 0x38, 0x37, 0x35, 0x38, 0x30, // 0973000004887580
	0x38, 0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, // 87158203125));. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x35, 0x31, 0x38, 0x20, 0x3d, //    float3 _518 =
	0x20, 0x5f, 0x35, 0x30, 0x39, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x64, //  _509 + float3(d
	0x6f, 0x74, 0x28, 0x5f, 0x35, 0x30, 0x39, 0x2c, 0x20, 0x5f, 0x35, 0x30, 0x39, 0x2e, 0x79, 0x7a, // ot(_509, _509.yz
	0x78, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x33, 0x33, 0x2e, 0x33, 0x33, // x + float3(33.33
	0x30, 0x30, 0x30, 0x31, 0x38, 0x33, 0x31, 0x30, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x29, // 00018310546875))
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x35, // );.    float2 _5
	0x32, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x28, 0x5f, 0x35, 0x31, 0x38, // 27 = fract((_518
	0x2e, 0x78, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x35, 0x31, 0x38, 0x2e, 0x79, 0x7a, 0x29, 0x20, 0x2a, // .xx + _518.yz) *
	0x20, 0x5f, 0x35, 0x31, 0x38, 0x2e, 0x7a, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, //  _518.zy);.    f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x36, 0x30, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // loat3 _606;.    
	0x5f, 0x36, 0x30, 0x36, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, // _606 = float3(0.
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // 0);.    float3 _
	0x36, 0x31, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, // 614;.    for (in
	0x74, 0x20, 0x5f, 0x36, 0x30, 0x35, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x5f, 0x36, 0x30, 0x35, // t _605 = 0; _605
	0x20, 0x3c, 0x20, 0x31, 0x33, 0x3b, 0x20, 0x5f, 0x36, 0x30, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x36, //  < 13; _606 = _6
	0x31, 0x34, 0x2c, 0x20, 0x5f, 0x36, 0x30, 0x35, 0x2b, 0x2b, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // 14, _605++).    
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // {.        float 
	0x5f, 0x34, 0x30, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x36, 0x30, // _405 = float(_60
	0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 5);.        floa
	0x74, 0x20, 0x5f, 0x35, 0x33, 0x36, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x66, // t _536 = 2.0 * f
	0x72, 0x61, 0x63, 0x74, 0x28, 0x28, 0x5f, 0x34, 0x30, 0x35, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, // ract((_405 * 0.0
	0x37, 0x36, 0x39, 0x32, 0x33, 0x30, 0x37, 0x39, 0x37, 0x38, 0x38, 0x36, 0x38, 0x34, 0x38, 0x34, // 7692307978868484
	0x34, 0x39, 0x37, 0x30, 0x37, 0x30, 0x33, 0x31, 0x32, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x35, // 4970703125) + _5
	0x32, 0x37, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, // 27.x);.        b
	0x6f, 0x6f, 0x6c, 0x20, 0x5f, 0x35, 0x33, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x35, 0x33, 0x36, 0x20, // ool _538 = _536 
	0x3e, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // > 1.0;.        f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x36, 0x30, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // loat _607;.     
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x35, 0x33, 0x38, 0x29, 0x0a, 0x20, 0x20, 0x20, //    if (_538).   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x5f, 0x36, 0x30, 0x37, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2d, 0x20, //    _607 = 2.0 - 
	0x5f, 0x35, 0x33, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, // _536;.        }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, //         else.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x5f, 0x36, 0x30, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x35, 0x33, 0x36, 0x3b, 0x0a, //    _607 = _536;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x35, 0x34, 0x35, 0x20, 0x3d, 0x20, 0x73, //   float _545 = s
	0x71, 0x72, 0x74, 0x28, 0x5f, 0x36, 0x30, 0x37, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // qrt(_607);.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x35, 0x35, 0x36, 0x20, 0x3d, 0x20, //    float _556 = 
	0x32, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x28, 0x5f, 0x34, 0x30, // 2.0 * fract((_40
	0x35, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x36, 0x31, 0x35, 0x33, 0x38, 0x34, 0x36, 0x33, 0x38, 0x33, // 5 * 0.6153846383
	0x30, 0x39, 0x34, 0x37, 0x38, 0x37, 0x35, 0x39, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x29, 0x20, // 09478759765625) 
	0x2b, 0x20, 0x5f, 0x35, 0x32, 0x37, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // + _527.y);.     
	0x20, 0x20, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x5f, 0x35, 0x35, 0x38, 0x20, 0x3d, 0x20, 0x5f, //    bool _558 = _
	0x35, 0x35, 0x36, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 556 > 1.0;.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x36, 0x30, 0x38, 0x3b, 0x0a, 0x20, //    float _608;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x35, 0x35, 0x38, 0x29, //        if (_558)
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .        {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x30, 0x38, 0x20, 0x3d, 0x20, 0x32, 0x2e, //        _608 = 2.
	0x30, 0x20, 0x2d, 0x20, 0x5f, 0x35, 0x35, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0 - _556;.      
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, //   }.        else
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .        {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x30, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x35, //        _608 = _5
	0x35, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, // 56;.        }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x35, 0x36, 0x35, //       float _565
	0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x5f, 0x36, 0x30, 0x38, 0x29, 0x3b, 0x0a, 0x20, //  = sqrt(_608);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x34, //        float2 _4
	0x33, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // 31 = (in.v_texco
	0x6f, 0x72, 0x64, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x33, 0x38, 0x30, 0x20, 0x2a, 0x20, 0x28, // ord0 + (_380 * (
	0x5f, 0x35, 0x33, 0x38, 0x20, 0x3f, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x35, // _538 ? (1.0 - _5
	0x34, 0x35, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x5f, 0x35, 0x34, 0x35, 0x20, 0x2d, 0x20, 0x31, 0x2e, // 45) : (_545 - 1.
	0x30, 0x29, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x33, 0x38, 0x34, 0x20, 0x2a, 0x20, // 0)))) + (_384 * 
	0x28, 0x5f, 0x35, 0x35, 0x38, 0x20, 0x3f, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, // (_558 ? (1.0 - _
	0x35, 0x36, 0x35, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x5f, 0x35, 0x36, 0x35, 0x20, 0x2d, 0x20, 0x31, // 565) : (_565 - 1
	0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // .0)));.        f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x35, 0x38, 0x31, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, // loat4 _581 = tex
	0x5f, 0x64, 0x6d, 0x64, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, // _dmd.sample(tex_
	0x64, 0x6d, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x34, 0x33, 0x31, // dmdSampler, _431
	0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, // , level(0.0));. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x34, //        float2 _4
	0x34, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x5f, 0x34, 0x33, // 45 = ((fract(_43
	0x31, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x52, 0x65, 0x73, 0x5f, // 1 * _mtl_u.vRes_
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x78, 0x79, 0x29, 0x20, 0x2a, // Alpha_time.xy) *
	0x20, 0x32, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, 0x36, 0x38, 0x33, 0x37, //  2.2000000476837
	0x31, 0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, // 158203125) - flo
	0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x33, 0x38, // at2(1.1000000238
	0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x29, 0x20, // 4185791015625)) 
	0x2a, 0x20, 0x5f, 0x33, 0x39, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // * _391;.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x35, 0x36, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x34, // float _456 = (_4
	0x34, 0x35, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x34, 0x35, 0x2e, 0x78, 0x29, 0x20, 0x2b, // 45.x * _445.x) +
	0x20, 0x28, 0x5f, 0x34, 0x34, 0x35, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x34, 0x35, 0x2e, //  (_445.y * _445.
	0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // y);.        floa
	0x74, 0x20, 0x5f, 0x34, 0x35, 0x39, 0x20, 0x3d, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, // t _459 = smooths
	0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, // tep(0.0, 1.0, 1.
	0x30, 0x20, 0x2d, 0x20, 0x28, 0x5f, 0x34, 0x35, 0x36, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x35, 0x36, // 0 - (_456 * _456
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, // ));.        if (
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, // _mtl_u.vColor_In
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, // tensity.w != 0.0
	0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ).        {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x31, 0x34, 0x20, 0x3d, 0x20, 0x5f, //         _614 = _
	0x36, 0x30, 0x36, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x35, 0x38, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x20, // 606 + (_581.xyz 
	0x2a, 0x20, 0x5f, 0x34, 0x35, 0x39, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // * _459);.       
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, //  }.        else.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x31, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x36, 0x30, //       _614 = _60
	0x36, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x35, 0x38, 0x31, 0x2e, // 6 + float3(_581.
	0x78, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x35, 0x39, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // x * _459);.     
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, //    }.    }.    o
	0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, // ut.bgfx_FragData
	0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x36, 0x30, 0x36, 0x20, // 0 = float4(_606 
	0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // * (_mtl_u.vColor
	0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, // _Intensity.xyz *
	0x20, 0x28, 0x30, 0x2e, 0x30, 0x37, 0x36, 0x39, 0x32, 0x33, 0x30, 0x37, 0x39, 0x37, 0x38, 0x38, //  (0.076923079788
	0x36, 0x38, 0x34, 0x38, 0x34, 0x34, 0x39, 0x37, 0x30, 0x37, 0x30, 0x33, 0x31, 0x32, 0x35, 0x20, // 684844970703125 
	0x2a, 0x20, 0x28, 0x5f, 0x33, 0x39, 0x31, 0x20, 0x2a, 0x20, 0x5f, 0x33, 0x39, 0x31, 0x29, 0x29, // * (_391 * _391))
	0x29, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, // ), _mtl_u.vRes_A
	0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, // lpha_time.z);.  
	0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, //   return out;.}.
	0x0a, 0x00, 0x00, 0x40, 0x00,                                                                   // ...@.
};
static const uint8_t fs_dmd_clip_essl[7604] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4e, 0xbd, 0x0b, 0x9f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa1, 0x1d, // FSH.N...........
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x47, 0x4c, 0x5f, // s.#extension GL_
	0x4f, 0x45, 0x53, 0x5f, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x65, 0x72, // OES_standard_der
	0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, // ivatives : enabl
	0x65, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // e.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, // arying in.precis
	0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3b, // ion highp float;
	0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // .precision highp
	0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, //  int;.#define sh
	0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adow2D(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //  _coord) texture
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // (_sampler, _coor
	0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, // d).#define shado
	0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // w2DProj(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // eProj(_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x6f, 0x75, 0x74, 0x20, 0x6d, 0x65, 0x64, 0x69, // _coord).out medi
	0x75, 0x6d, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, // ump vec4 bgfx_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // agColor;.varying
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, //  float v_clipDis
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, // tance;.varying v
	0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, // ec2 v_texcoord0;
	0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, // .varying vec2 v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // texcoord1;.vec3 
	0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, // instMul(vec3 _ve
	0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, // c, mat3 _mtx) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, // return ( (_vec) 
	0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, // * (_mtx) ); }.ve
	0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, // c3 instMul(mat3 
	0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, // _mtx, vec3 _vec)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, //  { return ( (_mt
	0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, // x) * (_vec) ); }
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, // .vec4 instMul(ve
	0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, // c4 _vec, mat4 _m
	0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, // tx) { return ( (
	0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, // _vec) * (_mtx) )
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, // ; }.vec4 instMul
	0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // (mat4 _mtx, vec4
	0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _vec) { return 
	0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, // ( (_mtx) * (_vec
	0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, // ) ); }.float rcp
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // (float _a) { ret
	0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, // urn 1.0/_a; }.ve
	0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, // c2 rcp(vec2 _a) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, // { return vec2(1.
	0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, // 0)/_a; }.vec3 rc
	0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // p(vec3 _a) { ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, // urn vec3(1.0)/_a
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, // ; }.vec4 rcp(vec
	0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // 4 _a) { return v
	0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // ec4(1.0)/_a; }.v
	0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, // ec2 vec2_splat(f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // loat _x) { retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, // n vec2(_x, _x); 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, // }.vec3 vec3_spla
	0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // t(float _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // turn vec3(_x, _x
	0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, // , _x); }.vec4 ve
	0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // c4_splat(float _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, // x) { return vec4
	0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, // (_x, _x, _x, _x)
	0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, // ; }.uvec2 uvec2_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // splat(uint _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, //  return uvec2(_x
	0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, // , _x); }.uvec3 u
	0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, // vec3_splat(uint 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, // _x) { return uve
	0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, // c3(_x, _x, _x); 
	0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, // }.uvec4 uvec4_sp
	0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // lat(uint _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, // eturn uvec4(_x, 
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, // _x, _x, _x); }.m
	0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, // at4 mtxFromRows(
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, // vec4 _0, vec4 _1
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // , vec4 _2, vec4 
	0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, // _3).{.return tra
	0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, // nspose(mat4(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, // _1, _2, _3) );.}
	0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, // .mat4 mtxFromCol
	0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // s(vec4 _0, vec4 
	0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, // _1, vec4 _2, vec
	0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, // 4 _3).{.return m
	0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, // at4(_0, _1, _2, 
	0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, // _3);.}.mat3 mtxF
	0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, // romRows(vec3 _0,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, //  vec3 _1, vec3 _
	0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, // 2).{.return tran
	0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, // spose(mat3(_0, _
	0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, // 1, _2) );.}.mat3
	0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, //  mtxFromCols(vec
	0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, // 3 _0, vec3 _1, v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec3 _2).{.return
	0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, //  mat3(_0, _1, _2
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, // );.}.uniform vec
	0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, // 4 u_viewRect;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // iform vec4 u_vie
	0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // wTexel;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // mat4 u_view;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, // form mat4 u_invV
	0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, // iew;.uniform mat
	0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // 4 u_proj;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, // m mat4 u_invProj
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // _viewProj;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, // rm mat4 u_invVie
	0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // wProj;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, // at4 u_model[32];
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // modelView;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, // rm mat4 u_modelV
	0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // iewProj;.uniform
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, //  vec4 u_alphaRef
	0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x66, 0x6c, // 4;.float sqr( fl
	0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // oat v).{.return 
	0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, 0x28, // v*v;.}.vec2 sqr(
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  vec2 v).{.retur
	0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x71, // n v*v;.}.vec3 sq
	0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // r( vec3 v).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // urn v*v;.}.vec3 
	0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, // mul_w1( vec3 v, 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // mat4 m).{.return
	0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, //  v.x*m[0].xyz + 
	0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, // (v.y*m[1].xyz + 
	0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, // (v.z*m[2].xyz + 
	0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // m[3].xyz));.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, // oat acos_approx_
	0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, // divPI( float v).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, // {.float x = abs(
	0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, // v);.if(1. - x <=
	0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, //  0.0000610351562
	0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, // 5).return (v >= 
	0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x66, // 0.) ? 0. : 1.;.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, // loat res = ((-0.
	0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, // 155972/3.1415926
	0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, // 5358979323846264
	0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, // 33832795) * x + 
	0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // (1.56467/3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, // 6433832795) ) * 
	0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, // sqrt(1. - x);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // turn (v >= 0.) ?
	0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, //  res : 1. - res;
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, // .}.float atan2_a
	0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, // pprox_div2PI( fl
	0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, // oat y, float x).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, // {.float abs_y = 
	0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, // abs(y);.float ab
	0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, // s_x = abs(x);.if
	0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, // (abs_x <= 0.0000
	0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, // 6103515625 && ab
	0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, // s_y <= 0.0000610
	0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 3515625).return 
	0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, // 0.;.float r = (a
	0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, // bs_x - abs_y) / 
	0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, // (abs_x + abs_y);
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, // .float angle = (
	0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, // (x < 0.) ? (3./8
	0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, // .) : (1./8.)).+ 
	0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, // (0.211868 /(2.*3
	0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, // .141592653589793
	0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, // 2384626433832795
	0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, // ) * r * r - 0.98
	0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, // 7305 /(2.*3.1415
	0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, // 9265358979323846
	0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, // 26433832795)) * 
	0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, // ((x < 0.) ? -r :
	0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, //  r);.return (y <
	0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, //  0.) ? -angle : 
	0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, // angle;.}.float a
	0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, // sin_approx_divPI
	0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // ( float v).{.flo
	0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, // at x = abs(v);.i
	0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, // f(1. - x <= 0.00
	0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, // 006103515625).re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // turn (v >= 0.) ?
	0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, //  0.5 : -0.5;.flo
	0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, // at res = ((-0.15
	0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, // 5972/3.141592653
	0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, // 5897932384626433
	0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, // 832795) * x + (1
	0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, // .56467/3.1415926
	0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, // 5358979323846264
	0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, // 33832795) ) * sq
	0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // rt(1. - x);.retu
	0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, // rn (v >= 0.) ? 0
	0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, // .5 - res : -0.5 
	0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, // + res;.}.vec2 ra
	0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, // y_to_equirectang
	0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, // ular_uv( vec3 ra
	0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, // y).{.return vec2
	0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, // (.0.5 + atan2_ap
	0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, // prox_div2PI(ray.
	0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, // y, ray.x),.acos_
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, // approx_divPI(ray
	0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, // .z));.}.float In
	0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, // vsRGB( float col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // or).{.if (color 
	0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, // <= 0.04045).retu
	0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, // rn color * (1.0/
	0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, // 12.92);.else.ret
	0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, // urn pow(color * 
	0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, // (1.0/1.055) + (0
	0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, // .055/1.055), 2.4
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, // );.}.float InvRe
	0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // c709( float colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, // r).{.if (color <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // = 0.081).return 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, // color * (1.0/4.5
	0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, // );.else.return p
	0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, // ow(color * (1.0/
	0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, // 1.099) + (0.099/
	0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, // 1.099), 1.0/0.45
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, // );.}.float InvGa
	0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // mma( float color
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, // ).{.return InvsR
	0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // GB(color);.}.vec
	0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, // 3 InvGamma( vec3
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  color).{.return
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, //  vec3(InvGamma(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, // olor.x),InvGamma
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // (color.y),InvGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // ma(color.z));.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, // vec3 InvToneMap(
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, //  vec3 color).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, // loat inv_2bh = 0
	0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, // .5/0.25;.float b
	0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, // h = 4.0*0.25 - 2
	0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .0;.return (colo
	0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x63, // r - 1.0 + sqrt(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, // olor*(color + bh
	0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, // ) + 1.0))*inv_2b
	0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, // h;.}.float sRGB(
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, //  float f).{.floa
	0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, // t s;.if (f <= 0.
	0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, // 0031308).s = 12.
	0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, // 92 * f;.else.s =
	0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, //  1.055 * pow(f, 
	0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, // 1.0/2.4) - 0.055
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // ;.return s;.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, // oat Rec709( floa
	0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, // t f).{.float s;.
	0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, // if (f <= 0.018).
	0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, // s = 4.5 * f;.els
	0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, // e.s = 1.099 * po
	0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, // w(f, 0.45) - 0.0
	0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, // 99;.return s;.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, // float FBGamma( f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // loat color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // turn sRGB(color)
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, // ;.}.vec2 FBGamma
	0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // ( vec2 color).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x46, 0x42, 0x47, 0x61, // return vec2(FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, // mma(color.x),FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, // amma(color.y));.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, // }.vec3 FBGamma( 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // vec3 color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // turn vec3(FBGamm
	0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, // a(color.x),FBGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, // ma(color.y),FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, // mma(color.z));.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x32, 0x32, 0x28, // .vec3 FBGamma22(
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, //  vec3 color).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x70, 0x6f, 0x77, 0x28, 0x63, // eturn vec3(pow(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, // olor.x, 1.0/2.2)
	0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x2c, 0x20, 0x31, 0x2e, // ,pow(color.y, 1.
	0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // 0/2.2),pow(color
	0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x29, 0x3b, 0x0a, 0x7d, // .z, 1.0/2.2));.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, // .float FBToneMap
	0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // ( float l).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, // urn l * ((l*0.25
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, //  + 1.0) / (l + 1
	0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, // .0));.}.vec2 FBT
	0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, // oneMap( vec2 col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, // or).{.float l = 
	0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, // dot(color,vec2(0
	0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, // .176204+0.010810
	0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, // 9*0.5,0.812985+0
	0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, // .0108109*0.5));.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, // return color * (
	0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, // (l*0.25 + 1.0) /
	0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, //  (l + 1.0));.}.v
	0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, // ec3 FBToneMap( v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // ec3 color).{.flo
	0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // at l = dot(color
	0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, // ,vec3(0.176204,0
	0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, // .812985,0.010810
	0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // 9));.return colo
	0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, // r * ((l*0.25 + 1
	0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, // .0) / (l + 1.0))
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x76, // ;.}.vec4 Additiv
	0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, // e( vec4 cBase, v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ec4 cBlend, floa
	0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // t percent).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, // urn cBase + cBle
	0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // nd*percent;.}.ve
	0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, // c3 Screen ( vec3
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, //  cBase, vec3 cBl
	0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, // end).{.return 1.
	0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // 0 - (1.0 - cBase
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // ) * (1.0 - cBlen
	0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, // d);.}.vec4 Scree
	0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, // n ( vec4 cBase, 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // vec4 cBlend).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, // eturn 1.0 - (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, //  - cBase) * (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, //  - cBlend);.}.ve
	0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, // c3 ScreenHDR ( v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // ec3 cBase, vec3 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // cBlend).{.return
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, //  max(1.0 - (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // - cBase) * (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // - cBlend), vec3(
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // 0.,0.,0.));.}.ve
	0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, // c4 ScreenHDR ( v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // ec4 cBase, vec4 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // cBlend).{.return
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, //  max(1.0 - (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // - cBase) * (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // - cBlend), vec4(
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, // 0.,0.,0.,0.));.}
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, // .vec4 Multiply (
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, //  vec4 cBase, vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 4 cBlend, float 
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // percent).{.retur
	0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // n cBase * cBlend
	0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // *percent;.}.vec4
	0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, //  Overlay ( vec4 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, // cBase, vec4 cBle
	0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, // nd).{.vec4 cNew 
	0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, // = step(0.5, cBas
	0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, // e);.cNew = mix(c
	0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, // Base*cBlend*2.0,
	0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, //  1.0-2.0*(1.0-cB
	0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // ase)*(1.0-cBlend
	0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ), cNew);.return
	0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, //  cNew;.}.vec4 Ov
	0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // erlayHDR ( vec4 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, // cBase, vec4 cBle
	0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, // nd).{.vec4 cNew 
	0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, // = step(0.5, cBas
	0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, // e);.cNew = max(m
	0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, // ix(cBase*cBlend*
	0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, // 2.0, 1.0-2.0*(1.
	0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, // 0-cBase)*(1.0-cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, // lend), cNew), ve
	0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, // c4(0.,0.,0.,0.))
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, // ;.return cNew;.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, // .vec3 cos_hemisp
	0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, // here_sample( vec
	0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x68, 0x69, // 2 t).{.float phi
	0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, //  = t.y * (2.0*3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, // ;.float cosTheta
	0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, //  = sqrt(1.0 - t.
	0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, // x);.float sinThe
	0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, // ta = sqrt(t.x);.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x7b, 0x73, 0x70, // float sp,cp;.{sp
	0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x63, 0x70, 0x3d, 0x63, 0x6f, 0x73, // =sin(phi);cp=cos
	0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // (phi);};.return 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, // vec3(cp * sinThe
	0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, // ta, cosTheta, sp
	0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, //  * sinTheta);.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, // vec3 rotate_to_v
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, // ector_upper( vec
	0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // 3 vec, vec3 norm
	0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // al).{.if(normal.
	0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, // y > -0.99999).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, // float h = 1.0/(1
	0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, // .0+normal.y);.fl
	0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // oat hz = h*norma
	0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, // l.z;.float hzx =
	0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, //  hz*normal.x;.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, // turn vec3(.vec.x
	0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, //  * (normal.y+hz*
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, // normal.z) + vec.
	0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, // y * normal.x - v
	0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, // ec.z * hzx,.vec.
	0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, // y * normal.y - v
	0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, // ec.x * normal.x 
	0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // - vec.z * normal
	0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // .z,.vec.y * norm
	0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, // al.z - vec.x * h
	0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, // zx + vec.z * (no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // rmal.y+h*normal.
	0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // x*normal.x));.}.
	0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, // else return -vec
	0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // ;.}.uniform vec4
	0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, //  vColor_Intensit
	0x79, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // y;.uniform vec4 
	0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x3b, // vRes_Alpha_time;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x61, 0x6c, // .uniform vec4 al
	0x70, 0x68, 0x61, 0x54, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x3b, 0x0a, 0x75, 0x6e, // phaTestValue;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, // iform sampler2D 
	0x74, 0x65, 0x78, 0x5f, 0x64, 0x6d, 0x64, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x68, 0x61, // tex_dmd;.vec2 ha
	0x73, 0x68, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x29, 0x0a, 0x7b, // sh22( vec2 uv).{
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, // .vec3 p3 = fract
	0x28, 0x75, 0x76, 0x2e, 0x78, 0x79, 0x78, 0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x2e, // (uv.xyx * vec3(.
	0x31, 0x30, 0x33, 0x31, 0x2c, 0x20, 0x2e, 0x31, 0x30, 0x33, 0x30, 0x2c, 0x20, 0x2e, 0x30, 0x39, // 1031, .1030, .09
	0x37, 0x33, 0x29, 0x29, 0x3b, 0x0a, 0x70, 0x33, 0x20, 0x2b, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, // 73));.p3 += dot(
	0x70, 0x33, 0x2c, 0x20, 0x70, 0x33, 0x2e, 0x79, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x33, 0x33, 0x2e, // p3, p3.yzx + 33.
	0x33, 0x33, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x72, 0x61, 0x63, // 33);.return frac
	0x74, 0x28, 0x28, 0x70, 0x33, 0x2e, 0x78, 0x78, 0x20, 0x2b, 0x20, 0x70, 0x33, 0x2e, 0x79, 0x7a, // t((p3.xx + p3.yz
	0x29, 0x2a, 0x70, 0x33, 0x2e, 0x7a, 0x79, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // )*p3.zy);.}.floa
	0x74, 0x20, 0x74, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x50, 0x44, 0x46, 0x28, // t triangularPDF(
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, //  float r).{.floa
	0x74, 0x20, 0x70, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x2a, 0x72, 0x3b, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, // t p = 2.*r;.bool
	0x20, 0x62, 0x20, 0x3d, 0x20, 0x28, 0x70, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x29, 0x3b, 0x0a, 0x69, //  b = (p > 1.);.i
	0x66, 0x20, 0x28, 0x62, 0x29, 0x0a, 0x70, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x2d, 0x70, 0x3b, 0x0a, // f (b).p = 2.-p;.
	0x70, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x2d, 0x73, 0x71, 0x72, 0x74, 0x28, 0x70, 0x29, 0x3b, 0x0a, // p = 1.-sqrt(p);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x62, 0x20, 0x3f, 0x20, 0x70, 0x20, 0x3a, 0x20, 0x2d, // return b ? p : -
	0x70, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, // p;.}.void main()
	0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x76, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, // .{.if (v_clipDis
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x64, 0x69, 0x73, // tance < 0.0).dis
	0x63, 0x61, 0x72, 0x64, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x6c, 0x75, 0x72, // card;.float blur
	0x20, 0x3d, 0x20, 0x31, 0x2e, 0x35, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x64, 0x64, 0x78, //  = 1.5;.vec2 ddx
	0x73, 0x20, 0x3d, 0x20, 0x64, 0x46, 0x64, 0x78, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // s = dFdx(v_texco
	0x6f, 0x72, 0x64, 0x30, 0x29, 0x2a, 0x62, 0x6c, 0x75, 0x72, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, // ord0)*blur;.vec2
	0x20, 0x64, 0x64, 0x79, 0x73, 0x20, 0x3d, 0x20, 0x64, 0x46, 0x64, 0x79, 0x28, 0x76, 0x5f, 0x74, //  ddys = dFdy(v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x2a, 0x62, 0x6c, 0x75, 0x72, 0x3b, 0x0a, // excoord0)*blur;.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, 0x73, 0x74, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, // float dist_facto
	0x72, 0x20, 0x3d, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x28, 0x31, 0x2e, 0x2d, 0x6c, 0x65, // r = clamp((1.-le
	0x6e, 0x67, 0x74, 0x68, 0x28, 0x64, 0x64, 0x78, 0x73, 0x2b, 0x64, 0x64, 0x79, 0x73, 0x29, 0x2a, // ngth(ddxs+ddys)*
	0x36, 0x2e, 0x36, 0x36, 0x29, 0x20, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x2c, 0x31, 0x2e, 0x30, 0x29, // 6.66) , 0.4,1.0)
	0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x6f, 0x66, 0x66, 0x73, 0x20, 0x3d, 0x20, 0x68, 0x61, // ;.vec2 offs = ha
	0x73, 0x68, 0x32, 0x32, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, // sh22(v_texcoord0
	0x20, 0x2b, 0x20, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, //  + vRes_Alpha_ti
	0x6d, 0x65, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // me.w);.vec3 colo
	0x72, 0x32, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // r2 = vec3_splat(
	0x30, 0x2e, 0x29, 0x3b, 0x0a, 0x69, 0x6e, 0x74, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, // 0.);.int samples
	0x20, 0x3d, 0x20, 0x31, 0x33, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x61, 0x6d, //  = 13;.float sam
	0x70, 0x6c, 0x65, 0x73, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, // ples_float = flo
	0x61, 0x74, 0x28, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x29, 0x3b, 0x0a, 0x66, 0x6f, 0x72, // at(samples);.for
	0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, //  (int i = 0; i <
	0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x3b, 0x20, 0x2b, 0x2b, 0x69, 0x29, 0x0a, 0x7b, //  samples; ++i).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x3d, // .float i_float =
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x69, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, //  float(i);.vec2 
	0x78, 0x69, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, // xi = vec2(fract(
	0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2f, // i_float * (1.0 /
	0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x29, 0x20, //  samples_float) 
	0x2b, 0x20, 0x6f, 0x66, 0x66, 0x73, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, // + offs.x), fract
	0x28, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x2a, 0x20, 0x28, 0x38, 0x2e, 0x30, 0x20, // (i_float * (8.0 
	0x2f, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x29, // / samples_float)
	0x20, 0x2b, 0x20, 0x6f, 0x66, 0x66, 0x73, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, //  + offs.y));.vec
	0x32, 0x20, 0x75, 0x76, 0x20, 0x3d, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // 2 uv = v_texcoor
	0x64, 0x30, 0x20, 0x2b, 0x20, 0x74, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x50, // d0 + triangularP
	0x44, 0x46, 0x28, 0x78, 0x69, 0x2e, 0x78, 0x29, 0x2a, 0x64, 0x64, 0x78, 0x73, 0x20, 0x2b, 0x20, // DF(xi.x)*ddxs + 
	0x74, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x50, 0x44, 0x46, 0x28, 0x78, 0x69, // triangularPDF(xi
	0x2e, 0x79, 0x29, 0x2a, 0x64, 0x64, 0x79, 0x73, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, // .y)*ddys;.vec4 r
	0x67, 0x62, 0x61, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, // gba = textureLod
	0x28, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x6d, 0x64, 0x2c, 0x20, 0x75, 0x76, 0x2c, 0x20, 0x30, 0x2e, // (tex_dmd, uv, 0.
	0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x64, 0x69, 0x73, 0x74, 0x20, 0x3d, 0x20, // 0);.vec2 dist = 
	0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x75, 0x76, 0x2a, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, // (fract(uv*vRes_A
	0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x78, 0x79, 0x29, 0x2a, 0x32, 0x2e, // lpha_time.xy)*2.
	0x32, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x31, 0x29, 0x20, 0x2a, 0x20, 0x64, 0x69, 0x73, 0x74, 0x5f, // 2 - 1.1) * dist_
	0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x20, // factor;.float d 
	0x3d, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x2c, // = smoothstep(0.,
	0x20, 0x31, 0x2e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x73, 0x71, 0x72, 0x28, 0x64, //  1., 1.0 - sqr(d
	0x69, 0x73, 0x74, 0x2e, 0x78, 0x2a, 0x64, 0x69, 0x73, 0x74, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x64, // ist.x*dist.x + d
	0x69, 0x73, 0x74, 0x2e, 0x79, 0x2a, 0x64, 0x69, 0x73, 0x74, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, // ist.y*dist.y));.
	0x69, 0x66, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, // if (vColor_Inten
	0x73, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, // sity.w != 0.0).c
	0x6f, 0x6c, 0x6f, 0x72, 0x32, 0x20, 0x2b, 0x3d, 0x20, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x72, 0x67, // olor2 += rgba.rg
	0x62, 0x20, 0x2a, 0x20, 0x64, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, // b * d;.else.colo
	0x72, 0x32, 0x20, 0x2b, 0x3d, 0x20, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x72, 0x20, 0x2a, 0x20, 0x64, // r2 += rgba.r * d
	0x3b, 0x0a, 0x7d, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x32, 0x20, 0x2a, 0x3d, 0x20, 0x76, 0x43, // ;.}.color2 *= vC
	0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, // olor_Intensity.x
	0x79, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x31, 0x2e, 0x2f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // yz * ((1./sample
	0x73, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x28, 0x64, // s_float) * sqr(d
	0x69, 0x73, 0x74, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x29, 0x29, 0x3b, 0x0a, 0x62, 0x67, // ist_factor));.bg
	0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, // fx_FragColor = v
	0x65, 0x63, 0x34, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x32, 0x20, 0x2c, 0x20, 0x76, 0x52, 0x65, // ec4(color2 , vRe
	0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x7a, 0x29, 0x3b, // s_Alpha_time.z);
	0x0a, 0x7d, 0x0a, 0x00,                                                                         // .}..
};
static const uint8_t fs_dmd_clip_glsl[7926] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4e, 0xbd, 0x0b, 0x9f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe3, 0x1e, // FSH.N...........
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x6f, // ..#version 440.o
	0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, // ut vec4 bgfx_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // gColor;.#define 
	0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x62, 0x67, 0x66, // gl_FragColor bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x0a, 0x23, 0x64, 0x65, 0x66, // x_FragColor.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x20, 0x20, // ine texture2D   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, //        texture.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // Lod       textur
	0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, // eLod.#define tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ture2DGrad      
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, // textureGrad.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, // ine texture2DPro
	0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, // jLod   texturePr
	0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // ojLod.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, // xture2DProjGrad 
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, //  textureProjGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // CubeLod     text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, // ureLod.#define t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, // extureCubeGrad  
	0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, //   textureGrad.#d
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, // efine texture3D 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //          texture
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, 0x65, 0x78, 0x74, // 2DLodOffset text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, // ureLodOffset.#de
	0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, // fine attribute i
	0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // n.#define varyin
	0x67, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, // g in.#define bgf
	0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // xShadow2D(_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, // er, _coord)     
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // vec4_splat(textu
	0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // re(_sampler, _co
	0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, // ord) ).#define b
	0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, // gfxShadow2DProj(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, // ) vec4_splat(tex
	0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // tureProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x76, 0x61, 0x72, // r, _coord) ).var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x63, 0x6c, 0x69, // ying float v_cli
	0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, // pDistance;.varyi
	0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, // ng vec2 v_texcoo
	0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, // rd0;.varying vec
	0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x3b, 0x0a, 0x76, // 2 v_texcoord1;.v
	0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, // ec3 instMul(vec3
	0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, //  _vec, mat3 _mtx
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, // ) { return ( (_v
	0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, // ec) * (_mtx) ); 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, // }.vec3 instMul(m
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // at3 _mtx, vec3 _
	0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, // vec) { return ( 
	0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, // (_mtx) * (_vec) 
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, // ); }.vec4 instMu
	0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, // l(vec4 _vec, mat
	0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 4 _mtx) { return
	0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, //  ( (_vec) * (_mt
	0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, // x) ); }.vec4 ins
	0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, // tMul(mat4 _mtx, 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // vec4 _vec) { ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, // urn ( (_mtx) * (
	0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _vec) ); }.float
	0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, //  rcp(float _a) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, //  return 1.0/_a; 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, // }.vec2 rcp(vec2 
	0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _a) { return vec
	0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, // 2(1.0)/_a; }.vec
	0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, // 3 rcp(vec3 _a) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, //  return vec3(1.0
	0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, // )/_a; }.vec4 rcp
	0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // (vec4 _a) { retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, // rn vec4(1.0)/_a;
	0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, //  }.vec2 vec2_spl
	0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // at(float _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // eturn vec2(_x, _
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, // x); }.vec3 vec3_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // splat(float _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, // { return vec3(_x
	0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, // , _x, _x); }.vec
	0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, // 4 vec4_splat(flo
	0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // at _x) { return 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // vec4(_x, _x, _x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, //  _x); }.uvec2 uv
	0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, // ec2_splat(uint _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, // x) { return uvec
	0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, // 2(_x, _x); }.uve
	0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, // c3 uvec3_splat(u
	0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // int _x) { return
	0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, //  uvec3(_x, _x, _
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, // x); }.uvec4 uvec
	0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, // 4_splat(uint _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, //  { return uvec4(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // _x, _x, _x, _x);
	0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, //  }.mat4 mtxFromR
	0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, // ows(vec4 _0, vec
	0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, // 4 _1, vec4 _2, v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec4 _3).{.return
	0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, //  transpose(mat4(
	0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, // _0, _1, _2, _3) 
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, // );.}.mat4 mtxFro
	0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, // mCols(vec4 _0, v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, // ec4 _1, vec4 _2,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  vec4 _3).{.retu
	0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, // rn mat4(_0, _1, 
	0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, // _2, _3);.}.mat3 
	0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, // mtxFromRows(vec3
	0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, //  _0, vec3 _1, ve
	0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c3 _2).{.return 
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, // transpose(mat3(_
	0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // 0, _1, _2) );.}.
	0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, // mat3 mtxFromCols
	0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // (vec3 _0, vec3 _
	0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 1, vec3 _2).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, // turn mat3(_0, _1
	0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // , _2);.}.uniform
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, //  vec4 u_viewRect
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, // ;.uniform vec4 u
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // _viewTexel;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, // orm mat4 u_view;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // invView;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, //  mat4 u_proj;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, // iform mat4 u_inv
	0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // Proj;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, // t4 u_viewProj;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, // niform mat4 u_in
	0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // vViewProj;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, // rm mat4 u_model[
	0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, // 32];.uniform mat
	0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, // 4 u_modelView;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, // niform mat4 u_mo
	0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // delViewProj;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, // form vec4 u_alph
	0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, // aRef4;.float sqr
	0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // ( float v).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // urn v*v;.}.vec2 
	0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // sqr( vec2 v).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // eturn v*v;.}.vec
	0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, // 3 sqr( vec3 v).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // .return v*v;.}.v
	0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, // ec3 mul_w1( vec3
	0x20, 0x76, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, //  v, mat4 m).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, // turn v.x*m[0].xy
	0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, // z + (v.y*m[1].xy
	0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, // z + (v.z*m[2].xy
	0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, // z + m[3].xyz));.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, // }.float acos_app
	0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // rox_divPI( float
	0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, //  v).{.float x = 
	0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, // abs(v);.if(1. - 
	0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, // x <= 0.000061035
	0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, // 15625).return (v
	0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, //  >= 0.) ? 0. : 1
	0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, // .;.float res = (
	0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, // (-0.155972/3.141
	0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, // 5926535897932384
	0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, // 626433832795) * 
	0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, // x + (1.56467/3.1
	0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, // 4159265358979323
	0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, // 84626433832795) 
	0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, // ) * sqrt(1. - x)
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, // ;.return (v >= 0
	0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, // .) ? res : 1. - 
	0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, // res;.}.float ata
	0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, // n2_approx_div2PI
	0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ( float y, float
	0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, //  x).{.float abs_
	0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // y = abs(y);.floa
	0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, // t abs_x = abs(x)
	0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, // ;.if(abs_x <= 0.
	0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, // 00006103515625 &
	0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, // & abs_y <= 0.000
	0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, // 06103515625).ret
	0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, // urn 0.;.float r 
	0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, // = (abs_x - abs_y
	0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, // ) / (abs_x + abs
	0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, // _y);.float angle
	0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, //  = ((x < 0.) ? (
	0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, // 3./8.) : (1./8.)
	0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, // ).+ (0.211868 /(
	0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, // 2.*3.14159265358
	0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, // 9793238462643383
	0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, // 2795) * r * r - 
	0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, // 0.987305 /(2.*3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, // ) * ((x < 0.) ? 
	0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // -r : r);.return 
	0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, // (y < 0.) ? -angl
	0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // e : angle;.}.flo
	0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, // at asin_approx_d
	0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, // ivPI( float v).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, // .float x = abs(v
	0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, // );.if(1. - x <= 
	0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, // 0.00006103515625
	0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, // ).return (v >= 0
	0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, // .) ? 0.5 : -0.5;
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, // .float res = ((-
	0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // 0.155972/3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, // 6433832795) * x 
	0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, // + (1.56467/3.141
	0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, // 5926535897932384
	0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, // 626433832795) ) 
	0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, // * sqrt(1. - x);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, // return (v >= 0.)
	0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, //  ? 0.5 - res : -
	0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // 0.5 + res;.}.vec
	0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, // 2 ray_to_equirec
	0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x20, 0x76, 0x65, 0x63, // tangular_uv( vec
	0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 3 ray).{.return 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, // vec2(.0.5 + atan
	0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, // 2_approx_div2PI(
	0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, // ray.y, ray.x),.a
	0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, // cos_approx_divPI
	0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // (ray.z));.}.floa
	0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // t InvsRGB( float
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, //  color).{.if (co
	0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, // lor <= 0.04045).
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, // return color * (
	0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, // 1.0/12.92);.else
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .return pow(colo
	0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, // r * (1.0/1.055) 
	0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, // + (0.055/1.055),
	0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, //  2.4);.}.float I
	0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // nvRec709( float 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, // color).{.if (col
	0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, // or <= 0.081).ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, // urn color * (1.0
	0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, // /4.5);.else.retu
	0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, // rn pow(color * (
	0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, // 1.0/1.099) + (0.
	0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, // 099/1.099), 1.0/
	0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, // 0.45);.}.float I
	0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, // nvGamma( float c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, // olor).{.return I
	0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, // nvsRGB(color);.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, // .vec3 InvGamma( 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // vec3 color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // turn vec3(InvGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, // ma(color.x),InvG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, // amma(color.y),In
	0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, // vGamma(color.z))
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, // ;.}.vec3 InvTone
	0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // Map( vec3 color)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, // .{.float inv_2bh
	0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, //  = 0.5/0.25;.flo
	0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, // at bh = 4.0*0.25
	0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, //  - 2.0;.return (
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, // color - 1.0 + sq
	0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // rt(color*(color 
	0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, // + bh) + 1.0))*in
	0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // v_2bh;.}.float s
	0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, // RGB( float f).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, // float s;.if (f <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, // = 0.0031308).s =
	0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, //  12.92 * f;.else
	0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, // .s = 1.055 * pow
	0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, // (f, 1.0/2.4) - 0
	0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, // .055;.return s;.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, // }.float Rec709( 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float f).{.float
	0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, //  s;.if (f <= 0.0
	0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, // 18).s = 4.5 * f;
	0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, // .else.s = 1.099 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, // * pow(f, 0.45) -
	0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, //  0.099;.return s
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // ;.}.float FBGamm
	0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // a( float color).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, // {.return sRGB(co
	0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, // lor);.}.vec2 FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // amma( vec2 color
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // ).{.return vec2(
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, // FBGamma(color.x)
	0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, // ,FBGamma(color.y
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, // ));.}.vec3 FBGam
	0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // ma( vec3 color).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, // {.return vec3(FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, // Gamma(color.x),F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, // BGamma(color.y),
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, // FBGamma(color.z)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // );.}.vec3 FBGamm
	0x61, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // a22( vec3 color)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x70, // .{.return vec3(p
	0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, // ow(color.x, 1.0/
	0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, // 2.2),pow(color.y
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, // , 1.0/2.2),pow(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, // olor.z, 1.0/2.2)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, // );.}.float FBTon
	0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, // eMap( float l).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, // .return l * ((l*
	0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, // 0.25 + 1.0) / (l
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, //  + 1.0));.}.vec2
	0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, //  FBToneMap( vec2
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //  color).{.float 
	0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, // l = dot(color,ve
	0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, // c2(0.176204+0.01
	0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, // 08109*0.5,0.8129
	0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, // 85+0.0108109*0.5
	0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // ));.return color
	0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, //  * ((l*0.25 + 1.
	0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, // 0) / (l + 1.0));
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, // .}.vec3 FBToneMa
	0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, // p( vec3 color).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, // .float l = dot(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, // olor,vec3(0.1762
	0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, // 04,0.812985,0.01
	0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 08109));.return 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, // color * ((l*0.25
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, //  + 1.0) / (l + 1
	0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, 0x64, // .0));.}.vec4 Add
	0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, // itive( vec4 cBas
	0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, // e, vec4 cBlend, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, // float percent).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, // .return cBase + 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, // cBlend*percent;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, // }.vec3 Screen ( 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // vec3 cBase, vec3
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  cBlend).{.retur
	0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, // n 1.0 - (1.0 - c
	0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, // Base) * (1.0 - c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, // Blend);.}.vec4 S
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, // creen ( vec4 cBa
	0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // se, vec4 cBlend)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // .{.return 1.0 - 
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, // (1.0 - cBase) * 
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, // (1.0 - cBlend);.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, // }.vec3 ScreenHDR
	0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, //  ( vec3 cBase, v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // ec3 cBlend).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, // turn max(1.0 - (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, // 1.0 - cBase) * (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, // 1.0 - cBlend), v
	0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, // ec3(0.,0.,0.));.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, // }.vec4 ScreenHDR
	0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, //  ( vec4 cBase, v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // ec4 cBlend).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, // turn max(1.0 - (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, // 1.0 - cBase) * (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, // 1.0 - cBlend), v
	0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, // ec4(0.,0.,0.,0.)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, // );.}.vec4 Multip
	0x6c, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // ly ( vec4 cBase,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, //  vec4 cBlend, fl
	0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // oat percent).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, // eturn cBase * cB
	0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, // lend*percent;.}.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x20, 0x76, // vec4 Overlay ( v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // ec4 cBase, vec4 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // cBlend).{.vec4 c
	0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, // New = step(0.5, 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, // cBase);.cNew = m
	0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, // ix(cBase*cBlend*
	0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, // 2.0, 1.0-2.0*(1.
	0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, // 0-cBase)*(1.0-cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, // lend), cNew);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // turn cNew;.}.vec
	0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, // 4 OverlayHDR ( v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // ec4 cBase, vec4 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // cBlend).{.vec4 c
	0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, // New = step(0.5, 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, // cBase);.cNew = m
	0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, // ax(mix(cBase*cBl
	0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, // end*2.0, 1.0-2.0
	0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, // *(1.0-cBase)*(1.
	0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, // 0-cBlend), cNew)
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, // , vec4(0.,0.,0.,
	0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, // 0.));.return cNe
	0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, // w;.}.vec3 cos_he
	0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // misphere_sample(
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  vec2 t).{.float
	0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, //  phi = t.y * (2.
	0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, // 0*3.141592653589
	0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, // 7932384626433832
	0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, // 795);.float cosT
	0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, // heta = sqrt(1.0 
	0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, // - t.x);.float si
	0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, // nTheta = sqrt(t.
	0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, // x);.float sp,cp;
	0x0a, 0x7b, 0x73, 0x70, 0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x63, 0x70, // .{sp=sin(phi);cp
	0x3d, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, 0x3b, 0x0a, 0x72, 0x65, 0x74, // =cos(phi);};.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, // urn vec3(cp * si
	0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, // nTheta, cosTheta
	0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x29, // , sp * sinTheta)
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, // ;.}.vec3 rotate_
	0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x28, // to_vector_upper(
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, //  vec3 vec, vec3 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, // normal).{.if(nor
	0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, // mal.y > -0.99999
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, // ).{.float h = 1.
	0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, // 0/(1.0+normal.y)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, // ;.float hz = h*n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, // ormal.z;.float h
	0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // zx = hz*normal.x
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, // ;.return vec3(.v
	0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, // ec.x * (normal.y
	0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, // +hz*normal.z) + 
	0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // vec.y * normal.x
	0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, //  - vec.z * hzx,.
	0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, // vec.y * normal.y
	0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, //  - vec.x * norma
	0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, // l.x - vec.z * no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, // rmal.z,.vec.y * 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, // normal.z - vec.x
	0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, //  * hzx + vec.z *
	0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, //  (normal.y+h*nor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, // mal.x*normal.x))
	0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // ;.}.else return 
	0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // -vec;.}.uniform 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, // vec4 vColor_Inte
	0x6e, 0x73, 0x69, 0x74, 0x79, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // nsity;.uniform v
	0x65, 0x63, 0x34, 0x20, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, // ec4 vRes_Alpha_t
	0x69, 0x6d, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, // ime;.uniform vec
	0x34, 0x20, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x54, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, // 4 alphaTestValue
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ;.uniform sample
	0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x6d, 0x64, 0x3b, 0x0a, 0x76, 0x65, 0x63, // r2D tex_dmd;.vec
	0x32, 0x20, 0x68, 0x61, 0x73, 0x68, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, // 2 hash22( vec2 u
	0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x33, 0x20, 0x3d, 0x20, 0x66, // v).{.vec3 p3 = f
	0x72, 0x61, 0x63, 0x74, 0x28, 0x75, 0x76, 0x2e, 0x78, 0x79, 0x78, 0x20, 0x2a, 0x20, 0x76, 0x65, // ract(uv.xyx * ve
	0x63, 0x33, 0x28, 0x2e, 0x31, 0x30, 0x33, 0x31, 0x2c, 0x20, 0x2e, 0x31, 0x30, 0x33, 0x30, 0x2c, // c3(.1031, .1030,
	0x20, 0x2e, 0x30, 0x39, 0x37, 0x33, 0x29, 0x29, 0x3b, 0x0a, 0x70, 0x33, 0x20, 0x2b, 0x3d, 0x20, //  .0973));.p3 += 
	0x64, 0x6f, 0x74, 0x28, 0x70, 0x33, 0x2c, 0x20, 0x70, 0x33, 0x2e, 0x79, 0x7a, 0x78, 0x20, 0x2b, // dot(p3, p3.yzx +
	0x20, 0x33, 0x33, 0x2e, 0x33, 0x33, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  33.33);.return 
	0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x28, 0x70, 0x33, 0x2e, 0x78, 0x78, 0x20, 0x2b, 0x20, 0x70, // fract((p3.xx + p
	0x33, 0x2e, 0x79, 0x7a, 0x29, 0x2a, 0x70, 0x33, 0x2e, 0x7a, 0x79, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // 3.yz)*p3.zy);.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, // float triangular
	0x50, 0x44, 0x46, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // PDF( float r).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x2a, 0x72, 0x3b, 0x0a, // float p = 2.*r;.
	0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x62, 0x20, 0x3d, 0x20, 0x28, 0x70, 0x20, 0x3e, 0x20, 0x31, 0x2e, // bool b = (p > 1.
	0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x62, 0x29, 0x0a, 0x70, 0x20, 0x3d, 0x20, 0x32, 0x2e, // );.if (b).p = 2.
	0x2d, 0x70, 0x3b, 0x0a, 0x70, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x2d, 0x73, 0x71, 0x72, 0x74, 0x28, // -p;.p = 1.-sqrt(
	0x70, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x62, 0x20, 0x3f, 0x20, 0x70, // p);.return b ? p
	0x20, 0x3a, 0x20, 0x2d, 0x70, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, //  : -p;.}.void ma
	0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x76, 0x5f, 0x63, 0x6c, 0x69, // in().{.if (v_cli
	0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, // pDistance < 0.0)
	0x0a, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // .discard;.float 
	0x62, 0x6c, 0x75, 0x72, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x35, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, // blur = 1.5;.vec2
	0x20, 0x64, 0x64, 0x78, 0x73, 0x20, 0x3d, 0x20, 0x64, 0x46, 0x64, 0x78, 0x28, 0x76, 0x5f, 0x74, //  ddxs = dFdx(v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x2a, 0x62, 0x6c, 0x75, 0x72, 0x3b, 0x0a, // excoord0)*blur;.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x64, 0x64, 0x79, 0x73, 0x20, 0x3d, 0x20, 0x64, 0x46, 0x64, 0x79, // vec2 ddys = dFdy
	0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x2a, 0x62, 0x6c, // (v_texcoord0)*bl
	0x75, 0x72, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, 0x73, 0x74, 0x5f, 0x66, // ur;.float dist_f
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x28, 0x31, // actor = clamp((1
	0x2e, 0x2d, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x28, 0x64, 0x64, 0x78, 0x73, 0x2b, 0x64, 0x64, // .-length(ddxs+dd
	0x79, 0x73, 0x29, 0x2a, 0x36, 0x2e, 0x36, 0x36, 0x29, 0x20, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x2c, // ys)*6.66) , 0.4,
	0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x6f, 0x66, 0x66, 0x73, 0x20, // 1.0);.vec2 offs 
	0x3d, 0x20, 0x68, 0x61, 0x73, 0x68, 0x32, 0x32, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // = hash22(v_texco
	0x6f, 0x72, 0x64, 0x30, 0x20, 0x2b, 0x20, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, // ord0 + vRes_Alph
	0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // a_time.w);.vec3 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x32, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, // color2 = vec3_sp
	0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x29, 0x3b, 0x0a, 0x69, 0x6e, 0x74, 0x20, 0x73, 0x61, 0x6d, // lat(0.);.int sam
	0x70, 0x6c, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x33, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ples = 13;.float
	0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x3d, //  samples_float =
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x29, 0x3b, //  float(samples);
	0x0a, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, 0x30, 0x3b, // .for (int i = 0;
	0x20, 0x69, 0x20, 0x3c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x3b, 0x20, 0x2b, 0x2b, //  i < samples; ++
	0x69, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x5f, 0x66, 0x6c, 0x6f, // i).{.float i_flo
	0x61, 0x74, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x69, 0x29, 0x3b, 0x0a, 0x76, // at = float(i);.v
	0x65, 0x63, 0x32, 0x20, 0x78, 0x69, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x66, 0x72, // ec2 xi = vec2(fr
	0x61, 0x63, 0x74, 0x28, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x2a, 0x20, 0x28, 0x31, // act(i_float * (1
	0x2e, 0x30, 0x20, 0x2f, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x66, 0x6c, 0x6f, // .0 / samples_flo
	0x61, 0x74, 0x29, 0x20, 0x2b, 0x20, 0x6f, 0x66, 0x66, 0x73, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x66, // at) + offs.x), f
	0x72, 0x61, 0x63, 0x74, 0x28, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x2a, 0x20, 0x28, // ract(i_float * (
	0x38, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x66, 0x6c, // 8.0 / samples_fl
	0x6f, 0x61, 0x74, 0x29, 0x20, 0x2b, 0x20, 0x6f, 0x66, 0x66, 0x73, 0x2e, 0x79, 0x29, 0x29, 0x3b, // oat) + offs.y));
	0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x20, 0x3d, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, // .vec2 uv = v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2b, 0x20, 0x74, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x75, // coord0 + triangu
	0x6c, 0x61, 0x72, 0x50, 0x44, 0x46, 0x28, 0x78, 0x69, 0x2e, 0x78, 0x29, 0x2a, 0x64, 0x64, 0x78, // larPDF(xi.x)*ddx
	0x73, 0x20, 0x2b, 0x20, 0x74, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x50, 0x44, // s + triangularPD
	0x46, 0x28, 0x78, 0x69, 0x2e, 0x79, 0x29, 0x2a, 0x64, 0x64, 0x79, 0x73, 0x3b, 0x0a, 0x76, 0x65, // F(xi.y)*ddys;.ve
	0x63, 0x34, 0x20, 0x72, 0x67, 0x62, 0x61, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // c4 rgba = textur
	0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x6d, 0x64, 0x2c, 0x20, 0x75, 0x76, // eLod(tex_dmd, uv
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x64, 0x69, 0x73, // , 0.0);.vec2 dis
	0x74, 0x20, 0x3d, 0x20, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x75, 0x76, 0x2a, 0x76, 0x52, // t = (fract(uv*vR
	0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x78, 0x79, // es_Alpha_time.xy
	0x29, 0x2a, 0x32, 0x2e, 0x32, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x31, 0x29, 0x20, 0x2a, 0x20, 0x64, // )*2.2 - 1.1) * d
	0x69, 0x73, 0x74, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // ist_factor;.floa
	0x74, 0x20, 0x64, 0x20, 0x3d, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, // t d = smoothstep
	0x28, 0x30, 0x2e, 0x2c, 0x20, 0x31, 0x2e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x73, // (0., 1., 1.0 - s
	0x71, 0x72, 0x28, 0x64, 0x69, 0x73, 0x74, 0x2e, 0x78, 0x2a, 0x64, 0x69, 0x73, 0x74, 0x2e, 0x78, // qr(dist.x*dist.x
	0x20, 0x2b, 0x20, 0x64, 0x69, 0x73, 0x74, 0x2e, 0x79, 0x2a, 0x64, 0x69, 0x73, 0x74, 0x2e, 0x79, //  + dist.y*dist.y
	0x29, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, // ));.if (vColor_I
	0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, // ntensity.w != 0.
	0x30, 0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x32, 0x20, 0x2b, 0x3d, 0x20, 0x72, 0x67, 0x62, // 0).color2 += rgb
	0x61, 0x2e, 0x72, 0x67, 0x62, 0x20, 0x2a, 0x20, 0x64, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, // a.rgb * d;.else.
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x32, 0x20, 0x2b, 0x3d, 0x20, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x72, // color2 += rgba.r
	0x20, 0x2a, 0x20, 0x64, 0x3b, 0x0a, 0x7d, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x32, 0x20, 0x2a, //  * d;.}.color2 *
	0x3d, 0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, // = vColor_Intensi
	0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x31, 0x2e, 0x2f, 0x73, 0x61, // ty.xyz * ((1./sa
	0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x29, 0x20, 0x2a, 0x20, 0x73, // mples_float) * s
	0x71, 0x72, 0x28, 0x64, 0x69, 0x73, 0x74, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x29, 0x29, // qr(dist_factor))
	0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, // ;.gl_FragColor =
	0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x32, 0x20, 0x2c, 0x20, 0x76, //  vec4(color2 , v
	0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x7a, // Res_Alpha_time.z
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,                                                             // );.}..
};
static const uint8_t fs_dmd_clip_dx11[9459] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4e, 0xbd, 0x0b, 0x9f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x10, 0x76, // FSH.N..........v
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, // Color_Intensity.
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, // ..........vRes_A
	0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, // lpha_time.......
	0x00, 0x00, 0x00, 0x07, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x6d, 0x64, 0x30, 0x01, 0x00, 0x00, 0x01, // ....tex_dmd0....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x6d, 0x64, 0x30, 0x01, 0x00, // ......tex_dmd0..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x24, 0x00, 0x00, 0x44, 0x58, 0x42, 0x43, 0x8d, // ........$..DXBC.
	0xf1, 0xc6, 0x83, 0x24, 0x7a, 0x3a, 0xa8, 0xa2, 0x6e, 0x75, 0xef, 0xff, 0x24, 0x28, 0x8a, 0x01, // ...$z:..nu..$(..
	0x00, 0x00, 0x00, 0x84, 0x24, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0xb4, // ....$......,....
	0x00, 0x00, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x4e, 0x80, 0x00, 0x00, 0x00, 0x04, // .......ISGN.....
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // .......h........
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x74, // ...............t
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .......t........
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x74, // ...............t
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, // .......SV_POSITI
	0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0xab, 0xab, 0xab, 0x4f, // ON.TEXCOORD....O
	0x53, 0x47, 0x4e, 0x2c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, // SGN,........... 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, // .......SV_TARGET
	0x00, 0xab, 0xab, 0x53, 0x48, 0x45, 0x58, 0x94, 0x23, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0xe5, // ...SHEX.#..P....
	0x08, 0x00, 0x00, 0x6a, 0x08, 0x00, 0x01, 0x59, 0x00, 0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, 0x00, // ...j...Y...F. ..
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x00, // .......Z....`...
	0x00, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, // ...X....p......U
	0x55, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x12, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x62, // U..b...........b
	0x10, 0x00, 0x03, 0x62, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0xf2, // ...b.......e....
	0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x02, 0x08, 0x00, 0x00, 0x00, 0x31, //  ......h.......1
	0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x10, 0x10, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x04, 0x03, 0x0a, // ....@...........
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7a, 0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x00, // .......z........
	0x00, 0x00, 0x00, 0x96, 0x19, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0xf2, // ...........8....
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // .......F........
	0x40, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x3f, 0x00, 0x00, 0xc0, 0x3f, 0x00, 0x00, 0xc0, 0x3f, 0x00, // @.....?...?...?.
	0x00, 0xc0, 0x3f, 0x36, 0x00, 0x00, 0x06, 0xf2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x96, // ..?6............
	0x19, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x05, 0xf2, // ...A.......|....
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, // .......F.......8
	0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x02, // ...........F....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x3f, 0x00, 0x00, 0xc0, 0x3f, 0x00, // ....@.....?...?.
	0x00, 0xc0, 0x3f, 0x00, 0x00, 0xc0, 0x3f, 0x32, 0x00, 0x00, 0x0c, 0x32, 0x00, 0x10, 0x00, 0x00, // ..?...?2...2....
	0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0xc0, 0x3f, 0x00, 0x00, 0xc0, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe6, // ..?...?.........
	0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x00, // ...F.......F....
	0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x05, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, // ...K............
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x12, 0x00, 0x10, 0x00, 0x00, // .......2........
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // .......A........
	0x40, 0x00, 0x00, 0xb8, 0x1e, 0xd5, 0x40, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x34, // @.....@.@.....?4
	0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0xcd, 0xcc, 0xcc, 0x3e, 0x00, 0x00, 0x00, 0x08, 0xe2, // ....@.....>.....
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x16, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf6, // .......V........
	0x8f, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0xe2, // . .........8....
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // .......V........
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x26, 0xd3, 0x3d, 0xaa, 0xf1, 0xd2, 0x3d, 0x39, // @.......&.=...=9
	0x45, 0xc7, 0x3d, 0x1a, 0x00, 0x00, 0x05, 0xe2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, // E.=............V
	0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x03, // ...........r....
	0x00, 0x00, 0x00, 0xe6, 0x09, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xec, // ............@...
	0x51, 0x05, 0x42, 0xec, 0x51, 0x05, 0x42, 0xec, 0x51, 0x05, 0x42, 0x00, 0x00, 0x00, 0x00, 0x10, // Q.B.Q.B.Q.B.....
	0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe2, // ...F............
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, // .......V........
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x03, // ................
	0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x00, // ...........V....
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0xb6, // ...8............
	0x0b, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x1a, // .......F........
	0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, // ...........F....
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x05, 0x62, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa6, // .......b........
	0x0b, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x32, 0x00, 0x10, 0x00, 0x04, // ...........2....
	0x00, 0x00, 0x00, 0x96, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x05, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x0a, 0xc2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, // ...1............
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, // @.............?.
	0x00, 0x00, 0x3f, 0x56, 0x09, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x10, 0x62, // ..?V.......2...b
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x06, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, // .......V...A....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, // ....@.........@.
	0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ..@.....@.......
	0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x62, // ..@...@....7...b
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa6, 0x0b, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x56, // ...............V
	0x06, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x01, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x4b, // ...............K
	0x00, 0x00, 0x05, 0x62, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x06, 0x10, 0x00, 0x00, // ...b.......V....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x62, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, // .......b.......V
	0x06, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, // ...A........@...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x37, // ......?...?....7
	0x00, 0x00, 0x0a, 0x62, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa6, 0x0b, 0x10, 0x00, 0x04, // ...b............
	0x00, 0x00, 0x00, 0x56, 0x06, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x06, 0x10, 0x80, 0x41, // ...V.......V...A
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xa2, 0x00, 0x10, 0x00, 0x00, // .......2........
	0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa6, 0x0e, 0x10, 0x00, 0x01, // ...V............
	0x00, 0x00, 0x00, 0x56, 0x19, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x62, // ...V.......2...b
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa6, // ................
	0x0b, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x56, 0x07, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, // .......V.......H
	0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x04, // .......CU..r....
	0x00, 0x00, 0x00, 0x96, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, // ...........F~...
	0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ....`.......@...
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x62, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, // ...8...b.......V
	0x06, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x81, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ......... ......
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x05, 0x62, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, // .......b.......V
	0x06, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0f, 0x62, 0x00, 0x10, 0x00, 0x00, // .......2...b....
	0x00, 0x00, 0x00, 0x56, 0x06, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, // ...V........@...
	0x00, 0x00, 0x00, 0xcd, 0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0x00, 0x00, 0x00, 0x00, 0x02, // ......@...@.....
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xcd, 0xcc, 0x8c, 0xbf, 0xcd, 0xcc, 0x8c, 0xbf, 0x00, // @...............
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x62, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, // ...8...b........
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x06, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, // .......V........
	0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x05, 0x10, 0x00, 0x00, // ..."............
	0x00, 0x00, 0x00, 0x96, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x22, // ...........2..."
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, // ...........A....
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0x80, 0x3f, 0x34, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // ..?4..."........
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, // ........@......2
	0x00, 0x00, 0x09, 0x42, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, // ...B............
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x40, 0x00, 0x00, 0x00, // ....@.......@...
	0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // .@@8..."........
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, // ...............8
	0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, // ..."............
	0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x08, 0x42, // ...*.......9...B
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .......:. ......
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, // ....@......8...r
	0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // .......V.......F
	0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x04, // .......7...r....
	0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, // ...........F....
	0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0xf2, // ................
	0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, // ................
	0x40, 0x00, 0x00, 0xd9, 0x89, 0x9d, 0x3d, 0xd9, 0x89, 0x1d, 0x3f, 0xd9, 0x89, 0x1d, 0x3e, 0xd9, // @.....=...?...>.
	0x89, 0x9d, 0x3f, 0x1a, 0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, // ..?............F
	0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x06, // ................
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x05, // ...F.......F....
	0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, // ...1............
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x00, // @.....?...?...?.
	0x00, 0x00, 0x3f, 0x46, 0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x10, 0xf2, // ..?F.......2....
	0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x05, // .......F...A....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, // ....@.....@...@.
	0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, // ..@...@.@.....@.
	0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x37, 0x00, 0x00, 0x09, 0xf2, // ..@...@...@7....
	0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x4b, // .......F.......K
	0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x05, // ...........F....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0xf2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x0e, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, // ...A........@...
	0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x37, // ..?...?...?...?7
	0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x07, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x80, 0x41, // ...F.......F...A
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x06, // .......2........
	0x00, 0x00, 0x00, 0x06, 0x0a, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x96, 0x19, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xf2, // ...........2....
	0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x56, 0x0f, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xe6, // .......V........
	0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x48, // .......F.......H
	0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x06, // .......CU..r....
	0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, // ...F.......F~...
	0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ....`.......@...
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, // ...8...........F
	0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x84, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // .......F. ......
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x0e, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0f, 0xf2, 0x00, 0x10, 0x00, 0x07, // .......2........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xcd, // ...F........@...
	0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0x02, // ..@...@...@...@.
	0x40, 0x00, 0x00, 0xcd, 0xcc, 0x8c, 0xbf, 0xcd, 0xcc, 0x8c, 0xbf, 0xcd, 0xcc, 0x8c, 0xbf, 0xcd, // @...............
	0xcc, 0x8c, 0xbf, 0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x06, // ...8............
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0f, // .......F........
	0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x07, // ...".......F....
	0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x22, // ...F.......2..."
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, // ...........A....
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0x80, 0x3f, 0x34, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // ..?4..."........
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, // ........@......2
	0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x40, 0x00, 0x00, 0x00, // ....@.......@...
	0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // .@@8..."........
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, // ...............8
	0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, // ..."............
	0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xe2, // ...:.......2....
	0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x56, // ...............V
	0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, // ...............2
	0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x06, // ...r............
	0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, // ...V.......F....
	0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xa6, // ...7...r........
	0x0a, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, // .......H.......C
	0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x05, // U..r............
	0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, // ...F~.......`...
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x07, 0x22, // ....@.........."
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe6, // ................
	0x0a, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x22, 0x00, 0x10, 0x00, 0x00, // .......2..."....
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // .......A........
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x34, // ........@.....?4
	0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, // ..."............
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x82, // ....@......2....
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x38, // @.......@....@@8
	0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, // ..."............
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x22, // ...........8..."
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, // ...............:
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xe2, 0x00, 0x10, 0x00, 0x05, // .......2........
	0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x00, // ...........V....
	0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, // ...........2...r
	0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x56, // ...............V
	0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x37, // .......F.......7
	0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x00, // ...r............
	0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, // ...........F....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xe6, // ................
	0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xc6, 0x4e, 0x6c, 0x3e, 0xc6, // ........@...Nl>.
	0x4e, 0xec, 0x3f, 0xd9, 0x89, 0x9d, 0x3e, 0xd9, 0x89, 0x1d, 0x40, 0x1a, 0x00, 0x00, 0x05, 0xf2, // N.?...>...@.....
	0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, // .......F........
	0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x05, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x0a, 0xf2, // ...F.......1....
	0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, // ........@.....?.
	0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x46, 0x0e, 0x10, 0x00, 0x05, // ..?...?...?F....
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x10, 0xf2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, // ...2...........F
	0x0e, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, // ...A........@...
	0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x02, // ..@...@...@...@.
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, // @.....@...@...@.
	0x00, 0x00, 0x40, 0x37, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, // ..@7...........F
	0x0e, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x05, // .......K........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0xf2, // ...F............
	0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x05, // .......F...A....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, // ....@.....?...?.
	0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x37, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x05, // ..?...?7........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x05, // ...F.......F....
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x32, // ...F...A.......2
	0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x0a, 0x10, 0x00, 0x05, // ................
	0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x96, 0x19, 0x10, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x56, // ...2...........V
	0x0f, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, // .......H.......C
	0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x05, // U..r.......F....
	0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, // ...F~.......`...
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, // ....@......8....
	0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x84, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x05, 0xf2, // . ..............
	0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x32, // .......F.......2
	0x00, 0x00, 0x0f, 0xf2, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x07, // ...........F....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xcd, 0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0xcd, // ....@.....@...@.
	0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0x02, 0x40, 0x00, 0x00, 0xcd, 0xcc, 0x8c, 0xbf, 0xcd, // ..@...@.@.......
	0xcc, 0x8c, 0xbf, 0xcd, 0xcc, 0x8c, 0xbf, 0xcd, 0xcc, 0x8c, 0xbf, 0x38, 0x00, 0x00, 0x07, 0xf2, // ...........8....
	0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x0e, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, // ..........."....
	0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x07, // ...F.......F....
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // ...2..."........
	0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, // ...A............
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x34, 0x00, 0x00, 0x07, 0x22, // ....@.....?4..."
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x00, // @......2........
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0x00, 0xc0, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0x22, // ....@....@@8..."
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // ................
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, // .......8..."....
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, // ...........:....
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xe2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, // ...2............
	0x09, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, // .......V........
	0x09, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x04, // .......2...r....
	0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x00, // ...........V....
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, // ...F.......7...r
	0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, // ................
	0x07, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, // .......F.......H
	0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x05, // .......CU..r....
	0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, // ...........F~...
	0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ....`.......@...
	0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe6, // ......."........
	0x0a, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x32, // ...............2
	0x00, 0x00, 0x0a, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, 0x41, // ..."...........A
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x34, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, // @.....?4..."....
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // ...2............
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x01, // ........@.......
	0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, // @....@@8..."....
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // ...8..."........
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, // .......:.......2
	0x00, 0x00, 0x09, 0xe2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x05, // ................
	0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x04, // ...V............
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, // ...2...r........
	0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // .......V.......F
	0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x04, // .......7...r....
	0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x05, // ................
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0xf2, // ...F............
	0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, // ................
	0x40, 0x00, 0x00, 0x4f, 0xec, 0xc4, 0x3e, 0x4f, 0xec, 0x44, 0x40, 0xc6, 0x4e, 0xec, 0x3e, 0xc6, // @..O..>O.D@.N.>.
	0x4e, 0x6c, 0x40, 0x1a, 0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, // Nl@............F
	0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x06, // ................
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x05, // ...F.......F....
	0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, // ...1............
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x00, // @.....?...?...?.
	0x00, 0x00, 0x3f, 0x46, 0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x10, 0xf2, // ..?F.......2....
	0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x05, // .......F...A....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, // ....@.....@...@.
	0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, // ..@...@.@.....@.
	0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x37, 0x00, 0x00, 0x09, 0xf2, // ..@...@...@7....
	0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x4b, // .......F.......K
	0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x05, // ...........F....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0xf2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x0e, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, // ...A........@...
	0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x37, // ..?...?...?...?7
	0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x07, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x80, 0x41, // ...F.......F...A
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x06, // .......2........
	0x00, 0x00, 0x00, 0x06, 0x0a, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x96, 0x19, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xf2, // ...........2....
	0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x56, 0x0f, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xe6, // .......V........
	0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x48, // .......F.......H
	0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x06, // .......CU..r....
	0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, // ...F.......F~...
	0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ....`.......@...
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, // ...8...........F
	0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x84, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // .......F. ......
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x0e, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0f, 0xf2, 0x00, 0x10, 0x00, 0x07, // .......2........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xcd, // ...F........@...
	0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0x02, // ..@...@...@...@.
	0x40, 0x00, 0x00, 0xcd, 0xcc, 0x8c, 0xbf, 0xcd, 0xcc, 0x8c, 0xbf, 0xcd, 0xcc, 0x8c, 0xbf, 0xcd, // @...............
	0xcc, 0x8c, 0xbf, 0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x06, // ...8............
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0f, // .......F........
	0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x07, // ...".......F....
	0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x22, // ...F.......2..."
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, // ...........A....
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0x80, 0x3f, 0x34, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // ..?4..."........
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, // ........@......2
	0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x40, 0x00, 0x00, 0x00, // ....@.......@...
	0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // .@@8..."........
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, // ...............8
	0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, // ..."............
	0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xe2, // ...:.......2....
	0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x56, // ...............V
	0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, // ...............2
	0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x06, // ...r............
	0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, // ...V.......F....
	0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xa6, // ...7...r........
	0x0a, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, // .......H.......C
	0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x05, // U..r............
	0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, // ...F~.......`...
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x07, 0x22, // ....@.........."
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe6, // ................
	0x0a, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x22, 0x00, 0x10, 0x00, 0x00, // .......2..."....
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // .......A........
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x34, // ........@.....?4
	0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, // ..."............
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x82, // ....@......2....
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x38, // @.......@....@@8
	0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, // ..."............
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x22, // ...........8..."
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, // ...............:
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xe2, 0x00, 0x10, 0x00, 0x05, // .......2........
	0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x00, // ...........V....
	0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, // ...........2...r
	0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x56, // ...............V
	0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x37, // .......F.......7
	0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x00, // ...r............
	0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, // ...........F....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xe6, // ................
	0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x9e, 0xd8, 0x09, 0x3f, 0x9e, // ........@.....?.
	0xd8, 0x89, 0x40, 0xd9, 0x89, 0x1d, 0x3f, 0xd9, 0x89, 0x9d, 0x40, 0x1a, 0x00, 0x00, 0x05, 0xf2, // ..@...?...@.....
	0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, // .......F........
	0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x05, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x0a, 0xf2, // ...F.......1....
	0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, // ........@.....?.
	0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x46, 0x0e, 0x10, 0x00, 0x05, // ..?...?...?F....
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x10, 0xf2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, // ...2...........F
	0x0e, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, // ...A........@...
	0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x02, // ..@...@...@...@.
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, // @.....@...@...@.
	0x00, 0x00, 0x40, 0x37, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, // ..@7...........F
	0x0e, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x05, // .......K........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0xf2, // ...F............
	0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x05, // .......F...A....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, // ....@.....?...?.
	0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x37, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x05, // ..?...?7........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x05, // ...F.......F....
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x32, // ...F...A.......2
	0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x0a, 0x10, 0x00, 0x05, // ................
	0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x96, 0x19, 0x10, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x56, // ...2...........V
	0x0f, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, // .......H.......C
	0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x05, // U..r.......F....
	0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, // ...F~.......`...
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, // ....@......8....
	0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x84, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x05, 0xf2, // . ..............
	0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x32, // .......F.......2
	0x00, 0x00, 0x0f, 0xf2, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x07, // ...........F....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xcd, 0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0xcd, // ....@.....@...@.
	0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0x02, 0x40, 0x00, 0x00, 0xcd, 0xcc, 0x8c, 0xbf, 0xcd, // ..@...@.@.......
	0xcc, 0x8c, 0xbf, 0xcd, 0xcc, 0x8c, 0xbf, 0xcd, 0xcc, 0x8c, 0xbf, 0x38, 0x00, 0x00, 0x07, 0xf2, // ...........8....
	0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x0e, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, // ..........."....
	0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x07, // ...F.......F....
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // ...2..."........
	0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, // ...A............
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x34, 0x00, 0x00, 0x07, 0x22, // ....@.....?4..."
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x00, // @......2........
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0x00, 0xc0, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0x22, // ....@....@@8..."
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // ................
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, // .......8..."....
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, // ...........:....
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xe2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, // ...2............
	0x09, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, // .......V........
	0x09, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x04, // .......2...r....
	0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x00, // ...........V....
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, // ...F.......7...r
	0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, // ................
	0x07, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, // .......F.......H
	0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x05, // .......CU..r....
	0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, // ...........F~...
	0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ....`.......@...
	0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe6, // ......."........
	0x0a, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x32, // ...............2
	0x00, 0x00, 0x0a, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, 0x41, // ..."...........A
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x34, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, // @.....?4..."....
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // ...2............
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x01, // ........@.......
	0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, // @....@@8..."....
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // ...8..."........
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, // .......:.......2
	0x00, 0x00, 0x09, 0xe2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x05, // ................
	0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x04, // ...V............
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, // ...2...r........
	0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // .......V.......F
	0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x04, // .......7...r....
	0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x05, // ................
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0xf2, // ...F............
	0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, // ................
	0x40, 0x00, 0x00, 0x14, 0x3b, 0x31, 0x3f, 0x14, 0x3b, 0xb1, 0x40, 0x4f, 0xec, 0x44, 0x3f, 0x4f, // @...;1?.;.@O.D?O
	0xec, 0xc4, 0x40, 0x1a, 0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, // ..@............F
	0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x06, // ................
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x05, // ...F.......F....
	0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, // ...1............
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x00, // @.....?...?...?.
	0x00, 0x00, 0x3f, 0x46, 0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x10, 0xf2, // ..?F.......2....
	0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x05, // .......F...A....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, // ....@.....@...@.
	0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, // ..@...@.@.....@.
	0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x37, 0x00, 0x00, 0x09, 0xf2, // ..@...@...@7....
	0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x4b, // .......F.......K
	0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x05, // ...........F....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0xf2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x0e, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, // ...A........@...
	0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x37, // ..?...?...?...?7
	0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x07, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x80, 0x41, // ...F.......F...A
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x06, // .......2........
	0x00, 0x00, 0x00, 0x06, 0x0a, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x96, 0x19, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xf2, // ...........2....
	0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x56, 0x0f, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xe6, // .......V........
	0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x48, // .......F.......H
	0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x06, // .......CU..r....
	0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, // ...F.......F~...
	0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ....`.......@...
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, // ...8...........F
	0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x84, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // .......F. ......
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x0e, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0f, 0xf2, 0x00, 0x10, 0x00, 0x07, // .......2........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xcd, // ...F........@...
	0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0x02, // ..@...@...@...@.
	0x40, 0x00, 0x00, 0xcd, 0xcc, 0x8c, 0xbf, 0xcd, 0xcc, 0x8c, 0xbf, 0xcd, 0xcc, 0x8c, 0xbf, 0xcd, // @...............
	0xcc, 0x8c, 0xbf, 0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x06, // ...8............
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0f, // .......F........
	0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x07, // ...".......F....
	0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x22, // ...F.......2..."
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, // ...........A....
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0x80, 0x3f, 0x34, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // ..?4..."........
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, // ........@......2
	0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x40, 0x00, 0x00, 0x00, // ....@.......@...
	0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // .@@8..."........
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, // ...............8
	0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, // ..."............
	0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xe2, // ...:.......2....
	0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x56, // ...............V
	0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, // ...............2
	0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x06, // ...r............
	0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, // ...V.......F....
	0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xa6, // ...7...r........
	0x0a, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, // .......H.......C
	0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x05, // U..r............
	0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, // ...F~.......`...
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x07, 0x22, // ....@.........."
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe6, // ................
	0x0a, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x22, 0x00, 0x10, 0x00, 0x00, // .......2..."....
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // .......A........
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x34, // ........@.....?4
	0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, // ..."............
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x82, // ....@......2....
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x38, // @.......@....@@8
	0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, // ..."............
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x22, // ...........8..."
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, // ...............:
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xe2, 0x00, 0x10, 0x00, 0x05, // .......2........
	0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x00, // ...........V....
	0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, // ...........2...r
	0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x56, // ...............V
	0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x37, // .......F.......7
	0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x00, // ...r............
	0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, // ...........F....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x8a, 0x9d, 0x58, 0x3f, 0x8a, // ........@....X?.
	0x9d, 0xd8, 0x40, 0xc6, 0x4e, 0x6c, 0x3f, 0xc6, 0x4e, 0xec, 0x40, 0x1a, 0x00, 0x00, 0x05, 0xf2, // ..@.Nl?.N.@.....
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, // .......F........
	0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x0a, 0xf2, // ...F.......1....
	0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, // ........@.....?.
	0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x46, 0x0e, 0x10, 0x00, 0x03, // ..?...?...?F....
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x10, 0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, // ...2...........F
	0x0e, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, // ...A........@...
	0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x02, // ..@...@...@...@.
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, // @.....@...@...@.
	0x00, 0x00, 0x40, 0x37, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, // ..@7...........F
	0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x03, // .......K........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0xf2, // ...F............
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x03, // .......F...A....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, // ....@.....?...?.
	0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x37, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x03, // ..?...?7........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, // ...F.......F....
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x32, // ...F...A.......2
	0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x0a, 0x10, 0x00, 0x03, // ................
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x96, 0x19, 0x10, 0x00, 0x01, // ...F............
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x56, // ...2...........V
	0x0f, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, // .......H.......C
	0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x01, // U..r.......F....
	0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, // ...F~.......`...
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, // ....@......8....
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x84, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x05, 0xf2, // . ..............
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x32, // .......F.......2
	0x00, 0x00, 0x0f, 0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, // ...........F....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xcd, 0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0xcd, // ....@.....@...@.
	0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0x02, 0x40, 0x00, 0x00, 0xcd, 0xcc, 0x8c, 0xbf, 0xcd, // ..@...@.@.......
	0xcc, 0x8c, 0xbf, 0xcd, 0xcc, 0x8c, 0xbf, 0xcd, 0xcc, 0x8c, 0xbf, 0x38, 0x00, 0x00, 0x07, 0xf2, // ...........8....
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, // ..........."....
	0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x03, // ...F.......F....
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // ...2..."........
	0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, // ...A............
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x34, 0x00, 0x00, 0x07, 0x22, // ....@.....?4..."
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x00, // @......2........
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0x00, 0xc0, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0x32, // ....@....@@8...2
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, // .......8..."....
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, // ...........:....
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xe2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, // ...2............
	0x09, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, // .......V........
	0x09, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x04, // .......2...r....
	0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x00, // ...........V....
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, // ...F.......7...r
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, // ................
	0x07, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, // .......F.......H
	0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x01, // .......CU..r....
	0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, // ...........F~...
	0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ....`.......@...
	0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe6, // ......."........
	0x0a, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x32, // ...............2
	0x00, 0x00, 0x0a, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, 0x41, // ..."...........A
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x34, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, // @.....?4..."....
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // ...2............
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x01, // ........@.......
	0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, // @....@@8..."....
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // ...8..."........
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, // .......:.......2
	0x00, 0x00, 0x09, 0xe2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x02, // ...V............
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, // ...2...r........
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // .......V.......F
	0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0xe2, 0x00, 0x10, 0x00, 0x00, // .......7........
	0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x0e, 0x10, 0x00, 0x01, // ...........V....
	0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x12, // ...........8....
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x40, 0x00, 0x00, 0xd9, 0x89, 0x9d, 0x3d, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x01, // @.....=8...r....
	0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, // ...........F. ..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x20, 0x10, 0x00, 0x00, // .......8...r ...
	0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, // ...........F....
	0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0x82, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, // ...6.... ......*
	0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x01, 0x00, // . .........>....
	0x00, 0x20, 0x00,                                                                               // . .
};
static const uint8_t fs_dmd_clip_spv[4173] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4e, 0xbd, 0x0b, 0x9f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x0f, 0x76, // FSH.N..........v
	0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x01, // Res_Alpha_time..
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, // .........vColor_
	0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, // Intensity.......
	0x00, 0x00, 0x00, 0x07, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x6d, 0x64, 0x30, 0x00, 0x02, 0x00, 0x00, // ....tex_dmd0....
	0x00, 0x00, 0x02, 0x22, 0x00, 0xf0, 0x0f, 0x00, 0x00, 0x03, 0x02, 0x23, 0x07, 0x00, 0x00, 0x01, // ...".......#....
	0x00, 0x0b, 0x00, 0x08, 0x00, 0x9a, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, // ................
	0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, // .............GLS
	0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, // L.std.450.......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x08, 0x00, 0x04, 0x00, 0x00, // ................
	0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x4d, 0x01, 0x00, // .....main....M..
	0x00, 0x51, 0x01, 0x00, 0x00, 0x63, 0x01, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, // .Q...c..........
	0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf4, 0x01, 0x00, // ................
	0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, // .........main...
	0x00, 0x05, 0x00, 0x06, 0x00, 0x35, 0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x6d, 0x64, // .....5...tex_dmd
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x38, 0x00, 0x00, // Sampler......8..
	0x00, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x6d, 0x64, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, // .tex_dmdTexture.
	0x00, 0x05, 0x00, 0x06, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x55, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // .........Uniform
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0xb2, 0x00, 0x00, // Block...........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, // .....vColor_Inte
	0x6e, 0x73, 0x69, 0x74, 0x79, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x07, 0x00, 0xb2, 0x00, 0x00, // nsity...........
	0x00, 0x01, 0x00, 0x00, 0x00, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, // .....vRes_Alpha_
	0x74, 0x69, 0x6d, 0x65, 0x00, 0x05, 0x00, 0x03, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // time............
	0x00, 0x05, 0x00, 0x06, 0x00, 0x4d, 0x01, 0x00, 0x00, 0x76, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x44, // .....M...v_clipD
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0x51, 0x01, 0x00, // istance......Q..
	0x00, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x05, 0x00, 0x06, // .v_texcoord0....
	0x00, 0x63, 0x01, 0x00, 0x00, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, // .c...bgfx_FragDa
	0x74, 0x61, 0x30, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x35, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, // ta0..G...5..."..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x35, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, // .....G...5...!..
	0x00, 0x12, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x38, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, // .....G...8..."..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x38, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, // .....G...8...!..
	0x00, 0x02, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .....H..........
	0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0xb2, 0x00, 0x00, // .#.......H......
	0x00, 0x01, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x47, 0x00, 0x03, // .....#.......G..
	0x00, 0xb2, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xb4, 0x00, 0x00, // .........G......
	0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xb4, 0x00, 0x00, // .".......G......
	0x00, 0x21, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x4d, 0x01, 0x00, // .!.......G...M..
	0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x51, 0x01, 0x00, // .........G...Q..
	0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x63, 0x01, 0x00, // .........G...c..
	0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, // ................
	0x00, 0x21, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x02, // .!..............
	0x00, 0x06, 0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, // ............. ..
	0x00, 0x19, 0x00, 0x09, 0x00, 0x08, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, // ................
	0x00, 0x02, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, // ................
	0x00, 0x04, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x15, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, // ................
	0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ..... ...4......
	0x00, 0x06, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x34, 0x00, 0x00, 0x00, 0x35, 0x00, 0x00, // .....;...4...5..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x37, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ..... ...7......
	0x00, 0x08, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x37, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, // .....;...7...8..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, // .........;... ..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, // .....+...;...<..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, // .....+...;...@..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x03, 0x00, 0x44, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, // .........D......
	0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x18, 0x26, 0xd3, // .+............&.
	0x3d, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5d, 0x00, 0x00, 0x00, 0xaa, 0xf1, 0xd2, // =+.......]......
	0x3d, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5e, 0x00, 0x00, 0x00, 0x39, 0x45, 0xc7, // =+.......^...9E.
	0x3d, 0x2c, 0x00, 0x06, 0x00, 0x15, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, // =,......._......
	0x00, 0x5d, 0x00, 0x00, 0x00, 0x5e, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, // .]...^...+......
	0x00, 0x65, 0x00, 0x00, 0x00, 0xec, 0x51, 0x05, 0x42, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, // .e....Q.B+......
	0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x14, 0x00, 0x02, 0x00, 0x7b, 0x00, 0x00, // .x......@....{..
	0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, // .+..............
	0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ?+..............
	0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, // .+..............
	0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xab, 0x00, 0x00, 0x00, 0xb8, 0x1e, 0xd5, // ?+..............
	0x40, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0xcd, 0xcc, 0xcc, // @+..............
	0x3e, 0x1e, 0x00, 0x04, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, // >...............
	0x00, 0x20, 0x00, 0x04, 0x00, 0xb3, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, // . ..............
	0x00, 0x3b, 0x00, 0x04, 0x00, 0xb3, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // .;..............
	0x00, 0x15, 0x00, 0x04, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ......... ......
	0x00, 0x2b, 0x00, 0x04, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xb6, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // .+..............
	0x00, 0x20, 0x00, 0x04, 0x00, 0xb7, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, // . ..............
	0x00, 0x2b, 0x00, 0x04, 0x00, 0x3b, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, // .+...;..........
	0x00, 0x20, 0x00, 0x04, 0x00, 0x01, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, // . ..............
	0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x01, 0x00, 0x00, 0xcd, 0xcc, 0x0c, // .+..............
	0x40, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x09, 0x01, 0x00, 0x00, 0xcd, 0xcc, 0x8c, // @+..............
	0x3f, 0x2b, 0x00, 0x04, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x40, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, // ?+.......@......
	0x00, 0x20, 0x00, 0x04, 0x00, 0x4c, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, // . ...L..........
	0x00, 0x3b, 0x00, 0x04, 0x00, 0x4c, 0x01, 0x00, 0x00, 0x4d, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, // .;...L...M......
	0x00, 0x20, 0x00, 0x04, 0x00, 0x50, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, // . ...P..........
	0x00, 0x3b, 0x00, 0x04, 0x00, 0x50, 0x01, 0x00, 0x00, 0x51, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, // .;...P...Q......
	0x00, 0x20, 0x00, 0x04, 0x00, 0x62, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, // . ...b..........
	0x00, 0x3b, 0x00, 0x04, 0x00, 0x62, 0x01, 0x00, 0x00, 0x63, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, // .;...b...c......
	0x00, 0x2c, 0x00, 0x06, 0x00, 0x15, 0x00, 0x00, 0x00, 0x8a, 0x02, 0x00, 0x00, 0x65, 0x00, 0x00, // .,...........e..
	0x00, 0x65, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x06, 0x00, 0x15, 0x00, 0x00, // .e...e...,......
	0x00, 0x8b, 0x02, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, // ................
	0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8d, 0x02, 0x00, 0x00, 0xd9, 0x89, 0x9d, // .+..............
	0x3d, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8e, 0x02, 0x00, 0x00, 0xd9, 0x89, 0x1d, // =+..............
	0x3f, 0x2c, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x8f, 0x02, 0x00, 0x00, 0x09, 0x01, 0x00, // ?,..............
	0x00, 0x09, 0x01, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, // .....6..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, // ................
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x35, 0x00, 0x00, // .=.......6...5..
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, // .=.......9...8..
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4e, 0x01, 0x00, 0x00, 0x4d, 0x01, 0x00, // .=.......N...M..
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x52, 0x01, 0x00, 0x00, 0x51, 0x01, 0x00, // .=.......R...Q..
	0x00, 0xb8, 0x00, 0x05, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x95, 0x01, 0x00, 0x00, 0x4e, 0x01, 0x00, // .....{.......N..
	0x00, 0x91, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x97, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0xfa, 0x00, 0x04, 0x00, 0x95, 0x01, 0x00, 0x00, 0x96, 0x01, 0x00, 0x00, 0x97, 0x01, 0x00, // ................
	0x00, 0xf8, 0x00, 0x02, 0x00, 0x96, 0x01, 0x00, 0x00, 0xfc, 0x00, 0x01, 0x00, 0xf8, 0x00, 0x02, // ................
	0x00, 0x97, 0x01, 0x00, 0x00, 0xcf, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x99, 0x01, 0x00, // ................
	0x00, 0x52, 0x01, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x9b, 0x01, 0x00, // .R..............
	0x00, 0x99, 0x01, 0x00, 0x00, 0x9a, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, // ................
	0x00, 0x9d, 0x01, 0x00, 0x00, 0x52, 0x01, 0x00, 0x00, 0xd0, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, // .....R..........
	0x00, 0x9e, 0x01, 0x00, 0x00, 0x9d, 0x01, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, // ................
	0x00, 0xa0, 0x01, 0x00, 0x00, 0x9e, 0x01, 0x00, 0x00, 0x9a, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, // ................
	0x00, 0x0b, 0x00, 0x00, 0x00, 0xa3, 0x01, 0x00, 0x00, 0x9b, 0x01, 0x00, 0x00, 0xa0, 0x01, 0x00, // ................
	0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa4, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x42, 0x00, 0x00, 0x00, 0xa3, 0x01, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // .B..............
	0x00, 0xa5, 0x01, 0x00, 0x00, 0xa4, 0x01, 0x00, 0x00, 0xab, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, // ................
	0x00, 0x07, 0x00, 0x00, 0x00, 0xa6, 0x01, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0xa5, 0x01, 0x00, // ................
	0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa7, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x2b, 0x00, 0x00, 0x00, 0xa6, 0x01, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, // .+..............
	0x00, 0x41, 0x00, 0x06, 0x00, 0xb7, 0x00, 0x00, 0x00, 0xa9, 0x01, 0x00, 0x00, 0xb4, 0x00, 0x00, // .A..............
	0x00, 0x3c, 0x00, 0x00, 0x00, 0xb6, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, // .<.......=......
	0x00, 0xaa, 0x01, 0x00, 0x00, 0xa9, 0x01, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, // .........P......
	0x00, 0xab, 0x01, 0x00, 0x00, 0xaa, 0x01, 0x00, 0x00, 0xaa, 0x01, 0x00, 0x00, 0x81, 0x00, 0x05, // ................
	0x00, 0x0b, 0x00, 0x00, 0x00, 0xac, 0x01, 0x00, 0x00, 0x52, 0x01, 0x00, 0x00, 0xab, 0x01, 0x00, // .........R......
	0x00, 0x4f, 0x00, 0x08, 0x00, 0x15, 0x00, 0x00, 0x00, 0x25, 0x02, 0x00, 0x00, 0xac, 0x01, 0x00, // .O.......%......
	0x00, 0xac, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x85, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00, 0x26, 0x02, 0x00, 0x00, 0x25, 0x02, 0x00, // .........&...%..
	0x00, 0x5f, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x15, 0x00, 0x00, 0x00, 0x27, 0x02, 0x00, // ._...........'..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x26, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, // .........&...O..
	0x00, 0x15, 0x00, 0x00, 0x00, 0x2a, 0x02, 0x00, 0x00, 0x27, 0x02, 0x00, 0x00, 0x27, 0x02, 0x00, // .....*...'...'..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, // ................
	0x00, 0x15, 0x00, 0x00, 0x00, 0x2c, 0x02, 0x00, 0x00, 0x2a, 0x02, 0x00, 0x00, 0x8a, 0x02, 0x00, // .....,...*......
	0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2d, 0x02, 0x00, 0x00, 0x27, 0x02, 0x00, // .........-...'..
	0x00, 0x2c, 0x02, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x15, 0x00, 0x00, 0x00, 0x2f, 0x02, 0x00, // .,...P......./..
	0x00, 0x2d, 0x02, 0x00, 0x00, 0x2d, 0x02, 0x00, 0x00, 0x2d, 0x02, 0x00, 0x00, 0x81, 0x00, 0x05, // .-...-...-......
	0x00, 0x15, 0x00, 0x00, 0x00, 0x30, 0x02, 0x00, 0x00, 0x27, 0x02, 0x00, 0x00, 0x2f, 0x02, 0x00, // .....0...'.../..
	0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x32, 0x02, 0x00, 0x00, 0x30, 0x02, 0x00, // .O.......2...0..
	0x00, 0x30, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x07, // .0...........O..
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x34, 0x02, 0x00, 0x00, 0x30, 0x02, 0x00, 0x00, 0x30, 0x02, 0x00, // .....4...0...0..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, // ................
	0x00, 0x35, 0x02, 0x00, 0x00, 0x32, 0x02, 0x00, 0x00, 0x34, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x07, // .5...2...4...O..
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x37, 0x02, 0x00, 0x00, 0x30, 0x02, 0x00, 0x00, 0x30, 0x02, 0x00, // .....7...0...0..
	0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, // ................
	0x00, 0x38, 0x02, 0x00, 0x00, 0x35, 0x02, 0x00, 0x00, 0x37, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x06, // .8...5...7......
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x39, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, // .....9..........
	0x00, 0x38, 0x02, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xb1, 0x01, 0x00, 0x00, 0xf8, 0x00, 0x02, // .8..............
	0x00, 0xb1, 0x01, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x15, 0x00, 0x00, 0x00, 0x91, 0x02, 0x00, // ................
	0x00, 0x8b, 0x02, 0x00, 0x00, 0x97, 0x01, 0x00, 0x00, 0x99, 0x02, 0x00, 0x00, 0x06, 0x02, 0x00, // ................
	0x00, 0xf5, 0x00, 0x07, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x90, 0x02, 0x00, 0x00, 0x40, 0x00, 0x00, // .....;.......@..
	0x00, 0x97, 0x01, 0x00, 0x00, 0x08, 0x02, 0x00, 0x00, 0x06, 0x02, 0x00, 0x00, 0xb1, 0x00, 0x05, // ................
	0x00, 0x7b, 0x00, 0x00, 0x00, 0xb5, 0x01, 0x00, 0x00, 0x90, 0x02, 0x00, 0x00, 0xc3, 0x00, 0x00, // .{..............
	0x00, 0xf6, 0x00, 0x04, 0x00, 0x09, 0x02, 0x00, 0x00, 0x06, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0xfa, 0x00, 0x04, 0x00, 0xb5, 0x01, 0x00, 0x00, 0xb6, 0x01, 0x00, 0x00, 0x09, 0x02, 0x00, // ................
	0x00, 0xf8, 0x00, 0x02, 0x00, 0xb6, 0x01, 0x00, 0x00, 0x6f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, // .........o......
	0x00, 0xb8, 0x01, 0x00, 0x00, 0x90, 0x02, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // ................
	0x00, 0xbc, 0x01, 0x00, 0x00, 0xb8, 0x01, 0x00, 0x00, 0x8d, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, // .............Q..
	0x00, 0x07, 0x00, 0x00, 0x00, 0xbe, 0x01, 0x00, 0x00, 0x39, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, // .........9......
	0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbf, 0x01, 0x00, 0x00, 0xbc, 0x01, 0x00, // ................
	0x00, 0xbe, 0x01, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x00, // ................
	0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0xbf, 0x01, 0x00, 0x00, 0x85, 0x00, 0x05, // ................
	0x00, 0x07, 0x00, 0x00, 0x00, 0xc4, 0x01, 0x00, 0x00, 0xb8, 0x01, 0x00, 0x00, 0x8e, 0x02, 0x00, // ................
	0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc6, 0x01, 0x00, 0x00, 0x39, 0x02, 0x00, // .Q...........9..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc7, 0x01, 0x00, // ................
	0x00, 0xc4, 0x01, 0x00, 0x00, 0xc6, 0x01, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, // ................
	0x00, 0xc8, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0xc7, 0x01, 0x00, // ................
	0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x43, 0x02, 0x00, 0x00, 0x78, 0x00, 0x00, // .........C...x..
	0x00, 0xc0, 0x01, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x45, 0x02, 0x00, // .........{...E..
	0x00, 0x43, 0x02, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x4a, 0x02, 0x00, // .C...........J..
	0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x45, 0x02, 0x00, 0x00, 0x47, 0x02, 0x00, // .........E...G..
	0x00, 0x4a, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x47, 0x02, 0x00, 0x00, 0x83, 0x00, 0x05, // .J.......G......
	0x00, 0x07, 0x00, 0x00, 0x00, 0x49, 0x02, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x43, 0x02, 0x00, // .....I...x...C..
	0x00, 0xf9, 0x00, 0x02, 0x00, 0x4a, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x4a, 0x02, 0x00, // .....J.......J..
	0x00, 0xf5, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x92, 0x02, 0x00, 0x00, 0x43, 0x02, 0x00, // .............C..
	0x00, 0xb6, 0x01, 0x00, 0x00, 0x49, 0x02, 0x00, 0x00, 0x47, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x06, // .....I...G......
	0x00, 0x07, 0x00, 0x00, 0x00, 0x4c, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, // .....L..........
	0x00, 0x92, 0x02, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4d, 0x02, 0x00, // .............M..
	0x00, 0x7f, 0x00, 0x00, 0x00, 0x4c, 0x02, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // .....L..........
	0x00, 0x51, 0x02, 0x00, 0x00, 0x4c, 0x02, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, // .Q...L..........
	0x00, 0x07, 0x00, 0x00, 0x00, 0x52, 0x02, 0x00, 0x00, 0x45, 0x02, 0x00, 0x00, 0x4d, 0x02, 0x00, // .....R...E...M..
	0x00, 0x51, 0x02, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xcf, 0x01, 0x00, // .Q..............
	0x00, 0x9b, 0x01, 0x00, 0x00, 0x52, 0x02, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, // .....R..........
	0x00, 0xd0, 0x01, 0x00, 0x00, 0x52, 0x01, 0x00, 0x00, 0xcf, 0x01, 0x00, 0x00, 0x85, 0x00, 0x05, // .....R..........
	0x00, 0x07, 0x00, 0x00, 0x00, 0x58, 0x02, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0xc8, 0x01, 0x00, // .....X...x......
	0x00, 0xba, 0x00, 0x05, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x5a, 0x02, 0x00, 0x00, 0x58, 0x02, 0x00, // .....{...Z...X..
	0x00, 0x7f, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x5f, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, // ........._......
	0x00, 0xfa, 0x00, 0x04, 0x00, 0x5a, 0x02, 0x00, 0x00, 0x5c, 0x02, 0x00, 0x00, 0x5f, 0x02, 0x00, // .....Z......._..
	0x00, 0xf8, 0x00, 0x02, 0x00, 0x5c, 0x02, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // ................
	0x00, 0x5e, 0x02, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x58, 0x02, 0x00, 0x00, 0xf9, 0x00, 0x02, // .^...x...X......
	0x00, 0x5f, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x5f, 0x02, 0x00, 0x00, 0xf5, 0x00, 0x07, // ._......._......
	0x00, 0x07, 0x00, 0x00, 0x00, 0x93, 0x02, 0x00, 0x00, 0x58, 0x02, 0x00, 0x00, 0x4a, 0x02, 0x00, // .........X...J..
	0x00, 0x5e, 0x02, 0x00, 0x00, 0x5c, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, // .^..............
	0x00, 0x61, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x93, 0x02, 0x00, // .a..............
	0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x62, 0x02, 0x00, 0x00, 0x7f, 0x00, 0x00, // .........b......
	0x00, 0x61, 0x02, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x66, 0x02, 0x00, // .a...........f..
	0x00, 0x61, 0x02, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, // .a..............
	0x00, 0x67, 0x02, 0x00, 0x00, 0x5a, 0x02, 0x00, 0x00, 0x62, 0x02, 0x00, 0x00, 0x66, 0x02, 0x00, // .g...Z...b...f..
	0x00, 0x8e, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xd5, 0x01, 0x00, 0x00, 0xa0, 0x01, 0x00, // ................
	0x00, 0x67, 0x02, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xd6, 0x01, 0x00, // .g..............
	0x00, 0xd0, 0x01, 0x00, 0x00, 0xd5, 0x01, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x44, 0x00, 0x00, // .........V...D..
	0x00, 0x6e, 0x02, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x58, 0x00, 0x07, // .n...9...6...X..
	0x00, 0x0e, 0x00, 0x00, 0x00, 0x71, 0x02, 0x00, 0x00, 0x6e, 0x02, 0x00, 0x00, 0xd6, 0x01, 0x00, // .....q...n......
	0x00, 0x02, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x01, 0x01, 0x00, // .........A......
	0x00, 0xdb, 0x01, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .........<...=..
	0x00, 0x0e, 0x00, 0x00, 0x00, 0xdc, 0x01, 0x00, 0x00, 0xdb, 0x01, 0x00, 0x00, 0x4f, 0x00, 0x07, // .............O..
	0x00, 0x0b, 0x00, 0x00, 0x00, 0xdd, 0x01, 0x00, 0x00, 0xdc, 0x01, 0x00, 0x00, 0xdc, 0x01, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, // ................
	0x00, 0xde, 0x01, 0x00, 0x00, 0xd6, 0x01, 0x00, 0x00, 0xdd, 0x01, 0x00, 0x00, 0x0c, 0x00, 0x06, // ................
	0x00, 0x0b, 0x00, 0x00, 0x00, 0xdf, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, // ................
	0x00, 0xde, 0x01, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xe0, 0x01, 0x00, // ................
	0x00, 0xdf, 0x01, 0x00, 0x00, 0x07, 0x01, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, // ................
	0x00, 0xe2, 0x01, 0x00, 0x00, 0xe0, 0x01, 0x00, 0x00, 0x8f, 0x02, 0x00, 0x00, 0x8e, 0x00, 0x05, // ................
	0x00, 0x0b, 0x00, 0x00, 0x00, 0xe4, 0x01, 0x00, 0x00, 0xe2, 0x01, 0x00, 0x00, 0xa7, 0x01, 0x00, // ................
	0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe6, 0x01, 0x00, 0x00, 0xe4, 0x01, 0x00, // .Q..............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe8, 0x01, 0x00, // .....Q..........
	0x00, 0xe4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // ................
	0x00, 0xe9, 0x01, 0x00, 0x00, 0xe6, 0x01, 0x00, 0x00, 0xe8, 0x01, 0x00, 0x00, 0x51, 0x00, 0x05, // .............Q..
	0x00, 0x07, 0x00, 0x00, 0x00, 0xeb, 0x01, 0x00, 0x00, 0xe4, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xed, 0x01, 0x00, 0x00, 0xe4, 0x01, 0x00, // .Q..............
	0x00, 0x01, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xee, 0x01, 0x00, // ................
	0x00, 0xeb, 0x01, 0x00, 0x00, 0xed, 0x01, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // ................
	0x00, 0xef, 0x01, 0x00, 0x00, 0xe9, 0x01, 0x00, 0x00, 0xee, 0x01, 0x00, 0x00, 0x85, 0x00, 0x05, // ................
	0x00, 0x07, 0x00, 0x00, 0x00, 0x76, 0x02, 0x00, 0x00, 0xef, 0x01, 0x00, 0x00, 0xef, 0x01, 0x00, // .....v..........
	0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf1, 0x01, 0x00, 0x00, 0x7f, 0x00, 0x00, // ................
	0x00, 0x76, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf2, 0x01, 0x00, // .v..............
	0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, // .....1..........
	0x00, 0xf1, 0x01, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0xb7, 0x00, 0x00, 0x00, 0xf3, 0x01, 0x00, // .....A..........
	0x00, 0xb4, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0xb6, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .....@.......=..
	0x00, 0x07, 0x00, 0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, 0xf3, 0x01, 0x00, 0x00, 0xb7, 0x00, 0x05, // ................
	0x00, 0x7b, 0x00, 0x00, 0x00, 0xf5, 0x01, 0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, 0x91, 0x00, 0x00, // .{..............
	0x00, 0xf7, 0x00, 0x03, 0x00, 0x05, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, // ................
	0x00, 0xf5, 0x01, 0x00, 0x00, 0xf6, 0x01, 0x00, 0x00, 0xfd, 0x01, 0x00, 0x00, 0xf8, 0x00, 0x02, // ................
	0x00, 0xf6, 0x01, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x15, 0x00, 0x00, 0x00, 0xf8, 0x01, 0x00, // .....O..........
	0x00, 0x71, 0x02, 0x00, 0x00, 0x71, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // .q...q..........
	0x00, 0x02, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00, 0xfa, 0x01, 0x00, // ................
	0x00, 0xf8, 0x01, 0x00, 0x00, 0xf2, 0x01, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, // ................
	0x00, 0xfc, 0x01, 0x00, 0x00, 0x91, 0x02, 0x00, 0x00, 0xfa, 0x01, 0x00, 0x00, 0xf9, 0x00, 0x02, // ................
	0x00, 0x05, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xfd, 0x01, 0x00, 0x00, 0x51, 0x00, 0x05, // .............Q..
	0x00, 0x07, 0x00, 0x00, 0x00, 0xff, 0x01, 0x00, 0x00, 0x71, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, // .........q......
	0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0xff, 0x01, 0x00, // ................
	0x00, 0xf2, 0x01, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x15, 0x00, 0x00, 0x00, 0x03, 0x02, 0x00, // .....P..........
	0x00, 0x01, 0x02, 0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0x81, 0x00, 0x05, // ................
	0x00, 0x15, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x91, 0x02, 0x00, 0x00, 0x03, 0x02, 0x00, // ................
	0x00, 0xf9, 0x00, 0x02, 0x00, 0x05, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, 0x02, 0x00, // ................
	0x00, 0xf5, 0x00, 0x07, 0x00, 0x15, 0x00, 0x00, 0x00, 0x99, 0x02, 0x00, 0x00, 0xfc, 0x01, 0x00, // ................
	0x00, 0xf6, 0x01, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0xfd, 0x01, 0x00, 0x00, 0xf9, 0x00, 0x02, // ................
	0x00, 0x06, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x06, 0x02, 0x00, 0x00, 0x80, 0x00, 0x05, // ................
	0x00, 0x3b, 0x00, 0x00, 0x00, 0x08, 0x02, 0x00, 0x00, 0x90, 0x02, 0x00, 0x00, 0x3c, 0x00, 0x00, // .;...........<..
	0x00, 0xf9, 0x00, 0x02, 0x00, 0xb1, 0x01, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x09, 0x02, 0x00, // ................
	0x00, 0x41, 0x00, 0x05, 0x00, 0x01, 0x01, 0x00, 0x00, 0x0a, 0x02, 0x00, 0x00, 0xb4, 0x00, 0x00, // .A..............
	0x00, 0x40, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x0b, 0x02, 0x00, // .@...=..........
	0x00, 0x0a, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x15, 0x00, 0x00, 0x00, 0x0c, 0x02, 0x00, // .....O..........
	0x00, 0x0b, 0x02, 0x00, 0x00, 0x0b, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x02, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7b, 0x02, 0x00, // .............{..
	0x00, 0xa7, 0x01, 0x00, 0x00, 0xa7, 0x01, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // ................
	0x00, 0x11, 0x02, 0x00, 0x00, 0x8d, 0x02, 0x00, 0x00, 0x7b, 0x02, 0x00, 0x00, 0x8e, 0x00, 0x05, // .........{......
	0x00, 0x15, 0x00, 0x00, 0x00, 0x12, 0x02, 0x00, 0x00, 0x0c, 0x02, 0x00, 0x00, 0x11, 0x02, 0x00, // ................
	0x00, 0x85, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00, 0x14, 0x02, 0x00, 0x00, 0x91, 0x02, 0x00, // ................
	0x00, 0x12, 0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0xb7, 0x00, 0x00, 0x00, 0x16, 0x02, 0x00, // .....A..........
	0x00, 0xb4, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x40, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, // .....<...@...=..
	0x00, 0x07, 0x00, 0x00, 0x00, 0x17, 0x02, 0x00, 0x00, 0x16, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, // .............Q..
	0x00, 0x07, 0x00, 0x00, 0x00, 0x18, 0x02, 0x00, 0x00, 0x14, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x19, 0x02, 0x00, 0x00, 0x14, 0x02, 0x00, // .Q..............
	0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1a, 0x02, 0x00, // .....Q..........
	0x00, 0x14, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0e, 0x00, 0x00, // .........P......
	0x00, 0x1b, 0x02, 0x00, 0x00, 0x18, 0x02, 0x00, 0x00, 0x19, 0x02, 0x00, 0x00, 0x1a, 0x02, 0x00, // ................
	0x00, 0x17, 0x02, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x63, 0x01, 0x00, 0x00, 0x1b, 0x02, 0x00, // .....>...c......
	0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00,                   // .....8..... .
};
static const bgfx::EmbeddedShader fs_dmd_clip = BGFX_EMBEDDED_SHADER(fs_dmd_clip);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of fragment shader from fs_display.sc to fs_display_dmd_clip with options: DMD CLIP
static const uint8_t fs_display_dmd_clip_mtl[5568] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4e, 0xbd, 0x0b, 0x9f, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x11, 0x64, // FSH.N..........d
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // isplayTexSampler
	0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x64, 0x69, 0x73, 0x70, 0x6c, // ...........displ
	0x61, 0x79, 0x54, 0x65, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, // ayTexTexture....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, // .......displayGl
	0x61, 0x73, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, // assSampler......
	0x00, 0x00, 0x00, 0x00, 0x13, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, // .....displayGlas
	0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // sTexture........
	0x00, 0x00, 0x11, 0x64, 0x6d, 0x64, 0x47, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x78, 0x53, 0x61, 0x6d, // ...dmdGlowTexSam
	0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x64, // pler...........d
	0x6d, 0x64, 0x47, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // mdGlowTexTexture
	0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x77, 0x5f, 0x68, 0x5f, 0x68, // ...........w_h_h
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x01, 0x30, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, // eight..0........
	0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, // vColor_Intensity
	0x12, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x76, 0x52, 0x65, 0x73, 0x5f, // ...........vRes_
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x01, 0x40, 0x00, 0x01, 0x00, // Alpha_time..@...
	0x00, 0x00, 0x00, 0x00, 0x11, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // .....staticColor
	0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x01, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // _Alpha..........
	0x16, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x6f, // .glassAmbient_Ro
	0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x01, 0x20, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // ughness.. ......
	0x00, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x10, 0x00, 0x00, 0x00, // ..displayTex....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, // .......displayGl
	0x61, 0x73, 0x73, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x64, 0x6d, // ass...........dm
	0x64, 0x47, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x78, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // dGlowTex........
	0x00, 0x00, 0x36, 0x14, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, // ..6...#include <
	0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, // metal_stdlib>.#i
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, // nclude <simd/sim
	0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, // d.h>..using name
	0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, // space metal;..st
	0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, // ruct _Global.{. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, //    float4 vColor
	0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // _Intensity;.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, // float4 staticCol
	0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // or_Alpha;.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, // oat4 glassAmbien
	0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x20, 0x20, 0x20, // t_Roughness;.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, //  float4 w_h_heig
	0x68, 0x74, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, // ht;.    float4 v
	0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x3b, 0x0a, // Res_Alpha_time;.
	0x7d, 0x3b, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x66, 0x6c, 0x6f, // };..constant flo
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x38, 0x38, 0x38, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x0a, // at4 _888 = {};..
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // struct xlatMtlMa
	0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // in_out.{.    flo
	0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, // at4 bgfx_FragDat
	0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, // a0 [[color(0)]];
	0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, // .};..struct xlat
	0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, // MtlMain_in.{.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, //  float v_clipDis
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, // tance [[user(loc
	0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // n0)]];.    float
	0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, // 2 v_texcoord0 [[
	0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, // user(locn1)]];. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, //    float2 v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, // oord1 [[user(loc
	0x6e, 0x32, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, // n2)]];.};..fragm
	0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, // ent xlatMtlMain_
	0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, // out xlatMtlMain(
	0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, // xlatMtlMain_in i
	0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, // n [[stage_in]], 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, // constant _Global
	0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, // & _mtl_u [[buffe
	0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, // r(0)]], texture2
	0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, // d<float> display
	0x54, 0x65, 0x78, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x30, 0x29, // Tex [[texture(0)
	0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, // ]], texture2d<fl
	0x6f, 0x61, 0x74, 0x3e, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, // oat> displayGlas
	0x73, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x31, 0x29, 0x5d, 0x5d, // s [[texture(1)]]
	0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, // , texture2d<floa
	0x74, 0x3e, 0x20, 0x64, 0x6d, 0x64, 0x47, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x78, 0x20, 0x5b, 0x5b, // t> dmdGlowTex [[
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, // texture(2)]], sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, // mpler displayTex
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // Sampler [[sample
	0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, // r(0)]], sampler 
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x53, 0x61, 0x6d, 0x70, // displayGlassSamp
	0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x31, 0x29, // ler [[sampler(1)
	0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x64, 0x6d, 0x64, 0x47, // ]], sampler dmdG
	0x6c, 0x6f, 0x77, 0x54, 0x65, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, // lowTexSampler [[
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, // sampler(2)]]).{.
	0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, //     xlatMtlMain_
	0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, // out out = {};.  
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x44, //   if (in.v_clipD
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, // istance < 0.0). 
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x73, //    {.        dis
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x28, 0x29, 0x3b, // card_fragment();
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // .    }.    float
	0x32, 0x20, 0x5f, 0x35, 0x32, 0x36, 0x20, 0x3d, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, // 2 _526 = (floor(
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x2a, // in.v_texcoord1 *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, //  _mtl_u.vRes_Alp
	0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x78, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x66, 0x6c, // ha_time.xy) + fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, // oat2(0.5)) / _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, // l_u.vRes_Alpha_t
	0x69, 0x6d, 0x65, 0x2e, 0x78, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ime.xy;.    floa
	0x74, 0x33, 0x20, 0x5f, 0x38, 0x37, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, // t3 _877;.    if 
	0x28, 0x28, 0x28, 0x28, 0x5f, 0x35, 0x32, 0x36, 0x2e, 0x78, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, // ((((_526.x >= 0.
	0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x35, 0x32, 0x36, 0x2e, 0x79, 0x20, 0x3e, 0x3d, // 0) && (_526.y >=
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x35, 0x32, 0x36, 0x2e, //  0.0)) && (_526.
	0x78, 0x20, 0x3c, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, // x <= 1.0)) && (_
	0x35, 0x32, 0x36, 0x2e, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, // 526.y <= 1.0)). 
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, //    {.        flo
	0x61, 0x74, 0x32, 0x20, 0x5f, 0x36, 0x37, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x28, // at2 _672 = (abs(
	0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // fract(in.v_texco
	0x6f, 0x72, 0x64, 0x31, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x52, // ord1 * _mtl_u.vR
	0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x78, 0x79, // es_Alpha_time.xy
	0x29, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x29, // ) - float2(0.5))
	0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, //  - float2(_mtl_u
	0x2e, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, // .vRes_Alpha_time
	0x2e, 0x7a, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, // .z)) + float2(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, // tl_u.vRes_Alpha_
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // time.w);.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x36, 0x39, 0x34, 0x20, 0x3d, 0x20, 0x64, //  float4 _694 = d
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // isplayTex.sample
	0x28, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, // (displayTexSampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x35, 0x32, 0x36, 0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x28, // er, _526, level(
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // 0.0));.        f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x38, 0x37, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // loat3 _874;.    
	0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, //     do.        {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, // .            if 
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, // (_mtl_u.w_h_heig
	0x68, 0x74, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, // ht.w != 0.0).   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, 0x37, 0x34, 0x20, //            _874 
	0x3d, 0x20, 0x5f, 0x36, 0x39, 0x34, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, // = _694.xyz * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, // l_u.vColor_Inten
	0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // sity.xyz;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, //           break;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, // .            }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, //            else.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, //             {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, //               _8
	0x37, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, // 74 = _mtl_u.vCol
	0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, // or_Intensity.xyz
	0x20, 0x2a, 0x20, 0x5f, 0x36, 0x39, 0x34, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //  * _694.x;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, //            break
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, // ;.            }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, //             brea
	0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, // k; // unreachabl
	0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, // e workaround.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, //      } while(fal
	0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, 0x37, // se);.        _87
	0x37, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, // 7 = (_mtl_u.stat
	0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, // icColor_Alpha.xy
	0x7a, 0x20, 0x2b, 0x20, 0x5f, 0x38, 0x37, 0x34, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x6d, 0x6f, 0x6f, // z + _874) * smoo
	0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // thstep(0.0, _mtl
	0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x7a, 0x2c, // _u.w_h_height.z,
	0x20, 0x28, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, //  (length(fast::m
	0x61, 0x78, 0x28, 0x5f, 0x36, 0x37, 0x32, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // ax(_672, float2(
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, // 0.0))) + fast::m
	0x69, 0x6e, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x36, 0x37, // in(fast::max(_67
	0x32, 0x2e, 0x78, 0x2c, 0x20, 0x5f, 0x36, 0x37, 0x32, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x30, 0x2e, // 2.x, _672.y), 0.
	0x30, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x52, 0x65, // 0)) - _mtl_u.vRe
	0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x77, 0x29, 0x3b, // s_Alpha_time.w);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, // .    }.    else.
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, //     {.        _8
	0x37, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, // 77 = float3(0.0)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ;.    }.    floa
	0x74, 0x34, 0x20, 0x5f, 0x37, 0x32, 0x38, 0x20, 0x3d, 0x20, 0x64, 0x6d, 0x64, 0x47, 0x6c, 0x6f, // t4 _728 = dmdGlo
	0x77, 0x54, 0x65, 0x78, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x64, 0x6d, 0x64, 0x47, // wTex.sample(dmdG
	0x6c, 0x6f, 0x77, 0x54, 0x65, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, // lowTexSampler, (
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x32, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, // float2(0.25) + (
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x2a, // in.v_texcoord1 *
	0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x30, 0x2e, //  0.5)), level(0.
	0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // 0));.    float3 
	0x5f, 0x38, 0x37, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, // _875;.    do.   
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, //  {.        if (_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, // mtl_u.w_h_height
	0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .w != 0.0).     
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x5f, 0x38, 0x37, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x37, 0x32, 0x38, 0x2e, 0x78, 0x79, 0x7a, //  _875 = _728.xyz
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, //  * _mtl_u.vColor
	0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, // _Intensity.xyz;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, //             brea
	0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, // k;.        }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      else.      
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   {.            
	0x5f, 0x38, 0x37, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, // _875 = _mtl_u.vC
	0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, // olor_Intensity.x
	0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x37, 0x32, 0x38, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, // yz * _728.x;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, //          break;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, 0x65, //   break; // unre
	0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, // achable workarou
	0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, // nd.    } while(f
	0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // alse);.    float
	0x33, 0x20, 0x5f, 0x35, 0x38, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x38, 0x37, 0x37, 0x20, 0x2b, 0x20, // 3 _585 = _877 + 
	0x28, 0x5f, 0x38, 0x37, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, // (_875 * _mtl_u.v
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, // Color_Intensity.
	0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // w);.    float3 _
	0x38, 0x37, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, // 878;.    if (_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x78, // l_u.w_h_height.x
	0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, //  != 0.0).    {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x37, //        float4 _7
	0x36, 0x31, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, // 61 = displayGlas
	0x73, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, // s.sample(display
	0x47, 0x6c, 0x61, 0x73, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, // GlassSampler, in
	0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x20, // .v_texcoord0);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, 0x37, 0x38, 0x20, 0x3d, 0x20, 0x6d, 0x69, //        _878 = mi
	0x78, 0x28, 0x5f, 0x35, 0x38, 0x35, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, // x(_585, _mtl_u.g
	0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, // lassAmbient_Roug
	0x68, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x5f, 0x38, 0x37, 0x35, // hness.xyz + _875
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // , float3(_mtl_u.
	0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x6f, 0x75, // glassAmbient_Rou
	0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x77, 0x20, 0x2a, 0x20, 0x5f, 0x37, 0x36, 0x31, 0x2e, // ghness.w * _761.
	0x77, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x37, 0x36, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, // w)) * _761.xyz;.
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, //     }.    else. 
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, 0x37, //    {.        _87
	0x38, 0x20, 0x3d, 0x20, 0x5f, 0x35, 0x38, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, // 8 = _585;.    }.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x38, 0x38, 0x32, 0x3b, //     float4 _882;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // .    if (_mtl_u.
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, // staticColor_Alph
	0x61, 0x2e, 0x77, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // a.w == 0.0).    
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, 0x38, 0x32, 0x20, 0x3d, // {.        _882 =
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x38, 0x37, 0x38, 0x2c, 0x20, 0x31, 0x2e, //  float4(_878, 1.
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, // 0);.    }.    el
	0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // se.    {.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x38, 0x38, 0x33, 0x3b, 0x0a, 0x20, 0x20, //  float4 _883;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, //       if (_mtl_u
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, // .staticColor_Alp
	0x68, 0x61, 0x2e, 0x77, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, // ha.w == 1.0).   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x37, 0x37, 0x33, 0x20, 0x3d, 0x20, //    float _773 = 
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x69, 0x6e, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x38, // fast::min(dot(_8
	0x37, 0x38, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, // 78, float3(0.176
	0x32, 0x30, 0x33, 0x39, 0x39, 0x35, 0x39, 0x34, 0x33, 0x30, 0x36, 0x39, 0x34, 0x35, 0x38, 0x30, // 2039959430694580
	0x30, 0x37, 0x38, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, // 078125, 0.812985
	0x30, 0x30, 0x32, 0x39, 0x39, 0x34, 0x35, 0x33, 0x37, 0x33, 0x35, 0x33, 0x35, 0x31, 0x35, 0x36, // 0029945373535156
	0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x38, 0x39, 0x39, 0x35, // 25, 0.0108108995
	0x34, 0x38, 0x32, 0x33, 0x32, 0x35, 0x35, 0x35, 0x33, 0x38, 0x39, 0x34, 0x30, 0x34, 0x32, 0x39, // 4823255538940429
	0x36, 0x38, 0x37, 0x35, 0x29, 0x29, 0x2c, 0x20, 0x31, 0x30, 0x30, 0x30, 0x2e, 0x30, 0x29, 0x3b, // 6875)), 1000.0);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, 0x38, // .            _88
	0x33, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x38, 0x37, 0x38, 0x20, // 3 = float4(_878 
	0x2a, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x37, 0x37, 0x33, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, // * (((_773 * 0.25
	0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x37, 0x37, 0x33, // ) + 1.0) / (_773
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, //  + 1.0)), 1.0);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, //   else.        {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // .            flo
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x38, 0x38, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // at4 _884;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, //       if (_mtl_u
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, // .staticColor_Alp
	0x68, 0x61, 0x2e, 0x77, 0x20, 0x3d, 0x3d, 0x20, 0x32, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, // ha.w == 2.0).   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x20, 0x5f, 0x37, 0x38, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x69, //  _787 = fast::mi
	0x6e, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x38, 0x37, 0x38, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // n(dot(_878, floa
	0x74, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x33, 0x39, 0x39, 0x35, 0x39, 0x34, // t3(0.17620399594
	0x33, 0x30, 0x36, 0x39, 0x34, 0x35, 0x38, 0x30, 0x30, 0x37, 0x38, 0x31, 0x32, 0x35, 0x2c, 0x20, // 30694580078125, 
	0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x30, 0x30, 0x32, 0x39, 0x39, 0x34, 0x35, 0x33, // 0.81298500299453
	0x37, 0x33, 0x35, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x31, // 7353515625, 0.01
	0x30, 0x38, 0x31, 0x30, 0x38, 0x39, 0x39, 0x35, 0x34, 0x38, 0x32, 0x33, 0x32, 0x35, 0x35, 0x35, // 0810899548232555
	0x33, 0x38, 0x39, 0x34, 0x30, 0x34, 0x32, 0x39, 0x36, 0x38, 0x37, 0x35, 0x29, 0x29, 0x2c, 0x20, // 389404296875)), 
	0x31, 0x30, 0x30, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1000.0);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, //          float3 
	0x5f, 0x37, 0x39, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x38, 0x37, 0x38, 0x20, 0x2a, 0x20, 0x28, 0x28, // _795 = _878 * ((
	0x28, 0x5f, 0x37, 0x38, 0x37, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x29, 0x20, 0x2b, 0x20, // (_787 * 0.25) + 
	0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x37, 0x38, 0x37, 0x20, 0x2b, 0x20, 0x31, // 1.0) / (_787 + 1
	0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .0));.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x37, 0x39, 0x38, //       float _798
	0x20, 0x3d, 0x20, 0x5f, 0x37, 0x39, 0x35, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //  = _795.x;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x20, 0x5f, 0x38, 0x37, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _879;.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x37, 0x39, 0x38, 0x20, //        if (_798 
	0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x30, 0x30, 0x30, 0x39, // <= 0.00313080009
	0x30, 0x37, 0x33, 0x30, 0x31, 0x39, 0x30, 0x32, 0x37, 0x37, 0x30, 0x39, 0x39, 0x36, 0x30, 0x39, // 0730190277099609
	0x33, 0x37, 0x35, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 375).           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, 0x37, 0x39, 0x20, //            _879 
	0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x37, 0x36, 0x32, 0x39, // = 12.92000007629
	0x33, 0x39, 0x34, 0x35, 0x33, 0x31, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x37, 0x39, 0x38, 0x3b, // 39453125 * _798;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  }.             
	0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    else.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, //               _8
	0x37, 0x39, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x35, 0x34, 0x39, 0x39, 0x39, 0x39, 0x34, // 79 = (1.05499994
	0x37, 0x35, 0x34, 0x37, 0x39, 0x31, 0x32, 0x35, 0x39, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x20, // 754791259765625 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x5f, 0x37, 0x39, 0x38, 0x2c, 0x20, 0x30, 0x2e, 0x34, // * powr(_798, 0.4
	0x31, 0x36, 0x36, 0x36, 0x36, 0x36, 0x35, 0x36, 0x37, 0x33, 0x32, 0x35, 0x35, 0x39, 0x32, 0x30, // 1666665673255920
	0x34, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, // 41015625)) - 0.0
	0x35, 0x34, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x30, 0x31, 0x39, 0x37, 0x36, 0x37, 0x37, // 5499999970197677
	0x36, 0x31, 0x32, 0x33, 0x30, 0x34, 0x36, 0x38, 0x37, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 6123046875;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, //             }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x38, 0x30, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x37, 0x39, 0x35, 0x2e, // oat _800 = _795.
	0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // y;.             
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x38, 0x38, 0x30, 0x3b, 0x0a, 0x20, //    float _880;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, //                i
	0x66, 0x20, 0x28, 0x5f, 0x38, 0x30, 0x30, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, // f (_800 <= 0.003
	0x31, 0x33, 0x30, 0x38, 0x30, 0x30, 0x30, 0x39, 0x30, 0x37, 0x33, 0x30, 0x31, 0x39, 0x30, 0x32, // 1308000907301902
	0x37, 0x37, 0x30, 0x39, 0x39, 0x36, 0x30, 0x39, 0x33, 0x37, 0x35, 0x29, 0x0a, 0x20, 0x20, 0x20, // 77099609375).   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, //              {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x5f, 0x38, 0x38, 0x30, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x30, //    _880 = 12.920
	0x30, 0x30, 0x30, 0x30, 0x37, 0x36, 0x32, 0x39, 0x33, 0x39, 0x34, 0x35, 0x33, 0x31, 0x32, 0x35, // 0000762939453125
	0x20, 0x2a, 0x20, 0x5f, 0x38, 0x30, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  * _800;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          }.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, //            else.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, 0x38, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, //       _880 = (1.
	0x30, 0x35, 0x34, 0x39, 0x39, 0x39, 0x39, 0x34, 0x37, 0x35, 0x34, 0x37, 0x39, 0x31, 0x32, 0x35, // 0549999475479125
	0x39, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x5f, // 9765625 * powr(_
	0x38, 0x30, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x31, 0x36, 0x36, 0x36, 0x36, 0x36, 0x35, 0x36, // 800, 0.416666656
	0x37, 0x33, 0x32, 0x35, 0x35, 0x39, 0x32, 0x30, 0x34, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, // 7325592041015625
	0x29, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x34, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, // )) - 0.054999999
	0x37, 0x30, 0x31, 0x39, 0x37, 0x36, 0x37, 0x37, 0x36, 0x31, 0x32, 0x33, 0x30, 0x34, 0x36, 0x38, // 7019767761230468
	0x37, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 75;.            
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     }.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x38, 0x30, 0x32, //       float _802
	0x20, 0x3d, 0x20, 0x5f, 0x37, 0x39, 0x35, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //  = _795.z;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x20, 0x5f, 0x38, 0x38, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _881;.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x38, 0x30, 0x32, 0x20, //        if (_802 
	0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x30, 0x30, 0x30, 0x39, // <= 0.00313080009
	0x30, 0x37, 0x33, 0x30, 0x31, 0x39, 0x30, 0x32, 0x37, 0x37, 0x30, 0x39, 0x39, 0x36, 0x30, 0x39, // 0730190277099609
	0x33, 0x37, 0x35, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 375).           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, 0x38, 0x31, 0x20, //            _881 
	0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x37, 0x36, 0x32, 0x39, // = 12.92000007629
	0x33, 0x39, 0x34, 0x35, 0x33, 0x31, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x38, 0x30, 0x32, 0x3b, // 39453125 * _802;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  }.             
	0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    else.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, //               _8
	0x38, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x35, 0x34, 0x39, 0x39, 0x39, 0x39, 0x34, // 81 = (1.05499994
	0x37, 0x35, 0x34, 0x37, 0x39, 0x31, 0x32, 0x35, 0x39, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x20, // 754791259765625 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x5f, 0x38, 0x30, 0x32, 0x2c, 0x20, 0x30, 0x2e, 0x34, // * powr(_802, 0.4
	0x31, 0x36, 0x36, 0x36, 0x36, 0x36, 0x35, 0x36, 0x37, 0x33, 0x32, 0x35, 0x35, 0x39, 0x32, 0x30, // 1666665673255920
	0x34, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, // 41015625)) - 0.0
	0x35, 0x34, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x30, 0x31, 0x39, 0x37, 0x36, 0x37, 0x37, // 5499999970197677
	0x36, 0x31, 0x32, 0x33, 0x30, 0x34, 0x36, 0x38, 0x37, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 6123046875;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, //             }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, //               _8
	0x38, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x38, 0x37, 0x39, // 84 = float4(_879
	0x2c, 0x20, 0x5f, 0x38, 0x38, 0x30, 0x2c, 0x20, 0x5f, 0x38, 0x38, 0x31, 0x2c, 0x20, 0x31, 0x2e, // , _880, _881, 1.
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0);.            
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, // }.            el
	0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, // se.            {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x5f, 0x38, 0x38, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x38, 0x38, 0x38, 0x3b, 0x0a, 0x20, 0x20, //  _884 = _888;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, //           }.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, 0x38, 0x33, 0x20, 0x3d, 0x20, 0x5f, //         _883 = _
	0x38, 0x38, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, // 884;.        }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, 0x38, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x38, //        _882 = _8
	0x38, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, // 83;.    }.    ou
	0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, // t.bgfx_FragData0
	0x20, 0x3d, 0x20, 0x5f, 0x38, 0x38, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, //  = _882;.    ret
	0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, 0xb0, 0x00, // urn out;.}......
};
static const uint8_t fs_display_dmd_clip_essl[8020] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4e, 0xbd, 0x0b, 0x9f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x1f, // FSH.N.........A.
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // s.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, // arying in.precis
	0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3b, // ion highp float;
	0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // .precision highp
	0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, //  int;.#define sh
	0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adow2D(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //  _coord) texture
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // (_sampler, _coor
	0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, // d).#define shado
	0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // w2DProj(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // eProj(_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x6f, 0x75, 0x74, 0x20, 0x6d, 0x65, 0x64, 0x69, // _coord).out medi
	0x75, 0x6d, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, // ump vec4 bgfx_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // agColor;.varying
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, //  float v_clipDis
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, // tance;.varying v
	0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, // ec2 v_texcoord0;
	0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, // .varying vec2 v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // texcoord1;.vec3 
	0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, // instMul(vec3 _ve
	0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, // c, mat3 _mtx) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, // return ( (_vec) 
	0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, // * (_mtx) ); }.ve
	0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, // c3 instMul(mat3 
	0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, // _mtx, vec3 _vec)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, //  { return ( (_mt
	0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, // x) * (_vec) ); }
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, // .vec4 instMul(ve
	0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, // c4 _vec, mat4 _m
	0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, // tx) { return ( (
	0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, // _vec) * (_mtx) )
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, // ; }.vec4 instMul
	0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // (mat4 _mtx, vec4
	0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _vec) { return 
	0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, // ( (_mtx) * (_vec
	0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, // ) ); }.float rcp
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // (float _a) { ret
	0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, // urn 1.0/_a; }.ve
	0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, // c2 rcp(vec2 _a) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, // { return vec2(1.
	0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, // 0)/_a; }.vec3 rc
	0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // p(vec3 _a) { ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, // urn vec3(1.0)/_a
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, // ; }.vec4 rcp(vec
	0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // 4 _a) { return v
	0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // ec4(1.0)/_a; }.v
	0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, // ec2 vec2_splat(f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // loat _x) { retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, // n vec2(_x, _x); 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, // }.vec3 vec3_spla
	0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // t(float _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // turn vec3(_x, _x
	0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, // , _x); }.vec4 ve
	0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // c4_splat(float _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, // x) { return vec4
	0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, // (_x, _x, _x, _x)
	0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, // ; }.uvec2 uvec2_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // splat(uint _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, //  return uvec2(_x
	0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, // , _x); }.uvec3 u
	0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, // vec3_splat(uint 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, // _x) { return uve
	0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, // c3(_x, _x, _x); 
	0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, // }.uvec4 uvec4_sp
	0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // lat(uint _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, // eturn uvec4(_x, 
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, // _x, _x, _x); }.m
	0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, // at4 mtxFromRows(
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, // vec4 _0, vec4 _1
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // , vec4 _2, vec4 
	0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, // _3).{.return tra
	0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, // nspose(mat4(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, // _1, _2, _3) );.}
	0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, // .mat4 mtxFromCol
	0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // s(vec4 _0, vec4 
	0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, // _1, vec4 _2, vec
	0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, // 4 _3).{.return m
	0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, // at4(_0, _1, _2, 
	0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, // _3);.}.mat3 mtxF
	0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, // romRows(vec3 _0,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, //  vec3 _1, vec3 _
	0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, // 2).{.return tran
	0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, // spose(mat3(_0, _
	0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, // 1, _2) );.}.mat3
	0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, //  mtxFromCols(vec
	0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, // 3 _0, vec3 _1, v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec3 _2).{.return
	0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, //  mat3(_0, _1, _2
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, // );.}.uniform vec
	0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, // 4 u_viewRect;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // iform vec4 u_vie
	0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // wTexel;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // mat4 u_view;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, // form mat4 u_invV
	0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, // iew;.uniform mat
	0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // 4 u_proj;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, // m mat4 u_invProj
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // _viewProj;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, // rm mat4 u_invVie
	0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // wProj;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, // at4 u_model[32];
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // modelView;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, // rm mat4 u_modelV
	0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // iewProj;.uniform
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, //  vec4 u_alphaRef
	0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x66, 0x6c, // 4;.float sqr( fl
	0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // oat v).{.return 
	0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, 0x28, // v*v;.}.vec2 sqr(
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  vec2 v).{.retur
	0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x71, // n v*v;.}.vec3 sq
	0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // r( vec3 v).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // urn v*v;.}.vec3 
	0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, // mul_w1( vec3 v, 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // mat4 m).{.return
	0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, //  v.x*m[0].xyz + 
	0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, // (v.y*m[1].xyz + 
	0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, // (v.z*m[2].xyz + 
	0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // m[3].xyz));.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, // oat acos_approx_
	0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, // divPI( float v).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, // {.float x = abs(
	0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, // v);.if(1. - x <=
	0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, //  0.0000610351562
	0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, // 5).return (v >= 
	0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x66, // 0.) ? 0. : 1.;.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, // loat res = ((-0.
	0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, // 155972/3.1415926
	0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, // 5358979323846264
	0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, // 33832795) * x + 
	0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // (1.56467/3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, // 6433832795) ) * 
	0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, // sqrt(1. - x);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // turn (v >= 0.) ?
	0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, //  res : 1. - res;
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, // .}.float atan2_a
	0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, // pprox_div2PI( fl
	0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, // oat y, float x).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, // {.float abs_y = 
	0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, // abs(y);.float ab
	0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, // s_x = abs(x);.if
	0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, // (abs_x <= 0.0000
	0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, // 6103515625 && ab
	0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, // s_y <= 0.0000610
	0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 3515625).return 
	0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, // 0.;.float r = (a
	0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, // bs_x - abs_y) / 
	0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, // (abs_x + abs_y);
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, // .float angle = (
	0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, // (x < 0.) ? (3./8
	0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, // .) : (1./8.)).+ 
	0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, // (0.211868 /(2.*3
	0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, // .141592653589793
	0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, // 2384626433832795
	0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, // ) * r * r - 0.98
	0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, // 7305 /(2.*3.1415
	0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, // 9265358979323846
	0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, // 26433832795)) * 
	0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, // ((x < 0.) ? -r :
	0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, //  r);.return (y <
	0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, //  0.) ? -angle : 
	0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, // angle;.}.float a
	0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, // sin_approx_divPI
	0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // ( float v).{.flo
	0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, // at x = abs(v);.i
	0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, // f(1. - x <= 0.00
	0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, // 006103515625).re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // turn (v >= 0.) ?
	0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, //  0.5 : -0.5;.flo
	0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, // at res = ((-0.15
	0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, // 5972/3.141592653
	0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, // 5897932384626433
	0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, // 832795) * x + (1
	0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, // .56467/3.1415926
	0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, // 5358979323846264
	0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, // 33832795) ) * sq
	0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // rt(1. - x);.retu
	0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, // rn (v >= 0.) ? 0
	0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, // .5 - res : -0.5 
	0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, // + res;.}.vec2 ra
	0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, // y_to_equirectang
	0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, // ular_uv( vec3 ra
	0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, // y).{.return vec2
	0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, // (.0.5 + atan2_ap
	0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, // prox_div2PI(ray.
	0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, // y, ray.x),.acos_
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, // approx_divPI(ray
	0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, // .z));.}.float In
	0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, // vsRGB( float col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // or).{.if (color 
	0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, // <= 0.04045).retu
	0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, // rn color * (1.0/
	0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, // 12.92);.else.ret
	0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, // urn pow(color * 
	0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, // (1.0/1.055) + (0
	0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, // .055/1.055), 2.4
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, // );.}.float InvRe
	0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // c709( float colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, // r).{.if (color <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // = 0.081).return 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, // color * (1.0/4.5
	0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, // );.else.return p
	0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, // ow(color * (1.0/
	0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, // 1.099) + (0.099/
	0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, // 1.099), 1.0/0.45
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, // );.}.float InvGa
	0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // mma( float color
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, // ).{.return InvsR
	0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // GB(color);.}.vec
	0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, // 3 InvGamma( vec3
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  color).{.return
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, //  vec3(InvGamma(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, // olor.x),InvGamma
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // (color.y),InvGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // ma(color.z));.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, // vec3 InvToneMap(
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, //  vec3 color).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, // loat inv_2bh = 0
	0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, // .5/0.25;.float b
	0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, // h = 4.0*0.25 - 2
	0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .0;.return (colo
	0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x63, // r - 1.0 + sqrt(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, // olor*(color + bh
	0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, // ) + 1.0))*inv_2b
	0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, // h;.}.float sRGB(
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, //  float f).{.floa
	0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, // t s;.if (f <= 0.
	0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, // 0031308).s = 12.
	0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, // 92 * f;.else.s =
	0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, //  1.055 * pow(f, 
	0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, // 1.0/2.4) - 0.055
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // ;.return s;.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, // oat Rec709( floa
	0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, // t f).{.float s;.
	0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, // if (f <= 0.018).
	0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, // s = 4.5 * f;.els
	0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, // e.s = 1.099 * po
	0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, // w(f, 0.45) - 0.0
	0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, // 99;.return s;.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, // float FBGamma( f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // loat color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // turn sRGB(color)
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, // ;.}.vec2 FBGamma
	0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // ( vec2 color).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x46, 0x42, 0x47, 0x61, // return vec2(FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, // mma(color.x),FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, // amma(color.y));.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, // }.vec3 FBGamma( 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // vec3 color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // turn vec3(FBGamm
	0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, // a(color.x),FBGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, // ma(color.y),FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, // mma(color.z));.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x32, 0x32, 0x28, // .vec3 FBGamma22(
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, //  vec3 color).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x70, 0x6f, 0x77, 0x28, 0x63, // eturn vec3(pow(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, // olor.x, 1.0/2.2)
	0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x2c, 0x20, 0x31, 0x2e, // ,pow(color.y, 1.
	0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // 0/2.2),pow(color
	0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x29, 0x3b, 0x0a, 0x7d, // .z, 1.0/2.2));.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, // .float FBToneMap
	0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // ( float l).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, // urn l * ((l*0.25
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, //  + 1.0) / (l + 1
	0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, // .0));.}.vec2 FBT
	0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, // oneMap( vec2 col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, // or).{.float l = 
	0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, // dot(color,vec2(0
	0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, // .176204+0.010810
	0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, // 9*0.5,0.812985+0
	0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, // .0108109*0.5));.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, // return color * (
	0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, // (l*0.25 + 1.0) /
	0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, //  (l + 1.0));.}.v
	0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, // ec3 FBToneMap( v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // ec3 color).{.flo
	0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // at l = dot(color
	0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, // ,vec3(0.176204,0
	0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, // .812985,0.010810
	0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // 9));.return colo
	0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, // r * ((l*0.25 + 1
	0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, // .0) / (l + 1.0))
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x76, // ;.}.vec4 Additiv
	0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, // e( vec4 cBase, v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ec4 cBlend, floa
	0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // t percent).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, // urn cBase + cBle
	0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // nd*percent;.}.ve
	0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, // c3 Screen ( vec3
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, //  cBase, vec3 cBl
	0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, // end).{.return 1.
	0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // 0 - (1.0 - cBase
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // ) * (1.0 - cBlen
	0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, // d);.}.vec4 Scree
	0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, // n ( vec4 cBase, 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // vec4 cBlend).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, // eturn 1.0 - (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, //  - cBase) * (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, //  - cBlend);.}.ve
	0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, // c3 ScreenHDR ( v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // ec3 cBase, vec3 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // cBlend).{.return
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, //  max(1.0 - (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // - cBase) * (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // - cBlend), vec3(
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // 0.,0.,0.));.}.ve
	0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, // c4 ScreenHDR ( v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // ec4 cBase, vec4 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // cBlend).{.return
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, //  max(1.0 - (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // - cBase) * (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // - cBlend), vec4(
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, // 0.,0.,0.,0.));.}
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, // .vec4 Multiply (
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, //  vec4 cBase, vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 4 cBlend, float 
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // percent).{.retur
	0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // n cBase * cBlend
	0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // *percent;.}.vec4
	0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, //  Overlay ( vec4 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, // cBase, vec4 cBle
	0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, // nd).{.vec4 cNew 
	0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, // = step(0.5, cBas
	0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, // e);.cNew = mix(c
	0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, // Base*cBlend*2.0,
	0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, //  1.0-2.0*(1.0-cB
	0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // ase)*(1.0-cBlend
	0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ), cNew);.return
	0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, //  cNew;.}.vec4 Ov
	0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // erlayHDR ( vec4 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, // cBase, vec4 cBle
	0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, // nd).{.vec4 cNew 
	0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, // = step(0.5, cBas
	0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, // e);.cNew = max(m
	0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, // ix(cBase*cBlend*
	0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, // 2.0, 1.0-2.0*(1.
	0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, // 0-cBase)*(1.0-cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, // lend), cNew), ve
	0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, // c4(0.,0.,0.,0.))
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, // ;.return cNew;.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, // .vec3 cos_hemisp
	0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, // here_sample( vec
	0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x68, 0x69, // 2 t).{.float phi
	0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, //  = t.y * (2.0*3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, // ;.float cosTheta
	0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, //  = sqrt(1.0 - t.
	0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, // x);.float sinThe
	0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, // ta = sqrt(t.x);.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x7b, 0x73, 0x70, // float sp,cp;.{sp
	0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x63, 0x70, 0x3d, 0x63, 0x6f, 0x73, // =sin(phi);cp=cos
	0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // (phi);};.return 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, // vec3(cp * sinThe
	0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, // ta, cosTheta, sp
	0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, //  * sinTheta);.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, // vec3 rotate_to_v
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, // ector_upper( vec
	0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // 3 vec, vec3 norm
	0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // al).{.if(normal.
	0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, // y > -0.99999).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, // float h = 1.0/(1
	0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, // .0+normal.y);.fl
	0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // oat hz = h*norma
	0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, // l.z;.float hzx =
	0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, //  hz*normal.x;.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, // turn vec3(.vec.x
	0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, //  * (normal.y+hz*
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, // normal.z) + vec.
	0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, // y * normal.x - v
	0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, // ec.z * hzx,.vec.
	0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, // y * normal.y - v
	0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, // ec.x * normal.x 
	0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // - vec.z * normal
	0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // .z,.vec.y * norm
	0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, // al.z - vec.x * h
	0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, // zx + vec.z * (no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // rmal.y+h*normal.
	0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // x*normal.x));.}.
	0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, // else return -vec
	0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, // ;.}.uniform samp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, // ler2D displayTex
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ;.uniform sample
	0x72, 0x32, 0x44, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, // r2D displayGlass
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, // ;.uniform vec4 v
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x3b, // Color_Intensity;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x73, 0x74, // .uniform vec4 st
	0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x3b, // aticColor_Alpha;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x67, 0x6c, // .uniform vec4 gl
	0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, // assAmbient_Rough
	0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // ness;.uniform ve
	0x63, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x3b, 0x0a, 0x76, // c4 w_h_height;.v
	0x65, 0x63, 0x33, 0x20, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x6e, 0x65, // ec3 ReinhardTone
	0x4d, 0x61, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // Map(vec3 color).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, // {.float l = min(
	0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // dot(color, vec3(
	0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x20, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, // 0.176204, 0.8129
	0x38, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x2c, // 85, 0.0108109)),
	0x20, 0x31, 0x30, 0x30, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  1000.0);.return
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x20, 0x2a, 0x20, 0x30, //  color * ((l * 0
	0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, // .25 + 1.0) / (l 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // + 1.0));.}.unifo
	0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, // rm vec4 vRes_Alp
	0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // ha_time;.uniform
	0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x64, 0x6d, 0x64, 0x47, 0x6c, //  sampler2D dmdGl
	0x6f, 0x77, 0x54, 0x65, 0x78, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x75, 0x64, 0x52, // owTex;.float udR
	0x6f, 0x75, 0x6e, 0x64, 0x42, 0x6f, 0x78, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x70, 0x2c, 0x20, // oundBox(vec2 p, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, // float b, float r
	0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x71, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, // ).{.vec2 q = abs
	0x28, 0x70, 0x29, 0x20, 0x2d, 0x20, 0x62, 0x20, 0x2b, 0x20, 0x72, 0x3b, 0x0a, 0x72, 0x65, 0x74, // (p) - b + r;.ret
	0x75, 0x72, 0x6e, 0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x28, 0x6d, 0x61, 0x78, 0x28, 0x71, // urn length(max(q
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x6d, 0x69, 0x6e, 0x28, 0x6d, 0x61, // , 0.0)) + min(ma
	0x78, 0x28, 0x71, 0x2e, 0x78, 0x2c, 0x20, 0x71, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, // x(q.x, q.y), 0.0
	0x29, 0x20, 0x2d, 0x20, 0x72, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x61, // ) - r;.}.vec3 sa
	0x6d, 0x70, 0x6c, 0x65, 0x44, 0x6d, 0x64, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x61, 0x6d, // mpleDmd(vec3 sam
	0x70, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, // p).{.if ((w_h_he
	0x69, 0x67, 0x68, 0x74, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, // ight.w != 0.0)).
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x2e, 0x72, 0x67, 0x62, 0x20, // return samp.rgb 
	0x2a, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, // * (vColor_Intens
	0x69, 0x74, 0x79, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, // ity.rgb);.else.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x2e, 0x72, 0x20, 0x2a, 0x20, 0x28, // eturn samp.r * (
	0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, // vColor_Intensity
	0x2e, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, // .rgb);.}.void ma
	0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x76, 0x5f, 0x63, 0x6c, 0x69, // in().{.if (v_cli
	0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, // pDistance < 0.0)
	0x0a, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, // .discard;.vec3 l
	0x75, 0x6d, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // um = vec3_splat(
	0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x6e, 0x65, 0x61, 0x72, 0x65, // 0.0);.vec2 neare
	0x73, 0x74, 0x20, 0x3d, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x76, 0x5f, 0x74, 0x65, // st = (floor(v_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x52, 0x65, 0x73, 0x5f, // xcoord1 * (vRes_
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x78, 0x79, 0x29, 0x29, 0x20, // Alpha_time.xy)) 
	0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x35, // + vec2_splat(0.5
	0x29, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, // )) / (vRes_Alpha
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x78, 0x79, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, // _time.xy);.if ((
	0x6e, 0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x78, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, // nearest.x >= 0.0
	0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x6e, 0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x79, 0x20, // ) && (nearest.y 
	0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x6e, 0x65, 0x61, 0x72, // >= 0.0) && (near
	0x65, 0x73, 0x74, 0x2e, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, // est.x <= 1.0) &&
	0x20, 0x28, 0x6e, 0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x31, //  (nearest.y <= 1
	0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x70, 0x6f, 0x73, 0x20, // .0)).{.vec2 pos 
	0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, // = fract(v_texcoo
	0x72, 0x64, 0x31, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, // rd1 * (vRes_Alph
	0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x78, 0x79, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x76, 0x65, // a_time.xy)) - ve
	0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x66, // c2_splat(0.5);.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x64, 0x66, 0x20, 0x3d, 0x20, 0x75, 0x64, 0x52, 0x6f, 0x75, // loat sdf = udRou
	0x6e, 0x64, 0x42, 0x6f, 0x78, 0x28, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x28, 0x76, 0x52, 0x65, 0x73, // ndBox(pos, (vRes
	0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x7a, 0x29, 0x2c, 0x20, // _Alpha_time.z), 
	0x28, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, // (vRes_Alpha_time
	0x2e, 0x77, 0x29, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x6e, 0x65, // .w));.float inne
	0x72, 0x20, 0x3d, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, // r = smoothstep(0
	0x2e, 0x30, 0x2c, 0x20, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, // .0, (w_h_height.
	0x7a, 0x29, 0x2c, 0x20, 0x73, 0x64, 0x66, 0x29, 0x3b, 0x0a, 0x6c, 0x75, 0x6d, 0x20, 0x3d, 0x20, // z), sdf);.lum = 
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, // inner * ((static
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x29, // Color_Alpha.rgb)
	0x20, 0x2b, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x6d, 0x64, 0x28, 0x74, 0x65, 0x78, //  + sampleDmd(tex
	0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, // tureLod(displayT
	0x65, 0x78, 0x2c, 0x20, 0x6e, 0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x2c, 0x20, 0x30, 0x2e, 0x30, // ex, nearest, 0.0
	0x29, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // ).rgb));.}.vec3 
	0x67, 0x6c, 0x6f, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x6d, 0x64, // glow = sampleDmd
	0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x64, 0x6d, 0x64, 0x47, // (textureLod(dmdG
	0x6c, 0x6f, 0x77, 0x54, 0x65, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x32, // lowTex, vec2(0.2
	0x35, 0x2c, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2a, // 5, 0.25) + 0.5 *
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, //  vec2(v_texcoord
	0x31, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, // 1.x, 1.0 - v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, // coord1.y), 0.0).
	0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x6c, 0x75, 0x6d, 0x20, 0x2b, 0x3d, 0x20, 0x28, 0x76, 0x43, // rgb);.lum += (vC
	0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x77, // olor_Intensity.w
	0x29, 0x20, 0x2a, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x77, // ) * glow;.if ((w
	0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, // _h_height.x != 0
	0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x67, 0x6c, 0x61, 0x73, // .0)).{.vec4 glas
	0x73, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x64, 0x69, 0x73, 0x70, // s = texture(disp
	0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // layGlass, v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x6c, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x6d, 0x69, // oord0);.lum = mi
	0x78, 0x28, 0x6c, 0x75, 0x6d, 0x2c, 0x20, 0x28, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, // x(lum, ((glassAm
	0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x2e, // bient_Roughness.
	0x72, 0x67, 0x62, 0x29, 0x20, 0x2b, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x29, 0x2c, 0x20, 0x28, 0x67, // rgb) + glow), (g
	0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, // lassAmbient_Roug
	0x68, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, // hness.w) * glass
	0x2e, 0x61, 0x29, 0x20, 0x2a, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x72, 0x67, 0x62, 0x3b, // .a) * glass.rgb;
	0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, // .}.if ((staticCo
	0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, 0x29, 0x20, 0x3d, 0x3d, 0x20, // lor_Alpha.w) == 
	0x30, 0x2e, 0x30, 0x29, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, // 0.0).bgfx_FragCo
	0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x6c, 0x75, 0x6d, 0x2c, 0x20, // lor = vec4(lum, 
	0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, // 1.0);.else if ((
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, // staticColor_Alph
	0x61, 0x2e, 0x77, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x62, 0x67, 0x66, // a.w) == 1.0).bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, // x_FragColor = ve
	0x63, 0x34, 0x28, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x6e, 0x65, 0x4d, // c4(ReinhardToneM
	0x61, 0x70, 0x28, 0x6c, 0x75, 0x6d, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x65, // ap(lum), 1.0);.e
	0x6c, 0x73, 0x65, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, // lse if ((staticC
	0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, 0x29, 0x20, 0x3d, 0x3d, // olor_Alpha.w) ==
	0x20, 0x32, 0x2e, 0x30, 0x29, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, //  2.0).bgfx_FragC
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x46, 0x42, 0x47, 0x61, // olor = vec4(FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x6e, 0x65, // mma(ReinhardTone
	0x4d, 0x61, 0x70, 0x28, 0x6c, 0x75, 0x6d, 0x29, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, // Map(lum)), 1.0);
	0x0a, 0x7d, 0x0a, 0x00,                                                                         // .}..
};
static const uint8_t fs_display_dmd_clip_glsl[8386] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4e, 0xbd, 0x0b, 0x9f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaf, 0x20, // FSH.N.......... 
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x6f, // ..#version 440.o
	0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, // ut vec4 bgfx_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // gColor;.#define 
	0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x62, 0x67, 0x66, // gl_FragColor bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x0a, 0x23, 0x64, 0x65, 0x66, // x_FragColor.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x20, 0x20, // ine texture2D   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, //        texture.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // Lod       textur
	0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, // eLod.#define tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ture2DGrad      
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, // textureGrad.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, // ine texture2DPro
	0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, // jLod   texturePr
	0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // ojLod.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, // xture2DProjGrad 
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, //  textureProjGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // CubeLod     text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, // ureLod.#define t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, // extureCubeGrad  
	0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, //   textureGrad.#d
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, // efine texture3D 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //          texture
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, 0x65, 0x78, 0x74, // 2DLodOffset text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, // ureLodOffset.#de
	0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, // fine attribute i
	0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // n.#define varyin
	0x67, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, // g in.#define bgf
	0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // xShadow2D(_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, // er, _coord)     
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // vec4_splat(textu
	0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // re(_sampler, _co
	0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, // ord) ).#define b
	0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, // gfxShadow2DProj(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, // ) vec4_splat(tex
	0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // tureProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x76, 0x61, 0x72, // r, _coord) ).var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x63, 0x6c, 0x69, // ying float v_cli
	0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, // pDistance;.varyi
	0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, // ng vec2 v_texcoo
	0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, // rd0;.varying vec
	0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x3b, 0x0a, 0x76, // 2 v_texcoord1;.v
	0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, // ec3 instMul(vec3
	0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, //  _vec, mat3 _mtx
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, // ) { return ( (_v
	0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, // ec) * (_mtx) ); 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, // }.vec3 instMul(m
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // at3 _mtx, vec3 _
	0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, // vec) { return ( 
	0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, // (_mtx) * (_vec) 
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, // ); }.vec4 instMu
	0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, // l(vec4 _vec, mat
	0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 4 _mtx) { return
	0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, //  ( (_vec) * (_mt
	0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, // x) ); }.vec4 ins
	0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, // tMul(mat4 _mtx, 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // vec4 _vec) { ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, // urn ( (_mtx) * (
	0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _vec) ); }.float
	0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, //  rcp(float _a) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, //  return 1.0/_a; 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, // }.vec2 rcp(vec2 
	0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _a) { return vec
	0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, // 2(1.0)/_a; }.vec
	0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, // 3 rcp(vec3 _a) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, //  return vec3(1.0
	0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, // )/_a; }.vec4 rcp
	0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // (vec4 _a) { retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, // rn vec4(1.0)/_a;
	0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, //  }.vec2 vec2_spl
	0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // at(float _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // eturn vec2(_x, _
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, // x); }.vec3 vec3_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // splat(float _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, // { return vec3(_x
	0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, // , _x, _x); }.vec
	0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, // 4 vec4_splat(flo
	0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // at _x) { return 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // vec4(_x, _x, _x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, //  _x); }.uvec2 uv
	0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, // ec2_splat(uint _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, // x) { return uvec
	0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, // 2(_x, _x); }.uve
	0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, // c3 uvec3_splat(u
	0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // int _x) { return
	0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, //  uvec3(_x, _x, _
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, // x); }.uvec4 uvec
	0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, // 4_splat(uint _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, //  { return uvec4(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // _x, _x, _x, _x);
	0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, //  }.mat4 mtxFromR
	0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, // ows(vec4 _0, vec
	0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, // 4 _1, vec4 _2, v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec4 _3).{.return
	0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, //  transpose(mat4(
	0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, // _0, _1, _2, _3) 
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, // );.}.mat4 mtxFro
	0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, // mCols(vec4 _0, v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, // ec4 _1, vec4 _2,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  vec4 _3).{.retu
	0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, // rn mat4(_0, _1, 
	0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, // _2, _3);.}.mat3 
	0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, // mtxFromRows(vec3
	0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, //  _0, vec3 _1, ve
	0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c3 _2).{.return 
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, // transpose(mat3(_
	0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // 0, _1, _2) );.}.
	0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, // mat3 mtxFromCols
	0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // (vec3 _0, vec3 _
	0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 1, vec3 _2).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, // turn mat3(_0, _1
	0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // , _2);.}.uniform
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, //  vec4 u_viewRect
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, // ;.uniform vec4 u
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // _viewTexel;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, // orm mat4 u_view;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // invView;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, //  mat4 u_proj;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, // iform mat4 u_inv
	0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // Proj;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, // t4 u_viewProj;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, // niform mat4 u_in
	0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // vViewProj;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, // rm mat4 u_model[
	0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, // 32];.uniform mat
	0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, // 4 u_modelView;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, // niform mat4 u_mo
	0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // delViewProj;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, // form vec4 u_alph
	0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, // aRef4;.float sqr
	0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // ( float v).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // urn v*v;.}.vec2 
	0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // sqr( vec2 v).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // eturn v*v;.}.vec
	0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, // 3 sqr( vec3 v).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // .return v*v;.}.v
	0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, // ec3 mul_w1( vec3
	0x20, 0x76, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, //  v, mat4 m).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, // turn v.x*m[0].xy
	0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, // z + (v.y*m[1].xy
	0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, // z + (v.z*m[2].xy
	0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, // z + m[3].xyz));.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, // }.float acos_app
	0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // rox_divPI( float
	0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, //  v).{.float x = 
	0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, // abs(v);.if(1. - 
	0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, // x <= 0.000061035
	0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, // 15625).return (v
	0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, //  >= 0.) ? 0. : 1
	0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, // .;.float res = (
	0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, // (-0.155972/3.141
	0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, // 5926535897932384
	0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, // 626433832795) * 
	0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, // x + (1.56467/3.1
	0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, // 4159265358979323
	0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, // 84626433832795) 
	0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, // ) * sqrt(1. - x)
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, // ;.return (v >= 0
	0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, // .) ? res : 1. - 
	0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, // res;.}.float ata
	0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, // n2_approx_div2PI
	0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ( float y, float
	0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, //  x).{.float abs_
	0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // y = abs(y);.floa
	0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, // t abs_x = abs(x)
	0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, // ;.if(abs_x <= 0.
	0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, // 00006103515625 &
	0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, // & abs_y <= 0.000
	0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, // 06103515625).ret
	0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, // urn 0.;.float r 
	0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, // = (abs_x - abs_y
	0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, // ) / (abs_x + abs
	0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, // _y);.float angle
	0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, //  = ((x < 0.) ? (
	0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, // 3./8.) : (1./8.)
	0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, // ).+ (0.211868 /(
	0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, // 2.*3.14159265358
	0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, // 9793238462643383
	0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, // 2795) * r * r - 
	0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, // 0.987305 /(2.*3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, // ) * ((x < 0.) ? 
	0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // -r : r);.return 
	0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, // (y < 0.) ? -angl
	0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // e : angle;.}.flo
	0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, // at asin_approx_d
	0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, // ivPI( float v).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, // .float x = abs(v
	0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, // );.if(1. - x <= 
	0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, // 0.00006103515625
	0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, // ).return (v >= 0
	0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, // .) ? 0.5 : -0.5;
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, // .float res = ((-
	0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // 0.155972/3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, // 6433832795) * x 
	0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, // + (1.56467/3.141
	0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, // 5926535897932384
	0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, // 626433832795) ) 
	0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, // * sqrt(1. - x);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, // return (v >= 0.)
	0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, //  ? 0.5 - res : -
	0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // 0.5 + res;.}.vec
	0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, // 2 ray_to_equirec
	0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x20, 0x76, 0x65, 0x63, // tangular_uv( vec
	0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 3 ray).{.return 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, // vec2(.0.5 + atan
	0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, // 2_approx_div2PI(
	0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, // ray.y, ray.x),.a
	0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, // cos_approx_divPI
	0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // (ray.z));.}.floa
	0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // t InvsRGB( float
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, //  color).{.if (co
	0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, // lor <= 0.04045).
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, // return color * (
	0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, // 1.0/12.92);.else
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .return pow(colo
	0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, // r * (1.0/1.055) 
	0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, // + (0.055/1.055),
	0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, //  2.4);.}.float I
	0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // nvRec709( float 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, // color).{.if (col
	0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, // or <= 0.081).ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, // urn color * (1.0
	0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, // /4.5);.else.retu
	0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, // rn pow(color * (
	0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, // 1.0/1.099) + (0.
	0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, // 099/1.099), 1.0/
	0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, // 0.45);.}.float I
	0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, // nvGamma( float c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, // olor).{.return I
	0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, // nvsRGB(color);.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, // .vec3 InvGamma( 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // vec3 color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // turn vec3(InvGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, // ma(color.x),InvG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, // amma(color.y),In
	0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, // vGamma(color.z))
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, // ;.}.vec3 InvTone
	0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // Map( vec3 color)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, // .{.float inv_2bh
	0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, //  = 0.5/0.25;.flo
	0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, // at bh = 4.0*0.25
	0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, //  - 2.0;.return (
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, // color - 1.0 + sq
	0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // rt(color*(color 
	0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, // + bh) + 1.0))*in
	0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // v_2bh;.}.float s
	0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, // RGB( float f).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, // float s;.if (f <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, // = 0.0031308).s =
	0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, //  12.92 * f;.else
	0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, // .s = 1.055 * pow
	0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, // (f, 1.0/2.4) - 0
	0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, // .055;.return s;.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, // }.float Rec709( 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float f).{.float
	0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, //  s;.if (f <= 0.0
	0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, // 18).s = 4.5 * f;
	0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, // .else.s = 1.099 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, // * pow(f, 0.45) -
	0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, //  0.099;.return s
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // ;.}.float FBGamm
	0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // a( float color).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, // {.return sRGB(co
	0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, // lor);.}.vec2 FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // amma( vec2 color
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // ).{.return vec2(
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, // FBGamma(color.x)
	0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, // ,FBGamma(color.y
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, // ));.}.vec3 FBGam
	0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // ma( vec3 color).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, // {.return vec3(FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, // Gamma(color.x),F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, // BGamma(color.y),
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, // FBGamma(color.z)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // );.}.vec3 FBGamm
	0x61, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // a22( vec3 color)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x70, // .{.return vec3(p
	0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, // ow(color.x, 1.0/
	0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, // 2.2),pow(color.y
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, // , 1.0/2.2),pow(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, // olor.z, 1.0/2.2)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, // );.}.float FBTon
	0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, // eMap( float l).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, // .return l * ((l*
	0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, // 0.25 + 1.0) / (l
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, //  + 1.0));.}.vec2
	0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, //  FBToneMap( vec2
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //  color).{.float 
	0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, // l = dot(color,ve
	0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, // c2(0.176204+0.01
	0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, // 08109*0.5,0.8129
	0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, // 85+0.0108109*0.5
	0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // ));.return color
	0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, //  * ((l*0.25 + 1.
	0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, // 0) / (l + 1.0));
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, // .}.vec3 FBToneMa
	0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, // p( vec3 color).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, // .float l = dot(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, // olor,vec3(0.1762
	0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, // 04,0.812985,0.01
	0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 08109));.return 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, // color * ((l*0.25
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, //  + 1.0) / (l + 1
	0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, 0x64, // .0));.}.vec4 Add
	0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, // itive( vec4 cBas
	0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, // e, vec4 cBlend, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, // float percent).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, // .return cBase + 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, // cBlend*percent;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, // }.vec3 Screen ( 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // vec3 cBase, vec3
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  cBlend).{.retur
	0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, // n 1.0 - (1.0 - c
	0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, // Base) * (1.0 - c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, // Blend);.}.vec4 S
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, // creen ( vec4 cBa
	0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // se, vec4 cBlend)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // .{.return 1.0 - 
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, // (1.0 - cBase) * 
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, // (1.0 - cBlend);.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, // }.vec3 ScreenHDR
	0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, //  ( vec3 cBase, v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // ec3 cBlend).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, // turn max(1.0 - (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, // 1.0 - cBase) * (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, // 1.0 - cBlend), v
	0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, // ec3(0.,0.,0.));.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, // }.vec4 ScreenHDR
	0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, //  ( vec4 cBase, v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // ec4 cBlend).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, // turn max(1.0 - (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, // 1.0 - cBase) * (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, // 1.0 - cBlend), v
	0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, // ec4(0.,0.,0.,0.)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, // );.}.vec4 Multip
	0x6c, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // ly ( vec4 cBase,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, //  vec4 cBlend, fl
	0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // oat percent).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, // eturn cBase * cB
	0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, // lend*percent;.}.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x20, 0x76, // vec4 Overlay ( v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // ec4 cBase, vec4 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // cBlend).{.vec4 c
	0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, // New = step(0.5, 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, // cBase);.cNew = m
	0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, // ix(cBase*cBlend*
	0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, // 2.0, 1.0-2.0*(1.
	0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, // 0-cBase)*(1.0-cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, // lend), cNew);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // turn cNew;.}.vec
	0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, // 4 OverlayHDR ( v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // ec4 cBase, vec4 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // cBlend).{.vec4 c
	0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, // New = step(0.5, 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, // cBase);.cNew = m
	0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, // ax(mix(cBase*cBl
	0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, // end*2.0, 1.0-2.0
	0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, // *(1.0-cBase)*(1.
	0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, // 0-cBlend), cNew)
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, // , vec4(0.,0.,0.,
	0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, // 0.));.return cNe
	0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, // w;.}.vec3 cos_he
	0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // misphere_sample(
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  vec2 t).{.float
	0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, //  phi = t.y * (2.
	0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, // 0*3.141592653589
	0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, // 7932384626433832
	0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, // 795);.float cosT
	0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, // heta = sqrt(1.0 
	0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, // - t.x);.float si
	0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, // nTheta = sqrt(t.
	0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, // x);.float sp,cp;
	0x0a, 0x7b, 0x73, 0x70, 0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x63, 0x70, // .{sp=sin(phi);cp
	0x3d, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, 0x3b, 0x0a, 0x72, 0x65, 0x74, // =cos(phi);};.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, // urn vec3(cp * si
	0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, // nTheta, cosTheta
	0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x29, // , sp * sinTheta)
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, // ;.}.vec3 rotate_
	0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x28, // to_vector_upper(
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, //  vec3 vec, vec3 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, // normal).{.if(nor
	0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, // mal.y > -0.99999
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, // ).{.float h = 1.
	0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, // 0/(1.0+normal.y)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, // ;.float hz = h*n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, // ormal.z;.float h
	0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // zx = hz*normal.x
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, // ;.return vec3(.v
	0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, // ec.x * (normal.y
	0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, // +hz*normal.z) + 
	0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // vec.y * normal.x
	0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, //  - vec.z * hzx,.
	0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, // vec.y * normal.y
	0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, //  - vec.x * norma
	0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, // l.x - vec.z * no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, // rmal.z,.vec.y * 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, // normal.z - vec.x
	0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, //  * hzx + vec.z *
	0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, //  (normal.y+h*nor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, // mal.x*normal.x))
	0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // ;.}.else return 
	0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // -vec;.}.uniform 
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, // sampler2D displa
	0x79, 0x54, 0x65, 0x78, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, // yTex;.uniform sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, // mpler2D displayG
	0x6c, 0x61, 0x73, 0x73, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // lass;.uniform ve
	0x63, 0x34, 0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, // c4 vColor_Intens
	0x69, 0x74, 0x79, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, // ity;.uniform vec
	0x34, 0x20, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, // 4 staticColor_Al
	0x70, 0x68, 0x61, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, // pha;.uniform vec
	0x34, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, // 4 glassAmbient_R
	0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // oughness;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, // m vec4 w_h_heigh
	0x74, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, // t;.vec3 Reinhard
	0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, // ToneMap(vec3 col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, // or).{.float l = 
	0x6d, 0x69, 0x6e, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x76, // min(dot(color, v
	0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x20, 0x30, 0x2e, // ec3(0.176204, 0.
	0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, // 812985, 0.010810
	0x39, 0x29, 0x29, 0x2c, 0x20, 0x31, 0x30, 0x30, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x72, 0x65, // 9)), 1000.0);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, // turn color * ((l
	0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, //  * 0.25 + 1.0) /
	0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, //  (l + 1.0));.}.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x52, 0x65, 0x73, // niform vec4 vRes
	0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // _Alpha_time;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x64, // form sampler2D d
	0x6d, 0x64, 0x47, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x78, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // mdGlowTex;.float
	0x20, 0x75, 0x64, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x6f, 0x78, 0x28, 0x76, 0x65, 0x63, 0x32, //  udRoundBox(vec2
	0x20, 0x70, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, //  p, float b, flo
	0x61, 0x74, 0x20, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x71, 0x20, 0x3d, // at r).{.vec2 q =
	0x20, 0x61, 0x62, 0x73, 0x28, 0x70, 0x29, 0x20, 0x2d, 0x20, 0x62, 0x20, 0x2b, 0x20, 0x72, 0x3b, //  abs(p) - b + r;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x28, 0x6d, // .return length(m
	0x61, 0x78, 0x28, 0x71, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x6d, 0x69, // ax(q, 0.0)) + mi
	0x6e, 0x28, 0x6d, 0x61, 0x78, 0x28, 0x71, 0x2e, 0x78, 0x2c, 0x20, 0x71, 0x2e, 0x79, 0x29, 0x2c, // n(max(q.x, q.y),
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x72, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, //  0.0) - r;.}.vec
	0x33, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x6d, 0x64, 0x28, 0x76, 0x65, 0x63, 0x33, // 3 sampleDmd(vec3
	0x20, 0x73, 0x61, 0x6d, 0x70, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x77, 0x5f, //  samp).{.if ((w_
	0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, // h_height.w != 0.
	0x30, 0x29, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x2e, // 0)).return samp.
	0x72, 0x67, 0x62, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, // rgb * (vColor_In
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x65, 0x6c, // tensity.rgb);.el
	0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x2e, 0x72, // se.return samp.r
	0x20, 0x2a, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, //  * (vColor_Inten
	0x73, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, 0x69, // sity.rgb);.}.voi
	0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x76, // d main().{.if (v
	0x5f, 0x63, 0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x3c, 0x20, // _clipDistance < 
	0x30, 0x2e, 0x30, 0x29, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x3b, 0x0a, 0x76, 0x65, // 0.0).discard;.ve
	0x63, 0x33, 0x20, 0x6c, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, // c3 lum = vec3_sp
	0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x6e, // lat(0.0);.vec2 n
	0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x20, 0x3d, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, // earest = (floor(
	0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x2a, 0x20, 0x28, 0x76, // v_texcoord1 * (v
	0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x78, // Res_Alpha_time.x
	0x79, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // y)) + vec2_splat
	0x28, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, // (0.5)) / (vRes_A
	0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x78, 0x79, 0x29, 0x3b, 0x0a, 0x69, // lpha_time.xy);.i
	0x66, 0x20, 0x28, 0x28, 0x6e, 0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x78, 0x20, 0x3e, 0x3d, // f ((nearest.x >=
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x6e, 0x65, 0x61, 0x72, 0x65, 0x73, //  0.0) && (neares
	0x74, 0x2e, 0x79, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, // t.y >= 0.0) && (
	0x6e, 0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x31, 0x2e, 0x30, // nearest.x <= 1.0
	0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x6e, 0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x79, 0x20, // ) && (nearest.y 
	0x3c, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // <= 1.0)).{.vec2 
	0x70, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x76, 0x5f, 0x74, 0x65, // pos = fract(v_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x52, 0x65, 0x73, 0x5f, // xcoord1 * (vRes_
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x78, 0x79, 0x29, 0x29, 0x20, // Alpha_time.xy)) 
	0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x35, // - vec2_splat(0.5
	0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x64, 0x66, 0x20, 0x3d, 0x20, 0x75, // );.float sdf = u
	0x64, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x6f, 0x78, 0x28, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x28, // dRoundBox(pos, (
	0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, // vRes_Alpha_time.
	0x7a, 0x29, 0x2c, 0x20, 0x28, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, // z), (vRes_Alpha_
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x77, 0x29, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // time.w));.float 
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x20, 0x3d, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, // inner = smoothst
	0x65, 0x70, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, // ep(0.0, (w_h_hei
	0x67, 0x68, 0x74, 0x2e, 0x7a, 0x29, 0x2c, 0x20, 0x73, 0x64, 0x66, 0x29, 0x3b, 0x0a, 0x6c, 0x75, // ght.z), sdf);.lu
	0x6d, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x73, 0x74, // m = inner * ((st
	0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, // aticColor_Alpha.
	0x72, 0x67, 0x62, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x6d, 0x64, // rgb) + sampleDmd
	0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x64, 0x69, 0x73, 0x70, // (textureLod(disp
	0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x2c, 0x20, 0x6e, 0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x2c, // layTex, nearest,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, //  0.0).rgb));.}.v
	0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, // ec3 glow = sampl
	0x65, 0x44, 0x6d, 0x64, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, // eDmd(textureLod(
	0x64, 0x6d, 0x64, 0x47, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, // dmdGlowTex, vec2
	0x28, 0x30, 0x2e, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x30, // (0.25, 0.25) + 0
	0x2e, 0x35, 0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // .5 * vec2(v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x76, // oord1.x, 1.0 - v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x30, // _texcoord1.y), 0
	0x2e, 0x30, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x6c, 0x75, 0x6d, 0x20, 0x2b, 0x3d, // .0).rgb);.lum +=
	0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, //  (vColor_Intensi
	0x74, 0x79, 0x2e, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x3b, 0x0a, 0x69, 0x66, // ty.w) * glow;.if
	0x20, 0x28, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x78, 0x20, //  ((w_h_height.x 
	0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // != 0.0)).{.vec4 
	0x67, 0x6c, 0x61, 0x73, 0x73, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, // glass = texture(
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x2c, 0x20, 0x76, 0x5f, // displayGlass, v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x6c, 0x75, 0x6d, 0x20, // texcoord0);.lum 
	0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6c, 0x75, 0x6d, 0x2c, 0x20, 0x28, 0x28, 0x67, 0x6c, 0x61, // = mix(lum, ((gla
	0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, // ssAmbient_Roughn
	0x65, 0x73, 0x73, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x20, 0x2b, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x29, // ess.rgb) + glow)
	0x2c, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, // , (glassAmbient_
	0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x67, // Roughness.w) * g
	0x6c, 0x61, 0x73, 0x73, 0x2e, 0x61, 0x29, 0x20, 0x2a, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x2e, // lass.a) * glass.
	0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x73, 0x74, 0x61, 0x74, // rgb;.}.if ((stat
	0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, 0x29, // icColor_Alpha.w)
	0x20, 0x3d, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, //  == 0.0).gl_Frag
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x6c, 0x75, 0x6d, // Color = vec4(lum
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x69, 0x66, 0x20, // , 1.0);.else if 
	0x28, 0x28, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, // ((staticColor_Al
	0x70, 0x68, 0x61, 0x2e, 0x77, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x67, // pha.w) == 1.0).g
	0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, // l_FragColor = ve
	0x63, 0x34, 0x28, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x6e, 0x65, 0x4d, // c4(ReinhardToneM
	0x61, 0x70, 0x28, 0x6c, 0x75, 0x6d, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x65, // ap(lum), 1.0);.e
	0x6c, 0x73, 0x65, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, // lse if ((staticC
	0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, 0x29, 0x20, 0x3d, 0x3d, // olor_Alpha.w) ==
	0x20, 0x32, 0x2e, 0x30, 0x29, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, //  2.0).gl_FragCol
	0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // or = vec4(FBGamm
	0x61, 0x28, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, // a(ReinhardToneMa
	0x70, 0x28, 0x6c, 0x75, 0x6d, 0x29, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x7d, // p(lum)), 1.0);.}
	0x0a, 0x00,                                                                                     // ..
};
static const uint8_t fs_display_dmd_clip_dx11[3207] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4e, 0xbd, 0x0b, 0x9f, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x10, 0x76, // FSH.N..........v
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, // Color_Intensity.
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, // ..........static
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x00, 0x10, 0x00, 0x01, // Color_Alpha.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, // ......glassAmbie
	0x6e, 0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x00, 0x20, 0x00, // nt_Roughness.. .
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, // .......w_h_heigh
	0x74, 0x12, 0x00, 0x30, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x76, 0x52, 0x65, 0x73, // t..0........vRes
	0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x00, 0x40, 0x00, 0x01, // _Alpha_time..@..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, // ......displayTex
	0x30, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, // 0..........displ
	0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x30, 0x01, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // ayGlass0........
	0x00, 0x0a, 0x64, 0x6d, 0x64, 0x47, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x78, 0x30, 0x01, 0x02, 0x00, // ..dmdGlowTex0...
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, // .......displayTe
	0x78, 0x30, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x64, 0x69, 0x73, 0x70, // x0..........disp
	0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x30, 0x01, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, // layGlass0.......
	0x00, 0x00, 0x0a, 0x64, 0x6d, 0x64, 0x47, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x78, 0x30, 0x01, 0x02, // ...dmdGlowTex0..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x0b, 0x00, 0x00, 0x44, 0x58, 0x42, 0x43, 0x72, // .......h...DXBCr
	0x62, 0x76, 0x27, 0x8d, 0x1e, 0x87, 0x69, 0x2e, 0x28, 0xa6, 0xc0, 0x8c, 0x06, 0x7f, 0x3d, 0x01, // bv'...i.(.....=.
	0x00, 0x00, 0x00, 0x68, 0x0b, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0xb4, // ...h.......,....
	0x00, 0x00, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x4e, 0x80, 0x00, 0x00, 0x00, 0x04, // .......ISGN.....
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // .......h........
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x74, // ...............t
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .......t........
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x74, // ...............t
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, // .......SV_POSITI
	0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0xab, 0xab, 0xab, 0x4f, // ON.TEXCOORD....O
	0x53, 0x47, 0x4e, 0x2c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, // SGN,........... 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, // .......SV_TARGET
	0x00, 0xab, 0xab, 0x53, 0x48, 0x45, 0x58, 0x78, 0x0a, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x9e, // ...SHEXx...P....
	0x02, 0x00, 0x00, 0x6a, 0x08, 0x00, 0x01, 0x59, 0x00, 0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, 0x00, // ...j...Y...F. ..
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x00, // .......Z....`...
	0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x5a, // ...Z....`......Z
	0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, // ....`......X....
	0x70, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, // p......UU..X....
	0x70, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, // p......UU..X....
	0x70, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x12, // p......UU..b....
	0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x62, 0x10, 0x10, 0x00, 0x01, // .......b...b....
	0x00, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x32, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x65, // ...b...2.......e
	0x00, 0x00, 0x03, 0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x02, 0x04, // .... ......h....
	0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, // ...1............
	0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, // ........@.......
	0x00, 0x04, 0x03, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x32, // ...........8...2
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x05, 0xc2, // . .........A....
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x04, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x0a, 0xc2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa6, 0x0e, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....@...........
	0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x0e, 0x00, 0x00, 0x08, 0xc2, 0x00, 0x10, 0x00, 0x00, // ..?...?.........
	0x00, 0x00, 0x00, 0xa6, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x84, 0x20, 0x00, 0x00, // ............. ..
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x0a, 0x32, 0x00, 0x10, 0x00, 0x01, // ...........2....
	0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x0a, 0x62, // ...............b
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........@.......
	0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0xa6, 0x0b, 0x10, 0x00, 0x00, // ..?...?.........
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, // ................
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x01, // ...........*....
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 0x0a, // ................
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x05, 0x32, 0x00, 0x10, 0x00, 0x00, // ...........2....
	0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x32, // ...F...........2
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // .......F........
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, 0x00, 0x00, 0x00, // @...............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x32, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // .......2.......F
	0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa6, 0x8a, 0x20, 0x80, 0x41, // ............. .A
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x32, // ...............2
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, // .......F........
	0x8f, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x0a, 0x32, // . .........4...2
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // .......F........
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // @...............
	0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4b, // .......F.......K
	0x00, 0x00, 0x05, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, // ...4............
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, // ...............3
	0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x12, // ....@...........
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, // ................
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x80, 0x41, // ...........:. .A
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0b, 0x22, // ..............."
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, // ........@.....?.
	0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x2a, 0x80, 0x20, 0x00, 0x00, // ..?...?...?*. ..
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x38, 0x20, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, // .......8 .......
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, // ...2..."........
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x01, // ........@.......
	0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, // @....@@8........
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, // ...8............
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, // ...............H
	0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0xe2, 0x00, 0x10, 0x00, 0x00, // .......CU.......
	0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x79, 0x10, 0x00, 0x00, // ...........6y...
	0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ....`.......@...
	0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x08, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, // ...9...........:
	0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // . ..........@...
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xe2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x56, // ...8...........V
	0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x89, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ......... ......
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xe2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, // ...8...........V
	0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x89, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ......... ......
	0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0xe2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, // ...7............
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x56, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x56, // .......V.......V
	0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xe2, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x56, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x89, 0x20, 0x00, 0x00, // ...V......... ..
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x00, // .......8...r....
	0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x01, 0x36, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x00, // .......6...r....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....@...........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, 0x32, 0x00, 0x00, 0x0f, 0x32, // ...........2...2
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, // .......F........
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, // @.....?...?.....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3e, 0x00, 0x00, 0x80, 0x3e, 0x00, // ....@.....>...>.
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, // .......H.......C
	0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x01, // U..r.......F....
	0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x02, // ...F~.......`...
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x0b, 0x32, // ....@......9...2
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x36, 0x8f, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, // .......6. ......
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....@...........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xe2, 0x00, 0x10, 0x00, 0x01, // .......8........
	0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x89, 0x20, 0x00, 0x00, // ............. ..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x03, // .......8...r....
	0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, // ...........F. ..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, // .......7...r....
	0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, // ...F.......2...r
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0x8f, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ......... ......
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, // ...F.......F....
	0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x45, // ...............E
	0x00, 0x00, 0x8b, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0xf2, 0x00, 0x10, 0x00, 0x02, // .......CU.......
	0x00, 0x00, 0x00, 0x96, 0x15, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x01, // ...........F~...
	0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, // ....`..........r
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x82, // . .........8....
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, // .......:.......:
	0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, // . .............r
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, // .......F...A....
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, // ...F.......2...r
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, // .......F.......8
	0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, // ...r.......F....
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, 0x18, // ...F............
	0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, // ...........:. ..
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, // ........@.......
	0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x72, // ...:.......6...r
	0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, //  ......F.......6
	0x00, 0x00, 0x05, 0x82, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // .... .......@...
	0x00, 0x80, 0x3f, 0x12, 0x00, 0x00, 0x01, 0x18, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x00, // ..?.............
	0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, // ...:. ..........
	0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x1f, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, 0x00, // @.....?....:....
	0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x0a, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xd2, 0x6e, 0x34, 0x3e, 0xc9, // ........@...n4>.
	0x1f, 0x50, 0x3f, 0x33, 0x20, 0x31, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x07, 0x82, // .P?3 1<....3....
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // .......:........
	0x40, 0x00, 0x00, 0x00, 0x00, 0x7a, 0x44, 0x32, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x01, // @....zD2........
	0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ...:........@...
	0x00, 0x80, 0x3e, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x07, 0x82, // ..>.@.....?.....
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // .......:........
	0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x0e, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, // @.....?.........
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, // ...........:....
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, // ...8...r .......
	0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, // .......F.......6
	0x00, 0x00, 0x05, 0x82, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // .... .......@...
	0x00, 0x80, 0x3f, 0x12, 0x00, 0x00, 0x01, 0x18, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x00, // ..?.............
	0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, // ...:. ..........
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x1f, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, 0x00, // @.....@....:....
	0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x0a, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xd2, 0x6e, 0x34, 0x3e, 0xc9, // ........@...n4>.
	0x1f, 0x50, 0x3f, 0x33, 0x20, 0x31, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x07, 0x82, // .P?3 1<....3....
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // .......:........
	0x40, 0x00, 0x00, 0x00, 0x00, 0x7a, 0x44, 0x32, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x01, // @....zD2........
	0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ...:........@...
	0x00, 0x80, 0x3e, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x07, 0x82, // ..>.@.....?.....
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // .......:........
	0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x0e, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, // @.....?.........
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, // ...........:....
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, // ...8...r........
	0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1d, // .......F........
	0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x1c, // ...r........@...
	0x2e, 0x4d, 0x3b, 0x1c, 0x2e, 0x4d, 0x3b, 0x1c, 0x2e, 0x4d, 0x3b, 0x00, 0x00, 0x00, 0x00, 0x46, // .M;..M;..M;....F
	0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x02, // .......8...r....
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x52, // ...F........@..R
	0xb8, 0x4e, 0x41, 0x52, 0xb8, 0x4e, 0x41, 0x52, 0xb8, 0x4e, 0x41, 0x00, 0x00, 0x00, 0x00, 0x2f, // .NAR.NAR.NA..../
	0x00, 0x00, 0x05, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, // ...r.......F....
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // ...8...r.......F
	0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x55, 0x55, 0xd5, 0x3e, 0x55, // ........@..UU.>U
	0x55, 0xd5, 0x3e, 0x55, 0x55, 0xd5, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x05, 0x72, // U.>UU.>........r
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, // .......F.......2
	0x00, 0x00, 0x0f, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, // ...r.......F....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x3d, 0x0a, 0x87, 0x3f, 0x3d, 0x0a, 0x87, 0x3f, 0x3d, // ....@..=..?=..?=
	0x0a, 0x87, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xae, 0x47, 0x61, 0xbd, 0xae, // ..?.....@...Ga..
	0x47, 0x61, 0xbd, 0xae, 0x47, 0x61, 0xbd, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, // Ga..Ga.....7...r
	0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, //  ......F.......F
	0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, // .......F.......6
	0x00, 0x00, 0x05, 0x82, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // .... .......@...
	0x00, 0x80, 0x3f, 0x15, 0x00, 0x00, 0x01, 0x15, 0x00, 0x00, 0x01, 0x15, 0x00, 0x00, 0x01, 0x3e, // ..?............>
	0x00, 0x00, 0x01, 0x00, 0x00, 0x50, 0x00,                                                       // .....P.
};
static const uint8_t fs_display_dmd_clip_spv[6790] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4e, 0xbd, 0x0b, 0x9f, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x0a, 0x77, // FSH.N..........w
	0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x01, 0x30, 0x00, 0x01, 0x00, 0x00, // _h_height..0....
	0x00, 0x00, 0x00, 0x10, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, // ....vColor_Inten
	0x73, 0x69, 0x74, 0x79, 0x12, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x76, // sity...........v
	0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x01, // Res_Alpha_time..
	0x40, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, // @........staticC
	0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x01, 0x10, 0x00, 0x01, 0x00, // olor_Alpha......
	0x00, 0x00, 0x00, 0x00, 0x16, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, // .....glassAmbien
	0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x01, 0x20, 0x00, 0x01, // t_Roughness.. ..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, // ......displayTex
	0x30, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, // 0......."..displ
	0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x30, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, // ayGlass0......."
	0x00, 0x0a, 0x64, 0x6d, 0x64, 0x47, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x78, 0x30, 0x00, 0x04, 0x00, // ..dmdGlowTex0...
	0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0xa8, 0x19, 0x00, 0x00, 0x03, 0x02, 0x23, 0x07, 0x00, 0x00, // ....".......#...
	0x01, 0x00, 0x0b, 0x00, 0x08, 0x00, 0x9d, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, // ................
	0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x4c, // ..............GL
	0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, // SL.std.450......
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x09, 0x00, 0x04, 0x00, // ................
	0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0xb7, 0x01, // ......main......
	0x00, 0x00, 0xbb, 0x01, 0x00, 0x00, 0xbe, 0x01, 0x00, 0x00, 0xcd, 0x01, 0x00, 0x00, 0x10, 0x00, // ................
	0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x05, 0x00, // ................
	0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, // ..............ma
	0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00, 0x51, 0x00, 0x00, 0x00, 0x64, 0x69, // in........Q...di
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, // splayTexSampler.
	0x00, 0x00, 0x05, 0x00, 0x07, 0x00, 0x54, 0x00, 0x00, 0x00, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, // ......T...displa
	0x79, 0x54, 0x65, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, // yTexTexture.....
	0x07, 0x00, 0x58, 0x00, 0x00, 0x00, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, // ..X...displayGla
	0x73, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x05, 0x00, 0x07, 0x00, 0x5a, 0x00, // ssSampler.....Z.
	0x00, 0x00, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x54, 0x65, // ..displayGlassTe
	0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x05, 0x00, 0x07, 0x00, 0x5e, 0x00, 0x00, 0x00, 0x64, 0x6d, // xture.....^...dm
	0x64, 0x47, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, // dGlowTexSampler.
	0x00, 0x00, 0x05, 0x00, 0x07, 0x00, 0x60, 0x00, 0x00, 0x00, 0x64, 0x6d, 0x64, 0x47, 0x6c, 0x6f, // ......`...dmdGlo
	0x77, 0x54, 0x65, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, // wTexTexture.....
	0x06, 0x00, 0xe9, 0x00, 0x00, 0x00, 0x55, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x6c, 0x6f, // ......UniformBlo
	0x63, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0xe9, 0x00, 0x00, 0x00, 0x00, 0x00, // ck..............
	0x00, 0x00, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, // ..vColor_Intensi
	0x74, 0x79, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0xe9, 0x00, 0x00, 0x00, 0x01, 0x00, // ty..............
	0x00, 0x00, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, // ..staticColor_Al
	0x70, 0x68, 0x61, 0x00, 0x00, 0x00, 0x06, 0x00, 0x09, 0x00, 0xe9, 0x00, 0x00, 0x00, 0x02, 0x00, // pha.............
	0x00, 0x00, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, // ..glassAmbient_R
	0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0xe9, 0x00, // oughness........
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, // ......w_h_height
	0x00, 0x00, 0x06, 0x00, 0x07, 0x00, 0xe9, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x76, 0x52, // ..............vR
	0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x00, 0x05, 0x00, // es_Alpha_time...
	0x03, 0x00, 0xeb, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0xb7, 0x01, // ................
	0x00, 0x00, 0x76, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, // ..v_clipDistance
	0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0xbb, 0x01, 0x00, 0x00, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // ..........v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x05, 0x00, 0x05, 0x00, 0xbe, 0x01, 0x00, 0x00, 0x76, 0x5f, // oord0.........v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x00, 0x05, 0x00, 0x06, 0x00, 0xcd, 0x01, // texcoord1.......
	0x00, 0x00, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, // ..bgfx_FragData0
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x51, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, // ..G...Q...".....
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x51, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x12, 0x00, // ..G...Q...!.....
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x54, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, // ..G...T...".....
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x54, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x02, 0x00, // ..G...T...!.....
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x58, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, // ..G...X...".....
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x58, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x13, 0x00, // ..G...X...!.....
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x5a, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, // ..G...Z...".....
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x5a, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x03, 0x00, // ..G...Z...!.....
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x5e, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, // ..G...^...".....
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x5e, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x14, 0x00, // ..G...^...!.....
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x60, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, // ..G...`...".....
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x60, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x04, 0x00, // ..G...`...!.....
	0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0xe9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, // ..H...........#.
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0xe9, 0x00, 0x00, 0x00, 0x01, 0x00, // ......H.........
	0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0xe9, 0x00, // ..#.......H.....
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x48, 0x00, // ......#... ...H.
	0x05, 0x00, 0xe9, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x30, 0x00, // ..........#...0.
	0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0xe9, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x23, 0x00, // ..H...........#.
	0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00, 0xe9, 0x00, 0x00, 0x00, 0x02, 0x00, // ..@...G.........
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xeb, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, // ..G.......".....
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xeb, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x01, 0x00, // ..G.......!.....
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xb7, 0x01, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, // ..G.............
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xbb, 0x01, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, // ..G.............
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xbe, 0x01, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x02, 0x00, // ..G.............
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xcd, 0x01, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, // ..G.............
	0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x21, 0x00, 0x03, 0x00, 0x03, 0x00, // ..........!.....
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00, 0x16, 0x00, // ................
	0x03, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x19, 0x00, 0x09, 0x00, 0x08, 0x00, // ...... .........
	0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, // ................
	0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x17, 0x00, // ................
	0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x17, 0x00, // ................
	0x04, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, // .............. .
	0x04, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3b, 0x00, // ..P...........;.
	0x04, 0x00, 0x50, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, // ..P...Q....... .
	0x04, 0x00, 0x53, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3b, 0x00, // ..S...........;.
	0x04, 0x00, 0x53, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, // ..S...T.......;.
	0x04, 0x00, 0x50, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, // ..P...X.......;.
	0x04, 0x00, 0x53, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, // ..S...Z.......;.
	0x04, 0x00, 0x50, 0x00, 0x00, 0x00, 0x5e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, // ..P...^.......;.
	0x04, 0x00, 0x53, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, // ..S...`.........
	0x04, 0x00, 0x63, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, // ..c... .......+.
	0x04, 0x00, 0x63, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, // ..c...d.......+.
	0x04, 0x00, 0x63, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1b, 0x00, // ..c...h.........
	0x03, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, // ..l.......+.....
	0x00, 0x00, 0x8f, 0x00, 0x00, 0x00, 0x1c, 0x2e, 0x4d, 0x3b, 0x14, 0x00, 0x02, 0x00, 0x90, 0x00, // ........M;......
	0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x52, 0xb8, // ..+...........R.
	0x4e, 0x41, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x99, 0x00, 0x00, 0x00, 0x3d, 0x0a, // NA+...........=.
	0x87, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9b, 0x00, 0x00, 0x00, 0x55, 0x55, // .?+...........UU
	0xd5, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9e, 0x00, 0x00, 0x00, 0xae, 0x47, // .>+............G
	0x61, 0x3d, 0x15, 0x00, 0x04, 0x00, 0xa9, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // a=........ .....
	0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0xa9, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x00, 0x00, // ..+.............
	0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0xa9, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x02, 0x00, // ..+.............
	0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbd, 0x00, 0x00, 0x00, 0xd2, 0x6e, // ..+............n
	0x34, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbe, 0x00, 0x00, 0x00, 0xc9, 0x1f, // 4>+.............
	0x50, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, 0x00, 0x33, 0x20, // P?+...........3 
	0x31, 0x3c, 0x2c, 0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xbd, 0x00, // 1<,.............
	0x00, 0x00, 0xbe, 0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, // ..........+.....
	0x00, 0x00, 0xc2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7a, 0x44, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, // ........zD+.....
	0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, // .........>+.....
	0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, // .........?+.....
	0x00, 0x00, 0xda, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x05, 0x00, 0x0b, 0x00, // ..........,.....
	0x00, 0x00, 0xdb, 0x00, 0x00, 0x00, 0xda, 0x00, 0x00, 0x00, 0xda, 0x00, 0x00, 0x00, 0x1e, 0x00, // ................
	0x07, 0x00, 0xe9, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, // ................
	0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0xea, 0x00, // .......... .....
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xe9, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0xea, 0x00, // ..........;.....
	0x00, 0x00, 0xeb, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x63, 0x00, // ..........+...c.
	0x00, 0x00, 0xec, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0xa9, 0x00, // ..........+.....
	0x00, 0x00, 0xed, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0xee, 0x00, // .......... .....
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0xf5, 0x00, // .......... .....
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x63, 0x00, // ..........+...c.
	0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, // ..........+.....
	0x00, 0x00, 0x17, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x2c, 0x00, 0x05, 0x00, 0x0b, 0x00, // .........?,.....
	0x00, 0x00, 0x59, 0x01, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x2b, 0x00, // ..Y...........+.
	0x04, 0x00, 0x63, 0x00, 0x00, 0x00, 0x76, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, 0x00, // ..c...v.......+.
	0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x20, 0x00, // .............@ .
	0x04, 0x00, 0xb6, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3b, 0x00, // ..............;.
	0x04, 0x00, 0xb6, 0x01, 0x00, 0x00, 0xb7, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, // .............. .
	0x04, 0x00, 0xba, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3b, 0x00, // ..............;.
	0x04, 0x00, 0xba, 0x01, 0x00, 0x00, 0xbb, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3b, 0x00, // ..............;.
	0x04, 0x00, 0xba, 0x01, 0x00, 0x00, 0xbe, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, // .............. .
	0x04, 0x00, 0xcc, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x3b, 0x00, // ..............;.
	0x04, 0x00, 0xcc, 0x01, 0x00, 0x00, 0xcd, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, // ..............,.
	0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x8c, 0x03, 0x00, 0x00, 0xda, 0x00, 0x00, 0x00, 0xda, 0x00, // ................
	0x00, 0x00, 0xda, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x8d, 0x03, // ......,.........
	0x00, 0x00, 0x17, 0x01, 0x00, 0x00, 0x17, 0x01, 0x00, 0x00, 0x01, 0x00, 0x03, 0x00, 0x0d, 0x00, // ................
	0x00, 0x00, 0x9c, 0x03, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, // ......6.........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, 0x00, // ................
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x51, 0x00, // ..=.......R...Q.
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x54, 0x00, // ..=.......U...T.
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00, 0x58, 0x00, // ..=.......Y...X.
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x5b, 0x00, 0x00, 0x00, 0x5a, 0x00, // ..=.......[...Z.
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x00, 0x5e, 0x00, // ..=......._...^.
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0x60, 0x00, // ..=.......a...`.
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb8, 0x01, 0x00, 0x00, 0xb7, 0x01, // ..=.............
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xbc, 0x01, 0x00, 0x00, 0xbb, 0x01, // ..=.............
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xbf, 0x01, 0x00, 0x00, 0xbe, 0x01, // ..=.............
	0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x90, 0x00, 0x00, 0x00, 0x0b, 0x02, 0x00, 0x00, 0xb8, 0x01, // ................
	0x00, 0x00, 0xda, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x0d, 0x02, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x0b, 0x02, 0x00, 0x00, 0x0c, 0x02, 0x00, 0x00, 0x0d, 0x02, // ................
	0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x0c, 0x02, 0x00, 0x00, 0xfc, 0x00, 0x01, 0x00, 0xf8, 0x00, // ................
	0x02, 0x00, 0x0d, 0x02, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xf5, 0x00, 0x00, 0x00, 0x10, 0x02, // ......A.........
	0x00, 0x00, 0xeb, 0x00, 0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, // ..........=.....
	0x00, 0x00, 0x11, 0x02, 0x00, 0x00, 0x10, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, // ..........O.....
	0x00, 0x00, 0x12, 0x02, 0x00, 0x00, 0x11, 0x02, 0x00, 0x00, 0x11, 0x02, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x13, 0x02, // ................
	0x00, 0x00, 0xbf, 0x01, 0x00, 0x00, 0x12, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x0b, 0x00, // ................
	0x00, 0x00, 0x14, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x13, 0x02, // ................
	0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x16, 0x02, 0x00, 0x00, 0x14, 0x02, // ................
	0x00, 0x00, 0x8d, 0x03, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xf5, 0x00, 0x00, 0x00, 0x17, 0x02, // ......A.........
	0x00, 0x00, 0xeb, 0x00, 0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, // ..........=.....
	0x00, 0x00, 0x18, 0x02, 0x00, 0x00, 0x17, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, // ..........O.....
	0x00, 0x00, 0x19, 0x02, 0x00, 0x00, 0x18, 0x02, 0x00, 0x00, 0x18, 0x02, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x1a, 0x02, // ................
	0x00, 0x00, 0x16, 0x02, 0x00, 0x00, 0x19, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, // ..........Q.....
	0x00, 0x00, 0x1c, 0x02, 0x00, 0x00, 0x1a, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbe, 0x00, // ................
	0x05, 0x00, 0x90, 0x00, 0x00, 0x00, 0x1d, 0x02, 0x00, 0x00, 0x1c, 0x02, 0x00, 0x00, 0xda, 0x00, // ................
	0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1f, 0x02, 0x00, 0x00, 0x1a, 0x02, // ..Q.............
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xbe, 0x00, 0x05, 0x00, 0x90, 0x00, 0x00, 0x00, 0x20, 0x02, // .............. .
	0x00, 0x00, 0x1f, 0x02, 0x00, 0x00, 0xda, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x90, 0x00, // ................
	0x00, 0x00, 0x21, 0x02, 0x00, 0x00, 0x1d, 0x02, 0x00, 0x00, 0x20, 0x02, 0x00, 0x00, 0x51, 0x00, // ..!....... ...Q.
	0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x23, 0x02, 0x00, 0x00, 0x1a, 0x02, 0x00, 0x00, 0x00, 0x00, // ......#.........
	0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x90, 0x00, 0x00, 0x00, 0x24, 0x02, 0x00, 0x00, 0x23, 0x02, // ..........$...#.
	0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x90, 0x00, 0x00, 0x00, 0x25, 0x02, // ..............%.
	0x00, 0x00, 0x21, 0x02, 0x00, 0x00, 0x24, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, // ..!...$...Q.....
	0x00, 0x00, 0x27, 0x02, 0x00, 0x00, 0x1a, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xbc, 0x00, // ..'.............
	0x05, 0x00, 0x90, 0x00, 0x00, 0x00, 0x28, 0x02, 0x00, 0x00, 0x27, 0x02, 0x00, 0x00, 0xc8, 0x00, // ......(...'.....
	0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x90, 0x00, 0x00, 0x00, 0x29, 0x02, 0x00, 0x00, 0x25, 0x02, // ..........)...%.
	0x00, 0x00, 0x28, 0x02, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x48, 0x02, 0x00, 0x00, 0x00, 0x00, // ..(.......H.....
	0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x29, 0x02, 0x00, 0x00, 0x2a, 0x02, 0x00, 0x00, 0x48, 0x02, // ......)...*...H.
	0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x2a, 0x02, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xf5, 0x00, // ......*...A.....
	0x00, 0x00, 0x2c, 0x02, 0x00, 0x00, 0xeb, 0x00, 0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x3d, 0x00, // ..,...........=.
	0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x2d, 0x02, 0x00, 0x00, 0x2c, 0x02, 0x00, 0x00, 0x4f, 0x00, // ......-...,...O.
	0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x2e, 0x02, 0x00, 0x00, 0x2d, 0x02, 0x00, 0x00, 0x2d, 0x02, // ..........-...-.
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x0b, 0x00, // ................
	0x00, 0x00, 0x2f, 0x02, 0x00, 0x00, 0xbf, 0x01, 0x00, 0x00, 0x2e, 0x02, 0x00, 0x00, 0x0c, 0x00, // ../.............
	0x06, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x30, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, // ......0.........
	0x00, 0x00, 0x2f, 0x02, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x32, 0x02, // ../...........2.
	0x00, 0x00, 0x30, 0x02, 0x00, 0x00, 0x8d, 0x03, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0xee, 0x00, // ..0.......A.....
	0x00, 0x00, 0x34, 0x02, 0x00, 0x00, 0xeb, 0x00, 0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0xb4, 0x00, // ..4.............
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x35, 0x02, 0x00, 0x00, 0x34, 0x02, // ..=.......5...4.
	0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0xee, 0x00, 0x00, 0x00, 0x36, 0x02, 0x00, 0x00, 0xeb, 0x00, // ..A.......6.....
	0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0xed, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, // ..........=.....
	0x00, 0x00, 0x37, 0x02, 0x00, 0x00, 0x36, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x0b, 0x00, // ..7...6.........
	0x00, 0x00, 0xa6, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, 0x02, // ..............2.
	0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xa8, 0x02, 0x00, 0x00, 0x35, 0x02, // ..P...........5.
	0x00, 0x00, 0x35, 0x02, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xa9, 0x02, // ..5.............
	0x00, 0x00, 0xa6, 0x02, 0x00, 0x00, 0xa8, 0x02, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, // ..........P.....
	0x00, 0x00, 0xab, 0x02, 0x00, 0x00, 0x37, 0x02, 0x00, 0x00, 0x37, 0x02, 0x00, 0x00, 0x81, 0x00, // ......7...7.....
	0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xac, 0x02, 0x00, 0x00, 0xa9, 0x02, 0x00, 0x00, 0xab, 0x02, // ................
	0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xae, 0x02, 0x00, 0x00, 0x01, 0x00, // ................
	0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0xac, 0x02, 0x00, 0x00, 0xdb, 0x00, 0x00, 0x00, 0x0c, 0x00, // ..(.............
	0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xaf, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x42, 0x00, // ..............B.
	0x00, 0x00, 0xae, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb1, 0x02, // ......Q.........
	0x00, 0x00, 0xac, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, // ..........Q.....
	0x00, 0x00, 0xb3, 0x02, 0x00, 0x00, 0xac, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0c, 0x00, // ................
	0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb4, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, // ..............(.
	0x00, 0x00, 0xb1, 0x02, 0x00, 0x00, 0xb3, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, // ................
	0x00, 0x00, 0xb5, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0xb4, 0x02, // ..........%.....
	0x00, 0x00, 0xda, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb6, 0x02, // ................
	0x00, 0x00, 0xaf, 0x02, 0x00, 0x00, 0xb5, 0x02, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, // ................
	0x00, 0x00, 0xb8, 0x02, 0x00, 0x00, 0xb6, 0x02, 0x00, 0x00, 0x37, 0x02, 0x00, 0x00, 0x41, 0x00, // ..........7...A.
	0x06, 0x00, 0xee, 0x00, 0x00, 0x00, 0x39, 0x02, 0x00, 0x00, 0xeb, 0x00, 0x00, 0x00, 0xec, 0x00, // ......9.........
	0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3a, 0x02, // ......=.......:.
	0x00, 0x00, 0x39, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3c, 0x02, // ..9...........<.
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0xda, 0x00, 0x00, 0x00, 0x3a, 0x02, // ......1.......:.
	0x00, 0x00, 0xb8, 0x02, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xf5, 0x00, 0x00, 0x00, 0x3e, 0x02, // ......A.......>.
	0x00, 0x00, 0xeb, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, // ......d...=.....
	0x00, 0x00, 0x3f, 0x02, 0x00, 0x00, 0x3e, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, // ..?...>...O.....
	0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0x3f, 0x02, 0x00, 0x00, 0x3f, 0x02, 0x00, 0x00, 0x00, 0x00, // ..@...?...?.....
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x6c, 0x00, // ..........V...l.
	0x00, 0x00, 0xbf, 0x02, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x58, 0x00, // ......U...R...X.
	0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xc2, 0x02, 0x00, 0x00, 0xbf, 0x02, 0x00, 0x00, 0x1a, 0x02, // ................
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xda, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, // ..........O.....
	0x00, 0x00, 0x44, 0x02, 0x00, 0x00, 0xc2, 0x02, 0x00, 0x00, 0xc2, 0x02, 0x00, 0x00, 0x00, 0x00, // ..D.............
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xd9, 0x02, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0xaa, 0x00, 0x00, 0x00, 0xc7, 0x02, // ................
	0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xc7, 0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0xee, 0x00, // ..........A.....
	0x00, 0x00, 0xc8, 0x02, 0x00, 0x00, 0xeb, 0x00, 0x00, 0x00, 0xec, 0x00, 0x00, 0x00, 0xed, 0x00, // ................
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc9, 0x02, 0x00, 0x00, 0xc8, 0x02, // ..=.............
	0x00, 0x00, 0xb7, 0x00, 0x05, 0x00, 0x90, 0x00, 0x00, 0x00, 0xca, 0x02, 0x00, 0x00, 0xc9, 0x02, // ................
	0x00, 0x00, 0xda, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xd8, 0x02, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xca, 0x02, 0x00, 0x00, 0xcb, 0x02, 0x00, 0x00, 0xd1, 0x02, // ................
	0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xd1, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, // ..........Q.....
	0x00, 0x00, 0xd3, 0x02, 0x00, 0x00, 0xc2, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x00, // ..............A.
	0x05, 0x00, 0xf5, 0x00, 0x00, 0x00, 0xd4, 0x02, 0x00, 0x00, 0xeb, 0x00, 0x00, 0x00, 0x68, 0x00, // ..............h.
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xd5, 0x02, 0x00, 0x00, 0xd4, 0x02, // ..=.............
	0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xd6, 0x02, 0x00, 0x00, 0xd5, 0x02, // ..O.............
	0x00, 0x00, 0xd5, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, // ................
	0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xd7, 0x02, 0x00, 0x00, 0xd6, 0x02, // ................
	0x00, 0x00, 0xd3, 0x02, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xd9, 0x02, 0x00, 0x00, 0xf8, 0x00, // ................
	0x02, 0x00, 0xcb, 0x02, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xf5, 0x00, 0x00, 0x00, 0xcd, 0x02, // ......A.........
	0x00, 0x00, 0xeb, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, // ......h...=.....
	0x00, 0x00, 0xce, 0x02, 0x00, 0x00, 0xcd, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, // ..........O.....
	0x00, 0x00, 0xcf, 0x02, 0x00, 0x00, 0xce, 0x02, 0x00, 0x00, 0xce, 0x02, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x1a, 0x00, // ................
	0x00, 0x00, 0xd0, 0x02, 0x00, 0x00, 0x44, 0x02, 0x00, 0x00, 0xcf, 0x02, 0x00, 0x00, 0xf9, 0x00, // ......D.........
	0x02, 0x00, 0xd9, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xd8, 0x02, 0x00, 0x00, 0xff, 0x00, // ................
	0x01, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xd9, 0x02, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, 0x00, // ................
	0x00, 0x00, 0x8e, 0x03, 0x00, 0x00, 0xd7, 0x02, 0x00, 0x00, 0xd1, 0x02, 0x00, 0x00, 0xd0, 0x02, // ................
	0x00, 0x00, 0xcb, 0x02, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x46, 0x02, // ..............F.
	0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0x8e, 0x03, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, // ..@.............
	0x00, 0x00, 0x47, 0x02, 0x00, 0x00, 0x46, 0x02, 0x00, 0x00, 0x3c, 0x02, 0x00, 0x00, 0xf9, 0x00, // ..G...F...<.....
	0x02, 0x00, 0x48, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x48, 0x02, 0x00, 0x00, 0xf5, 0x00, // ..H.......H.....
	0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x91, 0x03, 0x00, 0x00, 0x8c, 0x03, 0x00, 0x00, 0x0d, 0x02, // ................
	0x00, 0x00, 0x47, 0x02, 0x00, 0x00, 0xd9, 0x02, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x0b, 0x00, // ..G.............
	0x00, 0x00, 0x4a, 0x02, 0x00, 0x00, 0xbf, 0x01, 0x00, 0x00, 0x17, 0x01, 0x00, 0x00, 0x81, 0x00, // ..J.............
	0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, 0x59, 0x01, 0x00, 0x00, 0x4a, 0x02, // ......K...Y...J.
	0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x6c, 0x00, 0x00, 0x00, 0xe1, 0x02, 0x00, 0x00, 0x61, 0x00, // ..V...l.......a.
	0x00, 0x00, 0x5f, 0x00, 0x00, 0x00, 0x58, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xe4, 0x02, // .._...X.........
	0x00, 0x00, 0xe1, 0x02, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xda, 0x00, // ......K.........
	0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x4e, 0x02, 0x00, 0x00, 0xe4, 0x02, // ..O.......N.....
	0x00, 0x00, 0xe4, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, // ................
	0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xfb, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, // ................
	0x03, 0x00, 0xaa, 0x00, 0x00, 0x00, 0xe9, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xe9, 0x02, // ................
	0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0xee, 0x00, 0x00, 0x00, 0xea, 0x02, 0x00, 0x00, 0xeb, 0x00, // ..A.............
	0x00, 0x00, 0xec, 0x00, 0x00, 0x00, 0xed, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, // ..........=.....
	0x00, 0x00, 0xeb, 0x02, 0x00, 0x00, 0xea, 0x02, 0x00, 0x00, 0xb7, 0x00, 0x05, 0x00, 0x90, 0x00, // ................
	0x00, 0x00, 0xec, 0x02, 0x00, 0x00, 0xeb, 0x02, 0x00, 0x00, 0xda, 0x00, 0x00, 0x00, 0xf7, 0x00, // ................
	0x03, 0x00, 0xfa, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xec, 0x02, // ................
	0x00, 0x00, 0xed, 0x02, 0x00, 0x00, 0xf3, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xf3, 0x02, // ................
	0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf5, 0x02, 0x00, 0x00, 0xe4, 0x02, // ..Q.............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xf5, 0x00, 0x00, 0x00, 0xf6, 0x02, // ......A.........
	0x00, 0x00, 0xeb, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, // ......h...=.....
	0x00, 0x00, 0xf7, 0x02, 0x00, 0x00, 0xf6, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, // ..........O.....
	0x00, 0x00, 0xf8, 0x02, 0x00, 0x00, 0xf7, 0x02, 0x00, 0x00, 0xf7, 0x02, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, // ................
	0x00, 0x00, 0xf9, 0x02, 0x00, 0x00, 0xf8, 0x02, 0x00, 0x00, 0xf5, 0x02, 0x00, 0x00, 0xf9, 0x00, // ................
	0x02, 0x00, 0xfb, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xed, 0x02, 0x00, 0x00, 0x41, 0x00, // ..............A.
	0x05, 0x00, 0xf5, 0x00, 0x00, 0x00, 0xef, 0x02, 0x00, 0x00, 0xeb, 0x00, 0x00, 0x00, 0x68, 0x00, // ..............h.
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xf0, 0x02, 0x00, 0x00, 0xef, 0x02, // ..=.............
	0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xf1, 0x02, 0x00, 0x00, 0xf0, 0x02, // ..O.............
	0x00, 0x00, 0xf0, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, // ................
	0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xf2, 0x02, 0x00, 0x00, 0x4e, 0x02, // ..............N.
	0x00, 0x00, 0xf1, 0x02, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xfb, 0x02, 0x00, 0x00, 0xf8, 0x00, // ................
	0x02, 0x00, 0xfa, 0x02, 0x00, 0x00, 0xff, 0x00, 0x01, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xfb, 0x02, // ................
	0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x8f, 0x03, 0x00, 0x00, 0xf9, 0x02, // ................
	0x00, 0x00, 0xf3, 0x02, 0x00, 0x00, 0xf2, 0x02, 0x00, 0x00, 0xed, 0x02, 0x00, 0x00, 0x41, 0x00, // ..............A.
	0x06, 0x00, 0xee, 0x00, 0x00, 0x00, 0x50, 0x02, 0x00, 0x00, 0xeb, 0x00, 0x00, 0x00, 0x68, 0x00, // ......P.......h.
	0x00, 0x00, 0xed, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x51, 0x02, // ......=.......Q.
	0x00, 0x00, 0x50, 0x02, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x53, 0x02, // ..P...........S.
	0x00, 0x00, 0x8f, 0x03, 0x00, 0x00, 0x51, 0x02, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, 0x00, // ......Q.........
	0x00, 0x00, 0x55, 0x02, 0x00, 0x00, 0x91, 0x03, 0x00, 0x00, 0x53, 0x02, 0x00, 0x00, 0x41, 0x00, // ..U.......S...A.
	0x06, 0x00, 0xee, 0x00, 0x00, 0x00, 0x56, 0x02, 0x00, 0x00, 0xeb, 0x00, 0x00, 0x00, 0xec, 0x00, // ......V.........
	0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x57, 0x02, // ......=.......W.
	0x00, 0x00, 0x56, 0x02, 0x00, 0x00, 0xb7, 0x00, 0x05, 0x00, 0x90, 0x00, 0x00, 0x00, 0x58, 0x02, // ..V...........X.
	0x00, 0x00, 0x57, 0x02, 0x00, 0x00, 0xda, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x6d, 0x02, // ..W...........m.
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x58, 0x02, 0x00, 0x00, 0x59, 0x02, // ..........X...Y.
	0x00, 0x00, 0x6d, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x59, 0x02, 0x00, 0x00, 0x56, 0x00, // ..m.......Y...V.
	0x05, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x5b, 0x00, 0x00, 0x00, 0x59, 0x00, // ..l.......[...Y.
	0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x05, 0x03, 0x00, 0x00, 0x03, 0x03, // ..W.............
	0x00, 0x00, 0xbc, 0x01, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xf5, 0x00, 0x00, 0x00, 0x5d, 0x02, // ......A.......].
	0x00, 0x00, 0xeb, 0x00, 0x00, 0x00, 0x76, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, // ......v...=.....
	0x00, 0x00, 0x5e, 0x02, 0x00, 0x00, 0x5d, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, // ..^...]...O.....
	0x00, 0x00, 0x5f, 0x02, 0x00, 0x00, 0x5e, 0x02, 0x00, 0x00, 0x5e, 0x02, 0x00, 0x00, 0x00, 0x00, // .._...^...^.....
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, 0x00, // ................
	0x00, 0x00, 0x61, 0x02, 0x00, 0x00, 0x5f, 0x02, 0x00, 0x00, 0x8f, 0x03, 0x00, 0x00, 0x41, 0x00, // ..a..._.......A.
	0x06, 0x00, 0xee, 0x00, 0x00, 0x00, 0x62, 0x02, 0x00, 0x00, 0xeb, 0x00, 0x00, 0x00, 0x76, 0x01, // ......b.......v.
	0x00, 0x00, 0xed, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x63, 0x02, // ......=.......c.
	0x00, 0x00, 0x62, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x65, 0x02, // ..b...Q.......e.
	0x00, 0x00, 0x05, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, // ................
	0x00, 0x00, 0x66, 0x02, 0x00, 0x00, 0x63, 0x02, 0x00, 0x00, 0x65, 0x02, 0x00, 0x00, 0x50, 0x00, // ..f...c...e...P.
	0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x67, 0x02, 0x00, 0x00, 0x66, 0x02, 0x00, 0x00, 0x66, 0x02, // ......g...f...f.
	0x00, 0x00, 0x66, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x0b, 0x03, // ..f.............
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x55, 0x02, 0x00, 0x00, 0x61, 0x02, // ..........U...a.
	0x00, 0x00, 0x67, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x6b, 0x02, // ..g...O.......k.
	0x00, 0x00, 0x05, 0x03, 0x00, 0x00, 0x05, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, // ................
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x6c, 0x02, // ..............l.
	0x00, 0x00, 0x0b, 0x03, 0x00, 0x00, 0x6b, 0x02, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x6d, 0x02, // ......k.......m.
	0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x6d, 0x02, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, 0x00, // ......m.........
	0x00, 0x00, 0x92, 0x03, 0x00, 0x00, 0x55, 0x02, 0x00, 0x00, 0xfb, 0x02, 0x00, 0x00, 0x6c, 0x02, // ......U.......l.
	0x00, 0x00, 0x59, 0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0xee, 0x00, 0x00, 0x00, 0x6e, 0x02, // ..Y...A.......n.
	0x00, 0x00, 0xeb, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0xed, 0x00, 0x00, 0x00, 0x3d, 0x00, // ......d.......=.
	0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6f, 0x02, 0x00, 0x00, 0x6e, 0x02, 0x00, 0x00, 0xb4, 0x00, // ......o...n.....
	0x05, 0x00, 0x90, 0x00, 0x00, 0x00, 0x70, 0x02, 0x00, 0x00, 0x6f, 0x02, 0x00, 0x00, 0xda, 0x00, // ......p...o.....
	0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x90, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, // ................
	0x04, 0x00, 0x70, 0x02, 0x00, 0x00, 0x71, 0x02, 0x00, 0x00, 0x77, 0x02, 0x00, 0x00, 0xf8, 0x00, // ..p...q...w.....
	0x02, 0x00, 0x77, 0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0xee, 0x00, 0x00, 0x00, 0x78, 0x02, // ..w...A.......x.
	0x00, 0x00, 0xeb, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0xed, 0x00, 0x00, 0x00, 0x3d, 0x00, // ......d.......=.
	0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x79, 0x02, 0x00, 0x00, 0x78, 0x02, 0x00, 0x00, 0xb4, 0x00, // ......y...x.....
	0x05, 0x00, 0x90, 0x00, 0x00, 0x00, 0x7a, 0x02, 0x00, 0x00, 0x79, 0x02, 0x00, 0x00, 0xc8, 0x00, // ......z...y.....
	0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x8f, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, // ................
	0x04, 0x00, 0x7a, 0x02, 0x00, 0x00, 0x7b, 0x02, 0x00, 0x00, 0x82, 0x02, 0x00, 0x00, 0xf8, 0x00, // ..z...{.........
	0x02, 0x00, 0x82, 0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0xee, 0x00, 0x00, 0x00, 0x83, 0x02, // ......A.........
	0x00, 0x00, 0xeb, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0xed, 0x00, 0x00, 0x00, 0x3d, 0x00, // ......d.......=.
	0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x84, 0x02, 0x00, 0x00, 0x83, 0x02, 0x00, 0x00, 0xb4, 0x00, // ................
	0x05, 0x00, 0x90, 0x00, 0x00, 0x00, 0x85, 0x02, 0x00, 0x00, 0x84, 0x02, 0x00, 0x00, 0xa4, 0x01, // ................
	0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x8e, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, // ................
	0x04, 0x00, 0x85, 0x02, 0x00, 0x00, 0x86, 0x02, 0x00, 0x00, 0x8e, 0x02, 0x00, 0x00, 0xf8, 0x00, // ................
	0x02, 0x00, 0x86, 0x02, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1e, 0x03, // ................
	0x00, 0x00, 0x92, 0x03, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, // ................
	0x00, 0x00, 0x1f, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x1e, 0x03, // ..........%.....
	0x00, 0x00, 0xc2, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x22, 0x03, // ..............".
	0x00, 0x00, 0x1f, 0x03, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, // ................
	0x00, 0x00, 0x23, 0x03, 0x00, 0x00, 0x22, 0x03, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x81, 0x00, // ..#...".........
	0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x25, 0x03, 0x00, 0x00, 0x1f, 0x03, 0x00, 0x00, 0xc8, 0x00, // ......%.........
	0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x26, 0x03, 0x00, 0x00, 0x23, 0x03, // ..........&...#.
	0x00, 0x00, 0x25, 0x03, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x27, 0x03, // ..%...........'.
	0x00, 0x00, 0x92, 0x03, 0x00, 0x00, 0x26, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, // ......&...Q.....
	0x00, 0x00, 0x2e, 0x03, 0x00, 0x00, 0x27, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbc, 0x00, // ......'.........
	0x05, 0x00, 0x90, 0x00, 0x00, 0x00, 0x40, 0x03, 0x00, 0x00, 0x2e, 0x03, 0x00, 0x00, 0x8f, 0x00, // ......@.........
	0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x49, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, // ......I.........
	0x04, 0x00, 0x40, 0x03, 0x00, 0x00, 0x41, 0x03, 0x00, 0x00, 0x44, 0x03, 0x00, 0x00, 0xf8, 0x00, // ..@...A...D.....
	0x02, 0x00, 0x44, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x03, // ..D...........F.
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x2e, 0x03, 0x00, 0x00, 0x9b, 0x00, // ................
	0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x47, 0x03, 0x00, 0x00, 0x99, 0x00, // ..........G.....
	0x00, 0x00, 0x46, 0x03, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x48, 0x03, // ..F...........H.
	0x00, 0x00, 0x47, 0x03, 0x00, 0x00, 0x9e, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x49, 0x03, // ..G...........I.
	0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x41, 0x03, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, // ......A.........
	0x00, 0x00, 0x43, 0x03, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x2e, 0x03, 0x00, 0x00, 0xf9, 0x00, // ..C.............
	0x02, 0x00, 0x49, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x49, 0x03, 0x00, 0x00, 0xf5, 0x00, // ..I.......I.....
	0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x93, 0x03, 0x00, 0x00, 0x48, 0x03, 0x00, 0x00, 0x44, 0x03, // ..........H...D.
	0x00, 0x00, 0x43, 0x03, 0x00, 0x00, 0x41, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, // ..C...A...Q.....
	0x00, 0x00, 0x31, 0x03, 0x00, 0x00, 0x27, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xbc, 0x00, // ..1...'.........
	0x05, 0x00, 0x90, 0x00, 0x00, 0x00, 0x54, 0x03, 0x00, 0x00, 0x31, 0x03, 0x00, 0x00, 0x8f, 0x00, // ......T...1.....
	0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x5d, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, // ......].........
	0x04, 0x00, 0x54, 0x03, 0x00, 0x00, 0x55, 0x03, 0x00, 0x00, 0x58, 0x03, 0x00, 0x00, 0xf8, 0x00, // ..T...U...X.....
	0x02, 0x00, 0x58, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5a, 0x03, // ..X...........Z.
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x31, 0x03, 0x00, 0x00, 0x9b, 0x00, // ..........1.....
	0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5b, 0x03, 0x00, 0x00, 0x99, 0x00, // ..........[.....
	0x00, 0x00, 0x5a, 0x03, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5c, 0x03, // ..Z.............
	0x00, 0x00, 0x5b, 0x03, 0x00, 0x00, 0x9e, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x5d, 0x03, // ..[...........].
	0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x55, 0x03, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, // ......U.........
	0x00, 0x00, 0x57, 0x03, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x31, 0x03, 0x00, 0x00, 0xf9, 0x00, // ..W.......1.....
	0x02, 0x00, 0x5d, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x5d, 0x03, 0x00, 0x00, 0xf5, 0x00, // ..].......].....
	0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x94, 0x03, 0x00, 0x00, 0x5c, 0x03, 0x00, 0x00, 0x58, 0x03, // ..............X.
	0x00, 0x00, 0x57, 0x03, 0x00, 0x00, 0x55, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, // ..W...U...Q.....
	0x00, 0x00, 0x34, 0x03, 0x00, 0x00, 0x27, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xbc, 0x00, // ..4...'.........
	0x05, 0x00, 0x90, 0x00, 0x00, 0x00, 0x68, 0x03, 0x00, 0x00, 0x34, 0x03, 0x00, 0x00, 0x8f, 0x00, // ......h...4.....
	0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x71, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, // ......q.........
	0x04, 0x00, 0x68, 0x03, 0x00, 0x00, 0x69, 0x03, 0x00, 0x00, 0x6c, 0x03, 0x00, 0x00, 0xf8, 0x00, // ..h...i...l.....
	0x02, 0x00, 0x6c, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6e, 0x03, // ..l...........n.
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x34, 0x03, 0x00, 0x00, 0x9b, 0x00, // ..........4.....
	0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6f, 0x03, 0x00, 0x00, 0x99, 0x00, // ..........o.....
	0x00, 0x00, 0x6e, 0x03, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x70, 0x03, // ..n...........p.
	0x00, 0x00, 0x6f, 0x03, 0x00, 0x00, 0x9e, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x71, 0x03, // ..o...........q.
	0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x69, 0x03, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, // ......i.........
	0x00, 0x00, 0x6b, 0x03, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x34, 0x03, 0x00, 0x00, 0xf9, 0x00, // ..k.......4.....
	0x02, 0x00, 0x71, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x71, 0x03, 0x00, 0x00, 0xf5, 0x00, // ..q.......q.....
	0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x95, 0x03, 0x00, 0x00, 0x70, 0x03, 0x00, 0x00, 0x6c, 0x03, // ..........p...l.
	0x00, 0x00, 0x6b, 0x03, 0x00, 0x00, 0x69, 0x03, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, // ..k...i...P.....
	0x00, 0x00, 0x8d, 0x02, 0x00, 0x00, 0x93, 0x03, 0x00, 0x00, 0x94, 0x03, 0x00, 0x00, 0x95, 0x03, // ................
	0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x8e, 0x02, 0x00, 0x00, 0xf8, 0x00, // ................
	0x02, 0x00, 0x8e, 0x02, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x98, 0x03, // ................
	0x00, 0x00, 0x9c, 0x03, 0x00, 0x00, 0x82, 0x02, 0x00, 0x00, 0x8d, 0x02, 0x00, 0x00, 0x71, 0x03, // ..............q.
	0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x8f, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x7b, 0x02, // ..............{.
	0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x03, 0x00, 0x00, 0x92, 0x03, // ................
	0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x11, 0x03, // ................
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x10, 0x03, 0x00, 0x00, 0xc2, 0x00, // ......%.........
	0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x14, 0x03, 0x00, 0x00, 0x11, 0x03, // ................
	0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x15, 0x03, // ................
	0x00, 0x00, 0x14, 0x03, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, // ................
	0x00, 0x00, 0x17, 0x03, 0x00, 0x00, 0x11, 0x03, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x88, 0x00, // ................
	0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x18, 0x03, 0x00, 0x00, 0x15, 0x03, 0x00, 0x00, 0x17, 0x03, // ................
	0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x19, 0x03, 0x00, 0x00, 0x92, 0x03, // ................
	0x00, 0x00, 0x18, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7e, 0x02, // ......Q.......~.
	0x00, 0x00, 0x19, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, // ..........Q.....
	0x00, 0x00, 0x7f, 0x02, 0x00, 0x00, 0x19, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, // ..............Q.
	0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x80, 0x02, 0x00, 0x00, 0x19, 0x03, 0x00, 0x00, 0x02, 0x00, // ................
	0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x81, 0x02, 0x00, 0x00, 0x7e, 0x02, // ..P...........~.
	0x00, 0x00, 0x7f, 0x02, 0x00, 0x00, 0x80, 0x02, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0xf9, 0x00, // ................
	0x02, 0x00, 0x8f, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x8f, 0x02, 0x00, 0x00, 0xf5, 0x00, // ................
	0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x97, 0x03, 0x00, 0x00, 0x98, 0x03, 0x00, 0x00, 0x8e, 0x02, // ................
	0x00, 0x00, 0x81, 0x02, 0x00, 0x00, 0x7b, 0x02, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x90, 0x02, // ......{.........
	0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x71, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, // ......q...Q.....
	0x00, 0x00, 0x73, 0x02, 0x00, 0x00, 0x92, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, // ..s...........Q.
	0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x74, 0x02, 0x00, 0x00, 0x92, 0x03, 0x00, 0x00, 0x01, 0x00, // ......t.........
	0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x75, 0x02, 0x00, 0x00, 0x92, 0x03, // ..Q.......u.....
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x76, 0x02, // ......P.......v.
	0x00, 0x00, 0x73, 0x02, 0x00, 0x00, 0x74, 0x02, 0x00, 0x00, 0x75, 0x02, 0x00, 0x00, 0xc8, 0x00, // ..s...t...u.....
	0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x90, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x90, 0x02, // ................
	0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x96, 0x03, 0x00, 0x00, 0x97, 0x03, // ................
	0x00, 0x00, 0x8f, 0x02, 0x00, 0x00, 0x76, 0x02, 0x00, 0x00, 0x71, 0x02, 0x00, 0x00, 0x3e, 0x00, // ......v...q...>.
	0x03, 0x00, 0xcd, 0x01, 0x00, 0x00, 0x96, 0x03, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, // ..............8.
	0x01, 0x00, 0x00, 0x00, 0x50, 0x00,                                                             // ....P.
};
static const bgfx::EmbeddedShader fs_display_dmd_clip = BGFX_EMBEDDED_SHADER(fs_display_dmd_clip);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of fragment shader from fs_display.sc to fs_display_alphaseg_clip with options: ALPHASEG CLIP
static const uint8_t fs_display_alphaseg_clip_mtl[6868] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4e, 0xbd, 0x0b, 0x9f, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x11, 0x64, // FSH.N..........d
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // isplayTexSampler
	0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x64, 0x69, 0x73, 0x70, 0x6c, // ...........displ
	0x61, 0x79, 0x54, 0x65, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, // ayTexTexture....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, // .......displayGl
	0x61, 0x73, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, // assSampler......
	0x00, 0x00, 0x00, 0x00, 0x13, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, // .....displayGlas
	0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // sTexture........
	0x00, 0x00, 0x11, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, // ...staticColor_A
	0x6c, 0x70, 0x68, 0x61, 0x12, 0x01, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x76, // lpha...........v
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, // Color_Intensity.
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, // ..........alphaS
	0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x04, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, // egState..@......
	0x00, 0x0a, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x01, 0x30, 0x00, // ..w_h_height..0.
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, // .......glassAmbi
	0x65, 0x6e, 0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x01, 0x20, // ent_Roughness.. 
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, // ........displayT
	0x65, 0x78, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x64, 0x69, 0x73, // ex...........dis
	0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // playGlass.......
	0x00, 0x00, 0x00, 0x99, 0x19, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, // .......#include 
	0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, // <metal_stdlib>.#
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, // include <simd/si
	0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, // md.h>..using nam
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, // espace metal;..s
	0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, // truct _Global.{.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, //     float4 vColo
	0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, // r_Intensity;.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, //  float4 staticCo
	0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // lor_Alpha;.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, // loat4 glassAmbie
	0x6e, 0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x20, 0x20, // nt_Roughness;.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, //   float4 w_h_hei
	0x67, 0x68, 0x74, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // ght;.    float4 
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x34, 0x5d, // alphaSegState[4]
	0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x66, // ;.};..constant f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x32, 0x38, 0x31, 0x20, 0x3d, 0x20, 0x7b, 0x7d, // loat4 _1281 = {}
	0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, // ;..struct xlatMt
	0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // lMain_out.{.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, // float4 bgfx_Frag
	0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, // Data0 [[color(0)
	0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, // ]];.};..struct x
	0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, // latMtlMain_in.{.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x63, 0x6c, 0x69, 0x70, //     float v_clip
	0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, // Distance [[user(
	0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // locn0)]];.    fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, // oat2 v_texcoord0
	0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, //  [[user(locn1)]]
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x5f, 0x74, // ;.    float2 v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, // excoord1 [[user(
	0x6c, 0x6f, 0x63, 0x6e, 0x32, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x66, 0x72, // locn2)]];.};..fr
	0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // agment xlatMtlMa
	0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // in_out xlatMtlMa
	0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, // in(xlatMtlMain_i
	0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, // n in [[stage_in]
	0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, // ], constant _Glo
	0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, // bal& _mtl_u [[bu
	0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // ffer(0)]], textu
	0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x64, 0x69, 0x73, 0x70, // re2d<float> disp
	0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // layTex [[texture
	0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, // (0)]], texture2d
	0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, // <float> displayG
	0x6c, 0x61, 0x73, 0x73, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x31, // lass [[texture(1
	0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x64, 0x69, 0x73, // )]], sampler dis
	0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, // playTexSampler [
	0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, // [sampler(0)]], s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, // ampler displayGl
	0x61, 0x73, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, // assSampler [[sam
	0x70, 0x6c, 0x65, 0x72, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, // pler(1)]]).{.   
	0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, //  xlatMtlMain_out
	0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, //  out = {};.    i
	0x66, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, 0x74, // f (in.v_clipDist
	0x61, 0x6e, 0x63, 0x65, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // ance < 0.0).    
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, // {.        discar
	0x64, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x28, 0x29, 0x3b, 0x0a, 0x20, 0x20, // d_fragment();.  
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, //   }.    float4 _
	0x37, 0x38, 0x32, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, // 782 = displayTex
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, // .sample(displayT
	0x65, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // exSampler, float
	0x32, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, // 2(in.v_texcoord1
	0x2e, 0x78, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, // .x * 0.25, in.v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x20, // texcoord1.y));. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x37, 0x30, 0x38, 0x20, 0x3d, //    float4 _708 =
	0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, //  smoothstep(floa
	0x74, 0x34, 0x28, 0x30, 0x2e, 0x34, 0x37, 0x34, 0x39, 0x39, 0x39, 0x39, 0x39, 0x34, 0x30, 0x33, // t4(0.47499999403
	0x39, 0x35, 0x33, 0x35, 0x35, 0x32, 0x32, 0x34, 0x36, 0x30, 0x39, 0x33, 0x37, 0x35, 0x29, 0x2c, // 95355224609375),
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x35, 0x32, 0x34, 0x39, 0x39, 0x39, //  float4(0.524999
	0x39, 0x37, 0x36, 0x31, 0x35, 0x38, 0x31, 0x34, 0x32, 0x30, 0x38, 0x39, 0x38, 0x34, 0x33, 0x37, // 9761581420898437
	0x35, 0x29, 0x2c, 0x20, 0x5f, 0x37, 0x38, 0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // 5), _782);.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x38, 0x37, 0x38, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x73, // loat4 _878 = dis
	0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x64, // playTex.sample(d
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // isplayTexSampler
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, // , float2((in.v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, // excoord1.x * 0.2
	0x35, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, // 5) + 0.25, in.v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x20, // texcoord1.y));. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x38, 0x30, 0x34, 0x20, 0x3d, //    float4 _804 =
	0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, //  smoothstep(floa
	0x74, 0x34, 0x28, 0x30, 0x2e, 0x34, 0x37, 0x34, 0x39, 0x39, 0x39, 0x39, 0x39, 0x34, 0x30, 0x33, // t4(0.47499999403
	0x39, 0x35, 0x33, 0x35, 0x35, 0x32, 0x32, 0x34, 0x36, 0x30, 0x39, 0x33, 0x37, 0x35, 0x29, 0x2c, // 95355224609375),
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x35, 0x32, 0x34, 0x39, 0x39, 0x39, //  float4(0.524999
	0x39, 0x37, 0x36, 0x31, 0x35, 0x38, 0x31, 0x34, 0x32, 0x30, 0x38, 0x39, 0x38, 0x34, 0x33, 0x37, // 9761581420898437
	0x35, 0x29, 0x2c, 0x20, 0x5f, 0x38, 0x37, 0x38, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // 5), _878);.    f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x38, 0x33, 0x34, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, // loat3 _834 = (((
	0x28, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, // (((_mtl_u.static
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x20, // Color_Alpha.xyz 
	0x2b, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // + (_mtl_u.vColor
	0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, // _Intensity.xyz *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, //  _mtl_u.alphaSeg
	0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, // State[0].x)) * _
	0x37, 0x30, 0x38, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // 708.x) + ((_mtl_
	0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, // u.staticColor_Al
	0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // pha.xyz + (_mtl_
	0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, // u.vColor_Intensi
	0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // ty.xyz * _mtl_u.
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x30, 0x5d, // alphaSegState[0]
	0x2e, 0x79, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x37, 0x30, 0x38, 0x2e, 0x79, 0x29, 0x29, 0x20, // .y)) * _708.y)) 
	0x2b, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, // + ((_mtl_u.stati
	0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, // cColor_Alpha.xyz
	0x20, 0x2b, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, //  + (_mtl_u.vColo
	0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, // r_Intensity.xyz 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, // * _mtl_u.alphaSe
	0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x30, 0x5d, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x2a, 0x20, // gState[0].z)) * 
	0x5f, 0x37, 0x30, 0x38, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, // _708.z)) + ((_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, // l_u.staticColor_
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x6d, 0x74, // Alpha.xyz + (_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, // l_u.vColor_Inten
	0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // sity.xyz * _mtl_
	0x75, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, // u.alphaSegState[
	0x30, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x37, 0x30, 0x38, 0x2e, 0x77, 0x29, // 0].w)) * _708.w)
	0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, // ) + ((_mtl_u.sta
	0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, // ticColor_Alpha.x
	0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, // yz + (_mtl_u.vCo
	0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, // lor_Intensity.xy
	0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, // z * _mtl_u.alpha
	0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x20, // SegState[1].x)) 
	0x2a, 0x20, 0x5f, 0x38, 0x30, 0x34, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, // * _804.x)) + ((_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, // mtl_u.staticColo
	0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x5f, // r_Alpha.xyz + (_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, // mtl_u.vColor_Int
	0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, // ensity.xyz * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, // l_u.alphaSegStat
	0x65, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x38, 0x30, 0x34, 0x2e, // e[1].y)) * _804.
	0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, // y);.    float4 _
	0x39, 0x37, 0x34, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, // 974 = displayTex
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, // .sample(displayT
	0x65, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // exSampler, float
	0x32, 0x28, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, // 2((in.v_texcoord
	0x31, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, // 1.x * 0.25) + 0.
	0x35, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, // 5, in.v_texcoord
	0x31, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 1.y));.    float
	0x34, 0x20, 0x5f, 0x39, 0x30, 0x30, 0x20, 0x3d, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, // 4 _900 = smooths
	0x74, 0x65, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x34, 0x37, 0x34, // tep(float4(0.474
	0x39, 0x39, 0x39, 0x39, 0x39, 0x34, 0x30, 0x33, 0x39, 0x35, 0x33, 0x35, 0x35, 0x32, 0x32, 0x34, // 9999940395355224
	0x36, 0x30, 0x39, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, // 609375), float4(
	0x30, 0x2e, 0x35, 0x32, 0x34, 0x39, 0x39, 0x39, 0x39, 0x37, 0x36, 0x31, 0x35, 0x38, 0x31, 0x34, // 0.52499997615814
	0x32, 0x30, 0x38, 0x39, 0x38, 0x34, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x39, 0x37, 0x34, // 208984375), _974
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x39, // );.    float3 _9
	0x36, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x5f, 0x38, 0x33, 0x34, 0x20, 0x2b, // 60 = (((((_834 +
	0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, //  ((_mtl_u.static
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x20, // Color_Alpha.xyz 
	0x2b, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // + (_mtl_u.vColor
	0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, // _Intensity.xyz *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, //  _mtl_u.alphaSeg
	0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, // State[1].z)) * _
	0x38, 0x30, 0x34, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // 804.z)) + ((_mtl
	0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, // _u.staticColor_A
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // lpha.xyz + (_mtl
	0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, // _u.vColor_Intens
	0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // ity.xyz * _mtl_u
	0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x31, // .alphaSegState[1
	0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x38, 0x30, 0x34, 0x2e, 0x77, 0x29, 0x29, // ].w)) * _804.w))
	0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, //  + ((_mtl_u.stat
	0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, // icColor_Alpha.xy
	0x7a, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, // z + (_mtl_u.vCol
	0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, // or_Intensity.xyz
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, //  * _mtl_u.alphaS
	0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2a, // egState[2].x)) *
	0x20, 0x5f, 0x39, 0x30, 0x30, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x6d, //  _900.x)) + ((_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // tl_u.staticColor
	0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x6d, // _Alpha.xyz + (_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, // tl_u.vColor_Inte
	0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // nsity.xyz * _mtl
	0x5f, 0x75, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, // _u.alphaSegState
	0x5b, 0x32, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x39, 0x30, 0x30, 0x2e, 0x79, // [2].y)) * _900.y
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, // )) + ((_mtl_u.st
	0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, // aticColor_Alpha.
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, // xyz + (_mtl_u.vC
	0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, // olor_Intensity.x
	0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x61, 0x6c, 0x70, 0x68, // yz * _mtl_u.alph
	0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x32, 0x5d, 0x2e, 0x7a, 0x29, 0x29, // aSegState[2].z))
	0x20, 0x2a, 0x20, 0x5f, 0x39, 0x30, 0x30, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, //  * _900.z)) + ((
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, // _mtl_u.staticCol
	0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, // or_Alpha.xyz + (
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, // _mtl_u.vColor_In
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // tensity.xyz * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, // tl_u.alphaSegSta
	0x74, 0x65, 0x5b, 0x32, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x39, 0x30, 0x30, // te[2].w)) * _900
	0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // .w);.    float4 
	0x5f, 0x31, 0x30, 0x37, 0x30, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, // _1070 = displayT
	0x65, 0x78, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, // ex.sample(displa
	0x79, 0x54, 0x65, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // yTexSampler, flo
	0x61, 0x74, 0x32, 0x28, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, // at2((in.v_texcoo
	0x72, 0x64, 0x31, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x29, 0x20, 0x2b, 0x20, // rd1.x * 0.25) + 
	0x30, 0x2e, 0x37, 0x35, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // 0.75, in.v_texco
	0x6f, 0x72, 0x64, 0x31, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // ord1.y));.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x39, 0x39, 0x36, 0x20, 0x3d, 0x20, 0x73, 0x6d, 0x6f, 0x6f, // oat4 _996 = smoo
	0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, // thstep(float4(0.
	0x34, 0x37, 0x34, 0x39, 0x39, 0x39, 0x39, 0x39, 0x34, 0x30, 0x33, 0x39, 0x35, 0x33, 0x35, 0x35, // 4749999940395355
	0x32, 0x32, 0x34, 0x36, 0x30, 0x39, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 224609375), floa
	0x74, 0x34, 0x28, 0x30, 0x2e, 0x35, 0x32, 0x34, 0x39, 0x39, 0x39, 0x39, 0x37, 0x36, 0x31, 0x35, // t4(0.52499997615
	0x38, 0x31, 0x34, 0x32, 0x30, 0x38, 0x39, 0x38, 0x34, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, // 814208984375), _
	0x31, 0x30, 0x37, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 1070);.    float
	0x34, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x31, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, // 4 _1061 = fast::
	0x6d, 0x61, 0x78, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x66, 0x61, // max(fast::max(fa
	0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, // st::max(fast::ma
	0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, // x(float4(0.0), _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, // mtl_u.alphaSegSt
	0x61, 0x74, 0x65, 0x5b, 0x30, 0x5d, 0x20, 0x2a, 0x20, 0x5f, 0x37, 0x38, 0x32, 0x29, 0x2c, 0x20, // ate[0] * _782), 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, // _mtl_u.alphaSegS
	0x74, 0x61, 0x74, 0x65, 0x5b, 0x31, 0x5d, 0x20, 0x2a, 0x20, 0x5f, 0x38, 0x37, 0x38, 0x29, 0x2c, // tate[1] * _878),
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, //  _mtl_u.alphaSeg
	0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x32, 0x5d, 0x20, 0x2a, 0x20, 0x5f, 0x39, 0x37, 0x34, 0x29, // State[2] * _974)
	0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, // , _mtl_u.alphaSe
	0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x33, 0x5d, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x30, 0x37, // gState[3] * _107
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x36, // 0);.    float _6
	0x30, 0x39, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x66, // 09 = fast::max(f
	0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, // ast::max(fast::m
	0x61, 0x78, 0x28, 0x5f, 0x31, 0x30, 0x36, 0x31, 0x2e, 0x78, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x36, // ax(_1061.x, _106
	0x31, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x31, 0x2e, 0x7a, 0x29, 0x2c, 0x20, // 1.y), _1061.z), 
	0x5f, 0x31, 0x30, 0x36, 0x31, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // _1061.w);.    fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x36, 0x31, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // oat3 _616 = _mtl
	0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, // _u.vColor_Intens
	0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x36, 0x30, 0x39, 0x20, // ity.xyz * (_609 
	0x2a, 0x20, 0x5f, 0x36, 0x30, 0x39, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // * _609);.    flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x36, 0x32, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x5f, // at3 _622 = ((((_
	0x39, 0x36, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x73, // 960 + ((_mtl_u.s
	0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, // taticColor_Alpha
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, // .xyz + (_mtl_u.v
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, // Color_Intensity.
	0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x61, 0x6c, 0x70, // xyz * _mtl_u.alp
	0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x29, // haSegState[3].x)
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x39, 0x39, 0x36, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, // ) * _996.x)) + (
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, // (_mtl_u.staticCo
	0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, // lor_Alpha.xyz + 
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, // (_mtl_u.vColor_I
	0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, // ntensity.xyz * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, // mtl_u.alphaSegSt
	0x61, 0x74, 0x65, 0x5b, 0x33, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x39, 0x39, // ate[3].y)) * _99
	0x36, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 6.y)) + ((_mtl_u
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, // .staticColor_Alp
	0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // ha.xyz + (_mtl_u
	0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, // .vColor_Intensit
	0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x61, // y.xyz * _mtl_u.a
	0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x33, 0x5d, 0x2e, // lphaSegState[3].
	0x7a, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x39, 0x39, 0x36, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x2b, // z)) * _996.z)) +
	0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, //  ((_mtl_u.static
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x20, // Color_Alpha.xyz 
	0x2b, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // + (_mtl_u.vColor
	0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, // _Intensity.xyz *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, //  _mtl_u.alphaSeg
	0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, // State[3].w)) * _
	0x39, 0x39, 0x36, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x36, 0x31, 0x36, 0x20, // 996.w)) + (_616 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, // * _mtl_u.vColor_
	0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, // Intensity.w);.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x33, 0x3b, 0x0a, //   float3 _1273;.
	0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, //     if (_mtl_u.w
	0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, // _h_height.x != 0
	0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .0).    {.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x30, 0x38, 0x37, 0x20, 0x3d, //   float4 _1087 =
	0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x73, 0x61, //  displayGlass.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, // mple(displayGlas
	0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, // sSampler, in.v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // excoord0);.     
	0x20, 0x20, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x33, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, //    _1273 = mix(_
	0x36, 0x32, 0x32, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, 0x6c, 0x61, 0x73, // 622, _mtl_u.glas
	0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, // sAmbient_Roughne
	0x73, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x5f, 0x36, 0x31, 0x36, 0x2c, 0x20, 0x66, // ss.xyz + _616, f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, 0x6c, 0x61, // loat3(_mtl_u.gla
	0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, // ssAmbient_Roughn
	0x65, 0x73, 0x73, 0x2e, 0x77, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x30, 0x38, 0x37, 0x2e, 0x77, 0x29, // ess.w * _1087.w)
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x30, 0x38, 0x37, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, // ) * _1087.xyz;. 
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, //    }.    else.  
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x32, 0x37, //   {.        _127
	0x33, 0x20, 0x3d, 0x20, 0x5f, 0x36, 0x32, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, // 3 = _622;.    }.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x37, //     float4 _1277
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // ;.    if (_mtl_u
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, // .staticColor_Alp
	0x68, 0x61, 0x2e, 0x77, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, // ha.w == 0.0).   
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x37, //  {.        _1277
	0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x32, 0x37, 0x33, 0x2c, //  = float4(_1273,
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, //  1.0);.    }.   
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  else.    {.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x38, //     float4 _1278
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, // ;.        if (_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // tl_u.staticColor
	0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x29, // _Alpha.w == 1.0)
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .        {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x30, //        float _10
	0x39, 0x39, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x69, 0x6e, 0x28, 0x64, // 99 = fast::min(d
	0x6f, 0x74, 0x28, 0x5f, 0x31, 0x32, 0x37, 0x33, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // ot(_1273, float3
	0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x33, 0x39, 0x39, 0x35, 0x39, 0x34, 0x33, 0x30, // (0.1762039959430
	0x36, 0x39, 0x34, 0x35, 0x38, 0x30, 0x30, 0x37, 0x38, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, // 694580078125, 0.
	0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x30, 0x30, 0x32, 0x39, 0x39, 0x34, 0x35, 0x33, 0x37, 0x33, // 8129850029945373
	0x35, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, // 53515625, 0.0108
	0x31, 0x30, 0x38, 0x39, 0x39, 0x35, 0x34, 0x38, 0x32, 0x33, 0x32, 0x35, 0x35, 0x35, 0x33, 0x38, // 1089954823255538
	0x39, 0x34, 0x30, 0x34, 0x32, 0x39, 0x36, 0x38, 0x37, 0x35, 0x29, 0x29, 0x2c, 0x20, 0x31, 0x30, // 9404296875)), 10
	0x30, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 00.0);.         
	0x20, 0x20, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x38, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //    _1278 = float
	0x34, 0x28, 0x5f, 0x31, 0x32, 0x37, 0x33, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x31, 0x30, // 4(_1273 * (((_10
	0x39, 0x39, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, // 99 * 0.25) + 1.0
	0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x39, 0x39, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, // ) / (_1099 + 1.0
	0x29, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // )), 1.0);.      
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, //   }.        else
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .        {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, //        float4 _1
	0x32, 0x37, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 279;.           
	0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, //  if (_mtl_u.stat
	0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, 0x20, // icColor_Alpha.w 
	0x3d, 0x3d, 0x20, 0x32, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // == 2.0).        
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x31, 0x31, //       float _111
	0x33, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x69, 0x6e, 0x28, 0x64, 0x6f, // 3 = fast::min(do
	0x74, 0x28, 0x5f, 0x31, 0x32, 0x37, 0x33, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // t(_1273, float3(
	0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x33, 0x39, 0x39, 0x35, 0x39, 0x34, 0x33, 0x30, 0x36, // 0.17620399594306
	0x39, 0x34, 0x35, 0x38, 0x30, 0x30, 0x37, 0x38, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x38, // 94580078125, 0.8
	0x31, 0x32, 0x39, 0x38, 0x35, 0x30, 0x30, 0x32, 0x39, 0x39, 0x34, 0x35, 0x33, 0x37, 0x33, 0x35, // 1298500299453735
	0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, // 3515625, 0.01081
	0x30, 0x38, 0x39, 0x39, 0x35, 0x34, 0x38, 0x32, 0x33, 0x32, 0x35, 0x35, 0x35, 0x33, 0x38, 0x39, // 0899548232555389
	0x34, 0x30, 0x34, 0x32, 0x39, 0x36, 0x38, 0x37, 0x35, 0x29, 0x29, 0x2c, 0x20, 0x31, 0x30, 0x30, // 404296875)), 100
	0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0.0);.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x31, //       float3 _11
	0x32, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x33, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x28, // 21 = _1273 * (((
	0x5f, 0x31, 0x31, 0x31, 0x33, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x29, 0x20, 0x2b, 0x20, // _1113 * 0.25) + 
	0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x31, 0x33, 0x20, 0x2b, 0x20, // 1.0) / (_1113 + 
	0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1.0));.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x31, //        float _11
	0x32, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x31, 0x32, 0x31, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, // 24 = _1121.x;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // oat _1274;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, //            if (_
	0x31, 0x31, 0x32, 0x34, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, // 1124 <= 0.003130
	0x38, 0x30, 0x30, 0x30, 0x39, 0x30, 0x37, 0x33, 0x30, 0x31, 0x39, 0x30, 0x32, 0x37, 0x37, 0x30, // 8000907301902770
	0x39, 0x39, 0x36, 0x30, 0x39, 0x33, 0x37, 0x35, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 99609375).      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //           {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x5f, 0x31, 0x32, 0x37, 0x34, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x30, 0x30, 0x30, // _1274 = 12.92000
	0x30, 0x30, 0x37, 0x36, 0x32, 0x39, 0x33, 0x39, 0x34, 0x35, 0x33, 0x31, 0x32, 0x35, 0x20, 0x2a, // 00762939453125 *
	0x20, 0x5f, 0x31, 0x31, 0x32, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1124;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, //           else. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, //                {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x34, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, //      _1274 = (1.
	0x30, 0x35, 0x34, 0x39, 0x39, 0x39, 0x39, 0x34, 0x37, 0x35, 0x34, 0x37, 0x39, 0x31, 0x32, 0x35, // 0549999475479125
	0x39, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x5f, // 9765625 * powr(_
	0x31, 0x31, 0x32, 0x34, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x31, 0x36, 0x36, 0x36, 0x36, 0x36, 0x35, // 1124, 0.41666665
	0x36, 0x37, 0x33, 0x32, 0x35, 0x35, 0x39, 0x32, 0x30, 0x34, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, // 6732559204101562
	0x35, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x34, 0x39, 0x39, 0x39, 0x39, 0x39, // 5)) - 0.05499999
	0x39, 0x37, 0x30, 0x31, 0x39, 0x37, 0x36, 0x37, 0x37, 0x36, 0x31, 0x32, 0x33, 0x30, 0x34, 0x36, // 9701976776123046
	0x38, 0x37, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 875;.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      }.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x31, //        float _11
	0x32, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x31, 0x32, 0x31, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, // 26 = _1121.y;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // oat _1275;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, //            if (_
	0x31, 0x31, 0x32, 0x36, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, // 1126 <= 0.003130
	0x38, 0x30, 0x30, 0x30, 0x39, 0x30, 0x37, 0x33, 0x30, 0x31, 0x39, 0x30, 0x32, 0x37, 0x37, 0x30, // 8000907301902770
	0x39, 0x39, 0x36, 0x30, 0x39, 0x33, 0x37, 0x35, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 99609375).      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //           {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x5f, 0x31, 0x32, 0x37, 0x35, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x30, 0x30, 0x30, // _1275 = 12.92000
	0x30, 0x30, 0x37, 0x36, 0x32, 0x39, 0x33, 0x39, 0x34, 0x35, 0x33, 0x31, 0x32, 0x35, 0x20, 0x2a, // 00762939453125 *
	0x20, 0x5f, 0x31, 0x31, 0x32, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1126;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, //           else. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, //                {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, //      _1275 = (1.
	0x30, 0x35, 0x34, 0x39, 0x39, 0x39, 0x39, 0x34, 0x37, 0x35, 0x34, 0x37, 0x39, 0x31, 0x32, 0x35, // 0549999475479125
	0x39, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x5f, // 9765625 * powr(_
	0x31, 0x31, 0x32, 0x36, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x31, 0x36, 0x36, 0x36, 0x36, 0x36, 0x35, // 1126, 0.41666665
	0x36, 0x37, 0x33, 0x32, 0x35, 0x35, 0x39, 0x32, 0x30, 0x34, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, // 6732559204101562
	0x35, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x34, 0x39, 0x39, 0x39, 0x39, 0x39, // 5)) - 0.05499999
	0x39, 0x37, 0x30, 0x31, 0x39, 0x37, 0x36, 0x37, 0x37, 0x36, 0x31, 0x32, 0x33, 0x30, 0x34, 0x36, // 9701976776123046
	0x38, 0x37, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 875;.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      }.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x31, //        float _11
	0x32, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x31, 0x32, 0x31, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, // 28 = _1121.z;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // oat _1276;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, //            if (_
	0x31, 0x31, 0x32, 0x38, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, // 1128 <= 0.003130
	0x38, 0x30, 0x30, 0x30, 0x39, 0x30, 0x37, 0x33, 0x30, 0x31, 0x39, 0x30, 0x32, 0x37, 0x37, 0x30, // 8000907301902770
	0x39, 0x39, 0x36, 0x30, 0x39, 0x33, 0x37, 0x35, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 99609375).      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //           {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x5f, 0x31, 0x32, 0x37, 0x36, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x30, 0x30, 0x30, // _1276 = 12.92000
	0x30, 0x30, 0x37, 0x36, 0x32, 0x39, 0x33, 0x39, 0x34, 0x35, 0x33, 0x31, 0x32, 0x35, 0x20, 0x2a, // 00762939453125 *
	0x20, 0x5f, 0x31, 0x31, 0x32, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1128;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, //           else. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, //                {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x36, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, //      _1276 = (1.
	0x30, 0x35, 0x34, 0x39, 0x39, 0x39, 0x39, 0x34, 0x37, 0x35, 0x34, 0x37, 0x39, 0x31, 0x32, 0x35, // 0549999475479125
	0x39, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x5f, // 9765625 * powr(_
	0x31, 0x31, 0x32, 0x38, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x31, 0x36, 0x36, 0x36, 0x36, 0x36, 0x35, // 1128, 0.41666665
	0x36, 0x37, 0x33, 0x32, 0x35, 0x35, 0x39, 0x32, 0x30, 0x34, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, // 6732559204101562
	0x35, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x34, 0x39, 0x39, 0x39, 0x39, 0x39, // 5)) - 0.05499999
	0x39, 0x37, 0x30, 0x31, 0x39, 0x37, 0x36, 0x37, 0x37, 0x36, 0x31, 0x32, 0x33, 0x30, 0x34, 0x36, // 9701976776123046
	0x38, 0x37, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 875;.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      }.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x39, 0x20, 0x3d, 0x20, 0x66, //        _1279 = f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x32, 0x37, 0x34, 0x2c, 0x20, 0x5f, 0x31, 0x32, // loat4(_1274, _12
	0x37, 0x35, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x36, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, // 75, _1276, 1.0);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, // .            }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, //            else.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, //             {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, //               _1
	0x32, 0x37, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x38, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 279 = _1281;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          }.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x38, 0x20, 0x3d, 0x20, 0x5f, //        _1278 = _
	0x31, 0x32, 0x37, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, // 1279;.        }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x37, 0x20, 0x3d, 0x20, //         _1277 = 
	0x5f, 0x31, 0x32, 0x37, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, // _1278;.    }.   
	0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, //  out.bgfx_FragDa
	0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, // ta0 = _1277;.   
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, //  return out;.}..
	0x00, 0x00, 0xc0, 0x00,                                                                         // ....
};
static const uint8_t fs_display_alphaseg_clip_essl[8201] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4e, 0xbd, 0x0b, 0x9f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0x1f, // FSH.N...........
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // s.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, // arying in.precis
	0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3b, // ion highp float;
	0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // .precision highp
	0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, //  int;.#define sh
	0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adow2D(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //  _coord) texture
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // (_sampler, _coor
	0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, // d).#define shado
	0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // w2DProj(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // eProj(_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x6f, 0x75, 0x74, 0x20, 0x6d, 0x65, 0x64, 0x69, // _coord).out medi
	0x75, 0x6d, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, // ump vec4 bgfx_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // agColor;.varying
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, //  float v_clipDis
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, // tance;.varying v
	0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, // ec2 v_texcoord0;
	0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, // .varying vec2 v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // texcoord1;.vec3 
	0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, // instMul(vec3 _ve
	0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, // c, mat3 _mtx) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, // return ( (_vec) 
	0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, // * (_mtx) ); }.ve
	0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, // c3 instMul(mat3 
	0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, // _mtx, vec3 _vec)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, //  { return ( (_mt
	0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, // x) * (_vec) ); }
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, // .vec4 instMul(ve
	0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, // c4 _vec, mat4 _m
	0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, // tx) { return ( (
	0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, // _vec) * (_mtx) )
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, // ; }.vec4 instMul
	0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // (mat4 _mtx, vec4
	0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _vec) { return 
	0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, // ( (_mtx) * (_vec
	0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, // ) ); }.float rcp
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // (float _a) { ret
	0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, // urn 1.0/_a; }.ve
	0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, // c2 rcp(vec2 _a) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, // { return vec2(1.
	0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, // 0)/_a; }.vec3 rc
	0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // p(vec3 _a) { ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, // urn vec3(1.0)/_a
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, // ; }.vec4 rcp(vec
	0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // 4 _a) { return v
	0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // ec4(1.0)/_a; }.v
	0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, // ec2 vec2_splat(f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // loat _x) { retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, // n vec2(_x, _x); 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, // }.vec3 vec3_spla
	0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // t(float _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // turn vec3(_x, _x
	0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, // , _x); }.vec4 ve
	0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // c4_splat(float _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, // x) { return vec4
	0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, // (_x, _x, _x, _x)
	0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, // ; }.uvec2 uvec2_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // splat(uint _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, //  return uvec2(_x
	0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, // , _x); }.uvec3 u
	0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, // vec3_splat(uint 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, // _x) { return uve
	0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, // c3(_x, _x, _x); 
	0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, // }.uvec4 uvec4_sp
	0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // lat(uint _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, // eturn uvec4(_x, 
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, // _x, _x, _x); }.m
	0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, // at4 mtxFromRows(
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, // vec4 _0, vec4 _1
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // , vec4 _2, vec4 
	0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, // _3).{.return tra
	0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, // nspose(mat4(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, // _1, _2, _3) );.}
	0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, // .mat4 mtxFromCol
	0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // s(vec4 _0, vec4 
	0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, // _1, vec4 _2, vec
	0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, // 4 _3).{.return m
	0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, // at4(_0, _1, _2, 
	0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, // _3);.}.mat3 mtxF
	0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, // romRows(vec3 _0,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, //  vec3 _1, vec3 _
	0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, // 2).{.return tran
	0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, // spose(mat3(_0, _
	0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, // 1, _2) );.}.mat3
	0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, //  mtxFromCols(vec
	0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, // 3 _0, vec3 _1, v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec3 _2).{.return
	0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, //  mat3(_0, _1, _2
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, // );.}.uniform vec
	0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, // 4 u_viewRect;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // iform vec4 u_vie
	0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // wTexel;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // mat4 u_view;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, // form mat4 u_invV
	0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, // iew;.uniform mat
	0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // 4 u_proj;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, // m mat4 u_invProj
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // _viewProj;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, // rm mat4 u_invVie
	0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // wProj;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, // at4 u_model[32];
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // modelView;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, // rm mat4 u_modelV
	0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // iewProj;.uniform
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, //  vec4 u_alphaRef
	0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x66, 0x6c, // 4;.float sqr( fl
	0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // oat v).{.return 
	0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, 0x28, // v*v;.}.vec2 sqr(
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  vec2 v).{.retur
	0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x71, // n v*v;.}.vec3 sq
	0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // r( vec3 v).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // urn v*v;.}.vec3 
	0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, // mul_w1( vec3 v, 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // mat4 m).{.return
	0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, //  v.x*m[0].xyz + 
	0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, // (v.y*m[1].xyz + 
	0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, // (v.z*m[2].xyz + 
	0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // m[3].xyz));.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, // oat acos_approx_
	0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, // divPI( float v).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, // {.float x = abs(
	0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, // v);.if(1. - x <=
	0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, //  0.0000610351562
	0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, // 5).return (v >= 
	0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x66, // 0.) ? 0. : 1.;.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, // loat res = ((-0.
	0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, // 155972/3.1415926
	0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, // 5358979323846264
	0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, // 33832795) * x + 
	0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // (1.56467/3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, // 6433832795) ) * 
	0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, // sqrt(1. - x);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // turn (v >= 0.) ?
	0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, //  res : 1. - res;
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, // .}.float atan2_a
	0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, // pprox_div2PI( fl
	0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, // oat y, float x).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, // {.float abs_y = 
	0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, // abs(y);.float ab
	0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, // s_x = abs(x);.if
	0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, // (abs_x <= 0.0000
	0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, // 6103515625 && ab
	0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, // s_y <= 0.0000610
	0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 3515625).return 
	0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, // 0.;.float r = (a
	0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, // bs_x - abs_y) / 
	0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, // (abs_x + abs_y);
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, // .float angle = (
	0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, // (x < 0.) ? (3./8
	0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, // .) : (1./8.)).+ 
	0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, // (0.211868 /(2.*3
	0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, // .141592653589793
	0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, // 2384626433832795
	0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, // ) * r * r - 0.98
	0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, // 7305 /(2.*3.1415
	0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, // 9265358979323846
	0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, // 26433832795)) * 
	0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, // ((x < 0.) ? -r :
	0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, //  r);.return (y <
	0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, //  0.) ? -angle : 
	0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, // angle;.}.float a
	0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, // sin_approx_divPI
	0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // ( float v).{.flo
	0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, // at x = abs(v);.i
	0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, // f(1. - x <= 0.00
	0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, // 006103515625).re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // turn (v >= 0.) ?
	0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, //  0.5 : -0.5;.flo
	0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, // at res = ((-0.15
	0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, // 5972/3.141592653
	0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, // 5897932384626433
	0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, // 832795) * x + (1
	0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, // .56467/3.1415926
	0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, // 5358979323846264
	0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, // 33832795) ) * sq
	0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // rt(1. - x);.retu
	0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, // rn (v >= 0.) ? 0
	0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, // .5 - res : -0.5 
	0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, // + res;.}.vec2 ra
	0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, // y_to_equirectang
	0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, // ular_uv( vec3 ra
	0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, // y).{.return vec2
	0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, // (.0.5 + atan2_ap
	0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, // prox_div2PI(ray.
	0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, // y, ray.x),.acos_
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, // approx_divPI(ray
	0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, // .z));.}.float In
	0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, // vsRGB( float col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // or).{.if (color 
	0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, // <= 0.04045).retu
	0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, // rn color * (1.0/
	0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, // 12.92);.else.ret
	0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, // urn pow(color * 
	0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, // (1.0/1.055) + (0
	0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, // .055/1.055), 2.4
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, // );.}.float InvRe
	0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // c709( float colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, // r).{.if (color <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // = 0.081).return 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, // color * (1.0/4.5
	0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, // );.else.return p
	0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, // ow(color * (1.0/
	0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, // 1.099) + (0.099/
	0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, // 1.099), 1.0/0.45
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, // );.}.float InvGa
	0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // mma( float color
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, // ).{.return InvsR
	0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // GB(color);.}.vec
	0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, // 3 InvGamma( vec3
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  color).{.return
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, //  vec3(InvGamma(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, // olor.x),InvGamma
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // (color.y),InvGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // ma(color.z));.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, // vec3 InvToneMap(
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, //  vec3 color).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, // loat inv_2bh = 0
	0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, // .5/0.25;.float b
	0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, // h = 4.0*0.25 - 2
	0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .0;.return (colo
	0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x63, // r - 1.0 + sqrt(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, // olor*(color + bh
	0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, // ) + 1.0))*inv_2b
	0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, // h;.}.float sRGB(
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, //  float f).{.floa
	0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, // t s;.if (f <= 0.
	0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, // 0031308).s = 12.
	0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, // 92 * f;.else.s =
	0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, //  1.055 * pow(f, 
	0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, // 1.0/2.4) - 0.055
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // ;.return s;.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, // oat Rec709( floa
	0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, // t f).{.float s;.
	0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, // if (f <= 0.018).
	0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, // s = 4.5 * f;.els
	0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, // e.s = 1.099 * po
	0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, // w(f, 0.45) - 0.0
	0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, // 99;.return s;.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, // float FBGamma( f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // loat color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // turn sRGB(color)
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, // ;.}.vec2 FBGamma
	0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // ( vec2 color).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x46, 0x42, 0x47, 0x61, // return vec2(FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, // mma(color.x),FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, // amma(color.y));.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, // }.vec3 FBGamma( 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // vec3 color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // turn vec3(FBGamm
	0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, // a(color.x),FBGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, // ma(color.y),FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, // mma(color.z));.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x32, 0x32, 0x28, // .vec3 FBGamma22(
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, //  vec3 color).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x70, 0x6f, 0x77, 0x28, 0x63, // eturn vec3(pow(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, // olor.x, 1.0/2.2)
	0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x2c, 0x20, 0x31, 0x2e, // ,pow(color.y, 1.
	0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // 0/2.2),pow(color
	0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x29, 0x3b, 0x0a, 0x7d, // .z, 1.0/2.2));.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, // .float FBToneMap
	0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // ( float l).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, // urn l * ((l*0.25
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, //  + 1.0) / (l + 1
	0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, // .0));.}.vec2 FBT
	0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, // oneMap( vec2 col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, // or).{.float l = 
	0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, // dot(color,vec2(0
	0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, // .176204+0.010810
	0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, // 9*0.5,0.812985+0
	0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, // .0108109*0.5));.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, // return color * (
	0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, // (l*0.25 + 1.0) /
	0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, //  (l + 1.0));.}.v
	0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, // ec3 FBToneMap( v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // ec3 color).{.flo
	0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // at l = dot(color
	0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, // ,vec3(0.176204,0
	0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, // .812985,0.010810
	0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // 9));.return colo
	0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, // r * ((l*0.25 + 1
	0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, // .0) / (l + 1.0))
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x76, // ;.}.vec4 Additiv
	0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, // e( vec4 cBase, v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ec4 cBlend, floa
	0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // t percent).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, // urn cBase + cBle
	0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // nd*percent;.}.ve
	0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, // c3 Screen ( vec3
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, //  cBase, vec3 cBl
	0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, // end).{.return 1.
	0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // 0 - (1.0 - cBase
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // ) * (1.0 - cBlen
	0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, // d);.}.vec4 Scree
	0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, // n ( vec4 cBase, 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // vec4 cBlend).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, // eturn 1.0 - (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, //  - cBase) * (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, //  - cBlend);.}.ve
	0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, // c3 ScreenHDR ( v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // ec3 cBase, vec3 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // cBlend).{.return
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, //  max(1.0 - (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // - cBase) * (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // - cBlend), vec3(
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // 0.,0.,0.));.}.ve
	0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, // c4 ScreenHDR ( v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // ec4 cBase, vec4 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // cBlend).{.return
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, //  max(1.0 - (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // - cBase) * (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // - cBlend), vec4(
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, // 0.,0.,0.,0.));.}
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, // .vec4 Multiply (
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, //  vec4 cBase, vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 4 cBlend, float 
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // percent).{.retur
	0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // n cBase * cBlend
	0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // *percent;.}.vec4
	0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, //  Overlay ( vec4 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, // cBase, vec4 cBle
	0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, // nd).{.vec4 cNew 
	0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, // = step(0.5, cBas
	0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, // e);.cNew = mix(c
	0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, // Base*cBlend*2.0,
	0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, //  1.0-2.0*(1.0-cB
	0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // ase)*(1.0-cBlend
	0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ), cNew);.return
	0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, //  cNew;.}.vec4 Ov
	0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // erlayHDR ( vec4 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, // cBase, vec4 cBle
	0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, // nd).{.vec4 cNew 
	0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, // = step(0.5, cBas
	0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, // e);.cNew = max(m
	0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, // ix(cBase*cBlend*
	0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, // 2.0, 1.0-2.0*(1.
	0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, // 0-cBase)*(1.0-cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, // lend), cNew), ve
	0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, // c4(0.,0.,0.,0.))
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, // ;.return cNew;.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, // .vec3 cos_hemisp
	0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, // here_sample( vec
	0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x68, 0x69, // 2 t).{.float phi
	0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, //  = t.y * (2.0*3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, // ;.float cosTheta
	0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, //  = sqrt(1.0 - t.
	0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, // x);.float sinThe
	0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, // ta = sqrt(t.x);.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x7b, 0x73, 0x70, // float sp,cp;.{sp
	0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x63, 0x70, 0x3d, 0x63, 0x6f, 0x73, // =sin(phi);cp=cos
	0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // (phi);};.return 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, // vec3(cp * sinThe
	0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, // ta, cosTheta, sp
	0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, //  * sinTheta);.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, // vec3 rotate_to_v
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, // ector_upper( vec
	0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // 3 vec, vec3 norm
	0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // al).{.if(normal.
	0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, // y > -0.99999).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, // float h = 1.0/(1
	0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, // .0+normal.y);.fl
	0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // oat hz = h*norma
	0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, // l.z;.float hzx =
	0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, //  hz*normal.x;.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, // turn vec3(.vec.x
	0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, //  * (normal.y+hz*
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, // normal.z) + vec.
	0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, // y * normal.x - v
	0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, // ec.z * hzx,.vec.
	0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, // y * normal.y - v
	0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, // ec.x * normal.x 
	0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // - vec.z * normal
	0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // .z,.vec.y * norm
	0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, // al.z - vec.x * h
	0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, // zx + vec.z * (no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // rmal.y+h*normal.
	0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // x*normal.x));.}.
	0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, // else return -vec
	0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, // ;.}.uniform samp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, // ler2D displayTex
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ;.uniform sample
	0x72, 0x32, 0x44, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, // r2D displayGlass
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, // ;.uniform vec4 v
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x3b, // Color_Intensity;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x73, 0x74, // .uniform vec4 st
	0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x3b, // aticColor_Alpha;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x67, 0x6c, // .uniform vec4 gl
	0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, // assAmbient_Rough
	0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // ness;.uniform ve
	0x63, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x3b, 0x0a, 0x76, // c4 w_h_height;.v
	0x65, 0x63, 0x33, 0x20, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x6e, 0x65, // ec3 ReinhardTone
	0x4d, 0x61, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // Map(vec3 color).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, // {.float l = min(
	0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // dot(color, vec3(
	0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x20, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, // 0.176204, 0.8129
	0x38, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x2c, // 85, 0.0108109)),
	0x20, 0x31, 0x30, 0x30, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  1000.0);.return
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x20, 0x2a, 0x20, 0x30, //  color * ((l * 0
	0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, // .25 + 1.0) / (l 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // + 1.0));.}.unifo
	0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, // rm vec4 alphaSeg
	0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x34, 0x5d, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x73, // State[4];.void s
	0x68, 0x61, 0x64, 0x65, 0x34, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x73, 0x74, 0x61, 0x74, 0x65, // hade4(vec4 state
	0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x73, 0x64, 0x66, 0x54, // , sampler2D sdfT
	0x65, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x2c, 0x20, 0x69, 0x6e, 0x6f, // ex, vec2 uv, ino
	0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x69, // ut vec3 color, i
	0x6e, 0x6f, 0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x29, 0x0a, // nout vec4 glow).
	0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x73, 0x64, 0x66, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, // {.vec4 sdf = tex
	0x74, 0x75, 0x72, 0x65, 0x28, 0x73, 0x64, 0x66, 0x54, 0x65, 0x78, 0x2c, 0x20, 0x75, 0x76, 0x29, // ture(sdfTex, uv)
	0x3b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x20, 0x3d, 0x20, 0x73, // ;.vec4 inner = s
	0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, // moothstep(vec4_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x34, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, // plat(0.475), vec
	0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x35, 0x32, 0x35, 0x29, 0x2c, 0x20, // 4_splat(0.525), 
	0x73, 0x64, 0x66, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x69, // sdf);.color += i
	0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x73, 0x74, 0x61, 0x74, 0x69, // nner.x * ((stati
	0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, // cColor_Alpha.rgb
	0x29, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, // ) + (vColor_Inte
	0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x74, 0x61, // nsity.rgb) * sta
	0x74, 0x65, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, // te.x);.color += 
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x73, 0x74, 0x61, 0x74, // inner.y * ((stat
	0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, // icColor_Alpha.rg
	0x62, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, // b) + (vColor_Int
	0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x74, // ensity.rgb) * st
	0x61, 0x74, 0x65, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, // ate.y);.color +=
	0x20, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x73, 0x74, 0x61, //  inner.z * ((sta
	0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, // ticColor_Alpha.r
	0x67, 0x62, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, // gb) + (vColor_In
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x20, 0x2a, 0x20, 0x73, // tensity.rgb) * s
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, // tate.z);.color +
	0x3d, 0x20, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x77, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x73, 0x74, // = inner.w * ((st
	0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, // aticColor_Alpha.
	0x72, 0x67, 0x62, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, // rgb) + (vColor_I
	0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x20, 0x2a, 0x20, // ntensity.rgb) * 
	0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x77, 0x20, 0x3d, // state.w);.glow =
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x77, 0x2c, 0x20, 0x73, 0x74, 0x61, 0x74, 0x65, //  max(glow, state
	0x20, 0x2a, 0x20, 0x73, 0x64, 0x66, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, //  * sdf);.}.void 
	0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x76, 0x5f, 0x63, // main().{.if (v_c
	0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x3c, 0x20, 0x30, 0x2e, // lipDistance < 0.
	0x30, 0x29, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, // 0).discard;.vec3
	0x20, 0x6c, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, //  lum = vec3_spla
	0x74, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x67, 0x6c, 0x6f, // t(0.0);.vec4 glo
	0x77, 0x34, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // w4 = vec4_splat(
	0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x73, 0x68, 0x61, 0x64, 0x65, 0x34, 0x28, 0x61, 0x6c, 0x70, // 0.0);.shade4(alp
	0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x30, 0x5d, 0x2c, 0x20, 0x64, // haSegState[0], d
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // isplayTex, vec2(
	0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x78, 0x20, 0x2a, 0x20, // v_texcoord1.x * 
	0x30, 0x2e, 0x32, 0x35, 0x20, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // 0.25 , v_texcoor
	0x64, 0x31, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x6c, 0x75, 0x6d, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x77, // d1.y), lum, glow
	0x34, 0x29, 0x3b, 0x0a, 0x73, 0x68, 0x61, 0x64, 0x65, 0x34, 0x28, 0x61, 0x6c, 0x70, 0x68, 0x61, // 4);.shade4(alpha
	0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x31, 0x5d, 0x2c, 0x20, 0x64, 0x69, 0x73, // SegState[1], dis
	0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x76, 0x5f, // playTex, vec2(v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x30, 0x2e, // texcoord1.x * 0.
	0x32, 0x35, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, // 25 + 0.25, v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x6c, 0x75, 0x6d, 0x2c, 0x20, // coord1.y), lum, 
	0x67, 0x6c, 0x6f, 0x77, 0x34, 0x29, 0x3b, 0x0a, 0x73, 0x68, 0x61, 0x64, 0x65, 0x34, 0x28, 0x61, // glow4);.shade4(a
	0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x32, 0x5d, 0x2c, // lphaSegState[2],
	0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, //  displayTex, vec
	0x32, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x78, 0x20, // 2(v_texcoord1.x 
	0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x30, 0x2c, 0x20, 0x76, // * 0.25 + 0.50, v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x6c, // _texcoord1.y), l
	0x75, 0x6d, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x34, 0x29, 0x3b, 0x0a, 0x73, 0x68, 0x61, 0x64, // um, glow4);.shad
	0x65, 0x34, 0x28, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, // e4(alphaSegState
	0x5b, 0x33, 0x5d, 0x2c, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x2c, // [3], displayTex,
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, //  vec2(v_texcoord
	0x31, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x37, // 1.x * 0.25 + 0.7
	0x35, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x79, // 5, v_texcoord1.y
	0x29, 0x2c, 0x20, 0x6c, 0x75, 0x6d, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x34, 0x29, 0x3b, 0x0a, // ), lum, glow4);.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x4c, 0x75, 0x6d, 0x20, 0x3d, 0x20, // float glowLum = 
	0x6d, 0x61, 0x78, 0x28, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x77, // max(max(max(glow
	0x34, 0x2e, 0x78, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x34, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x67, // 4.x, glow4.y), g
	0x6c, 0x6f, 0x77, 0x34, 0x2e, 0x7a, 0x29, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x34, 0x2e, 0x77, // low4.z), glow4.w
	0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x20, 0x3d, 0x20, 0x67, // );.vec3 glow = g
	0x6c, 0x6f, 0x77, 0x4c, 0x75, 0x6d, 0x20, 0x2a, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x4c, 0x75, 0x6d, // lowLum * glowLum
	0x20, 0x2a, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, //  * (vColor_Inten
	0x73, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x6c, 0x75, 0x6d, 0x20, 0x2b, // sity.rgb);.lum +
	0x3d, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, // = (vColor_Intens
	0x69, 0x74, 0x79, 0x2e, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x3b, 0x0a, 0x69, // ity.w) * glow;.i
	0x66, 0x20, 0x28, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x78, // f ((w_h_height.x
	0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, //  != 0.0)).{.vec4
	0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //  glass = texture
	0x28, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x2c, 0x20, 0x76, // (displayGlass, v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x6c, 0x75, 0x6d, // _texcoord0);.lum
	0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6c, 0x75, 0x6d, 0x2c, 0x20, 0x28, 0x28, 0x67, 0x6c, //  = mix(lum, ((gl
	0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, // assAmbient_Rough
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x20, 0x2b, 0x20, 0x67, 0x6c, 0x6f, 0x77, // ness.rgb) + glow
	0x29, 0x2c, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, // ), (glassAmbient
	0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x77, 0x29, 0x20, 0x2a, 0x20, // _Roughness.w) * 
	0x67, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x61, 0x29, 0x20, 0x2a, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, // glass.a) * glass
	0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x73, 0x74, 0x61, // .rgb;.}.if ((sta
	0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, // ticColor_Alpha.w
	0x29, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, // ) == 0.0).bgfx_F
	0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // ragColor = vec4(
	0x6c, 0x75, 0x6d, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, // lum, 1.0);.else 
	0x69, 0x66, 0x20, 0x28, 0x28, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // if ((staticColor
	0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x2e, 0x30, // _Alpha.w) == 1.0
	0x29, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // ).bgfx_FragColor
	0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, //  = vec4(Reinhard
	0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x6c, 0x75, 0x6d, 0x29, 0x2c, 0x20, 0x31, 0x2e, // ToneMap(lum), 1.
	0x30, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x73, 0x74, // 0);.else if ((st
	0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, // aticColor_Alpha.
	0x77, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x32, 0x2e, 0x30, 0x29, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, // w) == 2.0).bgfx_
	0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, // FragColor = vec4
	0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, // (FBGamma(Reinhar
	0x64, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x6c, 0x75, 0x6d, 0x29, 0x29, 0x2c, 0x20, // dToneMap(lum)), 
	0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,                                           // 1.0);.}..
};
static const uint8_t fs_display_alphaseg_clip_glsl[8567] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4e, 0xbd, 0x0b, 0x9f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x21, // FSH.N.........d!
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x6f, // ..#version 440.o
	0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, // ut vec4 bgfx_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // gColor;.#define 
	0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x62, 0x67, 0x66, // gl_FragColor bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x0a, 0x23, 0x64, 0x65, 0x66, // x_FragColor.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x20, 0x20, // ine texture2D   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, //        texture.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // Lod       textur
	0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, // eLod.#define tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ture2DGrad      
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, // textureGrad.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, // ine texture2DPro
	0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, // jLod   texturePr
	0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // ojLod.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, // xture2DProjGrad 
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, //  textureProjGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // CubeLod     text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, // ureLod.#define t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, // extureCubeGrad  
	0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, //   textureGrad.#d
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, // efine texture3D 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //          texture
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, 0x65, 0x78, 0x74, // 2DLodOffset text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, // ureLodOffset.#de
	0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, // fine attribute i
	0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // n.#define varyin
	0x67, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, // g in.#define bgf
	0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // xShadow2D(_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, // er, _coord)     
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // vec4_splat(textu
	0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // re(_sampler, _co
	0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, // ord) ).#define b
	0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, // gfxShadow2DProj(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, // ) vec4_splat(tex
	0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // tureProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x76, 0x61, 0x72, // r, _coord) ).var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x63, 0x6c, 0x69, // ying float v_cli
	0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, // pDistance;.varyi
	0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, // ng vec2 v_texcoo
	0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, // rd0;.varying vec
	0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x3b, 0x0a, 0x76, // 2 v_texcoord1;.v
	0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, // ec3 instMul(vec3
	0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, //  _vec, mat3 _mtx
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, // ) { return ( (_v
	0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, // ec) * (_mtx) ); 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, // }.vec3 instMul(m
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // at3 _mtx, vec3 _
	0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, // vec) { return ( 
	0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, // (_mtx) * (_vec) 
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, // ); }.vec4 instMu
	0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, // l(vec4 _vec, mat
	0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 4 _mtx) { return
	0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, //  ( (_vec) * (_mt
	0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, // x) ); }.vec4 ins
	0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, // tMul(mat4 _mtx, 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // vec4 _vec) { ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, // urn ( (_mtx) * (
	0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _vec) ); }.float
	0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, //  rcp(float _a) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, //  return 1.0/_a; 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, // }.vec2 rcp(vec2 
	0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _a) { return vec
	0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, // 2(1.0)/_a; }.vec
	0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, // 3 rcp(vec3 _a) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, //  return vec3(1.0
	0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, // )/_a; }.vec4 rcp
	0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // (vec4 _a) { retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, // rn vec4(1.0)/_a;
	0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, //  }.vec2 vec2_spl
	0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // at(float _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // eturn vec2(_x, _
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, // x); }.vec3 vec3_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // splat(float _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, // { return vec3(_x
	0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, // , _x, _x); }.vec
	0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, // 4 vec4_splat(flo
	0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // at _x) { return 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // vec4(_x, _x, _x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, //  _x); }.uvec2 uv
	0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, // ec2_splat(uint _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, // x) { return uvec
	0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, // 2(_x, _x); }.uve
	0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, // c3 uvec3_splat(u
	0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // int _x) { return
	0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, //  uvec3(_x, _x, _
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, // x); }.uvec4 uvec
	0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, // 4_splat(uint _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, //  { return uvec4(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // _x, _x, _x, _x);
	0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, //  }.mat4 mtxFromR
	0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, // ows(vec4 _0, vec
	0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, // 4 _1, vec4 _2, v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec4 _3).{.return
	0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, //  transpose(mat4(
	0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, // _0, _1, _2, _3) 
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, // );.}.mat4 mtxFro
	0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, // mCols(vec4 _0, v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, // ec4 _1, vec4 _2,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  vec4 _3).{.retu
	0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, // rn mat4(_0, _1, 
	0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, // _2, _3);.}.mat3 
	0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, // mtxFromRows(vec3
	0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, //  _0, vec3 _1, ve
	0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c3 _2).{.return 
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, // transpose(mat3(_
	0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // 0, _1, _2) );.}.
	0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, // mat3 mtxFromCols
	0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // (vec3 _0, vec3 _
	0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 1, vec3 _2).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, // turn mat3(_0, _1
	0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // , _2);.}.uniform
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, //  vec4 u_viewRect
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, // ;.uniform vec4 u
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // _viewTexel;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, // orm mat4 u_view;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // invView;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, //  mat4 u_proj;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, // iform mat4 u_inv
	0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // Proj;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, // t4 u_viewProj;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, // niform mat4 u_in
	0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // vViewProj;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, // rm mat4 u_model[
	0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, // 32];.uniform mat
	0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, // 4 u_modelView;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, // niform mat4 u_mo
	0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // delViewProj;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, // form vec4 u_alph
	0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, // aRef4;.float sqr
	0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // ( float v).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // urn v*v;.}.vec2 
	0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // sqr( vec2 v).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // eturn v*v;.}.vec
	0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, // 3 sqr( vec3 v).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // .return v*v;.}.v
	0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, // ec3 mul_w1( vec3
	0x20, 0x76, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, //  v, mat4 m).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, // turn v.x*m[0].xy
	0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, // z + (v.y*m[1].xy
	0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, // z + (v.z*m[2].xy
	0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, // z + m[3].xyz));.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, // }.float acos_app
	0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // rox_divPI( float
	0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, //  v).{.float x = 
	0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, // abs(v);.if(1. - 
	0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, // x <= 0.000061035
	0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, // 15625).return (v
	0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, //  >= 0.) ? 0. : 1
	0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, // .;.float res = (
	0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, // (-0.155972/3.141
	0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, // 5926535897932384
	0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, // 626433832795) * 
	0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, // x + (1.56467/3.1
	0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, // 4159265358979323
	0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, // 84626433832795) 
	0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, // ) * sqrt(1. - x)
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, // ;.return (v >= 0
	0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, // .) ? res : 1. - 
	0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, // res;.}.float ata
	0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, // n2_approx_div2PI
	0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ( float y, float
	0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, //  x).{.float abs_
	0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // y = abs(y);.floa
	0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, // t abs_x = abs(x)
	0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, // ;.if(abs_x <= 0.
	0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, // 00006103515625 &
	0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, // & abs_y <= 0.000
	0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, // 06103515625).ret
	0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, // urn 0.;.float r 
	0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, // = (abs_x - abs_y
	0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, // ) / (abs_x + abs
	0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, // _y);.float angle
	0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, //  = ((x < 0.) ? (
	0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, // 3./8.) : (1./8.)
	0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, // ).+ (0.211868 /(
	0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, // 2.*3.14159265358
	0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, // 9793238462643383
	0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, // 2795) * r * r - 
	0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, // 0.987305 /(2.*3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, // ) * ((x < 0.) ? 
	0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // -r : r);.return 
	0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, // (y < 0.) ? -angl
	0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // e : angle;.}.flo
	0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, // at asin_approx_d
	0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, // ivPI( float v).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, // .float x = abs(v
	0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, // );.if(1. - x <= 
	0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, // 0.00006103515625
	0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, // ).return (v >= 0
	0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, // .) ? 0.5 : -0.5;
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, // .float res = ((-
	0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // 0.155972/3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, // 6433832795) * x 
	0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, // + (1.56467/3.141
	0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, // 5926535897932384
	0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, // 626433832795) ) 
	0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, // * sqrt(1. - x);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, // return (v >= 0.)
	0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, //  ? 0.5 - res : -
	0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // 0.5 + res;.}.vec
	0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, // 2 ray_to_equirec
	0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x20, 0x76, 0x65, 0x63, // tangular_uv( vec
	0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 3 ray).{.return 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, // vec2(.0.5 + atan
	0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, // 2_approx_div2PI(
	0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, // ray.y, ray.x),.a
	0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, // cos_approx_divPI
	0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // (ray.z));.}.floa
	0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // t InvsRGB( float
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, //  color).{.if (co
	0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, // lor <= 0.04045).
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, // return color * (
	0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, // 1.0/12.92);.else
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .return pow(colo
	0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, // r * (1.0/1.055) 
	0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, // + (0.055/1.055),
	0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, //  2.4);.}.float I
	0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // nvRec709( float 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, // color).{.if (col
	0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, // or <= 0.081).ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, // urn color * (1.0
	0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, // /4.5);.else.retu
	0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, // rn pow(color * (
	0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, // 1.0/1.099) + (0.
	0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, // 099/1.099), 1.0/
	0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, // 0.45);.}.float I
	0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, // nvGamma( float c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, // olor).{.return I
	0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, // nvsRGB(color);.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, // .vec3 InvGamma( 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // vec3 color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // turn vec3(InvGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, // ma(color.x),InvG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, // amma(color.y),In
	0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, // vGamma(color.z))
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, // ;.}.vec3 InvTone
	0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // Map( vec3 color)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, // .{.float inv_2bh
	0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, //  = 0.5/0.25;.flo
	0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, // at bh = 4.0*0.25
	0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, //  - 2.0;.return (
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, // color - 1.0 + sq
	0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // rt(color*(color 
	0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, // + bh) + 1.0))*in
	0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // v_2bh;.}.float s
	0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, // RGB( float f).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, // float s;.if (f <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, // = 0.0031308).s =
	0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, //  12.92 * f;.else
	0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, // .s = 1.055 * pow
	0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, // (f, 1.0/2.4) - 0
	0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, // .055;.return s;.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, // }.float Rec709( 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float f).{.float
	0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, //  s;.if (f <= 0.0
	0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, // 18).s = 4.5 * f;
	0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, // .else.s = 1.099 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, // * pow(f, 0.45) -
	0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, //  0.099;.return s
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // ;.}.float FBGamm
	0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // a( float color).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, // {.return sRGB(co
	0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, // lor);.}.vec2 FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // amma( vec2 color
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // ).{.return vec2(
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, // FBGamma(color.x)
	0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, // ,FBGamma(color.y
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, // ));.}.vec3 FBGam
	0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // ma( vec3 color).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, // {.return vec3(FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, // Gamma(color.x),F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, // BGamma(color.y),
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, // FBGamma(color.z)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // );.}.vec3 FBGamm
	0x61, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // a22( vec3 color)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x70, // .{.return vec3(p
	0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, // ow(color.x, 1.0/
	0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, // 2.2),pow(color.y
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, // , 1.0/2.2),pow(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, // olor.z, 1.0/2.2)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, // );.}.float FBTon
	0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, // eMap( float l).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, // .return l * ((l*
	0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, // 0.25 + 1.0) / (l
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, //  + 1.0));.}.vec2
	0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, //  FBToneMap( vec2
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //  color).{.float 
	0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, // l = dot(color,ve
	0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, // c2(0.176204+0.01
	0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, // 08109*0.5,0.8129
	0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, // 85+0.0108109*0.5
	0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // ));.return color
	0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, //  * ((l*0.25 + 1.
	0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, // 0) / (l + 1.0));
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, // .}.vec3 FBToneMa
	0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, // p( vec3 color).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, // .float l = dot(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, // olor,vec3(0.1762
	0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, // 04,0.812985,0.01
	0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 08109));.return 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, // color * ((l*0.25
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, //  + 1.0) / (l + 1
	0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, 0x64, // .0));.}.vec4 Add
	0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, // itive( vec4 cBas
	0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, // e, vec4 cBlend, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, // float percent).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, // .return cBase + 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, // cBlend*percent;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, // }.vec3 Screen ( 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // vec3 cBase, vec3
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  cBlend).{.retur
	0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, // n 1.0 - (1.0 - c
	0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, // Base) * (1.0 - c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, // Blend);.}.vec4 S
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, // creen ( vec4 cBa
	0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // se, vec4 cBlend)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // .{.return 1.0 - 
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, // (1.0 - cBase) * 
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, // (1.0 - cBlend);.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, // }.vec3 ScreenHDR
	0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, //  ( vec3 cBase, v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // ec3 cBlend).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, // turn max(1.0 - (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, // 1.0 - cBase) * (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, // 1.0 - cBlend), v
	0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, // ec3(0.,0.,0.));.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, // }.vec4 ScreenHDR
	0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, //  ( vec4 cBase, v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // ec4 cBlend).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, // turn max(1.0 - (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, // 1.0 - cBase) * (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, // 1.0 - cBlend), v
	0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, // ec4(0.,0.,0.,0.)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, // );.}.vec4 Multip
	0x6c, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // ly ( vec4 cBase,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, //  vec4 cBlend, fl
	0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // oat percent).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, // eturn cBase * cB
	0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, // lend*percent;.}.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x20, 0x76, // vec4 Overlay ( v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // ec4 cBase, vec4 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // cBlend).{.vec4 c
	0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, // New = step(0.5, 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, // cBase);.cNew = m
	0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, // ix(cBase*cBlend*
	0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, // 2.0, 1.0-2.0*(1.
	0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, // 0-cBase)*(1.0-cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, // lend), cNew);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // turn cNew;.}.vec
	0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, // 4 OverlayHDR ( v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // ec4 cBase, vec4 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // cBlend).{.vec4 c
	0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, // New = step(0.5, 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, // cBase);.cNew = m
	0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, // ax(mix(cBase*cBl
	0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, // end*2.0, 1.0-2.0
	0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, // *(1.0-cBase)*(1.
	0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, // 0-cBlend), cNew)
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, // , vec4(0.,0.,0.,
	0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, // 0.));.return cNe
	0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, // w;.}.vec3 cos_he
	0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // misphere_sample(
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  vec2 t).{.float
	0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, //  phi = t.y * (2.
	0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, // 0*3.141592653589
	0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, // 7932384626433832
	0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, // 795);.float cosT
	0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, // heta = sqrt(1.0 
	0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, // - t.x);.float si
	0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, // nTheta = sqrt(t.
	0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, // x);.float sp,cp;
	0x0a, 0x7b, 0x73, 0x70, 0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x63, 0x70, // .{sp=sin(phi);cp
	0x3d, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, 0x3b, 0x0a, 0x72, 0x65, 0x74, // =cos(phi);};.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, // urn vec3(cp * si
	0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, // nTheta, cosTheta
	0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x29, // , sp * sinTheta)
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, // ;.}.vec3 rotate_
	0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x28, // to_vector_upper(
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, //  vec3 vec, vec3 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, // normal).{.if(nor
	0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, // mal.y > -0.99999
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, // ).{.float h = 1.
	0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, // 0/(1.0+normal.y)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, // ;.float hz = h*n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, // ormal.z;.float h
	0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // zx = hz*normal.x
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, // ;.return vec3(.v
	0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, // ec.x * (normal.y
	0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, // +hz*normal.z) + 
	0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // vec.y * normal.x
	0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, //  - vec.z * hzx,.
	0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, // vec.y * normal.y
	0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, //  - vec.x * norma
	0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, // l.x - vec.z * no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, // rmal.z,.vec.y * 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, // normal.z - vec.x
	0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, //  * hzx + vec.z *
	0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, //  (normal.y+h*nor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, // mal.x*normal.x))
	0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // ;.}.else return 
	0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // -vec;.}.uniform 
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, // sampler2D displa
	0x79, 0x54, 0x65, 0x78, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, // yTex;.uniform sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, // mpler2D displayG
	0x6c, 0x61, 0x73, 0x73, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // lass;.uniform ve
	0x63, 0x34, 0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, // c4 vColor_Intens
	0x69, 0x74, 0x79, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, // ity;.uniform vec
	0x34, 0x20, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, // 4 staticColor_Al
	0x70, 0x68, 0x61, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, // pha;.uniform vec
	0x34, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, // 4 glassAmbient_R
	0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // oughness;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, // m vec4 w_h_heigh
	0x74, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, // t;.vec3 Reinhard
	0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, // ToneMap(vec3 col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, // or).{.float l = 
	0x6d, 0x69, 0x6e, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x76, // min(dot(color, v
	0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x20, 0x30, 0x2e, // ec3(0.176204, 0.
	0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, // 812985, 0.010810
	0x39, 0x29, 0x29, 0x2c, 0x20, 0x31, 0x30, 0x30, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x72, 0x65, // 9)), 1000.0);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, // turn color * ((l
	0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, //  * 0.25 + 1.0) /
	0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, //  (l + 1.0));.}.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x61, 0x6c, 0x70, 0x68, // niform vec4 alph
	0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x34, 0x5d, 0x3b, 0x0a, 0x76, 0x6f, // aSegState[4];.vo
	0x69, 0x64, 0x20, 0x73, 0x68, 0x61, 0x64, 0x65, 0x34, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x73, // id shade4(vec4 s
	0x74, 0x61, 0x74, 0x65, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, // tate, sampler2D 
	0x73, 0x64, 0x66, 0x54, 0x65, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x2c, // sdfTex, vec2 uv,
	0x20, 0x69, 0x6e, 0x6f, 0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, //  inout vec3 colo
	0x72, 0x2c, 0x20, 0x69, 0x6e, 0x6f, 0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x67, 0x6c, // r, inout vec4 gl
	0x6f, 0x77, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x73, 0x64, 0x66, 0x20, 0x3d, // ow).{.vec4 sdf =
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x73, 0x64, 0x66, 0x54, 0x65, 0x78, 0x2c, //  texture(sdfTex,
	0x20, 0x75, 0x76, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x6e, 0x65, 0x72, //  uv);.vec4 inner
	0x20, 0x3d, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x76, 0x65, //  = smoothstep(ve
	0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x34, 0x37, 0x35, 0x29, 0x2c, // c4_splat(0.475),
	0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x35, 0x32, //  vec4_splat(0.52
	0x35, 0x29, 0x2c, 0x20, 0x73, 0x64, 0x66, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // 5), sdf);.color 
	0x2b, 0x3d, 0x20, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x73, // += inner.x * ((s
	0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, // taticColor_Alpha
	0x2e, 0x72, 0x67, 0x62, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, // .rgb) + (vColor_
	0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x20, 0x2a, // Intensity.rgb) *
	0x20, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, //  state.x);.color
	0x20, 0x2b, 0x3d, 0x20, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x28, //  += inner.y * ((
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, // staticColor_Alph
	0x61, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // a.rgb) + (vColor
	0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x20, // _Intensity.rgb) 
	0x2a, 0x20, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, // * state.y);.colo
	0x72, 0x20, 0x2b, 0x3d, 0x20, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, // r += inner.z * (
	0x28, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, // (staticColor_Alp
	0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, // ha.rgb) + (vColo
	0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x67, 0x62, 0x29, // r_Intensity.rgb)
	0x20, 0x2a, 0x20, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, //  * state.z);.col
	0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x77, 0x20, 0x2a, 0x20, // or += inner.w * 
	0x28, 0x28, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, // ((staticColor_Al
	0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, // pha.rgb) + (vCol
	0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x67, 0x62, // or_Intensity.rgb
	0x29, 0x20, 0x2a, 0x20, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x67, 0x6c, // ) * state.w);.gl
	0x6f, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x77, 0x2c, 0x20, 0x73, // ow = max(glow, s
	0x74, 0x61, 0x74, 0x65, 0x20, 0x2a, 0x20, 0x73, 0x64, 0x66, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // tate * sdf);.}.v
	0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, // oid main().{.if 
	0x28, 0x76, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x20, // (v_clipDistance 
	0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x3b, 0x0a, // < 0.0).discard;.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, // vec3 lum = vec3_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x34, // splat(0.0);.vec4
	0x20, 0x67, 0x6c, 0x6f, 0x77, 0x34, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, //  glow4 = vec4_sp
	0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x73, 0x68, 0x61, 0x64, 0x65, 0x34, // lat(0.0);.shade4
	0x28, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x30, // (alphaSegState[0
	0x5d, 0x2c, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x2c, 0x20, 0x76, // ], displayTex, v
	0x65, 0x63, 0x32, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, // ec2(v_texcoord1.
	0x78, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, // x * 0.25 , v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x6c, 0x75, 0x6d, 0x2c, 0x20, // coord1.y), lum, 
	0x67, 0x6c, 0x6f, 0x77, 0x34, 0x29, 0x3b, 0x0a, 0x73, 0x68, 0x61, 0x64, 0x65, 0x34, 0x28, 0x61, // glow4);.shade4(a
	0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x31, 0x5d, 0x2c, // lphaSegState[1],
	0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, //  displayTex, vec
	0x32, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x78, 0x20, // 2(v_texcoord1.x 
	0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x2c, 0x20, 0x76, // * 0.25 + 0.25, v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x6c, // _texcoord1.y), l
	0x75, 0x6d, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x34, 0x29, 0x3b, 0x0a, 0x73, 0x68, 0x61, 0x64, // um, glow4);.shad
	0x65, 0x34, 0x28, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, // e4(alphaSegState
	0x5b, 0x32, 0x5d, 0x2c, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x2c, // [2], displayTex,
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, //  vec2(v_texcoord
	0x31, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, // 1.x * 0.25 + 0.5
	0x30, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x79, // 0, v_texcoord1.y
	0x29, 0x2c, 0x20, 0x6c, 0x75, 0x6d, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x34, 0x29, 0x3b, 0x0a, // ), lum, glow4);.
	0x73, 0x68, 0x61, 0x64, 0x65, 0x34, 0x28, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, // shade4(alphaSegS
	0x74, 0x61, 0x74, 0x65, 0x5b, 0x33, 0x5d, 0x2c, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, // tate[3], display
	0x54, 0x65, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // Tex, vec2(v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, // oord1.x * 0.25 +
	0x20, 0x30, 0x2e, 0x37, 0x35, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, //  0.75, v_texcoor
	0x64, 0x31, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x6c, 0x75, 0x6d, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x77, // d1.y), lum, glow
	0x34, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x4c, 0x75, // 4);.float glowLu
	0x6d, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x61, 0x78, 0x28, // m = max(max(max(
	0x67, 0x6c, 0x6f, 0x77, 0x34, 0x2e, 0x78, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x34, 0x2e, 0x79, // glow4.x, glow4.y
	0x29, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x34, 0x2e, 0x7a, 0x29, 0x2c, 0x20, 0x67, 0x6c, 0x6f, // ), glow4.z), glo
	0x77, 0x34, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x77, // w4.w);.vec3 glow
	0x20, 0x3d, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x4c, 0x75, 0x6d, 0x20, 0x2a, 0x20, 0x67, 0x6c, 0x6f, //  = glowLum * glo
	0x77, 0x4c, 0x75, 0x6d, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, // wLum * (vColor_I
	0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x6c, // ntensity.rgb);.l
	0x75, 0x6d, 0x20, 0x2b, 0x3d, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, // um += (vColor_In
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x67, 0x6c, 0x6f, // tensity.w) * glo
	0x77, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, // w;.if ((w_h_heig
	0x68, 0x74, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, // ht.x != 0.0)).{.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, // vec4 glass = tex
	0x74, 0x75, 0x72, 0x65, 0x28, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, // ture(displayGlas
	0x73, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, // s, v_texcoord0);
	0x0a, 0x6c, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6c, 0x75, 0x6d, 0x2c, 0x20, // .lum = mix(lum, 
	0x28, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, // ((glassAmbient_R
	0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x20, 0x2b, 0x20, // oughness.rgb) + 
	0x67, 0x6c, 0x6f, 0x77, 0x29, 0x2c, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, // glow), (glassAmb
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x77, // ient_Roughness.w
	0x29, 0x20, 0x2a, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x61, 0x29, 0x20, 0x2a, 0x20, 0x67, // ) * glass.a) * g
	0x6c, 0x61, 0x73, 0x73, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, // lass.rgb;.}.if (
	0x28, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, // (staticColor_Alp
	0x68, 0x61, 0x2e, 0x77, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x67, 0x6c, // ha.w) == 0.0).gl
	0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, // _FragColor = vec
	0x34, 0x28, 0x6c, 0x75, 0x6d, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, // 4(lum, 1.0);.els
	0x65, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, // e if ((staticCol
	0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x31, // or_Alpha.w) == 1
	0x2e, 0x30, 0x29, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // .0).gl_FragColor
	0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, //  = vec4(Reinhard
	0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x6c, 0x75, 0x6d, 0x29, 0x2c, 0x20, 0x31, 0x2e, // ToneMap(lum), 1.
	0x30, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x73, 0x74, // 0);.else if ((st
	0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, // aticColor_Alpha.
	0x77, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x32, 0x2e, 0x30, 0x29, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, // w) == 2.0).gl_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x46, // agColor = vec4(F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x54, // BGamma(ReinhardT
	0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x6c, 0x75, 0x6d, 0x29, 0x29, 0x2c, 0x20, 0x31, 0x2e, // oneMap(lum)), 1.
	0x30, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,                                                       // 0);.}..
};
static const uint8_t fs_display_alphaseg_clip_dx11[4687] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4e, 0xbd, 0x0b, 0x9f, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x10, 0x76, // FSH.N..........v
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, // Color_Intensity.
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, // ..........static
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x00, 0x10, 0x00, 0x01, // Color_Alpha.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, // ......glassAmbie
	0x6e, 0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x00, 0x20, 0x00, // nt_Roughness.. .
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, // .......w_h_heigh
	0x74, 0x12, 0x00, 0x30, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x61, 0x6c, 0x70, 0x68, // t..0........alph
	0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x04, 0x40, 0x00, 0x04, 0x00, 0x00, // aSegState..@....
	0x00, 0x00, 0x00, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x30, 0x01, // ....displayTex0.
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, // .........display
	0x47, 0x6c, 0x61, 0x73, 0x73, 0x30, 0x01, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, // Glass0..........
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x30, 0x01, 0x00, 0x00, 0x01, 0x00, // displayTex0.....
	0x00, 0x00, 0x00, 0x00, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, // .....displayGlas
	0x73, 0x30, 0x01, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5c, 0x11, 0x00, 0x00, 0x44, // s0.............D
	0x58, 0x42, 0x43, 0xb8, 0x78, 0xc2, 0x97, 0xc9, 0xb8, 0x37, 0x0b, 0x28, 0xca, 0x6b, 0x84, 0x85, // XBC.x....7.(.k..
	0xff, 0xdb, 0x5f, 0x01, 0x00, 0x00, 0x00, 0x5c, 0x11, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, // .._............,
	0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x4e, 0x80, // ...........ISGN.
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x00, // ...........h....
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, // ................
	0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, // ...t............
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x00, // ...........t....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, // ................
	0x06, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, // ...t............
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x4f, // ...........SV_PO
	0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, // SITION.TEXCOORD.
	0xab, 0xab, 0xab, 0x4f, 0x53, 0x47, 0x4e, 0x2c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, // ...OSGN,........
	0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, // ... ............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x54, 0x41, // ...........SV_TA
	0x52, 0x47, 0x45, 0x54, 0x00, 0xab, 0xab, 0x53, 0x48, 0x45, 0x58, 0x6c, 0x10, 0x00, 0x00, 0x50, // RGET...SHEXl...P
	0x00, 0x00, 0x00, 0x1b, 0x04, 0x00, 0x00, 0x6a, 0x08, 0x00, 0x01, 0x59, 0x00, 0x00, 0x04, 0x46, // .......j...Y...F
	0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, // . .........Z....
	0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x01, // `......Z....`...
	0x00, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, // ...X....p......U
	0x55, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x55, // U..X....p......U
	0x55, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x12, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x62, // U..b...........b
	0x10, 0x00, 0x03, 0x62, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x32, // ...b.......b...2
	0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0xf2, 0x20, 0x10, 0x00, 0x00, // .......e.... ...
	0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x02, 0x06, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x12, // ...h.......1....
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, // ................
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x04, 0x03, 0x0a, 0x00, 0x10, 0x00, 0x00, // @...............
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0x32, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // ...8...2.......F
	0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3e, 0x00, // ........@.....>.
	0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, 0xc2, // ..?........E....
	0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // ...CU..........F
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .......F~.......
	0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x01, // `...............
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x33, // ...F........@..3
	0x33, 0xf3, 0xbe, 0x33, 0x33, 0xf3, 0xbe, 0x33, 0x33, 0xf3, 0xbe, 0x33, 0x33, 0xf3, 0xbe, 0x38, // 3..33..33..33..8
	0x20, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, //  ..........F....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x04, 0x00, 0xa0, 0x41, 0x04, 0x00, 0xa0, 0x41, 0x04, // ....@.....A...A.
	0x00, 0xa0, 0x41, 0x04, 0x00, 0xa0, 0x41, 0x32, 0x00, 0x00, 0x0f, 0xf2, 0x00, 0x10, 0x00, 0x02, // ..A...A2........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, // ...F........@...
	0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xc0, 0x02, // ................
	0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0x40, 0x00, // @....@@..@@..@@.
	0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, // .@@8...........F
	0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, // .......F.......8
	0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x72, // ...F.......2...r
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .......F. ......
	0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, // ..... .........F
	0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x72, // . .........2...r
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .......F. ......
	0x00, 0x00, 0x00, 0x56, 0x85, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, // ...V. .........F
	0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, // . .........8...r
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, // .......V.......F
	0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x02, // .......2...r....
	0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x72, // ...F.......2...r
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .......F. ......
	0x00, 0x00, 0x00, 0xa6, 0x8a, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, // ..... .........F
	0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, // . .........2...r
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x32, // .......F.......2
	0x00, 0x00, 0x0c, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, // ...r.......F. ..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0x8f, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, // ......... ......
	0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // ...F. .........2
	0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x01, // ...r............
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, // ...F.......F....
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // ...8...........F
	0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, // .......F. ......
	0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // ...4...........F
	0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........@.......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0f, 0xf2, // ...........2....
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x14, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, // .......F........
	0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3e, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3e, 0x00, // @.....>...?...>.
	0x00, 0x80, 0x3f, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, // ..?.@.....>.....
	0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, 0xc2, 0x00, 0x00, 0x80, 0x43, // ..?....E.......C
	0x55, 0x15, 0x00, 0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x02, // U..........F....
	0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, // ...F~.......`...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x33, 0x33, 0xf3, 0xbe, 0x33, // ........@..33..3
	0x33, 0xf3, 0xbe, 0x33, 0x33, 0xf3, 0xbe, 0x33, 0x33, 0xf3, 0xbe, 0x38, 0x20, 0x00, 0x0a, 0xf2, // 3..33..33..8 ...
	0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, // .......F........
	0x40, 0x00, 0x00, 0x04, 0x00, 0xa0, 0x41, 0x04, 0x00, 0xa0, 0x41, 0x04, 0x00, 0xa0, 0x41, 0x04, // @.....A...A...A.
	0x00, 0xa0, 0x41, 0x32, 0x00, 0x00, 0x0f, 0xf2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, // ..A2...........F
	0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, // ........@.......
	0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xc0, 0x02, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0x40, 0x38, // .@@..@@..@@..@@8
	0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0xf2, // ...F.......8....
	0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x72, 0x00, 0x10, 0x00, 0x05, // .......2...r....
	0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, // ...F. ..........
	0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, // . .........F. ..
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, // .......2...r....
	0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x05, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x72, // ...F.......2...r
	0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .......F. ......
	0x00, 0x00, 0x00, 0x56, 0x85, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, // ...V. .........F
	0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, // . .........2...r
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, // .......V.......F
	0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // .......F.......2
	0x00, 0x00, 0x0c, 0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, // ...r.......F. ..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa6, 0x8a, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, // ......... ......
	0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // ...F. .........2
	0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x04, // ...r............
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, // ...F.......F....
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, // ...2...r.......F
	0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0x8f, 0x20, 0x00, 0x00, // . ........... ..
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // .......F. ......
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf6, // ...2...r........
	0x0f, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x03, // .......8........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, // ...F.......F. ..
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x00, // .......4........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, // ...F.......F....
	0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0xf2, // ...E.......CU...
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ~.......`.......
	0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x02, // ...........F....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x33, 0x33, 0xf3, 0xbe, 0x33, 0x33, 0xf3, 0xbe, 0x33, // ....@..33..33..3
	0x33, 0xf3, 0xbe, 0x33, 0x33, 0xf3, 0xbe, 0x38, 0x20, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x03, // 3..33..8 .......
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x04, // ...F........@...
	0x00, 0xa0, 0x41, 0x04, 0x00, 0xa0, 0x41, 0x04, 0x00, 0xa0, 0x41, 0x04, 0x00, 0xa0, 0x41, 0x32, // ..A...A...A...A2
	0x00, 0x00, 0x0f, 0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, // ...........F....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xc0, 0x00, // ....@...........
	0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xc0, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, // ........@....@@.
	0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0xf2, // .@@..@@..@@8....
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x03, // .......8........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, // ...F.......F....
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, // ...2...r.......F
	0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x00, 0x00, // . ........... ..
	0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // .......F. ......
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, // ...2...r........
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x72, 0x00, 0x10, 0x00, 0x04, // .......2...r....
	0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, // ...F. .........V
	0x85, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, // . .........F. ..
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, // .......2...r....
	0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, // ...V.......F....
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x72, // ...F.......2...r
	0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .......F. ......
	0x00, 0x00, 0x00, 0xa6, 0x8a, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, // ..... .........F
	0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, // . .........2...r
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // .......F.......2
	0x00, 0x00, 0x0c, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, // ...r.......F. ..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0x8f, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, // ......... ......
	0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // ...F. .........2
	0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x03, // ...r............
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, // ...F.......F....
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, // ...8...........F
	0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, // .......F. ......
	0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // ...4...........F
	0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x32, // .......F.......2
	0x00, 0x00, 0x0f, 0x32, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 0x02, // ...2.......F....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3e, 0x00, 0x00, 0x80, 0x3f, 0x00, // ....@.....>...?.
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x3f, 0x00, // ........@....@?.
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, 0xc2, // ...........E....
	0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0xf2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, // ...CU..........F
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .......F~.......
	0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x03, // `...............
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x33, // ...F........@..3
	0x33, 0xf3, 0xbe, 0x33, 0x33, 0xf3, 0xbe, 0x33, 0x33, 0xf3, 0xbe, 0x33, 0x33, 0xf3, 0xbe, 0x38, // 3..33..33..33..8
	0x20, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, //  ..........F....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x04, 0x00, 0xa0, 0x41, 0x04, 0x00, 0xa0, 0x41, 0x04, // ....@.....A...A.
	0x00, 0xa0, 0x41, 0x04, 0x00, 0xa0, 0x41, 0x32, 0x00, 0x00, 0x0f, 0xf2, 0x00, 0x10, 0x00, 0x04, // ..A...A2........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, // ...F........@...
	0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xc0, 0x02, // ................
	0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0x40, 0x00, // @....@@..@@..@@.
	0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, // .@@8...........F
	0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x38, // .......F.......8
	0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x72, // ...F.......2...r
	0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .......F. ......
	0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, // ..... .........F
	0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, // . .........2...r
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // .......F.......2
	0x00, 0x00, 0x0c, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, // ...r.......F. ..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x85, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // .......V. ......
	0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // ...F. .........2
	0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x03, // ...r.......V....
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, // ...F.......F....
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, // ...2...r.......F
	0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa6, 0x8a, 0x20, 0x00, 0x00, // . ........... ..
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // .......F. ......
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xa6, // ...2...r........
	0x0a, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x72, 0x00, 0x10, 0x00, 0x03, // .......2...r....
	0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, // ...F. ..........
	0x8f, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, // . .........F. ..
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, // .......2...r....
	0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, // ...F.......8....
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0xf2, // . .........4....
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, // .......4........
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, // ...4...........*
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, // ...............4
	0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, // ...........:....
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x12, // ...........8....
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, // ................
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xe2, 0x00, 0x10, 0x00, 0x00, // .......8........
	0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x89, 0x20, 0x00, 0x00, // ............. ..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0xe2, 0x00, 0x10, 0x00, 0x00, // .......2........
	0x00, 0x00, 0x00, 0xf6, 0x8f, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, // ..... .........V
	0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x39, // ...............9
	0x00, 0x00, 0x08, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x00, 0x00, // ............. ..
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, // ........@.......
	0x00, 0x04, 0x03, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, 0xc2, // ...........E....
	0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x96, // ...CU...........
	0x15, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // .......F~.......
	0x60, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0b, 0x72, 0x00, 0x10, 0x00, 0x02, // `......2...r....
	0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, // ...........F. ..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // .......F. ......
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, // ...8...........:
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // .......:. ......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x96, // .......r........
	0x07, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, // ...A.......F....
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, // ...2...r........
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x96, // .......F........
	0x07, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0xe2, 0x00, 0x10, 0x00, 0x00, // .......8........
	0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, 0x18, 0x00, 0x00, 0x08, 0x12, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, // ...:. ..........
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 0x0a, 0x00, 0x10, 0x00, 0x00, // @...............
	0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x72, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, // ...6...r .......
	0x07, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x20, 0x10, 0x00, 0x00, // .......6.... ...
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x12, 0x00, 0x00, 0x01, 0x18, // ....@.....?.....
	0x00, 0x00, 0x08, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, // ...........:. ..
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x1f, // ........@.....?.
	0x00, 0x04, 0x03, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x0a, 0x12, // ................
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // ................
	0x40, 0x00, 0x00, 0xd2, 0x6e, 0x34, 0x3e, 0xc9, 0x1f, 0x50, 0x3f, 0x33, 0x20, 0x31, 0x3c, 0x00, // @...n4>..P?3 1<.
	0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, // ...3............
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x7a, 0x44, 0x32, // ........@....zD2
	0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3e, 0x01, 0x40, 0x00, 0x00, 0x00, // ....@.....>.@...
	0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, // ..?.............
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x0e, // ........@.....?.
	0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, // ...........8...r
	0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, //  ...............
	0x07, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x20, 0x10, 0x00, 0x00, // .......6.... ...
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x12, 0x00, 0x00, 0x01, 0x18, // ....@.....?.....
	0x00, 0x00, 0x08, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, // ...........:. ..
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x1f, // ........@.....@.
	0x00, 0x04, 0x03, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x0a, 0x12, // ................
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // ................
	0x40, 0x00, 0x00, 0xd2, 0x6e, 0x34, 0x3e, 0xc9, 0x1f, 0x50, 0x3f, 0x33, 0x20, 0x31, 0x3c, 0x00, // @...n4>..P?3 1<.
	0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, // ...3............
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x7a, 0x44, 0x32, // ........@....zD2
	0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3e, 0x01, 0x40, 0x00, 0x00, 0x00, // ....@.....>.@...
	0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, // ..?.............
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x0e, // ........@.....?.
	0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, // ...........8...r
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, // ................
	0x07, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x01, // ...........r....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x1c, 0x2e, 0x4d, 0x3b, 0x1c, 0x2e, 0x4d, 0x3b, 0x1c, // ....@....M;..M;.
	0x2e, 0x4d, 0x3b, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, // .M;....F.......8
	0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, // ...r.......F....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x52, 0xb8, 0x4e, 0x41, 0x52, 0xb8, 0x4e, 0x41, 0x52, // ....@..R.NAR.NAR
	0xb8, 0x4e, 0x41, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x05, 0x72, 0x00, 0x10, 0x00, 0x00, // .NA..../...r....
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0x72, // ...F.......8...r
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // .......F........
	0x40, 0x00, 0x00, 0x55, 0x55, 0xd5, 0x3e, 0x55, 0x55, 0xd5, 0x3e, 0x55, 0x55, 0xd5, 0x3e, 0x00, // @..UU.>UU.>UU.>.
	0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x05, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // .......r.......F
	0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0f, 0x72, 0x00, 0x10, 0x00, 0x00, // .......2...r....
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x3d, // ...F........@..=
	0x0a, 0x87, 0x3f, 0x3d, 0x0a, 0x87, 0x3f, 0x3d, 0x0a, 0x87, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x02, // ..?=..?=..?.....
	0x40, 0x00, 0x00, 0xae, 0x47, 0x61, 0xbd, 0xae, 0x47, 0x61, 0xbd, 0xae, 0x47, 0x61, 0xbd, 0x00, // @...Ga..Ga..Ga..
	0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // ...7...r ......F
	0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x20, 0x10, 0x00, 0x00, // .......6.... ...
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x15, 0x00, 0x00, 0x01, 0x15, // ....@.....?.....
	0x00, 0x00, 0x01, 0x15, 0x00, 0x00, 0x01, 0x3e, 0x00, 0x00, 0x01, 0x00, 0x00, 0x80, 0x00,       // .......>.......
};
static const uint8_t fs_display_alphaseg_clip_spv[9847] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4e, 0xbd, 0x0b, 0x9f, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x11, 0x73, // FSH.N..........s
	0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, // taticColor_Alpha
	0x12, 0x01, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x76, 0x43, 0x6f, 0x6c, 0x6f, // ...........vColo
	0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, 0x01, 0x00, 0x00, 0x01, // r_Intensity.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, // ......alphaSegSt
	0x61, 0x74, 0x65, 0x12, 0x04, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x77, 0x5f, // ate..@........w_
	0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x01, 0x30, 0x00, 0x01, 0x00, 0x00, 0x00, // h_height..0.....
	0x00, 0x00, 0x16, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, // ...glassAmbient_
	0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x01, 0x20, 0x00, 0x01, 0x00, 0x00, // Roughness.. ....
	0x00, 0x00, 0x00, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x30, 0x00, // ....displayTex0.
	0x02, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, // ......"..display
	0x47, 0x6c, 0x61, 0x73, 0x73, 0x30, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0xb0, // Glass0......."..
	0x25, 0x00, 0x00, 0x03, 0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x0b, 0x00, 0x08, 0x00, 0x26, // %....#.........&
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, // ................
	0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, // .......GLSL.std.
	0x34, 0x35, 0x30, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // 450.............
	0x00, 0x00, 0x00, 0x0f, 0x00, 0x09, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, // ...............m
	0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0xd1, 0x01, 0x00, 0x00, 0xd5, 0x01, 0x00, 0x00, 0xd8, // ain.............
	0x01, 0x00, 0x00, 0xe7, 0x01, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, 0x05, // ................
	0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x05, // .......main.....
	0x00, 0x07, 0x00, 0x46, 0x00, 0x00, 0x00, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, // ...F...displayTe
	0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00, 0x49, // xSampler.......I
	0x00, 0x00, 0x00, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x54, 0x65, 0x78, // ...displayTexTex
	0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x64, // ture.......M...d
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, // isplayGlassSampl
	0x65, 0x72, 0x00, 0x05, 0x00, 0x07, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x64, 0x69, 0x73, 0x70, 0x6c, // er.....O...displ
	0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x05, // ayGlassTexture..
	0x00, 0x06, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x55, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x6c, // .......UniformBl
	0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x00, // ock.............
	0x00, 0x00, 0x00, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, // ...vColor_Intens
	0x69, 0x74, 0x79, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x01, // ity.............
	0x00, 0x00, 0x00, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, // ...staticColor_A
	0x6c, 0x70, 0x68, 0x61, 0x00, 0x00, 0x00, 0x06, 0x00, 0x09, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x02, // lpha............
	0x00, 0x00, 0x00, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, // ...glassAmbient_
	0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0xc4, // Roughness.......
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, // .......w_h_heigh
	0x74, 0x00, 0x00, 0x06, 0x00, 0x07, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x61, // t..............a
	0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x00, 0x00, 0x00, 0x05, // lphaSegState....
	0x00, 0x03, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0xd1, // ................
	0x01, 0x00, 0x00, 0x76, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, // ...v_clipDistanc
	0x65, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0xd5, 0x01, 0x00, 0x00, 0x76, 0x5f, 0x74, 0x65, 0x78, // e..........v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x05, 0x00, 0x05, 0x00, 0xd8, 0x01, 0x00, 0x00, 0x76, // coord0.........v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x00, 0x05, 0x00, 0x06, 0x00, 0xe7, // _texcoord1......
	0x01, 0x00, 0x00, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, // ...bgfx_FragData
	0x30, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x46, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // 0..G...F..."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x46, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x12, // ...G...F...!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x49, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G...I..."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x49, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x02, // ...G...I...!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G...M..."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x13, // ...G...M...!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G...O..."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x03, // ...G...O...!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xc3, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x10, // ...G............
	0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, // ...H...........#
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x01, // .......H........
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0xc4, // ...#.......H....
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x48, // .......#... ...H
	0x00, 0x05, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x30, // ...........#...0
	0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x23, // ...H...........#
	0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x02, // ...@...G........
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G......."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x01, // ...G.......!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xd1, 0x01, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, // ...G............
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xd5, 0x01, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, // ...G............
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xd8, 0x01, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x02, // ...G............
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xe7, 0x01, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, // ...G............
	0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x21, 0x00, 0x03, 0x00, 0x03, // ...........!....
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00, 0x16, // ................
	0x00, 0x03, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x19, 0x00, 0x09, 0x00, 0x08, // ....... ........
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, // ................
	0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x17, // ................
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x17, // ................
	0x00, 0x04, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, // ............... 
	0x00, 0x04, 0x00, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3b, // ...E...........;
	0x00, 0x04, 0x00, 0x45, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, // ...E...F....... 
	0x00, 0x04, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3b, // ...H...........;
	0x00, 0x04, 0x00, 0x48, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, // ...H...I.......;
	0x00, 0x04, 0x00, 0x45, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, // ...E...M.......;
	0x00, 0x04, 0x00, 0x48, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, // ...H...O........
	0x00, 0x04, 0x00, 0x52, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, // ...R... .......+
	0x00, 0x04, 0x00, 0x52, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, // ...R...S.......+
	0x00, 0x04, 0x00, 0x52, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1b, // ...R...W........
	0x00, 0x03, 0x00, 0x5b, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...[.......+....
	0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x1c, 0x2e, 0x4d, 0x3b, 0x14, 0x00, 0x02, 0x00, 0x71, // ...p.....M;....q
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x76, 0x00, 0x00, 0x00, 0x52, // ...+.......v...R
	0xb8, 0x4e, 0x41, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7a, 0x00, 0x00, 0x00, 0x3d, // .NA+.......z...=
	0x0a, 0x87, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x55, // ..?+.......|...U
	0x55, 0xd5, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0xae, // U.>+............
	0x47, 0x61, 0x3d, 0x15, 0x00, 0x04, 0x00, 0x8a, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, // Ga=........ ....
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x8a, 0x00, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0x00, // ...+............
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9e, 0x00, 0x00, 0x00, 0xd2, // ...+............
	0x6e, 0x34, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9f, 0x00, 0x00, 0x00, 0xc9, // n4>+............
	0x1f, 0x50, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x33, // .P?+...........3
	0x20, 0x31, 0x3c, 0x2c, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, 0x00, 0xa1, 0x00, 0x00, 0x00, 0x9e, //  1<,............
	0x00, 0x00, 0x00, 0x9f, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...........+....
	0x00, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7a, 0x44, 0x2b, 0x00, 0x04, 0x00, 0x07, // .........zD+....
	0x00, 0x00, 0x00, 0xa7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........>+....
	0x00, 0x00, 0x00, 0xa9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........?+....
	0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0x33, 0x33, 0xf3, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, // .......33.>+....
	0x00, 0x00, 0x00, 0xbb, 0x00, 0x00, 0x00, 0x66, 0x66, 0x06, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x8a, // .......ff.?+....
	0x00, 0x00, 0x00, 0xc2, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x00, 0xc3, // ................
	0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xc2, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x07, 0x00, 0xc4, // ................
	0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, // ....... ........
	0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0xc5, 0x00, 0x00, 0x00, 0xc6, // .......;........
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x02, // ....... ........
	0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x8a, 0x00, 0x00, 0x00, 0xf3, // .......+........
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x09, // .......+........
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x52, 0x00, 0x00, 0x00, 0x17, // .......+...R....
	0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x52, 0x00, 0x00, 0x00, 0x3f, // .......+...R...?
	0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x43, // .......+.......C
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x52, 0x00, 0x00, 0x00, 0x55, // ......?+...R...U
	0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x59, // .......+.......Y
	0x01, 0x00, 0x00, 0x00, 0x00, 0x40, 0x3f, 0x20, 0x00, 0x04, 0x00, 0x7f, 0x01, 0x00, 0x00, 0x02, // .....@? ........
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbe, // .......+........
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x20, 0x00, 0x04, 0x00, 0xd0, 0x01, 0x00, 0x00, 0x01, // ......@ ........
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0xd0, 0x01, 0x00, 0x00, 0xd1, // .......;........
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0xd4, 0x01, 0x00, 0x00, 0x01, // ....... ........
	0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0xd4, 0x01, 0x00, 0x00, 0xd5, // .......;........
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0xd4, 0x01, 0x00, 0x00, 0xd8, // .......;........
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0xe6, 0x01, 0x00, 0x00, 0x03, // ....... ........
	0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0xe6, 0x01, 0x00, 0x00, 0xe7, // .......;........
	0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x19, // .......,........
	0x05, 0x00, 0x00, 0x09, 0x01, 0x00, 0x00, 0x09, 0x01, 0x00, 0x00, 0x09, 0x01, 0x00, 0x00, 0x09, // ................
	0x01, 0x00, 0x00, 0x2c, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x1b, 0x05, 0x00, 0x00, 0xb8, // ...,............
	0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0x2c, // ...............,
	0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x1c, 0x05, 0x00, 0x00, 0xbb, 0x00, 0x00, 0x00, 0xbb, // ................
	0x00, 0x00, 0x00, 0xbb, 0x00, 0x00, 0x00, 0xbb, 0x00, 0x00, 0x00, 0x01, 0x00, 0x03, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0x25, 0x05, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, // ...%...6........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, // ................
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0x46, // ...=.......G...F
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x49, // ...=.......J...I
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x4e, 0x00, 0x00, 0x00, 0x4d, // ...=.......N...M
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x4f, // ...=.......P...O
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd2, 0x01, 0x00, 0x00, 0xd1, // ...=............
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xd6, 0x01, 0x00, 0x00, 0xd5, // ...=............
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xd9, 0x01, 0x00, 0x00, 0xd8, // ...=............
	0x01, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x71, 0x00, 0x00, 0x00, 0x23, 0x02, 0x00, 0x00, 0xd2, // .......q...#....
	0x01, 0x00, 0x00, 0x09, 0x01, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x25, 0x02, 0x00, 0x00, 0x00, // ...........%....
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x23, 0x02, 0x00, 0x00, 0x24, 0x02, 0x00, 0x00, 0x25, // .......#...$...%
	0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x24, 0x02, 0x00, 0x00, 0xfc, 0x00, 0x01, 0x00, 0xf8, // .......$........
	0x00, 0x02, 0x00, 0x25, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x29, // ...%...Q.......)
	0x02, 0x00, 0x00, 0xd9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x2a, 0x02, 0x00, 0x00, 0x29, 0x02, 0x00, 0x00, 0xa7, 0x00, 0x00, 0x00, 0x51, // ...*...).......Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2c, 0x02, 0x00, 0x00, 0xd9, 0x01, 0x00, 0x00, 0x01, // .......,........
	0x00, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x2d, 0x02, 0x00, 0x00, 0x2a, // ...P.......-...*
	0x02, 0x00, 0x00, 0x2c, 0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x2e, // ...,...A........
	0x02, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x17, 0x01, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x3d, // ...........W...=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x2f, 0x02, 0x00, 0x00, 0x2e, 0x02, 0x00, 0x00, 0x56, // ......./.......V
	0x00, 0x05, 0x00, 0x5b, 0x00, 0x00, 0x00, 0x18, 0x03, 0x00, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x47, // ...[.......J...G
	0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x00, 0x00, 0x18, // ...W............
	0x03, 0x00, 0x00, 0x2d, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xd0, // ...-............
	0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x1b, 0x05, 0x00, 0x00, 0x1c, // .......1........
	0x05, 0x00, 0x00, 0x1a, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd2, // .......Q........
	0x02, 0x00, 0x00, 0xd0, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc7, // ...........A....
	0x00, 0x00, 0x00, 0xd3, 0x02, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x3d, // ...........S...=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xd4, 0x02, 0x00, 0x00, 0xd3, 0x02, 0x00, 0x00, 0x4f, // ...............O
	0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0xd5, 0x02, 0x00, 0x00, 0xd4, 0x02, 0x00, 0x00, 0xd4, // ................
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x05, 0x00, 0xc7, 0x00, 0x00, 0x00, 0xd6, 0x02, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x57, // ...............W
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xd7, 0x02, 0x00, 0x00, 0xd6, // ...=............
	0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0xd8, 0x02, 0x00, 0x00, 0xd7, // ...O............
	0x02, 0x00, 0x00, 0xd7, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xda, 0x02, 0x00, 0x00, 0x2f, // ...Q.........../
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xdb, // ................
	0x02, 0x00, 0x00, 0xd8, 0x02, 0x00, 0x00, 0xda, 0x02, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, // ................
	0x00, 0x00, 0x00, 0xdc, 0x02, 0x00, 0x00, 0xd5, 0x02, 0x00, 0x00, 0xdb, 0x02, 0x00, 0x00, 0x8e, // ................
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xdd, 0x02, 0x00, 0x00, 0xdc, 0x02, 0x00, 0x00, 0xd2, // ................
	0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe1, 0x02, 0x00, 0x00, 0xd0, // ...Q............
	0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc7, 0x00, 0x00, 0x00, 0xe2, // .......A........
	0x02, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, // .......S...=....
	0x00, 0x00, 0x00, 0xe3, 0x02, 0x00, 0x00, 0xe2, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, // ...........O....
	0x00, 0x00, 0x00, 0xe4, 0x02, 0x00, 0x00, 0xe3, 0x02, 0x00, 0x00, 0xe3, 0x02, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc7, // ...........A....
	0x00, 0x00, 0x00, 0xe5, 0x02, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x3d, // ...........W...=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xe6, 0x02, 0x00, 0x00, 0xe5, 0x02, 0x00, 0x00, 0x4f, // ...............O
	0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0xe7, 0x02, 0x00, 0x00, 0xe6, 0x02, 0x00, 0x00, 0xe6, // ................
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe9, 0x02, 0x00, 0x00, 0x2f, 0x02, 0x00, 0x00, 0x01, // .........../....
	0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xea, 0x02, 0x00, 0x00, 0xe7, // ................
	0x02, 0x00, 0x00, 0xe9, 0x02, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xeb, // ................
	0x02, 0x00, 0x00, 0xe4, 0x02, 0x00, 0x00, 0xea, 0x02, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, // ................
	0x00, 0x00, 0x00, 0xec, 0x02, 0x00, 0x00, 0xeb, 0x02, 0x00, 0x00, 0xe1, 0x02, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xee, 0x02, 0x00, 0x00, 0xdd, 0x02, 0x00, 0x00, 0xec, // ................
	0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf0, 0x02, 0x00, 0x00, 0xd0, // ...Q............
	0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc7, 0x00, 0x00, 0x00, 0xf1, // .......A........
	0x02, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, // .......S...=....
	0x00, 0x00, 0x00, 0xf2, 0x02, 0x00, 0x00, 0xf1, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, // ...........O....
	0x00, 0x00, 0x00, 0xf3, 0x02, 0x00, 0x00, 0xf2, 0x02, 0x00, 0x00, 0xf2, 0x02, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc7, // ...........A....
	0x00, 0x00, 0x00, 0xf4, 0x02, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x3d, // ...........W...=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xf5, 0x02, 0x00, 0x00, 0xf4, 0x02, 0x00, 0x00, 0x4f, // ...............O
	0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0xf6, 0x02, 0x00, 0x00, 0xf5, 0x02, 0x00, 0x00, 0xf5, // ................
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf8, 0x02, 0x00, 0x00, 0x2f, 0x02, 0x00, 0x00, 0x02, // .........../....
	0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xf9, 0x02, 0x00, 0x00, 0xf6, // ................
	0x02, 0x00, 0x00, 0xf8, 0x02, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xfa, // ................
	0x02, 0x00, 0x00, 0xf3, 0x02, 0x00, 0x00, 0xf9, 0x02, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, // ................
	0x00, 0x00, 0x00, 0xfb, 0x02, 0x00, 0x00, 0xfa, 0x02, 0x00, 0x00, 0xf0, 0x02, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xfd, 0x02, 0x00, 0x00, 0xee, 0x02, 0x00, 0x00, 0xfb, // ................
	0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xff, 0x02, 0x00, 0x00, 0xd0, // ...Q............
	0x02, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x00, // .......A........
	0x03, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, // .......S...=....
	0x00, 0x00, 0x00, 0x01, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, // ...........O....
	0x00, 0x00, 0x00, 0x02, 0x03, 0x00, 0x00, 0x01, 0x03, 0x00, 0x00, 0x01, 0x03, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc7, // ...........A....
	0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x3d, // ...........W...=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x04, 0x03, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x4f, // ...............O
	0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x05, 0x03, 0x00, 0x00, 0x04, 0x03, 0x00, 0x00, 0x04, // ................
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x03, 0x00, 0x00, 0x2f, 0x02, 0x00, 0x00, 0x03, // .........../....
	0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x08, 0x03, 0x00, 0x00, 0x05, // ................
	0x03, 0x00, 0x00, 0x07, 0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x09, // ................
	0x03, 0x00, 0x00, 0x02, 0x03, 0x00, 0x00, 0x08, 0x03, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, // ................
	0x00, 0x00, 0x00, 0x0a, 0x03, 0x00, 0x00, 0x09, 0x03, 0x00, 0x00, 0xff, 0x02, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x0c, 0x03, 0x00, 0x00, 0xfd, 0x02, 0x00, 0x00, 0x0a, // ................
	0x03, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x10, 0x03, 0x00, 0x00, 0x2f, // .............../
	0x02, 0x00, 0x00, 0x1a, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x11, // ................
	0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x19, 0x05, 0x00, 0x00, 0x10, // .......(........
	0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x37, 0x02, 0x00, 0x00, 0xd9, // ...Q.......7....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x38, // ...............8
	0x02, 0x00, 0x00, 0x37, 0x02, 0x00, 0x00, 0xa7, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, // ...7............
	0x00, 0x00, 0x00, 0x39, 0x02, 0x00, 0x00, 0x38, 0x02, 0x00, 0x00, 0xa7, 0x00, 0x00, 0x00, 0x51, // ...9...8.......Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3b, 0x02, 0x00, 0x00, 0xd9, 0x01, 0x00, 0x00, 0x01, // .......;........
	0x00, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3c, 0x02, 0x00, 0x00, 0x39, // ...P.......<...9
	0x02, 0x00, 0x00, 0x3b, 0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x3d, // ...;...A.......=
	0x02, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x17, 0x01, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x3d, // ...........S...=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x3e, 0x02, 0x00, 0x00, 0x3d, 0x02, 0x00, 0x00, 0x56, // .......>...=...V
	0x00, 0x05, 0x00, 0x5b, 0x00, 0x00, 0x00, 0x78, 0x03, 0x00, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x47, // ...[...x...J...G
	0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x7a, 0x03, 0x00, 0x00, 0x78, // ...W.......z...x
	0x03, 0x00, 0x00, 0x3c, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x30, // ...<...........0
	0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x1b, 0x05, 0x00, 0x00, 0x1c, // .......1........
	0x05, 0x00, 0x00, 0x7a, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x32, // ...z...Q.......2
	0x03, 0x00, 0x00, 0x30, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc7, // ...0.......A....
	0x00, 0x00, 0x00, 0x33, 0x03, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x3d, // ...3.......S...=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x34, 0x03, 0x00, 0x00, 0x33, 0x03, 0x00, 0x00, 0x4f, // .......4...3...O
	0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x35, 0x03, 0x00, 0x00, 0x34, 0x03, 0x00, 0x00, 0x34, // .......5...4...4
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x05, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x36, 0x03, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x57, // .......6.......W
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x37, 0x03, 0x00, 0x00, 0x36, // ...=.......7...6
	0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x38, 0x03, 0x00, 0x00, 0x37, // ...O.......8...7
	0x03, 0x00, 0x00, 0x37, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ...7............
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3a, 0x03, 0x00, 0x00, 0x3e, // ...Q.......:...>
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x3b, // ...............;
	0x03, 0x00, 0x00, 0x38, 0x03, 0x00, 0x00, 0x3a, 0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, // ...8...:........
	0x00, 0x00, 0x00, 0x3c, 0x03, 0x00, 0x00, 0x35, 0x03, 0x00, 0x00, 0x3b, 0x03, 0x00, 0x00, 0x8e, // ...<...5...;....
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x3d, 0x03, 0x00, 0x00, 0x3c, 0x03, 0x00, 0x00, 0x32, // .......=...<...2
	0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x3f, 0x03, 0x00, 0x00, 0x0c, // ...........?....
	0x03, 0x00, 0x00, 0x3d, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x41, // ...=...Q.......A
	0x03, 0x00, 0x00, 0x30, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc7, // ...0.......A....
	0x00, 0x00, 0x00, 0x42, 0x03, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x3d, // ...B.......S...=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x43, 0x03, 0x00, 0x00, 0x42, 0x03, 0x00, 0x00, 0x4f, // .......C...B...O
	0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x44, 0x03, 0x00, 0x00, 0x43, 0x03, 0x00, 0x00, 0x43, // .......D...C...C
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x05, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x45, 0x03, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x57, // .......E.......W
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x46, 0x03, 0x00, 0x00, 0x45, // ...=.......F...E
	0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x47, 0x03, 0x00, 0x00, 0x46, // ...O.......G...F
	0x03, 0x00, 0x00, 0x46, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ...F............
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x49, 0x03, 0x00, 0x00, 0x3e, // ...Q.......I...>
	0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x4a, // ...............J
	0x03, 0x00, 0x00, 0x47, 0x03, 0x00, 0x00, 0x49, 0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, // ...G...I........
	0x00, 0x00, 0x00, 0x4b, 0x03, 0x00, 0x00, 0x44, 0x03, 0x00, 0x00, 0x4a, 0x03, 0x00, 0x00, 0x8e, // ...K...D...J....
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x4c, 0x03, 0x00, 0x00, 0x4b, 0x03, 0x00, 0x00, 0x41, // .......L...K...A
	0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x4e, 0x03, 0x00, 0x00, 0x3f, // ...........N...?
	0x03, 0x00, 0x00, 0x4c, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x50, // ...L...Q.......P
	0x03, 0x00, 0x00, 0x30, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc7, // ...0.......A....
	0x00, 0x00, 0x00, 0x51, 0x03, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x3d, // ...Q.......S...=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x52, 0x03, 0x00, 0x00, 0x51, 0x03, 0x00, 0x00, 0x4f, // .......R...Q...O
	0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x53, 0x03, 0x00, 0x00, 0x52, 0x03, 0x00, 0x00, 0x52, // .......S...R...R
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x05, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x54, 0x03, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x57, // .......T.......W
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x55, 0x03, 0x00, 0x00, 0x54, // ...=.......U...T
	0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x56, 0x03, 0x00, 0x00, 0x55, // ...O.......V...U
	0x03, 0x00, 0x00, 0x55, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ...U............
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x58, 0x03, 0x00, 0x00, 0x3e, // ...Q.......X...>
	0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x59, // ...............Y
	0x03, 0x00, 0x00, 0x56, 0x03, 0x00, 0x00, 0x58, 0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, // ...V...X........
	0x00, 0x00, 0x00, 0x5a, 0x03, 0x00, 0x00, 0x53, 0x03, 0x00, 0x00, 0x59, 0x03, 0x00, 0x00, 0x8e, // ...Z...S...Y....
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x5b, 0x03, 0x00, 0x00, 0x5a, 0x03, 0x00, 0x00, 0x50, // .......[...Z...P
	0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x5d, 0x03, 0x00, 0x00, 0x4e, // ...........]...N
	0x03, 0x00, 0x00, 0x5b, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5f, // ...[...Q......._
	0x03, 0x00, 0x00, 0x30, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc7, // ...0.......A....
	0x00, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x3d, // ...`.......S...=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x61, 0x03, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0x4f, // .......a...`...O
	0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x62, 0x03, 0x00, 0x00, 0x61, 0x03, 0x00, 0x00, 0x61, // .......b...a...a
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x05, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x63, 0x03, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x57, // .......c.......W
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x64, 0x03, 0x00, 0x00, 0x63, // ...=.......d...c
	0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x65, 0x03, 0x00, 0x00, 0x64, // ...O.......e...d
	0x03, 0x00, 0x00, 0x64, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ...d............
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x67, 0x03, 0x00, 0x00, 0x3e, // ...Q.......g...>
	0x02, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x68, // ...............h
	0x03, 0x00, 0x00, 0x65, 0x03, 0x00, 0x00, 0x67, 0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, // ...e...g........
	0x00, 0x00, 0x00, 0x69, 0x03, 0x00, 0x00, 0x62, 0x03, 0x00, 0x00, 0x68, 0x03, 0x00, 0x00, 0x8e, // ...i...b...h....
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x6a, 0x03, 0x00, 0x00, 0x69, 0x03, 0x00, 0x00, 0x5f, // .......j...i..._
	0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x6c, 0x03, 0x00, 0x00, 0x5d, // ...........l...]
	0x03, 0x00, 0x00, 0x6a, 0x03, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x70, // ...j...........p
	0x03, 0x00, 0x00, 0x3e, 0x02, 0x00, 0x00, 0x7a, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x0d, // ...>...z........
	0x00, 0x00, 0x00, 0x71, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x11, // ...q.......(....
	0x03, 0x00, 0x00, 0x70, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, // ...p...Q.......F
	0x02, 0x00, 0x00, 0xd9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x47, 0x02, 0x00, 0x00, 0x46, 0x02, 0x00, 0x00, 0xa7, 0x00, 0x00, 0x00, 0x81, // ...G...F........
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x48, 0x02, 0x00, 0x00, 0x47, 0x02, 0x00, 0x00, 0x43, // .......H...G...C
	0x01, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4a, 0x02, 0x00, 0x00, 0xd9, // ...Q.......J....
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x4b, // .......P.......K
	0x02, 0x00, 0x00, 0x48, 0x02, 0x00, 0x00, 0x4a, 0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0xc7, // ...H...J...A....
	0x00, 0x00, 0x00, 0x4c, 0x02, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x17, 0x01, 0x00, 0x00, 0x3f, // ...L...........?
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x4d, 0x02, 0x00, 0x00, 0x4c, // ...=.......M...L
	0x02, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x5b, 0x00, 0x00, 0x00, 0xd8, 0x03, 0x00, 0x00, 0x4a, // ...V...[.......J
	0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xda, // ...G...W........
	0x03, 0x00, 0x00, 0xd8, 0x03, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x0d, // .......K........
	0x00, 0x00, 0x00, 0x90, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x1b, // ...........1....
	0x05, 0x00, 0x00, 0x1c, 0x05, 0x00, 0x00, 0xda, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x92, 0x03, 0x00, 0x00, 0x90, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x05, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x93, 0x03, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x53, // ...............S
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x94, 0x03, 0x00, 0x00, 0x93, // ...=............
	0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x95, 0x03, 0x00, 0x00, 0x94, // ...O............
	0x03, 0x00, 0x00, 0x94, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x96, 0x03, 0x00, 0x00, 0xc6, // ...A............
	0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x97, // ...W...=........
	0x03, 0x00, 0x00, 0x96, 0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x98, // .......O........
	0x03, 0x00, 0x00, 0x97, 0x03, 0x00, 0x00, 0x97, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9a, // .......Q........
	0x03, 0x00, 0x00, 0x4d, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, // ...M............
	0x00, 0x00, 0x00, 0x9b, 0x03, 0x00, 0x00, 0x98, 0x03, 0x00, 0x00, 0x9a, 0x03, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x9c, 0x03, 0x00, 0x00, 0x95, 0x03, 0x00, 0x00, 0x9b, // ................
	0x03, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x9d, 0x03, 0x00, 0x00, 0x9c, // ................
	0x03, 0x00, 0x00, 0x92, 0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x9f, // ................
	0x03, 0x00, 0x00, 0x6c, 0x03, 0x00, 0x00, 0x9d, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...l.......Q....
	0x00, 0x00, 0x00, 0xa1, 0x03, 0x00, 0x00, 0x90, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x05, 0x00, 0xc7, 0x00, 0x00, 0x00, 0xa2, 0x03, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x53, // ...............S
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xa3, 0x03, 0x00, 0x00, 0xa2, // ...=............
	0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0xa4, 0x03, 0x00, 0x00, 0xa3, // ...O............
	0x03, 0x00, 0x00, 0xa3, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc7, 0x00, 0x00, 0x00, 0xa5, 0x03, 0x00, 0x00, 0xc6, // ...A............
	0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xa6, // ...W...=........
	0x03, 0x00, 0x00, 0xa5, 0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0xa7, // .......O........
	0x03, 0x00, 0x00, 0xa6, 0x03, 0x00, 0x00, 0xa6, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa9, // .......Q........
	0x03, 0x00, 0x00, 0x4d, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, // ...M............
	0x00, 0x00, 0x00, 0xaa, 0x03, 0x00, 0x00, 0xa7, 0x03, 0x00, 0x00, 0xa9, 0x03, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xab, 0x03, 0x00, 0x00, 0xa4, 0x03, 0x00, 0x00, 0xaa, // ................
	0x03, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xac, 0x03, 0x00, 0x00, 0xab, // ................
	0x03, 0x00, 0x00, 0xa1, 0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xae, // ................
	0x03, 0x00, 0x00, 0x9f, 0x03, 0x00, 0x00, 0xac, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xb0, 0x03, 0x00, 0x00, 0x90, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x05, 0x00, 0xc7, 0x00, 0x00, 0x00, 0xb1, 0x03, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x53, // ...............S
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xb2, 0x03, 0x00, 0x00, 0xb1, // ...=............
	0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0xb3, 0x03, 0x00, 0x00, 0xb2, // ...O............
	0x03, 0x00, 0x00, 0xb2, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc7, 0x00, 0x00, 0x00, 0xb4, 0x03, 0x00, 0x00, 0xc6, // ...A............
	0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xb5, // ...W...=........
	0x03, 0x00, 0x00, 0xb4, 0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0xb6, // .......O........
	0x03, 0x00, 0x00, 0xb5, 0x03, 0x00, 0x00, 0xb5, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb8, // .......Q........
	0x03, 0x00, 0x00, 0x4d, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, // ...M............
	0x00, 0x00, 0x00, 0xb9, 0x03, 0x00, 0x00, 0xb6, 0x03, 0x00, 0x00, 0xb8, 0x03, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xba, 0x03, 0x00, 0x00, 0xb3, 0x03, 0x00, 0x00, 0xb9, // ................
	0x03, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xbb, 0x03, 0x00, 0x00, 0xba, // ................
	0x03, 0x00, 0x00, 0xb0, 0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xbd, // ................
	0x03, 0x00, 0x00, 0xae, 0x03, 0x00, 0x00, 0xbb, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xbf, 0x03, 0x00, 0x00, 0x90, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x05, 0x00, 0xc7, 0x00, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x53, // ...............S
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xc1, 0x03, 0x00, 0x00, 0xc0, // ...=............
	0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0xc2, 0x03, 0x00, 0x00, 0xc1, // ...O............
	0x03, 0x00, 0x00, 0xc1, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc7, 0x00, 0x00, 0x00, 0xc3, 0x03, 0x00, 0x00, 0xc6, // ...A............
	0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xc4, // ...W...=........
	0x03, 0x00, 0x00, 0xc3, 0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0xc5, // .......O........
	0x03, 0x00, 0x00, 0xc4, 0x03, 0x00, 0x00, 0xc4, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc7, // .......Q........
	0x03, 0x00, 0x00, 0x4d, 0x02, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, // ...M............
	0x00, 0x00, 0x00, 0xc8, 0x03, 0x00, 0x00, 0xc5, 0x03, 0x00, 0x00, 0xc7, 0x03, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xc9, 0x03, 0x00, 0x00, 0xc2, 0x03, 0x00, 0x00, 0xc8, // ................
	0x03, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xca, 0x03, 0x00, 0x00, 0xc9, // ................
	0x03, 0x00, 0x00, 0xbf, 0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xcc, // ................
	0x03, 0x00, 0x00, 0xbd, 0x03, 0x00, 0x00, 0xca, 0x03, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0xd0, 0x03, 0x00, 0x00, 0x4d, 0x02, 0x00, 0x00, 0xda, 0x03, 0x00, 0x00, 0x0c, // .......M........
	0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xd1, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, // ...............(
	0x00, 0x00, 0x00, 0x71, 0x03, 0x00, 0x00, 0xd0, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...q.......Q....
	0x00, 0x00, 0x00, 0x55, 0x02, 0x00, 0x00, 0xd9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x85, // ...U............
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x56, 0x02, 0x00, 0x00, 0x55, 0x02, 0x00, 0x00, 0xa7, // .......V...U....
	0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x57, 0x02, 0x00, 0x00, 0x56, // ...........W...V
	0x02, 0x00, 0x00, 0x59, 0x01, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x59, // ...Y...Q.......Y
	0x02, 0x00, 0x00, 0xd9, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, // ...........P....
	0x00, 0x00, 0x00, 0x5a, 0x02, 0x00, 0x00, 0x57, 0x02, 0x00, 0x00, 0x59, 0x02, 0x00, 0x00, 0x41, // ...Z...W...Y...A
	0x00, 0x06, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x5b, 0x02, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x17, // .......[........
	0x01, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x5c, // ...U...=........
	0x02, 0x00, 0x00, 0x5b, 0x02, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x5b, 0x00, 0x00, 0x00, 0x38, // ...[...V...[...8
	0x04, 0x00, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, // ...J...G...W....
	0x00, 0x00, 0x00, 0x3a, 0x04, 0x00, 0x00, 0x38, 0x04, 0x00, 0x00, 0x5a, 0x02, 0x00, 0x00, 0x0c, // ...:...8...Z....
	0x00, 0x08, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xf0, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, // ...............1
	0x00, 0x00, 0x00, 0x1b, 0x05, 0x00, 0x00, 0x1c, 0x05, 0x00, 0x00, 0x3a, 0x04, 0x00, 0x00, 0x51, // ...........:...Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf2, 0x03, 0x00, 0x00, 0xf0, 0x03, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc7, 0x00, 0x00, 0x00, 0xf3, 0x03, 0x00, 0x00, 0xc6, // ...A............
	0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xf4, // ...S...=........
	0x03, 0x00, 0x00, 0xf3, 0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0xf5, // .......O........
	0x03, 0x00, 0x00, 0xf4, 0x03, 0x00, 0x00, 0xf4, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc7, 0x00, 0x00, 0x00, 0xf6, // .......A........
	0x03, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, // .......W...=....
	0x00, 0x00, 0x00, 0xf7, 0x03, 0x00, 0x00, 0xf6, 0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, // ...........O....
	0x00, 0x00, 0x00, 0xf8, 0x03, 0x00, 0x00, 0xf7, 0x03, 0x00, 0x00, 0xf7, 0x03, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xfa, 0x03, 0x00, 0x00, 0x5c, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8e, // ................
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xfb, 0x03, 0x00, 0x00, 0xf8, 0x03, 0x00, 0x00, 0xfa, // ................
	0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xfc, 0x03, 0x00, 0x00, 0xf5, // ................
	0x03, 0x00, 0x00, 0xfb, 0x03, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xfd, // ................
	0x03, 0x00, 0x00, 0xfc, 0x03, 0x00, 0x00, 0xf2, 0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, // ................
	0x00, 0x00, 0x00, 0xff, 0x03, 0x00, 0x00, 0xcc, 0x03, 0x00, 0x00, 0xfd, 0x03, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x04, 0x00, 0x00, 0xf0, 0x03, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0xc6, // ...A............
	0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x03, // ...S...=........
	0x04, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x04, // .......O........
	0x04, 0x00, 0x00, 0x03, 0x04, 0x00, 0x00, 0x03, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x05, // .......A........
	0x04, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, // .......W...=....
	0x00, 0x00, 0x00, 0x06, 0x04, 0x00, 0x00, 0x05, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, // ...........O....
	0x00, 0x00, 0x00, 0x07, 0x04, 0x00, 0x00, 0x06, 0x04, 0x00, 0x00, 0x06, 0x04, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x09, 0x04, 0x00, 0x00, 0x5c, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x8e, // ................
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x0a, 0x04, 0x00, 0x00, 0x07, 0x04, 0x00, 0x00, 0x09, // ................
	0x04, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x0b, 0x04, 0x00, 0x00, 0x04, // ................
	0x04, 0x00, 0x00, 0x0a, 0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x0c, // ................
	0x04, 0x00, 0x00, 0x0b, 0x04, 0x00, 0x00, 0x01, 0x04, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, // ................
	0x00, 0x00, 0x00, 0x0e, 0x04, 0x00, 0x00, 0xff, 0x03, 0x00, 0x00, 0x0c, 0x04, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x04, 0x00, 0x00, 0xf0, 0x03, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x11, 0x04, 0x00, 0x00, 0xc6, // ...A............
	0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x12, // ...S...=........
	0x04, 0x00, 0x00, 0x11, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x13, // .......O........
	0x04, 0x00, 0x00, 0x12, 0x04, 0x00, 0x00, 0x12, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x14, // .......A........
	0x04, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, // .......W...=....
	0x00, 0x00, 0x00, 0x15, 0x04, 0x00, 0x00, 0x14, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, // ...........O....
	0x00, 0x00, 0x00, 0x16, 0x04, 0x00, 0x00, 0x15, 0x04, 0x00, 0x00, 0x15, 0x04, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x18, 0x04, 0x00, 0x00, 0x5c, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x8e, // ................
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x19, 0x04, 0x00, 0x00, 0x16, 0x04, 0x00, 0x00, 0x18, // ................
	0x04, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x1a, 0x04, 0x00, 0x00, 0x13, // ................
	0x04, 0x00, 0x00, 0x19, 0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x1b, // ................
	0x04, 0x00, 0x00, 0x1a, 0x04, 0x00, 0x00, 0x10, 0x04, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, // ................
	0x00, 0x00, 0x00, 0x1d, 0x04, 0x00, 0x00, 0x0e, 0x04, 0x00, 0x00, 0x1b, 0x04, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1f, 0x04, 0x00, 0x00, 0xf0, 0x03, 0x00, 0x00, 0x03, // ................
	0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x20, 0x04, 0x00, 0x00, 0xc6, // ...A....... ....
	0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x21, // ...S...=.......!
	0x04, 0x00, 0x00, 0x20, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x22, // ... ...O......."
	0x04, 0x00, 0x00, 0x21, 0x04, 0x00, 0x00, 0x21, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ...!...!........
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x23, // .......A.......#
	0x04, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, // .......W...=....
	0x00, 0x00, 0x00, 0x24, 0x04, 0x00, 0x00, 0x23, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, // ...$...#...O....
	0x00, 0x00, 0x00, 0x25, 0x04, 0x00, 0x00, 0x24, 0x04, 0x00, 0x00, 0x24, 0x04, 0x00, 0x00, 0x00, // ...%...$...$....
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x27, 0x04, 0x00, 0x00, 0x5c, 0x02, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x8e, // ...'............
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x28, 0x04, 0x00, 0x00, 0x25, 0x04, 0x00, 0x00, 0x27, // .......(...%...'
	0x04, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x29, 0x04, 0x00, 0x00, 0x22, // ...........)..."
	0x04, 0x00, 0x00, 0x28, 0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x2a, // ...(...........*
	0x04, 0x00, 0x00, 0x29, 0x04, 0x00, 0x00, 0x1f, 0x04, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, // ...)............
	0x00, 0x00, 0x00, 0x2c, 0x04, 0x00, 0x00, 0x1d, 0x04, 0x00, 0x00, 0x2a, 0x04, 0x00, 0x00, 0x85, // ...,.......*....
	0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x30, 0x04, 0x00, 0x00, 0x5c, 0x02, 0x00, 0x00, 0x3a, // .......0.......:
	0x04, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x31, 0x04, 0x00, 0x00, 0x01, // ...........1....
	0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0xd1, 0x03, 0x00, 0x00, 0x30, 0x04, 0x00, 0x00, 0x51, // ...(.......0...Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x64, 0x02, 0x00, 0x00, 0x31, 0x04, 0x00, 0x00, 0x00, // .......d...1....
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x66, 0x02, 0x00, 0x00, 0x31, // ...Q.......f...1
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x67, // ...............g
	0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x64, 0x02, 0x00, 0x00, 0x66, // .......(...d...f
	0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x69, 0x02, 0x00, 0x00, 0x31, // ...Q.......i...1
	0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6a, // ...............j
	0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x67, 0x02, 0x00, 0x00, 0x69, // .......(...g...i
	0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6c, 0x02, 0x00, 0x00, 0x31, // ...Q.......l...1
	0x04, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6d, // ...............m
	0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x6a, 0x02, 0x00, 0x00, 0x6c, // .......(...j...l
	0x02, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x70, 0x02, 0x00, 0x00, 0x6d, // ...........p...m
	0x02, 0x00, 0x00, 0x6d, 0x02, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x71, // ...m...A.......q
	0x02, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, // .......W...=....
	0x00, 0x00, 0x00, 0x72, 0x02, 0x00, 0x00, 0x71, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, // ...r...q...O....
	0x00, 0x00, 0x00, 0x73, 0x02, 0x00, 0x00, 0x72, 0x02, 0x00, 0x00, 0x72, 0x02, 0x00, 0x00, 0x00, // ...s...r...r....
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, // ................
	0x00, 0x00, 0x00, 0x74, 0x02, 0x00, 0x00, 0x73, 0x02, 0x00, 0x00, 0x70, 0x02, 0x00, 0x00, 0x41, // ...t...s...p...A
	0x00, 0x06, 0x00, 0x7f, 0x01, 0x00, 0x00, 0x75, 0x02, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x57, // .......u.......W
	0x00, 0x00, 0x00, 0xf3, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x76, // .......=.......v
	0x02, 0x00, 0x00, 0x75, 0x02, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x78, // ...u...........x
	0x02, 0x00, 0x00, 0x74, 0x02, 0x00, 0x00, 0x76, 0x02, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, // ...t...v........
	0x00, 0x00, 0x00, 0x7a, 0x02, 0x00, 0x00, 0x2c, 0x04, 0x00, 0x00, 0x78, 0x02, 0x00, 0x00, 0x41, // ...z...,...x...A
	0x00, 0x06, 0x00, 0x7f, 0x01, 0x00, 0x00, 0x7b, 0x02, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x55, // .......{.......U
	0x01, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7c, // .......=.......|
	0x02, 0x00, 0x00, 0x7b, 0x02, 0x00, 0x00, 0xb7, 0x00, 0x05, 0x00, 0x71, 0x00, 0x00, 0x00, 0x7d, // ...{.......q...}
	0x02, 0x00, 0x00, 0x7c, 0x02, 0x00, 0x00, 0x09, 0x01, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x92, // ...|............
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x7d, 0x02, 0x00, 0x00, 0x7e, // ...........}...~
	0x02, 0x00, 0x00, 0x92, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x7e, 0x02, 0x00, 0x00, 0x56, // ...........~...V
	0x00, 0x05, 0x00, 0x5b, 0x00, 0x00, 0x00, 0x49, 0x04, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x4e, // ...[...I...P...N
	0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x4b, 0x04, 0x00, 0x00, 0x49, // ...W.......K...I
	0x04, 0x00, 0x00, 0xd6, 0x01, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x82, // .......A........
	0x02, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x3f, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, // .......?...=....
	0x00, 0x00, 0x00, 0x83, 0x02, 0x00, 0x00, 0x82, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, // ...........O....
	0x00, 0x00, 0x00, 0x84, 0x02, 0x00, 0x00, 0x83, 0x02, 0x00, 0x00, 0x83, 0x02, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, // ................
	0x00, 0x00, 0x00, 0x86, 0x02, 0x00, 0x00, 0x84, 0x02, 0x00, 0x00, 0x74, 0x02, 0x00, 0x00, 0x41, // ...........t...A
	0x00, 0x06, 0x00, 0x7f, 0x01, 0x00, 0x00, 0x87, 0x02, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x3f, // ...............?
	0x01, 0x00, 0x00, 0xf3, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x88, // .......=........
	0x02, 0x00, 0x00, 0x87, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8a, // .......Q........
	0x02, 0x00, 0x00, 0x4b, 0x04, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ...K............
	0x00, 0x00, 0x00, 0x8b, 0x02, 0x00, 0x00, 0x88, 0x02, 0x00, 0x00, 0x8a, 0x02, 0x00, 0x00, 0x50, // ...............P
	0x00, 0x06, 0x00, 0x13, 0x00, 0x00, 0x00, 0x8c, 0x02, 0x00, 0x00, 0x8b, 0x02, 0x00, 0x00, 0x8b, // ................
	0x02, 0x00, 0x00, 0x8b, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x7a, 0x02, 0x00, 0x00, 0x86, // ...........z....
	0x02, 0x00, 0x00, 0x8c, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x90, // .......O........
	0x02, 0x00, 0x00, 0x4b, 0x04, 0x00, 0x00, 0x4b, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ...K...K........
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x91, // ................
	0x02, 0x00, 0x00, 0x51, 0x04, 0x00, 0x00, 0x90, 0x02, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x92, // ...Q............
	0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x92, 0x02, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x13, // ................
	0x00, 0x00, 0x00, 0x1d, 0x05, 0x00, 0x00, 0x7a, 0x02, 0x00, 0x00, 0x25, 0x02, 0x00, 0x00, 0x91, // .......z...%....
	0x02, 0x00, 0x00, 0x7e, 0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x7f, 0x01, 0x00, 0x00, 0x93, // ...~...A........
	0x02, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0xf3, 0x00, 0x00, 0x00, 0x3d, // .......S.......=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x94, 0x02, 0x00, 0x00, 0x93, 0x02, 0x00, 0x00, 0xb4, // ................
	0x00, 0x05, 0x00, 0x71, 0x00, 0x00, 0x00, 0x95, 0x02, 0x00, 0x00, 0x94, 0x02, 0x00, 0x00, 0x09, // ...q............
	0x01, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xb5, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // ................
	0x00, 0x04, 0x00, 0x95, 0x02, 0x00, 0x00, 0x96, 0x02, 0x00, 0x00, 0x9c, 0x02, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0x96, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x98, // .......Q........
	0x02, 0x00, 0x00, 0x1d, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x99, 0x02, 0x00, 0x00, 0x1d, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9a, 0x02, 0x00, 0x00, 0x1d, 0x05, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x9b, 0x02, 0x00, 0x00, 0x98, // ...P............
	0x02, 0x00, 0x00, 0x99, 0x02, 0x00, 0x00, 0x9a, 0x02, 0x00, 0x00, 0xa9, 0x00, 0x00, 0x00, 0xf9, // ................
	0x00, 0x02, 0x00, 0xb5, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x9c, 0x02, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x06, 0x00, 0x7f, 0x01, 0x00, 0x00, 0x9d, 0x02, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x53, // ...............S
	0x00, 0x00, 0x00, 0xf3, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9e, // .......=........
	0x02, 0x00, 0x00, 0x9d, 0x02, 0x00, 0x00, 0xb4, 0x00, 0x05, 0x00, 0x71, 0x00, 0x00, 0x00, 0x9f, // ...........q....
	0x02, 0x00, 0x00, 0x9e, 0x02, 0x00, 0x00, 0xa9, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xb4, // ................
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x9f, 0x02, 0x00, 0x00, 0xa0, // ................
	0x02, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xa0, 0x02, 0x00, 0x00, 0x94, // ................
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x56, 0x04, 0x00, 0x00, 0x1d, 0x05, 0x00, 0x00, 0xa1, // .......V........
	0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x57, 0x04, 0x00, 0x00, 0x01, // ...........W....
	0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x56, 0x04, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0x85, // ...%...V........
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5a, 0x04, 0x00, 0x00, 0x57, 0x04, 0x00, 0x00, 0xa7, // .......Z...W....
	0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5b, 0x04, 0x00, 0x00, 0x5a, // ...........[...Z
	0x04, 0x00, 0x00, 0xa9, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5d, // ...............]
	0x04, 0x00, 0x00, 0x57, 0x04, 0x00, 0x00, 0xa9, 0x00, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, // ...W............
	0x00, 0x00, 0x00, 0x5e, 0x04, 0x00, 0x00, 0x5b, 0x04, 0x00, 0x00, 0x5d, 0x04, 0x00, 0x00, 0x8e, // ...^...[...]....
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x5f, 0x04, 0x00, 0x00, 0x1d, 0x05, 0x00, 0x00, 0x5e, // ......._.......^
	0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa3, 0x02, 0x00, 0x00, 0x5f, // ...Q..........._
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa4, // .......Q........
	0x02, 0x00, 0x00, 0x5f, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ..._.......Q....
	0x00, 0x00, 0x00, 0xa5, 0x02, 0x00, 0x00, 0x5f, 0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, // ......._.......P
	0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xa6, 0x02, 0x00, 0x00, 0xa3, 0x02, 0x00, 0x00, 0xa4, // ................
	0x02, 0x00, 0x00, 0xa5, 0x02, 0x00, 0x00, 0xa9, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xb4, // ................
	0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xa7, 0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x7f, // ...........A....
	0x01, 0x00, 0x00, 0xa8, 0x02, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0xf3, // ...........S....
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa9, 0x02, 0x00, 0x00, 0xa8, // ...=............
	0x02, 0x00, 0x00, 0xb4, 0x00, 0x05, 0x00, 0x71, 0x00, 0x00, 0x00, 0xaa, 0x02, 0x00, 0x00, 0xa9, // .......q........
	0x02, 0x00, 0x00, 0xbe, 0x01, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xb3, 0x02, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xaa, 0x02, 0x00, 0x00, 0xab, 0x02, 0x00, 0x00, 0xb3, // ................
	0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xab, 0x02, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x64, 0x04, 0x00, 0x00, 0x1d, 0x05, 0x00, 0x00, 0xa1, 0x00, 0x00, 0x00, 0x0c, // ...d............
	0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x65, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x25, // .......e.......%
	0x00, 0x00, 0x00, 0x64, 0x04, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ...d............
	0x00, 0x00, 0x00, 0x68, 0x04, 0x00, 0x00, 0x65, 0x04, 0x00, 0x00, 0xa7, 0x00, 0x00, 0x00, 0x81, // ...h...e........
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x69, 0x04, 0x00, 0x00, 0x68, 0x04, 0x00, 0x00, 0xa9, // .......i...h....
	0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6b, 0x04, 0x00, 0x00, 0x65, // ...........k...e
	0x04, 0x00, 0x00, 0xa9, 0x00, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6c, // ...............l
	0x04, 0x00, 0x00, 0x69, 0x04, 0x00, 0x00, 0x6b, 0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, // ...i...k........
	0x00, 0x00, 0x00, 0x6d, 0x04, 0x00, 0x00, 0x1d, 0x05, 0x00, 0x00, 0x6c, 0x04, 0x00, 0x00, 0x51, // ...m.......l...Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x74, 0x04, 0x00, 0x00, 0x6d, 0x04, 0x00, 0x00, 0x00, // .......t...m....
	0x00, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x71, 0x00, 0x00, 0x00, 0x86, 0x04, 0x00, 0x00, 0x74, // .......q.......t
	0x04, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x8f, 0x04, 0x00, 0x00, 0x00, // ...p............
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x86, 0x04, 0x00, 0x00, 0x87, 0x04, 0x00, 0x00, 0x8a, // ................
	0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x87, 0x04, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x89, 0x04, 0x00, 0x00, 0x76, 0x00, 0x00, 0x00, 0x74, 0x04, 0x00, 0x00, 0xf9, // .......v...t....
	0x00, 0x02, 0x00, 0x8f, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x8a, 0x04, 0x00, 0x00, 0x0c, // ................
	0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8c, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0x74, 0x04, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ...t...|........
	0x00, 0x00, 0x00, 0x8d, 0x04, 0x00, 0x00, 0x7a, 0x00, 0x00, 0x00, 0x8c, 0x04, 0x00, 0x00, 0x83, // .......z........
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8e, 0x04, 0x00, 0x00, 0x8d, 0x04, 0x00, 0x00, 0x7f, // ................
	0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x8f, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x8f, // ................
	0x04, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1e, 0x05, 0x00, 0x00, 0x89, // ................
	0x04, 0x00, 0x00, 0x87, 0x04, 0x00, 0x00, 0x8e, 0x04, 0x00, 0x00, 0x8a, 0x04, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x77, 0x04, 0x00, 0x00, 0x6d, 0x04, 0x00, 0x00, 0x01, // .......w...m....
	0x00, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x71, 0x00, 0x00, 0x00, 0x9a, 0x04, 0x00, 0x00, 0x77, // .......q.......w
	0x04, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xa3, 0x04, 0x00, 0x00, 0x00, // ...p............
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x9a, 0x04, 0x00, 0x00, 0x9b, 0x04, 0x00, 0x00, 0x9e, // ................
	0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x9b, 0x04, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x9d, 0x04, 0x00, 0x00, 0x76, 0x00, 0x00, 0x00, 0x77, 0x04, 0x00, 0x00, 0xf9, // .......v...w....
	0x00, 0x02, 0x00, 0xa3, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x9e, 0x04, 0x00, 0x00, 0x0c, // ................
	0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa0, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0x77, 0x04, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ...w...|........
	0x00, 0x00, 0x00, 0xa1, 0x04, 0x00, 0x00, 0x7a, 0x00, 0x00, 0x00, 0xa0, 0x04, 0x00, 0x00, 0x83, // .......z........
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa2, 0x04, 0x00, 0x00, 0xa1, 0x04, 0x00, 0x00, 0x7f, // ................
	0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xa3, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xa3, // ................
	0x04, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1f, 0x05, 0x00, 0x00, 0x9d, // ................
	0x04, 0x00, 0x00, 0x9b, 0x04, 0x00, 0x00, 0xa2, 0x04, 0x00, 0x00, 0x9e, 0x04, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7a, 0x04, 0x00, 0x00, 0x6d, 0x04, 0x00, 0x00, 0x02, // .......z...m....
	0x00, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x71, 0x00, 0x00, 0x00, 0xae, 0x04, 0x00, 0x00, 0x7a, // .......q.......z
	0x04, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xb7, 0x04, 0x00, 0x00, 0x00, // ...p............
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xae, 0x04, 0x00, 0x00, 0xaf, 0x04, 0x00, 0x00, 0xb2, // ................
	0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xaf, 0x04, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xb1, 0x04, 0x00, 0x00, 0x76, 0x00, 0x00, 0x00, 0x7a, 0x04, 0x00, 0x00, 0xf9, // .......v...z....
	0x00, 0x02, 0x00, 0xb7, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xb2, 0x04, 0x00, 0x00, 0x0c, // ................
	0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb4, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0x7a, 0x04, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ...z...|........
	0x00, 0x00, 0x00, 0xb5, 0x04, 0x00, 0x00, 0x7a, 0x00, 0x00, 0x00, 0xb4, 0x04, 0x00, 0x00, 0x83, // .......z........
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb6, 0x04, 0x00, 0x00, 0xb5, 0x04, 0x00, 0x00, 0x7f, // ................
	0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xb7, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xb7, // ................
	0x04, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, 0x05, 0x00, 0x00, 0xb1, // ........... ....
	0x04, 0x00, 0x00, 0xaf, 0x04, 0x00, 0x00, 0xb6, 0x04, 0x00, 0x00, 0xb2, 0x04, 0x00, 0x00, 0x50, // ...............P
	0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xb2, 0x02, 0x00, 0x00, 0x1e, 0x05, 0x00, 0x00, 0x1f, // ................
	0x05, 0x00, 0x00, 0x20, 0x05, 0x00, 0x00, 0xa9, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xb3, // ... ............
	0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xb3, 0x02, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0x23, 0x05, 0x00, 0x00, 0x25, 0x05, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0xb2, // ...#...%........
	0x02, 0x00, 0x00, 0xb7, 0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xb4, 0x02, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xb4, 0x02, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x22, // ..............."
	0x05, 0x00, 0x00, 0xa6, 0x02, 0x00, 0x00, 0xa0, 0x02, 0x00, 0x00, 0x23, 0x05, 0x00, 0x00, 0xb3, // ...........#....
	0x02, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xb5, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xb5, // ................
	0x02, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x21, 0x05, 0x00, 0x00, 0x9b, // ...........!....
	0x02, 0x00, 0x00, 0x96, 0x02, 0x00, 0x00, 0x22, 0x05, 0x00, 0x00, 0xb4, 0x02, 0x00, 0x00, 0x3e, // .......".......>
	0x00, 0x03, 0x00, 0xe7, 0x01, 0x00, 0x00, 0x21, 0x05, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, // .......!.......8
	0x00, 0x01, 0x00, 0x00, 0x00, 0x80, 0x00,                                                       // .......
};
static const bgfx::EmbeddedShader fs_display_alphaseg_clip = BGFX_EMBEDDED_SHADER(fs_display_alphaseg_clip);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of fragment shader from fs_dmd.sc to fs_sprite_tex_clip with options: SPRITE TEX CLIP
static const uint8_t fs_sprite_tex_clip_mtl[1063] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4e, 0xbd, 0x0b, 0x9f, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x11, 0x74, // FSH.N..........t
	0x65, 0x78, 0x5f, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ex_spriteSampler
	0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x74, 0x65, 0x78, 0x5f, 0x73, // ...........tex_s
	0x70, 0x72, 0x69, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, // priteTexture....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x54, 0x65, 0x73, 0x74, // .......alphaTest
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x01, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, // Value...........
	0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, // vColor_Intensity
	0x12, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x74, 0x65, 0x78, 0x5f, 0x73, // ...........tex_s
	0x70, 0x72, 0x69, 0x74, 0x65, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, // prite...........
	0x03, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, // ...#include <met
	0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, // al_stdlib>.#incl
	0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, // ude <simd/simd.h
	0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, // >..using namespa
	0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, // ce metal;..struc
	0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // t _Global.{.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, // float4 vColor_In
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // tensity;.    flo
	0x61, 0x74, 0x34, 0x20, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x54, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, // at4 alphaTestVal
	0x75, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, // ue;.};..struct x
	0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, // latMtlMain_out.{
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, // .    float4 bgfx
	0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, // _FragData0 [[col
	0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, // or(0)]];.};..str
	0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, // uct xlatMtlMain_
	0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, // in.{.    float v
	0x5f, 0x63, 0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x5b, 0x5b, // _clipDistance [[
	0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, // user(locn0)]];. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, //    float2 v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, // oord0 [[user(loc
	0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, // n1)]];.};..fragm
	0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, // ent xlatMtlMain_
	0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, // out xlatMtlMain(
	0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, // xlatMtlMain_in i
	0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, // n [[stage_in]], 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, // constant _Global
	0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, // & _mtl_u [[buffe
	0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, // r(0)]], texture2
	0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x73, 0x70, 0x72, // d<float> tex_spr
	0x69, 0x74, 0x65, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x30, 0x29, // ite [[texture(0)
	0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, 0x65, 0x78, 0x5f, // ]], sampler tex_
	0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, // spriteSampler [[
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, // sampler(0)]]).{.
	0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, //     xlatMtlMain_
	0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, // out out = {};.  
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x44, //   if (in.v_clipD
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, // istance < 0.0). 
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x73, //    {.        dis
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x28, 0x29, 0x3b, // card_fragment();
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // .    }.    float
	0x34, 0x20, 0x5f, 0x32, 0x30, 0x37, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x73, 0x70, 0x72, // 4 _207 = tex_spr
	0x69, 0x74, 0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x73, // ite.sample(tex_s
	0x70, 0x72, 0x69, 0x74, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, // priteSampler, in
	0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x20, // .v_texcoord0);. 
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x32, 0x30, 0x37, 0x2e, 0x77, 0x20, 0x3c, 0x20, //    if (_207.w < 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x54, 0x65, 0x73, 0x74, // _mtl_u.alphaTest
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, // Value.x).    {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x66, //        discard_f
	0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x28, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, // ragment();.    }
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, // .    out.bgfx_Fr
	0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // agData0 = float4
	0x28, 0x28, 0x5f, 0x32, 0x30, 0x37, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, // ((_207.xyz * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, // l_u.vColor_Inten
	0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // sity.xyz) * _mtl
	0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, // _u.vColor_Intens
	0x69, 0x74, 0x79, 0x2e, 0x77, 0x2c, 0x20, 0x5f, 0x32, 0x30, 0x37, 0x2e, 0x77, 0x29, 0x3b, 0x0a, // ity.w, _207.w);.
	0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, //     return out;.
	0x7d, 0x0a, 0x0a, 0x00, 0x00, 0x40, 0x00,                                                       // }....@.
};
static const uint8_t fs_sprite_tex_clip_essl[6782] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4e, 0xbd, 0x0b, 0x9f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6b, 0x1a, // FSH.N.........k.
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // s.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, // arying in.precis
	0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3b, // ion highp float;
	0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // .precision highp
	0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, //  int;.#define sh
	0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adow2D(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //  _coord) texture
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // (_sampler, _coor
	0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, // d).#define shado
	0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // w2DProj(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // eProj(_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x6f, 0x75, 0x74, 0x20, 0x6d, 0x65, 0x64, 0x69, // _coord).out medi
	0x75, 0x6d, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, // ump vec4 bgfx_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // agColor;.varying
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, //  float v_clipDis
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, // tance;.varying v
	0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, // ec2 v_texcoord0;
	0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, // .varying vec2 v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // texcoord1;.vec3 
	0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, // instMul(vec3 _ve
	0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, // c, mat3 _mtx) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, // return ( (_vec) 
	0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, // * (_mtx) ); }.ve
	0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, // c3 instMul(mat3 
	0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, // _mtx, vec3 _vec)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, //  { return ( (_mt
	0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, // x) * (_vec) ); }
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, // .vec4 instMul(ve
	0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, // c4 _vec, mat4 _m
	0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, // tx) { return ( (
	0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, // _vec) * (_mtx) )
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, // ; }.vec4 instMul
	0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // (mat4 _mtx, vec4
	0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _vec) { return 
	0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, // ( (_mtx) * (_vec
	0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, // ) ); }.float rcp
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // (float _a) { ret
	0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, // urn 1.0/_a; }.ve
	0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, // c2 rcp(vec2 _a) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, // { return vec2(1.
	0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, // 0)/_a; }.vec3 rc
	0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // p(vec3 _a) { ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, // urn vec3(1.0)/_a
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, // ; }.vec4 rcp(vec
	0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // 4 _a) { return v
	0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // ec4(1.0)/_a; }.v
	0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, // ec2 vec2_splat(f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // loat _x) { retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, // n vec2(_x, _x); 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, // }.vec3 vec3_spla
	0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // t(float _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // turn vec3(_x, _x
	0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, // , _x); }.vec4 ve
	0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // c4_splat(float _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, // x) { return vec4
	0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, // (_x, _x, _x, _x)
	0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, // ; }.uvec2 uvec2_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // splat(uint _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, //  return uvec2(_x
	0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, // , _x); }.uvec3 u
	0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, // vec3_splat(uint 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, // _x) { return uve
	0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, // c3(_x, _x, _x); 
	0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, // }.uvec4 uvec4_sp
	0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // lat(uint _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, // eturn uvec4(_x, 
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, // _x, _x, _x); }.m
	0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, // at4 mtxFromRows(
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, // vec4 _0, vec4 _1
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // , vec4 _2, vec4 
	0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, // _3).{.return tra
	0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, // nspose(mat4(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, // _1, _2, _3) );.}
	0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, // .mat4 mtxFromCol
	0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // s(vec4 _0, vec4 
	0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, // _1, vec4 _2, vec
	0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, // 4 _3).{.return m
	0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, // at4(_0, _1, _2, 
	0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, // _3);.}.mat3 mtxF
	0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, // romRows(vec3 _0,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, //  vec3 _1, vec3 _
	0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, // 2).{.return tran
	0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, // spose(mat3(_0, _
	0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, // 1, _2) );.}.mat3
	0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, //  mtxFromCols(vec
	0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, // 3 _0, vec3 _1, v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec3 _2).{.return
	0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, //  mat3(_0, _1, _2
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, // );.}.uniform vec
	0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, // 4 u_viewRect;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // iform vec4 u_vie
	0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // wTexel;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // mat4 u_view;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, // form mat4 u_invV
	0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, // iew;.uniform mat
	0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // 4 u_proj;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, // m mat4 u_invProj
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // _viewProj;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, // rm mat4 u_invVie
	0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // wProj;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, // at4 u_model[32];
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // modelView;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, // rm mat4 u_modelV
	0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // iewProj;.uniform
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, //  vec4 u_alphaRef
	0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x66, 0x6c, // 4;.float sqr( fl
	0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // oat v).{.return 
	0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, 0x28, // v*v;.}.vec2 sqr(
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  vec2 v).{.retur
	0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x71, // n v*v;.}.vec3 sq
	0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // r( vec3 v).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // urn v*v;.}.vec3 
	0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, // mul_w1( vec3 v, 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // mat4 m).{.return
	0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, //  v.x*m[0].xyz + 
	0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, // (v.y*m[1].xyz + 
	0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, // (v.z*m[2].xyz + 
	0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // m[3].xyz));.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, // oat acos_approx_
	0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, // divPI( float v).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, // {.float x = abs(
	0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, // v);.if(1. - x <=
	0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, //  0.0000610351562
	0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, // 5).return (v >= 
	0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x66, // 0.) ? 0. : 1.;.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, // loat res = ((-0.
	0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, // 155972/3.1415926
	0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, // 5358979323846264
	0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, // 33832795) * x + 
	0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // (1.56467/3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, // 6433832795) ) * 
	0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, // sqrt(1. - x);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // turn (v >= 0.) ?
	0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, //  res : 1. - res;
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, // .}.float atan2_a
	0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, // pprox_div2PI( fl
	0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, // oat y, float x).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, // {.float abs_y = 
	0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, // abs(y);.float ab
	0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, // s_x = abs(x);.if
	0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, // (abs_x <= 0.0000
	0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, // 6103515625 && ab
	0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, // s_y <= 0.0000610
	0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 3515625).return 
	0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, // 0.;.float r = (a
	0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, // bs_x - abs_y) / 
	0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, // (abs_x + abs_y);
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, // .float angle = (
	0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, // (x < 0.) ? (3./8
	0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, // .) : (1./8.)).+ 
	0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, // (0.211868 /(2.*3
	0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, // .141592653589793
	0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, // 2384626433832795
	0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, // ) * r * r - 0.98
	0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, // 7305 /(2.*3.1415
	0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, // 9265358979323846
	0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, // 26433832795)) * 
	0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, // ((x < 0.) ? -r :
	0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, //  r);.return (y <
	0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, //  0.) ? -angle : 
	0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, // angle;.}.float a
	0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, // sin_approx_divPI
	0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // ( float v).{.flo
	0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, // at x = abs(v);.i
	0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, // f(1. - x <= 0.00
	0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, // 006103515625).re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // turn (v >= 0.) ?
	0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, //  0.5 : -0.5;.flo
	0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, // at res = ((-0.15
	0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, // 5972/3.141592653
	0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, // 5897932384626433
	0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, // 832795) * x + (1
	0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, // .56467/3.1415926
	0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, // 5358979323846264
	0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, // 33832795) ) * sq
	0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // rt(1. - x);.retu
	0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, // rn (v >= 0.) ? 0
	0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, // .5 - res : -0.5 
	0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, // + res;.}.vec2 ra
	0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, // y_to_equirectang
	0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, // ular_uv( vec3 ra
	0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, // y).{.return vec2
	0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, // (.0.5 + atan2_ap
	0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, // prox_div2PI(ray.
	0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, // y, ray.x),.acos_
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, // approx_divPI(ray
	0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, // .z));.}.float In
	0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, // vsRGB( float col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // or).{.if (color 
	0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, // <= 0.04045).retu
	0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, // rn color * (1.0/
	0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, // 12.92);.else.ret
	0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, // urn pow(color * 
	0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, // (1.0/1.055) + (0
	0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, // .055/1.055), 2.4
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, // );.}.float InvRe
	0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // c709( float colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, // r).{.if (color <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // = 0.081).return 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, // color * (1.0/4.5
	0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, // );.else.return p
	0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, // ow(color * (1.0/
	0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, // 1.099) + (0.099/
	0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, // 1.099), 1.0/0.45
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, // );.}.float InvGa
	0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // mma( float color
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, // ).{.return InvsR
	0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // GB(color);.}.vec
	0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, // 3 InvGamma( vec3
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  color).{.return
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, //  vec3(InvGamma(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, // olor.x),InvGamma
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // (color.y),InvGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // ma(color.z));.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, // vec3 InvToneMap(
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, //  vec3 color).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, // loat inv_2bh = 0
	0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, // .5/0.25;.float b
	0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, // h = 4.0*0.25 - 2
	0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .0;.return (colo
	0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x63, // r - 1.0 + sqrt(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, // olor*(color + bh
	0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, // ) + 1.0))*inv_2b
	0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, // h;.}.float sRGB(
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, //  float f).{.floa
	0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, // t s;.if (f <= 0.
	0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, // 0031308).s = 12.
	0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, // 92 * f;.else.s =
	0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, //  1.055 * pow(f, 
	0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, // 1.0/2.4) - 0.055
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // ;.return s;.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, // oat Rec709( floa
	0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, // t f).{.float s;.
	0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, // if (f <= 0.018).
	0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, // s = 4.5 * f;.els
	0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, // e.s = 1.099 * po
	0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, // w(f, 0.45) - 0.0
	0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, // 99;.return s;.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, // float FBGamma( f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // loat color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // turn sRGB(color)
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, // ;.}.vec2 FBGamma
	0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // ( vec2 color).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x46, 0x42, 0x47, 0x61, // return vec2(FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, // mma(color.x),FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, // amma(color.y));.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, // }.vec3 FBGamma( 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // vec3 color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // turn vec3(FBGamm
	0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, // a(color.x),FBGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, // ma(color.y),FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, // mma(color.z));.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x32, 0x32, 0x28, // .vec3 FBGamma22(
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, //  vec3 color).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x70, 0x6f, 0x77, 0x28, 0x63, // eturn vec3(pow(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, // olor.x, 1.0/2.2)
	0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x2c, 0x20, 0x31, 0x2e, // ,pow(color.y, 1.
	0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // 0/2.2),pow(color
	0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x29, 0x3b, 0x0a, 0x7d, // .z, 1.0/2.2));.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, // .float FBToneMap
	0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // ( float l).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, // urn l * ((l*0.25
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, //  + 1.0) / (l + 1
	0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, // .0));.}.vec2 FBT
	0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, // oneMap( vec2 col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, // or).{.float l = 
	0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, // dot(color,vec2(0
	0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, // .176204+0.010810
	0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, // 9*0.5,0.812985+0
	0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, // .0108109*0.5));.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, // return color * (
	0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, // (l*0.25 + 1.0) /
	0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, //  (l + 1.0));.}.v
	0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, // ec3 FBToneMap( v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // ec3 color).{.flo
	0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // at l = dot(color
	0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, // ,vec3(0.176204,0
	0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, // .812985,0.010810
	0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // 9));.return colo
	0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, // r * ((l*0.25 + 1
	0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, // .0) / (l + 1.0))
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x76, // ;.}.vec4 Additiv
	0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, // e( vec4 cBase, v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ec4 cBlend, floa
	0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // t percent).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, // urn cBase + cBle
	0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // nd*percent;.}.ve
	0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, // c3 Screen ( vec3
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, //  cBase, vec3 cBl
	0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, // end).{.return 1.
	0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // 0 - (1.0 - cBase
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // ) * (1.0 - cBlen
	0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, // d);.}.vec4 Scree
	0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, // n ( vec4 cBase, 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // vec4 cBlend).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, // eturn 1.0 - (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, //  - cBase) * (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, //  - cBlend);.}.ve
	0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, // c3 ScreenHDR ( v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // ec3 cBase, vec3 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // cBlend).{.return
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, //  max(1.0 - (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // - cBase) * (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // - cBlend), vec3(
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // 0.,0.,0.));.}.ve
	0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, // c4 ScreenHDR ( v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // ec4 cBase, vec4 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // cBlend).{.return
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, //  max(1.0 - (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // - cBase) * (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // - cBlend), vec4(
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, // 0.,0.,0.,0.));.}
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, // .vec4 Multiply (
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, //  vec4 cBase, vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 4 cBlend, float 
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // percent).{.retur
	0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // n cBase * cBlend
	0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // *percent;.}.vec4
	0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, //  Overlay ( vec4 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, // cBase, vec4 cBle
	0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, // nd).{.vec4 cNew 
	0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, // = step(0.5, cBas
	0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, // e);.cNew = mix(c
	0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, // Base*cBlend*2.0,
	0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, //  1.0-2.0*(1.0-cB
	0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // ase)*(1.0-cBlend
	0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ), cNew);.return
	0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, //  cNew;.}.vec4 Ov
	0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // erlayHDR ( vec4 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, // cBase, vec4 cBle
	0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, // nd).{.vec4 cNew 
	0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, // = step(0.5, cBas
	0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, // e);.cNew = max(m
	0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, // ix(cBase*cBlend*
	0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, // 2.0, 1.0-2.0*(1.
	0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, // 0-cBase)*(1.0-cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, // lend), cNew), ve
	0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, // c4(0.,0.,0.,0.))
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, // ;.return cNew;.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, // .vec3 cos_hemisp
	0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, // here_sample( vec
	0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x68, 0x69, // 2 t).{.float phi
	0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, //  = t.y * (2.0*3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, // ;.float cosTheta
	0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, //  = sqrt(1.0 - t.
	0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, // x);.float sinThe
	0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, // ta = sqrt(t.x);.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x7b, 0x73, 0x70, // float sp,cp;.{sp
	0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x63, 0x70, 0x3d, 0x63, 0x6f, 0x73, // =sin(phi);cp=cos
	0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // (phi);};.return 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, // vec3(cp * sinThe
	0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, // ta, cosTheta, sp
	0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, //  * sinTheta);.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, // vec3 rotate_to_v
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, // ector_upper( vec
	0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // 3 vec, vec3 norm
	0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // al).{.if(normal.
	0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, // y > -0.99999).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, // float h = 1.0/(1
	0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, // .0+normal.y);.fl
	0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // oat hz = h*norma
	0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, // l.z;.float hzx =
	0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, //  hz*normal.x;.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, // turn vec3(.vec.x
	0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, //  * (normal.y+hz*
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, // normal.z) + vec.
	0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, // y * normal.x - v
	0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, // ec.z * hzx,.vec.
	0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, // y * normal.y - v
	0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, // ec.x * normal.x 
	0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // - vec.z * normal
	0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // .z,.vec.y * norm
	0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, // al.z - vec.x * h
	0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, // zx + vec.z * (no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // rmal.y+h*normal.
	0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // x*normal.x));.}.
	0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, // else return -vec
	0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // ;.}.uniform vec4
	0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, //  vColor_Intensit
	0x79, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // y;.uniform vec4 
	0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x3b, // vRes_Alpha_time;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x61, 0x6c, // .uniform vec4 al
	0x70, 0x68, 0x61, 0x54, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x3b, 0x0a, 0x75, 0x6e, // phaTestValue;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, // iform sampler2D 
	0x74, 0x65, 0x78, 0x5f, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, // tex_sprite;.vec2
	0x20, 0x68, 0x61, 0x73, 0x68, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, //  hash22( vec2 uv
	0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x72, // ).{.vec3 p3 = fr
	0x61, 0x63, 0x74, 0x28, 0x75, 0x76, 0x2e, 0x78, 0x79, 0x78, 0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, // act(uv.xyx * vec
	0x33, 0x28, 0x2e, 0x31, 0x30, 0x33, 0x31, 0x2c, 0x20, 0x2e, 0x31, 0x30, 0x33, 0x30, 0x2c, 0x20, // 3(.1031, .1030, 
	0x2e, 0x30, 0x39, 0x37, 0x33, 0x29, 0x29, 0x3b, 0x0a, 0x70, 0x33, 0x20, 0x2b, 0x3d, 0x20, 0x64, // .0973));.p3 += d
	0x6f, 0x74, 0x28, 0x70, 0x33, 0x2c, 0x20, 0x70, 0x33, 0x2e, 0x79, 0x7a, 0x78, 0x20, 0x2b, 0x20, // ot(p3, p3.yzx + 
	0x33, 0x33, 0x2e, 0x33, 0x33, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, // 33.33);.return f
	0x72, 0x61, 0x63, 0x74, 0x28, 0x28, 0x70, 0x33, 0x2e, 0x78, 0x78, 0x20, 0x2b, 0x20, 0x70, 0x33, // ract((p3.xx + p3
	0x2e, 0x79, 0x7a, 0x29, 0x2a, 0x70, 0x33, 0x2e, 0x7a, 0x79, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // .yz)*p3.zy);.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x50, // loat triangularP
	0x44, 0x46, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, // DF( float r).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x2a, 0x72, 0x3b, 0x0a, 0x62, // loat p = 2.*r;.b
	0x6f, 0x6f, 0x6c, 0x20, 0x62, 0x20, 0x3d, 0x20, 0x28, 0x70, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x29, // ool b = (p > 1.)
	0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x62, 0x29, 0x0a, 0x70, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x2d, // ;.if (b).p = 2.-
	0x70, 0x3b, 0x0a, 0x70, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x2d, 0x73, 0x71, 0x72, 0x74, 0x28, 0x70, // p;.p = 1.-sqrt(p
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x62, 0x20, 0x3f, 0x20, 0x70, 0x20, // );.return b ? p 
	0x3a, 0x20, 0x2d, 0x70, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, // : -p;.}.void mai
	0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x76, 0x5f, 0x63, 0x6c, 0x69, 0x70, // n().{.if (v_clip
	0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, // Distance < 0.0).
	0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x6c, 0x20, // discard;.vec4 l 
	0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x73, 0x70, // = texture(tex_sp
	0x72, 0x69, 0x74, 0x65, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, // rite, v_texcoord
	0x30, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x6c, 0x2e, 0x61, 0x20, 0x3c, 0x20, 0x61, 0x6c, // 0);.if (l.a < al
	0x70, 0x68, 0x61, 0x54, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x78, 0x29, 0x0a, // phaTestValue.x).
	0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x3b, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, // discard;.bgfx_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x20, // agColor = vec4( 
	0x28, 0x6c, 0x2e, 0x72, 0x67, 0x62, 0x20, 0x2a, 0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, // (l.rgb * vColor_
	0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x67, 0x62, 0x20, 0x2a, 0x20, // Intensity.rgb * 
	0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, // vColor_Intensity
	0x2e, 0x61, 0x29, 0x2c, 0x20, 0x6c, 0x2e, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,             // .a), l.a);.}..
};
static const uint8_t fs_sprite_tex_clip_glsl[7152] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4e, 0xbd, 0x0b, 0x9f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdd, 0x1b, // FSH.N...........
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x6f, // ..#version 440.o
	0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, // ut vec4 bgfx_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // gColor;.#define 
	0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x62, 0x67, 0x66, // gl_FragColor bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x0a, 0x23, 0x64, 0x65, 0x66, // x_FragColor.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x20, 0x20, // ine texture2D   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, //        texture.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // Lod       textur
	0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, // eLod.#define tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ture2DGrad      
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, // textureGrad.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, // ine texture2DPro
	0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, // jLod   texturePr
	0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // ojLod.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, // xture2DProjGrad 
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, //  textureProjGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // CubeLod     text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, // ureLod.#define t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, // extureCubeGrad  
	0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, //   textureGrad.#d
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, // efine texture3D 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //          texture
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, 0x65, 0x78, 0x74, // 2DLodOffset text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, // ureLodOffset.#de
	0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, // fine attribute i
	0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // n.#define varyin
	0x67, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, // g in.#define bgf
	0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // xShadow2D(_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, // er, _coord)     
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // vec4_splat(textu
	0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // re(_sampler, _co
	0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, // ord) ).#define b
	0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, // gfxShadow2DProj(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, // ) vec4_splat(tex
	0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // tureProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x76, 0x61, 0x72, // r, _coord) ).var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x63, 0x6c, 0x69, // ying float v_cli
	0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, // pDistance;.varyi
	0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, // ng vec2 v_texcoo
	0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, // rd0;.varying vec
	0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x3b, 0x0a, 0x76, // 2 v_texcoord1;.v
	0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, // ec3 instMul(vec3
	0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, //  _vec, mat3 _mtx
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, // ) { return ( (_v
	0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, // ec) * (_mtx) ); 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, // }.vec3 instMul(m
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // at3 _mtx, vec3 _
	0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, // vec) { return ( 
	0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, // (_mtx) * (_vec) 
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, // ); }.vec4 instMu
	0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, // l(vec4 _vec, mat
	0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 4 _mtx) { return
	0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, //  ( (_vec) * (_mt
	0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, // x) ); }.vec4 ins
	0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, // tMul(mat4 _mtx, 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // vec4 _vec) { ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, // urn ( (_mtx) * (
	0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _vec) ); }.float
	0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, //  rcp(float _a) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, //  return 1.0/_a; 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, // }.vec2 rcp(vec2 
	0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _a) { return vec
	0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, // 2(1.0)/_a; }.vec
	0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, // 3 rcp(vec3 _a) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, //  return vec3(1.0
	0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, // )/_a; }.vec4 rcp
	0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // (vec4 _a) { retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, // rn vec4(1.0)/_a;
	0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, //  }.vec2 vec2_spl
	0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // at(float _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // eturn vec2(_x, _
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, // x); }.vec3 vec3_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // splat(float _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, // { return vec3(_x
	0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, // , _x, _x); }.vec
	0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, // 4 vec4_splat(flo
	0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // at _x) { return 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // vec4(_x, _x, _x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, //  _x); }.uvec2 uv
	0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, // ec2_splat(uint _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, // x) { return uvec
	0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, // 2(_x, _x); }.uve
	0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, // c3 uvec3_splat(u
	0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // int _x) { return
	0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, //  uvec3(_x, _x, _
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, // x); }.uvec4 uvec
	0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, // 4_splat(uint _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, //  { return uvec4(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // _x, _x, _x, _x);
	0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, //  }.mat4 mtxFromR
	0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, // ows(vec4 _0, vec
	0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, // 4 _1, vec4 _2, v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec4 _3).{.return
	0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, //  transpose(mat4(
	0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, // _0, _1, _2, _3) 
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, // );.}.mat4 mtxFro
	0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, // mCols(vec4 _0, v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, // ec4 _1, vec4 _2,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  vec4 _3).{.retu
	0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, // rn mat4(_0, _1, 
	0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, // _2, _3);.}.mat3 
	0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, // mtxFromRows(vec3
	0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, //  _0, vec3 _1, ve
	0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c3 _2).{.return 
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, // transpose(mat3(_
	0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // 0, _1, _2) );.}.
	0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, // mat3 mtxFromCols
	0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // (vec3 _0, vec3 _
	0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 1, vec3 _2).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, // turn mat3(_0, _1
	0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // , _2);.}.uniform
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, //  vec4 u_viewRect
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, // ;.uniform vec4 u
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // _viewTexel;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, // orm mat4 u_view;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // invView;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, //  mat4 u_proj;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, // iform mat4 u_inv
	0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // Proj;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, // t4 u_viewProj;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, // niform mat4 u_in
	0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // vViewProj;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, // rm mat4 u_model[
	0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, // 32];.uniform mat
	0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, // 4 u_modelView;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, // niform mat4 u_mo
	0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // delViewProj;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, // form vec4 u_alph
	0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, // aRef4;.float sqr
	0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // ( float v).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // urn v*v;.}.vec2 
	0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // sqr( vec2 v).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // eturn v*v;.}.vec
	0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, // 3 sqr( vec3 v).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // .return v*v;.}.v
	0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, // ec3 mul_w1( vec3
	0x20, 0x76, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, //  v, mat4 m).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, // turn v.x*m[0].xy
	0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, // z + (v.y*m[1].xy
	0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, // z + (v.z*m[2].xy
	0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, // z + m[3].xyz));.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, // }.float acos_app
	0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // rox_divPI( float
	0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, //  v).{.float x = 
	0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, // abs(v);.if(1. - 
	0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, // x <= 0.000061035
	0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, // 15625).return (v
	0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, //  >= 0.) ? 0. : 1
	0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, // .;.float res = (
	0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, // (-0.155972/3.141
	0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, // 5926535897932384
	0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, // 626433832795) * 
	0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, // x + (1.56467/3.1
	0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, // 4159265358979323
	0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, // 84626433832795) 
	0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, // ) * sqrt(1. - x)
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, // ;.return (v >= 0
	0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, // .) ? res : 1. - 
	0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, // res;.}.float ata
	0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, // n2_approx_div2PI
	0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ( float y, float
	0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, //  x).{.float abs_
	0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // y = abs(y);.floa
	0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, // t abs_x = abs(x)
	0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, // ;.if(abs_x <= 0.
	0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, // 00006103515625 &
	0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, // & abs_y <= 0.000
	0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, // 06103515625).ret
	0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, // urn 0.;.float r 
	0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, // = (abs_x - abs_y
	0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, // ) / (abs_x + abs
	0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, // _y);.float angle
	0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, //  = ((x < 0.) ? (
	0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, // 3./8.) : (1./8.)
	0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, // ).+ (0.211868 /(
	0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, // 2.*3.14159265358
	0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, // 9793238462643383
	0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, // 2795) * r * r - 
	0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, // 0.987305 /(2.*3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, // ) * ((x < 0.) ? 
	0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // -r : r);.return 
	0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, // (y < 0.) ? -angl
	0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // e : angle;.}.flo
	0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, // at asin_approx_d
	0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, // ivPI( float v).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, // .float x = abs(v
	0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, // );.if(1. - x <= 
	0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, // 0.00006103515625
	0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, // ).return (v >= 0
	0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, // .) ? 0.5 : -0.5;
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, // .float res = ((-
	0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // 0.155972/3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, // 6433832795) * x 
	0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, // + (1.56467/3.141
	0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, // 5926535897932384
	0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, // 626433832795) ) 
	0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, // * sqrt(1. - x);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, // return (v >= 0.)
	0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, //  ? 0.5 - res : -
	0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // 0.5 + res;.}.vec
	0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, // 2 ray_to_equirec
	0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x20, 0x76, 0x65, 0x63, // tangular_uv( vec
	0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 3 ray).{.return 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, // vec2(.0.5 + atan
	0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, // 2_approx_div2PI(
	0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, // ray.y, ray.x),.a
	0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, // cos_approx_divPI
	0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // (ray.z));.}.floa
	0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // t InvsRGB( float
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, //  color).{.if (co
	0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, // lor <= 0.04045).
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, // return color * (
	0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, // 1.0/12.92);.else
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .return pow(colo
	0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, // r * (1.0/1.055) 
	0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, // + (0.055/1.055),
	0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, //  2.4);.}.float I
	0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // nvRec709( float 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, // color).{.if (col
	0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, // or <= 0.081).ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, // urn color * (1.0
	0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, // /4.5);.else.retu
	0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, // rn pow(color * (
	0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, // 1.0/1.099) + (0.
	0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, // 099/1.099), 1.0/
	0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, // 0.45);.}.float I
	0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, // nvGamma( float c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, // olor).{.return I
	0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, // nvsRGB(color);.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, // .vec3 InvGamma( 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // vec3 color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // turn vec3(InvGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, // ma(color.x),InvG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, // amma(color.y),In
	0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, // vGamma(color.z))
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, // ;.}.vec3 InvTone
	0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // Map( vec3 color)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, // .{.float inv_2bh
	0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, //  = 0.5/0.25;.flo
	0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, // at bh = 4.0*0.25
	0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, //  - 2.0;.return (
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, // color - 1.0 + sq
	0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // rt(color*(color 
	0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, // + bh) + 1.0))*in
	0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // v_2bh;.}.float s
	0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, // RGB( float f).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, // float s;.if (f <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, // = 0.0031308).s =
	0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, //  12.92 * f;.else
	0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, // .s = 1.055 * pow
	0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, // (f, 1.0/2.4) - 0
	0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, // .055;.return s;.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, // }.float Rec709( 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float f).{.float
	0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, //  s;.if (f <= 0.0
	0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, // 18).s = 4.5 * f;
	0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, // .else.s = 1.099 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, // * pow(f, 0.45) -
	0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, //  0.099;.return s
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // ;.}.float FBGamm
	0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // a( float color).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, // {.return sRGB(co
	0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, // lor);.}.vec2 FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // amma( vec2 color
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // ).{.return vec2(
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, // FBGamma(color.x)
	0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, // ,FBGamma(color.y
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, // ));.}.vec3 FBGam
	0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // ma( vec3 color).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, // {.return vec3(FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, // Gamma(color.x),F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, // BGamma(color.y),
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, // FBGamma(color.z)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // );.}.vec3 FBGamm
	0x61, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // a22( vec3 color)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x70, // .{.return vec3(p
	0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, // ow(color.x, 1.0/
	0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, // 2.2),pow(color.y
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, // , 1.0/2.2),pow(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, // olor.z, 1.0/2.2)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, // );.}.float FBTon
	0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, // eMap( float l).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, // .return l * ((l*
	0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, // 0.25 + 1.0) / (l
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, //  + 1.0));.}.vec2
	0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, //  FBToneMap( vec2
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //  color).{.float 
	0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, // l = dot(color,ve
	0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, // c2(0.176204+0.01
	0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, // 08109*0.5,0.8129
	0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, // 85+0.0108109*0.5
	0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // ));.return color
	0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, //  * ((l*0.25 + 1.
	0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, // 0) / (l + 1.0));
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, // .}.vec3 FBToneMa
	0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, // p( vec3 color).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, // .float l = dot(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, // olor,vec3(0.1762
	0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, // 04,0.812985,0.01
	0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 08109));.return 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, // color * ((l*0.25
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, //  + 1.0) / (l + 1
	0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, 0x64, // .0));.}.vec4 Add
	0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, // itive( vec4 cBas
	0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, // e, vec4 cBlend, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, // float percent).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, // .return cBase + 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, // cBlend*percent;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, // }.vec3 Screen ( 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // vec3 cBase, vec3
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  cBlend).{.retur
	0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, // n 1.0 - (1.0 - c
	0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, // Base) * (1.0 - c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, // Blend);.}.vec4 S
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, // creen ( vec4 cBa
	0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // se, vec4 cBlend)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // .{.return 1.0 - 
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, // (1.0 - cBase) * 
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, // (1.0 - cBlend);.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, // }.vec3 ScreenHDR
	0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, //  ( vec3 cBase, v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // ec3 cBlend).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, // turn max(1.0 - (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, // 1.0 - cBase) * (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, // 1.0 - cBlend), v
	0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, // ec3(0.,0.,0.));.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, // }.vec4 ScreenHDR
	0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, //  ( vec4 cBase, v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // ec4 cBlend).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, // turn max(1.0 - (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, // 1.0 - cBase) * (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, // 1.0 - cBlend), v
	0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, // ec4(0.,0.,0.,0.)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, // );.}.vec4 Multip
	0x6c, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // ly ( vec4 cBase,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, //  vec4 cBlend, fl
	0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // oat percent).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, // eturn cBase * cB
	0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, // lend*percent;.}.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x20, 0x76, // vec4 Overlay ( v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // ec4 cBase, vec4 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // cBlend).{.vec4 c
	0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, // New = step(0.5, 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, // cBase);.cNew = m
	0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, // ix(cBase*cBlend*
	0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, // 2.0, 1.0-2.0*(1.
	0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, // 0-cBase)*(1.0-cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, // lend), cNew);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // turn cNew;.}.vec
	0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, // 4 OverlayHDR ( v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // ec4 cBase, vec4 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // cBlend).{.vec4 c
	0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, // New = step(0.5, 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, // cBase);.cNew = m
	0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, // ax(mix(cBase*cBl
	0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, // end*2.0, 1.0-2.0
	0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, // *(1.0-cBase)*(1.
	0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, // 0-cBlend), cNew)
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, // , vec4(0.,0.,0.,
	0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, // 0.));.return cNe
	0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, // w;.}.vec3 cos_he
	0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // misphere_sample(
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  vec2 t).{.float
	0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, //  phi = t.y * (2.
	0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, // 0*3.141592653589
	0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, // 7932384626433832
	0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, // 795);.float cosT
	0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, // heta = sqrt(1.0 
	0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, // - t.x);.float si
	0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, // nTheta = sqrt(t.
	0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, // x);.float sp,cp;
	0x0a, 0x7b, 0x73, 0x70, 0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x63, 0x70, // .{sp=sin(phi);cp
	0x3d, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, 0x3b, 0x0a, 0x72, 0x65, 0x74, // =cos(phi);};.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, // urn vec3(cp * si
	0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, // nTheta, cosTheta
	0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x29, // , sp * sinTheta)
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, // ;.}.vec3 rotate_
	0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x28, // to_vector_upper(
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, //  vec3 vec, vec3 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, // normal).{.if(nor
	0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, // mal.y > -0.99999
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, // ).{.float h = 1.
	0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, // 0/(1.0+normal.y)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, // ;.float hz = h*n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, // ormal.z;.float h
	0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // zx = hz*normal.x
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, // ;.return vec3(.v
	0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, // ec.x * (normal.y
	0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, // +hz*normal.z) + 
	0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // vec.y * normal.x
	0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, //  - vec.z * hzx,.
	0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, // vec.y * normal.y
	0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, //  - vec.x * norma
	0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, // l.x - vec.z * no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, // rmal.z,.vec.y * 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, // normal.z - vec.x
	0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, //  * hzx + vec.z *
	0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, //  (normal.y+h*nor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, // mal.x*normal.x))
	0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // ;.}.else return 
	0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // -vec;.}.uniform 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, // vec4 vColor_Inte
	0x6e, 0x73, 0x69, 0x74, 0x79, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // nsity;.uniform v
	0x65, 0x63, 0x34, 0x20, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, // ec4 vRes_Alpha_t
	0x69, 0x6d, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, // ime;.uniform vec
	0x34, 0x20, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x54, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, // 4 alphaTestValue
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ;.uniform sample
	0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x3b, 0x0a, // r2D tex_sprite;.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x68, 0x61, 0x73, 0x68, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, // vec2 hash22( vec
	0x32, 0x20, 0x75, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x33, 0x20, // 2 uv).{.vec3 p3 
	0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x75, 0x76, 0x2e, 0x78, 0x79, 0x78, 0x20, 0x2a, // = fract(uv.xyx *
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x2e, 0x31, 0x30, 0x33, 0x31, 0x2c, 0x20, 0x2e, 0x31, 0x30, //  vec3(.1031, .10
	0x33, 0x30, 0x2c, 0x20, 0x2e, 0x30, 0x39, 0x37, 0x33, 0x29, 0x29, 0x3b, 0x0a, 0x70, 0x33, 0x20, // 30, .0973));.p3 
	0x2b, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x70, 0x33, 0x2c, 0x20, 0x70, 0x33, 0x2e, 0x79, 0x7a, // += dot(p3, p3.yz
	0x78, 0x20, 0x2b, 0x20, 0x33, 0x33, 0x2e, 0x33, 0x33, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // x + 33.33);.retu
	0x72, 0x6e, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x28, 0x70, 0x33, 0x2e, 0x78, 0x78, 0x20, // rn fract((p3.xx 
	0x2b, 0x20, 0x70, 0x33, 0x2e, 0x79, 0x7a, 0x29, 0x2a, 0x70, 0x33, 0x2e, 0x7a, 0x79, 0x29, 0x3b, // + p3.yz)*p3.zy);
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x75, // .}.float triangu
	0x6c, 0x61, 0x72, 0x50, 0x44, 0x46, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x29, // larPDF( float r)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x2a, // .{.float p = 2.*
	0x72, 0x3b, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x62, 0x20, 0x3d, 0x20, 0x28, 0x70, 0x20, 0x3e, // r;.bool b = (p >
	0x20, 0x31, 0x2e, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x62, 0x29, 0x0a, 0x70, 0x20, 0x3d, //  1.);.if (b).p =
	0x20, 0x32, 0x2e, 0x2d, 0x70, 0x3b, 0x0a, 0x70, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x2d, 0x73, 0x71, //  2.-p;.p = 1.-sq
	0x72, 0x74, 0x28, 0x70, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x62, 0x20, // rt(p);.return b 
	0x3f, 0x20, 0x70, 0x20, 0x3a, 0x20, 0x2d, 0x70, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, 0x69, 0x64, // ? p : -p;.}.void
	0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x76, 0x5f, //  main().{.if (v_
	0x63, 0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x3c, 0x20, 0x30, // clipDistance < 0
	0x2e, 0x30, 0x29, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x3b, 0x0a, 0x76, 0x65, 0x63, // .0).discard;.vec
	0x34, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, // 4 l = texture(te
	0x78, 0x5f, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // x_sprite, v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x6c, 0x2e, 0x61, 0x20, // oord0);.if (l.a 
	0x3c, 0x20, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x54, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, // < alphaTestValue
	0x2e, 0x78, 0x29, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, // .x).discard;.gl_
	0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, // FragColor = vec4
	0x28, 0x20, 0x28, 0x6c, 0x2e, 0x72, 0x67, 0x62, 0x20, 0x2a, 0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, // ( (l.rgb * vColo
	0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x67, 0x62, 0x20, // r_Intensity.rgb 
	0x2a, 0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, // * vColor_Intensi
	0x74, 0x79, 0x2e, 0x61, 0x29, 0x2c, 0x20, 0x6c, 0x2e, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00, // ty.a), l.a);.}..
};
static const uint8_t fs_sprite_tex_clip_dx11[672] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4e, 0xbd, 0x0b, 0x9f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x10, 0x76, // FSH.N..........v
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, // Color_Intensity.
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x54, // ..........alphaT
	0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // estValue........
	0x00, 0x00, 0x0a, 0x74, 0x65, 0x78, 0x5f, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x30, 0x01, 0x00, // ...tex_sprite0..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x74, 0x65, 0x78, 0x5f, 0x73, 0x70, 0x72, 0x69, // ........tex_spri
	0x74, 0x65, 0x30, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2c, 0x02, 0x00, 0x00, // te0.........,...
	0x44, 0x58, 0x42, 0x43, 0x0f, 0x54, 0xa4, 0x81, 0x26, 0x35, 0x72, 0xe8, 0xf5, 0xab, 0x62, 0x66, // DXBC.T..&5r...bf
	0x0a, 0x36, 0xbb, 0xa3, 0x01, 0x00, 0x00, 0x00, 0x2c, 0x02, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // .6......,.......
	0x2c, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x4e, // ,...........ISGN
	0x80, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, // ............h...
	0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x0f, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....t...........
	0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, // ............t...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x06, 0x06, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....t...........
	0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, // ............SV_P
	0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, // OSITION.TEXCOORD
	0x00, 0xab, 0xab, 0xab, 0x4f, 0x53, 0x47, 0x4e, 0x2c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ....OSGN,.......
	0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .... ...........
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x54, // ............SV_T
	0x41, 0x52, 0x47, 0x45, 0x54, 0x00, 0xab, 0xab, 0x53, 0x48, 0x45, 0x58, 0x3c, 0x01, 0x00, 0x00, // ARGET...SHEX<...
	0x50, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x6a, 0x08, 0x00, 0x01, 0x59, 0x00, 0x00, 0x04, // P...O...j...Y...
	0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, // F. .........Z...
	0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, // .`......X....p..
	0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x12, 0x10, 0x10, 0x00, // ....UU..b.......
	0x01, 0x00, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x62, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....b...b.......
	0x65, 0x00, 0x00, 0x03, 0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x02, // e.... ......h...
	0x02, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....1...........
	0x0a, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........@......
	0x0d, 0x00, 0x04, 0x03, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, // ............E...
	0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....CU..........
	0x96, 0x15, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........F~......
	0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x08, 0x12, 0x00, 0x10, 0x00, // .`......1.......
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x00, // ....:......... .
	0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x04, 0x03, 0x0a, 0x00, 0x10, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....8...r.......
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // F.......F. .....
	0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....8...r ......
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0x8f, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // F......... .....
	0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....6.... ......
	0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x01, 0x00, 0x00, 0x20, 0x00, // :.......>..... .
};
static const uint8_t fs_sprite_tex_clip_spv[1779] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4e, 0xbd, 0x0b, 0x9f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x0e, 0x61, // FSH.N..........a
	0x6c, 0x70, 0x68, 0x61, 0x54, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x01, 0x10, // lphaTestValue...
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, // ........vColor_I
	0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ntensity........
	0x00, 0x00, 0x0a, 0x74, 0x65, 0x78, 0x5f, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x30, 0x00, 0x02, // ...tex_sprite0..
	0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0x94, 0x06, 0x00, 0x00, 0x03, 0x02, 0x23, 0x07, 0x00, // .....".......#..
	0x00, 0x01, 0x00, 0x0b, 0x00, 0x08, 0x00, 0xd0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, // ................
	0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, // ...............G
	0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30, 0x00, 0x00, 0x00, 0x00, 0x0e, // LSL.std.450.....
	0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x08, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x73, // .......main....s
	0x00, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x04, // ...w............
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf4, // ................
	0x01, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, // ...........main.
	0x00, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00, 0x24, 0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x73, // .......$...tex_s
	0x70, 0x72, 0x69, 0x74, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, // priteSampler....
	0x00, 0x07, 0x00, 0x27, 0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x73, 0x70, 0x72, 0x69, 0x74, // ...'...tex_sprit
	0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x51, // eTexture.......Q
	0x00, 0x00, 0x00, 0x55, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x00, // ...UniformBlock.
	0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x51, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, // .......Q.......v
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x00, // Color_Intensity.
	0x00, 0x00, 0x00, 0x06, 0x00, 0x07, 0x00, 0x51, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x61, // .......Q.......a
	0x6c, 0x70, 0x68, 0x61, 0x54, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x00, 0x00, 0x05, // lphaTestValue...
	0x00, 0x03, 0x00, 0x53, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x73, // ...S...........s
	0x00, 0x00, 0x00, 0x76, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, // ...v_clipDistanc
	0x65, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0x77, 0x00, 0x00, 0x00, 0x76, 0x5f, 0x74, 0x65, 0x78, // e......w...v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x05, 0x00, 0x06, 0x00, 0x89, 0x00, 0x00, 0x00, 0x62, // coord0.........b
	0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x00, 0x00, 0x47, // gfx_FragData0..G
	0x00, 0x04, 0x00, 0x24, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // ...$...".......G
	0x00, 0x04, 0x00, 0x24, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x47, // ...$...!.......G
	0x00, 0x04, 0x00, 0x27, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, // ...'...".......G
	0x00, 0x04, 0x00, 0x27, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x48, // ...'...!.......H
	0x00, 0x05, 0x00, 0x51, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, // ...Q.......#....
	0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x51, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x23, // ...H...Q.......#
	0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00, 0x51, 0x00, 0x00, 0x00, 0x02, // .......G...Q....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x53, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G...S..."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x53, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x01, // ...G...S...!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x73, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, // ...G...s........
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x77, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, // ...G...w........
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x89, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, // ...G............
	0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x21, 0x00, 0x03, 0x00, 0x03, // ...........!....
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00, 0x16, // ................
	0x00, 0x03, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x19, 0x00, 0x09, 0x00, 0x08, // ....... ........
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, // ................
	0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x17, // ................
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x20, // ............... 
	0x00, 0x04, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3b, // ...#...........;
	0x00, 0x04, 0x00, 0x23, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, // ...#...$....... 
	0x00, 0x04, 0x00, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3b, // ...&...........;
	0x00, 0x04, 0x00, 0x26, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, // ...&...'........
	0x00, 0x04, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, // ...*... .......+
	0x00, 0x04, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, // ...*...+.......+
	0x00, 0x04, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1b, // ...*.../........
	0x00, 0x03, 0x00, 0x33, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...3.......+....
	0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x42, // ...>...........B
	0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, // .......M... ....
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x4e, 0x00, 0x00, 0x00, 0x03, // ...+...M...N....
	0x00, 0x00, 0x00, 0x1e, 0x00, 0x04, 0x00, 0x51, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, // .......Q........
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x52, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, // ... ...R.......Q
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x52, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x02, // ...;...R...S....
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x00, // ...+...M...T....
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x55, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, // ... ...U........
	0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, // ................
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x5f, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0d, // ... ..._........
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x72, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, // ... ...r........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x72, 0x00, 0x00, 0x00, 0x73, 0x00, 0x00, 0x00, 0x01, // ...;...r...s....
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x76, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, // ... ...v........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x76, 0x00, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0x01, // ...;...v...w....
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x88, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, // ... ............
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x88, 0x00, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00, 0x03, // ...;............
	0x00, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, // ...6............
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00, 0x3d, // ...............=
	0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x3d, // .......%...$...=
	0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x3d, // .......(...'...=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x73, 0x00, 0x00, 0x00, 0x3d, // .......t...s...=
	0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0xb8, // .......x...w....
	0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x3e, // ...B.......t...>
	0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // ................
	0x00, 0x04, 0x00, 0xa6, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xa7, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x01, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xa8, // ................
	0x00, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x33, 0x00, 0x00, 0x00, 0xcd, 0x00, 0x00, 0x00, 0x28, // ...V...3.......(
	0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xcf, // ...%...W........
	0x00, 0x00, 0x00, 0xcd, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // .......x...Q....
	0x00, 0x00, 0x00, 0xad, 0x00, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x06, 0x00, 0x55, 0x00, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x2b, // ...U.......S...+
	0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xaf, // ...T...=........
	0x00, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0xb0, // ...........B....
	0x00, 0x00, 0x00, 0xad, 0x00, 0x00, 0x00, 0xaf, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xb2, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xb0, 0x00, 0x00, 0x00, 0xb1, // ................
	0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xb1, 0x00, 0x00, 0x00, 0xfc, // ................
	0x00, 0x01, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x5c, // ...........O....
	0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x5f, // ...........A..._
	0x00, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x3d, // .......S.../...=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xb6, 0x00, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x4f, // ...............O
	0x00, 0x08, 0x00, 0x5c, 0x00, 0x00, 0x00, 0xb7, 0x00, 0x00, 0x00, 0xb6, 0x00, 0x00, 0x00, 0xb6, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x85, // ................
	0x00, 0x05, 0x00, 0x5c, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0xb7, // ................
	0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x55, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x53, // ...A...U.......S
	0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x4e, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // .../...N...=....
	0x00, 0x00, 0x00, 0xba, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x5c, // ................
	0x00, 0x00, 0x00, 0xbb, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0xba, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbd, 0x00, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x03, // ................
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbe, 0x00, 0x00, 0x00, 0xbb, // ...Q............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbf, // .......Q........
	0x00, 0x00, 0x00, 0xbb, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xbb, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, // ...............P
	0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xc1, 0x00, 0x00, 0x00, 0xbe, 0x00, 0x00, 0x00, 0xbf, // ................
	0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xbd, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x89, // ...........>....
	0x00, 0x00, 0x00, 0xc1, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00, 0x00, // ...........8....
	0x00, 0x20, 0x00,                                                                               // . .
};
static const bgfx::EmbeddedShader fs_sprite_tex_clip = BGFX_EMBEDDED_SHADER(fs_sprite_tex_clip);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of fragment shader from fs_dmd.sc to fs_sprite_notex_clip with options: SPRITE NOTEX CLIP
static const uint8_t fs_sprite_notex_clip_mtl[2029] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4e, 0xbd, 0x0b, 0x9f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x11, 0x74, // FSH.N..........t
	0x65, 0x78, 0x5f, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ex_spriteSampler
	0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x74, 0x65, 0x78, 0x5f, 0x73, // ...........tex_s
	0x70, 0x72, 0x69, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, // priteTexture....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, // .......vColor_In
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // tensity.........
	0x00, 0x84, 0x07, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, // .....#include <m
	0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, // etal_stdlib>.#in
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, // clude <simd/simd
	0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, // .h>..using names
	0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, // pace metal;..str
	0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, // uct _Global.{.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, //   float4 vColor_
	0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, // Intensity;.};..s
	0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, // truct xlatMtlMai
	0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // n_out.{.    floa
	0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, // t4 bgfx_FragData
	0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, // 0 [[color(0)]];.
	0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // };..struct xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // tlMain_in.{.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, 0x74, // float v_clipDist
	0x61, 0x6e, 0x63, 0x65, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, // ance [[user(locn
	0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, // 0)]];.};..fragme
	0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, // nt xlatMtlMain_o
	0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, // ut xlatMtlMain(x
	0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, // latMtlMain_in in
	0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, //  [[stage_in]], c
	0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, // onstant _Global&
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, //  _mtl_u [[buffer
	0x28, 0x30, 0x29, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, // (0)]]).{.    xla
	0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, // tMtlMain_out out
	0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x69, //  = {};.    if (i
	0x6e, 0x2e, 0x76, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, // n.v_clipDistance
	0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, //  < 0.0).    {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x72, //       discard_fr
	0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x28, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, // agment();.    }.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x38, 0x35, 0x20, //     float3 _185 
	0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, // = _mtl_u.vColor_
	0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, // Intensity.xyz * 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, // _mtl_u.vColor_In
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // tensity.w;.    f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x39, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x38, 0x35, // loat _199 = _185
	0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, // .x;.    float _2
	0x36, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, // 61;.    do.    {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x31, 0x39, // .        if (_19
	0x39, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x34, 0x39, 0x39, 0x39, 0x39, // 9 <= 0.040449999
	0x32, 0x37, 0x32, 0x38, 0x32, 0x33, 0x33, 0x33, 0x33, 0x37, 0x34, 0x30, 0x32, 0x33, 0x34, 0x33, // 2728233337402343
	0x37, 0x35, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, // 75).        {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x36, 0x31, 0x20, 0x3d, //           _261 =
	0x20, 0x5f, 0x31, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x37, 0x37, 0x33, 0x39, 0x39, //  _199 * 0.077399
	0x33, 0x38, 0x30, 0x35, 0x30, 0x35, 0x30, 0x38, 0x34, 0x39, 0x39, 0x31, 0x34, 0x35, 0x35, 0x30, // 3805050849914550
	0x37, 0x38, 0x31, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 78125;.         
	0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    break;.      
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, //   }.        else
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .        {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x36, 0x31, 0x20, 0x3d, 0x20, 0x70, 0x6f, //        _261 = po
	0x77, 0x72, 0x28, 0x28, 0x5f, 0x31, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x39, 0x34, 0x37, // wr((_199 * 0.947
	0x38, 0x36, 0x37, 0x32, 0x37, 0x34, 0x32, 0x38, 0x34, 0x33, 0x36, 0x32, 0x37, 0x39, 0x32, 0x39, // 8672742843627929
	0x36, 0x38, 0x37, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x32, 0x31, 0x33, 0x32, // 6875) + 0.052132
	0x36, 0x39, 0x39, 0x36, 0x33, 0x38, 0x36, 0x30, 0x35, 0x31, 0x31, 0x37, 0x37, 0x39, 0x37, 0x38, // 6996386051177978
	0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x30, 0x30, 0x30, 0x30, 0x30, // 515625, 2.400000
	0x30, 0x39, 0x35, 0x33, 0x36, 0x37, 0x34, 0x33, 0x31, 0x36, 0x34, 0x30, 0x36, 0x32, 0x35, 0x29, // 095367431640625)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, // ;.            br
	0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, // eak;.        }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, //        break; //
	0x20, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, //  unreachable wor
	0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, // karound.    } wh
	0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ile(false);.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, 0x30, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x38, // float _201 = _18
	0x35, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // 5.y;.    float _
	0x32, 0x36, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, // 262;.    do.    
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x32, // {.        if (_2
	0x30, 0x31, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x34, 0x39, 0x39, 0x39, // 01 <= 0.04044999
	0x39, 0x32, 0x37, 0x32, 0x38, 0x32, 0x33, 0x33, 0x33, 0x33, 0x37, 0x34, 0x30, 0x32, 0x33, 0x34, // 9272823333740234
	0x33, 0x37, 0x35, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, // 375).        {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x36, 0x32, 0x20, //            _262 
	0x3d, 0x20, 0x5f, 0x32, 0x30, 0x31, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x37, 0x37, 0x33, 0x39, // = _201 * 0.07739
	0x39, 0x33, 0x38, 0x30, 0x35, 0x30, 0x35, 0x30, 0x38, 0x34, 0x39, 0x39, 0x31, 0x34, 0x35, 0x35, // 9380505084991455
	0x30, 0x37, 0x38, 0x31, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 078125;.        
	0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //     break;.     
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, //    }.        els
	0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // e.        {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x36, 0x32, 0x20, 0x3d, 0x20, 0x70, //         _262 = p
	0x6f, 0x77, 0x72, 0x28, 0x28, 0x5f, 0x32, 0x30, 0x31, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x39, 0x34, // owr((_201 * 0.94
	0x37, 0x38, 0x36, 0x37, 0x32, 0x37, 0x34, 0x32, 0x38, 0x34, 0x33, 0x36, 0x32, 0x37, 0x39, 0x32, // 7867274284362792
	0x39, 0x36, 0x38, 0x37, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x32, 0x31, 0x33, // 96875) + 0.05213
	0x32, 0x36, 0x39, 0x39, 0x36, 0x33, 0x38, 0x36, 0x30, 0x35, 0x31, 0x31, 0x37, 0x37, 0x39, 0x37, // 2699638605117797
	0x38, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x30, 0x30, 0x30, 0x30, // 8515625, 2.40000
	0x30, 0x30, 0x39, 0x35, 0x33, 0x36, 0x37, 0x34, 0x33, 0x31, 0x36, 0x34, 0x30, 0x36, 0x32, 0x35, // 0095367431640625
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, // );.            b
	0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, // reak;.        }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, //         break; /
	0x2f, 0x20, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, // / unreachable wo
	0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, // rkaround.    } w
	0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // hile(false);.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, 0x30, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x31, //  float _203 = _1
	0x38, 0x35, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 85.z;.    float 
	0x5f, 0x32, 0x36, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, // _263;.    do.   
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, //  {.        if (_
	0x32, 0x30, 0x33, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x34, 0x39, 0x39, // 203 <= 0.0404499
	0x39, 0x39, 0x32, 0x37, 0x32, 0x38, 0x32, 0x33, 0x33, 0x33, 0x33, 0x37, 0x34, 0x30, 0x32, 0x33, // 9927282333374023
	0x34, 0x33, 0x37, 0x35, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, // 4375).        {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x36, 0x33, //             _263
	0x20, 0x3d, 0x20, 0x5f, 0x32, 0x30, 0x33, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x37, 0x37, 0x33, //  = _203 * 0.0773
	0x39, 0x39, 0x33, 0x38, 0x30, 0x35, 0x30, 0x35, 0x30, 0x38, 0x34, 0x39, 0x39, 0x31, 0x34, 0x35, // 9938050508499145
	0x35, 0x30, 0x37, 0x38, 0x31, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 5078125;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //      break;.    
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, //     }.        el
	0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, // se.        {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x36, 0x33, 0x20, 0x3d, 0x20, //          _263 = 
	0x70, 0x6f, 0x77, 0x72, 0x28, 0x28, 0x5f, 0x32, 0x30, 0x33, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x39, // powr((_203 * 0.9
	0x34, 0x37, 0x38, 0x36, 0x37, 0x32, 0x37, 0x34, 0x32, 0x38, 0x34, 0x33, 0x36, 0x32, 0x37, 0x39, // 4786727428436279
	0x32, 0x39, 0x36, 0x38, 0x37, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x32, 0x31, // 296875) + 0.0521
	0x33, 0x32, 0x36, 0x39, 0x39, 0x36, 0x33, 0x38, 0x36, 0x30, 0x35, 0x31, 0x31, 0x37, 0x37, 0x39, // 3269963860511779
	0x37, 0x38, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x30, 0x30, 0x30, // 78515625, 2.4000
	0x30, 0x30, 0x30, 0x39, 0x35, 0x33, 0x36, 0x37, 0x34, 0x33, 0x31, 0x36, 0x34, 0x30, 0x36, 0x32, // 0009536743164062
	0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 5);.            
	0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, // break;.        }
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, // .        break; 
	0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, // // unreachable w
	0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, // orkaround.    } 
	0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, // while(false);.  
	0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, //   out.bgfx_FragD
	0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x32, // ata0 = float4(_2
	0x36, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x36, 0x32, 0x2c, 0x20, 0x5f, 0x32, 0x36, 0x33, 0x2c, 0x20, // 61, _262, _263, 
	0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 1.0);.    return
	0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, 0x30, 0x00,                   //  out;.}....0.
};
static const uint8_t fs_sprite_notex_clip_essl[6701] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4e, 0xbd, 0x0b, 0x9f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x1a, // FSH.N...........
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // s.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, // arying in.precis
	0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3b, // ion highp float;
	0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // .precision highp
	0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, //  int;.#define sh
	0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adow2D(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //  _coord) texture
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // (_sampler, _coor
	0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, // d).#define shado
	0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // w2DProj(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // eProj(_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x6f, 0x75, 0x74, 0x20, 0x6d, 0x65, 0x64, 0x69, // _coord).out medi
	0x75, 0x6d, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, // ump vec4 bgfx_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // agColor;.varying
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, //  float v_clipDis
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, // tance;.varying v
	0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, // ec2 v_texcoord0;
	0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, // .varying vec2 v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // texcoord1;.vec3 
	0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, // instMul(vec3 _ve
	0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, // c, mat3 _mtx) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, // return ( (_vec) 
	0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, // * (_mtx) ); }.ve
	0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, // c3 instMul(mat3 
	0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, // _mtx, vec3 _vec)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, //  { return ( (_mt
	0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, // x) * (_vec) ); }
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, // .vec4 instMul(ve
	0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, // c4 _vec, mat4 _m
	0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, // tx) { return ( (
	0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, // _vec) * (_mtx) )
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, // ; }.vec4 instMul
	0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // (mat4 _mtx, vec4
	0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _vec) { return 
	0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, // ( (_mtx) * (_vec
	0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, // ) ); }.float rcp
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // (float _a) { ret
	0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, // urn 1.0/_a; }.ve
	0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, // c2 rcp(vec2 _a) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, // { return vec2(1.
	0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, // 0)/_a; }.vec3 rc
	0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // p(vec3 _a) { ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, // urn vec3(1.0)/_a
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, // ; }.vec4 rcp(vec
	0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // 4 _a) { return v
	0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // ec4(1.0)/_a; }.v
	0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, // ec2 vec2_splat(f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // loat _x) { retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, // n vec2(_x, _x); 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, // }.vec3 vec3_spla
	0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // t(float _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // turn vec3(_x, _x
	0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, // , _x); }.vec4 ve
	0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // c4_splat(float _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, // x) { return vec4
	0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, // (_x, _x, _x, _x)
	0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, // ; }.uvec2 uvec2_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // splat(uint _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, //  return uvec2(_x
	0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, // , _x); }.uvec3 u
	0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, // vec3_splat(uint 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, // _x) { return uve
	0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, // c3(_x, _x, _x); 
	0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, // }.uvec4 uvec4_sp
	0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // lat(uint _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, // eturn uvec4(_x, 
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, // _x, _x, _x); }.m
	0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, // at4 mtxFromRows(
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, // vec4 _0, vec4 _1
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // , vec4 _2, vec4 
	0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, // _3).{.return tra
	0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, // nspose(mat4(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, // _1, _2, _3) );.}
	0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, // .mat4 mtxFromCol
	0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // s(vec4 _0, vec4 
	0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, // _1, vec4 _2, vec
	0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, // 4 _3).{.return m
	0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, // at4(_0, _1, _2, 
	0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, // _3);.}.mat3 mtxF
	0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, // romRows(vec3 _0,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, //  vec3 _1, vec3 _
	0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, // 2).{.return tran
	0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, // spose(mat3(_0, _
	0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, // 1, _2) );.}.mat3
	0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, //  mtxFromCols(vec
	0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, // 3 _0, vec3 _1, v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec3 _2).{.return
	0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, //  mat3(_0, _1, _2
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, // );.}.uniform vec
	0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, // 4 u_viewRect;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // iform vec4 u_vie
	0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // wTexel;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // mat4 u_view;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, // form mat4 u_invV
	0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, // iew;.uniform mat
	0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // 4 u_proj;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, // m mat4 u_invProj
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // _viewProj;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, // rm mat4 u_invVie
	0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // wProj;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, // at4 u_model[32];
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // modelView;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, // rm mat4 u_modelV
	0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // iewProj;.uniform
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, //  vec4 u_alphaRef
	0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x66, 0x6c, // 4;.float sqr( fl
	0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // oat v).{.return 
	0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, 0x28, // v*v;.}.vec2 sqr(
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  vec2 v).{.retur
	0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x71, // n v*v;.}.vec3 sq
	0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // r( vec3 v).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // urn v*v;.}.vec3 
	0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, // mul_w1( vec3 v, 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // mat4 m).{.return
	0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, //  v.x*m[0].xyz + 
	0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, // (v.y*m[1].xyz + 
	0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, // (v.z*m[2].xyz + 
	0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // m[3].xyz));.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, // oat acos_approx_
	0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, // divPI( float v).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, // {.float x = abs(
	0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, // v);.if(1. - x <=
	0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, //  0.0000610351562
	0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, // 5).return (v >= 
	0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x66, // 0.) ? 0. : 1.;.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, // loat res = ((-0.
	0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, // 155972/3.1415926
	0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, // 5358979323846264
	0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, // 33832795) * x + 
	0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // (1.56467/3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, // 6433832795) ) * 
	0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, // sqrt(1. - x);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // turn (v >= 0.) ?
	0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, //  res : 1. - res;
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, // .}.float atan2_a
	0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, // pprox_div2PI( fl
	0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, // oat y, float x).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, // {.float abs_y = 
	0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, // abs(y);.float ab
	0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, // s_x = abs(x);.if
	0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, // (abs_x <= 0.0000
	0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, // 6103515625 && ab
	0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, // s_y <= 0.0000610
	0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 3515625).return 
	0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, // 0.;.float r = (a
	0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, // bs_x - abs_y) / 
	0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, // (abs_x + abs_y);
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, // .float angle = (
	0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, // (x < 0.) ? (3./8
	0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, // .) : (1./8.)).+ 
	0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, // (0.211868 /(2.*3
	0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, // .141592653589793
	0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, // 2384626433832795
	0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, // ) * r * r - 0.98
	0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, // 7305 /(2.*3.1415
	0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, // 9265358979323846
	0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, // 26433832795)) * 
	0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, // ((x < 0.) ? -r :
	0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, //  r);.return (y <
	0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, //  0.) ? -angle : 
	0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, // angle;.}.float a
	0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, // sin_approx_divPI
	0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // ( float v).{.flo
	0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, // at x = abs(v);.i
	0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, // f(1. - x <= 0.00
	0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, // 006103515625).re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // turn (v >= 0.) ?
	0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, //  0.5 : -0.5;.flo
	0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, // at res = ((-0.15
	0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, // 5972/3.141592653
	0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, // 5897932384626433
	0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, // 832795) * x + (1
	0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, // .56467/3.1415926
	0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, // 5358979323846264
	0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, // 33832795) ) * sq
	0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // rt(1. - x);.retu
	0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, // rn (v >= 0.) ? 0
	0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, // .5 - res : -0.5 
	0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, // + res;.}.vec2 ra
	0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, // y_to_equirectang
	0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, // ular_uv( vec3 ra
	0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, // y).{.return vec2
	0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, // (.0.5 + atan2_ap
	0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, // prox_div2PI(ray.
	0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, // y, ray.x),.acos_
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, // approx_divPI(ray
	0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, // .z));.}.float In
	0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, // vsRGB( float col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // or).{.if (color 
	0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, // <= 0.04045).retu
	0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, // rn color * (1.0/
	0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, // 12.92);.else.ret
	0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, // urn pow(color * 
	0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, // (1.0/1.055) + (0
	0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, // .055/1.055), 2.4
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, // );.}.float InvRe
	0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // c709( float colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, // r).{.if (color <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // = 0.081).return 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, // color * (1.0/4.5
	0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, // );.else.return p
	0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, // ow(color * (1.0/
	0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, // 1.099) + (0.099/
	0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, // 1.099), 1.0/0.45
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, // );.}.float InvGa
	0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // mma( float color
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, // ).{.return InvsR
	0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // GB(color);.}.vec
	0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, // 3 InvGamma( vec3
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  color).{.return
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, //  vec3(InvGamma(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, // olor.x),InvGamma
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // (color.y),InvGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // ma(color.z));.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, // vec3 InvToneMap(
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, //  vec3 color).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, // loat inv_2bh = 0
	0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, // .5/0.25;.float b
	0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, // h = 4.0*0.25 - 2
	0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .0;.return (colo
	0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x63, // r - 1.0 + sqrt(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, // olor*(color + bh
	0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, // ) + 1.0))*inv_2b
	0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, // h;.}.float sRGB(
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, //  float f).{.floa
	0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, // t s;.if (f <= 0.
	0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, // 0031308).s = 12.
	0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, // 92 * f;.else.s =
	0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, //  1.055 * pow(f, 
	0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, // 1.0/2.4) - 0.055
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // ;.return s;.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, // oat Rec709( floa
	0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, // t f).{.float s;.
	0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, // if (f <= 0.018).
	0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, // s = 4.5 * f;.els
	0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, // e.s = 1.099 * po
	0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, // w(f, 0.45) - 0.0
	0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, // 99;.return s;.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, // float FBGamma( f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // loat color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // turn sRGB(color)
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, // ;.}.vec2 FBGamma
	0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // ( vec2 color).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x46, 0x42, 0x47, 0x61, // return vec2(FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, // mma(color.x),FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, // amma(color.y));.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, // }.vec3 FBGamma( 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // vec3 color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // turn vec3(FBGamm
	0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, // a(color.x),FBGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, // ma(color.y),FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, // mma(color.z));.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x32, 0x32, 0x28, // .vec3 FBGamma22(
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, //  vec3 color).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x70, 0x6f, 0x77, 0x28, 0x63, // eturn vec3(pow(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, // olor.x, 1.0/2.2)
	0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x2c, 0x20, 0x31, 0x2e, // ,pow(color.y, 1.
	0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // 0/2.2),pow(color
	0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x29, 0x3b, 0x0a, 0x7d, // .z, 1.0/2.2));.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, // .float FBToneMap
	0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // ( float l).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, // urn l * ((l*0.25
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, //  + 1.0) / (l + 1
	0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, // .0));.}.vec2 FBT
	0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, // oneMap( vec2 col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, // or).{.float l = 
	0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, // dot(color,vec2(0
	0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, // .176204+0.010810
	0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, // 9*0.5,0.812985+0
	0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, // .0108109*0.5));.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, // return color * (
	0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, // (l*0.25 + 1.0) /
	0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, //  (l + 1.0));.}.v
	0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, // ec3 FBToneMap( v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // ec3 color).{.flo
	0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // at l = dot(color
	0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, // ,vec3(0.176204,0
	0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, // .812985,0.010810
	0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // 9));.return colo
	0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, // r * ((l*0.25 + 1
	0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, // .0) / (l + 1.0))
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x76, // ;.}.vec4 Additiv
	0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, // e( vec4 cBase, v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ec4 cBlend, floa
	0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // t percent).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, // urn cBase + cBle
	0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // nd*percent;.}.ve
	0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, // c3 Screen ( vec3
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, //  cBase, vec3 cBl
	0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, // end).{.return 1.
	0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // 0 - (1.0 - cBase
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // ) * (1.0 - cBlen
	0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, // d);.}.vec4 Scree
	0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, // n ( vec4 cBase, 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // vec4 cBlend).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, // eturn 1.0 - (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, //  - cBase) * (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, //  - cBlend);.}.ve
	0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, // c3 ScreenHDR ( v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // ec3 cBase, vec3 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // cBlend).{.return
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, //  max(1.0 - (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // - cBase) * (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // - cBlend), vec3(
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // 0.,0.,0.));.}.ve
	0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, // c4 ScreenHDR ( v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // ec4 cBase, vec4 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // cBlend).{.return
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, //  max(1.0 - (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // - cBase) * (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // - cBlend), vec4(
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, // 0.,0.,0.,0.));.}
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, // .vec4 Multiply (
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, //  vec4 cBase, vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 4 cBlend, float 
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // percent).{.retur
	0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // n cBase * cBlend
	0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // *percent;.}.vec4
	0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, //  Overlay ( vec4 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, // cBase, vec4 cBle
	0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, // nd).{.vec4 cNew 
	0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, // = step(0.5, cBas
	0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, // e);.cNew = mix(c
	0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, // Base*cBlend*2.0,
	0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, //  1.0-2.0*(1.0-cB
	0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // ase)*(1.0-cBlend
	0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ), cNew);.return
	0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, //  cNew;.}.vec4 Ov
	0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // erlayHDR ( vec4 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, // cBase, vec4 cBle
	0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, // nd).{.vec4 cNew 
	0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, // = step(0.5, cBas
	0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, // e);.cNew = max(m
	0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, // ix(cBase*cBlend*
	0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, // 2.0, 1.0-2.0*(1.
	0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, // 0-cBase)*(1.0-cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, // lend), cNew), ve
	0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, // c4(0.,0.,0.,0.))
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, // ;.return cNew;.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, // .vec3 cos_hemisp
	0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, // here_sample( vec
	0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x68, 0x69, // 2 t).{.float phi
	0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, //  = t.y * (2.0*3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, // ;.float cosTheta
	0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, //  = sqrt(1.0 - t.
	0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, // x);.float sinThe
	0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, // ta = sqrt(t.x);.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x7b, 0x73, 0x70, // float sp,cp;.{sp
	0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x63, 0x70, 0x3d, 0x63, 0x6f, 0x73, // =sin(phi);cp=cos
	0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // (phi);};.return 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, // vec3(cp * sinThe
	0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, // ta, cosTheta, sp
	0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, //  * sinTheta);.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, // vec3 rotate_to_v
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, // ector_upper( vec
	0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // 3 vec, vec3 norm
	0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // al).{.if(normal.
	0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, // y > -0.99999).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, // float h = 1.0/(1
	0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, // .0+normal.y);.fl
	0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // oat hz = h*norma
	0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, // l.z;.float hzx =
	0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, //  hz*normal.x;.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, // turn vec3(.vec.x
	0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, //  * (normal.y+hz*
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, // normal.z) + vec.
	0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, // y * normal.x - v
	0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, // ec.z * hzx,.vec.
	0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, // y * normal.y - v
	0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, // ec.x * normal.x 
	0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // - vec.z * normal
	0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // .z,.vec.y * norm
	0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, // al.z - vec.x * h
	0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, // zx + vec.z * (no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // rmal.y+h*normal.
	0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // x*normal.x));.}.
	0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, // else return -vec
	0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // ;.}.uniform vec4
	0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, //  vColor_Intensit
	0x79, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // y;.uniform vec4 
	0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x3b, // vRes_Alpha_time;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x61, 0x6c, // .uniform vec4 al
	0x70, 0x68, 0x61, 0x54, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x3b, 0x0a, 0x75, 0x6e, // phaTestValue;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, // iform sampler2D 
	0x74, 0x65, 0x78, 0x5f, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, // tex_sprite;.vec2
	0x20, 0x68, 0x61, 0x73, 0x68, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, //  hash22( vec2 uv
	0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x72, // ).{.vec3 p3 = fr
	0x61, 0x63, 0x74, 0x28, 0x75, 0x76, 0x2e, 0x78, 0x79, 0x78, 0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, // act(uv.xyx * vec
	0x33, 0x28, 0x2e, 0x31, 0x30, 0x33, 0x31, 0x2c, 0x20, 0x2e, 0x31, 0x30, 0x33, 0x30, 0x2c, 0x20, // 3(.1031, .1030, 
	0x2e, 0x30, 0x39, 0x37, 0x33, 0x29, 0x29, 0x3b, 0x0a, 0x70, 0x33, 0x20, 0x2b, 0x3d, 0x20, 0x64, // .0973));.p3 += d
	0x6f, 0x74, 0x28, 0x70, 0x33, 0x2c, 0x20, 0x70, 0x33, 0x2e, 0x79, 0x7a, 0x78, 0x20, 0x2b, 0x20, // ot(p3, p3.yzx + 
	0x33, 0x33, 0x2e, 0x33, 0x33, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, // 33.33);.return f
	0x72, 0x61, 0x63, 0x74, 0x28, 0x28, 0x70, 0x33, 0x2e, 0x78, 0x78, 0x20, 0x2b, 0x20, 0x70, 0x33, // ract((p3.xx + p3
	0x2e, 0x79, 0x7a, 0x29, 0x2a, 0x70, 0x33, 0x2e, 0x7a, 0x79, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // .yz)*p3.zy);.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x50, // loat triangularP
	0x44, 0x46, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, // DF( float r).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x2a, 0x72, 0x3b, 0x0a, 0x62, // loat p = 2.*r;.b
	0x6f, 0x6f, 0x6c, 0x20, 0x62, 0x20, 0x3d, 0x20, 0x28, 0x70, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x29, // ool b = (p > 1.)
	0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x62, 0x29, 0x0a, 0x70, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x2d, // ;.if (b).p = 2.-
	0x70, 0x3b, 0x0a, 0x70, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x2d, 0x73, 0x71, 0x72, 0x74, 0x28, 0x70, // p;.p = 1.-sqrt(p
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x62, 0x20, 0x3f, 0x20, 0x70, 0x20, // );.return b ? p 
	0x3a, 0x20, 0x2d, 0x70, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, // : -p;.}.void mai
	0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x76, 0x5f, 0x63, 0x6c, 0x69, 0x70, // n().{.if (v_clip
	0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, // Distance < 0.0).
	0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x3b, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, // discard;.bgfx_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x49, // agColor = vec4(I
	0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, // nvGamma(vColor_I
	0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x76, // ntensity.xyz * v
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, // Color_Intensity.
	0x77, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,                   // w), 1.0);.}..
};
static const uint8_t fs_sprite_notex_clip_glsl[7071] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4e, 0xbd, 0x0b, 0x9f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8c, 0x1b, // FSH.N...........
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x6f, // ..#version 440.o
	0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, // ut vec4 bgfx_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // gColor;.#define 
	0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x62, 0x67, 0x66, // gl_FragColor bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x0a, 0x23, 0x64, 0x65, 0x66, // x_FragColor.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x20, 0x20, // ine texture2D   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, //        texture.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // Lod       textur
	0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, // eLod.#define tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ture2DGrad      
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, // textureGrad.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, // ine texture2DPro
	0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, // jLod   texturePr
	0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // ojLod.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, // xture2DProjGrad 
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, //  textureProjGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // CubeLod     text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, // ureLod.#define t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, // extureCubeGrad  
	0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, //   textureGrad.#d
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, // efine texture3D 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //          texture
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, 0x65, 0x78, 0x74, // 2DLodOffset text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, // ureLodOffset.#de
	0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, // fine attribute i
	0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // n.#define varyin
	0x67, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, // g in.#define bgf
	0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // xShadow2D(_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, // er, _coord)     
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // vec4_splat(textu
	0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // re(_sampler, _co
	0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, // ord) ).#define b
	0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, // gfxShadow2DProj(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, // ) vec4_splat(tex
	0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // tureProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x76, 0x61, 0x72, // r, _coord) ).var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x63, 0x6c, 0x69, // ying float v_cli
	0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, // pDistance;.varyi
	0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, // ng vec2 v_texcoo
	0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, // rd0;.varying vec
	0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x3b, 0x0a, 0x76, // 2 v_texcoord1;.v
	0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, // ec3 instMul(vec3
	0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, //  _vec, mat3 _mtx
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, // ) { return ( (_v
	0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, // ec) * (_mtx) ); 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, // }.vec3 instMul(m
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // at3 _mtx, vec3 _
	0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, // vec) { return ( 
	0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, // (_mtx) * (_vec) 
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, // ); }.vec4 instMu
	0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, // l(vec4 _vec, mat
	0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 4 _mtx) { return
	0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, //  ( (_vec) * (_mt
	0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, // x) ); }.vec4 ins
	0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, // tMul(mat4 _mtx, 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // vec4 _vec) { ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, // urn ( (_mtx) * (
	0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _vec) ); }.float
	0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, //  rcp(float _a) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, //  return 1.0/_a; 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, // }.vec2 rcp(vec2 
	0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _a) { return vec
	0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, // 2(1.0)/_a; }.vec
	0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, // 3 rcp(vec3 _a) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, //  return vec3(1.0
	0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, // )/_a; }.vec4 rcp
	0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // (vec4 _a) { retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, // rn vec4(1.0)/_a;
	0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, //  }.vec2 vec2_spl
	0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // at(float _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // eturn vec2(_x, _
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, // x); }.vec3 vec3_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // splat(float _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, // { return vec3(_x
	0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, // , _x, _x); }.vec
	0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, // 4 vec4_splat(flo
	0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // at _x) { return 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // vec4(_x, _x, _x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, //  _x); }.uvec2 uv
	0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, // ec2_splat(uint _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, // x) { return uvec
	0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, // 2(_x, _x); }.uve
	0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, // c3 uvec3_splat(u
	0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // int _x) { return
	0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, //  uvec3(_x, _x, _
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, // x); }.uvec4 uvec
	0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, // 4_splat(uint _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, //  { return uvec4(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // _x, _x, _x, _x);
	0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, //  }.mat4 mtxFromR
	0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, // ows(vec4 _0, vec
	0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, // 4 _1, vec4 _2, v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec4 _3).{.return
	0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, //  transpose(mat4(
	0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, // _0, _1, _2, _3) 
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, // );.}.mat4 mtxFro
	0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, // mCols(vec4 _0, v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, // ec4 _1, vec4 _2,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  vec4 _3).{.retu
	0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, // rn mat4(_0, _1, 
	0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, // _2, _3);.}.mat3 
	0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, // mtxFromRows(vec3
	0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, //  _0, vec3 _1, ve
	0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c3 _2).{.return 
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, // transpose(mat3(_
	0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // 0, _1, _2) );.}.
	0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, // mat3 mtxFromCols
	0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // (vec3 _0, vec3 _
	0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 1, vec3 _2).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, // turn mat3(_0, _1
	0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // , _2);.}.uniform
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, //  vec4 u_viewRect
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, // ;.uniform vec4 u
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // _viewTexel;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, // orm mat4 u_view;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // invView;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, //  mat4 u_proj;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, // iform mat4 u_inv
	0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // Proj;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, // t4 u_viewProj;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, // niform mat4 u_in
	0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // vViewProj;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, // rm mat4 u_model[
	0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, // 32];.uniform mat
	0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, // 4 u_modelView;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, // niform mat4 u_mo
	0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // delViewProj;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, // form vec4 u_alph
	0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, // aRef4;.float sqr
	0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // ( float v).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // urn v*v;.}.vec2 
	0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // sqr( vec2 v).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // eturn v*v;.}.vec
	0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, // 3 sqr( vec3 v).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // .return v*v;.}.v
	0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, // ec3 mul_w1( vec3
	0x20, 0x76, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, //  v, mat4 m).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, // turn v.x*m[0].xy
	0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, // z + (v.y*m[1].xy
	0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, // z + (v.z*m[2].xy
	0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, // z + m[3].xyz));.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, // }.float acos_app
	0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // rox_divPI( float
	0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, //  v).{.float x = 
	0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, // abs(v);.if(1. - 
	0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, // x <= 0.000061035
	0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, // 15625).return (v
	0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, //  >= 0.) ? 0. : 1
	0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, // .;.float res = (
	0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, // (-0.155972/3.141
	0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, // 5926535897932384
	0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, // 626433832795) * 
	0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, // x + (1.56467/3.1
	0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, // 4159265358979323
	0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, // 84626433832795) 
	0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, // ) * sqrt(1. - x)
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, // ;.return (v >= 0
	0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, // .) ? res : 1. - 
	0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, // res;.}.float ata
	0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, // n2_approx_div2PI
	0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ( float y, float
	0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, //  x).{.float abs_
	0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // y = abs(y);.floa
	0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, // t abs_x = abs(x)
	0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, // ;.if(abs_x <= 0.
	0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, // 00006103515625 &
	0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, // & abs_y <= 0.000
	0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, // 06103515625).ret
	0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, // urn 0.;.float r 
	0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, // = (abs_x - abs_y
	0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, // ) / (abs_x + abs
	0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, // _y);.float angle
	0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, //  = ((x < 0.) ? (
	0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, // 3./8.) : (1./8.)
	0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, // ).+ (0.211868 /(
	0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, // 2.*3.14159265358
	0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, // 9793238462643383
	0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, // 2795) * r * r - 
	0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, // 0.987305 /(2.*3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, // ) * ((x < 0.) ? 
	0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // -r : r);.return 
	0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, // (y < 0.) ? -angl
	0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // e : angle;.}.flo
	0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, // at asin_approx_d
	0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, // ivPI( float v).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, // .float x = abs(v
	0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, // );.if(1. - x <= 
	0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, // 0.00006103515625
	0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, // ).return (v >= 0
	0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, // .) ? 0.5 : -0.5;
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, // .float res = ((-
	0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // 0.155972/3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, // 6433832795) * x 
	0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, // + (1.56467/3.141
	0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, // 5926535897932384
	0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, // 626433832795) ) 
	0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, // * sqrt(1. - x);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, // return (v >= 0.)
	0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, //  ? 0.5 - res : -
	0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // 0.5 + res;.}.vec
	0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, // 2 ray_to_equirec
	0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x20, 0x76, 0x65, 0x63, // tangular_uv( vec
	0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 3 ray).{.return 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, // vec2(.0.5 + atan
	0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, // 2_approx_div2PI(
	0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, // ray.y, ray.x),.a
	0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, // cos_approx_divPI
	0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // (ray.z));.}.floa
	0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // t InvsRGB( float
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, //  color).{.if (co
	0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, // lor <= 0.04045).
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, // return color * (
	0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, // 1.0/12.92);.else
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .return pow(colo
	0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, // r * (1.0/1.055) 
	0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, // + (0.055/1.055),
	0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, //  2.4);.}.float I
	0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // nvRec709( float 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, // color).{.if (col
	0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, // or <= 0.081).ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, // urn color * (1.0
	0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, // /4.5);.else.retu
	0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, // rn pow(color * (
	0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, // 1.0/1.099) + (0.
	0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, // 099/1.099), 1.0/
	0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, // 0.45);.}.float I
	0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, // nvGamma( float c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, // olor).{.return I
	0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, // nvsRGB(color);.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, // .vec3 InvGamma( 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // vec3 color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // turn vec3(InvGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, // ma(color.x),InvG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, // amma(color.y),In
	0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, // vGamma(color.z))
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, // ;.}.vec3 InvTone
	0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // Map( vec3 color)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, // .{.float inv_2bh
	0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, //  = 0.5/0.25;.flo
	0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, // at bh = 4.0*0.25
	0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, //  - 2.0;.return (
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, // color - 1.0 + sq
	0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // rt(color*(color 
	0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, // + bh) + 1.0))*in
	0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // v_2bh;.}.float s
	0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, // RGB( float f).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, // float s;.if (f <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, // = 0.0031308).s =
	0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, //  12.92 * f;.else
	0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, // .s = 1.055 * pow
	0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, // (f, 1.0/2.4) - 0
	0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, // .055;.return s;.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, // }.float Rec709( 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float f).{.float
	0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, //  s;.if (f <= 0.0
	0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, // 18).s = 4.5 * f;
	0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, // .else.s = 1.099 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, // * pow(f, 0.45) -
	0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, //  0.099;.return s
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // ;.}.float FBGamm
	0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // a( float color).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, // {.return sRGB(co
	0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, // lor);.}.vec2 FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // amma( vec2 color
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // ).{.return vec2(
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, // FBGamma(color.x)
	0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, // ,FBGamma(color.y
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, // ));.}.vec3 FBGam
	0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // ma( vec3 color).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, // {.return vec3(FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, // Gamma(color.x),F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, // BGamma(color.y),
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, // FBGamma(color.z)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // );.}.vec3 FBGamm
	0x61, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // a22( vec3 color)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x70, // .{.return vec3(p
	0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, // ow(color.x, 1.0/
	0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, // 2.2),pow(color.y
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, // , 1.0/2.2),pow(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, // olor.z, 1.0/2.2)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, // );.}.float FBTon
	0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, // eMap( float l).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, // .return l * ((l*
	0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, // 0.25 + 1.0) / (l
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, //  + 1.0));.}.vec2
	0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, //  FBToneMap( vec2
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //  color).{.float 
	0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, // l = dot(color,ve
	0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, // c2(0.176204+0.01
	0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, // 08109*0.5,0.8129
	0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, // 85+0.0108109*0.5
	0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // ));.return color
	0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, //  * ((l*0.25 + 1.
	0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, // 0) / (l + 1.0));
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, // .}.vec3 FBToneMa
	0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, // p( vec3 color).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, // .float l = dot(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, // olor,vec3(0.1762
	0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, // 04,0.812985,0.01
	0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 08109));.return 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, // color * ((l*0.25
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, //  + 1.0) / (l + 1
	0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, 0x64, // .0));.}.vec4 Add
	0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, // itive( vec4 cBas
	0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, // e, vec4 cBlend, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, // float percent).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, // .return cBase + 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, // cBlend*percent;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, // }.vec3 Screen ( 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // vec3 cBase, vec3
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  cBlend).{.retur
	0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, // n 1.0 - (1.0 - c
	0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, // Base) * (1.0 - c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, // Blend);.}.vec4 S
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, // creen ( vec4 cBa
	0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // se, vec4 cBlend)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // .{.return 1.0 - 
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, // (1.0 - cBase) * 
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, // (1.0 - cBlend);.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, // }.vec3 ScreenHDR
	0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, //  ( vec3 cBase, v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // ec3 cBlend).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, // turn max(1.0 - (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, // 1.0 - cBase) * (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, // 1.0 - cBlend), v
	0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, // ec3(0.,0.,0.));.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, // }.vec4 ScreenHDR
	0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, //  ( vec4 cBase, v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // ec4 cBlend).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, // turn max(1.0 - (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, // 1.0 - cBase) * (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, // 1.0 - cBlend), v
	0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, // ec4(0.,0.,0.,0.)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, // );.}.vec4 Multip
	0x6c, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // ly ( vec4 cBase,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, //  vec4 cBlend, fl
	0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // oat percent).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, // eturn cBase * cB
	0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, // lend*percent;.}.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x20, 0x76, // vec4 Overlay ( v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // ec4 cBase, vec4 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // cBlend).{.vec4 c
	0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, // New = step(0.5, 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, // cBase);.cNew = m
	0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, // ix(cBase*cBlend*
	0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, // 2.0, 1.0-2.0*(1.
	0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, // 0-cBase)*(1.0-cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, // lend), cNew);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // turn cNew;.}.vec
	0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, // 4 OverlayHDR ( v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // ec4 cBase, vec4 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // cBlend).{.vec4 c
	0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, // New = step(0.5, 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, // cBase);.cNew = m
	0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, // ax(mix(cBase*cBl
	0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, // end*2.0, 1.0-2.0
	0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, // *(1.0-cBase)*(1.
	0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, // 0-cBlend), cNew)
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, // , vec4(0.,0.,0.,
	0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, // 0.));.return cNe
	0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, // w;.}.vec3 cos_he
	0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // misphere_sample(
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  vec2 t).{.float
	0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, //  phi = t.y * (2.
	0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, // 0*3.141592653589
	0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, // 7932384626433832
	0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, // 795);.float cosT
	0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, // heta = sqrt(1.0 
	0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, // - t.x);.float si
	0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, // nTheta = sqrt(t.
	0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, // x);.float sp,cp;
	0x0a, 0x7b, 0x73, 0x70, 0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x63, 0x70, // .{sp=sin(phi);cp
	0x3d, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, 0x3b, 0x0a, 0x72, 0x65, 0x74, // =cos(phi);};.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, // urn vec3(cp * si
	0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, // nTheta, cosTheta
	0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x29, // , sp * sinTheta)
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, // ;.}.vec3 rotate_
	0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x28, // to_vector_upper(
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, //  vec3 vec, vec3 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, // normal).{.if(nor
	0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, // mal.y > -0.99999
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, // ).{.float h = 1.
	0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, // 0/(1.0+normal.y)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, // ;.float hz = h*n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, // ormal.z;.float h
	0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // zx = hz*normal.x
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, // ;.return vec3(.v
	0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, // ec.x * (normal.y
	0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, // +hz*normal.z) + 
	0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // vec.y * normal.x
	0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, //  - vec.z * hzx,.
	0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, // vec.y * normal.y
	0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, //  - vec.x * norma
	0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, // l.x - vec.z * no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, // rmal.z,.vec.y * 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, // normal.z - vec.x
	0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, //  * hzx + vec.z *
	0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, //  (normal.y+h*nor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, // mal.x*normal.x))
	0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // ;.}.else return 
	0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // -vec;.}.uniform 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, // vec4 vColor_Inte
	0x6e, 0x73, 0x69, 0x74, 0x79, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // nsity;.uniform v
	0x65, 0x63, 0x34, 0x20, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, // ec4 vRes_Alpha_t
	0x69, 0x6d, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, // ime;.uniform vec
	0x34, 0x20, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x54, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, // 4 alphaTestValue
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ;.uniform sample
	0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x3b, 0x0a, // r2D tex_sprite;.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x68, 0x61, 0x73, 0x68, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, // vec2 hash22( vec
	0x32, 0x20, 0x75, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x33, 0x20, // 2 uv).{.vec3 p3 
	0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x75, 0x76, 0x2e, 0x78, 0x79, 0x78, 0x20, 0x2a, // = fract(uv.xyx *
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x2e, 0x31, 0x30, 0x33, 0x31, 0x2c, 0x20, 0x2e, 0x31, 0x30, //  vec3(.1031, .10
	0x33, 0x30, 0x2c, 0x20, 0x2e, 0x30, 0x39, 0x37, 0x33, 0x29, 0x29, 0x3b, 0x0a, 0x70, 0x33, 0x20, // 30, .0973));.p3 
	0x2b, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x70, 0x33, 0x2c, 0x20, 0x70, 0x33, 0x2e, 0x79, 0x7a, // += dot(p3, p3.yz
	0x78, 0x20, 0x2b, 0x20, 0x33, 0x33, 0x2e, 0x33, 0x33, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // x + 33.33);.retu
	0x72, 0x6e, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x28, 0x70, 0x33, 0x2e, 0x78, 0x78, 0x20, // rn fract((p3.xx 
	0x2b, 0x20, 0x70, 0x33, 0x2e, 0x79, 0x7a, 0x29, 0x2a, 0x70, 0x33, 0x2e, 0x7a, 0x79, 0x29, 0x3b, // + p3.yz)*p3.zy);
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x75, // .}.float triangu
	0x6c, 0x61, 0x72, 0x50, 0x44, 0x46, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x29, // larPDF( float r)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x2a, // .{.float p = 2.*
	0x72, 0x3b, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x62, 0x20, 0x3d, 0x20, 0x28, 0x70, 0x20, 0x3e, // r;.bool b = (p >
	0x20, 0x31, 0x2e, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x62, 0x29, 0x0a, 0x70, 0x20, 0x3d, //  1.);.if (b).p =
	0x20, 0x32, 0x2e, 0x2d, 0x70, 0x3b, 0x0a, 0x70, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x2d, 0x73, 0x71, //  2.-p;.p = 1.-sq
	0x72, 0x74, 0x28, 0x70, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x62, 0x20, // rt(p);.return b 
	0x3f, 0x20, 0x70, 0x20, 0x3a, 0x20, 0x2d, 0x70, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, 0x69, 0x64, // ? p : -p;.}.void
	0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x76, 0x5f, //  main().{.if (v_
	0x63, 0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x3c, 0x20, 0x30, // clipDistance < 0
	0x2e, 0x30, 0x29, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, // .0).discard;.gl_
	0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, // FragColor = vec4
	0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // (InvGamma(vColor
	0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, // _Intensity.xyz *
	0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, //  vColor_Intensit
	0x79, 0x2e, 0x77, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,       // y.w), 1.0);.}..
};
static const uint8_t fs_sprite_notex_clip_dx11[857] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4e, 0xbd, 0x0b, 0x9f, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x10, 0x76, // FSH.N..........v
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, // Color_Intensity.
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x03, 0x00, 0x00, 0x44, 0x58, 0x42, // .........(...DXB
	0x43, 0x26, 0xb4, 0xce, 0x91, 0xfc, 0x17, 0xb2, 0xed, 0x89, 0x8d, 0x43, 0x44, 0x27, 0xf9, 0xf6, // C&.........CD'..
	0xf5, 0x01, 0x00, 0x00, 0x00, 0x28, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, // .....(.......,..
	0x00, 0xb4, 0x00, 0x00, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x4e, 0x80, 0x00, 0x00, // .........ISGN...
	0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........h......
	0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, // ................
	0x00, 0x74, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // .t..............
	0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........t......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, // ................
	0x00, 0x74, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // .t..............
	0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, // .........SV_POSI
	0x54, 0x49, 0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0xab, 0xab, // TION.TEXCOORD...
	0xab, 0x4f, 0x53, 0x47, 0x4e, 0x2c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, // .OSGN,..........
	0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // . ..............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x54, 0x41, 0x52, 0x47, // .........SV_TARG
	0x45, 0x54, 0x00, 0xab, 0xab, 0x53, 0x48, 0x45, 0x58, 0x38, 0x02, 0x00, 0x00, 0x50, 0x00, 0x00, // ET...SHEX8...P..
	0x00, 0x8e, 0x00, 0x00, 0x00, 0x6a, 0x08, 0x00, 0x01, 0x59, 0x00, 0x00, 0x04, 0x46, 0x8e, 0x20, // .....j...Y...F. 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x12, 0x10, 0x10, // .........b......
	0x00, 0x01, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, // .....e.... .....
	0x00, 0x68, 0x00, 0x00, 0x02, 0x03, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, // .h.......1......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, // ..............@.
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x04, 0x03, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x38, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0x8f, 0x20, // .8...r......... 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, // .........F. ....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, // .........r......
	0x00, 0x02, 0x40, 0x00, 0x00, 0xe6, 0xae, 0x25, 0x3d, 0xe6, 0xae, 0x25, 0x3d, 0xe6, 0xae, 0x25, // ..@....%=..%=..%
	0x3d, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, // =....F.......8..
	0x0a, 0x32, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, // .2.......F......
	0x00, 0x02, 0x40, 0x00, 0x00, 0x91, 0x83, 0x9e, 0x3d, 0x91, 0x83, 0x9e, 0x3d, 0x00, 0x00, 0x00, // ..@.....=...=...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0f, 0x32, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, // .....2...2......
	0x00, 0x46, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x6e, 0xa7, 0x72, // .F........@..n.r
	0x3f, 0x6e, 0xa7, 0x72, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, // ?n.r?.........@.
	0x00, 0x19, 0x89, 0x55, 0x3d, 0x19, 0x89, 0x55, 0x3d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ...U=..U=.......
	0x00, 0x2f, 0x00, 0x00, 0x05, 0x32, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, // ./...2.......F..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0x32, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, // .....8...2......
	0x00, 0x46, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x9a, 0x99, 0x19, // .F........@.....
	0x40, 0x9a, 0x99, 0x19, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, // @...@...........
	0x05, 0x32, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, // .2.......F......
	0x00, 0x37, 0x00, 0x00, 0x09, 0x32, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, // .7...2 ......F..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, // .....F.......F..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, // .....2..."......
	0x00, 0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x6e, 0xa7, 0x72, // .*........@..n.r
	0x3f, 0x01, 0x40, 0x00, 0x00, 0x19, 0x89, 0x55, 0x3d, 0x2f, 0x00, 0x00, 0x05, 0x22, 0x00, 0x10, // ?.@....U=/..."..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, // .............8..
	0x0a, 0x32, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x0a, 0x10, 0x00, 0x00, 0x00, 0x00, // .2.......f......
	0x00, 0x02, 0x40, 0x00, 0x00, 0x91, 0x83, 0x9e, 0x3d, 0x9a, 0x99, 0x19, 0x40, 0x00, 0x00, 0x00, // ..@.....=...@...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x05, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, // ........."......
	0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x42, 0x20, 0x10, // .........7...B .
	0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, // .....*..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, // .............6..
	0x05, 0x82, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, // .. .......@.....
	0x3f, 0x3e, 0x00, 0x00, 0x01, 0x00, 0x00, 0x10, 0x00,                                           // ?>.......
};
static const uint8_t fs_sprite_notex_clip_spv[1889] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4e, 0xbd, 0x0b, 0x9f, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x10, 0x76, // FSH.N..........v
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, // Color_Intensity.
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x07, 0x00, 0x00, 0x03, 0x02, 0x23, // .........0.....#
	0x07, 0x00, 0x00, 0x01, 0x00, 0x0b, 0x00, 0x08, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // .........-......
	0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30, 0x00, 0x00, 0x00, // .GLSL.std.450...
	0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x07, // ................
	0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, // .........main...
	0x00, 0x85, 0x00, 0x00, 0x00, 0x9b, 0x00, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, // ................
	0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf4, 0x01, 0x00, // ................
	0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, // .........main...
	0x00, 0x05, 0x00, 0x06, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x55, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // .....j...Uniform
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x6a, 0x00, 0x00, // Block........j..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, // .....vColor_Inte
	0x6e, 0x73, 0x69, 0x74, 0x79, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x03, 0x00, 0x6c, 0x00, 0x00, // nsity........l..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x85, 0x00, 0x00, 0x00, 0x76, 0x5f, 0x63, // .............v_c
	0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x00, 0x00, 0x05, 0x00, 0x06, // lipDistance.....
	0x00, 0x9b, 0x00, 0x00, 0x00, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, // .....bgfx_FragDa
	0x74, 0x61, 0x30, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ta0..H...j......
	0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00, 0x6a, 0x00, 0x00, // .#.......G...j..
	0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, // .....G...l..."..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, // .....G...l...!..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x85, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, // .....G..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x9b, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, // .....G..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x21, 0x00, 0x03, // .............!..
	0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00, 0x06, 0x00, 0x00, // ................
	0x00, 0x20, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, // . ..............
	0x00, 0x04, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x14, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, // ................
	0x00, 0x03, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, // .....+.......6..
	0x00, 0xe6, 0xae, 0x25, 0x3d, 0x14, 0x00, 0x02, 0x00, 0x37, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, // ...%=....7...+..
	0x00, 0x06, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x91, 0x83, 0x9e, 0x3d, 0x2b, 0x00, 0x04, // .....<......=+..
	0x00, 0x06, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x6e, 0xa7, 0x72, 0x3f, 0x2b, 0x00, 0x04, // .....A...n.r?+..
	0x00, 0x06, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x19, 0x89, 0x55, 0x3d, 0x2b, 0x00, 0x04, // .....C.....U=+..
	0x00, 0x06, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x9a, 0x99, 0x19, 0x40, 0x15, 0x00, 0x04, // .....E......@...
	0x00, 0x4f, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, // .O... .......+..
	0x00, 0x4f, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, // .O...P.......+..
	0x00, 0x06, 0x00, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x03, // .....b..........
	0x00, 0x6a, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x6b, 0x00, 0x00, // .j....... ...k..
	0x00, 0x02, 0x00, 0x00, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x6b, 0x00, 0x00, // .....j...;...k..
	0x00, 0x6c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, 0x6d, 0x00, 0x00, // .l...........m..
	0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x6d, 0x00, 0x00, // . .......+...m..
	0x00, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x6f, 0x00, 0x00, // .n....... ...o..
	0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x4f, 0x00, 0x00, // .........+...O..
	0x00, 0x73, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x74, 0x00, 0x00, // .s....... ...t..
	0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, // .........+......
	0x00, 0x7a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x20, 0x00, 0x04, 0x00, 0x84, 0x00, 0x00, // .z......? ......
	0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x84, 0x00, 0x00, // .........;......
	0x00, 0x85, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x9a, 0x00, 0x00, // ......... ......
	0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x9a, 0x00, 0x00, // .........;......
	0x00, 0x9b, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, // .........6......
	0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, // ................
	0x00, 0x05, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x86, 0x00, 0x00, // .....=..........
	0x00, 0x85, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x37, 0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, // .........7......
	0x00, 0x86, 0x00, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xc1, 0x00, 0x00, // .....b..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xbf, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, // ................
	0x00, 0xc1, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x01, // ................
	0x00, 0xf8, 0x00, 0x02, 0x00, 0xc1, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x6f, 0x00, 0x00, // .........A...o..
	0x00, 0xc2, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .....l...n...=..
	0x00, 0x08, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x00, 0xc2, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, // .............O..
	0x00, 0x14, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, // .............A..
	0x00, 0x74, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x00, // .t.......l...n..
	0x00, 0x73, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x00, // .s...=..........
	0x00, 0xc5, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x14, 0x00, 0x00, 0x00, 0xc7, 0x00, 0x00, // ................
	0x00, 0xc4, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, // .........Q......
	0x00, 0xd8, 0x00, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, // ................
	0x00, 0xf6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0x50, 0x00, 0x00, // .............P..
	0x00, 0xea, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xea, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x05, // ................
	0x00, 0x37, 0x00, 0x00, 0x00, 0xec, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, // .7...........6..
	0x00, 0xf7, 0x00, 0x03, 0x00, 0xf5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, // ................
	0x00, 0xec, 0x00, 0x00, 0x00, 0xed, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, // ................
	0x00, 0xf0, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xf2, 0x00, 0x00, // ................
	0x00, 0xd8, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, // .....A..........
	0x00, 0xf3, 0x00, 0x00, 0x00, 0xf2, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, // .........C......
	0x00, 0x06, 0x00, 0x00, 0x00, 0xf4, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, // ................
	0x00, 0xf3, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xf6, 0x00, 0x00, // .....E..........
	0x00, 0xf8, 0x00, 0x02, 0x00, 0xed, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, // ................
	0x00, 0xef, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, // .........<......
	0x00, 0xf6, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xf5, 0x00, 0x00, 0x00, 0xff, 0x00, 0x01, // ................
	0x00, 0xf8, 0x00, 0x02, 0x00, 0xf6, 0x00, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x06, 0x00, 0x00, // ................
	0x00, 0x2a, 0x01, 0x00, 0x00, 0xf4, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0xef, 0x00, 0x00, // .*..............
	0x00, 0xed, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xdb, 0x00, 0x00, // .....Q..........
	0x00, 0xc7, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x0d, 0x01, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0x50, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, // .........P......
	0x00, 0xf8, 0x00, 0x02, 0x00, 0x01, 0x01, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x37, 0x00, 0x00, // .............7..
	0x00, 0x03, 0x01, 0x00, 0x00, 0xdb, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, // .........6......
	0x00, 0x0c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x03, 0x01, 0x00, // ................
	0x00, 0x04, 0x01, 0x00, 0x00, 0x07, 0x01, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x07, 0x01, 0x00, // ................
	0x00, 0x85, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x09, 0x01, 0x00, 0x00, 0xdb, 0x00, 0x00, // ................
	0x00, 0x41, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0a, 0x01, 0x00, // .A..............
	0x00, 0x09, 0x01, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x06, 0x00, 0x00, // .....C..........
	0x00, 0x0b, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x0a, 0x01, 0x00, // ................
	0x00, 0x45, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x0d, 0x01, 0x00, 0x00, 0xf8, 0x00, 0x02, // .E..............
	0x00, 0x04, 0x01, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x01, 0x00, // ................
	0x00, 0xdb, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x0d, 0x01, 0x00, // .....<..........
	0x00, 0xf8, 0x00, 0x02, 0x00, 0x0c, 0x01, 0x00, 0x00, 0xff, 0x00, 0x01, 0x00, 0xf8, 0x00, 0x02, // ................
	0x00, 0x0d, 0x01, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x06, 0x00, 0x00, 0x00, 0x2b, 0x01, 0x00, // .............+..
	0x00, 0x0b, 0x01, 0x00, 0x00, 0x07, 0x01, 0x00, 0x00, 0x06, 0x01, 0x00, 0x00, 0x04, 0x01, 0x00, // ................
	0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xde, 0x00, 0x00, 0x00, 0xc7, 0x00, 0x00, // .Q..............
	0x00, 0x02, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x24, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // .........$......
	0x00, 0xfb, 0x00, 0x03, 0x00, 0x50, 0x00, 0x00, 0x00, 0x18, 0x01, 0x00, 0x00, 0xf8, 0x00, 0x02, // .....P..........
	0x00, 0x18, 0x01, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x37, 0x00, 0x00, 0x00, 0x1a, 0x01, 0x00, // .........7......
	0x00, 0xde, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x23, 0x01, 0x00, // .....6.......#..
	0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x1a, 0x01, 0x00, 0x00, 0x1b, 0x01, 0x00, // ................
	0x00, 0x1e, 0x01, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x1e, 0x01, 0x00, 0x00, 0x85, 0x00, 0x05, // ................
	0x00, 0x06, 0x00, 0x00, 0x00, 0x20, 0x01, 0x00, 0x00, 0xde, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, // ..... .......A..
	0x00, 0x81, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x21, 0x01, 0x00, 0x00, 0x20, 0x01, 0x00, // .........!... ..
	0x00, 0x43, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x06, 0x00, 0x00, 0x00, 0x22, 0x01, 0x00, // .C..........."..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x21, 0x01, 0x00, 0x00, 0x45, 0x00, 0x00, // .........!...E..
	0x00, 0xf9, 0x00, 0x02, 0x00, 0x24, 0x01, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x1b, 0x01, 0x00, // .....$..........
	0x00, 0x85, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x1d, 0x01, 0x00, 0x00, 0xde, 0x00, 0x00, // ................
	0x00, 0x3c, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x24, 0x01, 0x00, 0x00, 0xf8, 0x00, 0x02, // .<.......$......
	0x00, 0x23, 0x01, 0x00, 0x00, 0xff, 0x00, 0x01, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x24, 0x01, 0x00, // .#...........$..
	0x00, 0xf5, 0x00, 0x07, 0x00, 0x06, 0x00, 0x00, 0x00, 0x2c, 0x01, 0x00, 0x00, 0x22, 0x01, 0x00, // .........,..."..
	0x00, 0x1e, 0x01, 0x00, 0x00, 0x1d, 0x01, 0x00, 0x00, 0x1b, 0x01, 0x00, 0x00, 0x50, 0x00, 0x07, // .............P..
	0x00, 0x08, 0x00, 0x00, 0x00, 0xcc, 0x00, 0x00, 0x00, 0x2a, 0x01, 0x00, 0x00, 0x2b, 0x01, 0x00, // .........*...+..
	0x00, 0x2c, 0x01, 0x00, 0x00, 0x7a, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x9b, 0x00, 0x00, // .,...z...>......
	0x00, 0xcc, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, // .........8......
	0x00,                                                                                           // .
};
static const bgfx::EmbeddedShader fs_sprite_notex_clip = BGFX_EMBEDDED_SHADER(fs_sprite_notex_clip);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of vertex shader from vs_dmd.sc to vs_dmd_world_noclip with options: WORLD NOCLIP
static const uint8_t vs_dmd_world_noclip_mtl[1054] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x8f, 0x07, 0x02, 0x00, 0x08, 0x67, // VSH............g
	0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x02, 0x01, 0x40, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // lassPad..@......
	0x00, 0x10, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, // ..matWorldViewPr
	0x6f, 0x6a, 0x04, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd6, 0x03, 0x00, 0x00, // oj..............
	0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, // #include <metal_
	0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, // stdlib>.#include
	0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, //  <simd/simd.h>..
	0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, // using namespace 
	0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, // metal;..struct _
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // Global.{.    flo
	0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, // at4x4 matWorldVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ewProj;.    floa
	0x74, 0x34, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, // t4 glassPad;.};.
	0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, // .struct xlatMtlM
	0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ain_out.{..float
	0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, //  bgfx_metal_poin
	0x74, 0x53, 0x69, 0x7a, 0x65, 0x20, 0x5b, 0x5b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x73, 0x69, // tSize [[point_si
	0x7a, 0x65, 0x5d, 0x5d, 0x20, 0x3d, 0x20, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // ze]] = 1;.    fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, // oat2 _entryPoint
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // Output_v_texcoor
	0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, // d0 [[user(locn0)
	0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, // ]];.    float2 _
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, // entryPointOutput
	0x5f, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x5b, 0x5b, 0x75, // _v_texcoord1 [[u
	0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, // ser(locn1)]];.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, //   float4 gl_Posi
	0x74, 0x69, 0x6f, 0x6e, 0x20, 0x5b, 0x5b, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5d, // tion [[position]
	0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, // ];.};..struct xl
	0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, // atMtlMain_in.{. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, //    float3 a_posi
	0x74, 0x69, 0x6f, 0x6e, 0x20, 0x5b, 0x5b, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, // tion [[attribute
	0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // (0)]];.    float
	0x32, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, // 2 a_texcoord0 [[
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, // attribute(1)]];.
	0x7d, 0x3b, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // };..vertex xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // tlMain_out xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // tlMain(xlatMtlMa
	0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, // in_in in [[stage
	0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, // _in]], constant 
	0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, // _Global& _mtl_u 
	0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, // [[buffer(0)]]).{
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, // .    xlatMtlMain
	0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, // _out out = {};. 
	0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, //    out.gl_Positi
	0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x57, // on = _mtl_u.matW
	0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x20, 0x2a, 0x20, 0x66, // orldViewProj * f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x69, 0x6e, 0x2e, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, // loat4(in.a_posit
	0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, // ion, 1.0);.    o
	0x75, 0x74, 0x2e, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, // ut._entryPointOu
	0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, // tput_v_texcoord0
	0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, //  = in.a_texcoord
	0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x5f, 0x65, 0x6e, 0x74, 0x72, // 0;.    out._entr
	0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x74, // yPointOutput_v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x61, // excoord1 = (in.a
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, // _texcoord0 * flo
	0x61, 0x74, 0x32, 0x28, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // at2((1.0 + _mtl_
	0x75, 0x2e, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, // u.glassPad.x) + 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, // _mtl_u.glassPad.
	0x79, 0x2c, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // y, (1.0 + _mtl_u
	0x2e, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x5f, // .glassPad.z) + _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x77, // mtl_u.glassPad.w
	0x29, 0x29, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // )) - float2(_mtl
	0x5f, 0x75, 0x2e, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x78, 0x2c, 0x20, 0x5f, // _u.glassPad.x, _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x7a, // mtl_u.glassPad.z
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, // );.    return ou
	0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x02, 0x01, 0x00, 0x10, 0x00, 0x50, 0x00,             // t;.}........P.
};
static const uint8_t vs_dmd_world_noclip_essl[6490] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x47, 0x19, // VSH...........G.
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // s.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x75, 0x74, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, // arying out.preci
	0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // sion highp float
	0x3b, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, // ;.precision high
	0x70, 0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, // p int;.#define s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // hadow2D(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // e(_sampler, _coo
	0x72, 0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, // rd).#define shad
	0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ow2DProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // r, _coord) textu
	0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // reProj(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, //  _coord).attribu
	0x74, 0x65, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, // te vec3 a_positi
	0x6f, 0x6e, 0x3b, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x76, 0x65, // on;.attribute ve
	0x63, 0x32, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, // c2 a_texcoord0;.
	0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, // varying vec2 v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // excoord0;.varyin
	0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // g vec2 v_texcoor
	0x64, 0x31, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, // d1;.vec3 instMul
	0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, // (vec3 _vec, mat3
	0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _mtx) { return 
	0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, // ( (_vec) * (_mtx
	0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, // ) ); }.vec3 inst
	0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, // Mul(mat3 _mtx, v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // ec3 _vec) { retu
	0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, // rn ( (_mtx) * (_
	0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, // vec) ); }.vec4 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, // nstMul(vec4 _vec
	0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // , mat4 _mtx) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, // eturn ( (_vec) *
	0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, //  (_mtx) ); }.vec
	0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, // 4 instMul(mat4 _
	0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, // mtx, vec4 _vec) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, // { return ( (_mtx
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // ) * (_vec) ); }.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // float rcp(float 
	0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, // _a) { return 1.0
	0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, // /_a; }.vec2 rcp(
	0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // vec2 _a) { retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, // n vec2(1.0)/_a; 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, // }.vec3 rcp(vec3 
	0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _a) { return vec
	0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, // 3(1.0)/_a; }.vec
	0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, // 4 rcp(vec4 _a) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, //  return vec4(1.0
	0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, // )/_a; }.vec2 vec
	0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, // 2_splat(float _x
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // ) { return vec2(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // _x, _x); }.vec3 
	0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // vec3_splat(float
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, //  _x) { return ve
	0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, // c3(_x, _x, _x); 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, // }.vec4 vec4_spla
	0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // t(float _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // turn vec4(_x, _x
	0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, // , _x, _x); }.uve
	0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, // c2 uvec2_splat(u
	0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // int _x) { return
	0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, //  uvec2(_x, _x); 
	0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, // }.uvec3 uvec3_sp
	0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // lat(uint _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, // eturn uvec3(_x, 
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, // _x, _x); }.uvec4
	0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, //  uvec4_splat(uin
	0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, // t _x) { return u
	0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // vec4(_x, _x, _x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, //  _x); }.mat4 mtx
	0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, // FromRows(vec4 _0
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // , vec4 _1, vec4 
	0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // _2, vec4 _3).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, // eturn transpose(
	0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, // mat4(_0, _1, _2,
	0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, //  _3) );.}.mat4 m
	0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, // txFromCols(vec4 
	0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, // _0, vec4 _1, vec
	0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, // 4 _2, vec4 _3).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, // .return mat4(_0,
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, //  _1, _2, _3);.}.
	0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, // mat3 mtxFromRows
	0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // (vec3 _0, vec3 _
	0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 1, vec3 _2).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, // turn transpose(m
	0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, // at3(_0, _1, _2) 
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, // );.}.mat3 mtxFro
	0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, // mCols(vec3 _0, v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, // ec3 _1, vec3 _2)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, // .{.return mat3(_
	0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, // 0, _1, _2);.}.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // iform vec4 u_vie
	0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // wRect;.uniform v
	0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, // ec4 u_viewTexel;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // view;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, // t4 u_invView;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, // iform mat4 u_pro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // u_invProj;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, // rm mat4 u_viewPr
	0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // oj;.uniform mat4
	0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, //  u_invViewProj;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, // uniform mat4 u_m
	0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // odel[32];.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, // m mat4 u_modelVi
	0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // ew;.uniform mat4
	0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, //  u_modelViewProj
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, // ;.uniform vec4 u
	0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // _alphaRef4;.floa
	0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, // t sqr( float v).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, // {.return v*v;.}.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, // vec2 sqr( vec2 v
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, // ).{.return v*v;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, // }.vec3 sqr( vec3
	0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, //  v).{.return v*v
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, // ;.}.vec3 mul_w1(
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, //  vec3 v, mat4 m)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, // .{.return v.x*m[
	0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, // 0].xyz + (v.y*m[
	0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, // 1].xyz + (v.z*m[
	0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, // 2].xyz + m[3].xy
	0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, // z));.}.float aco
	0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, // s_approx_divPI( 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float v).{.float
	0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, //  x = abs(v);.if(
	0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, // 1. - x <= 0.0000
	0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, // 6103515625).retu
	0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, // rn (v >= 0.) ? 0
	0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, // . : 1.;.float re
	0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, // s = ((-0.155972/
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, // 5) * x + (1.5646
	0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, // 7/3.141592653589
	0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, // 7932384626433832
	0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, // 795) ) * sqrt(1.
	0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, //  - x);.return (v
	0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, //  >= 0.) ? res : 
	0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // 1. - res;.}.floa
	0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, // t atan2_approx_d
	0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, // iv2PI( float y, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float x).{.float
	0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, //  abs_y = abs(y);
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, // .float abs_x = a
	0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, // bs(x);.if(abs_x 
	0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, // <= 0.00006103515
	0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, // 625 && abs_y <= 
	0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, // 0.00006103515625
	0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, // ).return 0.;.flo
	0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, // at r = (abs_x - 
	0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, // abs_y) / (abs_x 
	0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // + abs_y);.float 
	0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, // angle = ((x < 0.
	0x29, 0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, // ) ? (3./8.) : (1
	0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, // ./8.)).+ (0.2118
	0x36, 0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, // 68 /(2.*3.141592
	0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, // 6535897932384626
	0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, // 433832795) * r *
	0x20, 0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, //  r - 0.987305 /(
	0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, // 2.*3.14159265358
	0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, // 9793238462643383
	0x32, 0x37, 0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, // 2795)) * ((x < 0
	0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, // .) ? -r : r);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, // turn (y < 0.) ? 
	0x2d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, // -angle : angle;.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, // }.float asin_app
	0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // rox_divPI( float
	0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, //  v).{.float x = 
	0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, // abs(v);.if(1. - 
	0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, // x <= 0.000061035
	0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, // 15625).return (v
	0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, //  >= 0.) ? 0.5 : 
	0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, // -0.5;.float res 
	0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, // = ((-0.155972/3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, //  * x + (1.56467/
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, // 5) ) * sqrt(1. -
	0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, //  x);.return (v >
	0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, // = 0.) ? 0.5 - re
	0x73, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, // s : -0.5 + res;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, // }.vec2 ray_to_eq
	0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, // uirectangular_uv
	0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // ( vec3 ray).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, // turn vec2(.0.5 +
	0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, //  atan2_approx_di
	0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, // v2PI(ray.y, ray.
	0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, // x),.acos_approx_
	0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, // divPI(ray.z));.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, // .float InvsRGB( 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, // float color).{.i
	0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, // f (color <= 0.04
	0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // 045).return colo
	0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, // r * (1.0/12.92);
	0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, // .else.return pow
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, // (color * (1.0/1.
	0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, // 055) + (0.055/1.
	0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // 055), 2.4);.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, // oat InvRec709( f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, // loat color).{.if
	0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, //  (color <= 0.081
	0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // ).return color *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, //  (1.0/4.5);.else
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .return pow(colo
	0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, // r * (1.0/1.099) 
	0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, // + (0.099/1.099),
	0x20, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, //  1.0/0.45);.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, // oat InvGamma( fl
	0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // oat color).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // urn InvsRGB(colo
	0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, // r);.}.vec3 InvGa
	0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // mma( vec3 color)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, // .{.return vec3(I
	0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, // nvGamma(color.x)
	0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // ,InvGamma(color.
	0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // y),InvGamma(colo
	0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, // r.z));.}.vec3 In
	0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // vToneMap( vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, // olor).{.float in
	0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, // v_2bh = 0.5/0.25
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, // ;.float bh = 4.0
	0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, // *0.25 - 2.0;.ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, // urn (color - 1.0
	0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, //  + sqrt(color*(c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, // olor + bh) + 1.0
	0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // ))*inv_2bh;.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // oat sRGB( float 
	0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, // f).{.float s;.if
	0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, //  (f <= 0.0031308
	0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, // ).s = 12.92 * f;
	0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, // .else.s = 1.055 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, // * pow(f, 1.0/2.4
	0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // ) - 0.055;.retur
	0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, // n s;.}.float Rec
	0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, // 709( float f).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, // float s;.if (f <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, // = 0.018).s = 4.5
	0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, //  * f;.else.s = 1
	0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, // .099 * pow(f, 0.
	0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, // 45) - 0.099;.ret
	0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, // urn s;.}.float F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, // BGamma( float co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, // lor).{.return sR
	0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // GB(color);.}.vec
	0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, // 2 FBGamma( vec2 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // color).{.return 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, // vec2(FBGamma(col
	0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, // or.x),FBGamma(co
	0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // lor.y));.}.vec3 
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, // FBGamma( vec3 co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, // lor).{.return ve
	0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // c3(FBGamma(color
	0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .x),FBGamma(colo
	0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, // r.y),FBGamma(col
	0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, // or.z));.}.vec3 F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // BGamma22( vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // olor).{.return v
	0x65, 0x63, 0x33, 0x28, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, // ec3(pow(color.x,
	0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, //  1.0/2.2),pow(co
	0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, // lor.y, 1.0/2.2),
	0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, // pow(color.z, 1.0
	0x2f, 0x32, 0x2e, 0x32, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // /2.2));.}.float 
	0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // FBToneMap( float
	0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, //  l).{.return l *
	0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, //  ((l*0.25 + 1.0)
	0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, //  / (l + 1.0));.}
	0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, // .vec2 FBToneMap(
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, //  vec2 color).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, // loat l = dot(col
	0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, // or,vec2(0.176204
	0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, // +0.0108109*0.5,0
	0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, // .812985+0.010810
	0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 9*0.5));.return 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, // color * ((l*0.25
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, //  + 1.0) / (l + 1
	0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, // .0));.}.vec3 FBT
	0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, // oneMap( vec3 col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, // or).{.float l = 
	0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, // dot(color,vec3(0
	0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, // .176204,0.812985
	0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, // ,0.0108109));.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, // turn color * ((l
	0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, // *0.25 + 1.0) / (
	0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // l + 1.0));.}.vec
	0x34, 0x20, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, // 4 Additive( vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, //  cBase, vec4 cBl
	0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, // end, float perce
	0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, // nt).{.return cBa
	0x73, 0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, // se + cBlend*perc
	0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, // ent;.}.vec3 Scre
	0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // en ( vec3 cBase,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, //  vec3 cBlend).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, // return 1.0 - (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // 0 - cBase) * (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // 0 - cBlend);.}.v
	0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, // ec4 Screen ( vec
	0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // 4 cBase, vec4 cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, // lend).{.return 1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, // .0 - (1.0 - cBas
	0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, // e) * (1.0 - cBle
	0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, // nd);.}.vec3 Scre
	0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, // enHDR ( vec3 cBa
	0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // se, vec3 cBlend)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, // .{.return max(1.
	0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // 0 - (1.0 - cBase
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // ) * (1.0 - cBlen
	0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, // d), vec3(0.,0.,0
	0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, // .));.}.vec4 Scre
	0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, // enHDR ( vec4 cBa
	0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // se, vec4 cBlend)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, // .{.return max(1.
	0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // 0 - (1.0 - cBase
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // ) * (1.0 - cBlen
	0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, // d), vec4(0.,0.,0
	0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, // .,0.));.}.vec4 M
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // ultiply ( vec4 c
	0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // Base, vec4 cBlen
	0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, // d, float percent
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // ).{.return cBase
	0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, //  * cBlend*percen
	0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, // t;.}.vec4 Overla
	0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, // y ( vec4 cBase, 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, // vec4 cBlend).{.v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, // ec4 cNew = step(
	0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, // 0.5, cBase);.cNe
	0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, // w = mix(cBase*cB
	0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, // lend*2.0, 1.0-2.
	0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, // 0*(1.0-cBase)*(1
	0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, // .0-cBlend), cNew
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, // );.return cNew;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, // }.vec4 OverlayHD
	0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, // R ( vec4 cBase, 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, // vec4 cBlend).{.v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, // ec4 cNew = step(
	0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, // 0.5, cBase);.cNe
	0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, // w = max(mix(cBas
	0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, // e*cBlend*2.0, 1.
	0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, // 0-2.0*(1.0-cBase
	0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, // )*(1.0-cBlend), 
	0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, // cNew), vec4(0.,0
	0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // .,0.,0.));.retur
	0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // n cNew;.}.vec3 c
	0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, // os_hemisphere_sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, // mple( vec2 t).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, // float phi = t.y 
	0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, // * (2.0*3.1415926
	0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, // 5358979323846264
	0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 33832795);.float
	0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, //  cosTheta = sqrt
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, // (1.0 - t.x);.flo
	0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, // at sinTheta = sq
	0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // rt(t.x);.float s
	0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x7b, 0x73, 0x70, 0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, // p,cp;.{sp=sin(ph
	0x69, 0x29, 0x3b, 0x63, 0x70, 0x3d, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, // i);cp=cos(phi);}
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, // ;.return vec3(cp
	0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, //  * sinTheta, cos
	0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, // Theta, sp * sinT
	0x68, 0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, // heta);.}.vec3 ro
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, // tate_to_vector_u
	0x70, 0x70, 0x65, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, // pper( vec3 vec, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, // vec3 normal).{.i
	0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, // f(normal.y > -0.
	0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, // 99999).{.float h
	0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, //  = 1.0/(1.0+norm
	0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, // al.y);.float hz 
	0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, // = h*normal.z;.fl
	0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, // oat hzx = hz*nor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, // mal.x;.return ve
	0x63, 0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, // c3(.vec.x * (nor
	0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // mal.y+hz*normal.
	0x7a, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, // z) + vec.y * nor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, // mal.x - vec.z * 
	0x68, 0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, // hzx,.vec.y * nor
	0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, // mal.y - vec.x * 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, // normal.x - vec.z
	0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, //  * normal.z,.vec
	0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, // .y * normal.z - 
	0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, // vec.x * hzx + ve
	0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, // c.z * (normal.y+
	0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // h*normal.x*norma
	0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, // l.x));.}.else re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, // turn -vec;.}.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, // form mat4 matWor
	0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // ldViewProj;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, // orm vec4 glassPa
	0x64, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, // d;.void main().{
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, // .vec4 pos = vec4
	0x28, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, // (a_position, 1.0
	0x29, 0x3b, 0x0a, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3d, // );.v_texcoord0 =
	0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x5f, //  a_texcoord0;.v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x74, 0x65, // texcoord1 = a_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, // xcoord0 * vec2(1
	0x2e, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x78, // .0 + (glassPad.x
	0x29, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x79, 0x29, // ) + (glassPad.y)
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, // , 1.0 + (glassPa
	0x64, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, // d.z) + (glassPad
	0x2e, 0x77, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x28, 0x67, 0x6c, 0x61, // .w)) - vec2((gla
	0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, // ssPad.x), (glass
	0x50, 0x61, 0x64, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, // Pad.z));.gl_Posi
	0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, // tion = ( (matWor
	0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x70, // ldViewProj) * (p
	0x6f, 0x73, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,                                     // os) );.}..
};
static const uint8_t vs_dmd_world_noclip_glsl[6834] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x9f, 0x1a, // VSH.............
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x23, // ..#version 440.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, //           textur
	0x65, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // e.#define textur
	0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, // e2DLod       tex
	0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // tureLod.#define 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, // texture2DGrad   
	0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, //    textureGrad.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x50, 0x72, 0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // ProjLod   textur
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, // eProjLod.#define
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, //  texture2DProjGr
	0x61, 0x64, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, // ad  textureProjG
	0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, // rad.#define text
	0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, // ureCubeLod     t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, // extureLod.#defin
	0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, // e textureCubeGra
	0x64, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, // d    textureGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x33, 0x44, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // 3D          text
	0x75, 0x72, 0x65, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, // ure.#define text
	0x75, 0x72, 0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, // ure2DLodOffset t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, // extureLodOffset.
	0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, // #define attribut
	0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, // e in.#define var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x75, 0x74, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, // ying out.#define
	0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, //  bgfxShadow2D(_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, // ampler, _coord) 
	0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, //     vec4_splat(t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // exture(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, //  _coord) ).#defi
	0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, // ne bgfxShadow2DP
	0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, // roj(_sampler, _c
	0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // oord) vec4_splat
	0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, // (textureProj(_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, // mpler, _coord) )
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // .attribute vec3 
	0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x61, 0x74, 0x74, 0x72, // a_position;.attr
	0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, // ibute vec2 a_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, // coord0;.varying 
	0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, // vec2 v_texcoord0
	0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, // ;.varying vec2 v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, // _texcoord1;.vec3
	0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, //  instMul(vec3 _v
	0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, // ec, mat3 _mtx) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, //  return ( (_vec)
	0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, //  * (_mtx) ); }.v
	0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, // ec3 instMul(mat3
	0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, //  _mtx, vec3 _vec
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, // ) { return ( (_m
	0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, // tx) * (_vec) ); 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, // }.vec4 instMul(v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, // ec4 _vec, mat4 _
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, // mtx) { return ( 
	0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, // (_vec) * (_mtx) 
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, // ); }.vec4 instMu
	0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, // l(mat4 _mtx, vec
	0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 4 _vec) { return
	0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, //  ( (_mtx) * (_ve
	0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, // c) ); }.float rc
	0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // p(float _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // turn 1.0/_a; }.v
	0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, // ec2 rcp(vec2 _a)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, //  { return vec2(1
	0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, // .0)/_a; }.vec3 r
	0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // cp(vec3 _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, // turn vec3(1.0)/_
	0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, // a; }.vec4 rcp(ve
	0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c4 _a) { return 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, // vec4(1.0)/_a; }.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // vec2 vec2_splat(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // float _x) { retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // rn vec2(_x, _x);
	0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, //  }.vec3 vec3_spl
	0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // at(float _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // eturn vec3(_x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, // x, _x); }.vec4 v
	0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ec4_splat(float 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _x) { return vec
	0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // 4(_x, _x, _x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, // ); }.uvec2 uvec2
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // _splat(uint _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, // { return uvec2(_
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, // x, _x); }.uvec3 
	0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec3_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, //  _x) { return uv
	0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // ec3(_x, _x, _x);
	0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, //  }.uvec4 uvec4_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // plat(uint _x) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, // return uvec4(_x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, //  _x, _x, _x); }.
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, // mat4 mtxFromRows
	0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // (vec4 _0, vec4 _
	0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // 1, vec4 _2, vec4
	0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, //  _3).{.return tr
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, // anspose(mat4(_0,
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, //  _1, _2, _3) );.
	0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, // }.mat4 mtxFromCo
	0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // ls(vec4 _0, vec4
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, //  _1, vec4 _2, ve
	0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c4 _3).{.return 
	0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, // mat4(_0, _1, _2,
	0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, //  _3);.}.mat3 mtx
	0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, // FromRows(vec3 _0
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // , vec3 _1, vec3 
	0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, // _2).{.return tra
	0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, // nspose(mat3(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, // _1, _2) );.}.mat
	0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, // 3 mtxFromCols(ve
	0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, // c3 _0, vec3 _1, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // vec3 _2).{.retur
	0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, // n mat3(_0, _1, _
	0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // 2);.}.uniform ve
	0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, // c4 u_viewRect;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, // niform vec4 u_vi
	0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // ewTexel;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, //  mat4 u_view;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, // iform mat4 u_inv
	0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // View;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // t4 u_proj;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, // rm mat4 u_invPro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // u_viewProj;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, // orm mat4 u_invVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // ewProj;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, // mat4 u_model[32]
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // _modelView;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, // orm mat4 u_model
	0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // ViewProj;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, // m vec4 u_alphaRe
	0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x66, // f4;.float sqr( f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // loat v).{.return
	0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, //  v*v;.}.vec2 sqr
	0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // ( vec2 v).{.retu
	0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, // rn v*v;.}.vec3 s
	0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // qr( vec3 v).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // turn v*v;.}.vec3
	0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, //  mul_w1( vec3 v,
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  mat4 m).{.retur
	0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, // n v.x*m[0].xyz +
	0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, //  (v.y*m[1].xyz +
	0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, //  (v.z*m[2].xyz +
	0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, //  m[3].xyz));.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, // loat acos_approx
	0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, // _divPI( float v)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, // .{.float x = abs
	0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, // (v);.if(1. - x <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, // = 0.000061035156
	0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, // 25).return (v >=
	0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, //  0.) ? 0. : 1.;.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, // float res = ((-0
	0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, // .155972/3.141592
	0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, // 6535897932384626
	0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, // 433832795) * x +
	0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, //  (1.56467/3.1415
	0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, // 9265358979323846
	0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, // 26433832795) ) *
	0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, //  sqrt(1. - x);.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, // eturn (v >= 0.) 
	0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, // ? res : 1. - res
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, // ;.}.float atan2_
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x20, 0x66, // approx_div2PI( f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, // loat y, float x)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3d, // .{.float abs_y =
	0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, //  abs(y);.float a
	0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, // bs_x = abs(x);.i
	0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, // f(abs_x <= 0.000
	0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, // 06103515625 && a
	0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, // bs_y <= 0.000061
	0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 03515625).return
	0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, //  0.;.float r = (
	0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, // abs_x - abs_y) /
	0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, //  (abs_x + abs_y)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, // ;.float angle = 
	0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, // ((x < 0.) ? (3./
	0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, // 8.) : (1./8.)).+
	0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, //  (0.211868 /(2.*
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, // 5) * r * r - 0.9
	0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, // 87305 /(2.*3.141
	0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, // 5926535897932384
	0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, // 626433832795)) *
	0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, //  ((x < 0.) ? -r 
	0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, // : r);.return (y 
	0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, // < 0.) ? -angle :
	0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //  angle;.}.float 
	0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, // asin_approx_divP
	0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, // I( float v).{.fl
	0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, // oat x = abs(v);.
	0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, // if(1. - x <= 0.0
	0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, // 0006103515625).r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, // eturn (v >= 0.) 
	0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x66, 0x6c, // ? 0.5 : -0.5;.fl
	0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, // oat res = ((-0.1
	0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, // 55972/3.14159265
	0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, // 3589793238462643
	0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, // 3832795) * x + (
	0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, // 1.56467/3.141592
	0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, // 6535897932384626
	0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, // 433832795) ) * s
	0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // qrt(1. - x);.ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, // urn (v >= 0.) ? 
	0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, // 0.5 - res : -0.5
	0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, //  + res;.}.vec2 r
	0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, // ay_to_equirectan
	0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, // gular_uv( vec3 r
	0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // ay).{.return vec
	0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, // 2(.0.5 + atan2_a
	0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, // pprox_div2PI(ray
	0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, // .y, ray.x),.acos
	0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, // _approx_divPI(ra
	0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, // y.z));.}.float I
	0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, // nvsRGB( float co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // lor).{.if (color
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, //  <= 0.04045).ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, // urn color * (1.0
	0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, // /12.92);.else.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // turn pow(color *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, //  (1.0/1.055) + (
	0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, // 0.055/1.055), 2.
	0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, // 4);.}.float InvR
	0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, // ec709( float col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // or).{.if (color 
	0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // <= 0.081).return
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, //  color * (1.0/4.
	0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 5);.else.return 
	0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, // pow(color * (1.0
	0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, // /1.099) + (0.099
	0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, // /1.099), 1.0/0.4
	0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, // 5);.}.float InvG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // amma( float colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, // r).{.return Invs
	0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // RGB(color);.}.ve
	0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, // c3 InvGamma( vec
	0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // 3 color).{.retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, // n vec3(InvGamma(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, // color.x),InvGamm
	0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, // a(color.y),InvGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, // mma(color.z));.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, // .vec3 InvToneMap
	0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // ( vec3 color).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, // float inv_2bh = 
	0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 0.5/0.25;.float 
	0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, // bh = 4.0*0.25 - 
	0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, // 2.0;.return (col
	0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // or - 1.0 + sqrt(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, // color*(color + b
	0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, // h) + 1.0))*inv_2
	0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, // bh;.}.float sRGB
	0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // ( float f).{.flo
	0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, // at s;.if (f <= 0
	0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, // .0031308).s = 12
	0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, // .92 * f;.else.s 
	0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, // = 1.055 * pow(f,
	0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, //  1.0/2.4) - 0.05
	0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // 5;.return s;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, // loat Rec709( flo
	0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, // at f).{.float s;
	0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, // .if (f <= 0.018)
	0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, // .s = 4.5 * f;.el
	0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, // se.s = 1.099 * p
	0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, // ow(f, 0.45) - 0.
	0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, // 099;.return s;.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, // .float FBGamma( 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // float color).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // eturn sRGB(color
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // );.}.vec2 FBGamm
	0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, // a( vec2 color).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x46, 0x42, 0x47, // .return vec2(FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, // amma(color.x),FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, 0x3b, // Gamma(color.y));
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, // .}.vec3 FBGamma(
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, //  vec3 color).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, // eturn vec3(FBGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, // ma(color.x),FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, // mma(color.y),FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, // amma(color.z));.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x32, 0x32, // }.vec3 FBGamma22
	0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // ( vec3 color).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x70, 0x6f, 0x77, 0x28, // return vec3(pow(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, // color.x, 1.0/2.2
	0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x2c, 0x20, 0x31, // ),pow(color.y, 1
	0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .0/2.2),pow(colo
	0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x29, 0x3b, 0x0a, // r.z, 1.0/2.2));.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, // }.float FBToneMa
	0x70, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // p( float l).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, // turn l * ((l*0.2
	0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, // 5 + 1.0) / (l + 
	0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, // 1.0));.}.vec2 FB
	0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, // ToneMap( vec2 co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, // lor).{.float l =
	0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, //  dot(color,vec2(
	0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, // 0.176204+0.01081
	0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, // 09*0.5,0.812985+
	0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, // 0.0108109*0.5));
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, // .return color * 
	0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, // ((l*0.25 + 1.0) 
	0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // / (l + 1.0));.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, // vec3 FBToneMap( 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, // vec3 color).{.fl
	0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // oat l = dot(colo
	0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, // r,vec3(0.176204,
	0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, // 0.812985,0.01081
	0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, // 09));.return col
	0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, // or * ((l*0.25 + 
	0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // 1.0) / (l + 1.0)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, // );.}.vec4 Additi
	0x76, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, // ve( vec4 cBase, 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // vec4 cBlend, flo
	0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // at percent).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, // turn cBase + cBl
	0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // end*percent;.}.v
	0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, // ec3 Screen ( vec
	0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, // 3 cBase, vec3 cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, // lend).{.return 1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, // .0 - (1.0 - cBas
	0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, // e) * (1.0 - cBle
	0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, // nd);.}.vec4 Scre
	0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // en ( vec4 cBase,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, //  vec4 cBlend).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, // return 1.0 - (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // 0 - cBase) * (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // 0 - cBlend);.}.v
	0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, // ec3 ScreenHDR ( 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // vec3 cBase, vec3
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  cBlend).{.retur
	0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, // n max(1.0 - (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, //  - cBase) * (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, //  - cBlend), vec3
	0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // (0.,0.,0.));.}.v
	0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, // ec4 ScreenHDR ( 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // vec4 cBase, vec4
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  cBlend).{.retur
	0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, // n max(1.0 - (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, //  - cBase) * (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, //  - cBlend), vec4
	0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, // (0.,0.,0.,0.));.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x20, // }.vec4 Multiply 
	0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, // ( vec4 cBase, ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // c4 cBlend, float
	0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  percent).{.retu
	0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // rn cBase * cBlen
	0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // d*percent;.}.vec
	0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, // 4 Overlay ( vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, //  cBase, vec4 cBl
	0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, // end).{.vec4 cNew
	0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, //  = step(0.5, cBa
	0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, // se);.cNew = mix(
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, // cBase*cBlend*2.0
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, // , 1.0-2.0*(1.0-c
	0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, // Base)*(1.0-cBlen
	0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // d), cNew);.retur
	0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, // n cNew;.}.vec4 O
	0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, // verlayHDR ( vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, //  cBase, vec4 cBl
	0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, // end).{.vec4 cNew
	0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, //  = step(0.5, cBa
	0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, // se);.cNew = max(
	0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // mix(cBase*cBlend
	0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, // *2.0, 1.0-2.0*(1
	0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, // .0-cBase)*(1.0-c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, // Blend), cNew), v
	0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, // ec4(0.,0.,0.,0.)
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, // );.return cNew;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, // }.vec3 cos_hemis
	0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x20, 0x76, 0x65, // phere_sample( ve
	0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x68, // c2 t).{.float ph
	0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x33, // i = t.y * (2.0*3
	0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, // .141592653589793
	0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, // 2384626433832795
	0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, // );.float cosThet
	0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, // a = sqrt(1.0 - t
	0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, // .x);.float sinTh
	0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, // eta = sqrt(t.x);
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x7b, 0x73, // .float sp,cp;.{s
	0x70, 0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x63, 0x70, 0x3d, 0x63, 0x6f, // p=sin(phi);cp=co
	0x73, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // s(phi);};.return
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, //  vec3(cp * sinTh
	0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, // eta, cosTheta, s
	0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, // p * sinTheta);.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, // .vec3 rotate_to_
	0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x28, 0x20, 0x76, 0x65, // vector_upper( ve
	0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, // c3 vec, vec3 nor
	0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // mal).{.if(normal
	0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, 0x7b, // .y > -0.99999).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, // .float h = 1.0/(
	0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, // 1.0+normal.y);.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, // loat hz = h*norm
	0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, 0x20, // al.z;.float hzx 
	0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, 0x72, // = hz*normal.x;.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, 0x2e, // eturn vec3(.vec.
	0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x7a, // x * (normal.y+hz
	0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, // *normal.z) + vec
	0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, // .y * normal.x - 
	0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, 0x63, // vec.z * hzx,.vec
	0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, 0x20, // .y * normal.y - 
	0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // vec.x * normal.x
	0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, //  - vec.z * norma
	0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, // l.z,.vec.y * nor
	0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, // mal.z - vec.x * 
	0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x6e, // hzx + vec.z * (n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // ormal.y+h*normal
	0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, // .x*normal.x));.}
	0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, 0x65, // .else return -ve
	0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, // c;.}.uniform mat
	0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, // 4 matWorldViewPr
	0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // oj;.uniform vec4
	0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, //  glassPad;.void 
	0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x6f, // main().{.vec4 po
	0x73, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, // s = vec4(a_posit
	0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x5f, 0x74, 0x65, 0x78, // ion, 1.0);.v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // coord0 = a_texco
	0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, // ord0;.v_texcoord
	0x31, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, // 1 = a_texcoord0 
	0x2a, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, // * vec2(1.0 + (gl
	0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, // assPad.x) + (gla
	0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, // ssPad.y), 1.0 + 
	0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x28, // (glassPad.z) + (
	0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x76, // glassPad.w)) - v
	0x65, 0x63, 0x32, 0x28, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x78, 0x29, // ec2((glassPad.x)
	0x2c, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x7a, 0x29, 0x29, 0x3b, // , (glassPad.z));
	0x0a, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x28, // .gl_Position = (
	0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, //  (matWorldViewPr
	0x6f, 0x6a, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x70, 0x6f, 0x73, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, // oj) * (pos) );.}
	0x0a, 0x00,                                                                                     // ..
};
static const uint8_t vs_dmd_world_noclip_dx11[708] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x8f, 0x07, 0x02, 0x00, 0x10, 0x6d, // VSH............m
	0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x04, // atWorldViewProj.
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, // ..........glassP
	0x61, 0x64, 0x02, 0x00, 0x40, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x02, 0x00, 0x00, // ad..@.......|...
	0x44, 0x58, 0x42, 0x43, 0x11, 0xa2, 0xf4, 0xd2, 0xe9, 0xce, 0xc7, 0x2e, 0xc1, 0x78, 0x7d, 0xb8, // DXBC.........x}.
	0xf7, 0x14, 0x1e, 0x18, 0x01, 0x00, 0x00, 0x00, 0x7c, 0x02, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ........|.......
	0x2c, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x4e, // ,...........ISGN
	0x4c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, // L...........8...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x07, 0x07, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....A...........
	0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x50, 0x4f, 0x53, 0x49, // ............POSI
	0x54, 0x49, 0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0xab, 0xab, // TION.TEXCOORD...
	0x4f, 0x53, 0x47, 0x4e, 0x68, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, // OSGNh...........
	0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // P...............
	0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x0c, 0x00, 0x00, // ................
	0x5c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x0c, 0x03, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, // ........SV_POSIT
	0x49, 0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0xab, 0xab, 0xab, // ION.TEXCOORD....
	0x53, 0x48, 0x45, 0x58, 0x84, 0x01, 0x00, 0x00, 0x50, 0x00, 0x01, 0x00, 0x61, 0x00, 0x00, 0x00, // SHEX....P...a...
	0x6a, 0x08, 0x00, 0x01, 0x59, 0x00, 0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // j...Y...F. .....
	0x05, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0x72, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ...._...r.......
	0x5f, 0x00, 0x00, 0x03, 0x32, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x04, // _...2.......g...
	0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, // . ..........e...
	0x32, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0xc2, 0x20, 0x10, 0x00, // 2 ......e.... ..
	0x01, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, // ....h.......8...
	0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x15, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........V.......
	0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, // F. .........2...
	0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // ........F. .....
	0x00, 0x00, 0x00, 0x00, 0x06, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, // ............F...
	0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....2...........
	0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa6, 0x1a, 0x10, 0x00, // F. .............
	0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, // ....F...........
	0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // . ......F.......
	0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, // F. .............
	0x32, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // 2......... .....
	0x04, 0x00, 0x00, 0x00, 0xd6, 0x85, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // ...... .........
	0x00, 0x00, 0x00, 0x0a, 0x32, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, // ....2.......F...
	0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, // .....@.....?...?
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0b, 0xc2, 0x20, 0x10, 0x00, // ........2.... ..
	0x01, 0x00, 0x00, 0x00, 0x06, 0x14, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x04, 0x10, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x06, 0x88, 0x20, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ...... .A.......
	0x04, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x32, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....6...2 ......
	0x46, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x01, 0x00, 0x02, 0x01, 0x00, // F.......>.......
	0x10, 0x00, 0x50, 0x00,                                                                         // ..P.
};
static const uint8_t vs_dmd_world_noclip_spv[1768] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x8f, 0x07, 0x02, 0x00, 0x08, 0x67, // VSH............g
	0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x02, 0x01, 0x40, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // lassPad..@......
	0x00, 0x10, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, // ..matWorldViewPr
	0x6f, 0x6a, 0x04, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x06, 0x00, 0x00, // oj..............
	0x03, 0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x0b, 0x00, 0x08, 0x00, 0xa0, 0x00, 0x00, 0x00, // ..#.............
	0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x06, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30, // ....GLSL.std.450
	0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x0f, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, // ............main
	0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x5e, 0x00, 0x00, 0x00, // ....Q...U...^...
	0x62, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x05, 0x00, 0x00, 0x00, // b...e...........
	0xf4, 0x01, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, // ............main
	0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x27, 0x00, 0x00, 0x00, 0x55, 0x6e, 0x69, 0x66, // ........'...Unif
	0x6f, 0x72, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, // ormBlock........
	0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, // '.......matWorld
	0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, // ViewProj........
	0x27, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, // '.......glassPad
	0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x03, 0x00, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........).......
	0x05, 0x00, 0x05, 0x00, 0x51, 0x00, 0x00, 0x00, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, // ....Q...a_positi
	0x6f, 0x6e, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0x55, 0x00, 0x00, 0x00, 0x61, 0x5f, 0x74, 0x65, // on......U...a_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x05, 0x00, 0x0a, 0x00, 0x5e, 0x00, 0x00, 0x00, // xcoord0.....^...
	0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, // @entryPointOutpu
	0x74, 0x2e, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x00, // t.gl_Position...
	0x05, 0x00, 0x0a, 0x00, 0x62, 0x00, 0x00, 0x00, 0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, // ....b...@entryPo
	0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // intOutput.v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x00, 0x00, 0x05, 0x00, 0x0a, 0x00, 0x65, 0x00, 0x00, 0x00, // oord0.......e...
	0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, // @entryPointOutpu
	0x74, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x00, 0x00, 0x00, // t.v_texcoord1...
	0x48, 0x00, 0x04, 0x00, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // H...'...........
	0x48, 0x00, 0x05, 0x00, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, // H...'.......#...
	0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....H...'.......
	0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x27, 0x00, 0x00, 0x00, // ........H...'...
	0x01, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00, // ....#...@...G...
	0x27, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x29, 0x00, 0x00, 0x00, // '.......G...)...
	0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x29, 0x00, 0x00, 0x00, // ".......G...)...
	0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x51, 0x00, 0x00, 0x00, // !.......G...Q...
	0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x55, 0x00, 0x00, 0x00, // ........G...U...
	0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x5e, 0x00, 0x00, 0x00, // ........G...^...
	0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x62, 0x00, 0x00, 0x00, // ........G...b...
	0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x65, 0x00, 0x00, 0x00, // ........G...e...
	0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x21, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00, // !...............
	0x06, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, // .... ...........
	0x06, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x09, 0x00, 0x00, 0x00, // ................
	0x06, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, // ................
	0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, 0x14, 0x00, 0x00, 0x00, // ................
	0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x14, 0x00, 0x00, 0x00, //  .......+.......
	0x15, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, // ........+.......
	0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x18, 0x00, 0x04, 0x00, 0x26, 0x00, 0x00, 0x00, // .......?....&...
	0x0b, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x04, 0x00, 0x27, 0x00, 0x00, 0x00, // ............'...
	0x26, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x28, 0x00, 0x00, 0x00, // &....... ...(...
	0x02, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x28, 0x00, 0x00, 0x00, // ....'...;...(...
	0x29, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, 0x2a, 0x00, 0x00, 0x00, // )...........*...
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x2a, 0x00, 0x00, 0x00, //  .......+...*...
	0x2b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x2c, 0x00, 0x00, 0x00, // +....... ...,...
	0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x2a, 0x00, 0x00, 0x00, // ........+...*...
	0x30, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x2a, 0x00, 0x00, 0x00, // 0.......+...*...
	0x34, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x2a, 0x00, 0x00, 0x00, // 4.......+...*...
	0x38, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x14, 0x00, 0x00, 0x00, // 8.......+.......
	0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x47, 0x00, 0x00, 0x00, // E....... ...G...
	0x02, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x50, 0x00, 0x00, 0x00, // ....&... ...P...
	0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x50, 0x00, 0x00, 0x00, // ........;...P...
	0x51, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x54, 0x00, 0x00, 0x00, // Q....... ...T...
	0x01, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x54, 0x00, 0x00, 0x00, // ........;...T...
	0x55, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x5d, 0x00, 0x00, 0x00, // U....... ...]...
	0x03, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x5d, 0x00, 0x00, 0x00, // ........;...]...
	0x5e, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, // ^....... ...a...
	0x03, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, // ........;...a...
	0x62, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, // b.......;...a...
	0x65, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, // e.......6.......
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, // ................
	0x05, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, // ....=.......R...
	0x51, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x09, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, // Q...=.......V...
	0x55, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, // U...Q...........
	0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, // R.......Q.......
	0x81, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // ....R.......Q...
	0x06, 0x00, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ........R.......
	0x50, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x83, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, // P...............
	0x81, 0x00, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, // ............A...
	0x2c, 0x00, 0x00, 0x00, 0x87, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, // ,.......).......
	0x2b, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, // +...=...........
	0x87, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00, // ................
	0x1e, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x2c, 0x00, 0x00, 0x00, // ........A...,...
	0x8a, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, // ....).......0...
	0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0x8a, 0x00, 0x00, 0x00, // =...............
	0x81, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00, // ................
	0x8b, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x8d, 0x00, 0x00, 0x00, // ....A...,.......
	0x29, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, // ).......4...=...
	0x06, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x00, 0x00, 0x8d, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, // ................
	0x06, 0x00, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x00, 0x00, // ................
	0x41, 0x00, 0x06, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, // A...,.......)...
	0x15, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, // ....8...=.......
	0x91, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, // ................
	0x92, 0x00, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, // ............P...
	0x09, 0x00, 0x00, 0x00, 0x93, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x92, 0x00, 0x00, 0x00, // ................
	0x85, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, // ............V...
	0x93, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, // ....A...,.......
	0x29, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, // ).......+...=...
	0x06, 0x00, 0x00, 0x00, 0x96, 0x00, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, // ............A...
	0x2c, 0x00, 0x00, 0x00, 0x97, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, // ,.......).......
	0x34, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, // 4...=...........
	0x97, 0x00, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, 0x00, 0x99, 0x00, 0x00, 0x00, // ....P...........
	0x96, 0x00, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, 0x00, // ................
	0x9a, 0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00, 0x99, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, // ............A...
	0x47, 0x00, 0x00, 0x00, 0x9d, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, // G.......)...E...
	0x3d, 0x00, 0x04, 0x00, 0x26, 0x00, 0x00, 0x00, 0x9e, 0x00, 0x00, 0x00, 0x9d, 0x00, 0x00, 0x00, // =...&...........
	0x90, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x9f, 0x00, 0x00, 0x00, 0x83, 0x00, 0x00, 0x00, // ................
	0x9e, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x5e, 0x00, 0x00, 0x00, 0x9f, 0x00, 0x00, 0x00, // ....>...^.......
	0x3e, 0x00, 0x03, 0x00, 0x62, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, // >...b...V...>...
	0x65, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00, // e...........8...
	0x00, 0x02, 0x01, 0x00, 0x10, 0x00, 0x50, 0x00,                                                 // ......P.
};
static const bgfx::EmbeddedShader vs_dmd_world_noclip = BGFX_EMBEDDED_SHADER(vs_dmd_world_noclip);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of vertex shader from vs_dmd.sc to vs_dmd_world_noclip_st with options: WORLD STEREO NOCLIP
static const uint8_t vs_dmd_world_noclip_st_mtl[1202] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x8f, 0x07, 0x02, 0x00, 0x08, 0x67, // VSH............g
	0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x02, 0x01, 0x80, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // lassPad.........
	0x00, 0x10, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, // ..matWorldViewPr
	0x6f, 0x6a, 0x04, 0x02, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x04, 0x00, 0x00, // oj..........h...
	0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, // #include <metal_
	0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, // stdlib>.#include
	0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, //  <simd/simd.h>..
	0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, // using namespace 
	0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, // metal;..struct _
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // Global.{.    flo
	0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, // at4x4 matWorldVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // ewProj[2];.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x3b, 0x0a, // loat4 glassPad;.
	0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // };..struct xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x09, 0x66, 0x6c, // tlMain_out.{..fl
	0x6f, 0x61, 0x74, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x70, // oat bgfx_metal_p
	0x6f, 0x69, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x20, 0x5b, 0x5b, 0x70, 0x6f, 0x69, 0x6e, 0x74, // ointSize [[point
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5d, 0x5d, 0x20, 0x3d, 0x20, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, // _size]] = 1;.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, //  float2 _entryPo
	0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // intOutput_v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, // oord0 [[user(loc
	0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // n0)]];.    float
	0x32, 0x20, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, // 2 _entryPointOut
	0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, // put_v_texcoord1 
	0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, // [[user(locn1)]];
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x67, 0x6c, 0x5f, 0x50, // .    float4 gl_P
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x5b, 0x5b, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, // osition [[positi
	0x6f, 0x6e, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x67, // on]];.    uint g
	0x6c, 0x5f, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, // l_Layer [[render
	0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x69, 0x6e, // _target_array_in
	0x64, 0x65, 0x78, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, // dex]];.};..struc
	0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, // t xlatMtlMain_in
	0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x61, 0x5f, // .{.    float3 a_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x5b, 0x5b, 0x61, 0x74, 0x74, 0x72, 0x69, // position [[attri
	0x62, 0x75, 0x74, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // bute(0)]];.    f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, // loat2 a_texcoord
	0x30, 0x20, 0x5b, 0x5b, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x28, 0x31, 0x29, // 0 [[attribute(1)
	0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x20, 0x78, // ]];.};..vertex x
	0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, // latMtlMain_out x
	0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, // latMtlMain(xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, // tlMain_in in [[s
	0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, // tage_in]], const
	0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, // ant _Global& _mt
	0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, // l_u [[buffer(0)]
	0x5d, 0x2c, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x67, 0x6c, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, // ], uint gl_Insta
	0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x20, 0x5b, 0x5b, 0x69, 0x6e, 0x73, 0x74, 0x61, // nceIndex [[insta
	0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // nce_id]]).{.    
	0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, // xlatMtlMain_out 
	0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, // out = {};.    ou
	0x74, 0x2e, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, // t.gl_Position = 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, // _mtl_u.matWorldV
	0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x67, 0x6c, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, // iewProj[gl_Insta
	0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x5d, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, // nceIndex] * floa
	0x74, 0x34, 0x28, 0x69, 0x6e, 0x2e, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, // t4(in.a_position
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, // , 1.0);.    out.
	0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, // _entryPointOutpu
	0x74, 0x5f, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3d, 0x20, // t_v_texcoord0 = 
	0x69, 0x6e, 0x2e, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, // in.a_texcoord0;.
	0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, //     out._entryPo
	0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // intOutput_v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x61, 0x5f, 0x74, 0x65, // oord1 = (in.a_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // xcoord0 * float2
	0x28, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, // ((1.0 + _mtl_u.g
	0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, // lassPad.x) + _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x79, 0x2c, 0x20, // l_u.glassPad.y, 
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, 0x6c, // (1.0 + _mtl_u.gl
	0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // assPad.z) + _mtl
	0x5f, 0x75, 0x2e, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x77, 0x29, 0x29, 0x20, // _u.glassPad.w)) 
	0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // - float2(_mtl_u.
	0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x78, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // glassPad.x, _mtl
	0x5f, 0x75, 0x2e, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, // _u.glassPad.z);.
	0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x67, 0x6c, 0x5f, 0x4c, 0x61, 0x79, 0x65, 0x72, //     out.gl_Layer
	0x20, 0x3d, 0x20, 0x67, 0x6c, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, //  = gl_InstanceIn
	0x64, 0x65, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // dex;.    return 
	0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x03, 0x01, 0x00, 0x10, 0x00, 0xff, 0xff, // out;.}..........
	0x90, 0x00,                                                                                     // ..
};
static const uint8_t vs_dmd_world_noclip_st_essl[6534] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x73, 0x19, // VSH...........s.
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // s.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x75, 0x74, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, // arying out.preci
	0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // sion highp float
	0x3b, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, // ;.precision high
	0x70, 0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, // p int;.#define s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // hadow2D(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // e(_sampler, _coo
	0x72, 0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, // rd).#define shad
	0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ow2DProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // r, _coord) textu
	0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // reProj(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, //  _coord).attribu
	0x74, 0x65, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, // te vec3 a_positi
	0x6f, 0x6e, 0x3b, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x76, 0x65, // on;.attribute ve
	0x63, 0x32, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, // c2 a_texcoord0;.
	0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, // varying vec2 v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // excoord0;.varyin
	0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // g vec2 v_texcoor
	0x64, 0x31, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, // d1;.vec3 instMul
	0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, // (vec3 _vec, mat3
	0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _mtx) { return 
	0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, // ( (_vec) * (_mtx
	0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, // ) ); }.vec3 inst
	0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, // Mul(mat3 _mtx, v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // ec3 _vec) { retu
	0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, // rn ( (_mtx) * (_
	0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, // vec) ); }.vec4 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, // nstMul(vec4 _vec
	0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // , mat4 _mtx) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, // eturn ( (_vec) *
	0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, //  (_mtx) ); }.vec
	0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, // 4 instMul(mat4 _
	0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, // mtx, vec4 _vec) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, // { return ( (_mtx
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // ) * (_vec) ); }.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // float rcp(float 
	0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, // _a) { return 1.0
	0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, // /_a; }.vec2 rcp(
	0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // vec2 _a) { retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, // n vec2(1.0)/_a; 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, // }.vec3 rcp(vec3 
	0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _a) { return vec
	0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, // 3(1.0)/_a; }.vec
	0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, // 4 rcp(vec4 _a) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, //  return vec4(1.0
	0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, // )/_a; }.vec2 vec
	0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, // 2_splat(float _x
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // ) { return vec2(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // _x, _x); }.vec3 
	0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // vec3_splat(float
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, //  _x) { return ve
	0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, // c3(_x, _x, _x); 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, // }.vec4 vec4_spla
	0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // t(float _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // turn vec4(_x, _x
	0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, // , _x, _x); }.uve
	0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, // c2 uvec2_splat(u
	0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // int _x) { return
	0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, //  uvec2(_x, _x); 
	0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, // }.uvec3 uvec3_sp
	0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // lat(uint _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, // eturn uvec3(_x, 
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, // _x, _x); }.uvec4
	0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, //  uvec4_splat(uin
	0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, // t _x) { return u
	0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // vec4(_x, _x, _x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, //  _x); }.mat4 mtx
	0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, // FromRows(vec4 _0
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // , vec4 _1, vec4 
	0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // _2, vec4 _3).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, // eturn transpose(
	0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, // mat4(_0, _1, _2,
	0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, //  _3) );.}.mat4 m
	0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, // txFromCols(vec4 
	0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, // _0, vec4 _1, vec
	0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, // 4 _2, vec4 _3).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, // .return mat4(_0,
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, //  _1, _2, _3);.}.
	0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, // mat3 mtxFromRows
	0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // (vec3 _0, vec3 _
	0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 1, vec3 _2).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, // turn transpose(m
	0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, // at3(_0, _1, _2) 
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, // );.}.mat3 mtxFro
	0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, // mCols(vec3 _0, v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, // ec3 _1, vec3 _2)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, // .{.return mat3(_
	0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, // 0, _1, _2);.}.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // iform vec4 u_vie
	0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // wRect;.uniform v
	0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, // ec4 u_viewTexel;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // view;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, // t4 u_invView;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, // iform mat4 u_pro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // u_invProj;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, // rm mat4 u_viewPr
	0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // oj;.uniform mat4
	0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, //  u_invViewProj;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, // uniform mat4 u_m
	0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // odel[32];.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, // m mat4 u_modelVi
	0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // ew;.uniform mat4
	0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, //  u_modelViewProj
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, // ;.uniform vec4 u
	0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // _alphaRef4;.floa
	0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, // t sqr( float v).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, // {.return v*v;.}.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, // vec2 sqr( vec2 v
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, // ).{.return v*v;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, // }.vec3 sqr( vec3
	0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, //  v).{.return v*v
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, // ;.}.vec3 mul_w1(
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, //  vec3 v, mat4 m)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, // .{.return v.x*m[
	0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, // 0].xyz + (v.y*m[
	0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, // 1].xyz + (v.z*m[
	0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, // 2].xyz + m[3].xy
	0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, // z));.}.float aco
	0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, // s_approx_divPI( 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float v).{.float
	0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, //  x = abs(v);.if(
	0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, // 1. - x <= 0.0000
	0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, // 6103515625).retu
	0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, // rn (v >= 0.) ? 0
	0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, // . : 1.;.float re
	0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, // s = ((-0.155972/
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, // 5) * x + (1.5646
	0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, // 7/3.141592653589
	0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, // 7932384626433832
	0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, // 795) ) * sqrt(1.
	0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, //  - x);.return (v
	0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, //  >= 0.) ? res : 
	0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // 1. - res;.}.floa
	0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, // t atan2_approx_d
	0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, // iv2PI( float y, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float x).{.float
	0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, //  abs_y = abs(y);
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, // .float abs_x = a
	0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, // bs(x);.if(abs_x 
	0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, // <= 0.00006103515
	0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, // 625 && abs_y <= 
	0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, // 0.00006103515625
	0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, // ).return 0.;.flo
	0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, // at r = (abs_x - 
	0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, // abs_y) / (abs_x 
	0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // + abs_y);.float 
	0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, // angle = ((x < 0.
	0x29, 0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, // ) ? (3./8.) : (1
	0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, // ./8.)).+ (0.2118
	0x36, 0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, // 68 /(2.*3.141592
	0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, // 6535897932384626
	0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, // 433832795) * r *
	0x20, 0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, //  r - 0.987305 /(
	0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, // 2.*3.14159265358
	0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, // 9793238462643383
	0x32, 0x37, 0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, // 2795)) * ((x < 0
	0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, // .) ? -r : r);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, // turn (y < 0.) ? 
	0x2d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, // -angle : angle;.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, // }.float asin_app
	0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // rox_divPI( float
	0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, //  v).{.float x = 
	0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, // abs(v);.if(1. - 
	0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, // x <= 0.000061035
	0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, // 15625).return (v
	0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, //  >= 0.) ? 0.5 : 
	0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, // -0.5;.float res 
	0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, // = ((-0.155972/3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, //  * x + (1.56467/
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, // 5) ) * sqrt(1. -
	0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, //  x);.return (v >
	0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, // = 0.) ? 0.5 - re
	0x73, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, // s : -0.5 + res;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, // }.vec2 ray_to_eq
	0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, // uirectangular_uv
	0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // ( vec3 ray).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, // turn vec2(.0.5 +
	0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, //  atan2_approx_di
	0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, // v2PI(ray.y, ray.
	0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, // x),.acos_approx_
	0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, // divPI(ray.z));.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, // .float InvsRGB( 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, // float color).{.i
	0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, // f (color <= 0.04
	0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // 045).return colo
	0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, // r * (1.0/12.92);
	0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, // .else.return pow
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, // (color * (1.0/1.
	0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, // 055) + (0.055/1.
	0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // 055), 2.4);.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, // oat InvRec709( f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, // loat color).{.if
	0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, //  (color <= 0.081
	0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // ).return color *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, //  (1.0/4.5);.else
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .return pow(colo
	0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, // r * (1.0/1.099) 
	0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, // + (0.099/1.099),
	0x20, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, //  1.0/0.45);.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, // oat InvGamma( fl
	0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // oat color).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // urn InvsRGB(colo
	0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, // r);.}.vec3 InvGa
	0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // mma( vec3 color)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, // .{.return vec3(I
	0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, // nvGamma(color.x)
	0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // ,InvGamma(color.
	0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // y),InvGamma(colo
	0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, // r.z));.}.vec3 In
	0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // vToneMap( vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, // olor).{.float in
	0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, // v_2bh = 0.5/0.25
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, // ;.float bh = 4.0
	0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, // *0.25 - 2.0;.ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, // urn (color - 1.0
	0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, //  + sqrt(color*(c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, // olor + bh) + 1.0
	0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // ))*inv_2bh;.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // oat sRGB( float 
	0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, // f).{.float s;.if
	0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, //  (f <= 0.0031308
	0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, // ).s = 12.92 * f;
	0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, // .else.s = 1.055 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, // * pow(f, 1.0/2.4
	0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // ) - 0.055;.retur
	0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, // n s;.}.float Rec
	0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, // 709( float f).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, // float s;.if (f <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, // = 0.018).s = 4.5
	0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, //  * f;.else.s = 1
	0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, // .099 * pow(f, 0.
	0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, // 45) - 0.099;.ret
	0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, // urn s;.}.float F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, // BGamma( float co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, // lor).{.return sR
	0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // GB(color);.}.vec
	0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, // 2 FBGamma( vec2 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // color).{.return 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, // vec2(FBGamma(col
	0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, // or.x),FBGamma(co
	0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // lor.y));.}.vec3 
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, // FBGamma( vec3 co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, // lor).{.return ve
	0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // c3(FBGamma(color
	0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .x),FBGamma(colo
	0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, // r.y),FBGamma(col
	0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, // or.z));.}.vec3 F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // BGamma22( vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // olor).{.return v
	0x65, 0x63, 0x33, 0x28, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, // ec3(pow(color.x,
	0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, //  1.0/2.2),pow(co
	0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, // lor.y, 1.0/2.2),
	0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, // pow(color.z, 1.0
	0x2f, 0x32, 0x2e, 0x32, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // /2.2));.}.float 
	0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // FBToneMap( float
	0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, //  l).{.return l *
	0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, //  ((l*0.25 + 1.0)
	0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, //  / (l + 1.0));.}
	0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, // .vec2 FBToneMap(
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, //  vec2 color).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, // loat l = dot(col
	0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, // or,vec2(0.176204
	0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, // +0.0108109*0.5,0
	0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, // .812985+0.010810
	0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 9*0.5));.return 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, // color * ((l*0.25
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, //  + 1.0) / (l + 1
	0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, // .0));.}.vec3 FBT
	0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, // oneMap( vec3 col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, // or).{.float l = 
	0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, // dot(color,vec3(0
	0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, // .176204,0.812985
	0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, // ,0.0108109));.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, // turn color * ((l
	0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, // *0.25 + 1.0) / (
	0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // l + 1.0));.}.vec
	0x34, 0x20, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, // 4 Additive( vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, //  cBase, vec4 cBl
	0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, // end, float perce
	0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, // nt).{.return cBa
	0x73, 0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, // se + cBlend*perc
	0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, // ent;.}.vec3 Scre
	0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // en ( vec3 cBase,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, //  vec3 cBlend).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, // return 1.0 - (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // 0 - cBase) * (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // 0 - cBlend);.}.v
	0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, // ec4 Screen ( vec
	0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // 4 cBase, vec4 cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, // lend).{.return 1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, // .0 - (1.0 - cBas
	0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, // e) * (1.0 - cBle
	0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, // nd);.}.vec3 Scre
	0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, // enHDR ( vec3 cBa
	0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // se, vec3 cBlend)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, // .{.return max(1.
	0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // 0 - (1.0 - cBase
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // ) * (1.0 - cBlen
	0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, // d), vec3(0.,0.,0
	0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, // .));.}.vec4 Scre
	0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, // enHDR ( vec4 cBa
	0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // se, vec4 cBlend)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, // .{.return max(1.
	0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // 0 - (1.0 - cBase
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // ) * (1.0 - cBlen
	0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, // d), vec4(0.,0.,0
	0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, // .,0.));.}.vec4 M
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // ultiply ( vec4 c
	0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // Base, vec4 cBlen
	0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, // d, float percent
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // ).{.return cBase
	0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, //  * cBlend*percen
	0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, // t;.}.vec4 Overla
	0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, // y ( vec4 cBase, 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, // vec4 cBlend).{.v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, // ec4 cNew = step(
	0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, // 0.5, cBase);.cNe
	0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, // w = mix(cBase*cB
	0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, // lend*2.0, 1.0-2.
	0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, // 0*(1.0-cBase)*(1
	0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, // .0-cBlend), cNew
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, // );.return cNew;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, // }.vec4 OverlayHD
	0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, // R ( vec4 cBase, 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, // vec4 cBlend).{.v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, // ec4 cNew = step(
	0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, // 0.5, cBase);.cNe
	0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, // w = max(mix(cBas
	0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, // e*cBlend*2.0, 1.
	0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, // 0-2.0*(1.0-cBase
	0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, // )*(1.0-cBlend), 
	0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, // cNew), vec4(0.,0
	0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // .,0.,0.));.retur
	0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // n cNew;.}.vec3 c
	0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, // os_hemisphere_sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, // mple( vec2 t).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, // float phi = t.y 
	0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, // * (2.0*3.1415926
	0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, // 5358979323846264
	0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 33832795);.float
	0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, //  cosTheta = sqrt
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, // (1.0 - t.x);.flo
	0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, // at sinTheta = sq
	0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // rt(t.x);.float s
	0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x7b, 0x73, 0x70, 0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, // p,cp;.{sp=sin(ph
	0x69, 0x29, 0x3b, 0x63, 0x70, 0x3d, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, // i);cp=cos(phi);}
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, // ;.return vec3(cp
	0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, //  * sinTheta, cos
	0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, // Theta, sp * sinT
	0x68, 0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, // heta);.}.vec3 ro
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, // tate_to_vector_u
	0x70, 0x70, 0x65, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, // pper( vec3 vec, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, // vec3 normal).{.i
	0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, // f(normal.y > -0.
	0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, // 99999).{.float h
	0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, //  = 1.0/(1.0+norm
	0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, // al.y);.float hz 
	0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, // = h*normal.z;.fl
	0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, // oat hzx = hz*nor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, // mal.x;.return ve
	0x63, 0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, // c3(.vec.x * (nor
	0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // mal.y+hz*normal.
	0x7a, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, // z) + vec.y * nor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, // mal.x - vec.z * 
	0x68, 0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, // hzx,.vec.y * nor
	0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, // mal.y - vec.x * 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, // normal.x - vec.z
	0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, //  * normal.z,.vec
	0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, // .y * normal.z - 
	0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, // vec.x * hzx + ve
	0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, // c.z * (normal.y+
	0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // h*normal.x*norma
	0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, // l.x));.}.else re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, // turn -vec;.}.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, // form mat4 matWor
	0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, 0x75, // ldViewProj[2];.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x67, 0x6c, 0x61, 0x73, // niform vec4 glas
	0x73, 0x50, 0x61, 0x64, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, // sPad;.void main(
	0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x76, // ).{.vec4 pos = v
	0x65, 0x63, 0x34, 0x28, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, // ec4(a_position, 
	0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, // 1.0);.v_texcoord
	0x30, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, // 0 = a_texcoord0;
	0x0a, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x3d, 0x20, 0x61, // .v_texcoord1 = a
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, // _texcoord0 * vec
	0x32, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, // 2(1.0 + (glassPa
	0x64, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, // d.x) + (glassPad
	0x2e, 0x79, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, // .y), 1.0 + (glas
	0x73, 0x50, 0x61, 0x64, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, // sPad.z) + (glass
	0x50, 0x61, 0x64, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x28, // Pad.w)) - vec2((
	0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x28, 0x67, 0x6c, // glassPad.x), (gl
	0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x4c, // assPad.z));.gl_L
	0x61, 0x79, 0x65, 0x72, 0x20, 0x3d, 0x20, 0x67, 0x6c, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, // ayer = gl_Instan
	0x63, 0x65, 0x49, 0x44, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // ceID;.gl_Positio
	0x6e, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, // n = ( (matWorldV
	0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x67, 0x6c, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, // iewProj[gl_Insta
	0x6e, 0x63, 0x65, 0x49, 0x44, 0x5d, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x70, 0x6f, 0x73, 0x29, 0x20, // nceID]) * (pos) 
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,                                                             // );.}..
};
static const uint8_t vs_dmd_world_noclip_st_glsl[6933] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x02, 0x1b, // VSH.............
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x23, // ..#version 440.#
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x47, 0x4c, 0x5f, 0x41, 0x52, 0x42, // extension GL_ARB
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x70, 0x6f, 0x72, 0x74, // _shader_viewport
	0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x20, 0x3a, 0x20, 0x65, // _layer_array : e
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // nable.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // xture2D         
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, //  texture.#define
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, //  texture2DLod   
	0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, //     textureLod.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // Grad      textur
	0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // eGrad.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, // xture2DProjLod  
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, //  textureProjLod.
	0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, // #define texture2
	0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // DProjGrad  textu
	0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, // reProjGrad.#defi
	0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, // ne textureCubeLo
	0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, // d     textureLod
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // CubeGrad    text
	0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // ureGrad.#define 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // texture3D       
	0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, //    texture.#defi
	0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, // ne texture2DLodO
	0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, // ffset textureLod
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, // Offset.#define a
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, // ttribute in.#def
	0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x75, 0x74, 0x0a, // ine varying out.
	0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, // #define bgfxShad
	0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, // ow2D(_sampler, _
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, // coord)     vec4_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x5f, 0x73, // splat(texture(_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, // ampler, _coord) 
	0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, // ).#define bgfxSh
	0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, // adow2DProj(_samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x76, 0x65, 0x63, // ler, _coord) vec
	0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, // 4_splat(textureP
	0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, // roj(_sampler, _c
	0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, // oord) ).attribut
	0x65, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // e vec3 a_positio
	0x6e, 0x3b, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x76, 0x65, 0x63, // n;.attribute vec
	0x32, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, // 2 a_texcoord0;.v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, // arying vec2 v_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // xcoord0;.varying
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, //  vec2 v_texcoord
	0x31, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, // 1;.vec3 instMul(
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, // vec3 _vec, mat3 
	0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, // _mtx) { return (
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, //  (_vec) * (_mtx)
	0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, //  ); }.vec3 instM
	0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, // ul(mat3 _mtx, ve
	0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // c3 _vec) { retur
	0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, // n ( (_mtx) * (_v
	0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, // ec) ); }.vec4 in
	0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, // stMul(vec4 _vec,
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, //  mat4 _mtx) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, // turn ( (_vec) * 
	0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // (_mtx) ); }.vec4
	0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, //  instMul(mat4 _m
	0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, // tx, vec4 _vec) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, //  return ( (_mtx)
	0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, //  * (_vec) ); }.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // loat rcp(float _
	0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, // a) { return 1.0/
	0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, // _a; }.vec2 rcp(v
	0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec2 _a) { return
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, //  vec2(1.0)/_a; }
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // .vec3 rcp(vec3 _
	0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, // a) { return vec3
	0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // (1.0)/_a; }.vec4
	0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, //  rcp(vec4 _a) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, // return vec4(1.0)
	0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, // /_a; }.vec2 vec2
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, // _splat(float _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, //  { return vec2(_
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // x, _x); }.vec3 v
	0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ec3_splat(float 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _x) { return vec
	0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // 3(_x, _x, _x); }
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // .vec4 vec4_splat
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // (float _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // urn vec4(_x, _x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, //  _x, _x); }.uvec
	0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, // 2 uvec2_splat(ui
	0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // nt _x) { return 
	0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // uvec2(_x, _x); }
	0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, // .uvec3 uvec3_spl
	0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // at(uint _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // turn uvec3(_x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, // x, _x); }.uvec4 
	0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec4_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, //  _x) { return uv
	0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, // ec4(_x, _x, _x, 
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, // _x); }.mat4 mtxF
	0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, // romRows(vec4 _0,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, //  vec4 _1, vec4 _
	0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 2, vec4 _3).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, // turn transpose(m
	0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, // at4(_0, _1, _2, 
	0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, // _3) );.}.mat4 mt
	0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // xFromCols(vec4 _
	0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // 0, vec4 _1, vec4
	0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, //  _2, vec4 _3).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, // return mat4(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, // _1, _2, _3);.}.m
	0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, // at3 mtxFromRows(
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, // vec3 _0, vec3 _1
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // , vec3 _2).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, // urn transpose(ma
	0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, // t3(_0, _1, _2) )
	0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, // ;.}.mat3 mtxFrom
	0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, // Cols(vec3 _0, ve
	0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, // c3 _1, vec3 _2).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, // {.return mat3(_0
	0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, // , _1, _2);.}.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, // form vec4 u_view
	0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // Rect;.uniform ve
	0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, // c4 u_viewTexel;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, // uniform mat4 u_v
	0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, // iew;.uniform mat
	0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // 4 u_invView;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, // form mat4 u_proj
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // _invProj;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, // m mat4 u_viewPro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, // u_invViewProj;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, // niform mat4 u_mo
	0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // del[32];.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, //  mat4 u_modelVie
	0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // w;.uniform mat4 
	0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, // u_modelViewProj;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, // .uniform vec4 u_
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // alphaRef4;.float
	0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, //  sqr( float v).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // .return v*v;.}.v
	0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, // ec2 sqr( vec2 v)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, // .{.return v*v;.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // .vec3 sqr( vec3 
	0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, // v).{.return v*v;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x20, // .}.vec3 mul_w1( 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, // vec3 v, mat4 m).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, // {.return v.x*m[0
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, // ].xyz + (v.y*m[1
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, // ].xyz + (v.z*m[2
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, // ].xyz + m[3].xyz
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, // ));.}.float acos
	0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, // _approx_divPI( f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // loat v).{.float 
	0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, // x = abs(v);.if(1
	0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, // . - x <= 0.00006
	0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // 103515625).retur
	0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, // n (v >= 0.) ? 0.
	0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, //  : 1.;.float res
	0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, //  = ((-0.155972/3
	0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, // .141592653589793
	0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, // 2384626433832795
	0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, // ) * x + (1.56467
	0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, // /3.1415926535897
	0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, // 9323846264338327
	0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, // 95) ) * sqrt(1. 
	0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, // - x);.return (v 
	0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, // >= 0.) ? res : 1
	0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // . - res;.}.float
	0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, //  atan2_approx_di
	0x76, 0x32, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x66, // v2PI( float y, f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // loat x).{.float 
	0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, // abs_y = abs(y);.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, // float abs_x = ab
	0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, // s(x);.if(abs_x <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, // = 0.000061035156
	0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, // 25 && abs_y <= 0
	0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, // .00006103515625)
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // .return 0.;.floa
	0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, // t r = (abs_x - a
	0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, // bs_y) / (abs_x +
	0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, //  abs_y);.float a
	0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, // ngle = ((x < 0.)
	0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, //  ? (3./8.) : (1.
	0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, // /8.)).+ (0.21186
	0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, // 8 /(2.*3.1415926
	0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, // 5358979323846264
	0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, // 33832795) * r * 
	0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, // r - 0.987305 /(2
	0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, // .*3.141592653589
	0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, // 7932384626433832
	0x37, 0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, // 795)) * ((x < 0.
	0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // ) ? -r : r);.ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, // urn (y < 0.) ? -
	0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, // angle : angle;.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, // .float asin_appr
	0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ox_divPI( float 
	0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, // v).{.float x = a
	0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, // bs(v);.if(1. - x
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, //  <= 0.0000610351
	0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, // 5625).return (v 
	0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, // >= 0.) ? 0.5 : -
	0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, // 0.5;.float res =
	0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, //  ((-0.155972/3.1
	0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, // 4159265358979323
	0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, // 84626433832795) 
	0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, // * x + (1.56467/3
	0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, // .141592653589793
	0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, // 2384626433832795
	0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, // ) ) * sqrt(1. - 
	0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, // x);.return (v >=
	0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, //  0.) ? 0.5 - res
	0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, //  : -0.5 + res;.}
	0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, // .vec2 ray_to_equ
	0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, // irectangular_uv(
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, //  vec3 ray).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, // urn vec2(.0.5 + 
	0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, // atan2_approx_div
	0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, // 2PI(ray.y, ray.x
	0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, // ),.acos_approx_d
	0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // ivPI(ray.z));.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, // float InvsRGB( f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, // loat color).{.if
	0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, //  (color <= 0.040
	0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // 45).return color
	0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, //  * (1.0/12.92);.
	0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, // else.return pow(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, // color * (1.0/1.0
	0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, // 55) + (0.055/1.0
	0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // 55), 2.4);.}.flo
	0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, // at InvRec709( fl
	0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, // oat color).{.if 
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, // (color <= 0.081)
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, // .return color * 
	0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, // (1.0/4.5);.else.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // return pow(color
	0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, //  * (1.0/1.099) +
	0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, //  (0.099/1.099), 
	0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // 1.0/0.45);.}.flo
	0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, // at InvGamma( flo
	0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // at color).{.retu
	0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // rn InvsRGB(color
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // );.}.vec3 InvGam
	0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // ma( vec3 color).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, // {.return vec3(In
	0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, // vGamma(color.x),
	0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, // InvGamma(color.y
	0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // ),InvGamma(color
	0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, // .z));.}.vec3 Inv
	0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, // ToneMap( vec3 co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, // lor).{.float inv
	0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, // _2bh = 0.5/0.25;
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, // .float bh = 4.0*
	0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 0.25 - 2.0;.retu
	0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, // rn (color - 1.0 
	0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, // + sqrt(color*(co
	0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // lor + bh) + 1.0)
	0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // )*inv_2bh;.}.flo
	0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, // at sRGB( float f
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, // ).{.float s;.if 
	0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, // (f <= 0.0031308)
	0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, // .s = 12.92 * f;.
	0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, // else.s = 1.055 *
	0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, //  pow(f, 1.0/2.4)
	0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  - 0.055;.return
	0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, //  s;.}.float Rec7
	0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, // 09( float f).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, // loat s;.if (f <=
	0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, //  0.018).s = 4.5 
	0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, // * f;.else.s = 1.
	0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, // 099 * pow(f, 0.4
	0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 5) - 0.099;.retu
	0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, // rn s;.}.float FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, // Gamma( float col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, // or).{.return sRG
	0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, // B(color);.}.vec2
	0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, //  FBGamma( vec2 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // olor).{.return v
	0x65, 0x63, 0x32, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // ec2(FBGamma(colo
	0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, // r.x),FBGamma(col
	0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, // or.y));.}.vec3 F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, // BGamma( vec3 col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // or).{.return vec
	0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // 3(FBGamma(color.
	0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // x),FBGamma(color
	0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .y),FBGamma(colo
	0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, // r.z));.}.vec3 FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, // Gamma22( vec3 co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, // lor).{.return ve
	0x63, 0x33, 0x28, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, 0x20, // c3(pow(color.x, 
	0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, // 1.0/2.2),pow(col
	0x6f, 0x72, 0x2e, 0x79, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, // or.y, 1.0/2.2),p
	0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, // ow(color.z, 1.0/
	0x32, 0x2e, 0x32, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, // 2.2));.}.float F
	0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // BToneMap( float 
	0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, // l).{.return l * 
	0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, // ((l*0.25 + 1.0) 
	0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // / (l + 1.0));.}.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, // vec2 FBToneMap( 
	0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, // vec2 color).{.fl
	0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // oat l = dot(colo
	0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, // r,vec2(0.176204+
	0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, // 0.0108109*0.5,0.
	0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, // 812985+0.0108109
	0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, // *0.5));.return c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, // olor * ((l*0.25 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, // + 1.0) / (l + 1.
	0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, // 0));.}.vec3 FBTo
	0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // neMap( vec3 colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, // r).{.float l = d
	0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, // ot(color,vec3(0.
	0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, // 176204,0.812985,
	0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // 0.0108109));.ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, // urn color * ((l*
	0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, // 0.25 + 1.0) / (l
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, //  + 1.0));.}.vec4
	0x20, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, //  Additive( vec4 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, // cBase, vec4 cBle
	0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, // nd, float percen
	0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, // t).{.return cBas
	0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, // e + cBlend*perce
	0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, // nt;.}.vec3 Scree
	0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, // n ( vec3 cBase, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // vec3 cBlend).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, // eturn 1.0 - (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, //  - cBase) * (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, //  - cBlend);.}.ve
	0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, // c4 Screen ( vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, //  cBase, vec4 cBl
	0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, // end).{.return 1.
	0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // 0 - (1.0 - cBase
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // ) * (1.0 - cBlen
	0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, // d);.}.vec3 Scree
	0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, // nHDR ( vec3 cBas
	0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, // e, vec3 cBlend).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, // {.return max(1.0
	0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, //  - (1.0 - cBase)
	0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, //  * (1.0 - cBlend
	0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, // ), vec3(0.,0.,0.
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, // ));.}.vec4 Scree
	0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, // nHDR ( vec4 cBas
	0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, // e, vec4 cBlend).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, // {.return max(1.0
	0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, //  - (1.0 - cBase)
	0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, //  * (1.0 - cBlend
	0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, // ), vec4(0.,0.,0.
	0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, // ,0.));.}.vec4 Mu
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // ltiply ( vec4 cB
	0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // ase, vec4 cBlend
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, // , float percent)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, // .{.return cBase 
	0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, // * cBlend*percent
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, // ;.}.vec4 Overlay
	0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, //  ( vec4 cBase, v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, // ec4 cBlend).{.ve
	0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, // c4 cNew = step(0
	0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, // .5, cBase);.cNew
	0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, //  = mix(cBase*cBl
	0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, // end*2.0, 1.0-2.0
	0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, // *(1.0-cBase)*(1.
	0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, // 0-cBlend), cNew)
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, // ;.return cNew;.}
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, // .vec4 OverlayHDR
	0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, //  ( vec4 cBase, v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, // ec4 cBlend).{.ve
	0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, // c4 cNew = step(0
	0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, // .5, cBase);.cNew
	0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, //  = max(mix(cBase
	0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, // *cBlend*2.0, 1.0
	0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, // -2.0*(1.0-cBase)
	0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, // *(1.0-cBlend), c
	0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, // New), vec4(0.,0.
	0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ,0.,0.));.return
	0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, //  cNew;.}.vec3 co
	0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, // s_hemisphere_sam
	0x70, 0x6c, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x66, // ple( vec2 t).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, // loat phi = t.y *
	0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, //  (2.0*3.14159265
	0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, // 3589793238462643
	0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 3832795);.float 
	0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // cosTheta = sqrt(
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // 1.0 - t.x);.floa
	0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, // t sinTheta = sqr
	0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, // t(t.x);.float sp
	0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x7b, 0x73, 0x70, 0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, 0x69, // ,cp;.{sp=sin(phi
	0x29, 0x3b, 0x63, 0x70, 0x3d, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, 0x3b, // );cp=cos(phi);};
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, // .return vec3(cp 
	0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, // * sinTheta, cosT
	0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, // heta, sp * sinTh
	0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, // eta);.}.vec3 rot
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, // ate_to_vector_up
	0x70, 0x65, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x76, // per( vec3 vec, v
	0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, // ec3 normal).{.if
	0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, // (normal.y > -0.9
	0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, // 9999).{.float h 
	0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // = 1.0/(1.0+norma
	0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, // l.y);.float hz =
	0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, //  h*normal.z;.flo
	0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, // at hzx = hz*norm
	0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // al.x;.return vec
	0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, // 3(.vec.x * (norm
	0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, // al.y+hz*normal.z
	0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // ) + vec.y * norm
	0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, // al.x - vec.z * h
	0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // zx,.vec.y * norm
	0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, // al.y - vec.x * n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, // ormal.x - vec.z 
	0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, // * normal.z,.vec.
	0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, // y * normal.z - v
	0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, // ec.x * hzx + vec
	0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, // .z * (normal.y+h
	0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // *normal.x*normal
	0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, // .x));.}.else ret
	0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, // urn -vec;.}.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, // orm mat4 matWorl
	0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, // dViewProj[2];.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, // iform vec4 glass
	0x50, 0x61, 0x64, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, // Pad;.void main()
	0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x76, 0x65, // .{.vec4 pos = ve
	0x63, 0x34, 0x28, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, // c4(a_position, 1
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, // .0);.v_texcoord0
	0x20, 0x3d, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, //  = a_texcoord0;.
	0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x3d, 0x20, 0x61, 0x5f, // v_texcoord1 = a_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, 0x32, // texcoord0 * vec2
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, // (1.0 + (glassPad
	0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, // .x) + (glassPad.
	0x79, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, // y), 1.0 + (glass
	0x50, 0x61, 0x64, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, // Pad.z) + (glassP
	0x61, 0x64, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x28, 0x67, // ad.w)) - vec2((g
	0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x28, 0x67, 0x6c, 0x61, // lassPad.x), (gla
	0x73, 0x73, 0x50, 0x61, 0x64, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x4c, 0x61, // ssPad.z));.gl_La
	0x79, 0x65, 0x72, 0x20, 0x3d, 0x20, 0x67, 0x6c, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, // yer = gl_Instanc
	0x65, 0x49, 0x44, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, // eID;.gl_Position
	0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, //  = ( (matWorldVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x67, 0x6c, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, // ewProj[gl_Instan
	0x63, 0x65, 0x49, 0x44, 0x5d, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x70, 0x6f, 0x73, 0x29, 0x20, 0x29, // ceID]) * (pos) )
	0x3b, 0x0a, 0x7d, 0x0a, 0x00,                                                                   // ;.}..
};
static const uint8_t vs_dmd_world_noclip_st_dx11[920] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x8f, 0x07, 0x02, 0x00, 0x10, 0x6d, // VSH............m
	0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x04, // atWorldViewProj.
	0x02, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, // ..........glassP
	0x61, 0x64, 0x02, 0x00, 0x80, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x03, 0x00, 0x00, // ad..........P...
	0x44, 0x58, 0x42, 0x43, 0xe0, 0xee, 0x5c, 0xc2, 0x40, 0xac, 0x6c, 0x48, 0x3e, 0x5b, 0xe4, 0xa7, // DXBC....@.lH>[..
	0x72, 0xd8, 0xfa, 0xee, 0x01, 0x00, 0x00, 0x00, 0x50, 0x03, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // r.......P.......
	0x30, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x48, 0x01, 0x00, 0x00, 0x40, 0x03, 0x00, 0x00, // 0.......H...@...
	0x49, 0x53, 0x47, 0x4e, 0x70, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, // ISGNp...........
	0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // P...............
	0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........Y.......
	0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, // ................
	0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // b...............
	0x02, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, // ........POSITION
	0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x53, 0x56, 0x5f, 0x49, 0x6e, 0x73, // .TEXCOORD.SV_Ins
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x00, 0x4f, 0x53, 0x47, 0x4e, 0x98, 0x00, 0x00, 0x00, // tanceID.OSGN....
	0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........h.......
	0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, // ................
	0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // t...............
	0x01, 0x00, 0x00, 0x00, 0x03, 0x0c, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ........t.......
	0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0c, 0x03, 0x00, 0x00, // ................
	0x7d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // }...............
	0x02, 0x00, 0x00, 0x00, 0x01, 0x0e, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, // ........SV_POSIT
	0x49, 0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x53, 0x56, 0x5f, // ION.TEXCOORD.SV_
	0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x72, 0x72, 0x61, // RenderTargetArra
	0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x00, 0xab, 0x53, 0x48, 0x45, 0x58, 0xf0, 0x01, 0x00, 0x00, // yIndex..SHEX....
	0x50, 0x00, 0x01, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x6a, 0x08, 0x00, 0x01, 0x59, 0x08, 0x00, 0x04, // P...|...j...Y...
	0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, // F. ........._...
	0x72, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0x32, 0x10, 0x10, 0x00, // r......._...2...
	0x01, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x04, 0x12, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....`...........
	0x08, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x04, 0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....g.... ......
	0x01, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0x32, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....e...2 ......
	0x65, 0x00, 0x00, 0x03, 0xc2, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x04, // e.... ......g...
	0x12, 0x20, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x02, // . ..........h...
	0x02, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....)...........
	0x0a, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // .........@......
	0x38, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x56, 0x15, 0x10, 0x00, // 8...........V...
	0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ....F. .........
	0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0b, 0xf2, 0x00, 0x10, 0x00, // ........2.......
	0x01, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x04, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // ....F. .........
	0x00, 0x00, 0x00, 0x00, 0x06, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, // ............F...
	0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....2...........
	0x46, 0x8e, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, // F. .............
	0x00, 0x00, 0x00, 0x00, 0xa6, 0x1a, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, // ............F...
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ......... ......
	0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, // F.......F. .....
	0x03, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, // ................
	0x32, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // 2......... .....
	0x08, 0x00, 0x00, 0x00, 0xd6, 0x85, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, // ...... .........
	0x00, 0x00, 0x00, 0x0a, 0x32, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, // ....2.......F...
	0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, // .....@.....?...?
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0b, 0xc2, 0x20, 0x10, 0x00, // ........2.... ..
	0x01, 0x00, 0x00, 0x00, 0x06, 0x14, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x04, 0x10, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x06, 0x88, 0x20, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ...... .A.......
	0x08, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x32, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....6...2 ......
	0x46, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x12, 0x20, 0x10, 0x00, // F.......6.... ..
	0x02, 0x00, 0x00, 0x00, 0x0a, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x01, // ............>...
	0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // SFI0..... ......
	0x00, 0x02, 0x01, 0x00, 0x10, 0x00, 0x90, 0x00,                                                 // ........
};
static const uint8_t vs_dmd_world_noclip_st_spv[2046] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x8f, 0x07, 0x02, 0x00, 0x08, 0x67, // VSH............g
	0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x02, 0x01, 0x80, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // lassPad.........
	0x00, 0x10, 0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, // ..matWorldViewPr
	0x6f, 0x6a, 0x04, 0x02, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb4, 0x07, 0x00, 0x00, // oj..............
	0x03, 0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x0b, 0x00, 0x08, 0x00, 0xb4, 0x00, 0x00, 0x00, // ..#.............
	0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, // ................
	0x86, 0x14, 0x00, 0x00, 0x0a, 0x00, 0x0a, 0x00, 0x53, 0x50, 0x56, 0x5f, 0x45, 0x58, 0x54, 0x5f, // ........SPV_EXT_
	0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x70, 0x6f, 0x72, 0x74, 0x5f, // shader_viewport_
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x00, 0x0b, 0x00, 0x06, 0x00, // index_layer.....
	0x01, 0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30, // ....GLSL.std.450
	0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x0f, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, // ............main
	0x00, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, // ....X.......`...
	0x6b, 0x00, 0x00, 0x00, 0x6f, 0x00, 0x00, 0x00, 0x72, 0x00, 0x00, 0x00, 0x76, 0x00, 0x00, 0x00, // k...o...r...v...
	0x03, 0x00, 0x03, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, // ................
	0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, // ....main........
	0x2c, 0x00, 0x00, 0x00, 0x55, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, // ,...UniformBlock
	0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........,.......
	0x6d, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, // matWorldViewProj
	0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ........,.......
	0x67, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x64, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x03, 0x00, // glassPad........
	0x2e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0x58, 0x00, 0x00, 0x00, // ............X...
	0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, // a_position......
	0x5c, 0x00, 0x00, 0x00, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, // ....a_texcoord0.
	0x05, 0x00, 0x06, 0x00, 0x60, 0x00, 0x00, 0x00, 0x67, 0x6c, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, // ....`...gl_Insta
	0x6e, 0x63, 0x65, 0x49, 0x44, 0x00, 0x00, 0x00, 0x05, 0x00, 0x0a, 0x00, 0x6b, 0x00, 0x00, 0x00, // nceID.......k...
	0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, // @entryPointOutpu
	0x74, 0x2e, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x00, // t.gl_Position...
	0x05, 0x00, 0x0a, 0x00, 0x6f, 0x00, 0x00, 0x00, 0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, // ....o...@entryPo
	0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // intOutput.v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x00, 0x00, 0x05, 0x00, 0x0a, 0x00, 0x72, 0x00, 0x00, 0x00, // oord0.......r...
	0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, // @entryPointOutpu
	0x74, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x00, 0x00, 0x00, // t.v_texcoord1...
	0x05, 0x00, 0x09, 0x00, 0x76, 0x00, 0x00, 0x00, 0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, // ....v...@entryPo
	0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x67, 0x6c, 0x5f, 0x4c, 0x61, 0x79, // intOutput.gl_Lay
	0x65, 0x72, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, // er..G...+.......
	0x40, 0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // @...H...,.......
	0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....H...,.......
	0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x2c, 0x00, 0x00, 0x00, // #.......H...,...
	0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, // ............H...
	0x2c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, // ,.......#.......
	0x47, 0x00, 0x03, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // G...,.......G...
	0x2e, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // ....".......G...
	0x2e, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // ....!.......G...
	0x58, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // X...........G...
	0x5c, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // ............G...
	0x60, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // `.......+...G...
	0x6b, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // k...........G...
	0x6f, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // o...........G...
	0x72, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // r...........G...
	0x76, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, // v...............
	0x02, 0x00, 0x00, 0x00, 0x21, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ....!...........
	0x16, 0x00, 0x03, 0x00, 0x06, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, // ........ .......
	0x07, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, // ................
	0x09, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, // ................
	0x0b, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, // .... ...........
	0x0d, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, // ................
	0x17, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, // .... .......+...
	0x17, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, // ............+...
	0x06, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x18, 0x00, 0x04, 0x00, // ....!......?....
	0x29, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, // )...........+...
	0x0b, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x00, // ....*...........
	0x2b, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x04, 0x00, // +...)...*.......
	0x2c, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, // ,...+....... ...
	0x2d, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, // -.......,...;...
	0x2d, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, // -...........+...
	0x0b, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, // ..../....... ...
	0x30, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, // 0...........+...
	0x0b, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, // ....4.......+...
	0x0b, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, // ....;.......+...
	0x17, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, // ....K....... ...
	0x4e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, // N.......)... ...
	0x57, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, // W...........;...
	0x57, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, // W...X....... ...
	0x5b, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, // [...........;...
	0x5b, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, // [........... ...
	0x5f, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, // _...........;...
	0x5f, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, // _...`....... ...
	0x6a, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, // j...........;...
	0x6a, 0x00, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, // j...k....... ...
	0x6e, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, // n...........;...
	0x6e, 0x00, 0x00, 0x00, 0x6f, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, // n...o.......;...
	0x6e, 0x00, 0x00, 0x00, 0x72, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, // n...r....... ...
	0x75, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, // u...........;...
	0x75, 0x00, 0x00, 0x00, 0x76, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00, // u...v.......6...
	0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ................
	0xf8, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, // ........=.......
	0x59, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x09, 0x00, 0x00, 0x00, // Y...X...=.......
	0x5d, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, // ].......=.......
	0x61, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, // a...`...Q.......
	0x91, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // ....Y.......Q...
	0x06, 0x00, 0x00, 0x00, 0x92, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ........Y.......
	0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x93, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00, // Q...........Y...
	0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00, // ....P...........
	0x91, 0x00, 0x00, 0x00, 0x92, 0x00, 0x00, 0x00, 0x93, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, // ............!...
	0x41, 0x00, 0x06, 0x00, 0x30, 0x00, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, // A...0...........
	0x18, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, // ..../...=.......
	0x99, 0x00, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, // ................
	0x9a, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x99, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, // ....!.......A...
	0x30, 0x00, 0x00, 0x00, 0x9b, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, // 0...............
	0x34, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x9c, 0x00, 0x00, 0x00, // 4...=...........
	0x9b, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x9d, 0x00, 0x00, 0x00, // ................
	0x9a, 0x00, 0x00, 0x00, 0x9c, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x30, 0x00, 0x00, 0x00, // ........A...0...
	0x9e, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, // ............*...
	0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x9f, 0x00, 0x00, 0x00, 0x9e, 0x00, 0x00, 0x00, // =...............
	0x81, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, // ............!...
	0x9f, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x30, 0x00, 0x00, 0x00, 0xa1, 0x00, 0x00, 0x00, // ....A...0.......
	0x2e, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, // ........;...=...
	0x06, 0x00, 0x00, 0x00, 0xa2, 0x00, 0x00, 0x00, 0xa1, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, // ................
	0x06, 0x00, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 0xa2, 0x00, 0x00, 0x00, // ................
	0x50, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x9d, 0x00, 0x00, 0x00, // P...............
	0xa3, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, 0x00, 0xa5, 0x00, 0x00, 0x00, // ................
	0x5d, 0x00, 0x00, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x30, 0x00, 0x00, 0x00, // ].......A...0...
	0xa6, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, // ............/...
	0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x00, 0x00, // =...............
	0x41, 0x00, 0x06, 0x00, 0x30, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, // A...0...........
	0x18, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, // ....*...=.......
	0xa9, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, 0x00, // ........P.......
	0xaa, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, // ................
	0x09, 0x00, 0x00, 0x00, 0xab, 0x00, 0x00, 0x00, 0xa5, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, // ................
	0x41, 0x00, 0x06, 0x00, 0x4e, 0x00, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, // A...N...........
	0x4b, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x29, 0x00, 0x00, 0x00, // K...a...=...)...
	0xb2, 0x00, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, // ................
	0xb3, 0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, // ............>...
	0x6b, 0x00, 0x00, 0x00, 0xb3, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x6f, 0x00, 0x00, 0x00, // k.......>...o...
	0x5d, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x72, 0x00, 0x00, 0x00, 0xab, 0x00, 0x00, 0x00, // ]...>...r.......
	0x3e, 0x00, 0x03, 0x00, 0x76, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, // >...v...a.......
	0x38, 0x00, 0x01, 0x00, 0x00, 0x03, 0x01, 0x00, 0x10, 0x00, 0xff, 0xff, 0x90, 0x00,             // 8.............
};
static const bgfx::EmbeddedShader vs_dmd_world_noclip_st = BGFX_EMBEDDED_SHADER(vs_dmd_world_noclip_st);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of fragment shader from fs_dmd.sc to fs_dmd_noclip with options: DMD NOCLIP
static const uint8_t fs_dmd_noclip_mtl[2829] =
{
	0x46, 0x53, 0x48, 0x0b, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x0e, 0x74, // FSH............t
	0x65, 0x78, 0x5f, 0x64, 0x6d, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, // ex_dmdSampler...
	0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x6d, 0x64, 0x54, // ........tex_dmdT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // exture..........
	0x0f, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, // .vRes_Alpha_time
	0x12, 0x01, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x76, 0x43, 0x6f, 0x6c, 0x6f, // ...........vColo
	0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, 0x01, 0x00, 0x00, 0x01, // r_Intensity.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x6d, 0x64, 0x10, 0x00, 0x00, // ......tex_dmd...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x0a, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, // .......~...#incl
	0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, // ude <metal_stdli
	0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, // b>.#include <sim
	0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, // d/simd.h>..using
	0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, //  namespace metal
	0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, // ;..struct _Globa
	0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, // l.{.    float4 v
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x3b, // Color_Intensity;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, 0x52, 0x65, 0x73, // .    float4 vRes
	0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, // _Alpha_time;.};.
	0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, // .struct xlatMtlM
	0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // ain_out.{.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, // oat4 bgfx_FragDa
	0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, // ta0 [[color(0)]]
	0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, // ;.};..struct xla
	0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, // tMtlMain_in.{.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, //   float2 v_texco
	0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, // ord0 [[user(locn
	0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x5b, 0x5b, 0x20, 0x65, 0x61, 0x72, // 0)]];.};..[[ ear
	0x6c, 0x79, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x73, 0x74, // ly_fragment_test
	0x73, 0x20, 0x5d, 0x5d, 0x20, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, // s ]] fragment xl
	0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, // atMtlMain_out xl
	0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, // atMtlMain(xlatMt
	0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, // lMain_in in [[st
	0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, // age_in]], consta
	0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // nt _Global& _mtl
	0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, // _u [[buffer(0)]]
	0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, // , texture2d<floa
	0x74, 0x3e, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x6d, 0x64, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, // t> tex_dmd [[tex
	0x74, 0x75, 0x72, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, // ture(0)]], sampl
	0x65, 0x72, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x6d, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // er tex_dmdSample
	0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, // r [[sampler(0)]]
	0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, // ).{.    xlatMtlM
	0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, // ain_out out = {}
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, 0x36, // ;.    float2 _36
	0x33, 0x20, 0x3d, 0x20, 0x64, 0x66, 0x64, 0x78, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, // 3 = dfdx(in.v_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // xcoord0);.    fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, 0x36, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x33, 0x36, 0x33, // oat2 _364 = _363
	0x20, 0x2a, 0x20, 0x31, 0x2e, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //  * 1.5;.    floa
	0x74, 0x32, 0x20, 0x5f, 0x33, 0x36, 0x37, 0x20, 0x3d, 0x20, 0x64, 0x66, 0x64, 0x79, 0x28, 0x2d, // t2 _367 = dfdy(-
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, // in.v_texcoord0);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, 0x36, 0x38, // .    float2 _368
	0x20, 0x3d, 0x20, 0x5f, 0x33, 0x36, 0x37, 0x20, 0x2a, 0x20, 0x31, 0x2e, 0x35, 0x3b, 0x0a, 0x20, //  = _367 * 1.5;. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x37, 0x35, 0x20, 0x3d, 0x20, //    float _375 = 
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, // fast::clamp(1.0 
	0x2d, 0x20, 0x28, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x28, 0x5f, 0x33, 0x36, 0x34, 0x20, 0x2b, // - (length(_364 +
	0x20, 0x5f, 0x33, 0x36, 0x38, 0x29, 0x20, 0x2a, 0x20, 0x36, 0x2e, 0x36, 0x35, 0x39, 0x39, 0x39, //  _368) * 6.65999
	0x39, 0x38, 0x34, 0x37, 0x34, 0x31, 0x32, 0x31, 0x30, 0x39, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, // 9847412109375), 
	0x30, 0x2e, 0x34, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x35, 0x39, 0x36, 0x30, 0x34, 0x36, // 0.40000000596046
	0x34, 0x34, 0x37, 0x37, 0x35, 0x33, 0x39, 0x30, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x30, // 44775390625, 1.0
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x34, // );.    float3 _4
	0x39, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x28, 0x69, 0x6e, 0x2e, 0x76, // 92 = fract((in.v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, // _texcoord0 + flo
	0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x52, 0x65, 0x73, 0x5f, // at2(_mtl_u.vRes_
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x77, 0x29, 0x29, 0x2e, 0x78, // Alpha_time.w)).x
	0x79, 0x78, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x30, // yx * float3(0.10
	0x33, 0x31, 0x30, 0x30, 0x30, 0x30, 0x31, 0x38, 0x31, 0x31, 0x39, 0x38, 0x31, 0x32, 0x30, 0x31, // 3100001811981201
	0x31, 0x37, 0x31, 0x38, 0x37, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x30, 0x33, 0x30, 0x30, 0x30, // 171875, 0.103000
	0x30, 0x30, 0x30, 0x31, 0x31, 0x39, 0x32, 0x30, 0x39, 0x32, 0x38, 0x39, 0x35, 0x35, 0x30, 0x37, // 0001192092895507
	0x38, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x37, 0x33, 0x30, 0x30, 0x30, 0x30, // 8125, 0.09730000
	0x30, 0x34, 0x38, 0x38, 0x37, 0x35, 0x38, 0x30, 0x38, 0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, // 0488758087158203
	0x31, 0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 125));.    float
	0x33, 0x20, 0x5f, 0x35, 0x30, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x34, 0x39, 0x32, 0x20, 0x2b, 0x20, // 3 _501 = _492 + 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x34, 0x39, 0x32, 0x2c, // float3(dot(_492,
	0x20, 0x5f, 0x34, 0x39, 0x32, 0x2e, 0x79, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, //  _492.yzx + floa
	0x74, 0x33, 0x28, 0x33, 0x33, 0x2e, 0x33, 0x33, 0x30, 0x30, 0x30, 0x31, 0x38, 0x33, 0x31, 0x30, // t3(33.3300018310
	0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // 546875)));.    f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x35, 0x31, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, // loat2 _510 = fra
	0x63, 0x74, 0x28, 0x28, 0x5f, 0x35, 0x30, 0x31, 0x2e, 0x78, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x35, // ct((_501.xx + _5
	0x30, 0x31, 0x2e, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x35, 0x30, 0x31, 0x2e, 0x7a, 0x79, // 01.yz) * _501.zy
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x35, // );.    float3 _5
	0x38, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x35, 0x38, 0x39, 0x20, 0x3d, 0x20, 0x66, // 89;.    _589 = f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // loat3(0.0);.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x35, 0x39, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, // float3 _597;.   
	0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x35, 0x38, 0x38, 0x20, 0x3d, //  for (int _588 =
	0x20, 0x30, 0x3b, 0x20, 0x5f, 0x35, 0x38, 0x38, 0x20, 0x3c, 0x20, 0x31, 0x33, 0x3b, 0x20, 0x5f, //  0; _588 < 13; _
	0x35, 0x38, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x35, 0x39, 0x37, 0x2c, 0x20, 0x5f, 0x35, 0x38, 0x38, // 589 = _597, _588
	0x2b, 0x2b, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ++).    {.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x38, 0x39, 0x20, 0x3d, 0x20, 0x66, //   float _389 = f
	0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x35, 0x38, 0x38, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // loat(_588);.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x35, 0x31, 0x39, 0x20, 0x3d, //     float _519 =
	0x20, 0x32, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x28, 0x5f, 0x33, //  2.0 * fract((_3
	0x38, 0x39, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x37, 0x36, 0x39, 0x32, 0x33, 0x30, 0x37, 0x39, // 89 * 0.076923079
	0x37, 0x38, 0x38, 0x36, 0x38, 0x34, 0x38, 0x34, 0x34, 0x39, 0x37, 0x30, 0x37, 0x30, 0x33, 0x31, // 7886848449707031
	0x32, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x35, 0x31, 0x30, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, // 25) + _510.x);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x5f, 0x35, 0x32, 0x31, //        bool _521
	0x20, 0x3d, 0x20, 0x5f, 0x35, 0x31, 0x39, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, //  = _519 > 1.0;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x35, 0x39, //        float _59
	0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, // 0;.        if (_
	0x35, 0x32, 0x31, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, // 521).        {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x35, 0x39, 0x30, 0x20, //            _590 
	0x3d, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x35, 0x31, 0x39, 0x3b, 0x0a, 0x20, 0x20, // = 2.0 - _519;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, // else.        {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x35, 0x39, 0x30, 0x20, //            _590 
	0x3d, 0x20, 0x5f, 0x35, 0x31, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // = _519;.        
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // }.        float 
	0x5f, 0x35, 0x32, 0x38, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x5f, 0x35, 0x39, 0x30, // _528 = sqrt(_590
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // );.        float
	0x20, 0x5f, 0x35, 0x33, 0x39, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x66, 0x72, //  _539 = 2.0 * fr
	0x61, 0x63, 0x74, 0x28, 0x28, 0x5f, 0x33, 0x38, 0x39, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x36, 0x31, // act((_389 * 0.61
	0x35, 0x33, 0x38, 0x34, 0x36, 0x33, 0x38, 0x33, 0x30, 0x39, 0x34, 0x37, 0x38, 0x37, 0x35, 0x39, // 5384638309478759
	0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x35, 0x31, 0x30, 0x2e, 0x79, // 765625) + _510.y
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, // );.        bool 
	0x5f, 0x35, 0x34, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x35, 0x33, 0x39, 0x20, 0x3e, 0x20, 0x31, 0x2e, // _541 = _539 > 1.
	0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0;.        float
	0x20, 0x5f, 0x35, 0x39, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, //  _591;.        i
	0x66, 0x20, 0x28, 0x5f, 0x35, 0x34, 0x31, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // f (_541).       
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //  {.            _
	0x35, 0x39, 0x31, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x35, 0x33, 0x39, // 591 = 2.0 - _539
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, // ;.        }.    
	0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     else.       
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //  {.            _
	0x35, 0x39, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x35, 0x33, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 591 = _539;.    
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //     }.        fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x35, 0x34, 0x38, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // oat _548 = sqrt(
	0x5f, 0x35, 0x39, 0x31, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // _591);.        f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x34, 0x31, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x69, 0x6e, // loat2 _415 = (in
	0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2b, 0x20, 0x28, // .v_texcoord0 + (
	0x5f, 0x33, 0x36, 0x34, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x35, 0x32, 0x31, 0x20, 0x3f, 0x20, 0x28, // _364 * (_521 ? (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x35, 0x32, 0x38, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x5f, // 1.0 - _528) : (_
	0x35, 0x32, 0x38, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, // 528 - 1.0)))) + 
	0x28, 0x5f, 0x33, 0x36, 0x38, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x35, 0x34, 0x31, 0x20, 0x3f, 0x20, // (_368 * (_541 ? 
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x35, 0x34, 0x38, 0x29, 0x20, 0x3a, 0x20, 0x28, // (1.0 - _548) : (
	0x5f, 0x35, 0x34, 0x38, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, // _548 - 1.0)));. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x35, //        float4 _5
	0x36, 0x34, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x6d, 0x64, 0x2e, 0x73, 0x61, 0x6d, // 64 = tex_dmd.sam
	0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x6d, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, // ple(tex_dmdSampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x34, 0x31, 0x35, 0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x28, // er, _415, level(
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // 0.0));.        f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x34, 0x32, 0x39, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x66, // loat2 _429 = ((f
	0x72, 0x61, 0x63, 0x74, 0x28, 0x5f, 0x34, 0x31, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // ract(_415 * _mtl
	0x5f, 0x75, 0x2e, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, // _u.vRes_Alpha_ti
	0x6d, 0x65, 0x2e, 0x78, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, // me.xy) * 2.20000
	0x30, 0x30, 0x34, 0x37, 0x36, 0x38, 0x33, 0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, // 0047683715820312
	0x35, 0x29, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x31, 0x30, // 5) - float2(1.10
	0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, // 0000023841857910
	0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x33, 0x37, 0x35, 0x3b, 0x0a, // 15625)) * _375;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, //         float _4
	0x34, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x34, 0x32, 0x39, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x5f, // 40 = (_429.x * _
	0x34, 0x32, 0x39, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x34, 0x32, 0x39, 0x2e, 0x79, // 429.x) + (_429.y
	0x20, 0x2a, 0x20, 0x5f, 0x34, 0x32, 0x39, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  * _429.y);.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x34, 0x33, 0x20, 0x3d, //     float _443 =
	0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x30, 0x2c, //  smoothstep(0.0,
	0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x5f, 0x34, 0x34, //  1.0, 1.0 - (_44
	0x30, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x34, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 0 * _440));.    
	0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, //     if (_mtl_u.v
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, // Color_Intensity.
	0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // w != 0.0).      
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   {.            
	0x5f, 0x35, 0x39, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x35, 0x38, 0x39, 0x20, 0x2b, 0x20, 0x28, 0x5f, // _597 = _589 + (_
	0x35, 0x36, 0x34, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x34, 0x33, 0x29, 0x3b, // 564.xyz * _443);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .        }.     
	0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    else.        
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x35, // {.            _5
	0x39, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x35, 0x38, 0x39, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 97 = _589 + floa
	0x74, 0x33, 0x28, 0x5f, 0x35, 0x36, 0x34, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x34, 0x33, // t3(_564.x * _443
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, // );.        }.   
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, //  }.    out.bgfx_
	0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, // FragData0 = floa
	0x74, 0x34, 0x28, 0x5f, 0x35, 0x38, 0x39, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // t4(_589 * (_mtl_
	0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, // u.vColor_Intensi
	0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x37, 0x36, 0x39, // ty.xyz * (0.0769
	0x32, 0x33, 0x30, 0x37, 0x39, 0x37, 0x38, 0x38, 0x36, 0x38, 0x34, 0x38, 0x34, 0x34, 0x39, 0x37, // 2307978868484497
	0x30, 0x37, 0x30, 0x33, 0x31, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x33, 0x37, 0x35, 0x20, // 0703125 * (_375 
	0x2a, 0x20, 0x5f, 0x33, 0x37, 0x35, 0x29, 0x29, 0x29, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // * _375))), _mtl_
	0x75, 0x2e, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, // u.vRes_Alpha_tim
	0x65, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // e.z);.    return
	0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, 0x40, 0x00,                   //  out;.}....@.
};
static const uint8_t fs_dmd_noclip_essl[7539] =
{
	0x46, 0x53, 0x48, 0x0b, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x1d, // FSH...........`.
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x47, 0x4c, 0x5f, // s.#extension GL_
	0x4f, 0x45, 0x53, 0x5f, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x65, 0x72, // OES_standard_der
	0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, // ivatives : enabl
	0x65, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // e.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, // arying in.precis
	0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3b, // ion highp float;
	0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // .precision highp
	0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, //  int;.#define sh
	0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adow2D(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //  _coord) texture
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // (_sampler, _coor
	0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, // d).#define shado
	0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // w2DProj(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // eProj(_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x6f, 0x75, 0x74, 0x20, 0x6d, 0x65, 0x64, 0x69, // _coord).out medi
	0x75, 0x6d, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, // ump vec4 bgfx_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // agColor;.varying
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, //  vec2 v_texcoord
	0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, // 0;.varying vec2 
	0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x3b, 0x0a, 0x76, 0x65, 0x63, // v_texcoord1;.vec
	0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // 3 instMul(vec3 _
	0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, // vec, mat3 _mtx) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, // { return ( (_vec
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // ) * (_mtx) ); }.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, // vec3 instMul(mat
	0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, // 3 _mtx, vec3 _ve
	0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, // c) { return ( (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, // mtx) * (_vec) );
	0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, //  }.vec4 instMul(
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // vec4 _vec, mat4 
	0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, // _mtx) { return (
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, //  (_vec) * (_mtx)
	0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, //  ); }.vec4 instM
	0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, // ul(mat4 _mtx, ve
	0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // c4 _vec) { retur
	0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, // n ( (_mtx) * (_v
	0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, // ec) ); }.float r
	0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, // cp(float _a) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, // eturn 1.0/_a; }.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, // vec2 rcp(vec2 _a
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // ) { return vec2(
	0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // 1.0)/_a; }.vec3 
	0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, // rcp(vec3 _a) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, // eturn vec3(1.0)/
	0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, // _a; }.vec4 rcp(v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec4 _a) { return
	0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, //  vec4(1.0)/_a; }
	0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // .vec2 vec2_splat
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // (float _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, // urn vec2(_x, _x)
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, // ; }.vec3 vec3_sp
	0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // lat(float _x) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, // return vec3(_x, 
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // _x, _x); }.vec4 
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // vec4_splat(float
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, //  _x) { return ve
	0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // c4(_x, _x, _x, _
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, // x); }.uvec2 uvec
	0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, // 2_splat(uint _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, //  { return uvec2(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, // _x, _x); }.uvec3
	0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, //  uvec3_splat(uin
	0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, // t _x) { return u
	0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, // vec3(_x, _x, _x)
	0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, // ; }.uvec4 uvec4_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // splat(uint _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, //  return uvec4(_x
	0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // , _x, _x, _x); }
	0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, // .mat4 mtxFromRow
	0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // s(vec4 _0, vec4 
	0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, // _1, vec4 _2, vec
	0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, // 4 _3).{.return t
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, // ranspose(mat4(_0
	0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, // , _1, _2, _3) );
	0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, // .}.mat4 mtxFromC
	0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, // ols(vec4 _0, vec
	0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, // 4 _1, vec4 _2, v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec4 _3).{.return
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, //  mat4(_0, _1, _2
	0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, // , _3);.}.mat3 mt
	0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // xFromRows(vec3 _
	0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // 0, vec3 _1, vec3
	0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, //  _2).{.return tr
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, // anspose(mat3(_0,
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, //  _1, _2) );.}.ma
	0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, // t3 mtxFromCols(v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, // ec3 _0, vec3 _1,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  vec3 _2).{.retu
	0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, // rn mat3(_0, _1, 
	0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // _2);.}.uniform v
	0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, // ec4 u_viewRect;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, // uniform vec4 u_v
	0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // iewTexel;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, // m mat4 u_view;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, // niform mat4 u_in
	0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // vView;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // at4 u_proj;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, // orm mat4 u_invPr
	0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // oj;.uniform mat4
	0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, //  u_viewProj;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, // form mat4 u_invV
	0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // iewProj;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, //  mat4 u_model[32
	0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // ];.uniform mat4 
	0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // u_modelView;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, // form mat4 u_mode
	0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // lViewProj;.unifo
	0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, // rm vec4 u_alphaR
	0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, // ef4;.float sqr( 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // float v).{.retur
	0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, // n v*v;.}.vec2 sq
	0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // r( vec2 v).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // urn v*v;.}.vec3 
	0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // sqr( vec3 v).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // eturn v*v;.}.vec
	0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // 3 mul_w1( vec3 v
	0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // , mat4 m).{.retu
	0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // rn v.x*m[0].xyz 
	0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // + (v.y*m[1].xyz 
	0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // + (v.z*m[2].xyz 
	0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // + m[3].xyz));.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, // float acos_appro
	0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, // x_divPI( float v
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, // ).{.float x = ab
	0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, // s(v);.if(1. - x 
	0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, // <= 0.00006103515
	0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, // 625).return (v >
	0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, // = 0.) ? 0. : 1.;
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, // .float res = ((-
	0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // 0.155972/3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, // 6433832795) * x 
	0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, // + (1.56467/3.141
	0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, // 5926535897932384
	0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, // 626433832795) ) 
	0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, // * sqrt(1. - x);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, // return (v >= 0.)
	0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, //  ? res : 1. - re
	0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, // s;.}.float atan2
	0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x20, // _approx_div2PI( 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, // float y, float x
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, // ).{.float abs_y 
	0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // = abs(y);.float 
	0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, // abs_x = abs(x);.
	0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, // if(abs_x <= 0.00
	0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, // 006103515625 && 
	0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, // abs_y <= 0.00006
	0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // 103515625).retur
	0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, // n 0.;.float r = 
	0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, // (abs_x - abs_y) 
	0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, // / (abs_x + abs_y
	0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, // );.float angle =
	0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, //  ((x < 0.) ? (3.
	0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, // /8.) : (1./8.)).
	0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, // + (0.211868 /(2.
	0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, // *3.1415926535897
	0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, // 9323846264338327
	0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, // 95) * r * r - 0.
	0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, // 987305 /(2.*3.14
	0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, // 1592653589793238
	0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x29, 0x20, // 4626433832795)) 
	0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, // * ((x < 0.) ? -r
	0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, //  : r);.return (y
	0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, //  < 0.) ? -angle 
	0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // : angle;.}.float
	0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, //  asin_approx_div
	0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, // PI( float v).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, // loat x = abs(v);
	0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, // .if(1. - x <= 0.
	0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, // 00006103515625).
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, // return (v >= 0.)
	0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x66, //  ? 0.5 : -0.5;.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, // loat res = ((-0.
	0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, // 155972/3.1415926
	0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, // 5358979323846264
	0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, // 33832795) * x + 
	0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // (1.56467/3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, // 6433832795) ) * 
	0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, // sqrt(1. - x);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // turn (v >= 0.) ?
	0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, //  0.5 - res : -0.
	0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // 5 + res;.}.vec2 
	0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, // ray_to_equirecta
	0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // ngular_uv( vec3 
	0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, // ray).{.return ve
	0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, // c2(.0.5 + atan2_
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, // approx_div2PI(ra
	0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, // y.y, ray.x),.aco
	0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, // s_approx_divPI(r
	0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ay.z));.}.float 
	0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, // InvsRGB( float c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // olor).{.if (colo
	0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, // r <= 0.04045).re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // turn color * (1.
	0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, // 0/12.92);.else.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // eturn pow(color 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, // * (1.0/1.055) + 
	0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, // (0.055/1.055), 2
	0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, // .4);.}.float Inv
	0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, // Rec709( float co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // lor).{.if (color
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  <= 0.081).retur
	0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, // n color * (1.0/4
	0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // .5);.else.return
	0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, //  pow(color * (1.
	0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, // 0/1.099) + (0.09
	0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, // 9/1.099), 1.0/0.
	0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, // 45);.}.float Inv
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, // Gamma( float col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, // or).{.return Inv
	0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // sRGB(color);.}.v
	0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, // ec3 InvGamma( ve
	0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // c3 color).{.retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, // rn vec3(InvGamma
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // (color.x),InvGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, // ma(color.y),InvG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, // amma(color.z));.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, // }.vec3 InvToneMa
	0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, // p( vec3 color).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, // .float inv_2bh =
	0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  0.5/0.25;.float
	0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, //  bh = 4.0*0.25 -
	0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, //  2.0;.return (co
	0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, // lor - 1.0 + sqrt
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, // (color*(color + 
	0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, // bh) + 1.0))*inv_
	0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, // 2bh;.}.float sRG
	0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, // B( float f).{.fl
	0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, // oat s;.if (f <= 
	0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, // 0.0031308).s = 1
	0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, // 2.92 * f;.else.s
	0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, //  = 1.055 * pow(f
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, // , 1.0/2.4) - 0.0
	0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, // 55;.return s;.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, // float Rec709( fl
	0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // oat f).{.float s
	0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, // ;.if (f <= 0.018
	0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, // ).s = 4.5 * f;.e
	0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, // lse.s = 1.099 * 
	0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, // pow(f, 0.45) - 0
	0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, // .099;.return s;.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, // }.float FBGamma(
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, //  float color).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // return sRGB(colo
	0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, // r);.}.vec2 FBGam
	0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // ma( vec2 color).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x46, 0x42, // {.return vec2(FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, // Gamma(color.x),F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, // BGamma(color.y))
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, // ;.}.vec3 FBGamma
	0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // ( vec3 color).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, // return vec3(FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, // mma(color.x),FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, // amma(color.y),FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, // Gamma(color.z));
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x32, // .}.vec3 FBGamma2
	0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, // 2( vec3 color).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x70, 0x6f, 0x77, // .return vec3(pow
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, // (color.x, 1.0/2.
	0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x2c, 0x20, // 2),pow(color.y, 
	0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, // 1.0/2.2),pow(col
	0x6f, 0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x29, 0x3b, // or.z, 1.0/2.2));
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, // .}.float FBToneM
	0x61, 0x70, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // ap( float l).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, // eturn l * ((l*0.
	0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, // 25 + 1.0) / (l +
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, //  1.0));.}.vec2 F
	0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, // BToneMap( vec2 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, // olor).{.float l 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, // = dot(color,vec2
	0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, // (0.176204+0.0108
	0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, // 109*0.5,0.812985
	0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, // +0.0108109*0.5))
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // ;.return color *
	0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, //  ((l*0.25 + 1.0)
	0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, //  / (l + 1.0));.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, // .vec3 FBToneMap(
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, //  vec3 color).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, // loat l = dot(col
	0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, // or,vec3(0.176204
	0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, // ,0.812985,0.0108
	0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, // 109));.return co
	0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, // lor * ((l*0.25 +
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, //  1.0) / (l + 1.0
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, 0x64, 0x69, 0x74, // ));.}.vec4 Addit
	0x69, 0x76, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // ive( vec4 cBase,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, //  vec4 cBlend, fl
	0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // oat percent).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, // eturn cBase + cB
	0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, // lend*percent;.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, // vec3 Screen ( ve
	0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // c3 cBase, vec3 c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // Blend).{.return 
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, // 1.0 - (1.0 - cBa
	0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, // se) * (1.0 - cBl
	0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, // end);.}.vec4 Scr
	0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // een ( vec4 cBase
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, // , vec4 cBlend).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, // .return 1.0 - (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, // .0 - cBase) * (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // .0 - cBlend);.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, // vec3 ScreenHDR (
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, //  vec3 cBase, vec
	0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 3 cBlend).{.retu
	0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, // rn max(1.0 - (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // 0 - cBase) * (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, // 0 - cBlend), vec
	0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // 3(0.,0.,0.));.}.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, // vec4 ScreenHDR (
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, //  vec4 cBase, vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 4 cBlend).{.retu
	0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, // rn max(1.0 - (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // 0 - cBase) * (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, // 0 - cBlend), vec
	0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, // 4(0.,0.,0.,0.));
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, // .}.vec4 Multiply
	0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, //  ( vec4 cBase, v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ec4 cBlend, floa
	0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // t percent).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, // urn cBase * cBle
	0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // nd*percent;.}.ve
	0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, // c4 Overlay ( vec
	0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // 4 cBase, vec4 cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, // lend).{.vec4 cNe
	0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, // w = step(0.5, cB
	0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, // ase);.cNew = mix
	0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, // (cBase*cBlend*2.
	0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, // 0, 1.0-2.0*(1.0-
	0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, // cBase)*(1.0-cBle
	0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // nd), cNew);.retu
	0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // rn cNew;.}.vec4 
	0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, // OverlayHDR ( vec
	0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // 4 cBase, vec4 cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, // lend).{.vec4 cNe
	0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, // w = step(0.5, cB
	0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, // ase);.cNew = max
	0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, // (mix(cBase*cBlen
	0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, // d*2.0, 1.0-2.0*(
	0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, // 1.0-cBase)*(1.0-
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, // cBlend), cNew), 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, // vec4(0.,0.,0.,0.
	0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, // ));.return cNew;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, // .}.vec3 cos_hemi
	0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x20, 0x76, // sphere_sample( v
	0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, // ec2 t).{.float p
	0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, // hi = t.y * (2.0*
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, // 5);.float cosThe
	0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // ta = sqrt(1.0 - 
	0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, // t.x);.float sinT
	0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, // heta = sqrt(t.x)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x7b, // ;.float sp,cp;.{
	0x73, 0x70, 0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x63, 0x70, 0x3d, 0x63, // sp=sin(phi);cp=c
	0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // os(phi);};.retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, // n vec3(cp * sinT
	0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, // heta, cosTheta, 
	0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, // sp * sinTheta);.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, // }.vec3 rotate_to
	0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x28, 0x20, 0x76, // _vector_upper( v
	0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, // ec3 vec, vec3 no
	0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // rmal).{.if(norma
	0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, // l.y > -0.99999).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, // {.float h = 1.0/
	0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, // (1.0+normal.y);.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, // float hz = h*nor
	0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, // mal.z;.float hzx
	0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, //  = hz*normal.x;.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, // return vec3(.vec
	0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, // .x * (normal.y+h
	0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, // z*normal.z) + ve
	0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, // c.y * normal.x -
	0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, //  vec.z * hzx,.ve
	0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, // c.y * normal.y -
	0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, //  vec.x * normal.
	0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // x - vec.z * norm
	0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, // al.z,.vec.y * no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, // rmal.z - vec.x *
	0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, //  hzx + vec.z * (
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // normal.y+h*norma
	0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, // l.x*normal.x));.
	0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, // }.else return -v
	0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // ec;.}.uniform ve
	0x63, 0x34, 0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, // c4 vColor_Intens
	0x69, 0x74, 0x79, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, // ity;.uniform vec
	0x34, 0x20, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, // 4 vRes_Alpha_tim
	0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // e;.uniform vec4 
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x54, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x3b, 0x0a, // alphaTestValue;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, // uniform sampler2
	0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x6d, 0x64, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // D tex_dmd;.vec2 
	0x68, 0x61, 0x73, 0x68, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x29, // hash22( vec2 uv)
	0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, // .{.vec3 p3 = fra
	0x63, 0x74, 0x28, 0x75, 0x76, 0x2e, 0x78, 0x79, 0x78, 0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, 0x33, // ct(uv.xyx * vec3
	0x28, 0x2e, 0x31, 0x30, 0x33, 0x31, 0x2c, 0x20, 0x2e, 0x31, 0x30, 0x33, 0x30, 0x2c, 0x20, 0x2e, // (.1031, .1030, .
	0x30, 0x39, 0x37, 0x33, 0x29, 0x29, 0x3b, 0x0a, 0x70, 0x33, 0x20, 0x2b, 0x3d, 0x20, 0x64, 0x6f, // 0973));.p3 += do
	0x74, 0x28, 0x70, 0x33, 0x2c, 0x20, 0x70, 0x33, 0x2e, 0x79, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x33, // t(p3, p3.yzx + 3
	0x33, 0x2e, 0x33, 0x33, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x72, // 3.33);.return fr
	0x61, 0x63, 0x74, 0x28, 0x28, 0x70, 0x33, 0x2e, 0x78, 0x78, 0x20, 0x2b, 0x20, 0x70, 0x33, 0x2e, // act((p3.xx + p3.
	0x79, 0x7a, 0x29, 0x2a, 0x70, 0x33, 0x2e, 0x7a, 0x79, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // yz)*p3.zy);.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x74, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x50, 0x44, // oat triangularPD
	0x46, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, // F( float r).{.fl
	0x6f, 0x61, 0x74, 0x20, 0x70, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x2a, 0x72, 0x3b, 0x0a, 0x62, 0x6f, // oat p = 2.*r;.bo
	0x6f, 0x6c, 0x20, 0x62, 0x20, 0x3d, 0x20, 0x28, 0x70, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x29, 0x3b, // ol b = (p > 1.);
	0x0a, 0x69, 0x66, 0x20, 0x28, 0x62, 0x29, 0x0a, 0x70, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x2d, 0x70, // .if (b).p = 2.-p
	0x3b, 0x0a, 0x70, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x2d, 0x73, 0x71, 0x72, 0x74, 0x28, 0x70, 0x29, // ;.p = 1.-sqrt(p)
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x62, 0x20, 0x3f, 0x20, 0x70, 0x20, 0x3a, // ;.return b ? p :
	0x20, 0x2d, 0x70, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, //  -p;.}.void main
	0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x6c, 0x75, 0x72, 0x20, // ().{.float blur 
	0x3d, 0x20, 0x31, 0x2e, 0x35, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x64, 0x64, 0x78, 0x73, // = 1.5;.vec2 ddxs
	0x20, 0x3d, 0x20, 0x64, 0x46, 0x64, 0x78, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, //  = dFdx(v_texcoo
	0x72, 0x64, 0x30, 0x29, 0x2a, 0x62, 0x6c, 0x75, 0x72, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // rd0)*blur;.vec2 
	0x64, 0x64, 0x79, 0x73, 0x20, 0x3d, 0x20, 0x64, 0x46, 0x64, 0x79, 0x28, 0x76, 0x5f, 0x74, 0x65, // ddys = dFdy(v_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x2a, 0x62, 0x6c, 0x75, 0x72, 0x3b, 0x0a, 0x66, // xcoord0)*blur;.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, 0x73, 0x74, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, // loat dist_factor
	0x20, 0x3d, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x28, 0x31, 0x2e, 0x2d, 0x6c, 0x65, 0x6e, //  = clamp((1.-len
	0x67, 0x74, 0x68, 0x28, 0x64, 0x64, 0x78, 0x73, 0x2b, 0x64, 0x64, 0x79, 0x73, 0x29, 0x2a, 0x36, // gth(ddxs+ddys)*6
	0x2e, 0x36, 0x36, 0x29, 0x20, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x2c, 0x31, 0x2e, 0x30, 0x29, 0x3b, // .66) , 0.4,1.0);
	0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x6f, 0x66, 0x66, 0x73, 0x20, 0x3d, 0x20, 0x68, 0x61, 0x73, // .vec2 offs = has
	0x68, 0x32, 0x32, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, // h22(v_texcoord0 
	0x2b, 0x20, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, // + vRes_Alpha_tim
	0x65, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // e.w);.vec3 color
	0x32, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, // 2 = vec3_splat(0
	0x2e, 0x29, 0x3b, 0x0a, 0x69, 0x6e, 0x74, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x20, // .);.int samples 
	0x3d, 0x20, 0x31, 0x33, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x61, 0x6d, 0x70, // = 13;.float samp
	0x6c, 0x65, 0x73, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, // les_float = floa
	0x74, 0x28, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x29, 0x3b, 0x0a, 0x66, 0x6f, 0x72, 0x20, // t(samples);.for 
	0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, // (int i = 0; i < 
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x3b, 0x20, 0x2b, 0x2b, 0x69, 0x29, 0x0a, 0x7b, 0x0a, // samples; ++i).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x3d, 0x20, // float i_float = 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x69, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x78, // float(i);.vec2 x
	0x69, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x69, // i = vec2(fract(i
	0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, // _float * (1.0 / 
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x29, 0x20, 0x2b, // samples_float) +
	0x20, 0x6f, 0x66, 0x66, 0x73, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, //  offs.x), fract(
	0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x2a, 0x20, 0x28, 0x38, 0x2e, 0x30, 0x20, 0x2f, // i_float * (8.0 /
	0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x29, 0x20, //  samples_float) 
	0x2b, 0x20, 0x6f, 0x66, 0x66, 0x73, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, // + offs.y));.vec2
	0x20, 0x75, 0x76, 0x20, 0x3d, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, //  uv = v_texcoord
	0x30, 0x20, 0x2b, 0x20, 0x74, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x50, 0x44, // 0 + triangularPD
	0x46, 0x28, 0x78, 0x69, 0x2e, 0x78, 0x29, 0x2a, 0x64, 0x64, 0x78, 0x73, 0x20, 0x2b, 0x20, 0x74, // F(xi.x)*ddxs + t
	0x72, 0x69, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x50, 0x44, 0x46, 0x28, 0x78, 0x69, 0x2e, // riangularPDF(xi.
	0x79, 0x29, 0x2a, 0x64, 0x64, 0x79, 0x73, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x67, // y)*ddys;.vec4 rg
	0x62, 0x61, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, // ba = textureLod(
	0x74, 0x65, 0x78, 0x5f, 0x64, 0x6d, 0x64, 0x2c, 0x20, 0x75, 0x76, 0x2c, 0x20, 0x30, 0x2e, 0x30, // tex_dmd, uv, 0.0
	0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x64, 0x69, 0x73, 0x74, 0x20, 0x3d, 0x20, 0x28, // );.vec2 dist = (
	0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x75, 0x76, 0x2a, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, // fract(uv*vRes_Al
	0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x78, 0x79, 0x29, 0x2a, 0x32, 0x2e, 0x32, // pha_time.xy)*2.2
	0x20, 0x2d, 0x20, 0x31, 0x2e, 0x31, 0x29, 0x20, 0x2a, 0x20, 0x64, 0x69, 0x73, 0x74, 0x5f, 0x66, //  - 1.1) * dist_f
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x20, 0x3d, // actor;.float d =
	0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x2c, 0x20, //  smoothstep(0., 
	0x31, 0x2e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x73, 0x71, 0x72, 0x28, 0x64, 0x69, // 1., 1.0 - sqr(di
	0x73, 0x74, 0x2e, 0x78, 0x2a, 0x64, 0x69, 0x73, 0x74, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x64, 0x69, // st.x*dist.x + di
	0x73, 0x74, 0x2e, 0x79, 0x2a, 0x64, 0x69, 0x73, 0x74, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x69, // st.y*dist.y));.i
	0x66, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, // f (vColor_Intens
	0x69, 0x74, 0x79, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x63, 0x6f, // ity.w != 0.0).co
	0x6c, 0x6f, 0x72, 0x32, 0x20, 0x2b, 0x3d, 0x20, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x72, 0x67, 0x62, // lor2 += rgba.rgb
	0x20, 0x2a, 0x20, 0x64, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, //  * d;.else.color
	0x32, 0x20, 0x2b, 0x3d, 0x20, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x72, 0x20, 0x2a, 0x20, 0x64, 0x3b, // 2 += rgba.r * d;
	0x0a, 0x7d, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x32, 0x20, 0x2a, 0x3d, 0x20, 0x76, 0x43, 0x6f, // .}.color2 *= vCo
	0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, // lor_Intensity.xy
	0x7a, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x31, 0x2e, 0x2f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, // z * ((1./samples
	0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x28, 0x64, 0x69, // _float) * sqr(di
	0x73, 0x74, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x29, 0x29, 0x3b, 0x0a, 0x62, 0x67, 0x66, // st_factor));.bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, // x_FragColor = ve
	0x63, 0x34, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x32, 0x20, 0x2c, 0x20, 0x76, 0x52, 0x65, 0x73, // c4(color2 , vRes
	0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, // _Alpha_time.z);.
	0x7d, 0x0a, 0x00,                                                                               // }..
};
static const uint8_t fs_dmd_noclip_glsl[7861] =
{
	0x46, 0x53, 0x48, 0x0b, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa2, 0x1e, // FSH.............
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x6f, // ..#version 440.o
	0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, // ut vec4 bgfx_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // gColor;.#define 
	0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x62, 0x67, 0x66, // gl_FragColor bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x0a, 0x23, 0x64, 0x65, 0x66, // x_FragColor.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x20, 0x20, // ine texture2D   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, //        texture.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // Lod       textur
	0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, // eLod.#define tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ture2DGrad      
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, // textureGrad.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, // ine texture2DPro
	0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, // jLod   texturePr
	0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // ojLod.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, // xture2DProjGrad 
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, //  textureProjGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // CubeLod     text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, // ureLod.#define t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, // extureCubeGrad  
	0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, //   textureGrad.#d
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, // efine texture3D 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //          texture
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, 0x65, 0x78, 0x74, // 2DLodOffset text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, // ureLodOffset.#de
	0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, // fine attribute i
	0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // n.#define varyin
	0x67, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, // g in.#define bgf
	0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // xShadow2D(_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, // er, _coord)     
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // vec4_splat(textu
	0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // re(_sampler, _co
	0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, // ord) ).#define b
	0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, // gfxShadow2DProj(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, // ) vec4_splat(tex
	0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // tureProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x76, 0x61, 0x72, // r, _coord) ).var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // ying vec2 v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, // oord0;.varying v
	0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x3b, // ec2 v_texcoord1;
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, // .vec3 instMul(ve
	0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, // c3 _vec, mat3 _m
	0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, // tx) { return ( (
	0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, // _vec) * (_mtx) )
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, // ; }.vec3 instMul
	0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // (mat3 _mtx, vec3
	0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _vec) { return 
	0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, // ( (_mtx) * (_vec
	0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, // ) ); }.vec4 inst
	0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, // Mul(vec4 _vec, m
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // at4 _mtx) { retu
	0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, // rn ( (_vec) * (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, // mtx) ); }.vec4 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, // nstMul(mat4 _mtx
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, // , vec4 _vec) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, // eturn ( (_mtx) *
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, //  (_vec) ); }.flo
	0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, // at rcp(float _a)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, //  { return 1.0/_a
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, // ; }.vec2 rcp(vec
	0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // 2 _a) { return v
	0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // ec2(1.0)/_a; }.v
	0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, // ec3 rcp(vec3 _a)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, //  { return vec3(1
	0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, // .0)/_a; }.vec4 r
	0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // cp(vec4 _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, // turn vec4(1.0)/_
	0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, // a; }.vec2 vec2_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // plat(float _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, //  return vec2(_x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, //  _x); }.vec3 vec
	0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, // 3_splat(float _x
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // ) { return vec3(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // _x, _x, _x); }.v
	0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, // ec4 vec4_splat(f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // loat _x) { retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // n vec4(_x, _x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, // x, _x); }.uvec2 
	0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec2_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, //  _x) { return uv
	0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, // ec2(_x, _x); }.u
	0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // vec3 uvec3_splat
	0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // (uint _x) { retu
	0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // rn uvec3(_x, _x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, //  _x); }.uvec4 uv
	0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, // ec4_splat(uint _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, // x) { return uvec
	0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // 4(_x, _x, _x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, // ); }.mat4 mtxFro
	0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, // mRows(vec4 _0, v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, // ec4 _1, vec4 _2,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  vec4 _3).{.retu
	0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, // rn transpose(mat
	0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, // 4(_0, _1, _2, _3
	0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, // ) );.}.mat4 mtxF
	0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, // romCols(vec4 _0,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, //  vec4 _1, vec4 _
	0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 2, vec4 _3).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, // turn mat4(_0, _1
	0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, // , _2, _3);.}.mat
	0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, // 3 mtxFromRows(ve
	0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, // c3 _0, vec3 _1, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // vec3 _2).{.retur
	0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, // n transpose(mat3
	0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, // (_0, _1, _2) );.
	0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, // }.mat3 mtxFromCo
	0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // ls(vec3 _0, vec3
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, //  _1, vec3 _2).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, // return mat3(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // _1, _2);.}.unifo
	0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, // rm vec4 u_viewRe
	0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // ct;.uniform vec4
	0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, //  u_viewTexel;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // iform mat4 u_vie
	0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // w;.uniform mat4 
	0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // u_invView;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, // rm mat4 u_proj;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, // uniform mat4 u_i
	0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // nvProj;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, // mat4 u_viewProj;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // invViewProj;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, // form mat4 u_mode
	0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // l[32];.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, // at4 u_modelView;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, // modelViewProj;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, // niform vec4 u_al
	0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // phaRef4;.float s
	0x71, 0x72, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // qr( float v).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // eturn v*v;.}.vec
	0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, // 2 sqr( vec2 v).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // .return v*v;.}.v
	0x65, 0x63, 0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, // ec3 sqr( vec3 v)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, // .{.return v*v;.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x20, 0x76, 0x65, // .vec3 mul_w1( ve
	0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, // c3 v, mat4 m).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, // return v.x*m[0].
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, // xyz + (v.y*m[1].
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, // xyz + (v.z*m[2].
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, // xyz + m[3].xyz))
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, // ;.}.float acos_a
	0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, // pprox_divPI( flo
	0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, // at v).{.float x 
	0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, // = abs(v);.if(1. 
	0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, // - x <= 0.0000610
	0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 3515625).return 
	0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, // (v >= 0.) ? 0. :
	0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, //  1.;.float res =
	0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, //  ((-0.155972/3.1
	0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, // 4159265358979323
	0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, // 84626433832795) 
	0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, // * x + (1.56467/3
	0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, // .141592653589793
	0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, // 2384626433832795
	0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, // ) ) * sqrt(1. - 
	0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, // x);.return (v >=
	0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, //  0.) ? res : 1. 
	0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, // - res;.}.float a
	0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, // tan2_approx_div2
	0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // PI( float y, flo
	0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, // at x).{.float ab
	0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, // s_y = abs(y);.fl
	0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, // oat abs_x = abs(
	0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, // x);.if(abs_x <= 
	0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, // 0.00006103515625
	0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, //  && abs_y <= 0.0
	0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, // 0006103515625).r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // eturn 0.;.float 
	0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, // r = (abs_x - abs
	0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, // _y) / (abs_x + a
	0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, // bs_y);.float ang
	0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // le = ((x < 0.) ?
	0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, //  (3./8.) : (1./8
	0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, // .)).+ (0.211868 
	0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, // /(2.*3.141592653
	0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, // 5897932384626433
	0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, // 832795) * r * r 
	0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, // - 0.987305 /(2.*
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, // 5)) * ((x < 0.) 
	0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // ? -r : r);.retur
	0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, // n (y < 0.) ? -an
	0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // gle : angle;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, // loat asin_approx
	0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, // _divPI( float v)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, // .{.float x = abs
	0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, // (v);.if(1. - x <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, // = 0.000061035156
	0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, // 25).return (v >=
	0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, //  0.) ? 0.5 : -0.
	0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, // 5;.float res = (
	0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, // (-0.155972/3.141
	0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, // 5926535897932384
	0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, // 626433832795) * 
	0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, // x + (1.56467/3.1
	0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, // 4159265358979323
	0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, // 84626433832795) 
	0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, // ) * sqrt(1. - x)
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, // ;.return (v >= 0
	0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, // .) ? 0.5 - res :
	0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, //  -0.5 + res;.}.v
	0x65, 0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, // ec2 ray_to_equir
	0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x20, 0x76, // ectangular_uv( v
	0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // ec3 ray).{.retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, // n vec2(.0.5 + at
	0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, // an2_approx_div2P
	0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, // I(ray.y, ray.x),
	0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, // .acos_approx_div
	0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // PI(ray.z));.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, // oat InvsRGB( flo
	0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, // at color).{.if (
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, // color <= 0.04045
	0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // ).return color *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, //  (1.0/12.92);.el
	0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, // se.return pow(co
	0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, // lor * (1.0/1.055
	0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, // ) + (0.055/1.055
	0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ), 2.4);.}.float
	0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, //  InvRec709( floa
	0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, // t color).{.if (c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, // olor <= 0.081).r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, // eturn color * (1
	0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, // .0/4.5);.else.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // turn pow(color *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, //  (1.0/1.099) + (
	0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, // 0.099/1.099), 1.
	0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0/0.45);.}.float
	0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  InvGamma( float
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  color).{.return
	0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, //  InvsRGB(color);
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, // .}.vec3 InvGamma
	0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // ( vec3 color).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, // return vec3(InvG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, // amma(color.x),In
	0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, // vGamma(color.y),
	0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, // InvGamma(color.z
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, // ));.}.vec3 InvTo
	0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // neMap( vec3 colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, // r).{.float inv_2
	0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x66, // bh = 0.5/0.25;.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, // loat bh = 4.0*0.
	0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 25 - 2.0;.return
	0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, //  (color - 1.0 + 
	0x73, 0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // sqrt(color*(colo
	0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, // r + bh) + 1.0))*
	0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // inv_2bh;.}.float
	0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, //  sRGB( float f).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, // {.float s;.if (f
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, //  <= 0.0031308).s
	0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, //  = 12.92 * f;.el
	0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, // se.s = 1.055 * p
	0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, // ow(f, 1.0/2.4) -
	0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, //  0.055;.return s
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, // ;.}.float Rec709
	0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // ( float f).{.flo
	0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, // at s;.if (f <= 0
	0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, // .018).s = 4.5 * 
	0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, // f;.else.s = 1.09
	0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, // 9 * pow(f, 0.45)
	0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  - 0.099;.return
	0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, //  s;.}.float FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // mma( float color
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, // ).{.return sRGB(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, // color);.}.vec2 F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, // BGamma( vec2 col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // or).{.return vec
	0x32, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // 2(FBGamma(color.
	0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // x),FBGamma(color
	0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, // .y));.}.vec3 FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // amma( vec3 color
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // ).{.return vec3(
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, // FBGamma(color.x)
	0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, // ,FBGamma(color.y
	0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // ),FBGamma(color.
	0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, // z));.}.vec3 FBGa
	0x6d, 0x6d, 0x61, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // mma22( vec3 colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, // r).{.return vec3
	0x28, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, // (pow(color.x, 1.
	0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // 0/2.2),pow(color
	0x2e, 0x79, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, // .y, 1.0/2.2),pow
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, // (color.z, 1.0/2.
	0x32, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, // 2));.}.float FBT
	0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, // oneMap( float l)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, // .{.return l * ((
	0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, // l*0.25 + 1.0) / 
	0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // (l + 1.0));.}.ve
	0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, // c2 FBToneMap( ve
	0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // c2 color).{.floa
	0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, // t l = dot(color,
	0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, // vec2(0.176204+0.
	0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, // 0108109*0.5,0.81
	0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, // 2985+0.0108109*0
	0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, // .5));.return col
	0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, // or * ((l*0.25 + 
	0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // 1.0) / (l + 1.0)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, // );.}.vec3 FBTone
	0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // Map( vec3 color)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // .{.float l = dot
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, // (color,vec3(0.17
	0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, // 6204,0.812985,0.
	0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // 0108109));.retur
	0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, // n color * ((l*0.
	0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, // 25 + 1.0) / (l +
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, //  1.0));.}.vec4 A
	0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // dditive( vec4 cB
	0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // ase, vec4 cBlend
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, // , float percent)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, // .{.return cBase 
	0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, // + cBlend*percent
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, // ;.}.vec3 Screen 
	0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, // ( vec3 cBase, ve
	0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // c3 cBlend).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // urn 1.0 - (1.0 -
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, //  cBase) * (1.0 -
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, //  cBlend);.}.vec4
	0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, //  Screen ( vec4 c
	0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // Base, vec4 cBlen
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, // d).{.return 1.0 
	0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, // - (1.0 - cBase) 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // * (1.0 - cBlend)
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, // ;.}.vec3 ScreenH
	0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // DR ( vec3 cBase,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, //  vec3 cBlend).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // return max(1.0 -
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, //  (1.0 - cBase) *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, //  (1.0 - cBlend),
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, //  vec3(0.,0.,0.))
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, // ;.}.vec4 ScreenH
	0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // DR ( vec4 cBase,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, //  vec4 cBlend).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // return max(1.0 -
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, //  (1.0 - cBase) *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, //  (1.0 - cBlend),
	0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, //  vec4(0.,0.,0.,0
	0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, // .));.}.vec4 Mult
	0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, // iply ( vec4 cBas
	0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, // e, vec4 cBlend, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, // float percent).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, // .return cBase * 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, // cBlend*percent;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, // }.vec4 Overlay (
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, //  vec4 cBase, vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, // 4 cBlend).{.vec4
	0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, //  cNew = step(0.5
	0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, // , cBase);.cNew =
	0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, //  mix(cBase*cBlen
	0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, // d*2.0, 1.0-2.0*(
	0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, // 1.0-cBase)*(1.0-
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, // cBlend), cNew);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // return cNew;.}.v
	0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, // ec4 OverlayHDR (
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, //  vec4 cBase, vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, // 4 cBlend).{.vec4
	0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, //  cNew = step(0.5
	0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, // , cBase);.cNew =
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, //  max(mix(cBase*c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, // Blend*2.0, 1.0-2
	0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, // .0*(1.0-cBase)*(
	0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, // 1.0-cBlend), cNe
	0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, // w), vec4(0.,0.,0
	0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, // .,0.));.return c
	0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, // New;.}.vec3 cos_
	0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // hemisphere_sampl
	0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // e( vec2 t).{.flo
	0x61, 0x74, 0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, // at phi = t.y * (
	0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, // 2.0*3.1415926535
	0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, // 8979323846264338
	0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, // 32795);.float co
	0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, // sTheta = sqrt(1.
	0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 0 - t.x);.float 
	0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // sinTheta = sqrt(
	0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, // t.x);.float sp,c
	0x70, 0x3b, 0x0a, 0x7b, 0x73, 0x70, 0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, // p;.{sp=sin(phi);
	0x63, 0x70, 0x3d, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, 0x3b, 0x0a, 0x72, // cp=cos(phi);};.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, // eturn vec3(cp * 
	0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, // sinTheta, cosThe
	0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, // ta, sp * sinThet
	0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, // a);.}.vec3 rotat
	0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, // e_to_vector_uppe
	0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x76, 0x65, 0x63, // r( vec3 vec, vec
	0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, // 3 normal).{.if(n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, // ormal.y > -0.999
	0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, // 99).{.float h = 
	0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // 1.0/(1.0+normal.
	0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, // y);.float hz = h
	0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // *normal.z;.float
	0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, //  hzx = hz*normal
	0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // .x;.return vec3(
	0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // .vec.x * (normal
	0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, // .y+hz*normal.z) 
	0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // + vec.y * normal
	0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, // .x - vec.z * hzx
	0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // ,.vec.y * normal
	0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, // .y - vec.x * nor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, // mal.x - vec.z * 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, // normal.z,.vec.y 
	0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, // * normal.z - vec
	0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, // .x * hzx + vec.z
	0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, //  * (normal.y+h*n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // ormal.x*normal.x
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // ));.}.else retur
	0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // n -vec;.}.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, // m vec4 vColor_In
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // tensity;.uniform
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, //  vec4 vRes_Alpha
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // _time;.uniform v
	0x65, 0x63, 0x34, 0x20, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x54, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, // ec4 alphaTestVal
	0x75, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, // ue;.uniform samp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x6d, 0x64, 0x3b, 0x0a, 0x76, // ler2D tex_dmd;.v
	0x65, 0x63, 0x32, 0x20, 0x68, 0x61, 0x73, 0x68, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, // ec2 hash22( vec2
	0x20, 0x75, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x33, 0x20, 0x3d, //  uv).{.vec3 p3 =
	0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x75, 0x76, 0x2e, 0x78, 0x79, 0x78, 0x20, 0x2a, 0x20, //  fract(uv.xyx * 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x2e, 0x31, 0x30, 0x33, 0x31, 0x2c, 0x20, 0x2e, 0x31, 0x30, 0x33, // vec3(.1031, .103
	0x30, 0x2c, 0x20, 0x2e, 0x30, 0x39, 0x37, 0x33, 0x29, 0x29, 0x3b, 0x0a, 0x70, 0x33, 0x20, 0x2b, // 0, .0973));.p3 +
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x70, 0x33, 0x2c, 0x20, 0x70, 0x33, 0x2e, 0x79, 0x7a, 0x78, // = dot(p3, p3.yzx
	0x20, 0x2b, 0x20, 0x33, 0x33, 0x2e, 0x33, 0x33, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  + 33.33);.retur
	0x6e, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x28, 0x70, 0x33, 0x2e, 0x78, 0x78, 0x20, 0x2b, // n fract((p3.xx +
	0x20, 0x70, 0x33, 0x2e, 0x79, 0x7a, 0x29, 0x2a, 0x70, 0x33, 0x2e, 0x7a, 0x79, 0x29, 0x3b, 0x0a, //  p3.yz)*p3.zy);.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x75, 0x6c, // }.float triangul
	0x61, 0x72, 0x50, 0x44, 0x46, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x29, 0x0a, // arPDF( float r).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x2a, 0x72, // {.float p = 2.*r
	0x3b, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x62, 0x20, 0x3d, 0x20, 0x28, 0x70, 0x20, 0x3e, 0x20, // ;.bool b = (p > 
	0x31, 0x2e, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x62, 0x29, 0x0a, 0x70, 0x20, 0x3d, 0x20, // 1.);.if (b).p = 
	0x32, 0x2e, 0x2d, 0x70, 0x3b, 0x0a, 0x70, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x2d, 0x73, 0x71, 0x72, // 2.-p;.p = 1.-sqr
	0x74, 0x28, 0x70, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x62, 0x20, 0x3f, // t(p);.return b ?
	0x20, 0x70, 0x20, 0x3a, 0x20, 0x2d, 0x70, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, //  p : -p;.}.void 
	0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, // main().{.float b
	0x6c, 0x75, 0x72, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x35, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // lur = 1.5;.vec2 
	0x64, 0x64, 0x78, 0x73, 0x20, 0x3d, 0x20, 0x64, 0x46, 0x64, 0x78, 0x28, 0x76, 0x5f, 0x74, 0x65, // ddxs = dFdx(v_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x2a, 0x62, 0x6c, 0x75, 0x72, 0x3b, 0x0a, 0x76, // xcoord0)*blur;.v
	0x65, 0x63, 0x32, 0x20, 0x64, 0x64, 0x79, 0x73, 0x20, 0x3d, 0x20, 0x64, 0x46, 0x64, 0x79, 0x28, // ec2 ddys = dFdy(
	0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x2a, 0x62, 0x6c, 0x75, // v_texcoord0)*blu
	0x72, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x69, 0x73, 0x74, 0x5f, 0x66, 0x61, // r;.float dist_fa
	0x63, 0x74, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x28, 0x31, 0x2e, // ctor = clamp((1.
	0x2d, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x28, 0x64, 0x64, 0x78, 0x73, 0x2b, 0x64, 0x64, 0x79, // -length(ddxs+ddy
	0x73, 0x29, 0x2a, 0x36, 0x2e, 0x36, 0x36, 0x29, 0x20, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x2c, 0x31, // s)*6.66) , 0.4,1
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x6f, 0x66, 0x66, 0x73, 0x20, 0x3d, // .0);.vec2 offs =
	0x20, 0x68, 0x61, 0x73, 0x68, 0x32, 0x32, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, //  hash22(v_texcoo
	0x72, 0x64, 0x30, 0x20, 0x2b, 0x20, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, // rd0 + vRes_Alpha
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // _time.w);.vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x32, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, // olor2 = vec3_spl
	0x61, 0x74, 0x28, 0x30, 0x2e, 0x29, 0x3b, 0x0a, 0x69, 0x6e, 0x74, 0x20, 0x73, 0x61, 0x6d, 0x70, // at(0.);.int samp
	0x6c, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x33, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // les = 13;.float 
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x3d, 0x20, // samples_float = 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x29, 0x3b, 0x0a, // float(samples);.
	0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, // for (int i = 0; 
	0x69, 0x20, 0x3c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x3b, 0x20, 0x2b, 0x2b, 0x69, // i < samples; ++i
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x61, // ).{.float i_floa
	0x74, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x69, 0x29, 0x3b, 0x0a, 0x76, 0x65, // t = float(i);.ve
	0x63, 0x32, 0x20, 0x78, 0x69, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x66, 0x72, 0x61, // c2 xi = vec2(fra
	0x63, 0x74, 0x28, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // ct(i_float * (1.
	0x30, 0x20, 0x2f, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x66, 0x6c, 0x6f, 0x61, // 0 / samples_floa
	0x74, 0x29, 0x20, 0x2b, 0x20, 0x6f, 0x66, 0x66, 0x73, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x66, 0x72, // t) + offs.x), fr
	0x61, 0x63, 0x74, 0x28, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x2a, 0x20, 0x28, 0x38, // act(i_float * (8
	0x2e, 0x30, 0x20, 0x2f, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x66, 0x6c, 0x6f, // .0 / samples_flo
	0x61, 0x74, 0x29, 0x20, 0x2b, 0x20, 0x6f, 0x66, 0x66, 0x73, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, // at) + offs.y));.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x20, 0x3d, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // vec2 uv = v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2b, 0x20, 0x74, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x75, 0x6c, // oord0 + triangul
	0x61, 0x72, 0x50, 0x44, 0x46, 0x28, 0x78, 0x69, 0x2e, 0x78, 0x29, 0x2a, 0x64, 0x64, 0x78, 0x73, // arPDF(xi.x)*ddxs
	0x20, 0x2b, 0x20, 0x74, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x50, 0x44, 0x46, //  + triangularPDF
	0x28, 0x78, 0x69, 0x2e, 0x79, 0x29, 0x2a, 0x64, 0x64, 0x79, 0x73, 0x3b, 0x0a, 0x76, 0x65, 0x63, // (xi.y)*ddys;.vec
	0x34, 0x20, 0x72, 0x67, 0x62, 0x61, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // 4 rgba = texture
	0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x6d, 0x64, 0x2c, 0x20, 0x75, 0x76, 0x2c, // Lod(tex_dmd, uv,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x64, 0x69, 0x73, 0x74, //  0.0);.vec2 dist
	0x20, 0x3d, 0x20, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x75, 0x76, 0x2a, 0x76, 0x52, 0x65, //  = (fract(uv*vRe
	0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x78, 0x79, 0x29, // s_Alpha_time.xy)
	0x2a, 0x32, 0x2e, 0x32, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x31, 0x29, 0x20, 0x2a, 0x20, 0x64, 0x69, // *2.2 - 1.1) * di
	0x73, 0x74, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // st_factor;.float
	0x20, 0x64, 0x20, 0x3d, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, //  d = smoothstep(
	0x30, 0x2e, 0x2c, 0x20, 0x31, 0x2e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x73, 0x71, // 0., 1., 1.0 - sq
	0x72, 0x28, 0x64, 0x69, 0x73, 0x74, 0x2e, 0x78, 0x2a, 0x64, 0x69, 0x73, 0x74, 0x2e, 0x78, 0x20, // r(dist.x*dist.x 
	0x2b, 0x20, 0x64, 0x69, 0x73, 0x74, 0x2e, 0x79, 0x2a, 0x64, 0x69, 0x73, 0x74, 0x2e, 0x79, 0x29, // + dist.y*dist.y)
	0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, // );.if (vColor_In
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, // tensity.w != 0.0
	0x29, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x32, 0x20, 0x2b, 0x3d, 0x20, 0x72, 0x67, 0x62, 0x61, // ).color2 += rgba
	0x2e, 0x72, 0x67, 0x62, 0x20, 0x2a, 0x20, 0x64, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x63, // .rgb * d;.else.c
	0x6f, 0x6c, 0x6f, 0x72, 0x32, 0x20, 0x2b, 0x3d, 0x20, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x72, 0x20, // olor2 += rgba.r 
	0x2a, 0x20, 0x64, 0x3b, 0x0a, 0x7d, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x32, 0x20, 0x2a, 0x3d, // * d;.}.color2 *=
	0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, //  vColor_Intensit
	0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x31, 0x2e, 0x2f, 0x73, 0x61, 0x6d, // y.xyz * ((1./sam
	0x70, 0x6c, 0x65, 0x73, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, // ples_float) * sq
	0x72, 0x28, 0x64, 0x69, 0x73, 0x74, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x29, 0x29, 0x3b, // r(dist_factor));
	0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, // .gl_FragColor = 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x32, 0x20, 0x2c, 0x20, 0x76, 0x52, // vec4(color2 , vR
	0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x7a, 0x29, // es_Alpha_time.z)
	0x3b, 0x0a, 0x7d, 0x0a, 0x00,                                                                   // ;.}..
};
static const uint8_t fs_dmd_noclip_dx11[9395] =
{
	0x46, 0x53, 0x48, 0x0b, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x10, 0x76, // FSH............v
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, // Color_Intensity.
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, // ..........vRes_A
	0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, // lpha_time.......
	0x00, 0x00, 0x00, 0x07, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x6d, 0x64, 0x30, 0x01, 0x00, 0x00, 0x01, // ....tex_dmd0....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x6d, 0x64, 0x30, 0x01, 0x00, // ......tex_dmd0..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x24, 0x00, 0x00, 0x44, 0x58, 0x42, 0x43, 0x32, // .......D$..DXBC2
	0x1a, 0x7b, 0x27, 0x4f, 0x8b, 0xb9, 0x4d, 0x78, 0x80, 0xeb, 0x6a, 0xb3, 0x5c, 0xfe, 0x90, 0x01, // .{'O..Mx..j.....
	0x00, 0x00, 0x00, 0x44, 0x24, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x9c, // ...D$......,....
	0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x4e, 0x68, 0x00, 0x00, 0x00, 0x03, // .......ISGNh....
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // .......P........
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x5c, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x53, // ...............S
	0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, // V_POSITION.TEXCO
	0x4f, 0x52, 0x44, 0x00, 0xab, 0xab, 0xab, 0x4f, 0x53, 0x47, 0x4e, 0x2c, 0x00, 0x00, 0x00, 0x01, // ORD....OSGN,....
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....... ........
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x53, // ...............S
	0x56, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x00, 0xab, 0xab, 0x53, 0x48, 0x45, 0x58, 0x6c, // V_TARGET...SHEXl
	0x23, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0xdb, 0x08, 0x00, 0x00, 0x6a, 0x28, 0x00, 0x01, 0x59, // #..P.......j(..Y
	0x00, 0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x5a, // ...F. .........Z
	0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, // ....`......X....
	0x70, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x32, // p......UU..b...2
	0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0xf2, 0x20, 0x10, 0x00, 0x00, // .......e.... ...
	0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x02, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, // ...h...........r
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf6, // .......F........
	0x8f, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0x72, // . .........8...r
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // .......F........
	0x40, 0x00, 0x00, 0x18, 0x26, 0xd3, 0x3d, 0xaa, 0xf1, 0xd2, 0x3d, 0x39, 0x45, 0xc7, 0x3d, 0x00, // @...&.=...=9E.=.
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x05, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // .......r.......F
	0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x01, // ...........r....
	0x00, 0x00, 0x00, 0x96, 0x04, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xec, // ............@...
	0x51, 0x05, 0x42, 0xec, 0x51, 0x05, 0x42, 0xec, 0x51, 0x05, 0x42, 0x00, 0x00, 0x00, 0x00, 0x10, // Q.B.Q.B.Q.B.....
	0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x72, // ...F...........r
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x96, 0x09, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, // ...8...........f
	0x06, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, // .......F........
	0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, // ...........F....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xe6, // ................
	0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xd9, 0x89, 0x9d, 0x3d, 0xd9, // ........@.....=.
	0x89, 0x1d, 0x3f, 0xd9, 0x89, 0x1d, 0x3e, 0xd9, 0x89, 0x9d, 0x3f, 0x1a, 0x00, 0x00, 0x05, 0xf2, // ..?...>...?.....
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // .......F........
	0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x10, 0xf2, // ...F.......2....
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x01, // .......F...A....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, // ....@.....@...@.
	0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, // ..@...@.@.....@.
	0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x31, 0x00, 0x00, 0x0a, 0xf2, // ..@...@...@1....
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, // ........@.....?.
	0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x46, 0x0e, 0x10, 0x00, 0x01, // ..?...?...?F....
	0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, // ...7...........F
	0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x02, // .......K........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0xf2, // ...F............
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x02, // .......F...A....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, // ....@.....?...?.
	0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x37, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x01, // ..?...?7........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x02, // ...F.......F....
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x7a, // ...F...A.......z
	0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x14, 0x10, 0x00, 0x01, // ...........F....
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, // ...8...........F
	0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x3f, 0x00, // ........@.....?.
	0x00, 0xc0, 0x3f, 0x00, 0x00, 0xc0, 0x3f, 0x00, 0x00, 0xc0, 0x3f, 0x32, 0x00, 0x00, 0x09, 0xf2, // ..?...?...?2....
	0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, 0x0a, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xe6, // ................
	0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x14, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x36, // .......F.......6
	0x00, 0x00, 0x06, 0xf2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x14, 0x10, 0x80, 0x41, // ...........F...A
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x05, // .......|........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0xf2, // ...F.......8....
	0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02, // .......F........
	0x40, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x3f, 0x00, 0x00, 0xc0, 0x3f, 0x00, 0x00, 0xc0, 0x3f, 0x00, // @.....?...?...?.
	0x00, 0xc0, 0x3f, 0x32, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x56, // ..?2...........V
	0x0f, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x04, // .......8........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x84, 0x20, 0x00, 0x00, // ...F.......F. ..
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0f, 0xf2, // ...F.......2....
	0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, // .......F........
	0x40, 0x00, 0x00, 0xcd, 0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0xcd, // @.....@...@...@.
	0xcc, 0x0c, 0x40, 0x02, 0x40, 0x00, 0x00, 0xcd, 0xcc, 0x8c, 0xbf, 0xcd, 0xcc, 0x8c, 0xbf, 0xcd, // ..@.@...........
	0xcc, 0x8c, 0xbf, 0xcd, 0xcc, 0x8c, 0xbf, 0x32, 0x00, 0x00, 0x0c, 0x32, 0x00, 0x10, 0x00, 0x02, // .......2...2....
	0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0xc0, 0x3f, 0x00, 0x00, 0xc0, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe6, // ..?...?.........
	0x0a, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x02, // ...F.......F....
	0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x05, 0x12, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, // ...K............
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x12, 0x00, 0x10, 0x00, 0x02, // .......2........
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, // .......A........
	0x40, 0x00, 0x00, 0xb8, 0x1e, 0xd5, 0x40, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x34, // @.....@.@.....?4
	0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0xcd, 0xcc, 0xcc, 0x3e, 0x38, 0x00, 0x00, 0x07, 0xf2, // ....@.....>8....
	0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x02, // ..........."....
	0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x04, // ...F.......F....
	0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xe6, // .......B........
	0x0a, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, // ...............2
	0x00, 0x00, 0x0a, 0x42, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x80, 0x41, // ...B.......*...A
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, // .......*........
	0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x32, 0x00, 0x00, 0x0a, 0x22, 0x00, 0x10, 0x00, 0x02, // @.....?2..."....
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, // .......A........
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x34, // ........@.....?4
	0x00, 0x00, 0x0a, 0x62, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x56, 0x06, 0x10, 0x00, 0x02, // ...b.......V....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....@...........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x02, // .......2........
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0x00, 0xc0, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0x22, // ....@....@@8..."
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, // ................
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x02, // .......8..."....
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, // ...........:....
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x05, 0x32, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe6, // .......2........
	0x0a, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc2, 0x00, 0x10, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0x06, 0x04, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, 0x04, 0x10, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x10, 0x32, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, // ...2...2.......F
	0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, // ...A........@...
	0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // ..@...@.........
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, // @.....@...@.....
	0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x0a, 0x32, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, // ...1...2........
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, // @.....?...?.....
	0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0xc2, // ...F.......7....
	0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, 0x04, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, // ................
	0x04, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0xa6, 0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x4b, // ...............K
	0x00, 0x00, 0x05, 0xc2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xa6, 0x0e, 0x10, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0xc2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xa6, // ................
	0x0e, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, // ...A........@...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x37, // ..........?...?7
	0x00, 0x00, 0x0a, 0x32, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x04, // ...2.......F....
	0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x80, 0x41, // ...............A
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x52, 0x00, 0x10, 0x00, 0x04, // .......2...R....
	0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xa6, 0x0b, 0x10, 0x00, 0x03, // ................
	0x00, 0x00, 0x00, 0x06, 0x11, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x32, // ...........2...2
	0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe6, // .......V........
	0x0a, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x86, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x38, // ...............8
	0x00, 0x00, 0x08, 0xc2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, 0x04, 0x10, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0x06, 0x84, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x48, // ..... .........H
	0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x06, // .......CU..r....
	0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, // ...F.......F~...
	0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ....`.......@...
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x05, 0x32, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe6, // .......2........
	0x0a, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0f, 0x32, 0x00, 0x10, 0x00, 0x04, // .......2...2....
	0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xcd, // ...F........@...
	0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // ..@...@.........
	0x40, 0x00, 0x00, 0xcd, 0xcc, 0x8c, 0xbf, 0xcd, 0xcc, 0x8c, 0xbf, 0x00, 0x00, 0x00, 0x00, 0x00, // @...............
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x32, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, // ...8...2........
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0f, // .......F........
	0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x04, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x82, // ...F.......2....
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x02, // .......:...A....
	0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ...:........@...
	0x00, 0x80, 0x3f, 0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, // ..?4...........:
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, // ........@......2
	0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, // ...........:....
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x40, 0x00, 0x00, 0x00, // ....@.......@...
	0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, // .@@8...........:
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, // .......:.......8
	0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, // ...........:....
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, // ...........8...r
	0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x02, // .......9........
	0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ...:. ..........
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x04, // @......7...r....
	0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, // ...........F....
	0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, // ...........H....
	0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, // ...CU..r.......F
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .......F~.......
	0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, // `.......@......H
	0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x01, // .......CU..r....
	0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, // ...........F~...
	0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ....`.......@...
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xe2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, // ...2............
	0x09, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, // .......V........
	0x09, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x04, // .......2...r....
	0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x02, // ...........V....
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, // ...F.......7...r
	0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x96, // ................
	0x07, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, // .......F.......2
	0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x02, // ...........*....
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x40, 0x00, 0x00, 0x00, // ....@.......@...
	0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2a, // .@@8...".......*
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, // .......*.......8
	0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, // ...........:....
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, // ...........2...r
	0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf6, // .......F........
	0x0f, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, // .......F.......2
	0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x01, // ...r............
	0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, // ...........F....
	0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf6, // ...7...r........
	0x0f, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xc6, // ............@...
	0x4e, 0x6c, 0x3e, 0xc6, 0x4e, 0xec, 0x3f, 0xd9, 0x89, 0x9d, 0x3e, 0xd9, 0x89, 0x1d, 0x40, 0x1a, // Nl>.N.?...>...@.
	0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, // ...........F....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, // .......F.......2
	0x00, 0x00, 0x10, 0xf2, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x80, 0x41, // ...........F...A
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, // ........@.....@.
	0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x02, 0x40, 0x00, 0x00, 0x00, // ..@...@...@.@...
	0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x31, // ..@...@...@...@1
	0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x46, // ..?...?...?...?F
	0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x06, // .......7........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x07, // ...F.......F....
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x05, 0xf2, // ...F.......K....
	0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, // .......F........
	0x00, 0x00, 0x0b, 0xf2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x80, 0x41, // ...........F...A
	0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, // ........@.....?.
	0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x37, 0x00, 0x00, 0x0a, 0xf2, // ..?...?...?7....
	0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x06, // .......F...A....
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, // ...2............
	0x0a, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x14, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x04, // .......2........
	0x00, 0x00, 0x00, 0x56, 0x0f, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 0x05, // ...V............
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, // ...F.......8....
	0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x84, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x05, 0xf2, // . ..............
	0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x32, // .......F.......2
	0x00, 0x00, 0x0f, 0xf2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x06, // ...........F....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xcd, 0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0xcd, // ....@.....@...@.
	0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0x02, 0x40, 0x00, 0x00, 0xcd, 0xcc, 0x8c, 0xbf, 0xcd, // ..@...@.@.......
	0xcc, 0x8c, 0xbf, 0xcd, 0xcc, 0x8c, 0xbf, 0xcd, 0xcc, 0x8c, 0xbf, 0x38, 0x00, 0x00, 0x07, 0xf2, // ...........8....
	0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x06, // ...F.......F....
	0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xe6, // ......."........
	0x0a, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x32, // ...............2
	0x00, 0x00, 0x0a, 0x22, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, 0x41, // ..."...........A
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, // ................
	0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x34, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x02, // @.....?4..."....
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, // ...2...........:
	0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, // ...A.......:....
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x34, 0x00, 0x00, 0x07, 0x82, // ....@.....?4....
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, // .......:........
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x42, 0x00, 0x10, 0x00, 0x02, // @......2...B....
	0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ...:........@...
	0x00, 0x00, 0xc0, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0x82, // ....@....@@8....
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, // .......:.......:
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, // .......8........
	0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x02, // ...:.......*....
	0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, // ...H.......CU..r
	0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ~.......`.......
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, // @......H.......C
	0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x04, // U..r............
	0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, // ...F~.......`...
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xe2, // ....@......2....
	0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0xf6, // ................
	0x0f, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // ...............2
	0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x06, // ...r............
	0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, // ...........F....
	0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf6, // ...7...r........
	0x0f, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x01, // .......2........
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0x00, 0xc0, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0x22, // ....@....@@8..."
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, // ................
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, // .......8........
	0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, // ...:............
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xe2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, // ...2............
	0x09, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, // ................
	0x09, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, // .......2...r....
	0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, // ...F.......7...r
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x96, // ................
	0x07, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // .......F........
	0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x4f, 0xec, 0xc4, 0x3e, 0x4f, 0xec, 0x44, 0x40, 0xc6, // ....@..O..>O.D@.
	0x4e, 0xec, 0x3e, 0xc6, 0x4e, 0x6c, 0x40, 0x1a, 0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x04, // N.>.Nl@.........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf2, // ...F............
	0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x10, 0xf2, 0x00, 0x10, 0x00, 0x07, // .......2........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, // ...F...A........
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, // @.....@...@...@.
	0x00, 0x00, 0x40, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, // ..@.@.....@...@.
	0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x31, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x04, // ..@...@1........
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x00, // ....@.....?...?.
	0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x46, 0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x37, // ..?...?F.......7
	0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x06, // ...F.......F....
	0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, // ...K...........F
	0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0xf2, 0x00, 0x10, 0x00, 0x06, // ................
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02, // ...F...A........
	0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, // @.....?...?...?.
	0x00, 0x80, 0x3f, 0x37, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, // ..?7...........F
	0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x0e, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xf2, // ...A.......2....
	0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x0a, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe6, // ................
	0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x14, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // .......F.......2
	0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x56, 0x0f, 0x10, 0x00, 0x04, // ...........V....
	0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x06, // ...........F....
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, // ...8...........F
	0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x84, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // .......F. ......
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0f, 0xf2, 0x00, 0x10, 0x00, 0x06, // .......2........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xcd, // ...F........@...
	0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0x02, // ..@...@...@...@.
	0x40, 0x00, 0x00, 0xcd, 0xcc, 0x8c, 0xbf, 0xcd, 0xcc, 0x8c, 0xbf, 0xcd, 0xcc, 0x8c, 0xbf, 0xcd, // @...............
	0xcc, 0x8c, 0xbf, 0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, // ...8............
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0f, // .......F........
	0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x06, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x07, 0x22, // ...F..........."
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0xe6, // ................
	0x0a, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x22, 0x00, 0x10, 0x00, 0x02, // .......2..."....
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, // .......A........
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x34, // ........@.....?4
	0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, // ..."............
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x82, // ....@......2....
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x01, // .......:...A....
	0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ...:........@...
	0x00, 0x80, 0x3f, 0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, // ..?4...........:
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, // ........@......2
	0x00, 0x00, 0x09, 0x42, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, // ...B.......:....
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x40, 0x00, 0x00, 0x00, // ....@.......@...
	0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, // .@@8...........:
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, // .......:.......8
	0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, // ...........:....
	0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, // ...*.......H....
	0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, // ...CU..r.......F
	0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .......F~.......
	0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, // `.......@......H
	0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x04, // .......CU..r....
	0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, // ...........F~...
	0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ....`.......@...
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xe2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, // ...2............
	0x09, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, // ................
	0x09, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, // .......2...r....
	0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, // ...F.......7...r
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x96, // ................
	0x07, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // .......F.......2
	0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x40, 0x00, 0x00, 0x00, // ....@.......@...
	0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, // .@@8..."........
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, // ...............8
	0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, // ...........:....
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xe2, // ...........2....
	0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf6, // ................
	0x0f, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // ...............2
	0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x04, // ...r............
	0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, // ...........F....
	0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf6, // ...7...r........
	0x0f, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x9e, // ............@...
	0xd8, 0x09, 0x3f, 0x9e, 0xd8, 0x89, 0x40, 0xd9, 0x89, 0x1d, 0x3f, 0xd9, 0x89, 0x9d, 0x40, 0x1a, // ..?...@...?...@.
	0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, // ...........F....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, // .......F.......2
	0x00, 0x00, 0x10, 0xf2, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x80, 0x41, // ...........F...A
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, // ........@.....@.
	0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x02, 0x40, 0x00, 0x00, 0x00, // ..@...@...@.@...
	0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x31, // ..@...@...@...@1
	0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x46, // ..?...?...?...?F
	0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x06, // .......7........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x07, // ...F.......F....
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x05, 0xf2, // ...F.......K....
	0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, // .......F........
	0x00, 0x00, 0x0b, 0xf2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x80, 0x41, // ...........F...A
	0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, // ........@.....?.
	0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x37, 0x00, 0x00, 0x0a, 0xf2, // ..?...?...?7....
	0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x06, // .......F...A....
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, // ...2............
	0x0a, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x14, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x04, // .......2........
	0x00, 0x00, 0x00, 0x56, 0x0f, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 0x05, // ...V............
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, // ...F.......8....
	0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x84, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x05, 0xf2, // . ..............
	0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x32, // .......F.......2
	0x00, 0x00, 0x0f, 0xf2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x06, // ...........F....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xcd, 0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0xcd, // ....@.....@...@.
	0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0x02, 0x40, 0x00, 0x00, 0xcd, 0xcc, 0x8c, 0xbf, 0xcd, // ..@...@.@.......
	0xcc, 0x8c, 0xbf, 0xcd, 0xcc, 0x8c, 0xbf, 0xcd, 0xcc, 0x8c, 0xbf, 0x38, 0x00, 0x00, 0x07, 0xf2, // ...........8....
	0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x06, // ...F.......F....
	0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xe6, // ......."........
	0x0a, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x32, // ...............2
	0x00, 0x00, 0x0a, 0x22, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, 0x41, // ..."...........A
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, // ................
	0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x34, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x02, // @.....?4..."....
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, // ...2...........:
	0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, // ...A.......:....
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x34, 0x00, 0x00, 0x07, 0x82, // ....@.....?4....
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, // .......:........
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x42, 0x00, 0x10, 0x00, 0x02, // @......2...B....
	0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ...:........@...
	0x00, 0x00, 0xc0, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0x82, // ....@....@@8....
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, // .......:.......:
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, // .......8........
	0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x02, // ...:.......*....
	0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, // ...H.......CU..r
	0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ~.......`.......
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, // @......H.......C
	0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x04, // U..r............
	0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, // ...F~.......`...
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xe2, // ....@......2....
	0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0xf6, // ................
	0x0f, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // ...............2
	0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x06, // ...r............
	0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, // ...........F....
	0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf6, // ...7...r........
	0x0f, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x01, // .......2........
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0x00, 0xc0, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0x22, // ....@....@@8..."
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, // ................
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, // .......8........
	0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, // ...:............
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xe2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, // ...2............
	0x09, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, // ................
	0x09, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, // .......2...r....
	0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, // ...F.......7...r
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x96, // ................
	0x07, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // .......F........
	0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x14, 0x3b, 0x31, 0x3f, 0x14, 0x3b, 0xb1, 0x40, 0x4f, // ....@...;1?.;.@O
	0xec, 0x44, 0x3f, 0x4f, 0xec, 0xc4, 0x40, 0x00, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x00, // .D?O..@.........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x8a, // ...F........@...
	0x9d, 0x58, 0x3f, 0x8a, 0x9d, 0xd8, 0x40, 0xc6, 0x4e, 0x6c, 0x3f, 0xc6, 0x4e, 0xec, 0x40, 0x1a, // .X?...@.Nl?.N.@.
	0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, // ...........F....
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x06, // ................
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, // ...F.......F....
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x10, 0xf2, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, // ...2...........F
	0x0e, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, // ...A........@...
	0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x02, // ..@...@...@...@.
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, // @.....@...@...@.
	0x00, 0x00, 0x40, 0x31, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, // ..@1............
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x00, // @.....?...?...?.
	0x00, 0x00, 0x3f, 0x46, 0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0xf2, // ..?F.......7....
	0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x0e, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x4b, // .......F.......K
	0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x06, // ...........F....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0xf2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x0e, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, // ...A........@...
	0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x37, // ..?...?...?...?7
	0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x80, 0x41, // ...F.......F...A
	0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x06, // .......2........
	0x00, 0x00, 0x00, 0x06, 0x0a, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 0x03, // ................
	0x00, 0x00, 0x00, 0x46, 0x14, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xf2, // ...F.......2....
	0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x56, 0x0f, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe6, // .......V........
	0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x38, // .......F.......8
	0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x84, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, // ...F. ..........
	0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x06, // ...........F....
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0f, 0xf2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, // ...2...........F
	0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xcd, 0xcc, 0x0c, 0x40, 0xcd, // ........@.....@.
	0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0x02, 0x40, 0x00, 0x00, 0xcd, // ..@...@...@.@...
	0xcc, 0x8c, 0xbf, 0xcd, 0xcc, 0x8c, 0xbf, 0xcd, 0xcc, 0x8c, 0xbf, 0xcd, 0xcc, 0x8c, 0xbf, 0x38, // ...............8
	0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x07, 0x82, // ...F............
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x02, // ..........."....
	0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x06, // ................
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x22, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, // ...2..."........
	0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, // ...A............
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x34, 0x00, 0x00, 0x07, 0x22, // ....@.....?4..."
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, // ................
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x82, 0x00, 0x10, 0x00, 0x01, // @......2........
	0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, // ...:...A.......:
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x34, // ........@.....?4
	0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, // ...........:....
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x42, // ....@......2...B
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, // .......:........
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x38, // @.......@....@@8
	0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, // ...........:....
	0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x82, // ...:.......8....
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, // .......:.......*
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, // .......H.......C
	0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x04, // U..r.......F....
	0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, // ...F~.......`...
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, // ....@......H....
	0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe6, // ...CU..r........
	0x0a, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .......F~.......
	0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, // `.......@......2
	0x00, 0x00, 0x09, 0xe2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x06, // ................
	0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, // ...2...r........
	0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, // .......7...r....
	0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x06, // ................
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x82, // ...F.......2....
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, // ................
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x38, // @.......@....@@8
	0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, // ..."............
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x82, // ...........8....
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, // .......:........
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xe2, 0x00, 0x10, 0x00, 0x04, // .......2........
	0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, // ...........2...r
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf6, // ................
	0x0f, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x37, // .......F.......7
	0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x02, // ...r............
	0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, // ...........F....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, // .......F.......2
	0x00, 0x00, 0x10, 0xf2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x80, 0x41, // ...........F...A
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, // ........@.....@.
	0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x02, 0x40, 0x00, 0x00, 0x00, // ..@...@...@.@...
	0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x31, // ..@...@...@...@1
	0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x46, // ..?...?...?...?F
	0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x04, // .......7........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x06, // ...F.......F....
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x05, 0xf2, // ...F.......K....
	0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, // .......F........
	0x00, 0x00, 0x0b, 0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x80, 0x41, // ...........F...A
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, // ........@.....?.
	0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x37, 0x00, 0x00, 0x0a, 0xf2, // ..?...?...?7....
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x04, // .......F...A....
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x06, // ...2............
	0x0a, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x14, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x00, // .......2........
	0x00, 0x00, 0x00, 0x56, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x05, // ...V.......F....
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, // ...F.......8....
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x84, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x05, 0xf2, // . ..............
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x32, // .......F.......2
	0x00, 0x00, 0x0f, 0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, // ...........F....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xcd, 0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0xcd, // ....@.....@...@.
	0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0x02, 0x40, 0x00, 0x00, 0xcd, 0xcc, 0x8c, 0xbf, 0xcd, // ..@...@.@.......
	0xcc, 0x8c, 0xbf, 0xcd, 0xcc, 0x8c, 0xbf, 0xcd, 0xcc, 0x8c, 0xbf, 0x38, 0x00, 0x00, 0x07, 0xf2, // ...........8....
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, // .......8........
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, // ...8...........:
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0xd9, 0x89, 0x9d, 0x3d, 0x38, // ........@.....=8
	0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x01, // ...r............
	0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, // ...F. ..........
	0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x03, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x07, 0x12, // ...F............
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0xe6, // ................
	0x0a, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x12, 0x00, 0x10, 0x00, 0x03, // .......2........
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0a, // .......A........
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x34, // ........@.....?4
	0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x03, // ................
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x82, // ....@......2....
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x01, // .......:...A....
	0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ...:........@...
	0x00, 0x80, 0x3f, 0x34, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, // ..?4...........:
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, // ........@......2
	0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, // ...".......:....
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x40, 0x00, 0x00, 0x00, // ....@.......@...
	0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, // .@@8...........:
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, // .......:.......8
	0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, // ...........:....
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, // ...........H....
	0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0xe2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, // ...CU..........F
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x79, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .......6y.......
	0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, // `.......@......H
	0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x00, // .......CU..r....
	0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, // ...........F~...
	0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ....`.......@...
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x96, // ...2...r........
	0x07, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, // .......2...r....
	0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x01, // ...V............
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, // ...F.......7...r
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // .......F.......2
	0x00, 0x00, 0x09, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x03, // ................
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x40, 0x00, 0x00, 0x00, // ....@.......@...
	0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, // .@@8............
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x38, // ...............8
	0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, // ...........:....
	0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, // ...:.......2...r
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, // .......F........
	0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // .......F.......2
	0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, // ...r............
	0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, // ...........F....
	0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, // ...7...r........
	0x0f, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x20, 0x10, 0x00, 0x00, // .......8...r ...
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, // ...F.......F....
	0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0x82, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, // ...6.... ......*
	0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x01, 0x00, // . .........>....
	0x00, 0x20, 0x00,                                                                               // . .
};
static const uint8_t fs_dmd_noclip_spv[4025] =
{
	0x46, 0x53, 0x48, 0x0b, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x0f, 0x76, // FSH............v
	0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x01, // Res_Alpha_time..
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, // .........vColor_
	0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, // Intensity.......
	0x00, 0x00, 0x00, 0x07, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x6d, 0x64, 0x30, 0x00, 0x02, 0x00, 0x00, // ....tex_dmd0....
	0x00, 0x00, 0x02, 0x22, 0x00, 0x5c, 0x0f, 0x00, 0x00, 0x03, 0x02, 0x23, 0x07, 0x00, 0x00, 0x01, // ...".......#....
	0x00, 0x0b, 0x00, 0x08, 0x00, 0x89, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, // ................
	0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, // .............GLS
	0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, // L.std.450.......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x07, 0x00, 0x04, 0x00, 0x00, // ................
	0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x47, 0x01, 0x00, // .....main....G..
	0x00, 0x57, 0x01, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, // .W..............
	0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, // ................
	0x00, 0x05, 0x00, 0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, // ................
	0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x34, 0x00, 0x00, // .main........4..
	0x00, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x6d, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, // .tex_dmdSampler.
	0x00, 0x05, 0x00, 0x06, 0x00, 0x37, 0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x6d, 0x64, // .....7...tex_dmd
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0xac, 0x00, 0x00, // Texture.........
	0x00, 0x55, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00, // .UniformBlock...
	0x00, 0x06, 0x00, 0x08, 0x00, 0xac, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0x43, 0x6f, // .............vCo
	0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x00, 0x00, 0x00, // lor_Intensity...
	0x00, 0x06, 0x00, 0x07, 0x00, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x76, 0x52, 0x65, // .............vRe
	0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x00, 0x05, 0x00, 0x03, // s_Alpha_time....
	0x00, 0xae, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0x47, 0x01, 0x00, // .............G..
	0x00, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x05, 0x00, 0x06, // .v_texcoord0....
	0x00, 0x57, 0x01, 0x00, 0x00, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, // .W...bgfx_FragDa
	0x74, 0x61, 0x30, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x34, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, // ta0..G...4..."..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x34, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, // .....G...4...!..
	0x00, 0x12, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x37, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, // .....G...7..."..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x37, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, // .....G...7...!..
	0x00, 0x02, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0xac, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .....H..........
	0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0xac, 0x00, 0x00, // .#.......H......
	0x00, 0x01, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x47, 0x00, 0x03, // .....#.......G..
	0x00, 0xac, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xae, 0x00, 0x00, // .........G......
	0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xae, 0x00, 0x00, // .".......G......
	0x00, 0x21, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x47, 0x01, 0x00, // .!.......G...G..
	0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x57, 0x01, 0x00, // .........G...W..
	0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, // ................
	0x00, 0x21, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x02, // .!..............
	0x00, 0x06, 0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, // ............. ..
	0x00, 0x19, 0x00, 0x09, 0x00, 0x08, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, // ................
	0x00, 0x02, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, // ................
	0x00, 0x04, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x15, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, // ................
	0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ..... ...3......
	0x00, 0x06, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x33, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, // .....;...3...4..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ..... ...6......
	0x00, 0x08, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x36, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, // .....;...6...7..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, 0x3a, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, // .........:... ..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x3a, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, // .....+...:...;..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x3a, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, // .....+...:...?..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x03, 0x00, 0x43, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, // .........C......
	0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5b, 0x00, 0x00, 0x00, 0x18, 0x26, 0xd3, // .+.......[....&.
	0x3d, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0xaa, 0xf1, 0xd2, // =+..............
	0x3d, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5d, 0x00, 0x00, 0x00, 0x39, 0x45, 0xc7, // =+.......]...9E.
	0x3d, 0x2c, 0x00, 0x06, 0x00, 0x15, 0x00, 0x00, 0x00, 0x5e, 0x00, 0x00, 0x00, 0x5b, 0x00, 0x00, // =,.......^...[..
	0x00, 0x5c, 0x00, 0x00, 0x00, 0x5d, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, // .....]...+......
	0x00, 0x64, 0x00, 0x00, 0x00, 0xec, 0x51, 0x05, 0x42, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, // .d....Q.B+......
	0x00, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x14, 0x00, 0x02, 0x00, 0x7a, 0x00, 0x00, // .w......@....z..
	0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, // .+.......~......
	0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ?+..............
	0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, // .+..............
	0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa5, 0x00, 0x00, 0x00, 0xb8, 0x1e, 0xd5, // ?+..............
	0x40, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0xcd, 0xcc, 0xcc, // @+..............
	0x3e, 0x1e, 0x00, 0x04, 0x00, 0xac, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, // >...............
	0x00, 0x20, 0x00, 0x04, 0x00, 0xad, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xac, 0x00, 0x00, // . ..............
	0x00, 0x3b, 0x00, 0x04, 0x00, 0xad, 0x00, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // .;..............
	0x00, 0x15, 0x00, 0x04, 0x00, 0xaf, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ......... ......
	0x00, 0x2b, 0x00, 0x04, 0x00, 0xaf, 0x00, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // .+..............
	0x00, 0x20, 0x00, 0x04, 0x00, 0xb1, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, // . ..............
	0x00, 0x2b, 0x00, 0x04, 0x00, 0x3a, 0x00, 0x00, 0x00, 0xbd, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, // .+...:..........
	0x00, 0x20, 0x00, 0x04, 0x00, 0xfb, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, // . ..............
	0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0xcd, 0xcc, 0x0c, // .+..............
	0x40, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x01, 0x00, 0x00, 0xcd, 0xcc, 0x8c, // @+..............
	0x3f, 0x2b, 0x00, 0x04, 0x00, 0xaf, 0x00, 0x00, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, // ?+.......:......
	0x00, 0x20, 0x00, 0x04, 0x00, 0x46, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, // . ...F..........
	0x00, 0x3b, 0x00, 0x04, 0x00, 0x46, 0x01, 0x00, 0x00, 0x47, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, // .;...F...G......
	0x00, 0x20, 0x00, 0x04, 0x00, 0x56, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, // . ...V..........
	0x00, 0x3b, 0x00, 0x04, 0x00, 0x56, 0x01, 0x00, 0x00, 0x57, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, // .;...V...W......
	0x00, 0x2c, 0x00, 0x06, 0x00, 0x15, 0x00, 0x00, 0x00, 0x79, 0x02, 0x00, 0x00, 0x64, 0x00, 0x00, // .,.......y...d..
	0x00, 0x64, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x06, 0x00, 0x15, 0x00, 0x00, // .d...d...,......
	0x00, 0x7a, 0x02, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, // .z..............
	0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7c, 0x02, 0x00, 0x00, 0xd9, 0x89, 0x9d, // .+.......|......
	0x3d, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7d, 0x02, 0x00, 0x00, 0xd9, 0x89, 0x1d, // =+.......}......
	0x3f, 0x2c, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x7e, 0x02, 0x00, 0x00, 0x03, 0x01, 0x00, // ?,.......~......
	0x00, 0x03, 0x01, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, // .....6..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, // ................
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x35, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, // .=.......5...4..
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, // .=.......8...7..
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x48, 0x01, 0x00, 0x00, 0x47, 0x01, 0x00, // .=.......H...G..
	0x00, 0xcf, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x89, 0x01, 0x00, 0x00, 0x48, 0x01, 0x00, // .............H..
	0x00, 0x8e, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x8b, 0x01, 0x00, 0x00, 0x89, 0x01, 0x00, // ................
	0x00, 0x94, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x8d, 0x01, 0x00, // ................
	0x00, 0x48, 0x01, 0x00, 0x00, 0xd0, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x8e, 0x01, 0x00, // .H..............
	0x00, 0x8d, 0x01, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x90, 0x01, 0x00, // ................
	0x00, 0x8e, 0x01, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, // ................
	0x00, 0x93, 0x01, 0x00, 0x00, 0x8b, 0x01, 0x00, 0x00, 0x90, 0x01, 0x00, 0x00, 0x0c, 0x00, 0x06, // ................
	0x00, 0x07, 0x00, 0x00, 0x00, 0x94, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, // .............B..
	0x00, 0x93, 0x01, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x95, 0x01, 0x00, // ................
	0x00, 0x94, 0x01, 0x00, 0x00, 0xa5, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // ................
	0x00, 0x96, 0x01, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x95, 0x01, 0x00, 0x00, 0x0c, 0x00, 0x08, // .....~..........
	0x00, 0x07, 0x00, 0x00, 0x00, 0x97, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, // .............+..
	0x00, 0x96, 0x01, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, // .........~...A..
	0x00, 0xb1, 0x00, 0x00, 0x00, 0x99, 0x01, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, // .............;..
	0x00, 0xb0, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9a, 0x01, 0x00, // .....=..........
	0x00, 0x99, 0x01, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x9b, 0x01, 0x00, // .....P..........
	0x00, 0x9a, 0x01, 0x00, 0x00, 0x9a, 0x01, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, // ................
	0x00, 0x9c, 0x01, 0x00, 0x00, 0x48, 0x01, 0x00, 0x00, 0x9b, 0x01, 0x00, 0x00, 0x4f, 0x00, 0x08, // .....H.......O..
	0x00, 0x15, 0x00, 0x00, 0x00, 0x14, 0x02, 0x00, 0x00, 0x9c, 0x01, 0x00, 0x00, 0x9c, 0x01, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, // ................
	0x00, 0x15, 0x00, 0x00, 0x00, 0x15, 0x02, 0x00, 0x00, 0x14, 0x02, 0x00, 0x00, 0x5e, 0x00, 0x00, // .............^..
	0x00, 0x0c, 0x00, 0x06, 0x00, 0x15, 0x00, 0x00, 0x00, 0x16, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x0a, 0x00, 0x00, 0x00, 0x15, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x15, 0x00, 0x00, // .........O......
	0x00, 0x19, 0x02, 0x00, 0x00, 0x16, 0x02, 0x00, 0x00, 0x16, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, // ................
	0x00, 0x1b, 0x02, 0x00, 0x00, 0x19, 0x02, 0x00, 0x00, 0x79, 0x02, 0x00, 0x00, 0x94, 0x00, 0x05, // .........y......
	0x00, 0x07, 0x00, 0x00, 0x00, 0x1c, 0x02, 0x00, 0x00, 0x16, 0x02, 0x00, 0x00, 0x1b, 0x02, 0x00, // ................
	0x00, 0x50, 0x00, 0x06, 0x00, 0x15, 0x00, 0x00, 0x00, 0x1e, 0x02, 0x00, 0x00, 0x1c, 0x02, 0x00, // .P..............
	0x00, 0x1c, 0x02, 0x00, 0x00, 0x1c, 0x02, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, // ................
	0x00, 0x1f, 0x02, 0x00, 0x00, 0x16, 0x02, 0x00, 0x00, 0x1e, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x07, // .............O..
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x21, 0x02, 0x00, 0x00, 0x1f, 0x02, 0x00, 0x00, 0x1f, 0x02, 0x00, // .....!..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, // .........O......
	0x00, 0x23, 0x02, 0x00, 0x00, 0x1f, 0x02, 0x00, 0x00, 0x1f, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, // .#..............
	0x00, 0x02, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x24, 0x02, 0x00, // .............$..
	0x00, 0x21, 0x02, 0x00, 0x00, 0x23, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, // .!...#...O......
	0x00, 0x26, 0x02, 0x00, 0x00, 0x1f, 0x02, 0x00, 0x00, 0x1f, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, // .&..............
	0x00, 0x01, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x27, 0x02, 0x00, // .............'..
	0x00, 0x24, 0x02, 0x00, 0x00, 0x26, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x00, // .$...&..........
	0x00, 0x28, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x27, 0x02, 0x00, // .(...........'..
	0x00, 0xf9, 0x00, 0x02, 0x00, 0xa1, 0x01, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xa1, 0x01, 0x00, // ................
	0x00, 0xf5, 0x00, 0x07, 0x00, 0x15, 0x00, 0x00, 0x00, 0x80, 0x02, 0x00, 0x00, 0x7a, 0x02, 0x00, // .............z..
	0x00, 0x05, 0x00, 0x00, 0x00, 0x88, 0x02, 0x00, 0x00, 0xf6, 0x01, 0x00, 0x00, 0xf5, 0x00, 0x07, // ................
	0x00, 0x3a, 0x00, 0x00, 0x00, 0x7f, 0x02, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, // .:.......?......
	0x00, 0xf8, 0x01, 0x00, 0x00, 0xf6, 0x01, 0x00, 0x00, 0xb1, 0x00, 0x05, 0x00, 0x7a, 0x00, 0x00, // .............z..
	0x00, 0xa5, 0x01, 0x00, 0x00, 0x7f, 0x02, 0x00, 0x00, 0xbd, 0x00, 0x00, 0x00, 0xf6, 0x00, 0x04, // ................
	0x00, 0xf9, 0x01, 0x00, 0x00, 0xf6, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, // ................
	0x00, 0xa5, 0x01, 0x00, 0x00, 0xa6, 0x01, 0x00, 0x00, 0xf9, 0x01, 0x00, 0x00, 0xf8, 0x00, 0x02, // ................
	0x00, 0xa6, 0x01, 0x00, 0x00, 0x6f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa8, 0x01, 0x00, // .....o..........
	0x00, 0x7f, 0x02, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xac, 0x01, 0x00, // ................
	0x00, 0xa8, 0x01, 0x00, 0x00, 0x7c, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // .....|...Q......
	0x00, 0xae, 0x01, 0x00, 0x00, 0x28, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, // .....(..........
	0x00, 0x07, 0x00, 0x00, 0x00, 0xaf, 0x01, 0x00, 0x00, 0xac, 0x01, 0x00, 0x00, 0xae, 0x01, 0x00, // ................
	0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb0, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x0a, 0x00, 0x00, 0x00, 0xaf, 0x01, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // ................
	0x00, 0xb4, 0x01, 0x00, 0x00, 0xa8, 0x01, 0x00, 0x00, 0x7d, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, // .........}...Q..
	0x00, 0x07, 0x00, 0x00, 0x00, 0xb6, 0x01, 0x00, 0x00, 0x28, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, // .........(......
	0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb7, 0x01, 0x00, 0x00, 0xb4, 0x01, 0x00, // ................
	0x00, 0xb6, 0x01, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb8, 0x01, 0x00, // ................
	0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0xb7, 0x01, 0x00, 0x00, 0x85, 0x00, 0x05, // ................
	0x00, 0x07, 0x00, 0x00, 0x00, 0x32, 0x02, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0xb0, 0x01, 0x00, // .....2...w......
	0x00, 0xba, 0x00, 0x05, 0x00, 0x7a, 0x00, 0x00, 0x00, 0x34, 0x02, 0x00, 0x00, 0x32, 0x02, 0x00, // .....z...4...2..
	0x00, 0x7e, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x39, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, // .~.......9......
	0x00, 0xfa, 0x00, 0x04, 0x00, 0x34, 0x02, 0x00, 0x00, 0x36, 0x02, 0x00, 0x00, 0x39, 0x02, 0x00, // .....4...6...9..
	0x00, 0xf8, 0x00, 0x02, 0x00, 0x36, 0x02, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // .....6..........
	0x00, 0x38, 0x02, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0x32, 0x02, 0x00, 0x00, 0xf9, 0x00, 0x02, // .8...w...2......
	0x00, 0x39, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x39, 0x02, 0x00, 0x00, 0xf5, 0x00, 0x07, // .9.......9......
	0x00, 0x07, 0x00, 0x00, 0x00, 0x81, 0x02, 0x00, 0x00, 0x32, 0x02, 0x00, 0x00, 0xa6, 0x01, 0x00, // .........2......
	0x00, 0x38, 0x02, 0x00, 0x00, 0x36, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, // .8...6..........
	0x00, 0x3b, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x81, 0x02, 0x00, // .;..............
	0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3c, 0x02, 0x00, 0x00, 0x7e, 0x00, 0x00, // .........<...~..
	0x00, 0x3b, 0x02, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x40, 0x02, 0x00, // .;...........@..
	0x00, 0x3b, 0x02, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, // .;...~..........
	0x00, 0x41, 0x02, 0x00, 0x00, 0x34, 0x02, 0x00, 0x00, 0x3c, 0x02, 0x00, 0x00, 0x40, 0x02, 0x00, // .A...4...<...@..
	0x00, 0x8e, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xbf, 0x01, 0x00, 0x00, 0x8b, 0x01, 0x00, // ................
	0x00, 0x41, 0x02, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x00, // .A..............
	0x00, 0x48, 0x01, 0x00, 0x00, 0xbf, 0x01, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // .H..............
	0x00, 0x47, 0x02, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0xb8, 0x01, 0x00, 0x00, 0xba, 0x00, 0x05, // .G...w..........
	0x00, 0x7a, 0x00, 0x00, 0x00, 0x49, 0x02, 0x00, 0x00, 0x47, 0x02, 0x00, 0x00, 0x7e, 0x00, 0x00, // .z...I...G...~..
	0x00, 0xf7, 0x00, 0x03, 0x00, 0x4e, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, // .....N..........
	0x00, 0x49, 0x02, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, 0x4e, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, // .I...K...N......
	0x00, 0x4b, 0x02, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4d, 0x02, 0x00, // .K...........M..
	0x00, 0x77, 0x00, 0x00, 0x00, 0x47, 0x02, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x4e, 0x02, 0x00, // .w...G.......N..
	0x00, 0xf8, 0x00, 0x02, 0x00, 0x4e, 0x02, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, // .....N..........
	0x00, 0x82, 0x02, 0x00, 0x00, 0x47, 0x02, 0x00, 0x00, 0x39, 0x02, 0x00, 0x00, 0x4d, 0x02, 0x00, // .....G...9...M..
	0x00, 0x4b, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x50, 0x02, 0x00, // .K...........P..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x82, 0x02, 0x00, 0x00, 0x83, 0x00, 0x05, // ................
	0x00, 0x07, 0x00, 0x00, 0x00, 0x51, 0x02, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x50, 0x02, 0x00, // .....Q...~...P..
	0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x55, 0x02, 0x00, 0x00, 0x50, 0x02, 0x00, // .........U...P..
	0x00, 0x7e, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x56, 0x02, 0x00, // .~...........V..
	0x00, 0x49, 0x02, 0x00, 0x00, 0x51, 0x02, 0x00, 0x00, 0x55, 0x02, 0x00, 0x00, 0x8e, 0x00, 0x05, // .I...Q...U......
	0x00, 0x0b, 0x00, 0x00, 0x00, 0xc5, 0x01, 0x00, 0x00, 0x90, 0x01, 0x00, 0x00, 0x56, 0x02, 0x00, // .............V..
	0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xc6, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00, // ................
	0x00, 0xc5, 0x01, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x43, 0x00, 0x00, 0x00, 0x5d, 0x02, 0x00, // .....V...C...]..
	0x00, 0x38, 0x00, 0x00, 0x00, 0x35, 0x00, 0x00, 0x00, 0x58, 0x00, 0x07, 0x00, 0x0e, 0x00, 0x00, // .8...5...X......
	0x00, 0x60, 0x02, 0x00, 0x00, 0x5d, 0x02, 0x00, 0x00, 0xc6, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, // .`...]..........
	0x00, 0x90, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xfb, 0x00, 0x00, 0x00, 0xcb, 0x01, 0x00, // .....A..........
	0x00, 0xae, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0e, 0x00, 0x00, // .....;...=......
	0x00, 0xcc, 0x01, 0x00, 0x00, 0xcb, 0x01, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, // .........O......
	0x00, 0xcd, 0x01, 0x00, 0x00, 0xcc, 0x01, 0x00, 0x00, 0xcc, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x01, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xce, 0x01, 0x00, // ................
	0x00, 0xc6, 0x01, 0x00, 0x00, 0xcd, 0x01, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x00, // ................
	0x00, 0xcf, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0xce, 0x01, 0x00, // ................
	0x00, 0x8e, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xd0, 0x01, 0x00, 0x00, 0xcf, 0x01, 0x00, // ................
	0x00, 0x01, 0x01, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xd2, 0x01, 0x00, // ................
	0x00, 0xd0, 0x01, 0x00, 0x00, 0x7e, 0x02, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, // .....~..........
	0x00, 0xd4, 0x01, 0x00, 0x00, 0xd2, 0x01, 0x00, 0x00, 0x97, 0x01, 0x00, 0x00, 0x51, 0x00, 0x05, // .............Q..
	0x00, 0x07, 0x00, 0x00, 0x00, 0xd6, 0x01, 0x00, 0x00, 0xd4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd8, 0x01, 0x00, 0x00, 0xd4, 0x01, 0x00, // .Q..............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd9, 0x01, 0x00, // ................
	0x00, 0xd6, 0x01, 0x00, 0x00, 0xd8, 0x01, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // .........Q......
	0x00, 0xdb, 0x01, 0x00, 0x00, 0xd4, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, // .............Q..
	0x00, 0x07, 0x00, 0x00, 0x00, 0xdd, 0x01, 0x00, 0x00, 0xd4, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xde, 0x01, 0x00, 0x00, 0xdb, 0x01, 0x00, // ................
	0x00, 0xdd, 0x01, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xdf, 0x01, 0x00, // ................
	0x00, 0xd9, 0x01, 0x00, 0x00, 0xde, 0x01, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // ................
	0x00, 0x65, 0x02, 0x00, 0x00, 0xdf, 0x01, 0x00, 0x00, 0xdf, 0x01, 0x00, 0x00, 0x83, 0x00, 0x05, // .e..............
	0x00, 0x07, 0x00, 0x00, 0x00, 0xe1, 0x01, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x65, 0x02, 0x00, // .........~...e..
	0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe2, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x31, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0xe1, 0x01, 0x00, // .1.......~......
	0x00, 0x41, 0x00, 0x06, 0x00, 0xb1, 0x00, 0x00, 0x00, 0xe3, 0x01, 0x00, 0x00, 0xae, 0x00, 0x00, // .A..............
	0x00, 0x3f, 0x00, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, // .?.......=......
	0x00, 0xe4, 0x01, 0x00, 0x00, 0xe3, 0x01, 0x00, 0x00, 0xb7, 0x00, 0x05, 0x00, 0x7a, 0x00, 0x00, // .............z..
	0x00, 0xe5, 0x01, 0x00, 0x00, 0xe4, 0x01, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, // ................
	0x00, 0xf5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xe5, 0x01, 0x00, // ................
	0x00, 0xe6, 0x01, 0x00, 0x00, 0xed, 0x01, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xe6, 0x01, 0x00, // ................
	0x00, 0x4f, 0x00, 0x08, 0x00, 0x15, 0x00, 0x00, 0x00, 0xe8, 0x01, 0x00, 0x00, 0x60, 0x02, 0x00, // .O...........`..
	0x00, 0x60, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // .`..............
	0x00, 0x8e, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00, 0xea, 0x01, 0x00, 0x00, 0xe8, 0x01, 0x00, // ................
	0x00, 0xe2, 0x01, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00, 0xec, 0x01, 0x00, // ................
	0x00, 0x80, 0x02, 0x00, 0x00, 0xea, 0x01, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xf5, 0x01, 0x00, // ................
	0x00, 0xf8, 0x00, 0x02, 0x00, 0xed, 0x01, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // .........Q......
	0x00, 0xef, 0x01, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, // .....`..........
	0x00, 0x07, 0x00, 0x00, 0x00, 0xf1, 0x01, 0x00, 0x00, 0xef, 0x01, 0x00, 0x00, 0xe2, 0x01, 0x00, // ................
	0x00, 0x50, 0x00, 0x06, 0x00, 0x15, 0x00, 0x00, 0x00, 0xf3, 0x01, 0x00, 0x00, 0xf1, 0x01, 0x00, // .P..............
	0x00, 0xf1, 0x01, 0x00, 0x00, 0xf1, 0x01, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, // ................
	0x00, 0xf4, 0x01, 0x00, 0x00, 0x80, 0x02, 0x00, 0x00, 0xf3, 0x01, 0x00, 0x00, 0xf9, 0x00, 0x02, // ................
	0x00, 0xf5, 0x01, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xf5, 0x01, 0x00, 0x00, 0xf5, 0x00, 0x07, // ................
	0x00, 0x15, 0x00, 0x00, 0x00, 0x88, 0x02, 0x00, 0x00, 0xec, 0x01, 0x00, 0x00, 0xe6, 0x01, 0x00, // ................
	0x00, 0xf4, 0x01, 0x00, 0x00, 0xed, 0x01, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xf6, 0x01, 0x00, // ................
	0x00, 0xf8, 0x00, 0x02, 0x00, 0xf6, 0x01, 0x00, 0x00, 0x80, 0x00, 0x05, 0x00, 0x3a, 0x00, 0x00, // .............:..
	0x00, 0xf8, 0x01, 0x00, 0x00, 0x7f, 0x02, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, // .........;......
	0x00, 0xa1, 0x01, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xf9, 0x01, 0x00, 0x00, 0x41, 0x00, 0x05, // .............A..
	0x00, 0xfb, 0x00, 0x00, 0x00, 0xfa, 0x01, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, // .............?..
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x0e, 0x00, 0x00, 0x00, 0xfb, 0x01, 0x00, 0x00, 0xfa, 0x01, 0x00, // .=..............
	0x00, 0x4f, 0x00, 0x08, 0x00, 0x15, 0x00, 0x00, 0x00, 0xfc, 0x01, 0x00, 0x00, 0xfb, 0x01, 0x00, // .O..............
	0x00, 0xfb, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // ................
	0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6a, 0x02, 0x00, 0x00, 0x97, 0x01, 0x00, // .........j......
	0x00, 0x97, 0x01, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00, // ................
	0x00, 0x7c, 0x02, 0x00, 0x00, 0x6a, 0x02, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, // .|...j..........
	0x00, 0x02, 0x02, 0x00, 0x00, 0xfc, 0x01, 0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0x85, 0x00, 0x05, // ................
	0x00, 0x15, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x80, 0x02, 0x00, 0x00, 0x02, 0x02, 0x00, // ................
	0x00, 0x41, 0x00, 0x06, 0x00, 0xb1, 0x00, 0x00, 0x00, 0x06, 0x02, 0x00, 0x00, 0xae, 0x00, 0x00, // .A..............
	0x00, 0x3b, 0x00, 0x00, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, // .;...:...=......
	0x00, 0x07, 0x02, 0x00, 0x00, 0x06, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // .........Q......
	0x00, 0x08, 0x02, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, // .............Q..
	0x00, 0x07, 0x00, 0x00, 0x00, 0x09, 0x02, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0a, 0x02, 0x00, 0x00, 0x04, 0x02, 0x00, // .Q..............
	0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x0b, 0x02, 0x00, // .....P..........
	0x00, 0x08, 0x02, 0x00, 0x00, 0x09, 0x02, 0x00, 0x00, 0x0a, 0x02, 0x00, 0x00, 0x07, 0x02, 0x00, // ................
	0x00, 0x3e, 0x00, 0x03, 0x00, 0x57, 0x01, 0x00, 0x00, 0x0b, 0x02, 0x00, 0x00, 0xfd, 0x00, 0x01, // .>...W..........
	0x00, 0x38, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00,                                           // .8..... .
};
static const bgfx::EmbeddedShader fs_dmd_noclip = BGFX_EMBEDDED_SHADER(fs_dmd_noclip);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of fragment shader from fs_display.sc to fs_display_dmd_noclip with options: DMD NOCLIP
static const uint8_t fs_display_dmd_noclip_mtl[5480] =
{
	0x46, 0x53, 0x48, 0x0b, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x11, 0x64, // FSH............d
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // isplayTexSampler
	0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x64, 0x69, 0x73, 0x70, 0x6c, // ...........displ
	0x61, 0x79, 0x54, 0x65, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, // ayTexTexture....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, // .......displayGl
	0x61, 0x73, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, // assSampler......
	0x00, 0x00, 0x00, 0x00, 0x13, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, // .....displayGlas
	0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // sTexture........
	0x00, 0x00, 0x11, 0x64, 0x6d, 0x64, 0x47, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x78, 0x53, 0x61, 0x6d, // ...dmdGlowTexSam
	0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x64, // pler...........d
	0x6d, 0x64, 0x47, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // mdGlowTexTexture
	0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x77, 0x5f, 0x68, 0x5f, 0x68, // ...........w_h_h
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x01, 0x30, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, // eight..0........
	0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, // vColor_Intensity
	0x12, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x76, 0x52, 0x65, 0x73, 0x5f, // ...........vRes_
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x01, 0x40, 0x00, 0x01, 0x00, // Alpha_time..@...
	0x00, 0x00, 0x00, 0x00, 0x11, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // .....staticColor
	0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x01, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // _Alpha..........
	0x16, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x6f, // .glassAmbient_Ro
	0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x01, 0x20, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // ughness.. ......
	0x00, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x10, 0x00, 0x00, 0x00, // ..displayTex....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, // .......displayGl
	0x61, 0x73, 0x73, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x64, 0x6d, // ass...........dm
	0x64, 0x47, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x78, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // dGlowTex........
	0x00, 0x00, 0xde, 0x13, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, // ......#include <
	0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, // metal_stdlib>.#i
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, // nclude <simd/sim
	0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, // d.h>..using name
	0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, // space metal;..st
	0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, // ruct _Global.{. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, //    float4 vColor
	0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // _Intensity;.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, // float4 staticCol
	0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // or_Alpha;.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, // oat4 glassAmbien
	0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x20, 0x20, 0x20, // t_Roughness;.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, //  float4 w_h_heig
	0x68, 0x74, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, // ht;.    float4 v
	0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x3b, 0x0a, // Res_Alpha_time;.
	0x7d, 0x3b, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x66, 0x6c, 0x6f, // };..constant flo
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x38, 0x37, 0x31, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x0a, // at4 _871 = {};..
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // struct xlatMtlMa
	0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // in_out.{.    flo
	0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, // at4 bgfx_FragDat
	0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, // a0 [[color(0)]];
	0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, // .};..struct xlat
	0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, // MtlMain_in.{.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, //  float2 v_texcoo
	0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, // rd0 [[user(locn0
	0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // )]];.    float2 
	0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x5b, 0x5b, 0x75, 0x73, // v_texcoord1 [[us
	0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, // er(locn1)]];.};.
	0x0a, 0x5b, 0x5b, 0x20, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, // .[[ early_fragme
	0x6e, 0x74, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x20, 0x5d, 0x5d, 0x20, 0x66, 0x72, 0x61, 0x67, // nt_tests ]] frag
	0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, // ment xlatMtlMain
	0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, // _out xlatMtlMain
	0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, // (xlatMtlMain_in 
	0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, // in [[stage_in]],
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, //  constant _Globa
	0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, // l& _mtl_u [[buff
	0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // er(0)]], texture
	0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, // 2d<float> displa
	0x79, 0x54, 0x65, 0x78, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x30, // yTex [[texture(0
	0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, // )]], texture2d<f
	0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, // loat> displayGla
	0x73, 0x73, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x31, 0x29, 0x5d, // ss [[texture(1)]
	0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, // ], texture2d<flo
	0x61, 0x74, 0x3e, 0x20, 0x64, 0x6d, 0x64, 0x47, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x78, 0x20, 0x5b, // at> dmdGlowTex [
	0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, // [texture(2)]], s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, // ampler displayTe
	0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, // xSampler [[sampl
	0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // er(0)]], sampler
	0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x53, 0x61, 0x6d, //  displayGlassSam
	0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x31, // pler [[sampler(1
	0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x64, 0x6d, 0x64, // )]], sampler dmd
	0x47, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, // GlowTexSampler [
	0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, // [sampler(2)]]).{
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, // .    xlatMtlMain
	0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, // _out out = {};. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x35, 0x31, 0x30, 0x20, 0x3d, //    float2 _510 =
	0x20, 0x28, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, //  (floor(in.v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // coord1 * _mtl_u.
	0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, // vRes_Alpha_time.
	0x78, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, // xy) + float2(0.5
	0x29, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x52, 0x65, 0x73, // )) / _mtl_u.vRes
	0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x78, 0x79, 0x3b, 0x0a, // _Alpha_time.xy;.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x38, 0x36, 0x30, 0x3b, //     float3 _860;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x28, 0x5f, 0x35, 0x31, 0x30, // .    if ((((_510
	0x2e, 0x78, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, // .x >= 0.0) && (_
	0x35, 0x31, 0x30, 0x2e, 0x79, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x26, // 510.y >= 0.0)) &
	0x26, 0x20, 0x28, 0x5f, 0x35, 0x31, 0x30, 0x2e, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x31, 0x2e, 0x30, // & (_510.x <= 1.0
	0x29, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, 0x35, 0x31, 0x30, 0x2e, 0x79, 0x20, 0x3c, 0x3d, // )) && (_510.y <=
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //  1.0)).    {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x36, 0x35, 0x35, //      float2 _655
	0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x69, 0x6e, //  = (abs(fract(in
	0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x2a, 0x20, 0x5f, // .v_texcoord1 * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, // mtl_u.vRes_Alpha
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x78, 0x79, 0x29, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, // _time.xy) - floa
	0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // t2(0.5)) - float
	0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, // 2(_mtl_u.vRes_Al
	0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x66, // pha_time.z)) + f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x52, 0x65, // loat2(_mtl_u.vRe
	0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x77, 0x29, 0x3b, // s_Alpha_time.w);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // .        float4 
	0x5f, 0x36, 0x37, 0x37, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, // _677 = displayTe
	0x78, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, // x.sample(display
	0x54, 0x65, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x35, 0x31, 0x30, // TexSampler, _510
	0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, // , level(0.0));. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x38, //        float3 _8
	0x35, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, // 57;.        do. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, //      if (_mtl_u.
	0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, // w_h_height.w != 
	0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0.0).           
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  {.             
	0x20, 0x20, 0x20, 0x5f, 0x38, 0x35, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x36, 0x37, 0x37, 0x2e, 0x78, //    _857 = _677.x
	0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, // yz * _mtl_u.vCol
	0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, // or_Intensity.xyz
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   break;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      }.         
	0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    else.        
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, 0x35, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, //       _857 = _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, // l_u.vColor_Inten
	0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x36, 0x37, 0x37, 0x2e, // sity.xyz * _677.
	0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // x;.             
	0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    break;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, //     break; // un
	0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, // reachable workar
	0x6f, 0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, // ound.        } w
	0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // hile(false);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, 0x36, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x6d, 0x74, //      _860 = (_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, // l_u.staticColor_
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x5f, 0x38, 0x35, 0x37, // Alpha.xyz + _857
	0x29, 0x20, 0x2a, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, // ) * smoothstep(0
	0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x68, // .0, _mtl_u.w_h_h
	0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x7a, 0x2c, 0x20, 0x28, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, // eight.z, (length
	0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x36, 0x35, 0x35, 0x2c, // (fast::max(_655,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x2b, //  float2(0.0))) +
	0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x69, 0x6e, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, //  fast::min(fast:
	0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x36, 0x35, 0x35, 0x2e, 0x78, 0x2c, 0x20, 0x5f, 0x36, 0x35, // :max(_655.x, _65
	0x35, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x6d, // 5.y), 0.0)) - _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, // tl_u.vRes_Alpha_
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, // time.w);.    }. 
	0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, //    else.    {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, 0x36, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, //       _860 = flo
	0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, // at3(0.0);.    }.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x37, 0x31, 0x31, 0x20, //     float4 _711 
	0x3d, 0x20, 0x64, 0x6d, 0x64, 0x47, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x78, 0x2e, 0x73, 0x61, 0x6d, // = dmdGlowTex.sam
	0x70, 0x6c, 0x65, 0x28, 0x64, 0x6d, 0x64, 0x47, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x78, 0x53, 0x61, // ple(dmdGlowTexSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, // mpler, (float2(0
	0x2e, 0x32, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, // .25) + (in.v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x2c, 0x20, // coord1 * 0.5)), 
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // level(0.0));.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x38, 0x35, 0x38, 0x3b, 0x0a, 0x20, 0x20, //  float3 _858;.  
	0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //   do.    {.     
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, //    if (_mtl_u.w_
	0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, // h_height.w != 0.
	0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, // 0).        {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, 0x35, 0x38, 0x20, 0x3d, 0x20, //          _858 = 
	0x5f, 0x37, 0x31, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // _711.xyz * _mtl_
	0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, // u.vColor_Intensi
	0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ty.xyz;.        
	0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //     break;.     
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, //    }.        els
	0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // e.        {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, 0x35, 0x38, 0x20, 0x3d, 0x20, 0x5f, //         _858 = _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, // mtl_u.vColor_Int
	0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x37, 0x31, // ensity.xyz * _71
	0x31, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1.x;.           
	0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  break;.        
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, // }.        break;
	0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, //  // unreachable 
	0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, // workaround.    }
	0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, //  while(false);. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x35, 0x36, 0x39, 0x20, 0x3d, //    float3 _569 =
	0x20, 0x5f, 0x38, 0x36, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x38, 0x35, 0x38, 0x20, 0x2a, 0x20, //  _860 + (_858 * 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, // _mtl_u.vColor_In
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // tensity.w);.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x38, 0x36, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, // float3 _861;.   
	0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, //  if (_mtl_u.w_h_
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, // height.x != 0.0)
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // .    {.        f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x37, 0x34, 0x34, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x73, // loat4 _744 = dis
	0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // playGlass.sample
	0x28, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x53, 0x61, 0x6d, // (displayGlassSam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // pler, in.v_texco
	0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, // ord0);.        _
	0x38, 0x36, 0x31, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x35, 0x36, 0x39, 0x2c, 0x20, // 861 = mix(_569, 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, // _mtl_u.glassAmbi
	0x65, 0x6e, 0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x79, // ent_Roughness.xy
	0x7a, 0x20, 0x2b, 0x20, 0x5f, 0x38, 0x35, 0x38, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // z + _858, float3
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, // (_mtl_u.glassAmb
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x77, // ient_Roughness.w
	0x20, 0x2a, 0x20, 0x5f, 0x37, 0x34, 0x34, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x37, //  * _744.w)) * _7
	0x34, 0x34, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, // 44.xyz;.    }.  
	0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //   else.    {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, 0x36, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x35, 0x36, 0x39, //      _861 = _569
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ;.    }.    floa
	0x74, 0x34, 0x20, 0x5f, 0x38, 0x36, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, // t4 _865;.    if 
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, // (_mtl_u.staticCo
	0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, 0x20, 0x3d, 0x3d, 0x20, 0x30, // lor_Alpha.w == 0
	0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .0).    {.      
	0x20, 0x20, 0x5f, 0x38, 0x36, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, //   _865 = float4(
	0x5f, 0x38, 0x36, 0x31, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // _861, 1.0);.    
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, // }.    else.    {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // .        float4 
	0x5f, 0x38, 0x36, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, // _866;.        if
	0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, //  (_mtl_u.staticC
	0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, 0x20, 0x3d, 0x3d, 0x20, // olor_Alpha.w == 
	0x31, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, // 1.0).        {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x20, 0x5f, 0x37, 0x35, 0x36, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x69, //  _756 = fast::mi
	0x6e, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x38, 0x36, 0x31, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // n(dot(_861, floa
	0x74, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x33, 0x39, 0x39, 0x35, 0x39, 0x34, // t3(0.17620399594
	0x33, 0x30, 0x36, 0x39, 0x34, 0x35, 0x38, 0x30, 0x30, 0x37, 0x38, 0x31, 0x32, 0x35, 0x2c, 0x20, // 30694580078125, 
	0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x30, 0x30, 0x32, 0x39, 0x39, 0x34, 0x35, 0x33, // 0.81298500299453
	0x37, 0x33, 0x35, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x31, // 7353515625, 0.01
	0x30, 0x38, 0x31, 0x30, 0x38, 0x39, 0x39, 0x35, 0x34, 0x38, 0x32, 0x33, 0x32, 0x35, 0x35, 0x35, // 0810899548232555
	0x33, 0x38, 0x39, 0x34, 0x30, 0x34, 0x32, 0x39, 0x36, 0x38, 0x37, 0x35, 0x29, 0x29, 0x2c, 0x20, // 389404296875)), 
	0x31, 0x30, 0x30, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1000.0);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, 0x36, 0x36, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, //      _866 = floa
	0x74, 0x34, 0x28, 0x5f, 0x38, 0x36, 0x31, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x37, 0x35, // t4(_861 * (((_75
	0x36, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // 6 * 0.25) + 1.0)
	0x20, 0x2f, 0x20, 0x28, 0x5f, 0x37, 0x35, 0x36, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, //  / (_756 + 1.0))
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // , 1.0);.        
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, // }.        else. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x38, 0x36, 0x37, //      float4 _867
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, // ;.            if
	0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, //  (_mtl_u.staticC
	0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, 0x20, 0x3d, 0x3d, 0x20, // olor_Alpha.w == 
	0x32, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 2.0).           
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  {.             
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x37, 0x37, 0x30, 0x20, 0x3d, 0x20, //    float _770 = 
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x69, 0x6e, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x38, // fast::min(dot(_8
	0x36, 0x31, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, // 61, float3(0.176
	0x32, 0x30, 0x33, 0x39, 0x39, 0x35, 0x39, 0x34, 0x33, 0x30, 0x36, 0x39, 0x34, 0x35, 0x38, 0x30, // 2039959430694580
	0x30, 0x37, 0x38, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, // 078125, 0.812985
	0x30, 0x30, 0x32, 0x39, 0x39, 0x34, 0x35, 0x33, 0x37, 0x33, 0x35, 0x33, 0x35, 0x31, 0x35, 0x36, // 0029945373535156
	0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x38, 0x39, 0x39, 0x35, // 25, 0.0108108995
	0x34, 0x38, 0x32, 0x33, 0x32, 0x35, 0x35, 0x35, 0x33, 0x38, 0x39, 0x34, 0x30, 0x34, 0x32, 0x39, // 4823255538940429
	0x36, 0x38, 0x37, 0x35, 0x29, 0x29, 0x2c, 0x20, 0x31, 0x30, 0x30, 0x30, 0x2e, 0x30, 0x29, 0x3b, // 6875)), 1000.0);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x37, 0x37, 0x38, 0x20, 0x3d, 0x20, 0x5f, //  float3 _778 = _
	0x38, 0x36, 0x31, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x37, 0x37, 0x30, 0x20, 0x2a, 0x20, // 861 * (((_770 * 
	0x30, 0x2e, 0x32, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, // 0.25) + 1.0) / (
	0x5f, 0x37, 0x37, 0x30, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // _770 + 1.0));.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x37, 0x38, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x37, 0x37, 0x38, 0x2e, // oat _781 = _778.
	0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // x;.             
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x38, 0x36, 0x32, 0x3b, 0x0a, 0x20, //    float _862;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, //                i
	0x66, 0x20, 0x28, 0x5f, 0x37, 0x38, 0x31, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, // f (_781 <= 0.003
	0x31, 0x33, 0x30, 0x38, 0x30, 0x30, 0x30, 0x39, 0x30, 0x37, 0x33, 0x30, 0x31, 0x39, 0x30, 0x32, // 1308000907301902
	0x37, 0x37, 0x30, 0x39, 0x39, 0x36, 0x30, 0x39, 0x33, 0x37, 0x35, 0x29, 0x0a, 0x20, 0x20, 0x20, // 77099609375).   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, //              {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x5f, 0x38, 0x36, 0x32, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x30, //    _862 = 12.920
	0x30, 0x30, 0x30, 0x30, 0x37, 0x36, 0x32, 0x39, 0x33, 0x39, 0x34, 0x35, 0x33, 0x31, 0x32, 0x35, // 0000762939453125
	0x20, 0x2a, 0x20, 0x5f, 0x37, 0x38, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  * _781;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          }.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, //            else.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, 0x36, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, //       _862 = (1.
	0x30, 0x35, 0x34, 0x39, 0x39, 0x39, 0x39, 0x34, 0x37, 0x35, 0x34, 0x37, 0x39, 0x31, 0x32, 0x35, // 0549999475479125
	0x39, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x5f, // 9765625 * powr(_
	0x37, 0x38, 0x31, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x31, 0x36, 0x36, 0x36, 0x36, 0x36, 0x35, 0x36, // 781, 0.416666656
	0x37, 0x33, 0x32, 0x35, 0x35, 0x39, 0x32, 0x30, 0x34, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, // 7325592041015625
	0x29, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x34, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, // )) - 0.054999999
	0x37, 0x30, 0x31, 0x39, 0x37, 0x36, 0x37, 0x37, 0x36, 0x31, 0x32, 0x33, 0x30, 0x34, 0x36, 0x38, // 7019767761230468
	0x37, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 75;.            
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     }.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x37, 0x38, 0x33, //       float _783
	0x20, 0x3d, 0x20, 0x5f, 0x37, 0x37, 0x38, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //  = _778.y;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x20, 0x5f, 0x38, 0x36, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _863;.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x37, 0x38, 0x33, 0x20, //        if (_783 
	0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x30, 0x30, 0x30, 0x39, // <= 0.00313080009
	0x30, 0x37, 0x33, 0x30, 0x31, 0x39, 0x30, 0x32, 0x37, 0x37, 0x30, 0x39, 0x39, 0x36, 0x30, 0x39, // 0730190277099609
	0x33, 0x37, 0x35, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 375).           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, 0x36, 0x33, 0x20, //            _863 
	0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x37, 0x36, 0x32, 0x39, // = 12.92000007629
	0x33, 0x39, 0x34, 0x35, 0x33, 0x31, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x37, 0x38, 0x33, 0x3b, // 39453125 * _783;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  }.             
	0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    else.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, //               _8
	0x36, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x35, 0x34, 0x39, 0x39, 0x39, 0x39, 0x34, // 63 = (1.05499994
	0x37, 0x35, 0x34, 0x37, 0x39, 0x31, 0x32, 0x35, 0x39, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x20, // 754791259765625 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x5f, 0x37, 0x38, 0x33, 0x2c, 0x20, 0x30, 0x2e, 0x34, // * powr(_783, 0.4
	0x31, 0x36, 0x36, 0x36, 0x36, 0x36, 0x35, 0x36, 0x37, 0x33, 0x32, 0x35, 0x35, 0x39, 0x32, 0x30, // 1666665673255920
	0x34, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, // 41015625)) - 0.0
	0x35, 0x34, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x30, 0x31, 0x39, 0x37, 0x36, 0x37, 0x37, // 5499999970197677
	0x36, 0x31, 0x32, 0x33, 0x30, 0x34, 0x36, 0x38, 0x37, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 6123046875;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, //             }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x37, 0x38, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x37, 0x37, 0x38, 0x2e, // oat _785 = _778.
	0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // z;.             
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x38, 0x36, 0x34, 0x3b, 0x0a, 0x20, //    float _864;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, //                i
	0x66, 0x20, 0x28, 0x5f, 0x37, 0x38, 0x35, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, // f (_785 <= 0.003
	0x31, 0x33, 0x30, 0x38, 0x30, 0x30, 0x30, 0x39, 0x30, 0x37, 0x33, 0x30, 0x31, 0x39, 0x30, 0x32, // 1308000907301902
	0x37, 0x37, 0x30, 0x39, 0x39, 0x36, 0x30, 0x39, 0x33, 0x37, 0x35, 0x29, 0x0a, 0x20, 0x20, 0x20, // 77099609375).   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, //              {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x5f, 0x38, 0x36, 0x34, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x30, //    _864 = 12.920
	0x30, 0x30, 0x30, 0x30, 0x37, 0x36, 0x32, 0x39, 0x33, 0x39, 0x34, 0x35, 0x33, 0x31, 0x32, 0x35, // 0000762939453125
	0x20, 0x2a, 0x20, 0x5f, 0x37, 0x38, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  * _785;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          }.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, //            else.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, 0x36, 0x34, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, //       _864 = (1.
	0x30, 0x35, 0x34, 0x39, 0x39, 0x39, 0x39, 0x34, 0x37, 0x35, 0x34, 0x37, 0x39, 0x31, 0x32, 0x35, // 0549999475479125
	0x39, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x5f, // 9765625 * powr(_
	0x37, 0x38, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x31, 0x36, 0x36, 0x36, 0x36, 0x36, 0x35, 0x36, // 785, 0.416666656
	0x37, 0x33, 0x32, 0x35, 0x35, 0x39, 0x32, 0x30, 0x34, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, // 7325592041015625
	0x29, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x34, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, // )) - 0.054999999
	0x37, 0x30, 0x31, 0x39, 0x37, 0x36, 0x37, 0x37, 0x36, 0x31, 0x32, 0x33, 0x30, 0x34, 0x36, 0x38, // 7019767761230468
	0x37, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 75;.            
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     }.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, 0x36, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, //       _867 = flo
	0x61, 0x74, 0x34, 0x28, 0x5f, 0x38, 0x36, 0x32, 0x2c, 0x20, 0x5f, 0x38, 0x36, 0x33, 0x2c, 0x20, // at4(_862, _863, 
	0x5f, 0x38, 0x36, 0x34, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // _864, 1.0);.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //       else.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, 0x36, 0x37, 0x20, 0x3d, 0x20, //          _867 = 
	0x5f, 0x38, 0x37, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _871;.          
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   }.            
	0x5f, 0x38, 0x36, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x38, 0x36, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, // _866 = _867;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //      }.        _
	0x38, 0x36, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x38, 0x36, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 865 = _866;.    
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, // }.    out.bgfx_F
	0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x38, 0x36, 0x35, 0x3b, // ragData0 = _865;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, // .    return out;
	0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, 0xb0, 0x00,                                                 // .}......
};
static const uint8_t fs_display_dmd_noclip_essl[7955] =
{
	0x46, 0x53, 0x48, 0x0b, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, // FSH.............
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // s.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, // arying in.precis
	0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3b, // ion highp float;
	0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // .precision highp
	0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, //  int;.#define sh
	0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adow2D(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //  _coord) texture
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // (_sampler, _coor
	0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, // d).#define shado
	0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // w2DProj(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // eProj(_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x6f, 0x75, 0x74, 0x20, 0x6d, 0x65, 0x64, 0x69, // _coord).out medi
	0x75, 0x6d, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, // ump vec4 bgfx_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // agColor;.varying
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, //  vec2 v_texcoord
	0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, // 0;.varying vec2 
	0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x3b, 0x0a, 0x76, 0x65, 0x63, // v_texcoord1;.vec
	0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // 3 instMul(vec3 _
	0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, // vec, mat3 _mtx) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, // { return ( (_vec
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // ) * (_mtx) ); }.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, // vec3 instMul(mat
	0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, // 3 _mtx, vec3 _ve
	0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, // c) { return ( (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, // mtx) * (_vec) );
	0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, //  }.vec4 instMul(
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // vec4 _vec, mat4 
	0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, // _mtx) { return (
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, //  (_vec) * (_mtx)
	0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, //  ); }.vec4 instM
	0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, // ul(mat4 _mtx, ve
	0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // c4 _vec) { retur
	0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, // n ( (_mtx) * (_v
	0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, // ec) ); }.float r
	0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, // cp(float _a) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, // eturn 1.0/_a; }.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, // vec2 rcp(vec2 _a
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // ) { return vec2(
	0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // 1.0)/_a; }.vec3 
	0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, // rcp(vec3 _a) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, // eturn vec3(1.0)/
	0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, // _a; }.vec4 rcp(v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec4 _a) { return
	0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, //  vec4(1.0)/_a; }
	0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // .vec2 vec2_splat
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // (float _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, // urn vec2(_x, _x)
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, // ; }.vec3 vec3_sp
	0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // lat(float _x) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, // return vec3(_x, 
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // _x, _x); }.vec4 
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // vec4_splat(float
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, //  _x) { return ve
	0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // c4(_x, _x, _x, _
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, // x); }.uvec2 uvec
	0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, // 2_splat(uint _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, //  { return uvec2(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, // _x, _x); }.uvec3
	0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, //  uvec3_splat(uin
	0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, // t _x) { return u
	0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, // vec3(_x, _x, _x)
	0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, // ; }.uvec4 uvec4_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // splat(uint _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, //  return uvec4(_x
	0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // , _x, _x, _x); }
	0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, // .mat4 mtxFromRow
	0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // s(vec4 _0, vec4 
	0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, // _1, vec4 _2, vec
	0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, // 4 _3).{.return t
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, // ranspose(mat4(_0
	0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, // , _1, _2, _3) );
	0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, // .}.mat4 mtxFromC
	0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, // ols(vec4 _0, vec
	0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, // 4 _1, vec4 _2, v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec4 _3).{.return
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, //  mat4(_0, _1, _2
	0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, // , _3);.}.mat3 mt
	0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // xFromRows(vec3 _
	0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // 0, vec3 _1, vec3
	0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, //  _2).{.return tr
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, // anspose(mat3(_0,
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, //  _1, _2) );.}.ma
	0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, // t3 mtxFromCols(v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, // ec3 _0, vec3 _1,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  vec3 _2).{.retu
	0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, // rn mat3(_0, _1, 
	0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // _2);.}.uniform v
	0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, // ec4 u_viewRect;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, // uniform vec4 u_v
	0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // iewTexel;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, // m mat4 u_view;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, // niform mat4 u_in
	0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // vView;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // at4 u_proj;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, // orm mat4 u_invPr
	0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // oj;.uniform mat4
	0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, //  u_viewProj;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, // form mat4 u_invV
	0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // iewProj;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, //  mat4 u_model[32
	0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // ];.uniform mat4 
	0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // u_modelView;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, // form mat4 u_mode
	0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // lViewProj;.unifo
	0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, // rm vec4 u_alphaR
	0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, // ef4;.float sqr( 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // float v).{.retur
	0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, // n v*v;.}.vec2 sq
	0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // r( vec2 v).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // urn v*v;.}.vec3 
	0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // sqr( vec3 v).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // eturn v*v;.}.vec
	0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // 3 mul_w1( vec3 v
	0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // , mat4 m).{.retu
	0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // rn v.x*m[0].xyz 
	0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // + (v.y*m[1].xyz 
	0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // + (v.z*m[2].xyz 
	0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // + m[3].xyz));.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, // float acos_appro
	0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, // x_divPI( float v
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, // ).{.float x = ab
	0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, // s(v);.if(1. - x 
	0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, // <= 0.00006103515
	0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, // 625).return (v >
	0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, // = 0.) ? 0. : 1.;
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, // .float res = ((-
	0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // 0.155972/3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, // 6433832795) * x 
	0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, // + (1.56467/3.141
	0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, // 5926535897932384
	0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, // 626433832795) ) 
	0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, // * sqrt(1. - x);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, // return (v >= 0.)
	0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, //  ? res : 1. - re
	0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, // s;.}.float atan2
	0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x20, // _approx_div2PI( 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, // float y, float x
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, // ).{.float abs_y 
	0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // = abs(y);.float 
	0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, // abs_x = abs(x);.
	0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, // if(abs_x <= 0.00
	0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, // 006103515625 && 
	0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, // abs_y <= 0.00006
	0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // 103515625).retur
	0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, // n 0.;.float r = 
	0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, // (abs_x - abs_y) 
	0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, // / (abs_x + abs_y
	0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, // );.float angle =
	0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, //  ((x < 0.) ? (3.
	0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, // /8.) : (1./8.)).
	0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, // + (0.211868 /(2.
	0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, // *3.1415926535897
	0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, // 9323846264338327
	0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, // 95) * r * r - 0.
	0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, // 987305 /(2.*3.14
	0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, // 1592653589793238
	0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x29, 0x20, // 4626433832795)) 
	0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, // * ((x < 0.) ? -r
	0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, //  : r);.return (y
	0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, //  < 0.) ? -angle 
	0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // : angle;.}.float
	0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, //  asin_approx_div
	0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, // PI( float v).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, // loat x = abs(v);
	0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, // .if(1. - x <= 0.
	0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, // 00006103515625).
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, // return (v >= 0.)
	0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x66, //  ? 0.5 : -0.5;.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, // loat res = ((-0.
	0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, // 155972/3.1415926
	0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, // 5358979323846264
	0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, // 33832795) * x + 
	0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // (1.56467/3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, // 6433832795) ) * 
	0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, // sqrt(1. - x);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // turn (v >= 0.) ?
	0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, //  0.5 - res : -0.
	0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // 5 + res;.}.vec2 
	0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, // ray_to_equirecta
	0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // ngular_uv( vec3 
	0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, // ray).{.return ve
	0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, // c2(.0.5 + atan2_
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, // approx_div2PI(ra
	0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, // y.y, ray.x),.aco
	0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, // s_approx_divPI(r
	0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ay.z));.}.float 
	0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, // InvsRGB( float c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // olor).{.if (colo
	0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, // r <= 0.04045).re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // turn color * (1.
	0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, // 0/12.92);.else.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // eturn pow(color 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, // * (1.0/1.055) + 
	0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, // (0.055/1.055), 2
	0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, // .4);.}.float Inv
	0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, // Rec709( float co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // lor).{.if (color
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  <= 0.081).retur
	0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, // n color * (1.0/4
	0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // .5);.else.return
	0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, //  pow(color * (1.
	0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, // 0/1.099) + (0.09
	0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, // 9/1.099), 1.0/0.
	0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, // 45);.}.float Inv
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, // Gamma( float col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, // or).{.return Inv
	0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // sRGB(color);.}.v
	0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, // ec3 InvGamma( ve
	0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // c3 color).{.retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, // rn vec3(InvGamma
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // (color.x),InvGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, // ma(color.y),InvG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, // amma(color.z));.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, // }.vec3 InvToneMa
	0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, // p( vec3 color).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, // .float inv_2bh =
	0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  0.5/0.25;.float
	0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, //  bh = 4.0*0.25 -
	0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, //  2.0;.return (co
	0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, // lor - 1.0 + sqrt
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, // (color*(color + 
	0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, // bh) + 1.0))*inv_
	0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, // 2bh;.}.float sRG
	0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, // B( float f).{.fl
	0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, // oat s;.if (f <= 
	0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, // 0.0031308).s = 1
	0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, // 2.92 * f;.else.s
	0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, //  = 1.055 * pow(f
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, // , 1.0/2.4) - 0.0
	0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, // 55;.return s;.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, // float Rec709( fl
	0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // oat f).{.float s
	0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, // ;.if (f <= 0.018
	0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, // ).s = 4.5 * f;.e
	0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, // lse.s = 1.099 * 
	0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, // pow(f, 0.45) - 0
	0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, // .099;.return s;.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, // }.float FBGamma(
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, //  float color).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // return sRGB(colo
	0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, // r);.}.vec2 FBGam
	0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // ma( vec2 color).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x46, 0x42, // {.return vec2(FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, // Gamma(color.x),F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, // BGamma(color.y))
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, // ;.}.vec3 FBGamma
	0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // ( vec3 color).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, // return vec3(FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, // mma(color.x),FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, // amma(color.y),FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, // Gamma(color.z));
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x32, // .}.vec3 FBGamma2
	0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, // 2( vec3 color).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x70, 0x6f, 0x77, // .return vec3(pow
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, // (color.x, 1.0/2.
	0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x2c, 0x20, // 2),pow(color.y, 
	0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, // 1.0/2.2),pow(col
	0x6f, 0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x29, 0x3b, // or.z, 1.0/2.2));
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, // .}.float FBToneM
	0x61, 0x70, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // ap( float l).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, // eturn l * ((l*0.
	0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, // 25 + 1.0) / (l +
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, //  1.0));.}.vec2 F
	0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, // BToneMap( vec2 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, // olor).{.float l 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, // = dot(color,vec2
	0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, // (0.176204+0.0108
	0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, // 109*0.5,0.812985
	0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, // +0.0108109*0.5))
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // ;.return color *
	0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, //  ((l*0.25 + 1.0)
	0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, //  / (l + 1.0));.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, // .vec3 FBToneMap(
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, //  vec3 color).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, // loat l = dot(col
	0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, // or,vec3(0.176204
	0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, // ,0.812985,0.0108
	0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, // 109));.return co
	0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, // lor * ((l*0.25 +
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, //  1.0) / (l + 1.0
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, 0x64, 0x69, 0x74, // ));.}.vec4 Addit
	0x69, 0x76, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // ive( vec4 cBase,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, //  vec4 cBlend, fl
	0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // oat percent).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, // eturn cBase + cB
	0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, // lend*percent;.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, // vec3 Screen ( ve
	0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // c3 cBase, vec3 c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // Blend).{.return 
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, // 1.0 - (1.0 - cBa
	0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, // se) * (1.0 - cBl
	0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, // end);.}.vec4 Scr
	0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // een ( vec4 cBase
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, // , vec4 cBlend).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, // .return 1.0 - (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, // .0 - cBase) * (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // .0 - cBlend);.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, // vec3 ScreenHDR (
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, //  vec3 cBase, vec
	0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 3 cBlend).{.retu
	0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, // rn max(1.0 - (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // 0 - cBase) * (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, // 0 - cBlend), vec
	0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // 3(0.,0.,0.));.}.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, // vec4 ScreenHDR (
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, //  vec4 cBase, vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 4 cBlend).{.retu
	0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, // rn max(1.0 - (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // 0 - cBase) * (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, // 0 - cBlend), vec
	0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, // 4(0.,0.,0.,0.));
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, // .}.vec4 Multiply
	0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, //  ( vec4 cBase, v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ec4 cBlend, floa
	0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // t percent).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, // urn cBase * cBle
	0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // nd*percent;.}.ve
	0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, // c4 Overlay ( vec
	0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // 4 cBase, vec4 cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, // lend).{.vec4 cNe
	0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, // w = step(0.5, cB
	0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, // ase);.cNew = mix
	0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, // (cBase*cBlend*2.
	0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, // 0, 1.0-2.0*(1.0-
	0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, // cBase)*(1.0-cBle
	0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // nd), cNew);.retu
	0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // rn cNew;.}.vec4 
	0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, // OverlayHDR ( vec
	0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // 4 cBase, vec4 cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, // lend).{.vec4 cNe
	0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, // w = step(0.5, cB
	0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, // ase);.cNew = max
	0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, // (mix(cBase*cBlen
	0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, // d*2.0, 1.0-2.0*(
	0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, // 1.0-cBase)*(1.0-
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, // cBlend), cNew), 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, // vec4(0.,0.,0.,0.
	0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, // ));.return cNew;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, // .}.vec3 cos_hemi
	0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x20, 0x76, // sphere_sample( v
	0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, // ec2 t).{.float p
	0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, // hi = t.y * (2.0*
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, // 5);.float cosThe
	0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // ta = sqrt(1.0 - 
	0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, // t.x);.float sinT
	0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, // heta = sqrt(t.x)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x7b, // ;.float sp,cp;.{
	0x73, 0x70, 0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x63, 0x70, 0x3d, 0x63, // sp=sin(phi);cp=c
	0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // os(phi);};.retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, // n vec3(cp * sinT
	0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, // heta, cosTheta, 
	0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, // sp * sinTheta);.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, // }.vec3 rotate_to
	0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x28, 0x20, 0x76, // _vector_upper( v
	0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, // ec3 vec, vec3 no
	0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // rmal).{.if(norma
	0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, // l.y > -0.99999).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, // {.float h = 1.0/
	0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, // (1.0+normal.y);.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, // float hz = h*nor
	0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, // mal.z;.float hzx
	0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, //  = hz*normal.x;.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, // return vec3(.vec
	0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, // .x * (normal.y+h
	0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, // z*normal.z) + ve
	0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, // c.y * normal.x -
	0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, //  vec.z * hzx,.ve
	0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, // c.y * normal.y -
	0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, //  vec.x * normal.
	0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // x - vec.z * norm
	0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, // al.z,.vec.y * no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, // rmal.z - vec.x *
	0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, //  hzx + vec.z * (
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // normal.y+h*norma
	0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, // l.x*normal.x));.
	0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, // }.else return -v
	0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, // ec;.}.uniform sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, // mpler2D displayT
	0x65, 0x78, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, // ex;.uniform samp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, // ler2D displayGla
	0x73, 0x73, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // ss;.uniform vec4
	0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, //  vColor_Intensit
	0x79, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // y;.uniform vec4 
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, // staticColor_Alph
	0x61, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // a;.uniform vec4 
	0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x6f, 0x75, // glassAmbient_Rou
	0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // ghness;.uniform 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x3b, // vec4 w_h_height;
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x54, 0x6f, // .vec3 ReinhardTo
	0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // neMap(vec3 color
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x6d, 0x69, // ).{.float l = mi
	0x6e, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x76, 0x65, 0x63, // n(dot(color, vec
	0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x20, 0x30, 0x2e, 0x38, 0x31, // 3(0.176204, 0.81
	0x32, 0x39, 0x38, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, // 2985, 0.0108109)
	0x29, 0x2c, 0x20, 0x31, 0x30, 0x30, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // ), 1000.0);.retu
	0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x20, 0x2a, // rn color * ((l *
	0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, //  0.25 + 1.0) / (
	0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, // l + 1.0));.}.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, // form vec4 vRes_A
	0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // lpha_time;.unifo
	0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x64, 0x6d, 0x64, // rm sampler2D dmd
	0x47, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x78, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x75, // GlowTex;.float u
	0x64, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x6f, 0x78, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x70, // dRoundBox(vec2 p
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // , float b, float
	0x20, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x71, 0x20, 0x3d, 0x20, 0x61, //  r).{.vec2 q = a
	0x62, 0x73, 0x28, 0x70, 0x29, 0x20, 0x2d, 0x20, 0x62, 0x20, 0x2b, 0x20, 0x72, 0x3b, 0x0a, 0x72, // bs(p) - b + r;.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x28, 0x6d, 0x61, 0x78, // eturn length(max
	0x28, 0x71, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x6d, 0x69, 0x6e, 0x28, // (q, 0.0)) + min(
	0x6d, 0x61, 0x78, 0x28, 0x71, 0x2e, 0x78, 0x2c, 0x20, 0x71, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x30, // max(q.x, q.y), 0
	0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x72, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // .0) - r;.}.vec3 
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x6d, 0x64, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, // sampleDmd(vec3 s
	0x61, 0x6d, 0x70, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x77, 0x5f, 0x68, 0x5f, // amp).{.if ((w_h_
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, // height.w != 0.0)
	0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x2e, 0x72, 0x67, // ).return samp.rg
	0x62, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, // b * (vColor_Inte
	0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, // nsity.rgb);.else
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x2e, 0x72, 0x20, 0x2a, // .return samp.r *
	0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, //  (vColor_Intensi
	0x74, 0x79, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, // ty.rgb);.}.void 
	0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x75, // main().{.vec3 lu
	0x6d, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, // m = vec3_splat(0
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x6e, 0x65, 0x61, 0x72, 0x65, 0x73, // .0);.vec2 neares
	0x74, 0x20, 0x3d, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, // t = (floor(v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, // coord1 * (vRes_A
	0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x78, 0x79, 0x29, 0x29, 0x20, 0x2b, // lpha_time.xy)) +
	0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x35, 0x29, //  vec2_splat(0.5)
	0x29, 0x20, 0x2f, 0x20, 0x28, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, // ) / (vRes_Alpha_
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x78, 0x79, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x6e, // time.xy);.if ((n
	0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x78, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, // earest.x >= 0.0)
	0x20, 0x26, 0x26, 0x20, 0x28, 0x6e, 0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x79, 0x20, 0x3e, //  && (nearest.y >
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x6e, 0x65, 0x61, 0x72, 0x65, // = 0.0) && (neare
	0x73, 0x74, 0x2e, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, // st.x <= 1.0) && 
	0x28, 0x6e, 0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x31, 0x2e, // (nearest.y <= 1.
	0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x70, 0x6f, 0x73, 0x20, 0x3d, // 0)).{.vec2 pos =
	0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, //  fract(v_texcoor
	0x64, 0x31, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, // d1 * (vRes_Alpha
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x78, 0x79, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, // _time.xy)) - vec
	0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x66, 0x6c, // 2_splat(0.5);.fl
	0x6f, 0x61, 0x74, 0x20, 0x73, 0x64, 0x66, 0x20, 0x3d, 0x20, 0x75, 0x64, 0x52, 0x6f, 0x75, 0x6e, // oat sdf = udRoun
	0x64, 0x42, 0x6f, 0x78, 0x28, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x28, 0x76, 0x52, 0x65, 0x73, 0x5f, // dBox(pos, (vRes_
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x7a, 0x29, 0x2c, 0x20, 0x28, // Alpha_time.z), (
	0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, // vRes_Alpha_time.
	0x77, 0x29, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x6e, 0x65, 0x72, // w));.float inner
	0x20, 0x3d, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, //  = smoothstep(0.
	0x30, 0x2c, 0x20, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x7a, // 0, (w_h_height.z
	0x29, 0x2c, 0x20, 0x73, 0x64, 0x66, 0x29, 0x3b, 0x0a, 0x6c, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x69, // ), sdf);.lum = i
	0x6e, 0x6e, 0x65, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, // nner * ((staticC
	0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x20, // olor_Alpha.rgb) 
	0x2b, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x6d, 0x64, 0x28, 0x74, 0x65, 0x78, 0x74, // + sampleDmd(text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, // ureLod(displayTe
	0x78, 0x2c, 0x20, 0x6e, 0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, // x, nearest, 0.0)
	0x2e, 0x72, 0x67, 0x62, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, // .rgb));.}.vec3 g
	0x6c, 0x6f, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x6d, 0x64, 0x28, // low = sampleDmd(
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x64, 0x6d, 0x64, 0x47, 0x6c, // textureLod(dmdGl
	0x6f, 0x77, 0x54, 0x65, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x32, 0x35, // owTex, vec2(0.25
	0x2c, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2a, 0x20, // , 0.25) + 0.5 * 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, // vec2(v_texcoord1
	0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // .x, 1.0 - v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x72, // oord1.y), 0.0).r
	0x67, 0x62, 0x29, 0x3b, 0x0a, 0x6c, 0x75, 0x6d, 0x20, 0x2b, 0x3d, 0x20, 0x28, 0x76, 0x43, 0x6f, // gb);.lum += (vCo
	0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x29, // lor_Intensity.w)
	0x20, 0x2a, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x77, 0x5f, //  * glow;.if ((w_
	0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, // h_height.x != 0.
	0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, // 0)).{.vec4 glass
	0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x64, 0x69, 0x73, 0x70, 0x6c, //  = texture(displ
	0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // ayGlass, v_texco
	0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x6c, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, // ord0);.lum = mix
	0x28, 0x6c, 0x75, 0x6d, 0x2c, 0x20, 0x28, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, // (lum, ((glassAmb
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x72, // ient_Roughness.r
	0x67, 0x62, 0x29, 0x20, 0x2b, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x29, 0x2c, 0x20, 0x28, 0x67, 0x6c, // gb) + glow), (gl
	0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, // assAmbient_Rough
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x2e, // ness.w) * glass.
	0x61, 0x29, 0x20, 0x2a, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, // a) * glass.rgb;.
	0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, // }.if ((staticCol
	0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x30, // or_Alpha.w) == 0
	0x2e, 0x30, 0x29, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, // .0).bgfx_FragCol
	0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x6c, 0x75, 0x6d, 0x2c, 0x20, 0x31, // or = vec4(lum, 1
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x73, // .0);.else if ((s
	0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, // taticColor_Alpha
	0x2e, 0x77, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x62, 0x67, 0x66, 0x78, // .w) == 1.0).bgfx
	0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, // _FragColor = vec
	0x34, 0x28, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, // 4(ReinhardToneMa
	0x70, 0x28, 0x6c, 0x75, 0x6d, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x65, 0x6c, // p(lum), 1.0);.el
	0x73, 0x65, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, // se if ((staticCo
	0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, 0x29, 0x20, 0x3d, 0x3d, 0x20, // lor_Alpha.w) == 
	0x32, 0x2e, 0x30, 0x29, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, // 2.0).bgfx_FragCo
	0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, // lor = vec4(FBGam
	0x6d, 0x61, 0x28, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x6e, 0x65, 0x4d, // ma(ReinhardToneM
	0x61, 0x70, 0x28, 0x6c, 0x75, 0x6d, 0x29, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // ap(lum)), 1.0);.
	0x7d, 0x0a, 0x00,                                                                               // }..
};
static const uint8_t fs_display_dmd_noclip_glsl[8321] =
{
	0x46, 0x53, 0x48, 0x0b, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6e, 0x20, // FSH...........n 
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x6f, // ..#version 440.o
	0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, // ut vec4 bgfx_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // gColor;.#define 
	0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x62, 0x67, 0x66, // gl_FragColor bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x0a, 0x23, 0x64, 0x65, 0x66, // x_FragColor.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x20, 0x20, // ine texture2D   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, //        texture.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // Lod       textur
	0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, // eLod.#define tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ture2DGrad      
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, // textureGrad.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, // ine texture2DPro
	0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, // jLod   texturePr
	0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // ojLod.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, // xture2DProjGrad 
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, //  textureProjGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // CubeLod     text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, // ureLod.#define t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, // extureCubeGrad  
	0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, //   textureGrad.#d
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, // efine texture3D 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //          texture
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, 0x65, 0x78, 0x74, // 2DLodOffset text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, // ureLodOffset.#de
	0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, // fine attribute i
	0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // n.#define varyin
	0x67, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, // g in.#define bgf
	0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // xShadow2D(_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, // er, _coord)     
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // vec4_splat(textu
	0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // re(_sampler, _co
	0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, // ord) ).#define b
	0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, // gfxShadow2DProj(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, // ) vec4_splat(tex
	0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // tureProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x76, 0x61, 0x72, // r, _coord) ).var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // ying vec2 v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, // oord0;.varying v
	0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x3b, // ec2 v_texcoord1;
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, // .vec3 instMul(ve
	0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, // c3 _vec, mat3 _m
	0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, // tx) { return ( (
	0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, // _vec) * (_mtx) )
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, // ; }.vec3 instMul
	0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // (mat3 _mtx, vec3
	0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _vec) { return 
	0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, // ( (_mtx) * (_vec
	0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, // ) ); }.vec4 inst
	0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, // Mul(vec4 _vec, m
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // at4 _mtx) { retu
	0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, // rn ( (_vec) * (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, // mtx) ); }.vec4 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, // nstMul(mat4 _mtx
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, // , vec4 _vec) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, // eturn ( (_mtx) *
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, //  (_vec) ); }.flo
	0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, // at rcp(float _a)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, //  { return 1.0/_a
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, // ; }.vec2 rcp(vec
	0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // 2 _a) { return v
	0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // ec2(1.0)/_a; }.v
	0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, // ec3 rcp(vec3 _a)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, //  { return vec3(1
	0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, // .0)/_a; }.vec4 r
	0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // cp(vec4 _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, // turn vec4(1.0)/_
	0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, // a; }.vec2 vec2_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // plat(float _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, //  return vec2(_x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, //  _x); }.vec3 vec
	0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, // 3_splat(float _x
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // ) { return vec3(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // _x, _x, _x); }.v
	0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, // ec4 vec4_splat(f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // loat _x) { retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // n vec4(_x, _x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, // x, _x); }.uvec2 
	0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec2_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, //  _x) { return uv
	0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, // ec2(_x, _x); }.u
	0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // vec3 uvec3_splat
	0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // (uint _x) { retu
	0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // rn uvec3(_x, _x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, //  _x); }.uvec4 uv
	0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, // ec4_splat(uint _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, // x) { return uvec
	0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // 4(_x, _x, _x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, // ); }.mat4 mtxFro
	0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, // mRows(vec4 _0, v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, // ec4 _1, vec4 _2,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  vec4 _3).{.retu
	0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, // rn transpose(mat
	0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, // 4(_0, _1, _2, _3
	0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, // ) );.}.mat4 mtxF
	0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, // romCols(vec4 _0,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, //  vec4 _1, vec4 _
	0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 2, vec4 _3).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, // turn mat4(_0, _1
	0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, // , _2, _3);.}.mat
	0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, // 3 mtxFromRows(ve
	0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, // c3 _0, vec3 _1, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // vec3 _2).{.retur
	0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, // n transpose(mat3
	0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, // (_0, _1, _2) );.
	0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, // }.mat3 mtxFromCo
	0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // ls(vec3 _0, vec3
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, //  _1, vec3 _2).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, // return mat3(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // _1, _2);.}.unifo
	0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, // rm vec4 u_viewRe
	0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // ct;.uniform vec4
	0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, //  u_viewTexel;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // iform mat4 u_vie
	0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // w;.uniform mat4 
	0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // u_invView;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, // rm mat4 u_proj;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, // uniform mat4 u_i
	0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // nvProj;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, // mat4 u_viewProj;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // invViewProj;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, // form mat4 u_mode
	0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // l[32];.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, // at4 u_modelView;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, // modelViewProj;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, // niform vec4 u_al
	0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // phaRef4;.float s
	0x71, 0x72, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // qr( float v).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // eturn v*v;.}.vec
	0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, // 2 sqr( vec2 v).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // .return v*v;.}.v
	0x65, 0x63, 0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, // ec3 sqr( vec3 v)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, // .{.return v*v;.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x20, 0x76, 0x65, // .vec3 mul_w1( ve
	0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, // c3 v, mat4 m).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, // return v.x*m[0].
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, // xyz + (v.y*m[1].
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, // xyz + (v.z*m[2].
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, // xyz + m[3].xyz))
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, // ;.}.float acos_a
	0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, // pprox_divPI( flo
	0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, // at v).{.float x 
	0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, // = abs(v);.if(1. 
	0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, // - x <= 0.0000610
	0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 3515625).return 
	0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, // (v >= 0.) ? 0. :
	0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, //  1.;.float res =
	0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, //  ((-0.155972/3.1
	0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, // 4159265358979323
	0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, // 84626433832795) 
	0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, // * x + (1.56467/3
	0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, // .141592653589793
	0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, // 2384626433832795
	0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, // ) ) * sqrt(1. - 
	0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, // x);.return (v >=
	0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, //  0.) ? res : 1. 
	0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, // - res;.}.float a
	0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, // tan2_approx_div2
	0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // PI( float y, flo
	0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, // at x).{.float ab
	0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, // s_y = abs(y);.fl
	0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, // oat abs_x = abs(
	0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, // x);.if(abs_x <= 
	0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, // 0.00006103515625
	0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, //  && abs_y <= 0.0
	0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, // 0006103515625).r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // eturn 0.;.float 
	0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, // r = (abs_x - abs
	0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, // _y) / (abs_x + a
	0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, // bs_y);.float ang
	0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // le = ((x < 0.) ?
	0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, //  (3./8.) : (1./8
	0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, // .)).+ (0.211868 
	0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, // /(2.*3.141592653
	0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, // 5897932384626433
	0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, // 832795) * r * r 
	0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, // - 0.987305 /(2.*
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, // 5)) * ((x < 0.) 
	0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // ? -r : r);.retur
	0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, // n (y < 0.) ? -an
	0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // gle : angle;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, // loat asin_approx
	0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, // _divPI( float v)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, // .{.float x = abs
	0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, // (v);.if(1. - x <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, // = 0.000061035156
	0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, // 25).return (v >=
	0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, //  0.) ? 0.5 : -0.
	0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, // 5;.float res = (
	0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, // (-0.155972/3.141
	0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, // 5926535897932384
	0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, // 626433832795) * 
	0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, // x + (1.56467/3.1
	0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, // 4159265358979323
	0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, // 84626433832795) 
	0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, // ) * sqrt(1. - x)
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, // ;.return (v >= 0
	0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, // .) ? 0.5 - res :
	0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, //  -0.5 + res;.}.v
	0x65, 0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, // ec2 ray_to_equir
	0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x20, 0x76, // ectangular_uv( v
	0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // ec3 ray).{.retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, // n vec2(.0.5 + at
	0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, // an2_approx_div2P
	0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, // I(ray.y, ray.x),
	0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, // .acos_approx_div
	0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // PI(ray.z));.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, // oat InvsRGB( flo
	0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, // at color).{.if (
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, // color <= 0.04045
	0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // ).return color *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, //  (1.0/12.92);.el
	0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, // se.return pow(co
	0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, // lor * (1.0/1.055
	0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, // ) + (0.055/1.055
	0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ), 2.4);.}.float
	0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, //  InvRec709( floa
	0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, // t color).{.if (c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, // olor <= 0.081).r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, // eturn color * (1
	0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, // .0/4.5);.else.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // turn pow(color *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, //  (1.0/1.099) + (
	0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, // 0.099/1.099), 1.
	0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0/0.45);.}.float
	0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  InvGamma( float
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  color).{.return
	0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, //  InvsRGB(color);
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, // .}.vec3 InvGamma
	0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // ( vec3 color).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, // return vec3(InvG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, // amma(color.x),In
	0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, // vGamma(color.y),
	0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, // InvGamma(color.z
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, // ));.}.vec3 InvTo
	0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // neMap( vec3 colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, // r).{.float inv_2
	0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x66, // bh = 0.5/0.25;.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, // loat bh = 4.0*0.
	0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 25 - 2.0;.return
	0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, //  (color - 1.0 + 
	0x73, 0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // sqrt(color*(colo
	0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, // r + bh) + 1.0))*
	0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // inv_2bh;.}.float
	0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, //  sRGB( float f).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, // {.float s;.if (f
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, //  <= 0.0031308).s
	0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, //  = 12.92 * f;.el
	0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, // se.s = 1.055 * p
	0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, // ow(f, 1.0/2.4) -
	0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, //  0.055;.return s
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, // ;.}.float Rec709
	0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // ( float f).{.flo
	0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, // at s;.if (f <= 0
	0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, // .018).s = 4.5 * 
	0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, // f;.else.s = 1.09
	0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, // 9 * pow(f, 0.45)
	0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  - 0.099;.return
	0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, //  s;.}.float FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // mma( float color
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, // ).{.return sRGB(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, // color);.}.vec2 F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, // BGamma( vec2 col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // or).{.return vec
	0x32, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // 2(FBGamma(color.
	0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // x),FBGamma(color
	0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, // .y));.}.vec3 FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // amma( vec3 color
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // ).{.return vec3(
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, // FBGamma(color.x)
	0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, // ,FBGamma(color.y
	0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // ),FBGamma(color.
	0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, // z));.}.vec3 FBGa
	0x6d, 0x6d, 0x61, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // mma22( vec3 colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, // r).{.return vec3
	0x28, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, // (pow(color.x, 1.
	0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // 0/2.2),pow(color
	0x2e, 0x79, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, // .y, 1.0/2.2),pow
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, // (color.z, 1.0/2.
	0x32, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, // 2));.}.float FBT
	0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, // oneMap( float l)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, // .{.return l * ((
	0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, // l*0.25 + 1.0) / 
	0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // (l + 1.0));.}.ve
	0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, // c2 FBToneMap( ve
	0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // c2 color).{.floa
	0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, // t l = dot(color,
	0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, // vec2(0.176204+0.
	0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, // 0108109*0.5,0.81
	0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, // 2985+0.0108109*0
	0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, // .5));.return col
	0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, // or * ((l*0.25 + 
	0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // 1.0) / (l + 1.0)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, // );.}.vec3 FBTone
	0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // Map( vec3 color)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // .{.float l = dot
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, // (color,vec3(0.17
	0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, // 6204,0.812985,0.
	0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // 0108109));.retur
	0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, // n color * ((l*0.
	0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, // 25 + 1.0) / (l +
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, //  1.0));.}.vec4 A
	0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // dditive( vec4 cB
	0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // ase, vec4 cBlend
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, // , float percent)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, // .{.return cBase 
	0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, // + cBlend*percent
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, // ;.}.vec3 Screen 
	0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, // ( vec3 cBase, ve
	0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // c3 cBlend).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // urn 1.0 - (1.0 -
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, //  cBase) * (1.0 -
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, //  cBlend);.}.vec4
	0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, //  Screen ( vec4 c
	0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // Base, vec4 cBlen
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, // d).{.return 1.0 
	0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, // - (1.0 - cBase) 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // * (1.0 - cBlend)
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, // ;.}.vec3 ScreenH
	0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // DR ( vec3 cBase,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, //  vec3 cBlend).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // return max(1.0 -
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, //  (1.0 - cBase) *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, //  (1.0 - cBlend),
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, //  vec3(0.,0.,0.))
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, // ;.}.vec4 ScreenH
	0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // DR ( vec4 cBase,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, //  vec4 cBlend).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // return max(1.0 -
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, //  (1.0 - cBase) *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, //  (1.0 - cBlend),
	0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, //  vec4(0.,0.,0.,0
	0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, // .));.}.vec4 Mult
	0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, // iply ( vec4 cBas
	0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, // e, vec4 cBlend, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, // float percent).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, // .return cBase * 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, // cBlend*percent;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, // }.vec4 Overlay (
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, //  vec4 cBase, vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, // 4 cBlend).{.vec4
	0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, //  cNew = step(0.5
	0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, // , cBase);.cNew =
	0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, //  mix(cBase*cBlen
	0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, // d*2.0, 1.0-2.0*(
	0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, // 1.0-cBase)*(1.0-
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, // cBlend), cNew);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // return cNew;.}.v
	0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, // ec4 OverlayHDR (
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, //  vec4 cBase, vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, // 4 cBlend).{.vec4
	0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, //  cNew = step(0.5
	0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, // , cBase);.cNew =
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, //  max(mix(cBase*c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, // Blend*2.0, 1.0-2
	0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, // .0*(1.0-cBase)*(
	0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, // 1.0-cBlend), cNe
	0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, // w), vec4(0.,0.,0
	0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, // .,0.));.return c
	0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, // New;.}.vec3 cos_
	0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // hemisphere_sampl
	0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // e( vec2 t).{.flo
	0x61, 0x74, 0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, // at phi = t.y * (
	0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, // 2.0*3.1415926535
	0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, // 8979323846264338
	0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, // 32795);.float co
	0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, // sTheta = sqrt(1.
	0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 0 - t.x);.float 
	0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // sinTheta = sqrt(
	0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, // t.x);.float sp,c
	0x70, 0x3b, 0x0a, 0x7b, 0x73, 0x70, 0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, // p;.{sp=sin(phi);
	0x63, 0x70, 0x3d, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, 0x3b, 0x0a, 0x72, // cp=cos(phi);};.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, // eturn vec3(cp * 
	0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, // sinTheta, cosThe
	0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, // ta, sp * sinThet
	0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, // a);.}.vec3 rotat
	0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, // e_to_vector_uppe
	0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x76, 0x65, 0x63, // r( vec3 vec, vec
	0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, // 3 normal).{.if(n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, // ormal.y > -0.999
	0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, // 99).{.float h = 
	0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // 1.0/(1.0+normal.
	0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, // y);.float hz = h
	0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // *normal.z;.float
	0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, //  hzx = hz*normal
	0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // .x;.return vec3(
	0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // .vec.x * (normal
	0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, // .y+hz*normal.z) 
	0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // + vec.y * normal
	0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, // .x - vec.z * hzx
	0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // ,.vec.y * normal
	0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, // .y - vec.x * nor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, // mal.x - vec.z * 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, // normal.z,.vec.y 
	0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, // * normal.z - vec
	0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, // .x * hzx + vec.z
	0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, //  * (normal.y+h*n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // ormal.x*normal.x
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // ));.}.else retur
	0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // n -vec;.}.unifor
	0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x64, 0x69, 0x73, 0x70, // m sampler2D disp
	0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // layTex;.uniform 
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, // sampler2D displa
	0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // yGlass;.uniform 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, // vec4 vColor_Inte
	0x6e, 0x73, 0x69, 0x74, 0x79, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // nsity;.uniform v
	0x65, 0x63, 0x34, 0x20, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, // ec4 staticColor_
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // Alpha;.uniform v
	0x65, 0x63, 0x34, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, // ec4 glassAmbient
	0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // _Roughness;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, // orm vec4 w_h_hei
	0x67, 0x68, 0x74, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, // ght;.vec3 Reinha
	0x72, 0x64, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // rdToneMap(vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, // olor).{.float l 
	0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, // = min(dot(color,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x20, //  vec3(0.176204, 
	0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, // 0.812985, 0.0108
	0x31, 0x30, 0x39, 0x29, 0x29, 0x2c, 0x20, 0x31, 0x30, 0x30, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // 109)), 1000.0);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, // return color * (
	0x28, 0x6c, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // (l * 0.25 + 1.0)
	0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, //  / (l + 1.0));.}
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x52, // .uniform vec4 vR
	0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x3b, 0x0a, 0x75, // es_Alpha_time;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // niform sampler2D
	0x20, 0x64, 0x6d, 0x64, 0x47, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x78, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, //  dmdGlowTex;.flo
	0x61, 0x74, 0x20, 0x75, 0x64, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x6f, 0x78, 0x28, 0x76, 0x65, // at udRoundBox(ve
	0x63, 0x32, 0x20, 0x70, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x2c, 0x20, 0x66, // c2 p, float b, f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x71, // loat r).{.vec2 q
	0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x70, 0x29, 0x20, 0x2d, 0x20, 0x62, 0x20, 0x2b, 0x20, //  = abs(p) - b + 
	0x72, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, // r;.return length
	0x28, 0x6d, 0x61, 0x78, 0x28, 0x71, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, // (max(q, 0.0)) + 
	0x6d, 0x69, 0x6e, 0x28, 0x6d, 0x61, 0x78, 0x28, 0x71, 0x2e, 0x78, 0x2c, 0x20, 0x71, 0x2e, 0x79, // min(max(q.x, q.y
	0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x72, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // ), 0.0) - r;.}.v
	0x65, 0x63, 0x33, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x6d, 0x64, 0x28, 0x76, 0x65, // ec3 sampleDmd(ve
	0x63, 0x33, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, // c3 samp).{.if ((
	0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, // w_h_height.w != 
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x61, 0x6d, // 0.0)).return sam
	0x70, 0x2e, 0x72, 0x67, 0x62, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, // p.rgb * (vColor_
	0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, // Intensity.rgb);.
	0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x61, 0x6d, 0x70, // else.return samp
	0x2e, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, // .r * (vColor_Int
	0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // ensity.rgb);.}.v
	0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, // oid main().{.vec
	0x33, 0x20, 0x6c, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, // 3 lum = vec3_spl
	0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x6e, 0x65, // at(0.0);.vec2 ne
	0x61, 0x72, 0x65, 0x73, 0x74, 0x20, 0x3d, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x76, // arest = (floor(v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x52, // _texcoord1 * (vR
	0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x78, 0x79, // es_Alpha_time.xy
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // )) + vec2_splat(
	0x30, 0x2e, 0x35, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, // 0.5)) / (vRes_Al
	0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x78, 0x79, 0x29, 0x3b, 0x0a, 0x69, 0x66, // pha_time.xy);.if
	0x20, 0x28, 0x28, 0x6e, 0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x78, 0x20, 0x3e, 0x3d, 0x20, //  ((nearest.x >= 
	0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x6e, 0x65, 0x61, 0x72, 0x65, 0x73, 0x74, // 0.0) && (nearest
	0x2e, 0x79, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x6e, // .y >= 0.0) && (n
	0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x29, // earest.x <= 1.0)
	0x20, 0x26, 0x26, 0x20, 0x28, 0x6e, 0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x79, 0x20, 0x3c, //  && (nearest.y <
	0x3d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x70, // = 1.0)).{.vec2 p
	0x6f, 0x73, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, // os = fract(v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, // coord1 * (vRes_A
	0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x78, 0x79, 0x29, 0x29, 0x20, 0x2d, // lpha_time.xy)) -
	0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x35, 0x29, //  vec2_splat(0.5)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x64, 0x66, 0x20, 0x3d, 0x20, 0x75, 0x64, // ;.float sdf = ud
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x6f, 0x78, 0x28, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x28, 0x76, // RoundBox(pos, (v
	0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x7a, // Res_Alpha_time.z
	0x29, 0x2c, 0x20, 0x28, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, // ), (vRes_Alpha_t
	0x69, 0x6d, 0x65, 0x2e, 0x77, 0x29, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, // ime.w));.float i
	0x6e, 0x6e, 0x65, 0x72, 0x20, 0x3d, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, // nner = smoothste
	0x70, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, // p(0.0, (w_h_heig
	0x68, 0x74, 0x2e, 0x7a, 0x29, 0x2c, 0x20, 0x73, 0x64, 0x66, 0x29, 0x3b, 0x0a, 0x6c, 0x75, 0x6d, // ht.z), sdf);.lum
	0x20, 0x3d, 0x20, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x73, 0x74, 0x61, //  = inner * ((sta
	0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, // ticColor_Alpha.r
	0x67, 0x62, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x6d, 0x64, 0x28, // gb) + sampleDmd(
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x64, 0x69, 0x73, 0x70, 0x6c, // textureLod(displ
	0x61, 0x79, 0x54, 0x65, 0x78, 0x2c, 0x20, 0x6e, 0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x2c, 0x20, // ayTex, nearest, 
	0x30, 0x2e, 0x30, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // 0.0).rgb));.}.ve
	0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // c3 glow = sample
	0x44, 0x6d, 0x64, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x64, // Dmd(textureLod(d
	0x6d, 0x64, 0x47, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // mdGlowTex, vec2(
	0x30, 0x2e, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, // 0.25, 0.25) + 0.
	0x35, 0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // 5 * vec2(v_texco
	0x6f, 0x72, 0x64, 0x31, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x76, 0x5f, // ord1.x, 1.0 - v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x30, 0x2e, // texcoord1.y), 0.
	0x30, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x6c, 0x75, 0x6d, 0x20, 0x2b, 0x3d, 0x20, // 0).rgb);.lum += 
	0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, // (vColor_Intensit
	0x79, 0x2e, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x3b, 0x0a, 0x69, 0x66, 0x20, // y.w) * glow;.if 
	0x28, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x78, 0x20, 0x21, // ((w_h_height.x !
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x67, // = 0.0)).{.vec4 g
	0x6c, 0x61, 0x73, 0x73, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x64, // lass = texture(d
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x2c, 0x20, 0x76, 0x5f, 0x74, // isplayGlass, v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x6c, 0x75, 0x6d, 0x20, 0x3d, // excoord0);.lum =
	0x20, 0x6d, 0x69, 0x78, 0x28, 0x6c, 0x75, 0x6d, 0x2c, 0x20, 0x28, 0x28, 0x67, 0x6c, 0x61, 0x73, //  mix(lum, ((glas
	0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, // sAmbient_Roughne
	0x73, 0x73, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x20, 0x2b, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x29, 0x2c, // ss.rgb) + glow),
	0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, //  (glassAmbient_R
	0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x67, 0x6c, // oughness.w) * gl
	0x61, 0x73, 0x73, 0x2e, 0x61, 0x29, 0x20, 0x2a, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x72, // ass.a) * glass.r
	0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x73, 0x74, 0x61, 0x74, 0x69, // gb;.}.if ((stati
	0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, 0x29, 0x20, // cColor_Alpha.w) 
	0x3d, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, // == 0.0).gl_FragC
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x6c, 0x75, 0x6d, 0x2c, // olor = vec4(lum,
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x69, 0x66, 0x20, 0x28, //  1.0);.else if (
	0x28, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, // (staticColor_Alp
	0x68, 0x61, 0x2e, 0x77, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x67, 0x6c, // ha.w) == 1.0).gl
	0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, // _FragColor = vec
	0x34, 0x28, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, // 4(ReinhardToneMa
	0x70, 0x28, 0x6c, 0x75, 0x6d, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x65, 0x6c, // p(lum), 1.0);.el
	0x73, 0x65, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, // se if ((staticCo
	0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, 0x29, 0x20, 0x3d, 0x3d, 0x20, // lor_Alpha.w) == 
	0x32, 0x2e, 0x30, 0x29, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, // 2.0).gl_FragColo
	0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, // r = vec4(FBGamma
	0x28, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, // (ReinhardToneMap
	0x28, 0x6c, 0x75, 0x6d, 0x29, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // (lum)), 1.0);.}.
	0x00,                                                                                           // .
};
static const uint8_t fs_display_dmd_noclip_dx11[3131] =
{
	0x46, 0x53, 0x48, 0x0b, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x10, 0x76, // FSH............v
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, // Color_Intensity.
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, // ..........static
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x00, 0x10, 0x00, 0x01, // Color_Alpha.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, // ......glassAmbie
	0x6e, 0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x00, 0x20, 0x00, // nt_Roughness.. .
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, // .......w_h_heigh
	0x74, 0x12, 0x00, 0x30, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x76, 0x52, 0x65, 0x73, // t..0........vRes
	0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x00, 0x40, 0x00, 0x01, // _Alpha_time..@..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, // ......displayTex
	0x30, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, // 0..........displ
	0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x30, 0x01, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // ayGlass0........
	0x00, 0x0a, 0x64, 0x6d, 0x64, 0x47, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x78, 0x30, 0x01, 0x02, 0x00, // ..dmdGlowTex0...
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, // .......displayTe
	0x78, 0x30, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x64, 0x69, 0x73, 0x70, // x0..........disp
	0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x30, 0x01, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, // layGlass0.......
	0x00, 0x00, 0x0a, 0x64, 0x6d, 0x64, 0x47, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x78, 0x30, 0x01, 0x02, // ...dmdGlowTex0..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x0b, 0x00, 0x00, 0x44, 0x58, 0x42, 0x43, 0x1c, // ...........DXBC.
	0xb5, 0x50, 0xe6, 0x4a, 0xc5, 0xdb, 0xb5, 0x09, 0x1c, 0x5f, 0x3c, 0xf3, 0x03, 0xa0, 0x7a, 0x01, // .P.J....._<...z.
	0x00, 0x00, 0x00, 0x1c, 0x0b, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x9c, // ...........,....
	0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x4e, 0x68, 0x00, 0x00, 0x00, 0x03, // .......ISGNh....
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // .......P........
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x5c, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0c, 0x0c, 0x00, 0x00, 0x53, // ...............S
	0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, // V_POSITION.TEXCO
	0x4f, 0x52, 0x44, 0x00, 0xab, 0xab, 0xab, 0x4f, 0x53, 0x47, 0x4e, 0x2c, 0x00, 0x00, 0x00, 0x01, // ORD....OSGN,....
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....... ........
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x53, // ...............S
	0x56, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x00, 0xab, 0xab, 0x53, 0x48, 0x45, 0x58, 0x44, // V_TARGET...SHEXD
	0x0a, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x91, 0x02, 0x00, 0x00, 0x6a, 0x28, 0x00, 0x01, 0x59, // ...P.......j(..Y
	0x00, 0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x5a, // ...F. .........Z
	0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, // ....`......Z....
	0x60, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x02, // `......Z....`...
	0x00, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, // ...X....p......U
	0x55, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x55, // U..X....p......U
	0x55, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x55, // U..X....p......U
	0x55, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x32, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x62, // U..b...2.......b
	0x10, 0x00, 0x03, 0xc2, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0xf2, // ...........e....
	0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0x00, 0x38, //  ......h.......8
	0x00, 0x00, 0x08, 0x32, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe6, 0x1a, 0x10, 0x00, 0x01, // ...2............
	0x00, 0x00, 0x00, 0x46, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x41, // ...F. .........A
	0x00, 0x00, 0x05, 0xc2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x04, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0xc2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa6, // ................
	0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........@.......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x0e, 0x00, 0x00, 0x08, 0xc2, // ......?...?.....
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa6, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, // ................
	0x84, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x0a, 0x32, // . .............2
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // ................
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // @...............
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, // ................
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1d, // ................
	0x00, 0x00, 0x0a, 0x62, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, // ...b........@...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0xa6, // ......?...?.....
	0x0b, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, // ...............*
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1f, // ................
	0x00, 0x04, 0x03, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x05, 0x32, // ...............2
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .......F........
	0x00, 0x00, 0x0a, 0x32, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x00, // ...2.......F....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, 0x00, 0xbf, 0x00, // ....@...........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x32, 0x00, 0x10, 0x00, 0x00, // ...........2....
	0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa6, // ...F............
	0x8a, 0x20, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, // . .A............
	0x00, 0x00, 0x08, 0x32, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x00, // ...2.......F....
	0x00, 0x00, 0x00, 0xf6, 0x8f, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x34, // ..... .........4
	0x00, 0x00, 0x0a, 0x32, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x00, // ...2.......F....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....@...........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x01, // ...F.......F....
	0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x05, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, // ...K............
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, // .......4........
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, // ...3............
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........@.......
	0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x12, // ................
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, // ...............:
	0x80, 0x20, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0e, // . .A............
	0x00, 0x00, 0x0b, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, // ..."........@...
	0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x2a, // ..?...?...?...?*
	0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x38, 0x20, 0x00, 0x07, 0x12, // . .........8 ...
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, // ................
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, 0x00, // .......2..."....
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0x00, 0xc0, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0x12, // ....@....@@8....
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, // ................
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, // .......8........
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0xe2, // ...H.......CU...
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, // ...............6
	0x79, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // y.......`.......
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x08, 0x12, 0x00, 0x10, 0x00, 0x01, // @......9........
	0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, // ...:. ..........
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xe2, 0x00, 0x10, 0x00, 0x01, // @......8........
	0x00, 0x00, 0x00, 0x56, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x89, 0x20, 0x00, 0x00, // ...V......... ..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xe2, 0x00, 0x10, 0x00, 0x00, // .......8........
	0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x89, 0x20, 0x00, 0x00, // ...V......... ..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0xe2, 0x00, 0x10, 0x00, 0x00, // .......7........
	0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x56, 0x0e, 0x10, 0x00, 0x01, // ...........V....
	0x00, 0x00, 0x00, 0x56, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xe2, // ...V............
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, // .......V........
	0x89, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, // . .........8...r
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, // ................
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x01, 0x36, 0x00, 0x00, 0x08, 0x72, // ...........6...r
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........@.......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, 0x32, // ...............2
	0x00, 0x00, 0x0f, 0x32, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xe6, 0x1a, 0x10, 0x00, 0x01, // ...2............
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x00, // ....@.....?...?.
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3e, 0x00, // ........@.....>.
	0x00, 0x80, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, // ..>........H....
	0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, // ...CU..r.......F
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, // .......F~.......
	0x60, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39, // `.......@......9
	0x00, 0x00, 0x0b, 0x32, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x36, 0x8f, 0x20, 0x00, 0x00, // ...2.......6. ..
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........@.......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xe2, // ...........8....
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, // ................
	0x89, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, // . .........8...r
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, // . .........7...r
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x96, // ................
	0x07, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x32, // .......F.......2
	0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0x8f, 0x20, 0x00, 0x00, // ...r......... ..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 0x1a, 0x00, 0x10, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0xf2, // ...E.......CU...
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x7e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // ~.......`.......
	0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, // ...r.......F....
	0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, // ...F. .........8
	0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, // ...........:....
	0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, // ...:. ..........
	0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, // ...r.......F...A
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // .......F.......2
	0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, // ...r............
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, // ...F.......F....
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // ...8...r.......F
	0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x15, // .......F........
	0x00, 0x00, 0x01, 0x18, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, // ...............:
	0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // . ..........@...
	0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, // .......:.......6
	0x00, 0x00, 0x05, 0x72, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, // ...r ......F....
	0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ...6.... .......
	0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x12, 0x00, 0x00, 0x01, 0x18, 0x00, 0x00, 0x08, 0x82, // @.....?.........
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // .......:. ......
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x1f, 0x00, 0x04, 0x03, 0x3a, // ....@.....?....:
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x0a, 0x82, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xd2, // ...F........@...
	0x6e, 0x34, 0x3e, 0xc9, 0x1f, 0x50, 0x3f, 0x33, 0x20, 0x31, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x33, // n4>..P?3 1<....3
	0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, // ...........:....
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x7a, 0x44, 0x32, 0x00, 0x00, 0x09, 0x12, // ....@....zD2....
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // .......:........
	0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3e, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, // @.....>.@.....?.
	0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, // ...........:....
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x0e, 0x00, 0x00, 0x07, 0x82, // ....@.....?.....
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, // ...............:
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x20, 0x10, 0x00, 0x00, // .......8...r ...
	0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, // ...........F....
	0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ...6.... .......
	0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x12, 0x00, 0x00, 0x01, 0x18, 0x00, 0x00, 0x08, 0x82, // @.....?.........
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // .......:. ......
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x1f, 0x00, 0x04, 0x03, 0x3a, // ....@.....@....:
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x0a, 0x82, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xd2, // ...F........@...
	0x6e, 0x34, 0x3e, 0xc9, 0x1f, 0x50, 0x3f, 0x33, 0x20, 0x31, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x33, // n4>..P?3 1<....3
	0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, // ...........:....
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x7a, 0x44, 0x32, 0x00, 0x00, 0x09, 0x12, // ....@....zD2....
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // .......:........
	0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3e, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, // @.....>.@.....?.
	0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, // ...........:....
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x0e, 0x00, 0x00, 0x07, 0x82, // ....@.....?.....
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, // ...............:
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x00, // .......8...r....
	0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, // ...........F....
	0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // .......r........
	0x40, 0x00, 0x00, 0x1c, 0x2e, 0x4d, 0x3b, 0x1c, 0x2e, 0x4d, 0x3b, 0x1c, 0x2e, 0x4d, 0x3b, 0x00, // @....M;..M;..M;.
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0x72, // ...F.......8...r
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // .......F........
	0x40, 0x00, 0x00, 0x52, 0xb8, 0x4e, 0x41, 0x52, 0xb8, 0x4e, 0x41, 0x52, 0xb8, 0x4e, 0x41, 0x00, // @..R.NAR.NAR.NA.
	0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x05, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // .../...r.......F
	0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x00, // .......8...r....
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x55, // ...F........@..U
	0x55, 0xd5, 0x3e, 0x55, 0x55, 0xd5, 0x3e, 0x55, 0x55, 0xd5, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x19, // U.>UU.>UU.>.....
	0x00, 0x00, 0x05, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, // ...r.......F....
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0f, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // ...2...r.......F
	0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x3d, 0x0a, 0x87, 0x3f, 0x3d, // ........@..=..?=
	0x0a, 0x87, 0x3f, 0x3d, 0x0a, 0x87, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xae, // ..?=..?.....@...
	0x47, 0x61, 0xbd, 0xae, 0x47, 0x61, 0xbd, 0xae, 0x47, 0x61, 0xbd, 0x00, 0x00, 0x00, 0x00, 0x37, // Ga..Ga..Ga.....7
	0x00, 0x00, 0x09, 0x72, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, // ...r ......F....
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, // ...F.......F....
	0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ...6.... .......
	0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x15, 0x00, 0x00, 0x01, 0x15, 0x00, 0x00, 0x01, 0x15, // @.....?.........
	0x00, 0x00, 0x01, 0x3e, 0x00, 0x00, 0x01, 0x00, 0x00, 0x50, 0x00,                               // ...>.....P.
};
static const uint8_t fs_display_dmd_noclip_spv[6642] =
{
	0x46, 0x53, 0x48, 0x0b, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x0a, 0x77, // FSH............w
	0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x01, 0x30, 0x00, 0x01, 0x00, 0x00, // _h_height..0....
	0x00, 0x00, 0x00, 0x10, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, // ....vColor_Inten
	0x73, 0x69, 0x74, 0x79, 0x12, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x76, // sity...........v
	0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x01, // Res_Alpha_time..
	0x40, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, // @........staticC
	0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x01, 0x10, 0x00, 0x01, 0x00, // olor_Alpha......
	0x00, 0x00, 0x00, 0x00, 0x16, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, // .....glassAmbien
	0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x01, 0x20, 0x00, 0x01, // t_Roughness.. ..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, // ......displayTex
	0x30, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, // 0......."..displ
	0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x30, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, // ayGlass0......."
	0x00, 0x0a, 0x64, 0x6d, 0x64, 0x47, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x78, 0x30, 0x00, 0x04, 0x00, // ..dmdGlowTex0...
	0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0x14, 0x19, 0x00, 0x00, 0x03, 0x02, 0x23, 0x07, 0x00, 0x00, // ....".......#...
	0x01, 0x00, 0x0b, 0x00, 0x08, 0x00, 0x8c, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, // ................
	0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x4c, // ..............GL
	0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, // SL.std.450......
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x08, 0x00, 0x04, 0x00, // ................
	0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0xb1, 0x01, // ......main......
	0x00, 0x00, 0xb4, 0x01, 0x00, 0x00, 0xc1, 0x01, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00, // ................
	0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x09, 0x00, // ................
	0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, 0x05, 0x00, // ................
	0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, // ......main......
	0x07, 0x00, 0x50, 0x00, 0x00, 0x00, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, // ..P...displayTex
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00, 0x53, 0x00, // Sampler.......S.
	0x00, 0x00, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x54, 0x65, 0x78, 0x74, // ..displayTexText
	0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00, 0x57, 0x00, 0x00, 0x00, 0x64, 0x69, // ure.......W...di
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // splayGlassSample
	0x72, 0x00, 0x05, 0x00, 0x07, 0x00, 0x59, 0x00, 0x00, 0x00, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, // r.....Y...displa
	0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x05, 0x00, // yGlassTexture...
	0x07, 0x00, 0x5d, 0x00, 0x00, 0x00, 0x64, 0x6d, 0x64, 0x47, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x78, // ..]...dmdGlowTex
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00, 0x5f, 0x00, // Sampler......._.
	0x00, 0x00, 0x64, 0x6d, 0x64, 0x47, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x78, 0x54, 0x65, 0x78, 0x74, // ..dmdGlowTexText
	0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x55, 0x6e, // ure...........Un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, // iformBlock......
	0x08, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // ..........vColor
	0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, // _Intensity......
	0x08, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, // ..........static
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x00, 0x00, 0x00, 0x06, 0x00, // Color_Alpha.....
	0x09, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, // ..........glassA
	0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, // mbient_Roughness
	0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x77, 0x5f, // ..............w_
	0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x00, 0x00, 0x06, 0x00, 0x07, 0x00, 0xe8, 0x00, // h_height........
	0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, // ......vRes_Alpha
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x00, 0x05, 0x00, 0x03, 0x00, 0xea, 0x00, 0x00, 0x00, 0x00, 0x00, // _time...........
	0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0xb1, 0x01, 0x00, 0x00, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // ..........v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x05, 0x00, 0x05, 0x00, 0xb4, 0x01, 0x00, 0x00, 0x76, 0x5f, // oord0.........v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x00, 0x05, 0x00, 0x06, 0x00, 0xc1, 0x01, // texcoord1.......
	0x00, 0x00, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, // ..bgfx_FragData0
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x50, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, // ..G...P...".....
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x50, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x12, 0x00, // ..G...P...!.....
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x53, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, // ..G...S...".....
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x53, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x02, 0x00, // ..G...S...!.....
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x57, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, // ..G...W...".....
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x57, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x13, 0x00, // ..G...W...!.....
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x59, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, // ..G...Y...".....
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x59, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x03, 0x00, // ..G...Y...!.....
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x5d, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, // ..G...]...".....
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x5d, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x14, 0x00, // ..G...]...!.....
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x5f, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, // ..G..._...".....
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x5f, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x04, 0x00, // ..G..._...!.....
	0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, // ..H...........#.
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, // ......H.........
	0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0xe8, 0x00, // ..#.......H.....
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x48, 0x00, // ......#... ...H.
	0x05, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x30, 0x00, // ..........#...0.
	0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x23, 0x00, // ..H...........#.
	0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x02, 0x00, // ..@...G.........
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xea, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, // ..G.......".....
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xea, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x01, 0x00, // ..G.......!.....
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xb1, 0x01, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, // ..G.............
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xb4, 0x01, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, // ..G.............
	0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xc1, 0x01, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, // ..G.............
	0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x21, 0x00, 0x03, 0x00, 0x03, 0x00, // ..........!.....
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00, 0x16, 0x00, // ................
	0x03, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x19, 0x00, 0x09, 0x00, 0x08, 0x00, // ...... .........
	0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, // ................
	0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x17, 0x00, // ................
	0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x17, 0x00, // ................
	0x04, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, // .............. .
	0x04, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3b, 0x00, // ..O...........;.
	0x04, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, // ..O...P....... .
	0x04, 0x00, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3b, 0x00, // ..R...........;.
	0x04, 0x00, 0x52, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, // ..R...S.......;.
	0x04, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, // ..O...W.......;.
	0x04, 0x00, 0x52, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, // ..R...Y.......;.
	0x04, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x5d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, // ..O...].......;.
	0x04, 0x00, 0x52, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, // ..R..._.........
	0x04, 0x00, 0x62, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, // ..b... .......+.
	0x04, 0x00, 0x62, 0x00, 0x00, 0x00, 0x63, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, // ..b...c.......+.
	0x04, 0x00, 0x62, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1b, 0x00, // ..b...g.........
	0x03, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, // ..k.......+.....
	0x00, 0x00, 0x8e, 0x00, 0x00, 0x00, 0x1c, 0x2e, 0x4d, 0x3b, 0x14, 0x00, 0x02, 0x00, 0x8f, 0x00, // ........M;......
	0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00, 0x52, 0xb8, // ..+...........R.
	0x4e, 0x41, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x3d, 0x0a, // NA+...........=.
	0x87, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x00, 0x00, 0x55, 0x55, // .?+...........UU
	0xd5, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9d, 0x00, 0x00, 0x00, 0xae, 0x47, // .>+............G
	0x61, 0x3d, 0x15, 0x00, 0x04, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // a=........ .....
	0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0xa8, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x00, 0x00, 0x00, 0x00, // ..+.............
	0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0xa8, 0x00, 0x00, 0x00, 0xb3, 0x00, 0x00, 0x00, 0x02, 0x00, // ..+.............
	0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x00, 0x00, 0xd2, 0x6e, // ..+............n
	0x34, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbd, 0x00, 0x00, 0x00, 0xc9, 0x1f, // 4>+.............
	0x50, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbe, 0x00, 0x00, 0x00, 0x33, 0x20, // P?+...........3 
	0x31, 0x3c, 0x2c, 0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, 0x00, 0xbc, 0x00, // 1<,.............
	0x00, 0x00, 0xbd, 0x00, 0x00, 0x00, 0xbe, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, // ..........+.....
	0x00, 0x00, 0xc1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7a, 0x44, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, // ........zD+.....
	0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, // .........>+.....
	0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, // .........?+.....
	0x00, 0x00, 0xd9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x05, 0x00, 0x0b, 0x00, // ..........,.....
	0x00, 0x00, 0xda, 0x00, 0x00, 0x00, 0xd9, 0x00, 0x00, 0x00, 0xd9, 0x00, 0x00, 0x00, 0x1e, 0x00, // ................
	0x07, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, // ................
	0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0xe9, 0x00, // .......... .....
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0xe9, 0x00, // ..........;.....
	0x00, 0x00, 0xea, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x62, 0x00, // ..........+...b.
	0x00, 0x00, 0xeb, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0xa8, 0x00, // ..........+.....
	0x00, 0x00, 0xec, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0xed, 0x00, // .......... .....
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0xf4, 0x00, // .......... .....
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x62, 0x00, // ..........+...b.
	0x00, 0x00, 0x0b, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, // ..........+.....
	0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x2c, 0x00, 0x05, 0x00, 0x0b, 0x00, // .........?,.....
	0x00, 0x00, 0x53, 0x01, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x2b, 0x00, // ..S...........+.
	0x04, 0x00, 0x62, 0x00, 0x00, 0x00, 0x70, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, 0x00, // ..b...p.......+.
	0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x20, 0x00, // .............@ .
	0x04, 0x00, 0xb0, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3b, 0x00, // ..............;.
	0x04, 0x00, 0xb0, 0x01, 0x00, 0x00, 0xb1, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3b, 0x00, // ..............;.
	0x04, 0x00, 0xb0, 0x01, 0x00, 0x00, 0xb4, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, // .............. .
	0x04, 0x00, 0xc0, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x3b, 0x00, // ..............;.
	0x04, 0x00, 0xc0, 0x01, 0x00, 0x00, 0xc1, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, // ..............,.
	0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x7b, 0x03, 0x00, 0x00, 0xd9, 0x00, 0x00, 0x00, 0xd9, 0x00, // ......{.........
	0x00, 0x00, 0xd9, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x7c, 0x03, // ......,.......|.
	0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x01, 0x00, 0x03, 0x00, 0x0d, 0x00, // ................
	0x00, 0x00, 0x8b, 0x03, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, // ......6.........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, 0x00, // ................
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x50, 0x00, // ..=.......Q...P.
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x53, 0x00, // ..=.......T...S.
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x57, 0x00, // ..=.......X...W.
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x00, 0x59, 0x00, // ..=.......Z...Y.
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x5e, 0x00, 0x00, 0x00, 0x5d, 0x00, // ..=.......^...].
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x5f, 0x00, // ..=.......`..._.
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xb2, 0x01, 0x00, 0x00, 0xb1, 0x01, // ..=.............
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xb5, 0x01, 0x00, 0x00, 0xb4, 0x01, // ..=.............
	0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xf4, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0xea, 0x00, // ..A.............
	0x00, 0x00, 0x0b, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x01, 0x02, // ......=.........
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x02, 0x02, // ......O.........
	0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, // ................
	0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x03, 0x02, 0x00, 0x00, 0xb5, 0x01, // ................
	0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x04, 0x02, // ................
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x03, 0x02, 0x00, 0x00, 0x81, 0x00, // ................
	0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x06, 0x02, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x7c, 0x03, // ..............|.
	0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xf4, 0x00, 0x00, 0x00, 0x07, 0x02, 0x00, 0x00, 0xea, 0x00, // ..A.............
	0x00, 0x00, 0x0b, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x08, 0x02, // ......=.........
	0x00, 0x00, 0x07, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x09, 0x02, // ......O.........
	0x00, 0x00, 0x08, 0x02, 0x00, 0x00, 0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, // ................
	0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x0a, 0x02, 0x00, 0x00, 0x06, 0x02, // ................
	0x00, 0x00, 0x09, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0c, 0x02, // ......Q.........
	0x00, 0x00, 0x0a, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbe, 0x00, 0x05, 0x00, 0x8f, 0x00, // ................
	0x00, 0x00, 0x0d, 0x02, 0x00, 0x00, 0x0c, 0x02, 0x00, 0x00, 0xd9, 0x00, 0x00, 0x00, 0x51, 0x00, // ..............Q.
	0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0f, 0x02, 0x00, 0x00, 0x0a, 0x02, 0x00, 0x00, 0x01, 0x00, // ................
	0x00, 0x00, 0xbe, 0x00, 0x05, 0x00, 0x8f, 0x00, 0x00, 0x00, 0x10, 0x02, 0x00, 0x00, 0x0f, 0x02, // ................
	0x00, 0x00, 0xd9, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x8f, 0x00, 0x00, 0x00, 0x11, 0x02, // ................
	0x00, 0x00, 0x0d, 0x02, 0x00, 0x00, 0x10, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, // ..........Q.....
	0x00, 0x00, 0x13, 0x02, 0x00, 0x00, 0x0a, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbc, 0x00, // ................
	0x05, 0x00, 0x8f, 0x00, 0x00, 0x00, 0x14, 0x02, 0x00, 0x00, 0x13, 0x02, 0x00, 0x00, 0xc7, 0x00, // ................
	0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0x8f, 0x00, 0x00, 0x00, 0x15, 0x02, 0x00, 0x00, 0x11, 0x02, // ................
	0x00, 0x00, 0x14, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x17, 0x02, // ......Q.........
	0x00, 0x00, 0x0a, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x8f, 0x00, // ................
	0x00, 0x00, 0x18, 0x02, 0x00, 0x00, 0x17, 0x02, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, 0xa7, 0x00, // ................
	0x05, 0x00, 0x8f, 0x00, 0x00, 0x00, 0x19, 0x02, 0x00, 0x00, 0x15, 0x02, 0x00, 0x00, 0x18, 0x02, // ................
	0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x38, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, // ......8.........
	0x04, 0x00, 0x19, 0x02, 0x00, 0x00, 0x1a, 0x02, 0x00, 0x00, 0x38, 0x02, 0x00, 0x00, 0xf8, 0x00, // ..........8.....
	0x02, 0x00, 0x1a, 0x02, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xf4, 0x00, 0x00, 0x00, 0x1c, 0x02, // ......A.........
	0x00, 0x00, 0xea, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, // ..........=.....
	0x00, 0x00, 0x1d, 0x02, 0x00, 0x00, 0x1c, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, // ..........O.....
	0x00, 0x00, 0x1e, 0x02, 0x00, 0x00, 0x1d, 0x02, 0x00, 0x00, 0x1d, 0x02, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x1f, 0x02, // ................
	0x00, 0x00, 0xb5, 0x01, 0x00, 0x00, 0x1e, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x0b, 0x00, // ................
	0x00, 0x00, 0x20, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x1f, 0x02, // .. .............
	0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x22, 0x02, 0x00, 0x00, 0x20, 0x02, // .........."... .
	0x00, 0x00, 0x7c, 0x03, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0xed, 0x00, 0x00, 0x00, 0x24, 0x02, // ..|...A.......$.
	0x00, 0x00, 0xea, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x00, 0x00, 0xb3, 0x00, 0x00, 0x00, 0x3d, 0x00, // ..............=.
	0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x25, 0x02, 0x00, 0x00, 0x24, 0x02, 0x00, 0x00, 0x41, 0x00, // ......%...$...A.
	0x06, 0x00, 0xed, 0x00, 0x00, 0x00, 0x26, 0x02, 0x00, 0x00, 0xea, 0x00, 0x00, 0x00, 0x0b, 0x01, // ......&.........
	0x00, 0x00, 0xec, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x27, 0x02, // ......=.......'.
	0x00, 0x00, 0x26, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x95, 0x02, // ..&.............
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x22, 0x02, 0x00, 0x00, 0x50, 0x00, // .........."...P.
	0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x97, 0x02, 0x00, 0x00, 0x25, 0x02, 0x00, 0x00, 0x25, 0x02, // ..........%...%.
	0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x98, 0x02, 0x00, 0x00, 0x95, 0x02, // ................
	0x00, 0x00, 0x97, 0x02, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x9a, 0x02, // ......P.........
	0x00, 0x00, 0x27, 0x02, 0x00, 0x00, 0x27, 0x02, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, // ..'...'.........
	0x00, 0x00, 0x9b, 0x02, 0x00, 0x00, 0x98, 0x02, 0x00, 0x00, 0x9a, 0x02, 0x00, 0x00, 0x0c, 0x00, // ................
	0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x9d, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, // ..............(.
	0x00, 0x00, 0x9b, 0x02, 0x00, 0x00, 0xda, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, // ................
	0x00, 0x00, 0x9e, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x9d, 0x02, // ..........B.....
	0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa0, 0x02, 0x00, 0x00, 0x9b, 0x02, // ..Q.............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa2, 0x02, // ......Q.........
	0x00, 0x00, 0x9b, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, // ................
	0x00, 0x00, 0xa3, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0xa0, 0x02, // ..........(.....
	0x00, 0x00, 0xa2, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa4, 0x02, // ................
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0xa3, 0x02, 0x00, 0x00, 0xd9, 0x00, // ......%.........
	0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa5, 0x02, 0x00, 0x00, 0x9e, 0x02, // ................
	0x00, 0x00, 0xa4, 0x02, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa7, 0x02, // ................
	0x00, 0x00, 0xa5, 0x02, 0x00, 0x00, 0x27, 0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0xed, 0x00, // ......'...A.....
	0x00, 0x00, 0x29, 0x02, 0x00, 0x00, 0xea, 0x00, 0x00, 0x00, 0xeb, 0x00, 0x00, 0x00, 0xb3, 0x00, // ..).............
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2a, 0x02, 0x00, 0x00, 0x29, 0x02, // ..=.......*...).
	0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2c, 0x02, 0x00, 0x00, 0x01, 0x00, // ..........,.....
	0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0xd9, 0x00, 0x00, 0x00, 0x2a, 0x02, 0x00, 0x00, 0xa7, 0x02, // ..1.......*.....
	0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xf4, 0x00, 0x00, 0x00, 0x2e, 0x02, 0x00, 0x00, 0xea, 0x00, // ..A.............
	0x00, 0x00, 0x63, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x2f, 0x02, // ..c...=......./.
	0x00, 0x00, 0x2e, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x30, 0x02, // ......O.......0.
	0x00, 0x00, 0x2f, 0x02, 0x00, 0x00, 0x2f, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, // ../.../.........
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x6b, 0x00, 0x00, 0x00, 0xae, 0x02, // ......V...k.....
	0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x58, 0x00, 0x07, 0x00, 0x0d, 0x00, // ..T...Q...X.....
	0x00, 0x00, 0xb1, 0x02, 0x00, 0x00, 0xae, 0x02, 0x00, 0x00, 0x0a, 0x02, 0x00, 0x00, 0x02, 0x00, // ................
	0x00, 0x00, 0xd9, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x34, 0x02, // ......O.......4.
	0x00, 0x00, 0xb1, 0x02, 0x00, 0x00, 0xb1, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, // ................
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xc8, 0x02, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0xa9, 0x00, 0x00, 0x00, 0xb6, 0x02, 0x00, 0x00, 0xf8, 0x00, // ................
	0x02, 0x00, 0xb6, 0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0xed, 0x00, 0x00, 0x00, 0xb7, 0x02, // ......A.........
	0x00, 0x00, 0xea, 0x00, 0x00, 0x00, 0xeb, 0x00, 0x00, 0x00, 0xec, 0x00, 0x00, 0x00, 0x3d, 0x00, // ..............=.
	0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb8, 0x02, 0x00, 0x00, 0xb7, 0x02, 0x00, 0x00, 0xb7, 0x00, // ................
	0x05, 0x00, 0x8f, 0x00, 0x00, 0x00, 0xb9, 0x02, 0x00, 0x00, 0xb8, 0x02, 0x00, 0x00, 0xd9, 0x00, // ................
	0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xc7, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, // ................
	0x04, 0x00, 0xb9, 0x02, 0x00, 0x00, 0xba, 0x02, 0x00, 0x00, 0xc0, 0x02, 0x00, 0x00, 0xf8, 0x00, // ................
	0x02, 0x00, 0xc0, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc2, 0x02, // ......Q.........
	0x00, 0x00, 0xb1, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xf4, 0x00, // ..........A.....
	0x00, 0x00, 0xc3, 0x02, 0x00, 0x00, 0xea, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x00, 0x3d, 0x00, // ..........g...=.
	0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xc4, 0x02, 0x00, 0x00, 0xc3, 0x02, 0x00, 0x00, 0x4f, 0x00, // ..............O.
	0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xc5, 0x02, 0x00, 0x00, 0xc4, 0x02, 0x00, 0x00, 0xc4, 0x02, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x8e, 0x00, // ................
	0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xc6, 0x02, 0x00, 0x00, 0xc5, 0x02, 0x00, 0x00, 0xc2, 0x02, // ................
	0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xc8, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xba, 0x02, // ................
	0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xf4, 0x00, 0x00, 0x00, 0xbc, 0x02, 0x00, 0x00, 0xea, 0x00, // ..A.............
	0x00, 0x00, 0x67, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xbd, 0x02, // ..g...=.........
	0x00, 0x00, 0xbc, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xbe, 0x02, // ......O.........
	0x00, 0x00, 0xbd, 0x02, 0x00, 0x00, 0xbd, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, // ................
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xbf, 0x02, // ................
	0x00, 0x00, 0x34, 0x02, 0x00, 0x00, 0xbe, 0x02, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xc8, 0x02, // ..4.............
	0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xc7, 0x02, 0x00, 0x00, 0xff, 0x00, 0x01, 0x00, 0xf8, 0x00, // ................
	0x02, 0x00, 0xc8, 0x02, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x7d, 0x03, // ..............}.
	0x00, 0x00, 0xc6, 0x02, 0x00, 0x00, 0xc0, 0x02, 0x00, 0x00, 0xbf, 0x02, 0x00, 0x00, 0xba, 0x02, // ................
	0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x36, 0x02, 0x00, 0x00, 0x30, 0x02, // ..........6...0.
	0x00, 0x00, 0x7d, 0x03, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x37, 0x02, // ..}...........7.
	0x00, 0x00, 0x36, 0x02, 0x00, 0x00, 0x2c, 0x02, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x38, 0x02, // ..6...,.......8.
	0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x38, 0x02, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, 0x00, // ......8.........
	0x00, 0x00, 0x80, 0x03, 0x00, 0x00, 0x7b, 0x03, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x37, 0x02, // ......{.......7.
	0x00, 0x00, 0xc8, 0x02, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3a, 0x02, // ..............:.
	0x00, 0x00, 0xb5, 0x01, 0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, // ................
	0x00, 0x00, 0x3b, 0x02, 0x00, 0x00, 0x53, 0x01, 0x00, 0x00, 0x3a, 0x02, 0x00, 0x00, 0x56, 0x00, // ..;...S...:...V.
	0x05, 0x00, 0x6b, 0x00, 0x00, 0x00, 0xd0, 0x02, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x5e, 0x00, // ..k.......`...^.
	0x00, 0x00, 0x58, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xd3, 0x02, 0x00, 0x00, 0xd0, 0x02, // ..X.............
	0x00, 0x00, 0x3b, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xd9, 0x00, 0x00, 0x00, 0x4f, 0x00, // ..;...........O.
	0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x3e, 0x02, 0x00, 0x00, 0xd3, 0x02, 0x00, 0x00, 0xd3, 0x02, // ......>.........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf7, 0x00, // ................
	0x03, 0x00, 0xea, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0xa9, 0x00, // ................
	0x00, 0x00, 0xd8, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xd8, 0x02, 0x00, 0x00, 0x41, 0x00, // ..............A.
	0x06, 0x00, 0xed, 0x00, 0x00, 0x00, 0xd9, 0x02, 0x00, 0x00, 0xea, 0x00, 0x00, 0x00, 0xeb, 0x00, // ................
	0x00, 0x00, 0xec, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xda, 0x02, // ......=.........
	0x00, 0x00, 0xd9, 0x02, 0x00, 0x00, 0xb7, 0x00, 0x05, 0x00, 0x8f, 0x00, 0x00, 0x00, 0xdb, 0x02, // ................
	0x00, 0x00, 0xda, 0x02, 0x00, 0x00, 0xd9, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xe9, 0x02, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xdb, 0x02, 0x00, 0x00, 0xdc, 0x02, // ................
	0x00, 0x00, 0xe2, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xe2, 0x02, 0x00, 0x00, 0x51, 0x00, // ..............Q.
	0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe4, 0x02, 0x00, 0x00, 0xd3, 0x02, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xf4, 0x00, 0x00, 0x00, 0xe5, 0x02, 0x00, 0x00, 0xea, 0x00, // ..A.............
	0x00, 0x00, 0x67, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xe6, 0x02, // ..g...=.........
	0x00, 0x00, 0xe5, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xe7, 0x02, // ......O.........
	0x00, 0x00, 0xe6, 0x02, 0x00, 0x00, 0xe6, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, // ................
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xe8, 0x02, // ................
	0x00, 0x00, 0xe7, 0x02, 0x00, 0x00, 0xe4, 0x02, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xea, 0x02, // ................
	0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xdc, 0x02, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xf4, 0x00, // ..........A.....
	0x00, 0x00, 0xde, 0x02, 0x00, 0x00, 0xea, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x00, 0x3d, 0x00, // ..........g...=.
	0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xdf, 0x02, 0x00, 0x00, 0xde, 0x02, 0x00, 0x00, 0x4f, 0x00, // ..............O.
	0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xe0, 0x02, 0x00, 0x00, 0xdf, 0x02, 0x00, 0x00, 0xdf, 0x02, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x85, 0x00, // ................
	0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xe1, 0x02, 0x00, 0x00, 0x3e, 0x02, 0x00, 0x00, 0xe0, 0x02, // ..........>.....
	0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xea, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xe9, 0x02, // ................
	0x00, 0x00, 0xff, 0x00, 0x01, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xea, 0x02, 0x00, 0x00, 0xf5, 0x00, // ................
	0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x7e, 0x03, 0x00, 0x00, 0xe8, 0x02, 0x00, 0x00, 0xe2, 0x02, // ......~.........
	0x00, 0x00, 0xe1, 0x02, 0x00, 0x00, 0xdc, 0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0xed, 0x00, // ..........A.....
	0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0xea, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x00, 0xec, 0x00, // ..@.......g.....
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x41, 0x02, 0x00, 0x00, 0x40, 0x02, // ..=.......A...@.
	0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x43, 0x02, 0x00, 0x00, 0x7e, 0x03, // ..........C...~.
	0x00, 0x00, 0x41, 0x02, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x45, 0x02, // ..A...........E.
	0x00, 0x00, 0x80, 0x03, 0x00, 0x00, 0x43, 0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0xed, 0x00, // ......C...A.....
	0x00, 0x00, 0x46, 0x02, 0x00, 0x00, 0xea, 0x00, 0x00, 0x00, 0xeb, 0x00, 0x00, 0x00, 0xa9, 0x00, // ..F.............
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x47, 0x02, 0x00, 0x00, 0x46, 0x02, // ..=.......G...F.
	0x00, 0x00, 0xb7, 0x00, 0x05, 0x00, 0x8f, 0x00, 0x00, 0x00, 0x48, 0x02, 0x00, 0x00, 0x47, 0x02, // ..........H...G.
	0x00, 0x00, 0xd9, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x5d, 0x02, 0x00, 0x00, 0x00, 0x00, // ..........].....
	0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x48, 0x02, 0x00, 0x00, 0x49, 0x02, 0x00, 0x00, 0x5d, 0x02, // ......H...I...].
	0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x49, 0x02, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x6b, 0x00, // ......I...V...k.
	0x00, 0x00, 0xf2, 0x02, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x57, 0x00, // ......Z...X...W.
	0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xf4, 0x02, 0x00, 0x00, 0xf2, 0x02, 0x00, 0x00, 0xb2, 0x01, // ................
	0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xf4, 0x00, 0x00, 0x00, 0x4d, 0x02, 0x00, 0x00, 0xea, 0x00, // ..A.......M.....
	0x00, 0x00, 0x70, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x4e, 0x02, // ..p...=.......N.
	0x00, 0x00, 0x4d, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x4f, 0x02, // ..M...O.......O.
	0x00, 0x00, 0x4e, 0x02, 0x00, 0x00, 0x4e, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, // ..N...N.........
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x51, 0x02, // ..............Q.
	0x00, 0x00, 0x4f, 0x02, 0x00, 0x00, 0x7e, 0x03, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0xed, 0x00, // ..O...~...A.....
	0x00, 0x00, 0x52, 0x02, 0x00, 0x00, 0xea, 0x00, 0x00, 0x00, 0x70, 0x01, 0x00, 0x00, 0xec, 0x00, // ..R.......p.....
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x53, 0x02, 0x00, 0x00, 0x52, 0x02, // ..=.......S...R.
	0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x55, 0x02, 0x00, 0x00, 0xf4, 0x02, // ..Q.......U.....
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x56, 0x02, // ..............V.
	0x00, 0x00, 0x53, 0x02, 0x00, 0x00, 0x55, 0x02, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x1a, 0x00, // ..S...U...P.....
	0x00, 0x00, 0x57, 0x02, 0x00, 0x00, 0x56, 0x02, 0x00, 0x00, 0x56, 0x02, 0x00, 0x00, 0x56, 0x02, // ..W...V...V...V.
	0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xfa, 0x02, 0x00, 0x00, 0x01, 0x00, // ................
	0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x45, 0x02, 0x00, 0x00, 0x51, 0x02, 0x00, 0x00, 0x57, 0x02, // ......E...Q...W.
	0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x5b, 0x02, 0x00, 0x00, 0xf4, 0x02, // ..O.......[.....
	0x00, 0x00, 0xf4, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, // ................
	0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x5c, 0x02, 0x00, 0x00, 0xfa, 0x02, // ................
	0x00, 0x00, 0x5b, 0x02, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x5d, 0x02, 0x00, 0x00, 0xf8, 0x00, // ..[.......].....
	0x02, 0x00, 0x5d, 0x02, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x81, 0x03, // ..].............
	0x00, 0x00, 0x45, 0x02, 0x00, 0x00, 0xea, 0x02, 0x00, 0x00, 0x5c, 0x02, 0x00, 0x00, 0x49, 0x02, // ..E...........I.
	0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0xed, 0x00, 0x00, 0x00, 0x5e, 0x02, 0x00, 0x00, 0xea, 0x00, // ..A.......^.....
	0x00, 0x00, 0x63, 0x00, 0x00, 0x00, 0xec, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, // ..c.......=.....
	0x00, 0x00, 0x5f, 0x02, 0x00, 0x00, 0x5e, 0x02, 0x00, 0x00, 0xb4, 0x00, 0x05, 0x00, 0x8f, 0x00, // .._...^.........
	0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0x5f, 0x02, 0x00, 0x00, 0xd9, 0x00, 0x00, 0x00, 0xf7, 0x00, // ..`..._.........
	0x03, 0x00, 0x80, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x60, 0x02, // ..............`.
	0x00, 0x00, 0x61, 0x02, 0x00, 0x00, 0x67, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x67, 0x02, // ..a...g.......g.
	0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0xed, 0x00, 0x00, 0x00, 0x68, 0x02, 0x00, 0x00, 0xea, 0x00, // ..A.......h.....
	0x00, 0x00, 0x63, 0x00, 0x00, 0x00, 0xec, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, // ..c.......=.....
	0x00, 0x00, 0x69, 0x02, 0x00, 0x00, 0x68, 0x02, 0x00, 0x00, 0xb4, 0x00, 0x05, 0x00, 0x8f, 0x00, // ..i...h.........
	0x00, 0x00, 0x6a, 0x02, 0x00, 0x00, 0x69, 0x02, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, 0xf7, 0x00, // ..j...i.........
	0x03, 0x00, 0x7f, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x6a, 0x02, // ..............j.
	0x00, 0x00, 0x6b, 0x02, 0x00, 0x00, 0x72, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x72, 0x02, // ..k...r.......r.
	0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0xed, 0x00, 0x00, 0x00, 0x73, 0x02, 0x00, 0x00, 0xea, 0x00, // ..A.......s.....
	0x00, 0x00, 0x63, 0x00, 0x00, 0x00, 0xec, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, // ..c.......=.....
	0x00, 0x00, 0x74, 0x02, 0x00, 0x00, 0x73, 0x02, 0x00, 0x00, 0xb4, 0x00, 0x05, 0x00, 0x8f, 0x00, // ..t...s.........
	0x00, 0x00, 0x75, 0x02, 0x00, 0x00, 0x74, 0x02, 0x00, 0x00, 0x9e, 0x01, 0x00, 0x00, 0xf7, 0x00, // ..u...t.........
	0x03, 0x00, 0x7e, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x75, 0x02, // ..~...........u.
	0x00, 0x00, 0x76, 0x02, 0x00, 0x00, 0x7e, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x76, 0x02, // ..v...~.......v.
	0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0d, 0x03, 0x00, 0x00, 0x81, 0x03, // ................
	0x00, 0x00, 0xbf, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0e, 0x03, // ................
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x0d, 0x03, 0x00, 0x00, 0xc1, 0x00, // ......%.........
	0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x11, 0x03, 0x00, 0x00, 0x0e, 0x03, // ................
	0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x12, 0x03, // ................
	0x00, 0x00, 0x11, 0x03, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, // ................
	0x00, 0x00, 0x14, 0x03, 0x00, 0x00, 0x0e, 0x03, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x88, 0x00, // ................
	0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x15, 0x03, 0x00, 0x00, 0x12, 0x03, 0x00, 0x00, 0x14, 0x03, // ................
	0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x16, 0x03, 0x00, 0x00, 0x81, 0x03, // ................
	0x00, 0x00, 0x15, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1d, 0x03, // ......Q.........
	0x00, 0x00, 0x16, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x8f, 0x00, // ................
	0x00, 0x00, 0x2f, 0x03, 0x00, 0x00, 0x1d, 0x03, 0x00, 0x00, 0x8e, 0x00, 0x00, 0x00, 0xf7, 0x00, // ../.............
	0x03, 0x00, 0x38, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x2f, 0x03, // ..8.........../.
	0x00, 0x00, 0x30, 0x03, 0x00, 0x00, 0x33, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x33, 0x03, // ..0...3.......3.
	0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x35, 0x03, 0x00, 0x00, 0x01, 0x00, // ..........5.....
	0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x1d, 0x03, 0x00, 0x00, 0x9a, 0x00, 0x00, 0x00, 0x85, 0x00, // ................
	0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x36, 0x03, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x35, 0x03, // ......6.......5.
	0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x37, 0x03, 0x00, 0x00, 0x36, 0x03, // ..........7...6.
	0x00, 0x00, 0x9d, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x38, 0x03, 0x00, 0x00, 0xf8, 0x00, // ..........8.....
	0x02, 0x00, 0x30, 0x03, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x32, 0x03, // ..0...........2.
	0x00, 0x00, 0x94, 0x00, 0x00, 0x00, 0x1d, 0x03, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x38, 0x03, // ..............8.
	0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x38, 0x03, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x07, 0x00, // ......8.........
	0x00, 0x00, 0x82, 0x03, 0x00, 0x00, 0x37, 0x03, 0x00, 0x00, 0x33, 0x03, 0x00, 0x00, 0x32, 0x03, // ......7...3...2.
	0x00, 0x00, 0x30, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, 0x03, // ..0...Q....... .
	0x00, 0x00, 0x16, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x8f, 0x00, // ................
	0x00, 0x00, 0x43, 0x03, 0x00, 0x00, 0x20, 0x03, 0x00, 0x00, 0x8e, 0x00, 0x00, 0x00, 0xf7, 0x00, // ..C... .........
	0x03, 0x00, 0x4c, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x43, 0x03, // ..L...........C.
	0x00, 0x00, 0x44, 0x03, 0x00, 0x00, 0x47, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x47, 0x03, // ..D...G.......G.
	0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x49, 0x03, 0x00, 0x00, 0x01, 0x00, // ..........I.....
	0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x20, 0x03, 0x00, 0x00, 0x9a, 0x00, 0x00, 0x00, 0x85, 0x00, // ...... .........
	0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4a, 0x03, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x49, 0x03, // ......J.......I.
	0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4b, 0x03, 0x00, 0x00, 0x4a, 0x03, // ..........K...J.
	0x00, 0x00, 0x9d, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x4c, 0x03, 0x00, 0x00, 0xf8, 0x00, // ..........L.....
	0x02, 0x00, 0x44, 0x03, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x03, // ..D...........F.
	0x00, 0x00, 0x94, 0x00, 0x00, 0x00, 0x20, 0x03, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x4c, 0x03, // ...... .......L.
	0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x4c, 0x03, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x07, 0x00, // ......L.........
	0x00, 0x00, 0x83, 0x03, 0x00, 0x00, 0x4b, 0x03, 0x00, 0x00, 0x47, 0x03, 0x00, 0x00, 0x46, 0x03, // ......K...G...F.
	0x00, 0x00, 0x44, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x23, 0x03, // ..D...Q.......#.
	0x00, 0x00, 0x16, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x8f, 0x00, // ................
	0x00, 0x00, 0x57, 0x03, 0x00, 0x00, 0x23, 0x03, 0x00, 0x00, 0x8e, 0x00, 0x00, 0x00, 0xf7, 0x00, // ..W...#.........
	0x03, 0x00, 0x60, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x57, 0x03, // ..`...........W.
	0x00, 0x00, 0x58, 0x03, 0x00, 0x00, 0x5b, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x5b, 0x03, // ..X...[.......[.
	0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5d, 0x03, 0x00, 0x00, 0x01, 0x00, // ..........].....
	0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x23, 0x03, 0x00, 0x00, 0x9a, 0x00, 0x00, 0x00, 0x85, 0x00, // ......#.........
	0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5e, 0x03, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x5d, 0x03, // ......^.......].
	0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5f, 0x03, 0x00, 0x00, 0x5e, 0x03, // .........._...^.
	0x00, 0x00, 0x9d, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x60, 0x03, 0x00, 0x00, 0xf8, 0x00, // ..........`.....
	0x02, 0x00, 0x58, 0x03, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5a, 0x03, // ..X...........Z.
	0x00, 0x00, 0x94, 0x00, 0x00, 0x00, 0x23, 0x03, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x60, 0x03, // ......#.......`.
	0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x60, 0x03, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x07, 0x00, // ......`.........
	0x00, 0x00, 0x84, 0x03, 0x00, 0x00, 0x5f, 0x03, 0x00, 0x00, 0x5b, 0x03, 0x00, 0x00, 0x5a, 0x03, // ......_...[...Z.
	0x00, 0x00, 0x58, 0x03, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x7d, 0x02, // ..X...P.......}.
	0x00, 0x00, 0x82, 0x03, 0x00, 0x00, 0x83, 0x03, 0x00, 0x00, 0x84, 0x03, 0x00, 0x00, 0xc7, 0x00, // ................
	0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x7e, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x7e, 0x02, // ......~.......~.
	0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x87, 0x03, 0x00, 0x00, 0x8b, 0x03, // ................
	0x00, 0x00, 0x72, 0x02, 0x00, 0x00, 0x7d, 0x02, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0xf9, 0x00, // ..r...}...`.....
	0x02, 0x00, 0x7f, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x6b, 0x02, 0x00, 0x00, 0x94, 0x00, // ..........k.....
	0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xff, 0x02, 0x00, 0x00, 0x81, 0x03, 0x00, 0x00, 0xbf, 0x00, // ................
	0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x01, 0x00, // ................
	0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0xff, 0x02, 0x00, 0x00, 0xc1, 0x00, 0x00, 0x00, 0x85, 0x00, // ..%.............
	0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0xc5, 0x00, // ................
	0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04, 0x03, 0x00, 0x00, 0x03, 0x03, // ................
	0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x06, 0x03, // ................
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, // ................
	0x00, 0x00, 0x07, 0x03, 0x00, 0x00, 0x04, 0x03, 0x00, 0x00, 0x06, 0x03, 0x00, 0x00, 0x8e, 0x00, // ................
	0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x08, 0x03, 0x00, 0x00, 0x81, 0x03, 0x00, 0x00, 0x07, 0x03, // ................
	0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6e, 0x02, 0x00, 0x00, 0x08, 0x03, // ..Q.......n.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6f, 0x02, // ......Q.......o.
	0x00, 0x00, 0x08, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, // ..........Q.....
	0x00, 0x00, 0x70, 0x02, 0x00, 0x00, 0x08, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, // ..p...........P.
	0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x71, 0x02, 0x00, 0x00, 0x6e, 0x02, 0x00, 0x00, 0x6f, 0x02, // ......q...n...o.
	0x00, 0x00, 0x70, 0x02, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x7f, 0x02, // ..p.............
	0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x7f, 0x02, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x0d, 0x00, // ................
	0x00, 0x00, 0x86, 0x03, 0x00, 0x00, 0x87, 0x03, 0x00, 0x00, 0x7e, 0x02, 0x00, 0x00, 0x71, 0x02, // ..........~...q.
	0x00, 0x00, 0x6b, 0x02, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x80, 0x02, 0x00, 0x00, 0xf8, 0x00, // ..k.............
	0x02, 0x00, 0x61, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x63, 0x02, // ..a...Q.......c.
	0x00, 0x00, 0x81, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, // ..........Q.....
	0x00, 0x00, 0x64, 0x02, 0x00, 0x00, 0x81, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, // ..d...........Q.
	0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x65, 0x02, 0x00, 0x00, 0x81, 0x03, 0x00, 0x00, 0x02, 0x00, // ......e.........
	0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x66, 0x02, 0x00, 0x00, 0x63, 0x02, // ..P.......f...c.
	0x00, 0x00, 0x64, 0x02, 0x00, 0x00, 0x65, 0x02, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, 0xf9, 0x00, // ..d...e.........
	0x02, 0x00, 0x80, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x80, 0x02, 0x00, 0x00, 0xf5, 0x00, // ................
	0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x85, 0x03, 0x00, 0x00, 0x86, 0x03, 0x00, 0x00, 0x7f, 0x02, // ................
	0x00, 0x00, 0x66, 0x02, 0x00, 0x00, 0x61, 0x02, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0xc1, 0x01, // ..f...a...>.....
	0x00, 0x00, 0x85, 0x03, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00, 0x00, 0x00, // ..........8.....
	0x50, 0x00,                                                                                     // P.
};
static const bgfx::EmbeddedShader fs_display_dmd_noclip = BGFX_EMBEDDED_SHADER(fs_display_dmd_noclip);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of fragment shader from fs_display.sc to fs_display_alphaseg_noclip with options: ALPHASEG NOCLIP
static const uint8_t fs_display_alphaseg_noclip_mtl[6780] =
{
	0x46, 0x53, 0x48, 0x0b, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x11, 0x64, // FSH............d
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // isplayTexSampler
	0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x64, 0x69, 0x73, 0x70, 0x6c, // ...........displ
	0x61, 0x79, 0x54, 0x65, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, // ayTexTexture....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, // .......displayGl
	0x61, 0x73, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, // assSampler......
	0x00, 0x00, 0x00, 0x00, 0x13, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, // .....displayGlas
	0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // sTexture........
	0x00, 0x00, 0x11, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, // ...staticColor_A
	0x6c, 0x70, 0x68, 0x61, 0x12, 0x01, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x76, // lpha...........v
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, // Color_Intensity.
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, // ..........alphaS
	0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x04, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, // egState..@......
	0x00, 0x0a, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x01, 0x30, 0x00, // ..w_h_height..0.
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, // .......glassAmbi
	0x65, 0x6e, 0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x01, 0x20, // ent_Roughness.. 
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, // ........displayT
	0x65, 0x78, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x64, 0x69, 0x73, // ex...........dis
	0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // playGlass.......
	0x00, 0x00, 0x00, 0x41, 0x19, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, // ...A...#include 
	0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, // <metal_stdlib>.#
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, // include <simd/si
	0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, // md.h>..using nam
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, // espace metal;..s
	0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, // truct _Global.{.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, //     float4 vColo
	0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, // r_Intensity;.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, //  float4 staticCo
	0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // lor_Alpha;.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, // loat4 glassAmbie
	0x6e, 0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x20, 0x20, // nt_Roughness;.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, //   float4 w_h_hei
	0x67, 0x68, 0x74, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // ght;.    float4 
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x34, 0x5d, // alphaSegState[4]
	0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x66, // ;.};..constant f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x32, 0x36, 0x34, 0x20, 0x3d, 0x20, 0x7b, 0x7d, // loat4 _1264 = {}
	0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, // ;..struct xlatMt
	0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // lMain_out.{.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, // float4 bgfx_Frag
	0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, // Data0 [[color(0)
	0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, // ]];.};..struct x
	0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, // latMtlMain_in.{.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, //     float2 v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, // coord0 [[user(lo
	0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // cn0)]];.    floa
	0x74, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x5b, // t2 v_texcoord1 [
	0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, // [user(locn1)]];.
	0x7d, 0x3b, 0x0a, 0x0a, 0x5b, 0x5b, 0x20, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x5f, 0x66, 0x72, 0x61, // };..[[ early_fra
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x20, 0x5d, 0x5d, 0x20, 0x66, // gment_tests ]] f
	0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, // ragment xlatMtlM
	0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, // ain_out xlatMtlM
	0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, // ain(xlatMtlMain_
	0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, // in in [[stage_in
	0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, // ]], constant _Gl
	0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, // obal& _mtl_u [[b
	0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, // uffer(0)]], text
	0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x64, 0x69, 0x73, // ure2d<float> dis
	0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // playTex [[textur
	0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, // e(0)]], texture2
	0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, // d<float> display
	0x47, 0x6c, 0x61, 0x73, 0x73, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, // Glass [[texture(
	0x31, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x64, 0x69, // 1)]], sampler di
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, // splayTexSampler 
	0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, // [[sampler(0)]], 
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, // sampler displayG
	0x6c, 0x61, 0x73, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, // lassSampler [[sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, // mpler(1)]]).{.  
	0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, //   xlatMtlMain_ou
	0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // t out = {};.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x37, 0x36, 0x35, 0x20, 0x3d, 0x20, 0x64, 0x69, // float4 _765 = di
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // splayTex.sample(
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // displayTexSample
	0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, // r, float2(in.v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, // excoord1.x * 0.2
	0x35, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, // 5, in.v_texcoord
	0x31, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 1.y));.    float
	0x34, 0x20, 0x5f, 0x36, 0x39, 0x31, 0x20, 0x3d, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, // 4 _691 = smooths
	0x74, 0x65, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x34, 0x37, 0x34, // tep(float4(0.474
	0x39, 0x39, 0x39, 0x39, 0x39, 0x34, 0x30, 0x33, 0x39, 0x35, 0x33, 0x35, 0x35, 0x32, 0x32, 0x34, // 9999940395355224
	0x36, 0x30, 0x39, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, // 609375), float4(
	0x30, 0x2e, 0x35, 0x32, 0x34, 0x39, 0x39, 0x39, 0x39, 0x37, 0x36, 0x31, 0x35, 0x38, 0x31, 0x34, // 0.52499997615814
	0x32, 0x30, 0x38, 0x39, 0x38, 0x34, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x37, 0x36, 0x35, // 208984375), _765
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x38, // );.    float4 _8
	0x36, 0x31, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x2e, // 61 = displayTex.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, // sample(displayTe
	0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // xSampler, float2
	0x28, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, // ((in.v_texcoord1
	0x2e, 0x78, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x32, // .x * 0.25) + 0.2
	0x35, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, // 5, in.v_texcoord
	0x31, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 1.y));.    float
	0x34, 0x20, 0x5f, 0x37, 0x38, 0x37, 0x20, 0x3d, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, // 4 _787 = smooths
	0x74, 0x65, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x34, 0x37, 0x34, // tep(float4(0.474
	0x39, 0x39, 0x39, 0x39, 0x39, 0x34, 0x30, 0x33, 0x39, 0x35, 0x33, 0x35, 0x35, 0x32, 0x32, 0x34, // 9999940395355224
	0x36, 0x30, 0x39, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, // 609375), float4(
	0x30, 0x2e, 0x35, 0x32, 0x34, 0x39, 0x39, 0x39, 0x39, 0x37, 0x36, 0x31, 0x35, 0x38, 0x31, 0x34, // 0.52499997615814
	0x32, 0x30, 0x38, 0x39, 0x38, 0x34, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x38, 0x36, 0x31, // 208984375), _861
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x38, // );.    float3 _8
	0x31, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // 17 = ((((((_mtl_
	0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, // u.staticColor_Al
	0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // pha.xyz + (_mtl_
	0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, // u.vColor_Intensi
	0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // ty.xyz * _mtl_u.
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x30, 0x5d, // alphaSegState[0]
	0x2e, 0x78, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x36, 0x39, 0x31, 0x2e, 0x78, 0x29, 0x20, 0x2b, // .x)) * _691.x) +
	0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, //  ((_mtl_u.static
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x20, // Color_Alpha.xyz 
	0x2b, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // + (_mtl_u.vColor
	0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, // _Intensity.xyz *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, //  _mtl_u.alphaSeg
	0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, // State[0].y)) * _
	0x36, 0x39, 0x31, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // 691.y)) + ((_mtl
	0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, // _u.staticColor_A
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // lpha.xyz + (_mtl
	0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, // _u.vColor_Intens
	0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // ity.xyz * _mtl_u
	0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x30, // .alphaSegState[0
	0x5d, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x36, 0x39, 0x31, 0x2e, 0x7a, 0x29, 0x29, // ].z)) * _691.z))
	0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, //  + ((_mtl_u.stat
	0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, // icColor_Alpha.xy
	0x7a, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, // z + (_mtl_u.vCol
	0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, // or_Intensity.xyz
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, //  * _mtl_u.alphaS
	0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x30, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x2a, // egState[0].w)) *
	0x20, 0x5f, 0x36, 0x39, 0x31, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x6d, //  _691.w)) + ((_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // tl_u.staticColor
	0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x6d, // _Alpha.xyz + (_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, // tl_u.vColor_Inte
	0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // nsity.xyz * _mtl
	0x5f, 0x75, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, // _u.alphaSegState
	0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x37, 0x38, 0x37, 0x2e, 0x78, // [1].x)) * _787.x
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, // )) + ((_mtl_u.st
	0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, // aticColor_Alpha.
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, // xyz + (_mtl_u.vC
	0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, // olor_Intensity.x
	0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x61, 0x6c, 0x70, 0x68, // yz * _mtl_u.alph
	0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x29, // aSegState[1].y))
	0x20, 0x2a, 0x20, 0x5f, 0x37, 0x38, 0x37, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  * _787.y);.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x39, 0x35, 0x37, 0x20, 0x3d, 0x20, 0x64, 0x69, // float4 _957 = di
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // splayTex.sample(
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // displayTexSample
	0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, // r, float2((in.v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x30, 0x2e, // texcoord1.x * 0.
	0x32, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, // 25) + 0.5, in.v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x20, // texcoord1.y));. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x38, 0x38, 0x33, 0x20, 0x3d, //    float4 _883 =
	0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, //  smoothstep(floa
	0x74, 0x34, 0x28, 0x30, 0x2e, 0x34, 0x37, 0x34, 0x39, 0x39, 0x39, 0x39, 0x39, 0x34, 0x30, 0x33, // t4(0.47499999403
	0x39, 0x35, 0x33, 0x35, 0x35, 0x32, 0x32, 0x34, 0x36, 0x30, 0x39, 0x33, 0x37, 0x35, 0x29, 0x2c, // 95355224609375),
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x35, 0x32, 0x34, 0x39, 0x39, 0x39, //  float4(0.524999
	0x39, 0x37, 0x36, 0x31, 0x35, 0x38, 0x31, 0x34, 0x32, 0x30, 0x38, 0x39, 0x38, 0x34, 0x33, 0x37, // 9761581420898437
	0x35, 0x29, 0x2c, 0x20, 0x5f, 0x39, 0x35, 0x37, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // 5), _957);.    f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x39, 0x34, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, // loat3 _943 = (((
	0x28, 0x28, 0x5f, 0x38, 0x31, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // ((_817 + ((_mtl_
	0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, // u.staticColor_Al
	0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // pha.xyz + (_mtl_
	0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, // u.vColor_Intensi
	0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // ty.xyz * _mtl_u.
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x31, 0x5d, // alphaSegState[1]
	0x2e, 0x7a, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x37, 0x38, 0x37, 0x2e, 0x7a, 0x29, 0x29, 0x20, // .z)) * _787.z)) 
	0x2b, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, // + ((_mtl_u.stati
	0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, // cColor_Alpha.xyz
	0x20, 0x2b, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, //  + (_mtl_u.vColo
	0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, // r_Intensity.xyz 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, // * _mtl_u.alphaSe
	0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x31, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x2a, 0x20, // gState[1].w)) * 
	0x5f, 0x37, 0x38, 0x37, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, // _787.w)) + ((_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, // l_u.staticColor_
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x6d, 0x74, // Alpha.xyz + (_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, // l_u.vColor_Inten
	0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // sity.xyz * _mtl_
	0x75, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, // u.alphaSegState[
	0x32, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x38, 0x38, 0x33, 0x2e, 0x78, 0x29, // 2].x)) * _883.x)
	0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, // ) + ((_mtl_u.sta
	0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, // ticColor_Alpha.x
	0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, // yz + (_mtl_u.vCo
	0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, // lor_Intensity.xy
	0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, // z * _mtl_u.alpha
	0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x32, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x20, // SegState[2].y)) 
	0x2a, 0x20, 0x5f, 0x38, 0x38, 0x33, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, // * _883.y)) + ((_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, // mtl_u.staticColo
	0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x5f, // r_Alpha.xyz + (_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, // mtl_u.vColor_Int
	0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, // ensity.xyz * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, // l_u.alphaSegStat
	0x65, 0x5b, 0x32, 0x5d, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x38, 0x38, 0x33, 0x2e, // e[2].z)) * _883.
	0x7a, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x73, // z)) + ((_mtl_u.s
	0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, // taticColor_Alpha
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, // .xyz + (_mtl_u.v
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, // Color_Intensity.
	0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x61, 0x6c, 0x70, // xyz * _mtl_u.alp
	0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x32, 0x5d, 0x2e, 0x77, 0x29, // haSegState[2].w)
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x38, 0x38, 0x33, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // ) * _883.w);.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x30, 0x35, 0x33, 0x20, 0x3d, 0x20, //  float4 _1053 = 
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // displayTex.sampl
	0x65, 0x28, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x53, 0x61, 0x6d, 0x70, // e(displayTexSamp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x28, 0x69, 0x6e, 0x2e, // ler, float2((in.
	0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x78, 0x20, 0x2a, 0x20, // v_texcoord1.x * 
	0x30, 0x2e, 0x32, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x37, 0x35, 0x2c, 0x20, 0x69, 0x6e, // 0.25) + 0.75, in
	0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x79, 0x29, 0x29, // .v_texcoord1.y))
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x39, 0x37, // ;.    float4 _97
	0x39, 0x20, 0x3d, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x66, // 9 = smoothstep(f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x34, 0x37, 0x34, 0x39, 0x39, 0x39, 0x39, 0x39, // loat4(0.47499999
	0x34, 0x30, 0x33, 0x39, 0x35, 0x33, 0x35, 0x35, 0x32, 0x32, 0x34, 0x36, 0x30, 0x39, 0x33, 0x37, // 4039535522460937
	0x35, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x35, 0x32, 0x34, // 5), float4(0.524
	0x39, 0x39, 0x39, 0x39, 0x37, 0x36, 0x31, 0x35, 0x38, 0x31, 0x34, 0x32, 0x30, 0x38, 0x39, 0x38, // 9999761581420898
	0x34, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x35, 0x33, 0x29, 0x3b, 0x0a, 0x20, // 4375), _1053);. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x30, 0x34, 0x34, 0x20, //    float4 _1044 
	0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x66, 0x61, 0x73, 0x74, // = fast::max(fast
	0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, // ::max(fast::max(
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // fast::max(float4
	0x28, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x61, 0x6c, // (0.0), _mtl_u.al
	0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x30, 0x5d, 0x20, 0x2a, // phaSegState[0] *
	0x20, 0x5f, 0x37, 0x36, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x61, //  _765), _mtl_u.a
	0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x31, 0x5d, 0x20, // lphaSegState[1] 
	0x2a, 0x20, 0x5f, 0x38, 0x36, 0x31, 0x29, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // * _861), _mtl_u.
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x32, 0x5d, // alphaSegState[2]
	0x20, 0x2a, 0x20, 0x5f, 0x39, 0x35, 0x37, 0x29, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, //  * _957), _mtl_u
	0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x33, // .alphaSegState[3
	0x5d, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x30, 0x35, 0x33, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ] * _1053);.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x35, 0x39, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, // float _593 = fas
	0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, // t::max(fast::max
	0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x31, 0x30, 0x34, 0x34, // (fast::max(_1044
	0x2e, 0x78, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x34, 0x34, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x5f, 0x31, // .x, _1044.y), _1
	0x30, 0x34, 0x34, 0x2e, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x34, 0x34, 0x2e, 0x77, 0x29, // 044.z), _1044.w)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x36, 0x30, // ;.    float3 _60
	0x30, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, // 0 = _mtl_u.vColo
	0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, // r_Intensity.xyz 
	0x2a, 0x20, 0x28, 0x5f, 0x35, 0x39, 0x33, 0x20, 0x2a, 0x20, 0x5f, 0x35, 0x39, 0x33, 0x29, 0x3b, // * (_593 * _593);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x36, 0x30, 0x36, // .    float3 _606
	0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x5f, 0x39, 0x34, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x28, //  = ((((_943 + ((
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, // _mtl_u.staticCol
	0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, // or_Alpha.xyz + (
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, // _mtl_u.vColor_In
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // tensity.xyz * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, // tl_u.alphaSegSta
	0x74, 0x65, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x39, 0x37, 0x39, // te[3].x)) * _979
	0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // .x)) + ((_mtl_u.
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, // staticColor_Alph
	0x61, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // a.xyz + (_mtl_u.
	0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, // vColor_Intensity
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x61, 0x6c, // .xyz * _mtl_u.al
	0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x33, 0x5d, 0x2e, 0x79, // phaSegState[3].y
	0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x39, 0x37, 0x39, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, 0x20, // )) * _979.y)) + 
	0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, // ((_mtl_u.staticC
	0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, // olor_Alpha.xyz +
	0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, //  (_mtl_u.vColor_
	0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, // Intensity.xyz * 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, // _mtl_u.alphaSegS
	0x74, 0x61, 0x74, 0x65, 0x5b, 0x33, 0x5d, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x39, // tate[3].z)) * _9
	0x37, 0x39, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // 79.z)) + ((_mtl_
	0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, // u.staticColor_Al
	0x70, 0x68, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // pha.xyz + (_mtl_
	0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, // u.vColor_Intensi
	0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // ty.xyz * _mtl_u.
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x33, 0x5d, // alphaSegState[3]
	0x2e, 0x77, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x39, 0x37, 0x39, 0x2e, 0x77, 0x29, 0x29, 0x20, // .w)) * _979.w)) 
	0x2b, 0x20, 0x28, 0x5f, 0x36, 0x30, 0x30, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // + (_600 * _mtl_u
	0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, // .vColor_Intensit
	0x79, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // y.w);.    float3
	0x20, 0x5f, 0x31, 0x32, 0x35, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, //  _1256;.    if (
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, // _mtl_u.w_h_heigh
	0x74, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // t.x != 0.0).    
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // {.        float4
	0x20, 0x5f, 0x31, 0x30, 0x37, 0x30, 0x20, 0x3d, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, //  _1070 = display
	0x47, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x64, 0x69, 0x73, // Glass.sample(dis
	0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // playGlassSampler
	0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, // , in.v_texcoord0
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x32, 0x35, 0x36, // );.        _1256
	0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x36, 0x30, 0x36, 0x2c, 0x20, 0x5f, 0x6d, 0x74, //  = mix(_606, _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, // l_u.glassAmbient
	0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, // _Roughness.xyz +
	0x20, 0x5f, 0x36, 0x30, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x6d, //  _600, float3(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, // tl_u.glassAmbien
	0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x77, 0x20, 0x2a, 0x20, // t_Roughness.w * 
	0x5f, 0x31, 0x30, 0x37, 0x30, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x30, 0x37, // _1070.w)) * _107
	0x30, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, // 0.xyz;.    }.   
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  else.    {.    
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x32, 0x35, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x36, 0x30, 0x36, //     _1256 = _606
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ;.    }.    floa
	0x74, 0x34, 0x20, 0x5f, 0x31, 0x32, 0x36, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, // t4 _1260;.    if
	0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, //  (_mtl_u.staticC
	0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, 0x20, 0x3d, 0x3d, 0x20, // olor_Alpha.w == 
	0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 0.0).    {.     
	0x20, 0x20, 0x20, 0x5f, 0x31, 0x32, 0x36, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //    _1260 = float
	0x34, 0x28, 0x5f, 0x31, 0x32, 0x35, 0x36, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, // 4(_1256, 1.0);. 
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, //    }.    else.  
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //   {.        floa
	0x74, 0x34, 0x20, 0x5f, 0x31, 0x32, 0x36, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // t4 _1261;.      
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, //   if (_mtl_u.sta
	0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, // ticColor_Alpha.w
	0x20, 0x3d, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  == 1.0).       
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //  {.            f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x30, 0x38, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, // loat _1082 = fas
	0x74, 0x3a, 0x3a, 0x6d, 0x69, 0x6e, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x32, 0x35, 0x36, // t::min(dot(_1256
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, // , float3(0.17620
	0x33, 0x39, 0x39, 0x35, 0x39, 0x34, 0x33, 0x30, 0x36, 0x39, 0x34, 0x35, 0x38, 0x30, 0x30, 0x37, // 3995943069458007
	0x38, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x30, 0x30, // 8125, 0.81298500
	0x32, 0x39, 0x39, 0x34, 0x35, 0x33, 0x37, 0x33, 0x35, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, // 2994537353515625
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x38, 0x39, 0x39, 0x35, 0x34, 0x38, // , 0.010810899548
	0x32, 0x33, 0x32, 0x35, 0x35, 0x35, 0x33, 0x38, 0x39, 0x34, 0x30, 0x34, 0x32, 0x39, 0x36, 0x38, // 2325553894042968
	0x37, 0x35, 0x29, 0x29, 0x2c, 0x20, 0x31, 0x30, 0x30, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, // 75)), 1000.0);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x32, 0x36, 0x31, //            _1261
	0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x32, 0x35, 0x36, 0x20, //  = float4(_1256 
	0x2a, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x31, 0x30, 0x38, 0x32, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, // * (((_1082 * 0.2
	0x35, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x31, 0x30, // 5) + 1.0) / (_10
	0x38, 0x32, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, // 82 + 1.0)), 1.0)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, // ;.        }.    
	0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     else.       
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //  {.            f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x32, 0x36, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, // loat4 _1262;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, //          if (_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, // l_u.staticColor_
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, 0x20, 0x3d, 0x3d, 0x20, 0x32, 0x2e, 0x30, 0x29, 0x0a, // Alpha.w == 2.0).
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, //             {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x30, 0x39, 0x36, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, // oat _1096 = fast
	0x3a, 0x3a, 0x6d, 0x69, 0x6e, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x32, 0x35, 0x36, 0x2c, // ::min(dot(_1256,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x33, //  float3(0.176203
	0x39, 0x39, 0x35, 0x39, 0x34, 0x33, 0x30, 0x36, 0x39, 0x34, 0x35, 0x38, 0x30, 0x30, 0x37, 0x38, // 9959430694580078
	0x31, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x30, 0x30, 0x32, // 125, 0.812985002
	0x39, 0x39, 0x34, 0x35, 0x33, 0x37, 0x33, 0x35, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, // 994537353515625,
	0x20, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x38, 0x39, 0x39, 0x35, 0x34, 0x38, 0x32, //  0.0108108995482
	0x33, 0x32, 0x35, 0x35, 0x35, 0x33, 0x38, 0x39, 0x34, 0x30, 0x34, 0x32, 0x39, 0x36, 0x38, 0x37, // 3255538940429687
	0x35, 0x29, 0x29, 0x2c, 0x20, 0x31, 0x30, 0x30, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, // 5)), 1000.0);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x31, 0x30, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, // oat3 _1104 = _12
	0x35, 0x36, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x31, 0x30, 0x39, 0x36, 0x20, 0x2a, 0x20, // 56 * (((_1096 * 
	0x30, 0x2e, 0x32, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, // 0.25) + 1.0) / (
	0x5f, 0x31, 0x30, 0x39, 0x36, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, // _1096 + 1.0));. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x31, 0x30, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x31, // loat _1107 = _11
	0x30, 0x34, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 04.x;.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x35, //       float _125
	0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 7;.             
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x30, 0x37, 0x20, 0x3c, 0x3d, 0x20, //    if (_1107 <= 
	0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x30, 0x30, 0x30, 0x39, 0x30, 0x37, 0x33, // 0.00313080009073
	0x30, 0x31, 0x39, 0x30, 0x32, 0x37, 0x37, 0x30, 0x39, 0x39, 0x36, 0x30, 0x39, 0x33, 0x37, 0x35, // 0190277099609375
	0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ).              
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   {.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x32, 0x35, 0x37, 0x20, 0x3d, 0x20, //         _1257 = 
	0x31, 0x32, 0x2e, 0x39, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x37, 0x36, 0x32, 0x39, 0x33, 0x39, // 12.9200000762939
	0x34, 0x35, 0x33, 0x31, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x31, 0x30, 0x37, 0x3b, 0x0a, // 453125 * _1107;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // }.              
	0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   else.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x32, //              _12
	0x35, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x35, 0x34, 0x39, 0x39, 0x39, 0x39, 0x34, // 57 = (1.05499994
	0x37, 0x35, 0x34, 0x37, 0x39, 0x31, 0x32, 0x35, 0x39, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x20, // 754791259765625 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x5f, 0x31, 0x31, 0x30, 0x37, 0x2c, 0x20, 0x30, 0x2e, // * powr(_1107, 0.
	0x34, 0x31, 0x36, 0x36, 0x36, 0x36, 0x36, 0x35, 0x36, 0x37, 0x33, 0x32, 0x35, 0x35, 0x39, 0x32, // 4166666567325592
	0x30, 0x34, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, // 041015625)) - 0.
	0x30, 0x35, 0x34, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x30, 0x31, 0x39, 0x37, 0x36, 0x37, // 0549999997019767
	0x37, 0x36, 0x31, 0x32, 0x33, 0x30, 0x34, 0x36, 0x38, 0x37, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 76123046875;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, //              }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x31, 0x30, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x31, // loat _1109 = _11
	0x30, 0x34, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 04.y;.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x35, //       float _125
	0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 8;.             
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x30, 0x39, 0x20, 0x3c, 0x3d, 0x20, //    if (_1109 <= 
	0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x30, 0x30, 0x30, 0x39, 0x30, 0x37, 0x33, // 0.00313080009073
	0x30, 0x31, 0x39, 0x30, 0x32, 0x37, 0x37, 0x30, 0x39, 0x39, 0x36, 0x30, 0x39, 0x33, 0x37, 0x35, // 0190277099609375
	0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ).              
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   {.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x32, 0x35, 0x38, 0x20, 0x3d, 0x20, //         _1258 = 
	0x31, 0x32, 0x2e, 0x39, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x37, 0x36, 0x32, 0x39, 0x33, 0x39, // 12.9200000762939
	0x34, 0x35, 0x33, 0x31, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x31, 0x30, 0x39, 0x3b, 0x0a, // 453125 * _1109;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // }.              
	0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   else.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x32, //              _12
	0x35, 0x38, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x35, 0x34, 0x39, 0x39, 0x39, 0x39, 0x34, // 58 = (1.05499994
	0x37, 0x35, 0x34, 0x37, 0x39, 0x31, 0x32, 0x35, 0x39, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x20, // 754791259765625 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x5f, 0x31, 0x31, 0x30, 0x39, 0x2c, 0x20, 0x30, 0x2e, // * powr(_1109, 0.
	0x34, 0x31, 0x36, 0x36, 0x36, 0x36, 0x36, 0x35, 0x36, 0x37, 0x33, 0x32, 0x35, 0x35, 0x39, 0x32, // 4166666567325592
	0x30, 0x34, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, // 041015625)) - 0.
	0x30, 0x35, 0x34, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x30, 0x31, 0x39, 0x37, 0x36, 0x37, // 0549999997019767
	0x37, 0x36, 0x31, 0x32, 0x33, 0x30, 0x34, 0x36, 0x38, 0x37, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 76123046875;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, //              }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x31, 0x31, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x31, // loat _1111 = _11
	0x30, 0x34, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 04.z;.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x35, //       float _125
	0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 9;.             
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x31, 0x31, 0x20, 0x3c, 0x3d, 0x20, //    if (_1111 <= 
	0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x30, 0x30, 0x30, 0x39, 0x30, 0x37, 0x33, // 0.00313080009073
	0x30, 0x31, 0x39, 0x30, 0x32, 0x37, 0x37, 0x30, 0x39, 0x39, 0x36, 0x30, 0x39, 0x33, 0x37, 0x35, // 0190277099609375
	0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ).              
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   {.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x32, 0x35, 0x39, 0x20, 0x3d, 0x20, //         _1259 = 
	0x31, 0x32, 0x2e, 0x39, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x37, 0x36, 0x32, 0x39, 0x33, 0x39, // 12.9200000762939
	0x34, 0x35, 0x33, 0x31, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x31, 0x31, 0x31, 0x3b, 0x0a, // 453125 * _1111;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // }.              
	0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   else.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x32, //              _12
	0x35, 0x39, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x35, 0x34, 0x39, 0x39, 0x39, 0x39, 0x34, // 59 = (1.05499994
	0x37, 0x35, 0x34, 0x37, 0x39, 0x31, 0x32, 0x35, 0x39, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x20, // 754791259765625 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x5f, 0x31, 0x31, 0x31, 0x31, 0x2c, 0x20, 0x30, 0x2e, // * powr(_1111, 0.
	0x34, 0x31, 0x36, 0x36, 0x36, 0x36, 0x36, 0x35, 0x36, 0x37, 0x33, 0x32, 0x35, 0x35, 0x39, 0x32, // 4166666567325592
	0x30, 0x34, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, // 041015625)) - 0.
	0x30, 0x35, 0x34, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x30, 0x31, 0x39, 0x37, 0x36, 0x37, // 0549999997019767
	0x37, 0x36, 0x31, 0x32, 0x33, 0x30, 0x34, 0x36, 0x38, 0x37, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 76123046875;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, //              }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //                _
	0x31, 0x32, 0x36, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, // 1262 = float4(_1
	0x32, 0x35, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x35, 0x38, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x35, // 257, _1258, _125
	0x39, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 9, 1.0);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      }.         
	0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    else.        
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x32, 0x36, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, //       _1262 = _1
	0x32, 0x36, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 264;.           
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //  }.            _
	0x31, 0x32, 0x36, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x36, 0x32, 0x3b, 0x0a, 0x20, 0x20, // 1261 = _1262;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x5f, 0x31, 0x32, 0x36, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x36, 0x31, 0x3b, 0x0a, 0x20, // _1260 = _1261;. 
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, //    }.    out.bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, // x_FragData0 = _1
	0x32, 0x36, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 260;.    return 
	0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, 0xc0, 0x00,                         // out;.}......
};
static const uint8_t fs_display_alphaseg_noclip_essl[8136] =
{
	0x46, 0x53, 0x48, 0x0b, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb5, 0x1f, // FSH.............
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // s.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, // arying in.precis
	0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3b, // ion highp float;
	0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // .precision highp
	0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, //  int;.#define sh
	0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adow2D(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //  _coord) texture
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // (_sampler, _coor
	0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, // d).#define shado
	0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // w2DProj(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // eProj(_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x6f, 0x75, 0x74, 0x20, 0x6d, 0x65, 0x64, 0x69, // _coord).out medi
	0x75, 0x6d, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, // ump vec4 bgfx_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // agColor;.varying
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, //  vec2 v_texcoord
	0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, // 0;.varying vec2 
	0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x3b, 0x0a, 0x76, 0x65, 0x63, // v_texcoord1;.vec
	0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // 3 instMul(vec3 _
	0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, // vec, mat3 _mtx) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, // { return ( (_vec
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // ) * (_mtx) ); }.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, // vec3 instMul(mat
	0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, // 3 _mtx, vec3 _ve
	0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, // c) { return ( (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, // mtx) * (_vec) );
	0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, //  }.vec4 instMul(
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // vec4 _vec, mat4 
	0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, // _mtx) { return (
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, //  (_vec) * (_mtx)
	0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, //  ); }.vec4 instM
	0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, // ul(mat4 _mtx, ve
	0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // c4 _vec) { retur
	0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, // n ( (_mtx) * (_v
	0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, // ec) ); }.float r
	0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, // cp(float _a) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, // eturn 1.0/_a; }.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, // vec2 rcp(vec2 _a
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // ) { return vec2(
	0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // 1.0)/_a; }.vec3 
	0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, // rcp(vec3 _a) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, // eturn vec3(1.0)/
	0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, // _a; }.vec4 rcp(v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec4 _a) { return
	0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, //  vec4(1.0)/_a; }
	0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // .vec2 vec2_splat
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // (float _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, // urn vec2(_x, _x)
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, // ; }.vec3 vec3_sp
	0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // lat(float _x) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, // return vec3(_x, 
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // _x, _x); }.vec4 
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // vec4_splat(float
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, //  _x) { return ve
	0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // c4(_x, _x, _x, _
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, // x); }.uvec2 uvec
	0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, // 2_splat(uint _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, //  { return uvec2(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, // _x, _x); }.uvec3
	0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, //  uvec3_splat(uin
	0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, // t _x) { return u
	0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, // vec3(_x, _x, _x)
	0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, // ; }.uvec4 uvec4_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // splat(uint _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, //  return uvec4(_x
	0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // , _x, _x, _x); }
	0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, // .mat4 mtxFromRow
	0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // s(vec4 _0, vec4 
	0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, // _1, vec4 _2, vec
	0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, // 4 _3).{.return t
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, // ranspose(mat4(_0
	0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, // , _1, _2, _3) );
	0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, // .}.mat4 mtxFromC
	0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, // ols(vec4 _0, vec
	0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, // 4 _1, vec4 _2, v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec4 _3).{.return
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, //  mat4(_0, _1, _2
	0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, // , _3);.}.mat3 mt
	0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // xFromRows(vec3 _
	0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // 0, vec3 _1, vec3
	0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, //  _2).{.return tr
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, // anspose(mat3(_0,
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, //  _1, _2) );.}.ma
	0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, // t3 mtxFromCols(v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, // ec3 _0, vec3 _1,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  vec3 _2).{.retu
	0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, // rn mat3(_0, _1, 
	0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // _2);.}.uniform v
	0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, // ec4 u_viewRect;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, // uniform vec4 u_v
	0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // iewTexel;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, // m mat4 u_view;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, // niform mat4 u_in
	0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // vView;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // at4 u_proj;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, // orm mat4 u_invPr
	0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // oj;.uniform mat4
	0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, //  u_viewProj;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, // form mat4 u_invV
	0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // iewProj;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, //  mat4 u_model[32
	0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // ];.uniform mat4 
	0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // u_modelView;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, // form mat4 u_mode
	0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // lViewProj;.unifo
	0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, // rm vec4 u_alphaR
	0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, // ef4;.float sqr( 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // float v).{.retur
	0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, // n v*v;.}.vec2 sq
	0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // r( vec2 v).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // urn v*v;.}.vec3 
	0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // sqr( vec3 v).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // eturn v*v;.}.vec
	0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // 3 mul_w1( vec3 v
	0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // , mat4 m).{.retu
	0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // rn v.x*m[0].xyz 
	0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // + (v.y*m[1].xyz 
	0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // + (v.z*m[2].xyz 
	0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // + m[3].xyz));.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, // float acos_appro
	0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, // x_divPI( float v
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, // ).{.float x = ab
	0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, // s(v);.if(1. - x 
	0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, // <= 0.00006103515
	0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, // 625).return (v >
	0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, // = 0.) ? 0. : 1.;
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, // .float res = ((-
	0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // 0.155972/3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, // 6433832795) * x 
	0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, // + (1.56467/3.141
	0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, // 5926535897932384
	0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, // 626433832795) ) 
	0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, // * sqrt(1. - x);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, // return (v >= 0.)
	0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, //  ? res : 1. - re
	0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, // s;.}.float atan2
	0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x20, // _approx_div2PI( 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, // float y, float x
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, // ).{.float abs_y 
	0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // = abs(y);.float 
	0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, // abs_x = abs(x);.
	0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, // if(abs_x <= 0.00
	0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, // 006103515625 && 
	0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, // abs_y <= 0.00006
	0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // 103515625).retur
	0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, // n 0.;.float r = 
	0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, // (abs_x - abs_y) 
	0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, // / (abs_x + abs_y
	0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, // );.float angle =
	0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, //  ((x < 0.) ? (3.
	0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, // /8.) : (1./8.)).
	0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, // + (0.211868 /(2.
	0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, // *3.1415926535897
	0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, // 9323846264338327
	0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, // 95) * r * r - 0.
	0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, // 987305 /(2.*3.14
	0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, // 1592653589793238
	0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x29, 0x20, // 4626433832795)) 
	0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, // * ((x < 0.) ? -r
	0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, //  : r);.return (y
	0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, //  < 0.) ? -angle 
	0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // : angle;.}.float
	0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, //  asin_approx_div
	0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, // PI( float v).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, // loat x = abs(v);
	0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, // .if(1. - x <= 0.
	0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, // 00006103515625).
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, // return (v >= 0.)
	0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x66, //  ? 0.5 : -0.5;.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, // loat res = ((-0.
	0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, // 155972/3.1415926
	0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, // 5358979323846264
	0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, // 33832795) * x + 
	0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // (1.56467/3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, // 6433832795) ) * 
	0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, // sqrt(1. - x);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // turn (v >= 0.) ?
	0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, //  0.5 - res : -0.
	0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // 5 + res;.}.vec2 
	0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, // ray_to_equirecta
	0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // ngular_uv( vec3 
	0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, // ray).{.return ve
	0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, // c2(.0.5 + atan2_
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, // approx_div2PI(ra
	0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, // y.y, ray.x),.aco
	0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, // s_approx_divPI(r
	0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ay.z));.}.float 
	0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, // InvsRGB( float c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // olor).{.if (colo
	0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, // r <= 0.04045).re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // turn color * (1.
	0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, // 0/12.92);.else.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // eturn pow(color 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, // * (1.0/1.055) + 
	0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, // (0.055/1.055), 2
	0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, // .4);.}.float Inv
	0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, // Rec709( float co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // lor).{.if (color
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  <= 0.081).retur
	0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, // n color * (1.0/4
	0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // .5);.else.return
	0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, //  pow(color * (1.
	0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, // 0/1.099) + (0.09
	0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, // 9/1.099), 1.0/0.
	0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, // 45);.}.float Inv
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, // Gamma( float col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, // or).{.return Inv
	0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // sRGB(color);.}.v
	0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, // ec3 InvGamma( ve
	0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // c3 color).{.retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, // rn vec3(InvGamma
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // (color.x),InvGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, // ma(color.y),InvG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, // amma(color.z));.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, // }.vec3 InvToneMa
	0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, // p( vec3 color).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, // .float inv_2bh =
	0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  0.5/0.25;.float
	0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, //  bh = 4.0*0.25 -
	0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, //  2.0;.return (co
	0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, // lor - 1.0 + sqrt
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, // (color*(color + 
	0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, // bh) + 1.0))*inv_
	0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, // 2bh;.}.float sRG
	0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, // B( float f).{.fl
	0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, // oat s;.if (f <= 
	0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, // 0.0031308).s = 1
	0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, // 2.92 * f;.else.s
	0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, //  = 1.055 * pow(f
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, // , 1.0/2.4) - 0.0
	0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, // 55;.return s;.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, // float Rec709( fl
	0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // oat f).{.float s
	0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, // ;.if (f <= 0.018
	0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, // ).s = 4.5 * f;.e
	0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, // lse.s = 1.099 * 
	0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, // pow(f, 0.45) - 0
	0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, // .099;.return s;.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, // }.float FBGamma(
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, //  float color).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // return sRGB(colo
	0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, // r);.}.vec2 FBGam
	0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // ma( vec2 color).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x46, 0x42, // {.return vec2(FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, // Gamma(color.x),F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, // BGamma(color.y))
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, // ;.}.vec3 FBGamma
	0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // ( vec3 color).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, // return vec3(FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, // mma(color.x),FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, // amma(color.y),FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, // Gamma(color.z));
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x32, // .}.vec3 FBGamma2
	0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, // 2( vec3 color).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x70, 0x6f, 0x77, // .return vec3(pow
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, // (color.x, 1.0/2.
	0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x2c, 0x20, // 2),pow(color.y, 
	0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, // 1.0/2.2),pow(col
	0x6f, 0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x29, 0x3b, // or.z, 1.0/2.2));
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, // .}.float FBToneM
	0x61, 0x70, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // ap( float l).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, // eturn l * ((l*0.
	0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, // 25 + 1.0) / (l +
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, //  1.0));.}.vec2 F
	0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, // BToneMap( vec2 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, // olor).{.float l 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, // = dot(color,vec2
	0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, // (0.176204+0.0108
	0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, // 109*0.5,0.812985
	0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, // +0.0108109*0.5))
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // ;.return color *
	0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, //  ((l*0.25 + 1.0)
	0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, //  / (l + 1.0));.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, // .vec3 FBToneMap(
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, //  vec3 color).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, // loat l = dot(col
	0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, // or,vec3(0.176204
	0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, // ,0.812985,0.0108
	0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, // 109));.return co
	0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, // lor * ((l*0.25 +
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, //  1.0) / (l + 1.0
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, 0x64, 0x69, 0x74, // ));.}.vec4 Addit
	0x69, 0x76, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // ive( vec4 cBase,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, //  vec4 cBlend, fl
	0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // oat percent).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, // eturn cBase + cB
	0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, // lend*percent;.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, // vec3 Screen ( ve
	0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // c3 cBase, vec3 c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // Blend).{.return 
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, // 1.0 - (1.0 - cBa
	0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, // se) * (1.0 - cBl
	0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, // end);.}.vec4 Scr
	0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // een ( vec4 cBase
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, // , vec4 cBlend).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, // .return 1.0 - (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, // .0 - cBase) * (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // .0 - cBlend);.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, // vec3 ScreenHDR (
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, //  vec3 cBase, vec
	0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 3 cBlend).{.retu
	0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, // rn max(1.0 - (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // 0 - cBase) * (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, // 0 - cBlend), vec
	0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // 3(0.,0.,0.));.}.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, // vec4 ScreenHDR (
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, //  vec4 cBase, vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 4 cBlend).{.retu
	0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, // rn max(1.0 - (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // 0 - cBase) * (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, // 0 - cBlend), vec
	0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, // 4(0.,0.,0.,0.));
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, // .}.vec4 Multiply
	0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, //  ( vec4 cBase, v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ec4 cBlend, floa
	0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // t percent).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, // urn cBase * cBle
	0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // nd*percent;.}.ve
	0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, // c4 Overlay ( vec
	0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // 4 cBase, vec4 cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, // lend).{.vec4 cNe
	0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, // w = step(0.5, cB
	0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, // ase);.cNew = mix
	0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, // (cBase*cBlend*2.
	0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, // 0, 1.0-2.0*(1.0-
	0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, // cBase)*(1.0-cBle
	0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // nd), cNew);.retu
	0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // rn cNew;.}.vec4 
	0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, // OverlayHDR ( vec
	0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // 4 cBase, vec4 cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, // lend).{.vec4 cNe
	0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, // w = step(0.5, cB
	0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, // ase);.cNew = max
	0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, // (mix(cBase*cBlen
	0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, // d*2.0, 1.0-2.0*(
	0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, // 1.0-cBase)*(1.0-
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, // cBlend), cNew), 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, // vec4(0.,0.,0.,0.
	0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, // ));.return cNew;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, // .}.vec3 cos_hemi
	0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x20, 0x76, // sphere_sample( v
	0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, // ec2 t).{.float p
	0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, // hi = t.y * (2.0*
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, // 5);.float cosThe
	0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // ta = sqrt(1.0 - 
	0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, // t.x);.float sinT
	0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, // heta = sqrt(t.x)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x7b, // ;.float sp,cp;.{
	0x73, 0x70, 0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x63, 0x70, 0x3d, 0x63, // sp=sin(phi);cp=c
	0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // os(phi);};.retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, // n vec3(cp * sinT
	0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, // heta, cosTheta, 
	0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, // sp * sinTheta);.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, // }.vec3 rotate_to
	0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x28, 0x20, 0x76, // _vector_upper( v
	0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, // ec3 vec, vec3 no
	0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // rmal).{.if(norma
	0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, // l.y > -0.99999).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, // {.float h = 1.0/
	0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, // (1.0+normal.y);.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, // float hz = h*nor
	0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, // mal.z;.float hzx
	0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, //  = hz*normal.x;.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, // return vec3(.vec
	0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, // .x * (normal.y+h
	0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, // z*normal.z) + ve
	0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, // c.y * normal.x -
	0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, //  vec.z * hzx,.ve
	0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, // c.y * normal.y -
	0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, //  vec.x * normal.
	0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // x - vec.z * norm
	0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, // al.z,.vec.y * no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, // rmal.z - vec.x *
	0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, //  hzx + vec.z * (
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // normal.y+h*norma
	0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, // l.x*normal.x));.
	0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, // }.else return -v
	0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, // ec;.}.uniform sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, // mpler2D displayT
	0x65, 0x78, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, // ex;.uniform samp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, // ler2D displayGla
	0x73, 0x73, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // ss;.uniform vec4
	0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, //  vColor_Intensit
	0x79, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // y;.uniform vec4 
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, // staticColor_Alph
	0x61, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // a;.uniform vec4 
	0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x6f, 0x75, // glassAmbient_Rou
	0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // ghness;.uniform 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x3b, // vec4 w_h_height;
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x54, 0x6f, // .vec3 ReinhardTo
	0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // neMap(vec3 color
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x6d, 0x69, // ).{.float l = mi
	0x6e, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x76, 0x65, 0x63, // n(dot(color, vec
	0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x20, 0x30, 0x2e, 0x38, 0x31, // 3(0.176204, 0.81
	0x32, 0x39, 0x38, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, // 2985, 0.0108109)
	0x29, 0x2c, 0x20, 0x31, 0x30, 0x30, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // ), 1000.0);.retu
	0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x20, 0x2a, // rn color * ((l *
	0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, //  0.25 + 1.0) / (
	0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, // l + 1.0));.}.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, // form vec4 alphaS
	0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x34, 0x5d, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, // egState[4];.void
	0x20, 0x73, 0x68, 0x61, 0x64, 0x65, 0x34, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x73, 0x74, 0x61, //  shade4(vec4 sta
	0x74, 0x65, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x73, 0x64, // te, sampler2D sd
	0x66, 0x54, 0x65, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x2c, 0x20, 0x69, // fTex, vec2 uv, i
	0x6e, 0x6f, 0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, // nout vec3 color,
	0x20, 0x69, 0x6e, 0x6f, 0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x67, 0x6c, 0x6f, 0x77, //  inout vec4 glow
	0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x73, 0x64, 0x66, 0x20, 0x3d, 0x20, 0x74, // ).{.vec4 sdf = t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x73, 0x64, 0x66, 0x54, 0x65, 0x78, 0x2c, 0x20, 0x75, // exture(sdfTex, u
	0x76, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x20, 0x3d, // v);.vec4 inner =
	0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, //  smoothstep(vec4
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x34, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x76, // _splat(0.475), v
	0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x35, 0x32, 0x35, 0x29, // ec4_splat(0.525)
	0x2c, 0x20, 0x73, 0x64, 0x66, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, // , sdf);.color +=
	0x20, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x73, 0x74, 0x61, //  inner.x * ((sta
	0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, // ticColor_Alpha.r
	0x67, 0x62, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, // gb) + (vColor_In
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x20, 0x2a, 0x20, 0x73, // tensity.rgb) * s
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, // tate.x);.color +
	0x3d, 0x20, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x73, 0x74, // = inner.y * ((st
	0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, // aticColor_Alpha.
	0x72, 0x67, 0x62, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, // rgb) + (vColor_I
	0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x20, 0x2a, 0x20, // ntensity.rgb) * 
	0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // state.y);.color 
	0x2b, 0x3d, 0x20, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x73, // += inner.z * ((s
	0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, // taticColor_Alpha
	0x2e, 0x72, 0x67, 0x62, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, // .rgb) + (vColor_
	0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x20, 0x2a, // Intensity.rgb) *
	0x20, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, //  state.z);.color
	0x20, 0x2b, 0x3d, 0x20, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x77, 0x20, 0x2a, 0x20, 0x28, 0x28, //  += inner.w * ((
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, // staticColor_Alph
	0x61, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // a.rgb) + (vColor
	0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x20, // _Intensity.rgb) 
	0x2a, 0x20, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x67, 0x6c, 0x6f, 0x77, // * state.w);.glow
	0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x77, 0x2c, 0x20, 0x73, 0x74, 0x61, //  = max(glow, sta
	0x74, 0x65, 0x20, 0x2a, 0x20, 0x73, 0x64, 0x66, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, 0x69, // te * sdf);.}.voi
	0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // d main().{.vec3 
	0x6c, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // lum = vec3_splat
	0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x67, 0x6c, 0x6f, 0x77, // (0.0);.vec4 glow
	0x34, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, // 4 = vec4_splat(0
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x73, 0x68, 0x61, 0x64, 0x65, 0x34, 0x28, 0x61, 0x6c, 0x70, 0x68, // .0);.shade4(alph
	0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x30, 0x5d, 0x2c, 0x20, 0x64, 0x69, // aSegState[0], di
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x76, // splayTex, vec2(v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x30, // _texcoord1.x * 0
	0x2e, 0x32, 0x35, 0x20, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, // .25 , v_texcoord
	0x31, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x6c, 0x75, 0x6d, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x34, // 1.y), lum, glow4
	0x29, 0x3b, 0x0a, 0x73, 0x68, 0x61, 0x64, 0x65, 0x34, 0x28, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, // );.shade4(alphaS
	0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x31, 0x5d, 0x2c, 0x20, 0x64, 0x69, 0x73, 0x70, // egState[1], disp
	0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x76, 0x5f, 0x74, // layTex, vec2(v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, // excoord1.x * 0.2
	0x35, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // 5 + 0.25, v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x6c, 0x75, 0x6d, 0x2c, 0x20, 0x67, // oord1.y), lum, g
	0x6c, 0x6f, 0x77, 0x34, 0x29, 0x3b, 0x0a, 0x73, 0x68, 0x61, 0x64, 0x65, 0x34, 0x28, 0x61, 0x6c, // low4);.shade4(al
	0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x32, 0x5d, 0x2c, 0x20, // phaSegState[2], 
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, // displayTex, vec2
	0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x78, 0x20, 0x2a, // (v_texcoord1.x *
	0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x30, 0x2c, 0x20, 0x76, 0x5f, //  0.25 + 0.50, v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x6c, 0x75, // texcoord1.y), lu
	0x6d, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x34, 0x29, 0x3b, 0x0a, 0x73, 0x68, 0x61, 0x64, 0x65, // m, glow4);.shade
	0x34, 0x28, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, // 4(alphaSegState[
	0x33, 0x5d, 0x2c, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x2c, 0x20, // 3], displayTex, 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, // vec2(v_texcoord1
	0x2e, 0x78, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x37, 0x35, // .x * 0.25 + 0.75
	0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x79, 0x29, // , v_texcoord1.y)
	0x2c, 0x20, 0x6c, 0x75, 0x6d, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x34, 0x29, 0x3b, 0x0a, 0x66, // , lum, glow4);.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x4c, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x6d, // loat glowLum = m
	0x61, 0x78, 0x28, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x77, 0x34, // ax(max(max(glow4
	0x2e, 0x78, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x34, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x67, 0x6c, // .x, glow4.y), gl
	0x6f, 0x77, 0x34, 0x2e, 0x7a, 0x29, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x34, 0x2e, 0x77, 0x29, // ow4.z), glow4.w)
	0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x20, 0x3d, 0x20, 0x67, 0x6c, // ;.vec3 glow = gl
	0x6f, 0x77, 0x4c, 0x75, 0x6d, 0x20, 0x2a, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x4c, 0x75, 0x6d, 0x20, // owLum * glowLum 
	0x2a, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, // * (vColor_Intens
	0x69, 0x74, 0x79, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x6c, 0x75, 0x6d, 0x20, 0x2b, 0x3d, // ity.rgb);.lum +=
	0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, //  (vColor_Intensi
	0x74, 0x79, 0x2e, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x3b, 0x0a, 0x69, 0x66, // ty.w) * glow;.if
	0x20, 0x28, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x78, 0x20, //  ((w_h_height.x 
	0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // != 0.0)).{.vec4 
	0x67, 0x6c, 0x61, 0x73, 0x73, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, // glass = texture(
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x2c, 0x20, 0x76, 0x5f, // displayGlass, v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x6c, 0x75, 0x6d, 0x20, // texcoord0);.lum 
	0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6c, 0x75, 0x6d, 0x2c, 0x20, 0x28, 0x28, 0x67, 0x6c, 0x61, // = mix(lum, ((gla
	0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, // ssAmbient_Roughn
	0x65, 0x73, 0x73, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x20, 0x2b, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x29, // ess.rgb) + glow)
	0x2c, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, // , (glassAmbient_
	0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x67, // Roughness.w) * g
	0x6c, 0x61, 0x73, 0x73, 0x2e, 0x61, 0x29, 0x20, 0x2a, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x2e, // lass.a) * glass.
	0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x73, 0x74, 0x61, 0x74, // rgb;.}.if ((stat
	0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, 0x29, // icColor_Alpha.w)
	0x20, 0x3d, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, //  == 0.0).bgfx_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x6c, // agColor = vec4(l
	0x75, 0x6d, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x69, // um, 1.0);.else i
	0x66, 0x20, 0x28, 0x28, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, // f ((staticColor_
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x29, // Alpha.w) == 1.0)
	0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // .bgfx_FragColor 
	0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x54, // = vec4(ReinhardT
	0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x6c, 0x75, 0x6d, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, // oneMap(lum), 1.0
	0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x73, 0x74, 0x61, // );.else if ((sta
	0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, // ticColor_Alpha.w
	0x29, 0x20, 0x3d, 0x3d, 0x20, 0x32, 0x2e, 0x30, 0x29, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, // ) == 2.0).bgfx_F
	0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // ragColor = vec4(
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, // FBGamma(Reinhard
	0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x6c, 0x75, 0x6d, 0x29, 0x29, 0x2c, 0x20, 0x31, // ToneMap(lum)), 1
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,                                                 // .0);.}..
};
static const uint8_t fs_display_alphaseg_noclip_glsl[8502] =
{
	0x46, 0x53, 0x48, 0x0b, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x21, // FSH...........#!
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x6f, // ..#version 440.o
	0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, // ut vec4 bgfx_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // gColor;.#define 
	0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x62, 0x67, 0x66, // gl_FragColor bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x0a, 0x23, 0x64, 0x65, 0x66, // x_FragColor.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x20, 0x20, // ine texture2D   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, //        texture.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // Lod       textur
	0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, // eLod.#define tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ture2DGrad      
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, // textureGrad.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, // ine texture2DPro
	0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, // jLod   texturePr
	0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // ojLod.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, // xture2DProjGrad 
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, //  textureProjGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // CubeLod     text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, // ureLod.#define t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, // extureCubeGrad  
	0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, //   textureGrad.#d
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, // efine texture3D 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //          texture
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, 0x65, 0x78, 0x74, // 2DLodOffset text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, // ureLodOffset.#de
	0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, // fine attribute i
	0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // n.#define varyin
	0x67, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, // g in.#define bgf
	0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // xShadow2D(_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, // er, _coord)     
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // vec4_splat(textu
	0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // re(_sampler, _co
	0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, // ord) ).#define b
	0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, // gfxShadow2DProj(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, // ) vec4_splat(tex
	0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // tureProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x76, 0x61, 0x72, // r, _coord) ).var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // ying vec2 v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, // oord0;.varying v
	0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x3b, // ec2 v_texcoord1;
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, // .vec3 instMul(ve
	0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, // c3 _vec, mat3 _m
	0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, // tx) { return ( (
	0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, // _vec) * (_mtx) )
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, // ; }.vec3 instMul
	0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // (mat3 _mtx, vec3
	0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _vec) { return 
	0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, // ( (_mtx) * (_vec
	0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, // ) ); }.vec4 inst
	0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, // Mul(vec4 _vec, m
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // at4 _mtx) { retu
	0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, // rn ( (_vec) * (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, // mtx) ); }.vec4 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, // nstMul(mat4 _mtx
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, // , vec4 _vec) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, // eturn ( (_mtx) *
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, //  (_vec) ); }.flo
	0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, // at rcp(float _a)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, //  { return 1.0/_a
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, // ; }.vec2 rcp(vec
	0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // 2 _a) { return v
	0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // ec2(1.0)/_a; }.v
	0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, // ec3 rcp(vec3 _a)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, //  { return vec3(1
	0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, // .0)/_a; }.vec4 r
	0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // cp(vec4 _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, // turn vec4(1.0)/_
	0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, // a; }.vec2 vec2_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // plat(float _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, //  return vec2(_x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, //  _x); }.vec3 vec
	0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, // 3_splat(float _x
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // ) { return vec3(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // _x, _x, _x); }.v
	0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, // ec4 vec4_splat(f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // loat _x) { retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // n vec4(_x, _x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, // x, _x); }.uvec2 
	0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec2_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, //  _x) { return uv
	0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, // ec2(_x, _x); }.u
	0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // vec3 uvec3_splat
	0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // (uint _x) { retu
	0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // rn uvec3(_x, _x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, //  _x); }.uvec4 uv
	0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, // ec4_splat(uint _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, // x) { return uvec
	0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // 4(_x, _x, _x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, // ); }.mat4 mtxFro
	0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, // mRows(vec4 _0, v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, // ec4 _1, vec4 _2,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  vec4 _3).{.retu
	0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, // rn transpose(mat
	0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, // 4(_0, _1, _2, _3
	0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, // ) );.}.mat4 mtxF
	0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, // romCols(vec4 _0,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, //  vec4 _1, vec4 _
	0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 2, vec4 _3).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, // turn mat4(_0, _1
	0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, // , _2, _3);.}.mat
	0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, // 3 mtxFromRows(ve
	0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, // c3 _0, vec3 _1, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // vec3 _2).{.retur
	0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, // n transpose(mat3
	0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, // (_0, _1, _2) );.
	0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, // }.mat3 mtxFromCo
	0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // ls(vec3 _0, vec3
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, //  _1, vec3 _2).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, // return mat3(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // _1, _2);.}.unifo
	0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, // rm vec4 u_viewRe
	0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // ct;.uniform vec4
	0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, //  u_viewTexel;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // iform mat4 u_vie
	0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // w;.uniform mat4 
	0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // u_invView;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, // rm mat4 u_proj;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, // uniform mat4 u_i
	0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // nvProj;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, // mat4 u_viewProj;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // invViewProj;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, // form mat4 u_mode
	0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // l[32];.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, // at4 u_modelView;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, // modelViewProj;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, // niform vec4 u_al
	0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // phaRef4;.float s
	0x71, 0x72, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // qr( float v).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // eturn v*v;.}.vec
	0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, // 2 sqr( vec2 v).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // .return v*v;.}.v
	0x65, 0x63, 0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, // ec3 sqr( vec3 v)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, // .{.return v*v;.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x20, 0x76, 0x65, // .vec3 mul_w1( ve
	0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, // c3 v, mat4 m).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, // return v.x*m[0].
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, // xyz + (v.y*m[1].
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, // xyz + (v.z*m[2].
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, // xyz + m[3].xyz))
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, // ;.}.float acos_a
	0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, // pprox_divPI( flo
	0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, // at v).{.float x 
	0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, // = abs(v);.if(1. 
	0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, // - x <= 0.0000610
	0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 3515625).return 
	0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, // (v >= 0.) ? 0. :
	0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, //  1.;.float res =
	0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, //  ((-0.155972/3.1
	0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, // 4159265358979323
	0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, // 84626433832795) 
	0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, // * x + (1.56467/3
	0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, // .141592653589793
	0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, // 2384626433832795
	0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, // ) ) * sqrt(1. - 
	0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, // x);.return (v >=
	0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, //  0.) ? res : 1. 
	0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, // - res;.}.float a
	0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, // tan2_approx_div2
	0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // PI( float y, flo
	0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, // at x).{.float ab
	0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, // s_y = abs(y);.fl
	0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, // oat abs_x = abs(
	0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, // x);.if(abs_x <= 
	0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, // 0.00006103515625
	0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, //  && abs_y <= 0.0
	0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, // 0006103515625).r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // eturn 0.;.float 
	0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, // r = (abs_x - abs
	0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, // _y) / (abs_x + a
	0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, // bs_y);.float ang
	0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // le = ((x < 0.) ?
	0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, //  (3./8.) : (1./8
	0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, // .)).+ (0.211868 
	0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, // /(2.*3.141592653
	0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, // 5897932384626433
	0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, // 832795) * r * r 
	0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, // - 0.987305 /(2.*
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, // 5)) * ((x < 0.) 
	0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // ? -r : r);.retur
	0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, // n (y < 0.) ? -an
	0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // gle : angle;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, // loat asin_approx
	0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, // _divPI( float v)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, // .{.float x = abs
	0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, // (v);.if(1. - x <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, // = 0.000061035156
	0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, // 25).return (v >=
	0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, //  0.) ? 0.5 : -0.
	0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, // 5;.float res = (
	0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, // (-0.155972/3.141
	0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, // 5926535897932384
	0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, // 626433832795) * 
	0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, // x + (1.56467/3.1
	0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, // 4159265358979323
	0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, // 84626433832795) 
	0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, // ) * sqrt(1. - x)
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, // ;.return (v >= 0
	0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, // .) ? 0.5 - res :
	0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, //  -0.5 + res;.}.v
	0x65, 0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, // ec2 ray_to_equir
	0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x20, 0x76, // ectangular_uv( v
	0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // ec3 ray).{.retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, // n vec2(.0.5 + at
	0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, // an2_approx_div2P
	0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, // I(ray.y, ray.x),
	0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, // .acos_approx_div
	0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // PI(ray.z));.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, // oat InvsRGB( flo
	0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, // at color).{.if (
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, // color <= 0.04045
	0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // ).return color *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, //  (1.0/12.92);.el
	0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, // se.return pow(co
	0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, // lor * (1.0/1.055
	0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, // ) + (0.055/1.055
	0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ), 2.4);.}.float
	0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, //  InvRec709( floa
	0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, // t color).{.if (c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, // olor <= 0.081).r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, // eturn color * (1
	0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, // .0/4.5);.else.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // turn pow(color *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, //  (1.0/1.099) + (
	0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, // 0.099/1.099), 1.
	0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0/0.45);.}.float
	0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  InvGamma( float
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  color).{.return
	0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, //  InvsRGB(color);
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, // .}.vec3 InvGamma
	0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // ( vec3 color).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, // return vec3(InvG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, // amma(color.x),In
	0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, // vGamma(color.y),
	0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, // InvGamma(color.z
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, // ));.}.vec3 InvTo
	0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // neMap( vec3 colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, // r).{.float inv_2
	0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x66, // bh = 0.5/0.25;.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, // loat bh = 4.0*0.
	0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 25 - 2.0;.return
	0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, //  (color - 1.0 + 
	0x73, 0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // sqrt(color*(colo
	0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, // r + bh) + 1.0))*
	0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // inv_2bh;.}.float
	0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, //  sRGB( float f).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, // {.float s;.if (f
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, //  <= 0.0031308).s
	0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, //  = 12.92 * f;.el
	0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, // se.s = 1.055 * p
	0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, // ow(f, 1.0/2.4) -
	0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, //  0.055;.return s
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, // ;.}.float Rec709
	0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // ( float f).{.flo
	0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, // at s;.if (f <= 0
	0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, // .018).s = 4.5 * 
	0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, // f;.else.s = 1.09
	0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, // 9 * pow(f, 0.45)
	0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  - 0.099;.return
	0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, //  s;.}.float FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // mma( float color
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, // ).{.return sRGB(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, // color);.}.vec2 F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, // BGamma( vec2 col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // or).{.return vec
	0x32, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // 2(FBGamma(color.
	0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // x),FBGamma(color
	0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, // .y));.}.vec3 FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // amma( vec3 color
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // ).{.return vec3(
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, // FBGamma(color.x)
	0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, // ,FBGamma(color.y
	0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // ),FBGamma(color.
	0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, // z));.}.vec3 FBGa
	0x6d, 0x6d, 0x61, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // mma22( vec3 colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, // r).{.return vec3
	0x28, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, // (pow(color.x, 1.
	0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // 0/2.2),pow(color
	0x2e, 0x79, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, // .y, 1.0/2.2),pow
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, // (color.z, 1.0/2.
	0x32, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, // 2));.}.float FBT
	0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, // oneMap( float l)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, // .{.return l * ((
	0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, // l*0.25 + 1.0) / 
	0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // (l + 1.0));.}.ve
	0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, // c2 FBToneMap( ve
	0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // c2 color).{.floa
	0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, // t l = dot(color,
	0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, // vec2(0.176204+0.
	0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, // 0108109*0.5,0.81
	0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, // 2985+0.0108109*0
	0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, // .5));.return col
	0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, // or * ((l*0.25 + 
	0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // 1.0) / (l + 1.0)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, // );.}.vec3 FBTone
	0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // Map( vec3 color)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // .{.float l = dot
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, // (color,vec3(0.17
	0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, // 6204,0.812985,0.
	0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // 0108109));.retur
	0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, // n color * ((l*0.
	0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, // 25 + 1.0) / (l +
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, //  1.0));.}.vec4 A
	0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // dditive( vec4 cB
	0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // ase, vec4 cBlend
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, // , float percent)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, // .{.return cBase 
	0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, // + cBlend*percent
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, // ;.}.vec3 Screen 
	0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, // ( vec3 cBase, ve
	0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // c3 cBlend).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // urn 1.0 - (1.0 -
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, //  cBase) * (1.0 -
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, //  cBlend);.}.vec4
	0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, //  Screen ( vec4 c
	0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // Base, vec4 cBlen
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, // d).{.return 1.0 
	0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, // - (1.0 - cBase) 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // * (1.0 - cBlend)
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, // ;.}.vec3 ScreenH
	0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // DR ( vec3 cBase,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, //  vec3 cBlend).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // return max(1.0 -
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, //  (1.0 - cBase) *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, //  (1.0 - cBlend),
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, //  vec3(0.,0.,0.))
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, // ;.}.vec4 ScreenH
	0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // DR ( vec4 cBase,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, //  vec4 cBlend).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // return max(1.0 -
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, //  (1.0 - cBase) *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, //  (1.0 - cBlend),
	0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, //  vec4(0.,0.,0.,0
	0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, // .));.}.vec4 Mult
	0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, // iply ( vec4 cBas
	0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, // e, vec4 cBlend, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, // float percent).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, // .return cBase * 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, // cBlend*percent;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, // }.vec4 Overlay (
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, //  vec4 cBase, vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, // 4 cBlend).{.vec4
	0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, //  cNew = step(0.5
	0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, // , cBase);.cNew =
	0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, //  mix(cBase*cBlen
	0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, // d*2.0, 1.0-2.0*(
	0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, // 1.0-cBase)*(1.0-
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, // cBlend), cNew);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // return cNew;.}.v
	0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, // ec4 OverlayHDR (
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, //  vec4 cBase, vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, // 4 cBlend).{.vec4
	0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, //  cNew = step(0.5
	0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, // , cBase);.cNew =
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, //  max(mix(cBase*c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, // Blend*2.0, 1.0-2
	0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, // .0*(1.0-cBase)*(
	0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, // 1.0-cBlend), cNe
	0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, // w), vec4(0.,0.,0
	0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, // .,0.));.return c
	0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, // New;.}.vec3 cos_
	0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // hemisphere_sampl
	0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // e( vec2 t).{.flo
	0x61, 0x74, 0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, // at phi = t.y * (
	0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, // 2.0*3.1415926535
	0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, // 8979323846264338
	0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, // 32795);.float co
	0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, // sTheta = sqrt(1.
	0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 0 - t.x);.float 
	0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // sinTheta = sqrt(
	0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, // t.x);.float sp,c
	0x70, 0x3b, 0x0a, 0x7b, 0x73, 0x70, 0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, // p;.{sp=sin(phi);
	0x63, 0x70, 0x3d, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, 0x3b, 0x0a, 0x72, // cp=cos(phi);};.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, // eturn vec3(cp * 
	0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, // sinTheta, cosThe
	0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, // ta, sp * sinThet
	0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, // a);.}.vec3 rotat
	0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, // e_to_vector_uppe
	0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x76, 0x65, 0x63, // r( vec3 vec, vec
	0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, // 3 normal).{.if(n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, // ormal.y > -0.999
	0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, // 99).{.float h = 
	0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // 1.0/(1.0+normal.
	0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, // y);.float hz = h
	0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // *normal.z;.float
	0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, //  hzx = hz*normal
	0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // .x;.return vec3(
	0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // .vec.x * (normal
	0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, // .y+hz*normal.z) 
	0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // + vec.y * normal
	0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, // .x - vec.z * hzx
	0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // ,.vec.y * normal
	0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, // .y - vec.x * nor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, // mal.x - vec.z * 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, // normal.z,.vec.y 
	0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, // * normal.z - vec
	0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, // .x * hzx + vec.z
	0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, //  * (normal.y+h*n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // ormal.x*normal.x
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // ));.}.else retur
	0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // n -vec;.}.unifor
	0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x64, 0x69, 0x73, 0x70, // m sampler2D disp
	0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // layTex;.uniform 
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, // sampler2D displa
	0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // yGlass;.uniform 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, // vec4 vColor_Inte
	0x6e, 0x73, 0x69, 0x74, 0x79, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // nsity;.uniform v
	0x65, 0x63, 0x34, 0x20, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, // ec4 staticColor_
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // Alpha;.uniform v
	0x65, 0x63, 0x34, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, // ec4 glassAmbient
	0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // _Roughness;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, // orm vec4 w_h_hei
	0x67, 0x68, 0x74, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, // ght;.vec3 Reinha
	0x72, 0x64, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // rdToneMap(vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, // olor).{.float l 
	0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, // = min(dot(color,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x20, //  vec3(0.176204, 
	0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, // 0.812985, 0.0108
	0x31, 0x30, 0x39, 0x29, 0x29, 0x2c, 0x20, 0x31, 0x30, 0x30, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // 109)), 1000.0);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, // return color * (
	0x28, 0x6c, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // (l * 0.25 + 1.0)
	0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, //  / (l + 1.0));.}
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x61, 0x6c, // .uniform vec4 al
	0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x34, 0x5d, 0x3b, 0x0a, // phaSegState[4];.
	0x76, 0x6f, 0x69, 0x64, 0x20, 0x73, 0x68, 0x61, 0x64, 0x65, 0x34, 0x28, 0x76, 0x65, 0x63, 0x34, // void shade4(vec4
	0x20, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, //  state, sampler2
	0x44, 0x20, 0x73, 0x64, 0x66, 0x54, 0x65, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, // D sdfTex, vec2 u
	0x76, 0x2c, 0x20, 0x69, 0x6e, 0x6f, 0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, // v, inout vec3 co
	0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x6f, 0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // lor, inout vec4 
	0x67, 0x6c, 0x6f, 0x77, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x73, 0x64, 0x66, // glow).{.vec4 sdf
	0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x73, 0x64, 0x66, 0x54, 0x65, //  = texture(sdfTe
	0x78, 0x2c, 0x20, 0x75, 0x76, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x6e, // x, uv);.vec4 inn
	0x65, 0x72, 0x20, 0x3d, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, // er = smoothstep(
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x34, 0x37, 0x35, // vec4_splat(0.475
	0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, // ), vec4_splat(0.
	0x35, 0x32, 0x35, 0x29, 0x2c, 0x20, 0x73, 0x64, 0x66, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, // 525), sdf);.colo
	0x72, 0x20, 0x2b, 0x3d, 0x20, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, // r += inner.x * (
	0x28, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, // (staticColor_Alp
	0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, // ha.rgb) + (vColo
	0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x67, 0x62, 0x29, // r_Intensity.rgb)
	0x20, 0x2a, 0x20, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, //  * state.x);.col
	0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x79, 0x20, 0x2a, 0x20, // or += inner.y * 
	0x28, 0x28, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, // ((staticColor_Al
	0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, // pha.rgb) + (vCol
	0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x67, 0x62, // or_Intensity.rgb
	0x29, 0x20, 0x2a, 0x20, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x63, 0x6f, // ) * state.y);.co
	0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x7a, 0x20, 0x2a, // lor += inner.z *
	0x20, 0x28, 0x28, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, //  ((staticColor_A
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x43, 0x6f, // lpha.rgb) + (vCo
	0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x67, // lor_Intensity.rg
	0x62, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x63, // b) * state.z);.c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x77, 0x20, // olor += inner.w 
	0x2a, 0x20, 0x28, 0x28, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, // * ((staticColor_
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x43, // Alpha.rgb) + (vC
	0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x72, // olor_Intensity.r
	0x67, 0x62, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x77, 0x29, 0x3b, 0x0a, // gb) * state.w);.
	0x67, 0x6c, 0x6f, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x67, 0x6c, 0x6f, 0x77, 0x2c, // glow = max(glow,
	0x20, 0x73, 0x74, 0x61, 0x74, 0x65, 0x20, 0x2a, 0x20, 0x73, 0x64, 0x66, 0x29, 0x3b, 0x0a, 0x7d, //  state * sdf);.}
	0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x76, // .void main().{.v
	0x65, 0x63, 0x33, 0x20, 0x6c, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, // ec3 lum = vec3_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // plat(0.0);.vec4 
	0x67, 0x6c, 0x6f, 0x77, 0x34, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, // glow4 = vec4_spl
	0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x73, 0x68, 0x61, 0x64, 0x65, 0x34, 0x28, // at(0.0);.shade4(
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x30, 0x5d, // alphaSegState[0]
	0x2c, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x2c, 0x20, 0x76, 0x65, // , displayTex, ve
	0x63, 0x32, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x78, // c2(v_texcoord1.x
	0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, //  * 0.25 , v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x6c, 0x75, 0x6d, 0x2c, 0x20, 0x67, // oord1.y), lum, g
	0x6c, 0x6f, 0x77, 0x34, 0x29, 0x3b, 0x0a, 0x73, 0x68, 0x61, 0x64, 0x65, 0x34, 0x28, 0x61, 0x6c, // low4);.shade4(al
	0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, 0x31, 0x5d, 0x2c, 0x20, // phaSegState[1], 
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, // displayTex, vec2
	0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x78, 0x20, 0x2a, // (v_texcoord1.x *
	0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x2c, 0x20, 0x76, 0x5f, //  0.25 + 0.25, v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x6c, 0x75, // texcoord1.y), lu
	0x6d, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x34, 0x29, 0x3b, 0x0a, 0x73, 0x68, 0x61, 0x64, 0x65, // m, glow4);.shade
	0x34, 0x28, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5b, // 4(alphaSegState[
	0x32, 0x5d, 0x2c, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x2c, 0x20, // 2], displayTex, 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, // vec2(v_texcoord1
	0x2e, 0x78, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x30, // .x * 0.25 + 0.50
	0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x2e, 0x79, 0x29, // , v_texcoord1.y)
	0x2c, 0x20, 0x6c, 0x75, 0x6d, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x34, 0x29, 0x3b, 0x0a, 0x73, // , lum, glow4);.s
	0x68, 0x61, 0x64, 0x65, 0x34, 0x28, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, // hade4(alphaSegSt
	0x61, 0x74, 0x65, 0x5b, 0x33, 0x5d, 0x2c, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, // ate[3], displayT
	0x65, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // ex, vec2(v_texco
	0x6f, 0x72, 0x64, 0x31, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, // ord1.x * 0.25 + 
	0x30, 0x2e, 0x37, 0x35, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, // 0.75, v_texcoord
	0x31, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x6c, 0x75, 0x6d, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x34, // 1.y), lum, glow4
	0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x4c, 0x75, 0x6d, // );.float glowLum
	0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x61, 0x78, 0x28, 0x67, //  = max(max(max(g
	0x6c, 0x6f, 0x77, 0x34, 0x2e, 0x78, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x34, 0x2e, 0x79, 0x29, // low4.x, glow4.y)
	0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x34, 0x2e, 0x7a, 0x29, 0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x77, // , glow4.z), glow
	0x34, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x20, // 4.w);.vec3 glow 
	0x3d, 0x20, 0x67, 0x6c, 0x6f, 0x77, 0x4c, 0x75, 0x6d, 0x20, 0x2a, 0x20, 0x67, 0x6c, 0x6f, 0x77, // = glowLum * glow
	0x4c, 0x75, 0x6d, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, // Lum * (vColor_In
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x6c, 0x75, // tensity.rgb);.lu
	0x6d, 0x20, 0x2b, 0x3d, 0x20, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, // m += (vColor_Int
	0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x67, 0x6c, 0x6f, 0x77, // ensity.w) * glow
	0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, // ;.if ((w_h_heigh
	0x74, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x7b, 0x0a, 0x76, // t.x != 0.0)).{.v
	0x65, 0x63, 0x34, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, // ec4 glass = text
	0x75, 0x72, 0x65, 0x28, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, // ure(displayGlass
	0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, // , v_texcoord0);.
	0x6c, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6c, 0x75, 0x6d, 0x2c, 0x20, 0x28, // lum = mix(lum, (
	0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x6f, // (glassAmbient_Ro
	0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x72, 0x67, 0x62, 0x29, 0x20, 0x2b, 0x20, 0x67, // ughness.rgb) + g
	0x6c, 0x6f, 0x77, 0x29, 0x2c, 0x20, 0x28, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, // low), (glassAmbi
	0x65, 0x6e, 0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x77, 0x29, // ent_Roughness.w)
	0x20, 0x2a, 0x20, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x61, 0x29, 0x20, 0x2a, 0x20, 0x67, 0x6c, //  * glass.a) * gl
	0x61, 0x73, 0x73, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x28, // ass.rgb;.}.if ((
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, // staticColor_Alph
	0x61, 0x2e, 0x77, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x67, 0x6c, 0x5f, // a.w) == 0.0).gl_
	0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, // FragColor = vec4
	0x28, 0x6c, 0x75, 0x6d, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, // (lum, 1.0);.else
	0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, //  if ((staticColo
	0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x2e, // r_Alpha.w) == 1.
	0x30, 0x29, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // 0).gl_FragColor 
	0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x54, // = vec4(ReinhardT
	0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x6c, 0x75, 0x6d, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, // oneMap(lum), 1.0
	0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x73, 0x74, 0x61, // );.else if ((sta
	0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x77, // ticColor_Alpha.w
	0x29, 0x20, 0x3d, 0x3d, 0x20, 0x32, 0x2e, 0x30, 0x29, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, // ) == 2.0).gl_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x46, 0x42, // gColor = vec4(FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x54, 0x6f, // Gamma(ReinhardTo
	0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x6c, 0x75, 0x6d, 0x29, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, // neMap(lum)), 1.0
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,                                                             // );.}..
};
static const uint8_t fs_display_alphaseg_noclip_dx11[4611] =
{
	0x46, 0x53, 0x48, 0x0b, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x10, 0x76, // FSH............v
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, // Color_Intensity.
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, // ..........static
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x00, 0x10, 0x00, 0x01, // Color_Alpha.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, // ......glassAmbie
	0x6e, 0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x00, 0x20, 0x00, // nt_Roughness.. .
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, // .......w_h_heigh
	0x74, 0x12, 0x00, 0x30, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x61, 0x6c, 0x70, 0x68, // t..0........alph
	0x61, 0x53, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x04, 0x40, 0x00, 0x04, 0x00, 0x00, // aSegState..@....
	0x00, 0x00, 0x00, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x30, 0x01, // ....displayTex0.
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, // .........display
	0x47, 0x6c, 0x61, 0x73, 0x73, 0x30, 0x01, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, // Glass0..........
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x30, 0x01, 0x00, 0x00, 0x01, 0x00, // displayTex0.....
	0x00, 0x00, 0x00, 0x00, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, // .....displayGlas
	0x73, 0x30, 0x01, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x00, 0x00, 0x44, // s0.............D
	0x58, 0x42, 0x43, 0x76, 0xec, 0x02, 0xfd, 0x3a, 0xcb, 0xc9, 0xb6, 0x55, 0xed, 0xbd, 0xc3, 0x3a, // XBCv...:...U...:
	0xa8, 0x83, 0x64, 0x01, 0x00, 0x00, 0x00, 0x10, 0x11, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, // ..d............,
	0x00, 0x00, 0x00, 0x9c, 0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x4e, 0x68, // ...........ISGNh
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, // ...........P....
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, // ................
	0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0c, // ................
	0x0c, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x54, // ...SV_POSITION.T
	0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0xab, 0xab, 0xab, 0x4f, 0x53, 0x47, 0x4e, 0x2c, // EXCOORD....OSGN,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, // ........... ....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, // ................
	0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x00, 0xab, 0xab, 0x53, // ...SV_TARGET...S
	0x48, 0x45, 0x58, 0x38, 0x10, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x0e, 0x04, 0x00, 0x00, 0x6a, // HEX8...P.......j
	0x28, 0x00, 0x01, 0x59, 0x00, 0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, // (..Y...F. ......
	0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5a, // ...Z....`......Z
	0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, // ....`......X....
	0x70, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, // p......UU..X....
	0x70, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x32, // p......UU..b...2
	0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0xc2, 0x10, 0x10, 0x00, 0x01, // .......b........
	0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, // ...e.... ......h
	0x00, 0x00, 0x02, 0x06, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0x32, 0x00, 0x10, 0x00, 0x00, // .......8...2....
	0x00, 0x00, 0x00, 0xe6, 0x1a, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0x80, 0x3e, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, // ..>...?........E
	0x00, 0x00, 0x8b, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0xf2, 0x00, 0x10, 0x00, 0x00, // .......CU.......
	0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, // ...F.......F~...
	0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0xf2, // ....`...........
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // .......F........
	0x40, 0x00, 0x00, 0x33, 0x33, 0xf3, 0xbe, 0x33, 0x33, 0xf3, 0xbe, 0x33, 0x33, 0xf3, 0xbe, 0x33, // @..33..33..33..3
	0x33, 0xf3, 0xbe, 0x38, 0x20, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, // 3..8 ..........F
	0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x04, 0x00, 0xa0, 0x41, 0x04, // ........@.....A.
	0x00, 0xa0, 0x41, 0x04, 0x00, 0xa0, 0x41, 0x04, 0x00, 0xa0, 0x41, 0x32, 0x00, 0x00, 0x0f, 0xf2, // ..A...A...A2....
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // .......F........
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xc0, 0x00, // @...............
	0x00, 0x00, 0xc0, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0x40, 0x00, // ....@....@@..@@.
	0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x01, // .@@..@@8........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, // ...F.......F....
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, // ...8...........F
	0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x32, // .......F.......2
	0x00, 0x00, 0x0c, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, // ...r.......F. ..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, // ......... ......
	0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // ...F. .........2
	0x00, 0x00, 0x0c, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, // ...r.......F. ..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x85, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, // .......V. ......
	0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, // ...F. .........8
	0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x01, // ...r.......V....
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, // ...F.......2...r
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x32, // .......F.......2
	0x00, 0x00, 0x0c, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, // ...r.......F. ..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa6, 0x8a, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, // ......... ......
	0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // ...F. .........2
	0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x01, // ...r............
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, // ...F.......F....
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, // ...2...r.......F
	0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0x8f, 0x20, 0x00, 0x00, // . ........... ..
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // .......F. ......
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf6, // ...2...r........
	0x0f, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x00, // .......8........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, // ...F.......F. ..
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x00, // .......4........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, // ...F........@...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, // ...............2
	0x00, 0x00, 0x0f, 0xf2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xe6, 0x1e, 0x10, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3e, 0x00, 0x00, 0x80, 0x3f, 0x00, // ....@.....>...?.
	0x00, 0x80, 0x3e, 0x00, 0x00, 0x80, 0x3f, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3e, 0x00, // ..>...?.@.....>.
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, 0xc2, // ......?....E....
	0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, // ...CU..........F
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .......F~.......
	0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x04, // `...............
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x33, // ...F........@..3
	0x33, 0xf3, 0xbe, 0x33, 0x33, 0xf3, 0xbe, 0x33, 0x33, 0xf3, 0xbe, 0x33, 0x33, 0xf3, 0xbe, 0x38, // 3..33..33..33..8
	0x20, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, //  ..........F....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x04, 0x00, 0xa0, 0x41, 0x04, 0x00, 0xa0, 0x41, 0x04, // ....@.....A...A.
	0x00, 0xa0, 0x41, 0x04, 0x00, 0xa0, 0x41, 0x32, 0x00, 0x00, 0x0f, 0xf2, 0x00, 0x10, 0x00, 0x05, // ..A...A2........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, // ...F........@...
	0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xc0, 0x02, // ................
	0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0x40, 0x00, // @....@@..@@..@@.
	0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, // .@@8...........F
	0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x38, // .......F.......8
	0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x72, // ...F.......2...r
	0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .......F. ......
	0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, // ..... .........F
	0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, // . .........2...r
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // .......F.......2
	0x00, 0x00, 0x0c, 0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, // ...r.......F. ..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x85, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, // .......V. ......
	0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // ...F. .........2
	0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x04, // ...r.......V....
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, // ...F.......F....
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, // ...2...r.......F
	0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa6, 0x8a, 0x20, 0x00, 0x00, // . ........... ..
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // .......F. ......
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xa6, // ...2...r........
	0x0a, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x72, 0x00, 0x10, 0x00, 0x04, // .......2...r....
	0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, // ...F. ..........
	0x8f, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, // . .........F. ..
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, // .......2...r....
	0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, // ...F.......8....
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0xf2, // . .........4....
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, 0xc2, 0x00, 0x00, 0x80, 0x43, // .......E.......C
	0x55, 0x15, 0x00, 0xf2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x02, // U...............
	0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, // ...F~.......`...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x33, 0x33, 0xf3, 0xbe, 0x33, // ........@..33..3
	0x33, 0xf3, 0xbe, 0x33, 0x33, 0xf3, 0xbe, 0x33, 0x33, 0xf3, 0xbe, 0x38, 0x20, 0x00, 0x0a, 0xf2, // 3..33..33..8 ...
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, // .......F........
	0x40, 0x00, 0x00, 0x04, 0x00, 0xa0, 0x41, 0x04, 0x00, 0xa0, 0x41, 0x04, 0x00, 0xa0, 0x41, 0x04, // @.....A...A...A.
	0x00, 0xa0, 0x41, 0x32, 0x00, 0x00, 0x0f, 0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, // ..A2...........F
	0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, // ........@.......
	0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xc0, 0x02, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0x40, 0x38, // .@@..@@..@@..@@8
	0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0xf2, // ...F.......8....
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x72, 0x00, 0x10, 0x00, 0x04, // .......2...r....
	0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, // ...F. ..........
	0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, // . .........F. ..
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, // .......2...r....
	0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x72, // ...F.......2...r
	0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .......F. ......
	0x00, 0x00, 0x00, 0x56, 0x85, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, // ...V. .........F
	0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, // . .........2...r
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, // .......V.......F
	0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // .......F.......2
	0x00, 0x00, 0x0c, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, // ...r.......F. ..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa6, 0x8a, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, // ......... ......
	0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // ...F. .........2
	0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x03, // ...r............
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, // ...F.......F....
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, // ...2...r.......F
	0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0x8f, 0x20, 0x00, 0x00, // . ........... ..
	0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // .......F. ......
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf6, // ...2...r........
	0x0f, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x02, // .......8........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, // ...F.......F. ..
	0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x00, // .......4........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x02, // ...F.......F....
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0f, 0x32, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xe6, // ...2...2........
	0x1a, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3e, 0x00, // ........@.....>.
	0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, // ..?.........@...
	0x00, 0x40, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, // .@?............E
	0x00, 0x00, 0x8b, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0xf2, 0x00, 0x10, 0x00, 0x02, // .......CU.......
	0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, // ...F.......F~...
	0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0xf2, // ....`...........
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, // .......F........
	0x40, 0x00, 0x00, 0x33, 0x33, 0xf3, 0xbe, 0x33, 0x33, 0xf3, 0xbe, 0x33, 0x33, 0xf3, 0xbe, 0x33, // @..33..33..33..3
	0x33, 0xf3, 0xbe, 0x38, 0x20, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, // 3..8 ..........F
	0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x04, 0x00, 0xa0, 0x41, 0x04, // ........@.....A.
	0x00, 0xa0, 0x41, 0x04, 0x00, 0xa0, 0x41, 0x04, 0x00, 0xa0, 0x41, 0x32, 0x00, 0x00, 0x0f, 0xf2, // ..A...A...A2....
	0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, // .......F........
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xc0, 0x00, // @...............
	0x00, 0x00, 0xc0, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0x40, 0x00, // ....@....@@..@@.
	0x00, 0x40, 0x40, 0x00, 0x00, 0x40, 0x40, 0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x03, // .@@..@@8........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, // ...F.......F....
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, // ...8...........F
	0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, // .......F.......2
	0x00, 0x00, 0x0c, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, // ...r.......F. ..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // ......... ......
	0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, // ...F. .........2
	0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x03, // ...r............
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, // ...F.......F....
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, // ...2...r.......F
	0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x85, 0x20, 0x00, 0x00, // . .........V. ..
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // .......F. ......
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x56, // ...2...r.......V
	0x05, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x72, 0x00, 0x10, 0x00, 0x04, // .......2...r....
	0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa6, // ...F. ..........
	0x8a, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, // . .........F. ..
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x01, // .......2...r....
	0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x72, // ...F.......2...r
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .......F. ......
	0x00, 0x00, 0x00, 0xf6, 0x8f, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, // ..... .........F
	0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, // . .........2...r
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, // .......F.......8
	0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x02, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x34, // ...F. .........4
	0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x12, // ...F.......4....
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, // ................
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, // .......4........
	0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, // ...*............
	0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, // ...4...........:
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, // ...............8
	0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xe2, // ...........8....
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, // ................
	0x89, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0xe2, // . .........2....
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0x8f, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ......... ......
	0x00, 0x00, 0x00, 0x56, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x01, // ...V............
	0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x08, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, // ...9............
	0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // . ..........@...
	0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, // ...............E
	0x00, 0x00, 0x8b, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0xf2, 0x00, 0x10, 0x00, 0x01, // .......CU.......
	0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x01, // ...F.......F~...
	0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0b, 0x72, // ....`......2...r
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, // . .........F. ..
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x12, 0x00, 0x10, 0x00, 0x00, // .......8........
	0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, // ...:.......:. ..
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x02, // ...........r....
	0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // .......A.......F
	0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x02, // .......2...r....
	0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, // ...........F....
	0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0xe2, // ...........8....
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, // ................
	0x09, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, 0x18, 0x00, 0x00, 0x08, 0x12, // ................
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // .......:. ......
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 0x0a, // ....@...........
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x72, 0x20, 0x10, 0x00, 0x00, // .......6...r ...
	0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, // ...........6....
	0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x12, //  .......@.....?.
	0x00, 0x00, 0x01, 0x18, 0x00, 0x00, 0x08, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, // ...............:
	0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // . ..........@...
	0x00, 0x80, 0x3f, 0x1f, 0x00, 0x04, 0x03, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, // ..?.............
	0x00, 0x00, 0x0a, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xd2, 0x6e, 0x34, 0x3e, 0xc9, 0x1f, 0x50, 0x3f, 0x33, // ....@...n4>..P?3
	0x20, 0x31, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, //  1<....3........
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0x7a, 0x44, 0x32, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, // .zD2............
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3e, 0x01, // ........@.....>.
	0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, // @.....?.........
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0x80, 0x3f, 0x0e, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, // ..?.............
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, // ...............8
	0x00, 0x00, 0x07, 0x72, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, // ...r ...........
	0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, // ...........6....
	0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x12, //  .......@.....?.
	0x00, 0x00, 0x01, 0x18, 0x00, 0x00, 0x08, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, // ...............:
	0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // . ..........@...
	0x00, 0x00, 0x40, 0x1f, 0x00, 0x04, 0x03, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, // ..@.............
	0x00, 0x00, 0x0a, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xd2, 0x6e, 0x34, 0x3e, 0xc9, 0x1f, 0x50, 0x3f, 0x33, // ....@...n4>..P?3
	0x20, 0x31, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, //  1<....3........
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0x7a, 0x44, 0x32, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, // .zD2............
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3e, 0x01, // ........@.....>.
	0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, // @.....?.........
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0x80, 0x3f, 0x0e, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, // ..?.............
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, // ...............8
	0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, // ...r............
	0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x0a, 0x72, // ...............r
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x1c, 0x2e, 0x4d, 0x3b, 0x1c, // ........@....M;.
	0x2e, 0x4d, 0x3b, 0x1c, 0x2e, 0x4d, 0x3b, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, // .M;..M;....F....
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, // ...8...r.......F
	0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x52, 0xb8, 0x4e, 0x41, 0x52, // ........@..R.NAR
	0xb8, 0x4e, 0x41, 0x52, 0xb8, 0x4e, 0x41, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x05, 0x72, // .NAR.NA..../...r
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, // .......F.......8
	0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, // ...r.......F....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x55, 0x55, 0xd5, 0x3e, 0x55, 0x55, 0xd5, 0x3e, 0x55, // ....@..UU.>UU.>U
	0x55, 0xd5, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x05, 0x72, 0x00, 0x10, 0x00, 0x00, // U.>........r....
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0f, 0x72, // ...F.......2...r
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // .......F........
	0x40, 0x00, 0x00, 0x3d, 0x0a, 0x87, 0x3f, 0x3d, 0x0a, 0x87, 0x3f, 0x3d, 0x0a, 0x87, 0x3f, 0x00, // @..=..?=..?=..?.
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xae, 0x47, 0x61, 0xbd, 0xae, 0x47, 0x61, 0xbd, 0xae, // ....@...Ga..Ga..
	0x47, 0x61, 0xbd, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x20, 0x10, 0x00, 0x00, // Ga.....7...r ...
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, // ...F.......F....
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, // ...F.......6....
	0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x15, //  .......@.....?.
	0x00, 0x00, 0x01, 0x15, 0x00, 0x00, 0x01, 0x15, 0x00, 0x00, 0x01, 0x3e, 0x00, 0x00, 0x01, 0x00, // ...........>....
	0x00, 0x80, 0x00,                                                                               // ...
};
static const uint8_t fs_display_alphaseg_noclip_spv[9699] =
{
	0x46, 0x53, 0x48, 0x0b, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x11, 0x73, // FSH............s
	0x74, 0x61, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, // taticColor_Alpha
	0x12, 0x01, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x76, 0x43, 0x6f, 0x6c, 0x6f, // ...........vColo
	0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, 0x01, 0x00, 0x00, 0x01, // r_Intensity.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, 0x74, // ......alphaSegSt
	0x61, 0x74, 0x65, 0x12, 0x04, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x77, 0x5f, // ate..@........w_
	0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x01, 0x30, 0x00, 0x01, 0x00, 0x00, 0x00, // h_height..0.....
	0x00, 0x00, 0x16, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, // ...glassAmbient_
	0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x01, 0x20, 0x00, 0x01, 0x00, 0x00, // Roughness.. ....
	0x00, 0x00, 0x00, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x30, 0x00, // ....displayTex0.
	0x02, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, // ......"..display
	0x47, 0x6c, 0x61, 0x73, 0x73, 0x30, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0x1c, // Glass0......."..
	0x25, 0x00, 0x00, 0x03, 0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x0b, 0x00, 0x08, 0x00, 0x15, // %....#..........
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, // ................
	0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, // .......GLSL.std.
	0x34, 0x35, 0x30, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // 450.............
	0x00, 0x00, 0x00, 0x0f, 0x00, 0x08, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, // ...............m
	0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0xcb, 0x01, 0x00, 0x00, 0xce, 0x01, 0x00, 0x00, 0xdb, // ain.............
	0x01, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, // ................
	0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x05, // ................
	0x00, 0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, // ...............m
	0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00, 0x45, 0x00, 0x00, 0x00, 0x64, // ain........E...d
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // isplayTexSampler
	0x00, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00, 0x48, 0x00, 0x00, 0x00, 0x64, 0x69, 0x73, 0x70, 0x6c, // .......H...displ
	0x61, 0x79, 0x54, 0x65, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, // ayTexTexture....
	0x00, 0x07, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, // ...L...displayGl
	0x61, 0x73, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x05, 0x00, 0x07, 0x00, 0x4e, // assSampler.....N
	0x00, 0x00, 0x00, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x54, // ...displayGlassT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x05, 0x00, 0x06, 0x00, 0xc3, 0x00, 0x00, 0x00, 0x55, // exture.........U
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x06, // niformBlock.....
	0x00, 0x08, 0x00, 0xc3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0x43, 0x6f, 0x6c, 0x6f, // ...........vColo
	0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x00, 0x00, 0x00, 0x00, 0x06, // r_Intensity.....
	0x00, 0x08, 0x00, 0xc3, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x73, 0x74, 0x61, 0x74, 0x69, // ...........stati
	0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x00, 0x00, 0x00, 0x06, // cColor_Alpha....
	0x00, 0x09, 0x00, 0xc3, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x67, 0x6c, 0x61, 0x73, 0x73, // ...........glass
	0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, // Ambient_Roughnes
	0x73, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0xc3, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x77, // s..............w
	0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x00, 0x00, 0x06, 0x00, 0x07, 0x00, 0xc3, // _h_height.......
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x67, 0x53, // .......alphaSegS
	0x74, 0x61, 0x74, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x03, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x00, // tate............
	0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0xcb, 0x01, 0x00, 0x00, 0x76, 0x5f, 0x74, 0x65, 0x78, // ...........v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x05, 0x00, 0x05, 0x00, 0xce, 0x01, 0x00, 0x00, 0x76, // coord0.........v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x00, 0x05, 0x00, 0x06, 0x00, 0xdb, // _texcoord1......
	0x01, 0x00, 0x00, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, // ...bgfx_FragData
	0x30, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x45, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // 0..G...E..."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x45, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x12, // ...G...E...!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x48, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G...H..."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x48, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x02, // ...G...H...!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G...L..."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x13, // ...G...L...!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x4e, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G...N..."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x4e, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x03, // ...G...N...!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xc2, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x10, // ...G............
	0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0xc3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, // ...H...........#
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0xc3, 0x00, 0x00, 0x00, 0x01, // .......H........
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0xc3, // ...#.......H....
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x48, // .......#... ...H
	0x00, 0x05, 0x00, 0xc3, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x30, // ...........#...0
	0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0xc3, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x23, // ...H...........#
	0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00, 0xc3, 0x00, 0x00, 0x00, 0x02, // ...@...G........
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G......."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x01, // ...G.......!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xcb, 0x01, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, // ...G............
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xce, 0x01, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, // ...G............
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xdb, 0x01, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, // ...G............
	0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x21, 0x00, 0x03, 0x00, 0x03, // ...........!....
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00, 0x16, // ................
	0x00, 0x03, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x19, 0x00, 0x09, 0x00, 0x08, // ....... ........
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, // ................
	0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x17, // ................
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x17, // ................
	0x00, 0x04, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, // ............... 
	0x00, 0x04, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3b, // ...D...........;
	0x00, 0x04, 0x00, 0x44, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, // ...D...E....... 
	0x00, 0x04, 0x00, 0x47, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3b, // ...G...........;
	0x00, 0x04, 0x00, 0x47, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, // ...G...H.......;
	0x00, 0x04, 0x00, 0x44, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, // ...D...L.......;
	0x00, 0x04, 0x00, 0x47, 0x00, 0x00, 0x00, 0x4e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, // ...G...N........
	0x00, 0x04, 0x00, 0x51, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, // ...Q... .......+
	0x00, 0x04, 0x00, 0x51, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, // ...Q...R.......+
	0x00, 0x04, 0x00, 0x51, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1b, // ...Q...V........
	0x00, 0x03, 0x00, 0x5a, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...Z.......+....
	0x00, 0x00, 0x00, 0x6f, 0x00, 0x00, 0x00, 0x1c, 0x2e, 0x4d, 0x3b, 0x14, 0x00, 0x02, 0x00, 0x70, // ...o.....M;....p
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x75, 0x00, 0x00, 0x00, 0x52, // ...+.......u...R
	0xb8, 0x4e, 0x41, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x79, 0x00, 0x00, 0x00, 0x3d, // .NA+.......y...=
	0x0a, 0x87, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x55, // ..?+.......{...U
	0x55, 0xd5, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0xae, // U.>+.......~....
	0x47, 0x61, 0x3d, 0x15, 0x00, 0x04, 0x00, 0x89, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, // Ga=........ ....
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x89, 0x00, 0x00, 0x00, 0x8a, 0x00, 0x00, 0x00, 0x00, // ...+............
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9d, 0x00, 0x00, 0x00, 0xd2, // ...+............
	0x6e, 0x34, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9e, 0x00, 0x00, 0x00, 0xc9, // n4>+............
	0x1f, 0x50, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9f, 0x00, 0x00, 0x00, 0x33, // .P?+...........3
	0x20, 0x31, 0x3c, 0x2c, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x9d, //  1<,............
	0x00, 0x00, 0x00, 0x9e, 0x00, 0x00, 0x00, 0x9f, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, // ...........+....
	0x00, 0x00, 0x00, 0xa2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7a, 0x44, 0x2b, 0x00, 0x04, 0x00, 0x07, // .........zD+....
	0x00, 0x00, 0x00, 0xa6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........>+....
	0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, // ..........?+....
	0x00, 0x00, 0x00, 0xb7, 0x00, 0x00, 0x00, 0x33, 0x33, 0xf3, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, // .......33.>+....
	0x00, 0x00, 0x00, 0xba, 0x00, 0x00, 0x00, 0x66, 0x66, 0x06, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x89, // .......ff.?+....
	0x00, 0x00, 0x00, 0xc1, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x00, 0xc2, // ................
	0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xc1, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x07, 0x00, 0xc3, // ................
	0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0xc2, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x02, // ....... ........
	0x00, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0xc4, 0x00, 0x00, 0x00, 0xc5, // .......;........
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x02, // ....... ........
	0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x89, 0x00, 0x00, 0x00, 0xf2, // .......+........
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x08, // .......+........
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x51, 0x00, 0x00, 0x00, 0x11, // .......+...Q....
	0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x51, 0x00, 0x00, 0x00, 0x39, // .......+...Q...9
	0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3d, // .......+.......=
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x51, 0x00, 0x00, 0x00, 0x4f, // ......?+...Q...O
	0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x53, // .......+.......S
	0x01, 0x00, 0x00, 0x00, 0x00, 0x40, 0x3f, 0x20, 0x00, 0x04, 0x00, 0x79, 0x01, 0x00, 0x00, 0x02, // .....@? ...y....
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb8, // .......+........
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x20, 0x00, 0x04, 0x00, 0xca, 0x01, 0x00, 0x00, 0x01, // ......@ ........
	0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0xca, 0x01, 0x00, 0x00, 0xcb, // .......;........
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0xca, 0x01, 0x00, 0x00, 0xce, // .......;........
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0xda, 0x01, 0x00, 0x00, 0x03, // ....... ........
	0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0xda, 0x01, 0x00, 0x00, 0xdb, // .......;........
	0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x08, // .......,........
	0x05, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x08, // ................
	0x01, 0x00, 0x00, 0x2c, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x00, 0xb7, // ...,............
	0x00, 0x00, 0x00, 0xb7, 0x00, 0x00, 0x00, 0xb7, 0x00, 0x00, 0x00, 0xb7, 0x00, 0x00, 0x00, 0x2c, // ...............,
	0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0b, 0x05, 0x00, 0x00, 0xba, 0x00, 0x00, 0x00, 0xba, // ................
	0x00, 0x00, 0x00, 0xba, 0x00, 0x00, 0x00, 0xba, 0x00, 0x00, 0x00, 0x01, 0x00, 0x03, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0x14, 0x05, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, // .......6........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, // ................
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0x45, // ...=.......F...E
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x48, // ...=.......I...H
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x4c, // ...=.......M...L
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x4e, // ...=.......O...N
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xcc, 0x01, 0x00, 0x00, 0xcb, // ...=............
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xcf, 0x01, 0x00, 0x00, 0xce, // ...=............
	0x01, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x19, 0x02, 0x00, 0x00, 0xcf, // ...Q............
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1a, // ................
	0x02, 0x00, 0x00, 0x19, 0x02, 0x00, 0x00, 0xa6, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x1c, 0x02, 0x00, 0x00, 0xcf, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x50, // ...............P
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x1d, 0x02, 0x00, 0x00, 0x1a, 0x02, 0x00, 0x00, 0x1c, // ................
	0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x1e, 0x02, 0x00, 0x00, 0xc5, // ...A............
	0x00, 0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, // .......V...=....
	0x00, 0x00, 0x00, 0x1f, 0x02, 0x00, 0x00, 0x1e, 0x02, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x5a, // ...........V...Z
	0x00, 0x00, 0x00, 0x07, 0x03, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0x57, // .......I...F...W
	0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x09, 0x03, 0x00, 0x00, 0x07, 0x03, 0x00, 0x00, 0x1d, // ................
	0x02, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xbf, 0x02, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x00, 0x0b, 0x05, 0x00, 0x00, 0x09, // ...1............
	0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc1, 0x02, 0x00, 0x00, 0xbf, // ...Q............
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc6, 0x00, 0x00, 0x00, 0xc2, // .......A........
	0x02, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, // .......R...=....
	0x00, 0x00, 0x00, 0xc3, 0x02, 0x00, 0x00, 0xc2, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, // ...........O....
	0x00, 0x00, 0x00, 0xc4, 0x02, 0x00, 0x00, 0xc3, 0x02, 0x00, 0x00, 0xc3, 0x02, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc6, // ...........A....
	0x00, 0x00, 0x00, 0xc5, 0x02, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x3d, // ...........V...=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xc6, 0x02, 0x00, 0x00, 0xc5, 0x02, 0x00, 0x00, 0x4f, // ...............O
	0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0xc7, 0x02, 0x00, 0x00, 0xc6, 0x02, 0x00, 0x00, 0xc6, // ................
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc9, 0x02, 0x00, 0x00, 0x1f, 0x02, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xca, 0x02, 0x00, 0x00, 0xc7, // ................
	0x02, 0x00, 0x00, 0xc9, 0x02, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xcb, // ................
	0x02, 0x00, 0x00, 0xc4, 0x02, 0x00, 0x00, 0xca, 0x02, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, // ................
	0x00, 0x00, 0x00, 0xcc, 0x02, 0x00, 0x00, 0xcb, 0x02, 0x00, 0x00, 0xc1, 0x02, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd0, 0x02, 0x00, 0x00, 0xbf, 0x02, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc6, 0x00, 0x00, 0x00, 0xd1, 0x02, 0x00, 0x00, 0xc5, // ...A............
	0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xd2, // ...R...=........
	0x02, 0x00, 0x00, 0xd1, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0xd3, // .......O........
	0x02, 0x00, 0x00, 0xd2, 0x02, 0x00, 0x00, 0xd2, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc6, 0x00, 0x00, 0x00, 0xd4, // .......A........
	0x02, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, // .......V...=....
	0x00, 0x00, 0x00, 0xd5, 0x02, 0x00, 0x00, 0xd4, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, // ...........O....
	0x00, 0x00, 0x00, 0xd6, 0x02, 0x00, 0x00, 0xd5, 0x02, 0x00, 0x00, 0xd5, 0x02, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xd8, 0x02, 0x00, 0x00, 0x1f, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x8e, // ................
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xd9, 0x02, 0x00, 0x00, 0xd6, 0x02, 0x00, 0x00, 0xd8, // ................
	0x02, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xda, 0x02, 0x00, 0x00, 0xd3, // ................
	0x02, 0x00, 0x00, 0xd9, 0x02, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xdb, // ................
	0x02, 0x00, 0x00, 0xda, 0x02, 0x00, 0x00, 0xd0, 0x02, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, // ................
	0x00, 0x00, 0x00, 0xdd, 0x02, 0x00, 0x00, 0xcc, 0x02, 0x00, 0x00, 0xdb, 0x02, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xdf, 0x02, 0x00, 0x00, 0xbf, 0x02, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc6, 0x00, 0x00, 0x00, 0xe0, 0x02, 0x00, 0x00, 0xc5, // ...A............
	0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xe1, // ...R...=........
	0x02, 0x00, 0x00, 0xe0, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0xe2, // .......O........
	0x02, 0x00, 0x00, 0xe1, 0x02, 0x00, 0x00, 0xe1, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc6, 0x00, 0x00, 0x00, 0xe3, // .......A........
	0x02, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, // .......V...=....
	0x00, 0x00, 0x00, 0xe4, 0x02, 0x00, 0x00, 0xe3, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, // ...........O....
	0x00, 0x00, 0x00, 0xe5, 0x02, 0x00, 0x00, 0xe4, 0x02, 0x00, 0x00, 0xe4, 0x02, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xe7, 0x02, 0x00, 0x00, 0x1f, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x8e, // ................
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xe8, 0x02, 0x00, 0x00, 0xe5, 0x02, 0x00, 0x00, 0xe7, // ................
	0x02, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xe9, 0x02, 0x00, 0x00, 0xe2, // ................
	0x02, 0x00, 0x00, 0xe8, 0x02, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xea, // ................
	0x02, 0x00, 0x00, 0xe9, 0x02, 0x00, 0x00, 0xdf, 0x02, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, // ................
	0x00, 0x00, 0x00, 0xec, 0x02, 0x00, 0x00, 0xdd, 0x02, 0x00, 0x00, 0xea, 0x02, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xee, 0x02, 0x00, 0x00, 0xbf, 0x02, 0x00, 0x00, 0x03, // ................
	0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc6, 0x00, 0x00, 0x00, 0xef, 0x02, 0x00, 0x00, 0xc5, // ...A............
	0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xf0, // ...R...=........
	0x02, 0x00, 0x00, 0xef, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0xf1, // .......O........
	0x02, 0x00, 0x00, 0xf0, 0x02, 0x00, 0x00, 0xf0, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc6, 0x00, 0x00, 0x00, 0xf2, // .......A........
	0x02, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, // .......V...=....
	0x00, 0x00, 0x00, 0xf3, 0x02, 0x00, 0x00, 0xf2, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, // ...........O....
	0x00, 0x00, 0x00, 0xf4, 0x02, 0x00, 0x00, 0xf3, 0x02, 0x00, 0x00, 0xf3, 0x02, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xf6, 0x02, 0x00, 0x00, 0x1f, 0x02, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x8e, // ................
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xf7, 0x02, 0x00, 0x00, 0xf4, 0x02, 0x00, 0x00, 0xf6, // ................
	0x02, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xf8, 0x02, 0x00, 0x00, 0xf1, // ................
	0x02, 0x00, 0x00, 0xf7, 0x02, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xf9, // ................
	0x02, 0x00, 0x00, 0xf8, 0x02, 0x00, 0x00, 0xee, 0x02, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, // ................
	0x00, 0x00, 0x00, 0xfb, 0x02, 0x00, 0x00, 0xec, 0x02, 0x00, 0x00, 0xf9, 0x02, 0x00, 0x00, 0x85, // ................
	0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xff, 0x02, 0x00, 0x00, 0x1f, 0x02, 0x00, 0x00, 0x09, // ................
	0x03, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x08, 0x05, 0x00, 0x00, 0xff, 0x02, 0x00, 0x00, 0x51, // ...(...........Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x27, 0x02, 0x00, 0x00, 0xcf, 0x01, 0x00, 0x00, 0x00, // .......'........
	0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x28, 0x02, 0x00, 0x00, 0x27, // ...........(...'
	0x02, 0x00, 0x00, 0xa6, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x29, // ...............)
	0x02, 0x00, 0x00, 0x28, 0x02, 0x00, 0x00, 0xa6, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...(.......Q....
	0x00, 0x00, 0x00, 0x2b, 0x02, 0x00, 0x00, 0xcf, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x50, // ...+...........P
	0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x2c, 0x02, 0x00, 0x00, 0x29, 0x02, 0x00, 0x00, 0x2b, // .......,...)...+
	0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x2d, 0x02, 0x00, 0x00, 0xc5, // ...A.......-....
	0x00, 0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, // .......R...=....
	0x00, 0x00, 0x00, 0x2e, 0x02, 0x00, 0x00, 0x2d, 0x02, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x5a, // .......-...V...Z
	0x00, 0x00, 0x00, 0x67, 0x03, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0x57, // ...g...I...F...W
	0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x69, 0x03, 0x00, 0x00, 0x67, 0x03, 0x00, 0x00, 0x2c, // .......i...g...,
	0x02, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x1f, 0x03, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x00, 0x0b, 0x05, 0x00, 0x00, 0x69, // ...1...........i
	0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x21, 0x03, 0x00, 0x00, 0x1f, // ...Q.......!....
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x22, // .......A......."
	0x03, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, // .......R...=....
	0x00, 0x00, 0x00, 0x23, 0x03, 0x00, 0x00, 0x22, 0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, // ...#..."...O....
	0x00, 0x00, 0x00, 0x24, 0x03, 0x00, 0x00, 0x23, 0x03, 0x00, 0x00, 0x23, 0x03, 0x00, 0x00, 0x00, // ...$...#...#....
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc6, // ...........A....
	0x00, 0x00, 0x00, 0x25, 0x03, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x3d, // ...%.......V...=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x26, 0x03, 0x00, 0x00, 0x25, 0x03, 0x00, 0x00, 0x4f, // .......&...%...O
	0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x27, 0x03, 0x00, 0x00, 0x26, 0x03, 0x00, 0x00, 0x26, // .......'...&...&
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x29, 0x03, 0x00, 0x00, 0x2e, 0x02, 0x00, 0x00, 0x00, // .......)........
	0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x2a, 0x03, 0x00, 0x00, 0x27, // ...........*...'
	0x03, 0x00, 0x00, 0x29, 0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x2b, // ...)...........+
	0x03, 0x00, 0x00, 0x24, 0x03, 0x00, 0x00, 0x2a, 0x03, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, // ...$...*........
	0x00, 0x00, 0x00, 0x2c, 0x03, 0x00, 0x00, 0x2b, 0x03, 0x00, 0x00, 0x21, 0x03, 0x00, 0x00, 0x81, // ...,...+...!....
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x2e, 0x03, 0x00, 0x00, 0xfb, 0x02, 0x00, 0x00, 0x2c, // ...............,
	0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x30, 0x03, 0x00, 0x00, 0x1f, // ...Q.......0....
	0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x31, // .......A.......1
	0x03, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, // .......R...=....
	0x00, 0x00, 0x00, 0x32, 0x03, 0x00, 0x00, 0x31, 0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, // ...2...1...O....
	0x00, 0x00, 0x00, 0x33, 0x03, 0x00, 0x00, 0x32, 0x03, 0x00, 0x00, 0x32, 0x03, 0x00, 0x00, 0x00, // ...3...2...2....
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc6, // ...........A....
	0x00, 0x00, 0x00, 0x34, 0x03, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x3d, // ...4.......V...=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x35, 0x03, 0x00, 0x00, 0x34, 0x03, 0x00, 0x00, 0x4f, // .......5...4...O
	0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x36, 0x03, 0x00, 0x00, 0x35, 0x03, 0x00, 0x00, 0x35, // .......6...5...5
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x38, 0x03, 0x00, 0x00, 0x2e, 0x02, 0x00, 0x00, 0x01, // .......8........
	0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x39, 0x03, 0x00, 0x00, 0x36, // ...........9...6
	0x03, 0x00, 0x00, 0x38, 0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x3a, // ...8...........:
	0x03, 0x00, 0x00, 0x33, 0x03, 0x00, 0x00, 0x39, 0x03, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, // ...3...9........
	0x00, 0x00, 0x00, 0x3b, 0x03, 0x00, 0x00, 0x3a, 0x03, 0x00, 0x00, 0x30, 0x03, 0x00, 0x00, 0x81, // ...;...:...0....
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x3d, 0x03, 0x00, 0x00, 0x2e, 0x03, 0x00, 0x00, 0x3b, // .......=.......;
	0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3f, 0x03, 0x00, 0x00, 0x1f, // ...Q.......?....
	0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x40, // .......A.......@
	0x03, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, // .......R...=....
	0x00, 0x00, 0x00, 0x41, 0x03, 0x00, 0x00, 0x40, 0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, // ...A...@...O....
	0x00, 0x00, 0x00, 0x42, 0x03, 0x00, 0x00, 0x41, 0x03, 0x00, 0x00, 0x41, 0x03, 0x00, 0x00, 0x00, // ...B...A...A....
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc6, // ...........A....
	0x00, 0x00, 0x00, 0x43, 0x03, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x3d, // ...C.......V...=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x44, 0x03, 0x00, 0x00, 0x43, 0x03, 0x00, 0x00, 0x4f, // .......D...C...O
	0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x45, 0x03, 0x00, 0x00, 0x44, 0x03, 0x00, 0x00, 0x44, // .......E...D...D
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x47, 0x03, 0x00, 0x00, 0x2e, 0x02, 0x00, 0x00, 0x02, // .......G........
	0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x48, 0x03, 0x00, 0x00, 0x45, // ...........H...E
	0x03, 0x00, 0x00, 0x47, 0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x49, // ...G...........I
	0x03, 0x00, 0x00, 0x42, 0x03, 0x00, 0x00, 0x48, 0x03, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, // ...B...H........
	0x00, 0x00, 0x00, 0x4a, 0x03, 0x00, 0x00, 0x49, 0x03, 0x00, 0x00, 0x3f, 0x03, 0x00, 0x00, 0x81, // ...J...I...?....
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x4c, 0x03, 0x00, 0x00, 0x3d, 0x03, 0x00, 0x00, 0x4a, // .......L...=...J
	0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4e, 0x03, 0x00, 0x00, 0x1f, // ...Q.......N....
	0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x4f, // .......A.......O
	0x03, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, // .......R...=....
	0x00, 0x00, 0x00, 0x50, 0x03, 0x00, 0x00, 0x4f, 0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, // ...P...O...O....
	0x00, 0x00, 0x00, 0x51, 0x03, 0x00, 0x00, 0x50, 0x03, 0x00, 0x00, 0x50, 0x03, 0x00, 0x00, 0x00, // ...Q...P...P....
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc6, // ...........A....
	0x00, 0x00, 0x00, 0x52, 0x03, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x3d, // ...R.......V...=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x53, 0x03, 0x00, 0x00, 0x52, 0x03, 0x00, 0x00, 0x4f, // .......S...R...O
	0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x54, 0x03, 0x00, 0x00, 0x53, 0x03, 0x00, 0x00, 0x53, // .......T...S...S
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x56, 0x03, 0x00, 0x00, 0x2e, 0x02, 0x00, 0x00, 0x03, // .......V........
	0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x57, 0x03, 0x00, 0x00, 0x54, // ...........W...T
	0x03, 0x00, 0x00, 0x56, 0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x58, // ...V...........X
	0x03, 0x00, 0x00, 0x51, 0x03, 0x00, 0x00, 0x57, 0x03, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, // ...Q...W........
	0x00, 0x00, 0x00, 0x59, 0x03, 0x00, 0x00, 0x58, 0x03, 0x00, 0x00, 0x4e, 0x03, 0x00, 0x00, 0x81, // ...Y...X...N....
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x5b, 0x03, 0x00, 0x00, 0x4c, 0x03, 0x00, 0x00, 0x59, // .......[...L...Y
	0x03, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x5f, 0x03, 0x00, 0x00, 0x2e, // ..........._....
	0x02, 0x00, 0x00, 0x69, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x60, // ...i...........`
	0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x5f, // .......(......._
	0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x36, 0x02, 0x00, 0x00, 0xcf, // ...Q.......6....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x37, // ...............7
	0x02, 0x00, 0x00, 0x36, 0x02, 0x00, 0x00, 0xa6, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, // ...6............
	0x00, 0x00, 0x00, 0x38, 0x02, 0x00, 0x00, 0x37, 0x02, 0x00, 0x00, 0x3d, 0x01, 0x00, 0x00, 0x51, // ...8...7...=...Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3a, 0x02, 0x00, 0x00, 0xcf, 0x01, 0x00, 0x00, 0x01, // .......:........
	0x00, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3b, 0x02, 0x00, 0x00, 0x38, // ...P.......;...8
	0x02, 0x00, 0x00, 0x3a, 0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x3c, // ...:...A.......<
	0x02, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x39, 0x01, 0x00, 0x00, 0x3d, // ...........9...=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x3d, 0x02, 0x00, 0x00, 0x3c, 0x02, 0x00, 0x00, 0x56, // .......=...<...V
	0x00, 0x05, 0x00, 0x5a, 0x00, 0x00, 0x00, 0xc7, 0x03, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x46, // ...Z.......I...F
	0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xc9, 0x03, 0x00, 0x00, 0xc7, // ...W............
	0x03, 0x00, 0x00, 0x3b, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x7f, // ...;............
	0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x00, 0x0b, // .......1........
	0x05, 0x00, 0x00, 0xc9, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x81, // .......Q........
	0x03, 0x00, 0x00, 0x7f, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc6, // ...........A....
	0x00, 0x00, 0x00, 0x82, 0x03, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x3d, // ...........R...=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x83, 0x03, 0x00, 0x00, 0x82, 0x03, 0x00, 0x00, 0x4f, // ...............O
	0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x84, 0x03, 0x00, 0x00, 0x83, 0x03, 0x00, 0x00, 0x83, // ................
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x05, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x85, 0x03, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x56, // ...............V
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x86, 0x03, 0x00, 0x00, 0x85, // ...=............
	0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x87, 0x03, 0x00, 0x00, 0x86, // ...O............
	0x03, 0x00, 0x00, 0x86, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x89, 0x03, 0x00, 0x00, 0x3d, // ...Q...........=
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x8a, // ................
	0x03, 0x00, 0x00, 0x87, 0x03, 0x00, 0x00, 0x89, 0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, // ................
	0x00, 0x00, 0x00, 0x8b, 0x03, 0x00, 0x00, 0x84, 0x03, 0x00, 0x00, 0x8a, 0x03, 0x00, 0x00, 0x8e, // ................
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x8c, 0x03, 0x00, 0x00, 0x8b, 0x03, 0x00, 0x00, 0x81, // ................
	0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x8e, 0x03, 0x00, 0x00, 0x5b, // ...............[
	0x03, 0x00, 0x00, 0x8c, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x90, // .......Q........
	0x03, 0x00, 0x00, 0x7f, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc6, // ...........A....
	0x00, 0x00, 0x00, 0x91, 0x03, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x3d, // ...........R...=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x92, 0x03, 0x00, 0x00, 0x91, 0x03, 0x00, 0x00, 0x4f, // ...............O
	0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x93, 0x03, 0x00, 0x00, 0x92, 0x03, 0x00, 0x00, 0x92, // ................
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x05, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x94, 0x03, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x56, // ...............V
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x95, 0x03, 0x00, 0x00, 0x94, // ...=............
	0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x96, 0x03, 0x00, 0x00, 0x95, // ...O............
	0x03, 0x00, 0x00, 0x95, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x98, 0x03, 0x00, 0x00, 0x3d, // ...Q...........=
	0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x99, // ................
	0x03, 0x00, 0x00, 0x96, 0x03, 0x00, 0x00, 0x98, 0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, // ................
	0x00, 0x00, 0x00, 0x9a, 0x03, 0x00, 0x00, 0x93, 0x03, 0x00, 0x00, 0x99, 0x03, 0x00, 0x00, 0x8e, // ................
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x9b, 0x03, 0x00, 0x00, 0x9a, 0x03, 0x00, 0x00, 0x90, // ................
	0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x9d, 0x03, 0x00, 0x00, 0x8e, // ................
	0x03, 0x00, 0x00, 0x9b, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9f, // .......Q........
	0x03, 0x00, 0x00, 0x7f, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc6, // ...........A....
	0x00, 0x00, 0x00, 0xa0, 0x03, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x3d, // ...........R...=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xa1, 0x03, 0x00, 0x00, 0xa0, 0x03, 0x00, 0x00, 0x4f, // ...............O
	0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0xa2, 0x03, 0x00, 0x00, 0xa1, 0x03, 0x00, 0x00, 0xa1, // ................
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x05, 0x00, 0xc6, 0x00, 0x00, 0x00, 0xa3, 0x03, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x56, // ...............V
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xa4, 0x03, 0x00, 0x00, 0xa3, // ...=............
	0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0xa5, 0x03, 0x00, 0x00, 0xa4, // ...O............
	0x03, 0x00, 0x00, 0xa4, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa7, 0x03, 0x00, 0x00, 0x3d, // ...Q...........=
	0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xa8, // ................
	0x03, 0x00, 0x00, 0xa5, 0x03, 0x00, 0x00, 0xa7, 0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, // ................
	0x00, 0x00, 0x00, 0xa9, 0x03, 0x00, 0x00, 0xa2, 0x03, 0x00, 0x00, 0xa8, 0x03, 0x00, 0x00, 0x8e, // ................
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xaa, 0x03, 0x00, 0x00, 0xa9, 0x03, 0x00, 0x00, 0x9f, // ................
	0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xac, 0x03, 0x00, 0x00, 0x9d, // ................
	0x03, 0x00, 0x00, 0xaa, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xae, // .......Q........
	0x03, 0x00, 0x00, 0x7f, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc6, // ...........A....
	0x00, 0x00, 0x00, 0xaf, 0x03, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x3d, // ...........R...=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xb0, 0x03, 0x00, 0x00, 0xaf, 0x03, 0x00, 0x00, 0x4f, // ...............O
	0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0xb1, 0x03, 0x00, 0x00, 0xb0, 0x03, 0x00, 0x00, 0xb0, // ................
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x05, 0x00, 0xc6, 0x00, 0x00, 0x00, 0xb2, 0x03, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x56, // ...............V
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xb3, 0x03, 0x00, 0x00, 0xb2, // ...=............
	0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0xb4, 0x03, 0x00, 0x00, 0xb3, // ...O............
	0x03, 0x00, 0x00, 0xb3, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb6, 0x03, 0x00, 0x00, 0x3d, // ...Q...........=
	0x02, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xb7, // ................
	0x03, 0x00, 0x00, 0xb4, 0x03, 0x00, 0x00, 0xb6, 0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, // ................
	0x00, 0x00, 0x00, 0xb8, 0x03, 0x00, 0x00, 0xb1, 0x03, 0x00, 0x00, 0xb7, 0x03, 0x00, 0x00, 0x8e, // ................
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xb9, 0x03, 0x00, 0x00, 0xb8, 0x03, 0x00, 0x00, 0xae, // ................
	0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xbb, 0x03, 0x00, 0x00, 0xac, // ................
	0x03, 0x00, 0x00, 0xb9, 0x03, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xbf, // ................
	0x03, 0x00, 0x00, 0x3d, 0x02, 0x00, 0x00, 0xc9, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x0d, // ...=............
	0x00, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x60, // ...........(...`
	0x03, 0x00, 0x00, 0xbf, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x45, // .......Q.......E
	0x02, 0x00, 0x00, 0xcf, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x46, 0x02, 0x00, 0x00, 0x45, 0x02, 0x00, 0x00, 0xa6, 0x00, 0x00, 0x00, 0x81, // ...F...E........
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x47, 0x02, 0x00, 0x00, 0x46, 0x02, 0x00, 0x00, 0x53, // .......G...F...S
	0x01, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x49, 0x02, 0x00, 0x00, 0xcf, // ...Q.......I....
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x4a, // .......P.......J
	0x02, 0x00, 0x00, 0x47, 0x02, 0x00, 0x00, 0x49, 0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0xc6, // ...G...I...A....
	0x00, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x4f, // ...K...........O
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x4c, 0x02, 0x00, 0x00, 0x4b, // ...=.......L...K
	0x02, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x5a, 0x00, 0x00, 0x00, 0x27, 0x04, 0x00, 0x00, 0x49, // ...V...Z...'...I
	0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x29, // ...F...W.......)
	0x04, 0x00, 0x00, 0x27, 0x04, 0x00, 0x00, 0x4a, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x0d, // ...'...J........
	0x00, 0x00, 0x00, 0xdf, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x0a, // ...........1....
	0x05, 0x00, 0x00, 0x0b, 0x05, 0x00, 0x00, 0x29, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // .......)...Q....
	0x00, 0x00, 0x00, 0xe1, 0x03, 0x00, 0x00, 0xdf, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x05, 0x00, 0xc6, 0x00, 0x00, 0x00, 0xe2, 0x03, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x52, // ...............R
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xe3, 0x03, 0x00, 0x00, 0xe2, // ...=............
	0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0xe4, 0x03, 0x00, 0x00, 0xe3, // ...O............
	0x03, 0x00, 0x00, 0xe3, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc6, 0x00, 0x00, 0x00, 0xe5, 0x03, 0x00, 0x00, 0xc5, // ...A............
	0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xe6, // ...V...=........
	0x03, 0x00, 0x00, 0xe5, 0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0xe7, // .......O........
	0x03, 0x00, 0x00, 0xe6, 0x03, 0x00, 0x00, 0xe6, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe9, // .......Q........
	0x03, 0x00, 0x00, 0x4c, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, // ...L............
	0x00, 0x00, 0x00, 0xea, 0x03, 0x00, 0x00, 0xe7, 0x03, 0x00, 0x00, 0xe9, 0x03, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xeb, 0x03, 0x00, 0x00, 0xe4, 0x03, 0x00, 0x00, 0xea, // ................
	0x03, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xec, 0x03, 0x00, 0x00, 0xeb, // ................
	0x03, 0x00, 0x00, 0xe1, 0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xee, // ................
	0x03, 0x00, 0x00, 0xbb, 0x03, 0x00, 0x00, 0xec, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xf0, 0x03, 0x00, 0x00, 0xdf, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x05, 0x00, 0xc6, 0x00, 0x00, 0x00, 0xf1, 0x03, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x52, // ...............R
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xf2, 0x03, 0x00, 0x00, 0xf1, // ...=............
	0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0xf3, 0x03, 0x00, 0x00, 0xf2, // ...O............
	0x03, 0x00, 0x00, 0xf2, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc6, 0x00, 0x00, 0x00, 0xf4, 0x03, 0x00, 0x00, 0xc5, // ...A............
	0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xf5, // ...V...=........
	0x03, 0x00, 0x00, 0xf4, 0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0xf6, // .......O........
	0x03, 0x00, 0x00, 0xf5, 0x03, 0x00, 0x00, 0xf5, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf8, // .......Q........
	0x03, 0x00, 0x00, 0x4c, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, // ...L............
	0x00, 0x00, 0x00, 0xf9, 0x03, 0x00, 0x00, 0xf6, 0x03, 0x00, 0x00, 0xf8, 0x03, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xfa, 0x03, 0x00, 0x00, 0xf3, 0x03, 0x00, 0x00, 0xf9, // ................
	0x03, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xfb, 0x03, 0x00, 0x00, 0xfa, // ................
	0x03, 0x00, 0x00, 0xf0, 0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xfd, // ................
	0x03, 0x00, 0x00, 0xee, 0x03, 0x00, 0x00, 0xfb, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xff, 0x03, 0x00, 0x00, 0xdf, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x05, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x52, // ...............R
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x01, 0x04, 0x00, 0x00, 0x00, // ...=............
	0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0x01, // ...O............
	0x04, 0x00, 0x00, 0x01, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x03, 0x04, 0x00, 0x00, 0xc5, // ...A............
	0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x04, // ...V...=........
	0x04, 0x00, 0x00, 0x03, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x05, // .......O........
	0x04, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, // .......Q........
	0x04, 0x00, 0x00, 0x4c, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, // ...L............
	0x00, 0x00, 0x00, 0x08, 0x04, 0x00, 0x00, 0x05, 0x04, 0x00, 0x00, 0x07, 0x04, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x09, 0x04, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0x08, // ................
	0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x0a, 0x04, 0x00, 0x00, 0x09, // ................
	0x04, 0x00, 0x00, 0xff, 0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x0c, // ................
	0x04, 0x00, 0x00, 0xfd, 0x03, 0x00, 0x00, 0x0a, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x0e, 0x04, 0x00, 0x00, 0xdf, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x05, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x0f, 0x04, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x52, // ...............R
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x10, 0x04, 0x00, 0x00, 0x0f, // ...=............
	0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x11, 0x04, 0x00, 0x00, 0x10, // ...O............
	0x04, 0x00, 0x00, 0x10, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x12, 0x04, 0x00, 0x00, 0xc5, // ...A............
	0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x13, // ...V...=........
	0x04, 0x00, 0x00, 0x12, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x14, // .......O........
	0x04, 0x00, 0x00, 0x13, 0x04, 0x00, 0x00, 0x13, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x16, // .......Q........
	0x04, 0x00, 0x00, 0x4c, 0x02, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, // ...L............
	0x00, 0x00, 0x00, 0x17, 0x04, 0x00, 0x00, 0x14, 0x04, 0x00, 0x00, 0x16, 0x04, 0x00, 0x00, 0x81, // ................
	0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x18, 0x04, 0x00, 0x00, 0x11, 0x04, 0x00, 0x00, 0x17, // ................
	0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x19, 0x04, 0x00, 0x00, 0x18, // ................
	0x04, 0x00, 0x00, 0x0e, 0x04, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x1b, // ................
	0x04, 0x00, 0x00, 0x0c, 0x04, 0x00, 0x00, 0x19, 0x04, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0x1f, 0x04, 0x00, 0x00, 0x4c, 0x02, 0x00, 0x00, 0x29, 0x04, 0x00, 0x00, 0x0c, // .......L...)....
	0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x20, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, // ....... .......(
	0x00, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0x1f, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x54, 0x02, 0x00, 0x00, 0x20, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, // ...T... .......Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x56, 0x02, 0x00, 0x00, 0x20, 0x04, 0x00, 0x00, 0x01, // .......V... ....
	0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x57, 0x02, 0x00, 0x00, 0x01, // ...........W....
	0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x54, 0x02, 0x00, 0x00, 0x56, 0x02, 0x00, 0x00, 0x51, // ...(...T...V...Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x59, 0x02, 0x00, 0x00, 0x20, 0x04, 0x00, 0x00, 0x02, // .......Y... ....
	0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5a, 0x02, 0x00, 0x00, 0x01, // ...........Z....
	0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x57, 0x02, 0x00, 0x00, 0x59, 0x02, 0x00, 0x00, 0x51, // ...(...W...Y...Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5c, 0x02, 0x00, 0x00, 0x20, 0x04, 0x00, 0x00, 0x03, // ........... ....
	0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5d, 0x02, 0x00, 0x00, 0x01, // ...........]....
	0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x5a, 0x02, 0x00, 0x00, 0x5c, 0x02, 0x00, 0x00, 0x85, // ...(...Z........
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0x5d, 0x02, 0x00, 0x00, 0x5d, // .......`...]...]
	0x02, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x61, 0x02, 0x00, 0x00, 0xc5, // ...A.......a....
	0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x62, // ...V...=.......b
	0x02, 0x00, 0x00, 0x61, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x63, // ...a...O.......c
	0x02, 0x00, 0x00, 0x62, 0x02, 0x00, 0x00, 0x62, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ...b...b........
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x64, // ...............d
	0x02, 0x00, 0x00, 0x63, 0x02, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x79, // ...c...`...A...y
	0x01, 0x00, 0x00, 0x65, 0x02, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0xf2, // ...e.......V....
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x66, 0x02, 0x00, 0x00, 0x65, // ...=.......f...e
	0x02, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x68, 0x02, 0x00, 0x00, 0x64, // ...........h...d
	0x02, 0x00, 0x00, 0x66, 0x02, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x6a, // ...f...........j
	0x02, 0x00, 0x00, 0x1b, 0x04, 0x00, 0x00, 0x68, 0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x79, // .......h...A...y
	0x01, 0x00, 0x00, 0x6b, 0x02, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x00, 0x8a, // ...k.......O....
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6c, 0x02, 0x00, 0x00, 0x6b, // ...=.......l...k
	0x02, 0x00, 0x00, 0xb7, 0x00, 0x05, 0x00, 0x70, 0x00, 0x00, 0x00, 0x6d, 0x02, 0x00, 0x00, 0x6c, // .......p...m...l
	0x02, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x82, 0x02, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x6d, 0x02, 0x00, 0x00, 0x6e, 0x02, 0x00, 0x00, 0x82, // .......m...n....
	0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x6e, 0x02, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x5a, // .......n...V...Z
	0x00, 0x00, 0x00, 0x38, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x57, // ...8...O...M...W
	0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x3a, 0x04, 0x00, 0x00, 0x38, 0x04, 0x00, 0x00, 0xcc, // .......:...8....
	0x01, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x72, 0x02, 0x00, 0x00, 0xc5, // ...A.......r....
	0x00, 0x00, 0x00, 0x39, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x73, // ...9...=.......s
	0x02, 0x00, 0x00, 0x72, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x74, // ...r...O.......t
	0x02, 0x00, 0x00, 0x73, 0x02, 0x00, 0x00, 0x73, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ...s...s........
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x76, // ...............v
	0x02, 0x00, 0x00, 0x74, 0x02, 0x00, 0x00, 0x64, 0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x79, // ...t...d...A...y
	0x01, 0x00, 0x00, 0x77, 0x02, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x39, 0x01, 0x00, 0x00, 0xf2, // ...w.......9....
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x78, 0x02, 0x00, 0x00, 0x77, // ...=.......x...w
	0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7a, 0x02, 0x00, 0x00, 0x3a, // ...Q.......z...:
	0x04, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7b, // ...............{
	0x02, 0x00, 0x00, 0x78, 0x02, 0x00, 0x00, 0x7a, 0x02, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x13, // ...x...z...P....
	0x00, 0x00, 0x00, 0x7c, 0x02, 0x00, 0x00, 0x7b, 0x02, 0x00, 0x00, 0x7b, 0x02, 0x00, 0x00, 0x7b, // ...|...{...{...{
	0x02, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00, 0x01, // ...........@....
	0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x6a, 0x02, 0x00, 0x00, 0x76, 0x02, 0x00, 0x00, 0x7c, // .......j...v...|
	0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x80, 0x02, 0x00, 0x00, 0x3a, // ...O...........:
	0x04, 0x00, 0x00, 0x3a, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ...:............
	0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x81, 0x02, 0x00, 0x00, 0x40, // ...............@
	0x04, 0x00, 0x00, 0x80, 0x02, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x82, 0x02, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0x82, 0x02, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x13, 0x00, 0x00, 0x00, 0x0c, // ................
	0x05, 0x00, 0x00, 0x6a, 0x02, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x81, 0x02, 0x00, 0x00, 0x6e, // ...j...........n
	0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x79, 0x01, 0x00, 0x00, 0x83, 0x02, 0x00, 0x00, 0xc5, // ...A...y........
	0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0xf2, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...R.......=....
	0x00, 0x00, 0x00, 0x84, 0x02, 0x00, 0x00, 0x83, 0x02, 0x00, 0x00, 0xb4, 0x00, 0x05, 0x00, 0x70, // ...............p
	0x00, 0x00, 0x00, 0x85, 0x02, 0x00, 0x00, 0x84, 0x02, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0xf7, // ................
	0x00, 0x03, 0x00, 0xa5, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x85, // ................
	0x02, 0x00, 0x00, 0x86, 0x02, 0x00, 0x00, 0x8c, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x86, // ................
	0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x88, 0x02, 0x00, 0x00, 0x0c, // ...Q............
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x89, // .......Q........
	0x02, 0x00, 0x00, 0x0c, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x8a, 0x02, 0x00, 0x00, 0x0c, 0x05, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, // ...............P
	0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x8b, 0x02, 0x00, 0x00, 0x88, 0x02, 0x00, 0x00, 0x89, // ................
	0x02, 0x00, 0x00, 0x8a, 0x02, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xa5, // ................
	0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x8c, 0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x79, // ...........A...y
	0x01, 0x00, 0x00, 0x8d, 0x02, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0xf2, // ...........R....
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8e, 0x02, 0x00, 0x00, 0x8d, // ...=............
	0x02, 0x00, 0x00, 0xb4, 0x00, 0x05, 0x00, 0x70, 0x00, 0x00, 0x00, 0x8f, 0x02, 0x00, 0x00, 0x8e, // .......p........
	0x02, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xa4, 0x02, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x8f, 0x02, 0x00, 0x00, 0x90, 0x02, 0x00, 0x00, 0x97, // ................
	0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x90, 0x02, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x45, 0x04, 0x00, 0x00, 0x0c, 0x05, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x0c, // ...E............
	0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x25, // .......F.......%
	0x00, 0x00, 0x00, 0x45, 0x04, 0x00, 0x00, 0xa2, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ...E............
	0x00, 0x00, 0x00, 0x49, 0x04, 0x00, 0x00, 0x46, 0x04, 0x00, 0x00, 0xa6, 0x00, 0x00, 0x00, 0x81, // ...I...F........
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4a, 0x04, 0x00, 0x00, 0x49, 0x04, 0x00, 0x00, 0xa8, // .......J...I....
	0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4c, 0x04, 0x00, 0x00, 0x46, // ...........L...F
	0x04, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4d, // ...............M
	0x04, 0x00, 0x00, 0x4a, 0x04, 0x00, 0x00, 0x4c, 0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, // ...J...L........
	0x00, 0x00, 0x00, 0x4e, 0x04, 0x00, 0x00, 0x0c, 0x05, 0x00, 0x00, 0x4d, 0x04, 0x00, 0x00, 0x51, // ...N.......M...Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x93, 0x02, 0x00, 0x00, 0x4e, 0x04, 0x00, 0x00, 0x00, // ...........N....
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x94, 0x02, 0x00, 0x00, 0x4e, // ...Q...........N
	0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x95, // .......Q........
	0x02, 0x00, 0x00, 0x4e, 0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, // ...N.......P....
	0x00, 0x00, 0x00, 0x96, 0x02, 0x00, 0x00, 0x93, 0x02, 0x00, 0x00, 0x94, 0x02, 0x00, 0x00, 0x95, // ................
	0x02, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xa4, 0x02, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0x97, 0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x79, 0x01, 0x00, 0x00, 0x98, // .......A...y....
	0x02, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0xf2, 0x00, 0x00, 0x00, 0x3d, // .......R.......=
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x99, 0x02, 0x00, 0x00, 0x98, 0x02, 0x00, 0x00, 0xb4, // ................
	0x00, 0x05, 0x00, 0x70, 0x00, 0x00, 0x00, 0x9a, 0x02, 0x00, 0x00, 0x99, 0x02, 0x00, 0x00, 0xb8, // ...p............
	0x01, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xa3, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // ................
	0x00, 0x04, 0x00, 0x9a, 0x02, 0x00, 0x00, 0x9b, 0x02, 0x00, 0x00, 0xa3, 0x02, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0x9b, 0x02, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x53, // ...............S
	0x04, 0x00, 0x00, 0x0c, 0x05, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x53, // ...T.......%...S
	0x04, 0x00, 0x00, 0xa2, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x57, // ...............W
	0x04, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0xa6, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, // ...T............
	0x00, 0x00, 0x00, 0x58, 0x04, 0x00, 0x00, 0x57, 0x04, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x81, // ...X...W........
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5a, 0x04, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0xa8, // .......Z...T....
	0x00, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5b, 0x04, 0x00, 0x00, 0x58, // ...........[...X
	0x04, 0x00, 0x00, 0x5a, 0x04, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x5c, // ...Z............
	0x04, 0x00, 0x00, 0x0c, 0x05, 0x00, 0x00, 0x5b, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // .......[...Q....
	0x00, 0x00, 0x00, 0x63, 0x04, 0x00, 0x00, 0x5c, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbc, // ...c............
	0x00, 0x05, 0x00, 0x70, 0x00, 0x00, 0x00, 0x75, 0x04, 0x00, 0x00, 0x63, 0x04, 0x00, 0x00, 0x6f, // ...p...u...c...o
	0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x7e, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // .......~........
	0x00, 0x04, 0x00, 0x75, 0x04, 0x00, 0x00, 0x76, 0x04, 0x00, 0x00, 0x79, 0x04, 0x00, 0x00, 0xf8, // ...u...v...y....
	0x00, 0x02, 0x00, 0x76, 0x04, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x78, // ...v...........x
	0x04, 0x00, 0x00, 0x75, 0x00, 0x00, 0x00, 0x63, 0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x7e, // ...u...c.......~
	0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x79, 0x04, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, // .......y........
	0x00, 0x00, 0x00, 0x7b, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x63, // ...{...........c
	0x04, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7c, // ...{...........|
	0x04, 0x00, 0x00, 0x79, 0x00, 0x00, 0x00, 0x7b, 0x04, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, // ...y...{........
	0x00, 0x00, 0x00, 0x7d, 0x04, 0x00, 0x00, 0x7c, 0x04, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0xf9, // ...}...|...~....
	0x00, 0x02, 0x00, 0x7e, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x7e, 0x04, 0x00, 0x00, 0xf5, // ...~.......~....
	0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0d, 0x05, 0x00, 0x00, 0x78, 0x04, 0x00, 0x00, 0x76, // ...........x...v
	0x04, 0x00, 0x00, 0x7d, 0x04, 0x00, 0x00, 0x79, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...}...y...Q....
	0x00, 0x00, 0x00, 0x66, 0x04, 0x00, 0x00, 0x5c, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xbc, // ...f............
	0x00, 0x05, 0x00, 0x70, 0x00, 0x00, 0x00, 0x89, 0x04, 0x00, 0x00, 0x66, 0x04, 0x00, 0x00, 0x6f, // ...p.......f...o
	0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x92, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // ................
	0x00, 0x04, 0x00, 0x89, 0x04, 0x00, 0x00, 0x8a, 0x04, 0x00, 0x00, 0x8d, 0x04, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0x8a, 0x04, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8c, // ................
	0x04, 0x00, 0x00, 0x75, 0x00, 0x00, 0x00, 0x66, 0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x92, // ...u...f........
	0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x8d, 0x04, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x8f, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x66, // ...............f
	0x04, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x90, // ...{............
	0x04, 0x00, 0x00, 0x79, 0x00, 0x00, 0x00, 0x8f, 0x04, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, // ...y............
	0x00, 0x00, 0x00, 0x91, 0x04, 0x00, 0x00, 0x90, 0x04, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0xf9, // ...........~....
	0x00, 0x02, 0x00, 0x92, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x92, 0x04, 0x00, 0x00, 0xf5, // ................
	0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0e, 0x05, 0x00, 0x00, 0x8c, 0x04, 0x00, 0x00, 0x8a, // ................
	0x04, 0x00, 0x00, 0x91, 0x04, 0x00, 0x00, 0x8d, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x69, 0x04, 0x00, 0x00, 0x5c, 0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xbc, // ...i............
	0x00, 0x05, 0x00, 0x70, 0x00, 0x00, 0x00, 0x9d, 0x04, 0x00, 0x00, 0x69, 0x04, 0x00, 0x00, 0x6f, // ...p.......i...o
	0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xa6, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, // ................
	0x00, 0x04, 0x00, 0x9d, 0x04, 0x00, 0x00, 0x9e, 0x04, 0x00, 0x00, 0xa1, 0x04, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0x9e, 0x04, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa0, // ................
	0x04, 0x00, 0x00, 0x75, 0x00, 0x00, 0x00, 0x69, 0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xa6, // ...u...i........
	0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xa1, 0x04, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0xa3, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x69, // ...............i
	0x04, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa4, // ...{............
	0x04, 0x00, 0x00, 0x79, 0x00, 0x00, 0x00, 0xa3, 0x04, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, // ...y............
	0x00, 0x00, 0x00, 0xa5, 0x04, 0x00, 0x00, 0xa4, 0x04, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0xf9, // ...........~....
	0x00, 0x02, 0x00, 0xa6, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xa6, 0x04, 0x00, 0x00, 0xf5, // ................
	0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0f, 0x05, 0x00, 0x00, 0xa0, 0x04, 0x00, 0x00, 0x9e, // ................
	0x04, 0x00, 0x00, 0xa5, 0x04, 0x00, 0x00, 0xa1, 0x04, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, // ...........P....
	0x00, 0x00, 0x00, 0xa2, 0x02, 0x00, 0x00, 0x0d, 0x05, 0x00, 0x00, 0x0e, 0x05, 0x00, 0x00, 0x0f, // ................
	0x05, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xa3, 0x02, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xa3, 0x02, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x12, // ................
	0x05, 0x00, 0x00, 0x14, 0x05, 0x00, 0x00, 0x97, 0x02, 0x00, 0x00, 0xa2, 0x02, 0x00, 0x00, 0xa6, // ................
	0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xa4, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xa4, // ................
	0x02, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x11, 0x05, 0x00, 0x00, 0x96, // ................
	0x02, 0x00, 0x00, 0x90, 0x02, 0x00, 0x00, 0x12, 0x05, 0x00, 0x00, 0xa3, 0x02, 0x00, 0x00, 0xf9, // ................
	0x00, 0x02, 0x00, 0xa5, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xa5, 0x02, 0x00, 0x00, 0xf5, // ................
	0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x10, 0x05, 0x00, 0x00, 0x8b, 0x02, 0x00, 0x00, 0x86, // ................
	0x02, 0x00, 0x00, 0x11, 0x05, 0x00, 0x00, 0xa4, 0x02, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0xdb, // ...........>....
	0x01, 0x00, 0x00, 0x10, 0x05, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00, 0x00, // ...........8....
	0x00, 0x80, 0x00,                                                                               // ...
};
static const bgfx::EmbeddedShader fs_display_alphaseg_noclip = BGFX_EMBEDDED_SHADER(fs_display_alphaseg_noclip);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of fragment shader from fs_dmd.sc to fs_sprite_tex_noclip with options: SPRITE TEX NOCLIP
static const uint8_t fs_sprite_tex_noclip_mtl[948] =
{
	0x46, 0x53, 0x48, 0x0b, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x11, 0x74, // FSH............t
	0x65, 0x78, 0x5f, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ex_spriteSampler
	0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x74, 0x65, 0x78, 0x5f, 0x73, // ...........tex_s
	0x70, 0x72, 0x69, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, // priteTexture....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x54, 0x65, 0x73, 0x74, // .......alphaTest
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x01, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, // Value...........
	0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, // vColor_Intensity
	0x12, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x74, 0x65, 0x78, 0x5f, 0x73, // ...........tex_s
	0x70, 0x72, 0x69, 0x74, 0x65, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1d, // prite...........
	0x03, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, // ...#include <met
	0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, // al_stdlib>.#incl
	0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, // ude <simd/simd.h
	0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, // >..using namespa
	0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, // ce metal;..struc
	0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // t _Global.{.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, // float4 vColor_In
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // tensity;.    flo
	0x61, 0x74, 0x34, 0x20, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x54, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, // at4 alphaTestVal
	0x75, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, // ue;.};..struct x
	0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, // latMtlMain_out.{
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, // .    float4 bgfx
	0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, // _FragData0 [[col
	0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, // or(0)]];.};..str
	0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, // uct xlatMtlMain_
	0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // in.{.    float2 
	0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, // v_texcoord0 [[us
	0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, // er(locn0)]];.};.
	0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, // .fragment xlatMt
	0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, // lMain_out xlatMt
	0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, // lMain(xlatMtlMai
	0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, // n_in in [[stage_
	0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, // in]], constant _
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, // Global& _mtl_u [
	0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, // [buffer(0)]], te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x74, // xture2d<float> t
	0x65, 0x78, 0x5f, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, // ex_sprite [[text
	0x75, 0x72, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ure(0)]], sample
	0x72, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x53, 0x61, 0x6d, 0x70, // r tex_spriteSamp
	0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, // ler [[sampler(0)
	0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, // ]]).{.    xlatMt
	0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, // lMain_out out = 
	0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, // {};.    float4 _
	0x31, 0x39, 0x31, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, // 191 = tex_sprite
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x73, 0x70, 0x72, 0x69, // .sample(tex_spri
	0x74, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, // teSampler, in.v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // texcoord0);.    
	0x69, 0x66, 0x20, 0x28, 0x5f, 0x31, 0x39, 0x31, 0x2e, 0x77, 0x20, 0x3c, 0x20, 0x5f, 0x6d, 0x74, // if (_191.w < _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x54, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, // l_u.alphaTestVal
	0x75, 0x65, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ue.x).    {.    
	0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x67, //     discard_frag
	0x6d, 0x65, 0x6e, 0x74, 0x28, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, // ment();.    }.  
	0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, //   out.bgfx_FragD
	0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x28, 0x5f, // ata0 = float4((_
	0x31, 0x39, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 191.xyz * _mtl_u
	0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, // .vColor_Intensit
	0x79, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // y.xyz) * _mtl_u.
	0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, // vColor_Intensity
	0x2e, 0x77, 0x2c, 0x20, 0x5f, 0x31, 0x39, 0x31, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // .w, _191.w);.   
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, //  return out;.}..
	0x00, 0x00, 0x40, 0x00,                                                                         // ..@.
};
static const uint8_t fs_sprite_tex_noclip_essl[6717] =
{
	0x46, 0x53, 0x48, 0x0b, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x1a, // FSH...........*.
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // s.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, // arying in.precis
	0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3b, // ion highp float;
	0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // .precision highp
	0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, //  int;.#define sh
	0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adow2D(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //  _coord) texture
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // (_sampler, _coor
	0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, // d).#define shado
	0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // w2DProj(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // eProj(_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x6f, 0x75, 0x74, 0x20, 0x6d, 0x65, 0x64, 0x69, // _coord).out medi
	0x75, 0x6d, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, // ump vec4 bgfx_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // agColor;.varying
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, //  vec2 v_texcoord
	0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, // 0;.varying vec2 
	0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x3b, 0x0a, 0x76, 0x65, 0x63, // v_texcoord1;.vec
	0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // 3 instMul(vec3 _
	0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, // vec, mat3 _mtx) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, // { return ( (_vec
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // ) * (_mtx) ); }.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, // vec3 instMul(mat
	0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, // 3 _mtx, vec3 _ve
	0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, // c) { return ( (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, // mtx) * (_vec) );
	0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, //  }.vec4 instMul(
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // vec4 _vec, mat4 
	0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, // _mtx) { return (
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, //  (_vec) * (_mtx)
	0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, //  ); }.vec4 instM
	0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, // ul(mat4 _mtx, ve
	0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // c4 _vec) { retur
	0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, // n ( (_mtx) * (_v
	0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, // ec) ); }.float r
	0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, // cp(float _a) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, // eturn 1.0/_a; }.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, // vec2 rcp(vec2 _a
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // ) { return vec2(
	0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // 1.0)/_a; }.vec3 
	0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, // rcp(vec3 _a) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, // eturn vec3(1.0)/
	0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, // _a; }.vec4 rcp(v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec4 _a) { return
	0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, //  vec4(1.0)/_a; }
	0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // .vec2 vec2_splat
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // (float _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, // urn vec2(_x, _x)
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, // ; }.vec3 vec3_sp
	0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // lat(float _x) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, // return vec3(_x, 
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // _x, _x); }.vec4 
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // vec4_splat(float
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, //  _x) { return ve
	0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // c4(_x, _x, _x, _
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, // x); }.uvec2 uvec
	0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, // 2_splat(uint _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, //  { return uvec2(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, // _x, _x); }.uvec3
	0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, //  uvec3_splat(uin
	0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, // t _x) { return u
	0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, // vec3(_x, _x, _x)
	0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, // ; }.uvec4 uvec4_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // splat(uint _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, //  return uvec4(_x
	0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // , _x, _x, _x); }
	0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, // .mat4 mtxFromRow
	0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // s(vec4 _0, vec4 
	0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, // _1, vec4 _2, vec
	0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, // 4 _3).{.return t
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, // ranspose(mat4(_0
	0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, // , _1, _2, _3) );
	0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, // .}.mat4 mtxFromC
	0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, // ols(vec4 _0, vec
	0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, // 4 _1, vec4 _2, v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec4 _3).{.return
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, //  mat4(_0, _1, _2
	0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, // , _3);.}.mat3 mt
	0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // xFromRows(vec3 _
	0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // 0, vec3 _1, vec3
	0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, //  _2).{.return tr
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, // anspose(mat3(_0,
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, //  _1, _2) );.}.ma
	0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, // t3 mtxFromCols(v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, // ec3 _0, vec3 _1,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  vec3 _2).{.retu
	0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, // rn mat3(_0, _1, 
	0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // _2);.}.uniform v
	0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, // ec4 u_viewRect;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, // uniform vec4 u_v
	0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // iewTexel;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, // m mat4 u_view;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, // niform mat4 u_in
	0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // vView;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // at4 u_proj;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, // orm mat4 u_invPr
	0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // oj;.uniform mat4
	0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, //  u_viewProj;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, // form mat4 u_invV
	0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // iewProj;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, //  mat4 u_model[32
	0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // ];.uniform mat4 
	0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // u_modelView;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, // form mat4 u_mode
	0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // lViewProj;.unifo
	0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, // rm vec4 u_alphaR
	0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, // ef4;.float sqr( 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // float v).{.retur
	0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, // n v*v;.}.vec2 sq
	0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // r( vec2 v).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // urn v*v;.}.vec3 
	0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // sqr( vec3 v).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // eturn v*v;.}.vec
	0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // 3 mul_w1( vec3 v
	0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // , mat4 m).{.retu
	0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // rn v.x*m[0].xyz 
	0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // + (v.y*m[1].xyz 
	0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // + (v.z*m[2].xyz 
	0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // + m[3].xyz));.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, // float acos_appro
	0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, // x_divPI( float v
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, // ).{.float x = ab
	0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, // s(v);.if(1. - x 
	0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, // <= 0.00006103515
	0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, // 625).return (v >
	0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, // = 0.) ? 0. : 1.;
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, // .float res = ((-
	0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // 0.155972/3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, // 6433832795) * x 
	0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, // + (1.56467/3.141
	0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, // 5926535897932384
	0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, // 626433832795) ) 
	0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, // * sqrt(1. - x);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, // return (v >= 0.)
	0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, //  ? res : 1. - re
	0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, // s;.}.float atan2
	0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x20, // _approx_div2PI( 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, // float y, float x
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, // ).{.float abs_y 
	0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // = abs(y);.float 
	0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, // abs_x = abs(x);.
	0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, // if(abs_x <= 0.00
	0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, // 006103515625 && 
	0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, // abs_y <= 0.00006
	0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // 103515625).retur
	0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, // n 0.;.float r = 
	0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, // (abs_x - abs_y) 
	0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, // / (abs_x + abs_y
	0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, // );.float angle =
	0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, //  ((x < 0.) ? (3.
	0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, // /8.) : (1./8.)).
	0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, // + (0.211868 /(2.
	0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, // *3.1415926535897
	0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, // 9323846264338327
	0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, // 95) * r * r - 0.
	0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, // 987305 /(2.*3.14
	0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, // 1592653589793238
	0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x29, 0x20, // 4626433832795)) 
	0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, // * ((x < 0.) ? -r
	0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, //  : r);.return (y
	0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, //  < 0.) ? -angle 
	0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // : angle;.}.float
	0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, //  asin_approx_div
	0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, // PI( float v).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, // loat x = abs(v);
	0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, // .if(1. - x <= 0.
	0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, // 00006103515625).
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, // return (v >= 0.)
	0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x66, //  ? 0.5 : -0.5;.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, // loat res = ((-0.
	0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, // 155972/3.1415926
	0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, // 5358979323846264
	0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, // 33832795) * x + 
	0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // (1.56467/3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, // 6433832795) ) * 
	0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, // sqrt(1. - x);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // turn (v >= 0.) ?
	0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, //  0.5 - res : -0.
	0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // 5 + res;.}.vec2 
	0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, // ray_to_equirecta
	0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // ngular_uv( vec3 
	0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, // ray).{.return ve
	0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, // c2(.0.5 + atan2_
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, // approx_div2PI(ra
	0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, // y.y, ray.x),.aco
	0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, // s_approx_divPI(r
	0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ay.z));.}.float 
	0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, // InvsRGB( float c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // olor).{.if (colo
	0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, // r <= 0.04045).re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // turn color * (1.
	0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, // 0/12.92);.else.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // eturn pow(color 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, // * (1.0/1.055) + 
	0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, // (0.055/1.055), 2
	0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, // .4);.}.float Inv
	0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, // Rec709( float co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // lor).{.if (color
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  <= 0.081).retur
	0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, // n color * (1.0/4
	0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // .5);.else.return
	0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, //  pow(color * (1.
	0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, // 0/1.099) + (0.09
	0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, // 9/1.099), 1.0/0.
	0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, // 45);.}.float Inv
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, // Gamma( float col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, // or).{.return Inv
	0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // sRGB(color);.}.v
	0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, // ec3 InvGamma( ve
	0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // c3 color).{.retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, // rn vec3(InvGamma
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // (color.x),InvGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, // ma(color.y),InvG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, // amma(color.z));.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, // }.vec3 InvToneMa
	0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, // p( vec3 color).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, // .float inv_2bh =
	0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  0.5/0.25;.float
	0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, //  bh = 4.0*0.25 -
	0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, //  2.0;.return (co
	0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, // lor - 1.0 + sqrt
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, // (color*(color + 
	0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, // bh) + 1.0))*inv_
	0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, // 2bh;.}.float sRG
	0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, // B( float f).{.fl
	0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, // oat s;.if (f <= 
	0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, // 0.0031308).s = 1
	0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, // 2.92 * f;.else.s
	0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, //  = 1.055 * pow(f
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, // , 1.0/2.4) - 0.0
	0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, // 55;.return s;.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, // float Rec709( fl
	0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // oat f).{.float s
	0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, // ;.if (f <= 0.018
	0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, // ).s = 4.5 * f;.e
	0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, // lse.s = 1.099 * 
	0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, // pow(f, 0.45) - 0
	0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, // .099;.return s;.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, // }.float FBGamma(
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, //  float color).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // return sRGB(colo
	0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, // r);.}.vec2 FBGam
	0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // ma( vec2 color).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x46, 0x42, // {.return vec2(FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, // Gamma(color.x),F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, // BGamma(color.y))
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, // ;.}.vec3 FBGamma
	0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // ( vec3 color).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, // return vec3(FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, // mma(color.x),FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, // amma(color.y),FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, // Gamma(color.z));
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x32, // .}.vec3 FBGamma2
	0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, // 2( vec3 color).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x70, 0x6f, 0x77, // .return vec3(pow
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, // (color.x, 1.0/2.
	0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x2c, 0x20, // 2),pow(color.y, 
	0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, // 1.0/2.2),pow(col
	0x6f, 0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x29, 0x3b, // or.z, 1.0/2.2));
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, // .}.float FBToneM
	0x61, 0x70, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // ap( float l).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, // eturn l * ((l*0.
	0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, // 25 + 1.0) / (l +
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, //  1.0));.}.vec2 F
	0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, // BToneMap( vec2 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, // olor).{.float l 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, // = dot(color,vec2
	0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, // (0.176204+0.0108
	0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, // 109*0.5,0.812985
	0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, // +0.0108109*0.5))
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // ;.return color *
	0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, //  ((l*0.25 + 1.0)
	0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, //  / (l + 1.0));.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, // .vec3 FBToneMap(
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, //  vec3 color).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, // loat l = dot(col
	0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, // or,vec3(0.176204
	0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, // ,0.812985,0.0108
	0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, // 109));.return co
	0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, // lor * ((l*0.25 +
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, //  1.0) / (l + 1.0
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, 0x64, 0x69, 0x74, // ));.}.vec4 Addit
	0x69, 0x76, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // ive( vec4 cBase,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, //  vec4 cBlend, fl
	0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // oat percent).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, // eturn cBase + cB
	0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, // lend*percent;.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, // vec3 Screen ( ve
	0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // c3 cBase, vec3 c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // Blend).{.return 
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, // 1.0 - (1.0 - cBa
	0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, // se) * (1.0 - cBl
	0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, // end);.}.vec4 Scr
	0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // een ( vec4 cBase
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, // , vec4 cBlend).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, // .return 1.0 - (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, // .0 - cBase) * (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // .0 - cBlend);.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, // vec3 ScreenHDR (
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, //  vec3 cBase, vec
	0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 3 cBlend).{.retu
	0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, // rn max(1.0 - (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // 0 - cBase) * (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, // 0 - cBlend), vec
	0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // 3(0.,0.,0.));.}.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, // vec4 ScreenHDR (
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, //  vec4 cBase, vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 4 cBlend).{.retu
	0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, // rn max(1.0 - (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // 0 - cBase) * (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, // 0 - cBlend), vec
	0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, // 4(0.,0.,0.,0.));
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, // .}.vec4 Multiply
	0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, //  ( vec4 cBase, v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ec4 cBlend, floa
	0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // t percent).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, // urn cBase * cBle
	0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // nd*percent;.}.ve
	0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, // c4 Overlay ( vec
	0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // 4 cBase, vec4 cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, // lend).{.vec4 cNe
	0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, // w = step(0.5, cB
	0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, // ase);.cNew = mix
	0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, // (cBase*cBlend*2.
	0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, // 0, 1.0-2.0*(1.0-
	0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, // cBase)*(1.0-cBle
	0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // nd), cNew);.retu
	0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // rn cNew;.}.vec4 
	0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, // OverlayHDR ( vec
	0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // 4 cBase, vec4 cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, // lend).{.vec4 cNe
	0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, // w = step(0.5, cB
	0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, // ase);.cNew = max
	0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, // (mix(cBase*cBlen
	0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, // d*2.0, 1.0-2.0*(
	0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, // 1.0-cBase)*(1.0-
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, // cBlend), cNew), 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, // vec4(0.,0.,0.,0.
	0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, // ));.return cNew;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, // .}.vec3 cos_hemi
	0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x20, 0x76, // sphere_sample( v
	0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, // ec2 t).{.float p
	0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, // hi = t.y * (2.0*
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, // 5);.float cosThe
	0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // ta = sqrt(1.0 - 
	0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, // t.x);.float sinT
	0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, // heta = sqrt(t.x)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x7b, // ;.float sp,cp;.{
	0x73, 0x70, 0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x63, 0x70, 0x3d, 0x63, // sp=sin(phi);cp=c
	0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // os(phi);};.retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, // n vec3(cp * sinT
	0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, // heta, cosTheta, 
	0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, // sp * sinTheta);.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, // }.vec3 rotate_to
	0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x28, 0x20, 0x76, // _vector_upper( v
	0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, // ec3 vec, vec3 no
	0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // rmal).{.if(norma
	0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, // l.y > -0.99999).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, // {.float h = 1.0/
	0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, // (1.0+normal.y);.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, // float hz = h*nor
	0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, // mal.z;.float hzx
	0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, //  = hz*normal.x;.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, // return vec3(.vec
	0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, // .x * (normal.y+h
	0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, // z*normal.z) + ve
	0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, // c.y * normal.x -
	0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, //  vec.z * hzx,.ve
	0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, // c.y * normal.y -
	0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, //  vec.x * normal.
	0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // x - vec.z * norm
	0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, // al.z,.vec.y * no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, // rmal.z - vec.x *
	0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, //  hzx + vec.z * (
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // normal.y+h*norma
	0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, // l.x*normal.x));.
	0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, // }.else return -v
	0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // ec;.}.uniform ve
	0x63, 0x34, 0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, // c4 vColor_Intens
	0x69, 0x74, 0x79, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, // ity;.uniform vec
	0x34, 0x20, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, // 4 vRes_Alpha_tim
	0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // e;.uniform vec4 
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x54, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x3b, 0x0a, // alphaTestValue;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, // uniform sampler2
	0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x3b, 0x0a, 0x76, 0x65, // D tex_sprite;.ve
	0x63, 0x32, 0x20, 0x68, 0x61, 0x73, 0x68, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, // c2 hash22( vec2 
	0x75, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x33, 0x20, 0x3d, 0x20, // uv).{.vec3 p3 = 
	0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x75, 0x76, 0x2e, 0x78, 0x79, 0x78, 0x20, 0x2a, 0x20, 0x76, // fract(uv.xyx * v
	0x65, 0x63, 0x33, 0x28, 0x2e, 0x31, 0x30, 0x33, 0x31, 0x2c, 0x20, 0x2e, 0x31, 0x30, 0x33, 0x30, // ec3(.1031, .1030
	0x2c, 0x20, 0x2e, 0x30, 0x39, 0x37, 0x33, 0x29, 0x29, 0x3b, 0x0a, 0x70, 0x33, 0x20, 0x2b, 0x3d, // , .0973));.p3 +=
	0x20, 0x64, 0x6f, 0x74, 0x28, 0x70, 0x33, 0x2c, 0x20, 0x70, 0x33, 0x2e, 0x79, 0x7a, 0x78, 0x20, //  dot(p3, p3.yzx 
	0x2b, 0x20, 0x33, 0x33, 0x2e, 0x33, 0x33, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // + 33.33);.return
	0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x28, 0x70, 0x33, 0x2e, 0x78, 0x78, 0x20, 0x2b, 0x20, //  fract((p3.xx + 
	0x70, 0x33, 0x2e, 0x79, 0x7a, 0x29, 0x2a, 0x70, 0x33, 0x2e, 0x7a, 0x79, 0x29, 0x3b, 0x0a, 0x7d, // p3.yz)*p3.zy);.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, // .float triangula
	0x72, 0x50, 0x44, 0x46, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x29, 0x0a, 0x7b, // rPDF( float r).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x2a, 0x72, 0x3b, // .float p = 2.*r;
	0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x62, 0x20, 0x3d, 0x20, 0x28, 0x70, 0x20, 0x3e, 0x20, 0x31, // .bool b = (p > 1
	0x2e, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x62, 0x29, 0x0a, 0x70, 0x20, 0x3d, 0x20, 0x32, // .);.if (b).p = 2
	0x2e, 0x2d, 0x70, 0x3b, 0x0a, 0x70, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x2d, 0x73, 0x71, 0x72, 0x74, // .-p;.p = 1.-sqrt
	0x28, 0x70, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x62, 0x20, 0x3f, 0x20, // (p);.return b ? 
	0x70, 0x20, 0x3a, 0x20, 0x2d, 0x70, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, // p : -p;.}.void m
	0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x6c, 0x20, 0x3d, // ain().{.vec4 l =
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x73, 0x70, 0x72, //  texture(tex_spr
	0x69, 0x74, 0x65, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, // ite, v_texcoord0
	0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x6c, 0x2e, 0x61, 0x20, 0x3c, 0x20, 0x61, 0x6c, 0x70, // );.if (l.a < alp
	0x68, 0x61, 0x54, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x78, 0x29, 0x0a, 0x64, // haTestValue.x).d
	0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x3b, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, // iscard;.bgfx_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x20, 0x28, // gColor = vec4( (
	0x6c, 0x2e, 0x72, 0x67, 0x62, 0x20, 0x2a, 0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, // l.rgb * vColor_I
	0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x67, 0x62, 0x20, 0x2a, 0x20, 0x76, // ntensity.rgb * v
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, // Color_Intensity.
	0x61, 0x29, 0x2c, 0x20, 0x6c, 0x2e, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,                   // a), l.a);.}..
};
static const uint8_t fs_sprite_tex_noclip_glsl[7087] =
{
	0x46, 0x53, 0x48, 0x0b, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0x1b, // FSH.............
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x6f, // ..#version 440.o
	0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, // ut vec4 bgfx_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // gColor;.#define 
	0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x62, 0x67, 0x66, // gl_FragColor bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x0a, 0x23, 0x64, 0x65, 0x66, // x_FragColor.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x20, 0x20, // ine texture2D   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, //        texture.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // Lod       textur
	0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, // eLod.#define tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ture2DGrad      
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, // textureGrad.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, // ine texture2DPro
	0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, // jLod   texturePr
	0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // ojLod.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, // xture2DProjGrad 
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, //  textureProjGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // CubeLod     text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, // ureLod.#define t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, // extureCubeGrad  
	0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, //   textureGrad.#d
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, // efine texture3D 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //          texture
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, 0x65, 0x78, 0x74, // 2DLodOffset text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, // ureLodOffset.#de
	0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, // fine attribute i
	0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // n.#define varyin
	0x67, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, // g in.#define bgf
	0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // xShadow2D(_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, // er, _coord)     
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // vec4_splat(textu
	0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // re(_sampler, _co
	0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, // ord) ).#define b
	0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, // gfxShadow2DProj(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, // ) vec4_splat(tex
	0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // tureProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x76, 0x61, 0x72, // r, _coord) ).var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // ying vec2 v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, // oord0;.varying v
	0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x3b, // ec2 v_texcoord1;
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, // .vec3 instMul(ve
	0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, // c3 _vec, mat3 _m
	0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, // tx) { return ( (
	0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, // _vec) * (_mtx) )
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, // ; }.vec3 instMul
	0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // (mat3 _mtx, vec3
	0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _vec) { return 
	0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, // ( (_mtx) * (_vec
	0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, // ) ); }.vec4 inst
	0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, // Mul(vec4 _vec, m
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // at4 _mtx) { retu
	0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, // rn ( (_vec) * (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, // mtx) ); }.vec4 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, // nstMul(mat4 _mtx
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, // , vec4 _vec) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, // eturn ( (_mtx) *
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, //  (_vec) ); }.flo
	0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, // at rcp(float _a)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, //  { return 1.0/_a
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, // ; }.vec2 rcp(vec
	0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // 2 _a) { return v
	0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // ec2(1.0)/_a; }.v
	0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, // ec3 rcp(vec3 _a)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, //  { return vec3(1
	0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, // .0)/_a; }.vec4 r
	0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // cp(vec4 _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, // turn vec4(1.0)/_
	0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, // a; }.vec2 vec2_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // plat(float _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, //  return vec2(_x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, //  _x); }.vec3 vec
	0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, // 3_splat(float _x
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // ) { return vec3(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // _x, _x, _x); }.v
	0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, // ec4 vec4_splat(f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // loat _x) { retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // n vec4(_x, _x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, // x, _x); }.uvec2 
	0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec2_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, //  _x) { return uv
	0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, // ec2(_x, _x); }.u
	0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // vec3 uvec3_splat
	0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // (uint _x) { retu
	0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // rn uvec3(_x, _x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, //  _x); }.uvec4 uv
	0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, // ec4_splat(uint _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, // x) { return uvec
	0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // 4(_x, _x, _x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, // ); }.mat4 mtxFro
	0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, // mRows(vec4 _0, v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, // ec4 _1, vec4 _2,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  vec4 _3).{.retu
	0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, // rn transpose(mat
	0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, // 4(_0, _1, _2, _3
	0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, // ) );.}.mat4 mtxF
	0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, // romCols(vec4 _0,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, //  vec4 _1, vec4 _
	0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 2, vec4 _3).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, // turn mat4(_0, _1
	0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, // , _2, _3);.}.mat
	0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, // 3 mtxFromRows(ve
	0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, // c3 _0, vec3 _1, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // vec3 _2).{.retur
	0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, // n transpose(mat3
	0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, // (_0, _1, _2) );.
	0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, // }.mat3 mtxFromCo
	0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // ls(vec3 _0, vec3
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, //  _1, vec3 _2).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, // return mat3(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // _1, _2);.}.unifo
	0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, // rm vec4 u_viewRe
	0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // ct;.uniform vec4
	0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, //  u_viewTexel;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // iform mat4 u_vie
	0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // w;.uniform mat4 
	0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // u_invView;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, // rm mat4 u_proj;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, // uniform mat4 u_i
	0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // nvProj;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, // mat4 u_viewProj;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // invViewProj;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, // form mat4 u_mode
	0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // l[32];.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, // at4 u_modelView;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, // modelViewProj;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, // niform vec4 u_al
	0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // phaRef4;.float s
	0x71, 0x72, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // qr( float v).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // eturn v*v;.}.vec
	0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, // 2 sqr( vec2 v).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // .return v*v;.}.v
	0x65, 0x63, 0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, // ec3 sqr( vec3 v)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, // .{.return v*v;.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x20, 0x76, 0x65, // .vec3 mul_w1( ve
	0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, // c3 v, mat4 m).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, // return v.x*m[0].
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, // xyz + (v.y*m[1].
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, // xyz + (v.z*m[2].
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, // xyz + m[3].xyz))
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, // ;.}.float acos_a
	0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, // pprox_divPI( flo
	0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, // at v).{.float x 
	0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, // = abs(v);.if(1. 
	0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, // - x <= 0.0000610
	0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 3515625).return 
	0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, // (v >= 0.) ? 0. :
	0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, //  1.;.float res =
	0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, //  ((-0.155972/3.1
	0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, // 4159265358979323
	0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, // 84626433832795) 
	0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, // * x + (1.56467/3
	0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, // .141592653589793
	0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, // 2384626433832795
	0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, // ) ) * sqrt(1. - 
	0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, // x);.return (v >=
	0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, //  0.) ? res : 1. 
	0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, // - res;.}.float a
	0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, // tan2_approx_div2
	0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // PI( float y, flo
	0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, // at x).{.float ab
	0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, // s_y = abs(y);.fl
	0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, // oat abs_x = abs(
	0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, // x);.if(abs_x <= 
	0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, // 0.00006103515625
	0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, //  && abs_y <= 0.0
	0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, // 0006103515625).r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // eturn 0.;.float 
	0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, // r = (abs_x - abs
	0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, // _y) / (abs_x + a
	0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, // bs_y);.float ang
	0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // le = ((x < 0.) ?
	0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, //  (3./8.) : (1./8
	0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, // .)).+ (0.211868 
	0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, // /(2.*3.141592653
	0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, // 5897932384626433
	0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, // 832795) * r * r 
	0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, // - 0.987305 /(2.*
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, // 5)) * ((x < 0.) 
	0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // ? -r : r);.retur
	0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, // n (y < 0.) ? -an
	0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // gle : angle;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, // loat asin_approx
	0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, // _divPI( float v)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, // .{.float x = abs
	0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, // (v);.if(1. - x <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, // = 0.000061035156
	0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, // 25).return (v >=
	0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, //  0.) ? 0.5 : -0.
	0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, // 5;.float res = (
	0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, // (-0.155972/3.141
	0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, // 5926535897932384
	0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, // 626433832795) * 
	0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, // x + (1.56467/3.1
	0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, // 4159265358979323
	0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, // 84626433832795) 
	0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, // ) * sqrt(1. - x)
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, // ;.return (v >= 0
	0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, // .) ? 0.5 - res :
	0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, //  -0.5 + res;.}.v
	0x65, 0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, // ec2 ray_to_equir
	0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x20, 0x76, // ectangular_uv( v
	0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // ec3 ray).{.retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, // n vec2(.0.5 + at
	0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, // an2_approx_div2P
	0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, // I(ray.y, ray.x),
	0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, // .acos_approx_div
	0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // PI(ray.z));.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, // oat InvsRGB( flo
	0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, // at color).{.if (
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, // color <= 0.04045
	0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // ).return color *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, //  (1.0/12.92);.el
	0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, // se.return pow(co
	0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, // lor * (1.0/1.055
	0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, // ) + (0.055/1.055
	0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ), 2.4);.}.float
	0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, //  InvRec709( floa
	0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, // t color).{.if (c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, // olor <= 0.081).r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, // eturn color * (1
	0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, // .0/4.5);.else.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // turn pow(color *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, //  (1.0/1.099) + (
	0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, // 0.099/1.099), 1.
	0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0/0.45);.}.float
	0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  InvGamma( float
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  color).{.return
	0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, //  InvsRGB(color);
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, // .}.vec3 InvGamma
	0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // ( vec3 color).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, // return vec3(InvG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, // amma(color.x),In
	0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, // vGamma(color.y),
	0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, // InvGamma(color.z
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, // ));.}.vec3 InvTo
	0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // neMap( vec3 colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, // r).{.float inv_2
	0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x66, // bh = 0.5/0.25;.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, // loat bh = 4.0*0.
	0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 25 - 2.0;.return
	0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, //  (color - 1.0 + 
	0x73, 0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // sqrt(color*(colo
	0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, // r + bh) + 1.0))*
	0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // inv_2bh;.}.float
	0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, //  sRGB( float f).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, // {.float s;.if (f
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, //  <= 0.0031308).s
	0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, //  = 12.92 * f;.el
	0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, // se.s = 1.055 * p
	0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, // ow(f, 1.0/2.4) -
	0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, //  0.055;.return s
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, // ;.}.float Rec709
	0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // ( float f).{.flo
	0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, // at s;.if (f <= 0
	0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, // .018).s = 4.5 * 
	0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, // f;.else.s = 1.09
	0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, // 9 * pow(f, 0.45)
	0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  - 0.099;.return
	0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, //  s;.}.float FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // mma( float color
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, // ).{.return sRGB(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, // color);.}.vec2 F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, // BGamma( vec2 col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // or).{.return vec
	0x32, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // 2(FBGamma(color.
	0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // x),FBGamma(color
	0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, // .y));.}.vec3 FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // amma( vec3 color
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // ).{.return vec3(
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, // FBGamma(color.x)
	0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, // ,FBGamma(color.y
	0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // ),FBGamma(color.
	0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, // z));.}.vec3 FBGa
	0x6d, 0x6d, 0x61, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // mma22( vec3 colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, // r).{.return vec3
	0x28, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, // (pow(color.x, 1.
	0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // 0/2.2),pow(color
	0x2e, 0x79, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, // .y, 1.0/2.2),pow
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, // (color.z, 1.0/2.
	0x32, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, // 2));.}.float FBT
	0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, // oneMap( float l)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, // .{.return l * ((
	0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, // l*0.25 + 1.0) / 
	0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // (l + 1.0));.}.ve
	0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, // c2 FBToneMap( ve
	0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // c2 color).{.floa
	0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, // t l = dot(color,
	0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, // vec2(0.176204+0.
	0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, // 0108109*0.5,0.81
	0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, // 2985+0.0108109*0
	0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, // .5));.return col
	0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, // or * ((l*0.25 + 
	0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // 1.0) / (l + 1.0)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, // );.}.vec3 FBTone
	0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // Map( vec3 color)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // .{.float l = dot
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, // (color,vec3(0.17
	0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, // 6204,0.812985,0.
	0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // 0108109));.retur
	0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, // n color * ((l*0.
	0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, // 25 + 1.0) / (l +
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, //  1.0));.}.vec4 A
	0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // dditive( vec4 cB
	0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // ase, vec4 cBlend
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, // , float percent)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, // .{.return cBase 
	0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, // + cBlend*percent
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, // ;.}.vec3 Screen 
	0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, // ( vec3 cBase, ve
	0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // c3 cBlend).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // urn 1.0 - (1.0 -
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, //  cBase) * (1.0 -
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, //  cBlend);.}.vec4
	0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, //  Screen ( vec4 c
	0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // Base, vec4 cBlen
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, // d).{.return 1.0 
	0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, // - (1.0 - cBase) 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // * (1.0 - cBlend)
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, // ;.}.vec3 ScreenH
	0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // DR ( vec3 cBase,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, //  vec3 cBlend).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // return max(1.0 -
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, //  (1.0 - cBase) *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, //  (1.0 - cBlend),
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, //  vec3(0.,0.,0.))
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, // ;.}.vec4 ScreenH
	0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // DR ( vec4 cBase,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, //  vec4 cBlend).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // return max(1.0 -
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, //  (1.0 - cBase) *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, //  (1.0 - cBlend),
	0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, //  vec4(0.,0.,0.,0
	0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, // .));.}.vec4 Mult
	0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, // iply ( vec4 cBas
	0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, // e, vec4 cBlend, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, // float percent).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, // .return cBase * 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, // cBlend*percent;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, // }.vec4 Overlay (
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, //  vec4 cBase, vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, // 4 cBlend).{.vec4
	0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, //  cNew = step(0.5
	0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, // , cBase);.cNew =
	0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, //  mix(cBase*cBlen
	0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, // d*2.0, 1.0-2.0*(
	0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, // 1.0-cBase)*(1.0-
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, // cBlend), cNew);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // return cNew;.}.v
	0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, // ec4 OverlayHDR (
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, //  vec4 cBase, vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, // 4 cBlend).{.vec4
	0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, //  cNew = step(0.5
	0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, // , cBase);.cNew =
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, //  max(mix(cBase*c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, // Blend*2.0, 1.0-2
	0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, // .0*(1.0-cBase)*(
	0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, // 1.0-cBlend), cNe
	0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, // w), vec4(0.,0.,0
	0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, // .,0.));.return c
	0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, // New;.}.vec3 cos_
	0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // hemisphere_sampl
	0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // e( vec2 t).{.flo
	0x61, 0x74, 0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, // at phi = t.y * (
	0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, // 2.0*3.1415926535
	0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, // 8979323846264338
	0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, // 32795);.float co
	0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, // sTheta = sqrt(1.
	0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 0 - t.x);.float 
	0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // sinTheta = sqrt(
	0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, // t.x);.float sp,c
	0x70, 0x3b, 0x0a, 0x7b, 0x73, 0x70, 0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, // p;.{sp=sin(phi);
	0x63, 0x70, 0x3d, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, 0x3b, 0x0a, 0x72, // cp=cos(phi);};.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, // eturn vec3(cp * 
	0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, // sinTheta, cosThe
	0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, // ta, sp * sinThet
	0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, // a);.}.vec3 rotat
	0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, // e_to_vector_uppe
	0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x76, 0x65, 0x63, // r( vec3 vec, vec
	0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, // 3 normal).{.if(n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, // ormal.y > -0.999
	0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, // 99).{.float h = 
	0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // 1.0/(1.0+normal.
	0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, // y);.float hz = h
	0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // *normal.z;.float
	0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, //  hzx = hz*normal
	0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // .x;.return vec3(
	0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // .vec.x * (normal
	0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, // .y+hz*normal.z) 
	0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // + vec.y * normal
	0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, // .x - vec.z * hzx
	0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // ,.vec.y * normal
	0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, // .y - vec.x * nor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, // mal.x - vec.z * 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, // normal.z,.vec.y 
	0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, // * normal.z - vec
	0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, // .x * hzx + vec.z
	0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, //  * (normal.y+h*n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // ormal.x*normal.x
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // ));.}.else retur
	0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // n -vec;.}.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, // m vec4 vColor_In
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // tensity;.uniform
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, //  vec4 vRes_Alpha
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // _time;.uniform v
	0x65, 0x63, 0x34, 0x20, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x54, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, // ec4 alphaTestVal
	0x75, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, // ue;.uniform samp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, // ler2D tex_sprite
	0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x68, 0x61, 0x73, 0x68, 0x32, 0x32, 0x28, 0x20, 0x76, // ;.vec2 hash22( v
	0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, // ec2 uv).{.vec3 p
	0x33, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x75, 0x76, 0x2e, 0x78, 0x79, 0x78, // 3 = fract(uv.xyx
	0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x2e, 0x31, 0x30, 0x33, 0x31, 0x2c, 0x20, 0x2e, //  * vec3(.1031, .
	0x31, 0x30, 0x33, 0x30, 0x2c, 0x20, 0x2e, 0x30, 0x39, 0x37, 0x33, 0x29, 0x29, 0x3b, 0x0a, 0x70, // 1030, .0973));.p
	0x33, 0x20, 0x2b, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x70, 0x33, 0x2c, 0x20, 0x70, 0x33, 0x2e, // 3 += dot(p3, p3.
	0x79, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x33, 0x33, 0x2e, 0x33, 0x33, 0x29, 0x3b, 0x0a, 0x72, 0x65, // yzx + 33.33);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x28, 0x70, 0x33, 0x2e, 0x78, // turn fract((p3.x
	0x78, 0x20, 0x2b, 0x20, 0x70, 0x33, 0x2e, 0x79, 0x7a, 0x29, 0x2a, 0x70, 0x33, 0x2e, 0x7a, 0x79, // x + p3.yz)*p3.zy
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x72, 0x69, 0x61, 0x6e, // );.}.float trian
	0x67, 0x75, 0x6c, 0x61, 0x72, 0x50, 0x44, 0x46, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // gularPDF( float 
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x20, 0x3d, 0x20, 0x32, // r).{.float p = 2
	0x2e, 0x2a, 0x72, 0x3b, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x62, 0x20, 0x3d, 0x20, 0x28, 0x70, // .*r;.bool b = (p
	0x20, 0x3e, 0x20, 0x31, 0x2e, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x62, 0x29, 0x0a, 0x70, //  > 1.);.if (b).p
	0x20, 0x3d, 0x20, 0x32, 0x2e, 0x2d, 0x70, 0x3b, 0x0a, 0x70, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x2d, //  = 2.-p;.p = 1.-
	0x73, 0x71, 0x72, 0x74, 0x28, 0x70, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // sqrt(p);.return 
	0x62, 0x20, 0x3f, 0x20, 0x70, 0x20, 0x3a, 0x20, 0x2d, 0x70, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, // b ? p : -p;.}.vo
	0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, // id main().{.vec4
	0x20, 0x6c, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x74, 0x65, 0x78, //  l = texture(tex
	0x5f, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // _sprite, v_texco
	0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x6c, 0x2e, 0x61, 0x20, 0x3c, // ord0);.if (l.a <
	0x20, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x54, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, //  alphaTestValue.
	0x78, 0x29, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x3b, 0x0a, 0x67, 0x6c, 0x5f, 0x46, // x).discard;.gl_F
	0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // ragColor = vec4(
	0x20, 0x28, 0x6c, 0x2e, 0x72, 0x67, 0x62, 0x20, 0x2a, 0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, //  (l.rgb * vColor
	0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x67, 0x62, 0x20, 0x2a, // _Intensity.rgb *
	0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, //  vColor_Intensit
	0x79, 0x2e, 0x61, 0x29, 0x2c, 0x20, 0x6c, 0x2e, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,       // y.a), l.a);.}..
};
static const uint8_t fs_sprite_tex_noclip_dx11[596] =
{
	0x46, 0x53, 0x48, 0x0b, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x10, 0x76, // FSH............v
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, // Color_Intensity.
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x54, // ..........alphaT
	0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // estValue........
	0x00, 0x00, 0x0a, 0x74, 0x65, 0x78, 0x5f, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x30, 0x01, 0x00, // ...tex_sprite0..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x74, 0x65, 0x78, 0x5f, 0x73, 0x70, 0x72, 0x69, // ........tex_spri
	0x74, 0x65, 0x30, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x01, 0x00, 0x00, // te0.............
	0x44, 0x58, 0x42, 0x43, 0x26, 0xdb, 0x87, 0xde, 0x2d, 0xbe, 0x71, 0x3c, 0xfb, 0x56, 0x55, 0xf2, // DXBC&...-.q<.VU.
	0xa7, 0xf4, 0x48, 0xfc, 0x01, 0x00, 0x00, 0x00, 0xe0, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ..H.............
	0x2c, 0x00, 0x00, 0x00, 0x9c, 0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x4e, // ,...........ISGN
	0x68, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, // h...........P...
	0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x0f, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x0c, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, // ....SV_POSITION.
	0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0xab, 0xab, 0xab, 0x4f, 0x53, 0x47, 0x4e, // TEXCOORD....OSGN
	0x2c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, // ,........... ...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x0f, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x00, 0xab, 0xab, // ....SV_TARGET...
	0x53, 0x48, 0x45, 0x58, 0x08, 0x01, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, // SHEX....P...B...
	0x6a, 0x08, 0x00, 0x01, 0x59, 0x00, 0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // j...Y...F. .....
	0x02, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....Z....`......
	0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, // X....p......UU..
	0x62, 0x10, 0x00, 0x03, 0x32, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, // b...2.......e...
	0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x00, // . ......h.......
	0x45, 0x00, 0x00, 0x8b, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0xf2, 0x00, 0x10, 0x00, // E.......CU......
	0x00, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, // ....F.......F~..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x08, // .....`......1...
	0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........:.......
	0x0a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x04, 0x03, // .. .............
	0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, // ........8...r...
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, // ....F.......F. .
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x20, 0x10, 0x00, // ........8...r ..
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0x8f, 0x20, 0x00, // ....F......... .
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x20, 0x10, 0x00, // ........6.... ..
	0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x01, // ....:.......>...
	0x00, 0x00, 0x20, 0x00,                                                                         // .. .
};
static const uint8_t fs_sprite_tex_noclip_spv[1603] =
{
	0x46, 0x53, 0x48, 0x0b, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x0e, 0x61, // FSH............a
	0x6c, 0x70, 0x68, 0x61, 0x54, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x01, 0x10, // lphaTestValue...
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, // ........vColor_I
	0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ntensity........
	0x00, 0x00, 0x0a, 0x74, 0x65, 0x78, 0x5f, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x30, 0x00, 0x02, // ...tex_sprite0..
	0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0xe4, 0x05, 0x00, 0x00, 0x03, 0x02, 0x23, 0x07, 0x00, // .....".......#..
	0x00, 0x01, 0x00, 0x0b, 0x00, 0x08, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, // ................
	0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, // ...............G
	0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30, 0x00, 0x00, 0x00, 0x00, 0x0e, // LSL.std.450.....
	0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x07, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x6d, // .......main....m
	0x00, 0x00, 0x00, 0x7d, 0x00, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x07, // ...}............
	0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, 0x05, // ................
	0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x05, // .......main.....
	0x00, 0x07, 0x00, 0x23, 0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x73, 0x70, 0x72, 0x69, 0x74, // ...#...tex_sprit
	0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00, 0x26, // eSampler.......&
	0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x54, 0x65, 0x78, // ...tex_spriteTex
	0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x55, // ture.......J...U
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x06, // niformBlock.....
	0x00, 0x08, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0x43, 0x6f, 0x6c, 0x6f, // ...J.......vColo
	0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x00, 0x00, 0x00, 0x00, 0x06, // r_Intensity.....
	0x00, 0x07, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x61, 0x6c, 0x70, 0x68, 0x61, // ...J.......alpha
	0x54, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x00, 0x00, 0x05, 0x00, 0x03, 0x00, 0x4c, // TestValue......L
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x76, // ...........m...v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x05, 0x00, 0x06, 0x00, 0x7d, // _texcoord0.....}
	0x00, 0x00, 0x00, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, // ...bgfx_FragData
	0x30, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x23, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // 0..G...#..."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x23, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x12, // ...G...#...!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x26, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G...&..."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x26, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x02, // ...G...&...!....
	0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, // ...H...J.......#
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x01, // .......H...J....
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00, 0x4a, // ...#.......G...J
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x22, // .......G...L..."
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x21, // .......G...L...!
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x1e, // .......G...m....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x7d, 0x00, 0x00, 0x00, 0x1e, // .......G...}....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x21, // ...............!
	0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x02, 0x00, 0x06, // ................
	0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x19, // ........... ....
	0x00, 0x09, 0x00, 0x08, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, // ... ..."........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x22, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, // ...;..."...#....
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x25, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, // ... ...%........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x25, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x00, // ...;...%...&....
	0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, 0x29, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, // .......)... ....
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x29, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x01, // ...+...)...*....
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x29, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x00, // ...+...)........
	0x00, 0x00, 0x00, 0x1b, 0x00, 0x03, 0x00, 0x32, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x15, // .......2........
	0x00, 0x04, 0x00, 0x46, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, // ...F... .......+
	0x00, 0x04, 0x00, 0x46, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x1e, // ...F...G........
	0x00, 0x04, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x20, // ...J........... 
	0x00, 0x04, 0x00, 0x4b, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x3b, // ...K.......J...;
	0x00, 0x04, 0x00, 0x4b, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, // ...K...L.......+
	0x00, 0x04, 0x00, 0x46, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, // ...F...M....... 
	0x00, 0x04, 0x00, 0x4e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x14, // ...N............
	0x00, 0x02, 0x00, 0x51, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x56, 0x00, 0x00, 0x00, 0x07, // ...Q.......V....
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x59, 0x00, 0x00, 0x00, 0x02, // ....... ...Y....
	0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x01, // ....... ...l....
	0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x6d, // .......;...l...m
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x03, // ....... ...|....
	0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x7d, // .......;...|...}
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, // .......6........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, // ................
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x23, // ...=.......$...#
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x26, // ...=.......'...&
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x6d, // ...=.......n...m
	0x00, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x32, 0x00, 0x00, 0x00, 0xbd, 0x00, 0x00, 0x00, 0x27, // ...V...2.......'
	0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xbf, // ...$...W........
	0x00, 0x00, 0x00, 0xbd, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // .......n...Q....
	0x00, 0x00, 0x00, 0x9d, 0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x41, // ...............A
	0x00, 0x06, 0x00, 0x4e, 0x00, 0x00, 0x00, 0x9e, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x2a, // ...N.......L...*
	0x00, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9f, // ...M...=........
	0x00, 0x00, 0x00, 0x9e, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x51, 0x00, 0x00, 0x00, 0xa0, // ...........Q....
	0x00, 0x00, 0x00, 0x9d, 0x00, 0x00, 0x00, 0x9f, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xa2, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xa0, 0x00, 0x00, 0x00, 0xa1, // ................
	0x00, 0x00, 0x00, 0xa2, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xa1, 0x00, 0x00, 0x00, 0xfc, // ................
	0x00, 0x01, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xa2, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x56, // ...........O...V
	0x00, 0x00, 0x00, 0xa4, 0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x59, // ...........A...Y
	0x00, 0x00, 0x00, 0xa5, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x3d, // .......L.......=
	0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x00, 0x00, 0xa5, 0x00, 0x00, 0x00, 0x4f, // ...............O
	0x00, 0x08, 0x00, 0x56, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x00, 0x00, 0xa6, // ...V............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x85, // ................
	0x00, 0x05, 0x00, 0x56, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0xa4, 0x00, 0x00, 0x00, 0xa7, // ...V............
	0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x4e, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x00, 0x00, 0x4c, // ...A...N.......L
	0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // .......G...=....
	0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x56, // ...............V
	0x00, 0x00, 0x00, 0xab, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xad, 0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, 0x00, 0x03, // ................
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0xab, // ...Q............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xaf, // .......Q........
	0x00, 0x00, 0x00, 0xab, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, 0xab, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, // ...............P
	0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0xaf, // ................
	0x00, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, 0xad, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x7d, // ...........>...}
	0x00, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00, 0x00, // ...........8....
	0x00, 0x20, 0x00,                                                                               // . .
};
static const bgfx::EmbeddedShader fs_sprite_tex_noclip = BGFX_EMBEDDED_SHADER(fs_sprite_tex_noclip);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of fragment shader from fs_dmd.sc to fs_sprite_notex_noclip with options: SPRITE NOTEX NOCLIP
static const uint8_t fs_sprite_notex_noclip_mtl[1881] =
{
	0x46, 0x53, 0x48, 0x0b, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x11, 0x74, // FSH............t
	0x65, 0x78, 0x5f, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ex_spriteSampler
	0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x74, 0x65, 0x78, 0x5f, 0x73, // ...........tex_s
	0x70, 0x72, 0x69, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, // priteTexture....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, // .......vColor_In
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // tensity.........
	0x00, 0xf0, 0x06, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, // .....#include <m
	0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, // etal_stdlib>.#in
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, // clude <simd/simd
	0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, // .h>..using names
	0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, // pace metal;..str
	0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, // uct _Global.{.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, //   float4 vColor_
	0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, // Intensity;.};..s
	0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, // truct xlatMtlMai
	0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // n_out.{.    floa
	0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, // t4 bgfx_FragData
	0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, // 0 [[color(0)]];.
	0x7d, 0x3b, 0x0a, 0x0a, 0x5b, 0x5b, 0x20, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x5f, 0x66, 0x72, 0x61, // };..[[ early_fra
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x20, 0x5d, 0x5d, 0x20, 0x66, // gment_tests ]] f
	0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, // ragment xlatMtlM
	0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, // ain_out xlatMtlM
	0x61, 0x69, 0x6e, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, // ain(constant _Gl
	0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, // obal& _mtl_u [[b
	0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, // uffer(0)]]).{.  
	0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, //   xlatMtlMain_ou
	0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // t out = {};.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x6d, // float3 _169 = _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, // tl_u.vColor_Inte
	0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // nsity.xyz * _mtl
	0x5f, 0x75, 0x2e, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, // _u.vColor_Intens
	0x69, 0x74, 0x79, 0x2e, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ity.w;.    float
	0x20, 0x5f, 0x31, 0x38, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x39, 0x2e, 0x78, 0x3b, 0x0a, //  _182 = _169.x;.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, 0x34, 0x34, 0x3b, 0x0a, //     float _244;.
	0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //     do.    {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x31, 0x38, 0x32, 0x20, 0x3c, 0x3d, //      if (_182 <=
	0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x34, 0x39, 0x39, 0x39, 0x39, 0x32, 0x37, 0x32, 0x38, //  0.0404499992728
	0x32, 0x33, 0x33, 0x33, 0x33, 0x37, 0x34, 0x30, 0x32, 0x33, 0x34, 0x33, 0x37, 0x35, 0x29, 0x0a, // 23333740234375).
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x34, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x38, //       _244 = _18
	0x32, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x37, 0x37, 0x33, 0x39, 0x39, 0x33, 0x38, 0x30, 0x35, // 2 * 0.0773993805
	0x30, 0x35, 0x30, 0x38, 0x34, 0x39, 0x39, 0x31, 0x34, 0x35, 0x35, 0x30, 0x37, 0x38, 0x31, 0x32, // 0508499145507812
	0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, // 5;.            b
	0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, // reak;.        }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, //         else.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x5f, 0x32, 0x34, 0x34, 0x20, 0x3d, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x28, //    _244 = powr((
	0x5f, 0x31, 0x38, 0x32, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x39, 0x34, 0x37, 0x38, 0x36, 0x37, 0x32, // _182 * 0.9478672
	0x37, 0x34, 0x32, 0x38, 0x34, 0x33, 0x36, 0x32, 0x37, 0x39, 0x32, 0x39, 0x36, 0x38, 0x37, 0x35, // 7428436279296875
	0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x32, 0x31, 0x33, 0x32, 0x36, 0x39, 0x39, 0x36, // ) + 0.0521326996
	0x33, 0x38, 0x36, 0x30, 0x35, 0x31, 0x31, 0x37, 0x37, 0x39, 0x37, 0x38, 0x35, 0x31, 0x35, 0x36, // 3860511779785156
	0x32, 0x35, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x39, 0x35, 0x33, // 25, 2.4000000953
	0x36, 0x37, 0x34, 0x33, 0x31, 0x36, 0x34, 0x30, 0x36, 0x32, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, // 67431640625);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, //           break;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .        }.     
	0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, //    break; // unr
	0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, // eachable workaro
	0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, // und.    } while(
	0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // false);.    floa
	0x74, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x39, 0x2e, 0x79, 0x3b, // t _184 = _169.y;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, 0x34, 0x35, 0x3b, // .    float _245;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, // .    do.    {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x20, 0x3c, //       if (_184 <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x34, 0x39, 0x39, 0x39, 0x39, 0x32, 0x37, 0x32, // = 0.040449999272
	0x38, 0x32, 0x33, 0x33, 0x33, 0x33, 0x37, 0x34, 0x30, 0x32, 0x33, 0x34, 0x33, 0x37, 0x35, 0x29, // 823333740234375)
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .        {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x34, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x31, //        _245 = _1
	0x38, 0x34, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x37, 0x37, 0x33, 0x39, 0x39, 0x33, 0x38, 0x30, // 84 * 0.077399380
	0x35, 0x30, 0x35, 0x30, 0x38, 0x34, 0x39, 0x39, 0x31, 0x34, 0x35, 0x35, 0x30, 0x37, 0x38, 0x31, // 5050849914550781
	0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 25;.            
	0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, // break;.        }
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, // .        else.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x34, 0x35, 0x20, 0x3d, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, //     _245 = powr(
	0x28, 0x5f, 0x31, 0x38, 0x34, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x39, 0x34, 0x37, 0x38, 0x36, 0x37, // (_184 * 0.947867
	0x32, 0x37, 0x34, 0x32, 0x38, 0x34, 0x33, 0x36, 0x32, 0x37, 0x39, 0x32, 0x39, 0x36, 0x38, 0x37, // 2742843627929687
	0x35, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x32, 0x31, 0x33, 0x32, 0x36, 0x39, 0x39, // 5) + 0.052132699
	0x36, 0x33, 0x38, 0x36, 0x30, 0x35, 0x31, 0x31, 0x37, 0x37, 0x39, 0x37, 0x38, 0x35, 0x31, 0x35, // 6386051177978515
	0x36, 0x32, 0x35, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x39, 0x35, // 625, 2.400000095
	0x33, 0x36, 0x37, 0x34, 0x33, 0x31, 0x36, 0x34, 0x30, 0x36, 0x32, 0x35, 0x29, 0x3b, 0x0a, 0x20, // 367431640625);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, //            break
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, // ;.        }.    
	0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, //     break; // un
	0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, // reachable workar
	0x6f, 0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, // ound.    } while
	0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // (false);.    flo
	0x61, 0x74, 0x20, 0x5f, 0x31, 0x38, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x39, 0x2e, 0x7a, // at _186 = _169.z
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, 0x34, 0x36, // ;.    float _246
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, // ;.    do.    {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x31, 0x38, 0x36, 0x20, //        if (_186 
	0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x34, 0x39, 0x39, 0x39, 0x39, 0x32, 0x37, // <= 0.04044999927
	0x32, 0x38, 0x32, 0x33, 0x33, 0x33, 0x33, 0x37, 0x34, 0x30, 0x32, 0x33, 0x34, 0x33, 0x37, 0x35, // 2823333740234375
	0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ).        {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x34, 0x36, 0x20, 0x3d, 0x20, 0x5f, //         _246 = _
	0x31, 0x38, 0x36, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x37, 0x37, 0x33, 0x39, 0x39, 0x33, 0x38, // 186 * 0.07739938
	0x30, 0x35, 0x30, 0x35, 0x30, 0x38, 0x34, 0x39, 0x39, 0x31, 0x34, 0x35, 0x35, 0x30, 0x37, 0x38, // 0505084991455078
	0x31, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 125;.           
	0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  break;.        
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, // }.        else. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x34, 0x36, 0x20, 0x3d, 0x20, 0x70, 0x6f, 0x77, 0x72, //      _246 = powr
	0x28, 0x28, 0x5f, 0x31, 0x38, 0x36, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x39, 0x34, 0x37, 0x38, 0x36, // ((_186 * 0.94786
	0x37, 0x32, 0x37, 0x34, 0x32, 0x38, 0x34, 0x33, 0x36, 0x32, 0x37, 0x39, 0x32, 0x39, 0x36, 0x38, // 7274284362792968
	0x37, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x32, 0x31, 0x33, 0x32, 0x36, 0x39, // 75) + 0.05213269
	0x39, 0x36, 0x33, 0x38, 0x36, 0x30, 0x35, 0x31, 0x31, 0x37, 0x37, 0x39, 0x37, 0x38, 0x35, 0x31, // 9638605117797851
	0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x39, // 5625, 2.40000009
	0x35, 0x33, 0x36, 0x37, 0x34, 0x33, 0x31, 0x36, 0x34, 0x30, 0x36, 0x32, 0x35, 0x29, 0x3b, 0x0a, // 5367431640625);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, //             brea
	0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, // k;.        }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, //      break; // u
	0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, // nreachable worka
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, // round.    } whil
	0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, // e(false);.    ou
	0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, // t.bgfx_FragData0
	0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x32, 0x34, 0x34, 0x2c, 0x20, //  = float4(_244, 
	0x5f, 0x32, 0x34, 0x35, 0x2c, 0x20, 0x5f, 0x32, 0x34, 0x36, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, // _245, _246, 1.0)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, // ;.    return out
	0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, 0x30, 0x00,                                           // ;.}....0.
};
static const uint8_t fs_sprite_notex_noclip_essl[6636] =
{
	0x46, 0x53, 0x48, 0x0b, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd9, 0x19, // FSH.............
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // s.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, // arying in.precis
	0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3b, // ion highp float;
	0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // .precision highp
	0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, //  int;.#define sh
	0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adow2D(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //  _coord) texture
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // (_sampler, _coor
	0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, // d).#define shado
	0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // w2DProj(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // eProj(_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x6f, 0x75, 0x74, 0x20, 0x6d, 0x65, 0x64, 0x69, // _coord).out medi
	0x75, 0x6d, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, // ump vec4 bgfx_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // agColor;.varying
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, //  vec2 v_texcoord
	0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, // 0;.varying vec2 
	0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x3b, 0x0a, 0x76, 0x65, 0x63, // v_texcoord1;.vec
	0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // 3 instMul(vec3 _
	0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, // vec, mat3 _mtx) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, // { return ( (_vec
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // ) * (_mtx) ); }.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, // vec3 instMul(mat
	0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, // 3 _mtx, vec3 _ve
	0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, // c) { return ( (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, // mtx) * (_vec) );
	0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, //  }.vec4 instMul(
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // vec4 _vec, mat4 
	0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, // _mtx) { return (
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, //  (_vec) * (_mtx)
	0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, //  ); }.vec4 instM
	0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, // ul(mat4 _mtx, ve
	0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // c4 _vec) { retur
	0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, // n ( (_mtx) * (_v
	0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, // ec) ); }.float r
	0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, // cp(float _a) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, // eturn 1.0/_a; }.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, // vec2 rcp(vec2 _a
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // ) { return vec2(
	0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // 1.0)/_a; }.vec3 
	0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, // rcp(vec3 _a) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, // eturn vec3(1.0)/
	0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, // _a; }.vec4 rcp(v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec4 _a) { return
	0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, //  vec4(1.0)/_a; }
	0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // .vec2 vec2_splat
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // (float _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, // urn vec2(_x, _x)
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, // ; }.vec3 vec3_sp
	0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // lat(float _x) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, // return vec3(_x, 
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // _x, _x); }.vec4 
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // vec4_splat(float
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, //  _x) { return ve
	0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // c4(_x, _x, _x, _
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, // x); }.uvec2 uvec
	0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, // 2_splat(uint _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, //  { return uvec2(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, // _x, _x); }.uvec3
	0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, //  uvec3_splat(uin
	0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, // t _x) { return u
	0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, // vec3(_x, _x, _x)
	0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, // ; }.uvec4 uvec4_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // splat(uint _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, //  return uvec4(_x
	0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // , _x, _x, _x); }
	0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, // .mat4 mtxFromRow
	0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // s(vec4 _0, vec4 
	0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, // _1, vec4 _2, vec
	0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, // 4 _3).{.return t
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, // ranspose(mat4(_0
	0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, // , _1, _2, _3) );
	0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, // .}.mat4 mtxFromC
	0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, // ols(vec4 _0, vec
	0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, // 4 _1, vec4 _2, v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec4 _3).{.return
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, //  mat4(_0, _1, _2
	0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, // , _3);.}.mat3 mt
	0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // xFromRows(vec3 _
	0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // 0, vec3 _1, vec3
	0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, //  _2).{.return tr
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, // anspose(mat3(_0,
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, //  _1, _2) );.}.ma
	0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, // t3 mtxFromCols(v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, // ec3 _0, vec3 _1,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  vec3 _2).{.retu
	0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, // rn mat3(_0, _1, 
	0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // _2);.}.uniform v
	0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, // ec4 u_viewRect;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, // uniform vec4 u_v
	0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // iewTexel;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, // m mat4 u_view;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, // niform mat4 u_in
	0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // vView;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // at4 u_proj;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, // orm mat4 u_invPr
	0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // oj;.uniform mat4
	0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, //  u_viewProj;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, // form mat4 u_invV
	0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // iewProj;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, //  mat4 u_model[32
	0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // ];.uniform mat4 
	0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // u_modelView;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, // form mat4 u_mode
	0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // lViewProj;.unifo
	0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, // rm vec4 u_alphaR
	0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, // ef4;.float sqr( 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // float v).{.retur
	0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, // n v*v;.}.vec2 sq
	0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // r( vec2 v).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // urn v*v;.}.vec3 
	0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // sqr( vec3 v).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // eturn v*v;.}.vec
	0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // 3 mul_w1( vec3 v
	0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // , mat4 m).{.retu
	0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // rn v.x*m[0].xyz 
	0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // + (v.y*m[1].xyz 
	0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // + (v.z*m[2].xyz 
	0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // + m[3].xyz));.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, // float acos_appro
	0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, // x_divPI( float v
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, // ).{.float x = ab
	0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, // s(v);.if(1. - x 
	0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, // <= 0.00006103515
	0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, // 625).return (v >
	0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, // = 0.) ? 0. : 1.;
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, // .float res = ((-
	0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // 0.155972/3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, // 6433832795) * x 
	0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, // + (1.56467/3.141
	0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, // 5926535897932384
	0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, // 626433832795) ) 
	0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, // * sqrt(1. - x);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, // return (v >= 0.)
	0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, //  ? res : 1. - re
	0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, // s;.}.float atan2
	0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x20, // _approx_div2PI( 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, // float y, float x
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, // ).{.float abs_y 
	0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // = abs(y);.float 
	0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, // abs_x = abs(x);.
	0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, // if(abs_x <= 0.00
	0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, // 006103515625 && 
	0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, // abs_y <= 0.00006
	0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // 103515625).retur
	0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, // n 0.;.float r = 
	0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, // (abs_x - abs_y) 
	0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, // / (abs_x + abs_y
	0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, // );.float angle =
	0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, //  ((x < 0.) ? (3.
	0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, // /8.) : (1./8.)).
	0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, // + (0.211868 /(2.
	0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, // *3.1415926535897
	0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, // 9323846264338327
	0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, // 95) * r * r - 0.
	0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, // 987305 /(2.*3.14
	0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, // 1592653589793238
	0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x29, 0x20, // 4626433832795)) 
	0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, // * ((x < 0.) ? -r
	0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, //  : r);.return (y
	0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, //  < 0.) ? -angle 
	0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // : angle;.}.float
	0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, //  asin_approx_div
	0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, // PI( float v).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, // loat x = abs(v);
	0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, // .if(1. - x <= 0.
	0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, // 00006103515625).
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, // return (v >= 0.)
	0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x66, //  ? 0.5 : -0.5;.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, // loat res = ((-0.
	0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, // 155972/3.1415926
	0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, // 5358979323846264
	0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, // 33832795) * x + 
	0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // (1.56467/3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, // 6433832795) ) * 
	0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, // sqrt(1. - x);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // turn (v >= 0.) ?
	0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, //  0.5 - res : -0.
	0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // 5 + res;.}.vec2 
	0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, // ray_to_equirecta
	0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // ngular_uv( vec3 
	0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, // ray).{.return ve
	0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, // c2(.0.5 + atan2_
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, // approx_div2PI(ra
	0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, // y.y, ray.x),.aco
	0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, // s_approx_divPI(r
	0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ay.z));.}.float 
	0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, // InvsRGB( float c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // olor).{.if (colo
	0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, // r <= 0.04045).re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // turn color * (1.
	0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, // 0/12.92);.else.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // eturn pow(color 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, // * (1.0/1.055) + 
	0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, // (0.055/1.055), 2
	0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, // .4);.}.float Inv
	0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, // Rec709( float co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // lor).{.if (color
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  <= 0.081).retur
	0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, // n color * (1.0/4
	0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // .5);.else.return
	0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, //  pow(color * (1.
	0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, // 0/1.099) + (0.09
	0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, // 9/1.099), 1.0/0.
	0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, // 45);.}.float Inv
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, // Gamma( float col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, // or).{.return Inv
	0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // sRGB(color);.}.v
	0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, // ec3 InvGamma( ve
	0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // c3 color).{.retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, // rn vec3(InvGamma
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // (color.x),InvGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, // ma(color.y),InvG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, // amma(color.z));.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, // }.vec3 InvToneMa
	0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, // p( vec3 color).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, // .float inv_2bh =
	0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  0.5/0.25;.float
	0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, //  bh = 4.0*0.25 -
	0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, //  2.0;.return (co
	0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, // lor - 1.0 + sqrt
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, // (color*(color + 
	0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, // bh) + 1.0))*inv_
	0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, // 2bh;.}.float sRG
	0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, // B( float f).{.fl
	0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, // oat s;.if (f <= 
	0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, // 0.0031308).s = 1
	0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, // 2.92 * f;.else.s
	0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, //  = 1.055 * pow(f
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, // , 1.0/2.4) - 0.0
	0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, // 55;.return s;.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, // float Rec709( fl
	0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // oat f).{.float s
	0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, // ;.if (f <= 0.018
	0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, // ).s = 4.5 * f;.e
	0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, // lse.s = 1.099 * 
	0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, // pow(f, 0.45) - 0
	0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, // .099;.return s;.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, // }.float FBGamma(
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, //  float color).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // return sRGB(colo
	0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, // r);.}.vec2 FBGam
	0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // ma( vec2 color).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x46, 0x42, // {.return vec2(FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, // Gamma(color.x),F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, // BGamma(color.y))
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, // ;.}.vec3 FBGamma
	0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // ( vec3 color).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, // return vec3(FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, // mma(color.x),FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, // amma(color.y),FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, // Gamma(color.z));
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x32, // .}.vec3 FBGamma2
	0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, // 2( vec3 color).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x70, 0x6f, 0x77, // .return vec3(pow
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, // (color.x, 1.0/2.
	0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x2c, 0x20, // 2),pow(color.y, 
	0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, // 1.0/2.2),pow(col
	0x6f, 0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x29, 0x3b, // or.z, 1.0/2.2));
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, // .}.float FBToneM
	0x61, 0x70, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // ap( float l).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, // eturn l * ((l*0.
	0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, // 25 + 1.0) / (l +
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, //  1.0));.}.vec2 F
	0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, // BToneMap( vec2 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, // olor).{.float l 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, // = dot(color,vec2
	0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, // (0.176204+0.0108
	0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, // 109*0.5,0.812985
	0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, // +0.0108109*0.5))
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // ;.return color *
	0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, //  ((l*0.25 + 1.0)
	0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, //  / (l + 1.0));.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, // .vec3 FBToneMap(
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, //  vec3 color).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, // loat l = dot(col
	0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, // or,vec3(0.176204
	0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, // ,0.812985,0.0108
	0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, // 109));.return co
	0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, // lor * ((l*0.25 +
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, //  1.0) / (l + 1.0
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, 0x64, 0x69, 0x74, // ));.}.vec4 Addit
	0x69, 0x76, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // ive( vec4 cBase,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, //  vec4 cBlend, fl
	0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // oat percent).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, // eturn cBase + cB
	0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, // lend*percent;.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, // vec3 Screen ( ve
	0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // c3 cBase, vec3 c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // Blend).{.return 
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, // 1.0 - (1.0 - cBa
	0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, // se) * (1.0 - cBl
	0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, // end);.}.vec4 Scr
	0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // een ( vec4 cBase
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, // , vec4 cBlend).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, // .return 1.0 - (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, // .0 - cBase) * (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // .0 - cBlend);.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, // vec3 ScreenHDR (
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, //  vec3 cBase, vec
	0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 3 cBlend).{.retu
	0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, // rn max(1.0 - (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // 0 - cBase) * (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, // 0 - cBlend), vec
	0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // 3(0.,0.,0.));.}.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, // vec4 ScreenHDR (
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, //  vec4 cBase, vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 4 cBlend).{.retu
	0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, // rn max(1.0 - (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, // 0 - cBase) * (1.
	0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, // 0 - cBlend), vec
	0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, // 4(0.,0.,0.,0.));
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, // .}.vec4 Multiply
	0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, //  ( vec4 cBase, v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ec4 cBlend, floa
	0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // t percent).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, // urn cBase * cBle
	0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // nd*percent;.}.ve
	0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, // c4 Overlay ( vec
	0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // 4 cBase, vec4 cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, // lend).{.vec4 cNe
	0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, // w = step(0.5, cB
	0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, // ase);.cNew = mix
	0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, // (cBase*cBlend*2.
	0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, // 0, 1.0-2.0*(1.0-
	0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, // cBase)*(1.0-cBle
	0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // nd), cNew);.retu
	0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // rn cNew;.}.vec4 
	0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, // OverlayHDR ( vec
	0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // 4 cBase, vec4 cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, // lend).{.vec4 cNe
	0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, // w = step(0.5, cB
	0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, // ase);.cNew = max
	0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, // (mix(cBase*cBlen
	0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, // d*2.0, 1.0-2.0*(
	0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, // 1.0-cBase)*(1.0-
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, // cBlend), cNew), 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, // vec4(0.,0.,0.,0.
	0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, // ));.return cNew;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, // .}.vec3 cos_hemi
	0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x20, 0x76, // sphere_sample( v
	0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, // ec2 t).{.float p
	0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, // hi = t.y * (2.0*
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, // 5);.float cosThe
	0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // ta = sqrt(1.0 - 
	0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, // t.x);.float sinT
	0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, // heta = sqrt(t.x)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x7b, // ;.float sp,cp;.{
	0x73, 0x70, 0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x63, 0x70, 0x3d, 0x63, // sp=sin(phi);cp=c
	0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // os(phi);};.retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, // n vec3(cp * sinT
	0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, // heta, cosTheta, 
	0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, // sp * sinTheta);.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, // }.vec3 rotate_to
	0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x28, 0x20, 0x76, // _vector_upper( v
	0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, // ec3 vec, vec3 no
	0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // rmal).{.if(norma
	0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, // l.y > -0.99999).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, // {.float h = 1.0/
	0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, // (1.0+normal.y);.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, // float hz = h*nor
	0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, // mal.z;.float hzx
	0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, //  = hz*normal.x;.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, // return vec3(.vec
	0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, // .x * (normal.y+h
	0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, // z*normal.z) + ve
	0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, // c.y * normal.x -
	0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, //  vec.z * hzx,.ve
	0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, // c.y * normal.y -
	0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, //  vec.x * normal.
	0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // x - vec.z * norm
	0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, // al.z,.vec.y * no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, // rmal.z - vec.x *
	0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, //  hzx + vec.z * (
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // normal.y+h*norma
	0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, // l.x*normal.x));.
	0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, // }.else return -v
	0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // ec;.}.uniform ve
	0x63, 0x34, 0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, // c4 vColor_Intens
	0x69, 0x74, 0x79, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, // ity;.uniform vec
	0x34, 0x20, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x6d, // 4 vRes_Alpha_tim
	0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // e;.uniform vec4 
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x54, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x3b, 0x0a, // alphaTestValue;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, // uniform sampler2
	0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x3b, 0x0a, 0x76, 0x65, // D tex_sprite;.ve
	0x63, 0x32, 0x20, 0x68, 0x61, 0x73, 0x68, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, // c2 hash22( vec2 
	0x75, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x33, 0x20, 0x3d, 0x20, // uv).{.vec3 p3 = 
	0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x75, 0x76, 0x2e, 0x78, 0x79, 0x78, 0x20, 0x2a, 0x20, 0x76, // fract(uv.xyx * v
	0x65, 0x63, 0x33, 0x28, 0x2e, 0x31, 0x30, 0x33, 0x31, 0x2c, 0x20, 0x2e, 0x31, 0x30, 0x33, 0x30, // ec3(.1031, .1030
	0x2c, 0x20, 0x2e, 0x30, 0x39, 0x37, 0x33, 0x29, 0x29, 0x3b, 0x0a, 0x70, 0x33, 0x20, 0x2b, 0x3d, // , .0973));.p3 +=
	0x20, 0x64, 0x6f, 0x74, 0x28, 0x70, 0x33, 0x2c, 0x20, 0x70, 0x33, 0x2e, 0x79, 0x7a, 0x78, 0x20, //  dot(p3, p3.yzx 
	0x2b, 0x20, 0x33, 0x33, 0x2e, 0x33, 0x33, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // + 33.33);.return
	0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x28, 0x70, 0x33, 0x2e, 0x78, 0x78, 0x20, 0x2b, 0x20, //  fract((p3.xx + 
	0x70, 0x33, 0x2e, 0x79, 0x7a, 0x29, 0x2a, 0x70, 0x33, 0x2e, 0x7a, 0x79, 0x29, 0x3b, 0x0a, 0x7d, // p3.yz)*p3.zy);.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, // .float triangula
	0x72, 0x50, 0x44, 0x46, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x29, 0x0a, 0x7b, // rPDF( float r).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x2a, 0x72, 0x3b, // .float p = 2.*r;
	0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x62, 0x20, 0x3d, 0x20, 0x28, 0x70, 0x20, 0x3e, 0x20, 0x31, // .bool b = (p > 1
	0x2e, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x62, 0x29, 0x0a, 0x70, 0x20, 0x3d, 0x20, 0x32, // .);.if (b).p = 2
	0x2e, 0x2d, 0x70, 0x3b, 0x0a, 0x70, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x2d, 0x73, 0x71, 0x72, 0x74, // .-p;.p = 1.-sqrt
	0x28, 0x70, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x62, 0x20, 0x3f, 0x20, // (p);.return b ? 
	0x70, 0x20, 0x3a, 0x20, 0x2d, 0x70, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, // p : -p;.}.void m
	0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, // ain().{.bgfx_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x49, 0x6e, // gColor = vec4(In
	0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, // vGamma(vColor_In
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x76, 0x43, // tensity.xyz * vC
	0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x77, // olor_Intensity.w
	0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,                         // ), 1.0);.}..
};
static const uint8_t fs_sprite_notex_noclip_glsl[7006] =
{
	0x46, 0x53, 0x48, 0x0b, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4b, 0x1b, // FSH...........K.
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x6f, // ..#version 440.o
	0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, // ut vec4 bgfx_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // gColor;.#define 
	0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x62, 0x67, 0x66, // gl_FragColor bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x0a, 0x23, 0x64, 0x65, 0x66, // x_FragColor.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x20, 0x20, // ine texture2D   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, //        texture.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // Lod       textur
	0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, // eLod.#define tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ture2DGrad      
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, // textureGrad.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, // ine texture2DPro
	0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, // jLod   texturePr
	0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // ojLod.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, // xture2DProjGrad 
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, //  textureProjGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // CubeLod     text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, // ureLod.#define t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, // extureCubeGrad  
	0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, //   textureGrad.#d
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, // efine texture3D 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //          texture
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, 0x65, 0x78, 0x74, // 2DLodOffset text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, // ureLodOffset.#de
	0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, // fine attribute i
	0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // n.#define varyin
	0x67, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, // g in.#define bgf
	0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // xShadow2D(_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, // er, _coord)     
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // vec4_splat(textu
	0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // re(_sampler, _co
	0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, // ord) ).#define b
	0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, // gfxShadow2DProj(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, // ) vec4_splat(tex
	0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // tureProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x76, 0x61, 0x72, // r, _coord) ).var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // ying vec2 v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, // oord0;.varying v
	0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x3b, // ec2 v_texcoord1;
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, // .vec3 instMul(ve
	0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, // c3 _vec, mat3 _m
	0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, // tx) { return ( (
	0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, // _vec) * (_mtx) )
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, // ; }.vec3 instMul
	0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // (mat3 _mtx, vec3
	0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _vec) { return 
	0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, // ( (_mtx) * (_vec
	0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, // ) ); }.vec4 inst
	0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, // Mul(vec4 _vec, m
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // at4 _mtx) { retu
	0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, // rn ( (_vec) * (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, // mtx) ); }.vec4 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, // nstMul(mat4 _mtx
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, // , vec4 _vec) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, // eturn ( (_mtx) *
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, //  (_vec) ); }.flo
	0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, // at rcp(float _a)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, //  { return 1.0/_a
	0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, // ; }.vec2 rcp(vec
	0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // 2 _a) { return v
	0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // ec2(1.0)/_a; }.v
	0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, // ec3 rcp(vec3 _a)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, //  { return vec3(1
	0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, // .0)/_a; }.vec4 r
	0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // cp(vec4 _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, // turn vec4(1.0)/_
	0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, // a; }.vec2 vec2_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // plat(float _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, //  return vec2(_x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, //  _x); }.vec3 vec
	0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, // 3_splat(float _x
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // ) { return vec3(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, // _x, _x, _x); }.v
	0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, // ec4 vec4_splat(f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // loat _x) { retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // n vec4(_x, _x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, // x, _x); }.uvec2 
	0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec2_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, //  _x) { return uv
	0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, // ec2(_x, _x); }.u
	0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // vec3 uvec3_splat
	0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // (uint _x) { retu
	0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // rn uvec3(_x, _x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, //  _x); }.uvec4 uv
	0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, // ec4_splat(uint _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, // x) { return uvec
	0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // 4(_x, _x, _x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, // ); }.mat4 mtxFro
	0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, // mRows(vec4 _0, v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, // ec4 _1, vec4 _2,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  vec4 _3).{.retu
	0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, // rn transpose(mat
	0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, // 4(_0, _1, _2, _3
	0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, // ) );.}.mat4 mtxF
	0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, // romCols(vec4 _0,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, //  vec4 _1, vec4 _
	0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 2, vec4 _3).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, // turn mat4(_0, _1
	0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, // , _2, _3);.}.mat
	0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, // 3 mtxFromRows(ve
	0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, // c3 _0, vec3 _1, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // vec3 _2).{.retur
	0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, // n transpose(mat3
	0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, // (_0, _1, _2) );.
	0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, // }.mat3 mtxFromCo
	0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // ls(vec3 _0, vec3
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, //  _1, vec3 _2).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, // return mat3(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // _1, _2);.}.unifo
	0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, // rm vec4 u_viewRe
	0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // ct;.uniform vec4
	0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, //  u_viewTexel;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // iform mat4 u_vie
	0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // w;.uniform mat4 
	0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // u_invView;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, // rm mat4 u_proj;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, // uniform mat4 u_i
	0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // nvProj;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, // mat4 u_viewProj;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // invViewProj;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, // form mat4 u_mode
	0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // l[32];.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, // at4 u_modelView;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, // modelViewProj;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, // niform vec4 u_al
	0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, // phaRef4;.float s
	0x71, 0x72, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // qr( float v).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // eturn v*v;.}.vec
	0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, // 2 sqr( vec2 v).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // .return v*v;.}.v
	0x65, 0x63, 0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, // ec3 sqr( vec3 v)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, // .{.return v*v;.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x20, 0x76, 0x65, // .vec3 mul_w1( ve
	0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, // c3 v, mat4 m).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, // return v.x*m[0].
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, // xyz + (v.y*m[1].
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, // xyz + (v.z*m[2].
	0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, // xyz + m[3].xyz))
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, // ;.}.float acos_a
	0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, // pprox_divPI( flo
	0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, // at v).{.float x 
	0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, // = abs(v);.if(1. 
	0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, // - x <= 0.0000610
	0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 3515625).return 
	0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, // (v >= 0.) ? 0. :
	0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, //  1.;.float res =
	0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, //  ((-0.155972/3.1
	0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, // 4159265358979323
	0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, // 84626433832795) 
	0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, // * x + (1.56467/3
	0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, // .141592653589793
	0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, // 2384626433832795
	0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, // ) ) * sqrt(1. - 
	0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, // x);.return (v >=
	0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, //  0.) ? res : 1. 
	0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, // - res;.}.float a
	0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, // tan2_approx_div2
	0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // PI( float y, flo
	0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, // at x).{.float ab
	0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, // s_y = abs(y);.fl
	0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, // oat abs_x = abs(
	0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, // x);.if(abs_x <= 
	0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, // 0.00006103515625
	0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, //  && abs_y <= 0.0
	0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, // 0006103515625).r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // eturn 0.;.float 
	0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, // r = (abs_x - abs
	0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, // _y) / (abs_x + a
	0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, // bs_y);.float ang
	0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // le = ((x < 0.) ?
	0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, //  (3./8.) : (1./8
	0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, // .)).+ (0.211868 
	0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, // /(2.*3.141592653
	0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, // 5897932384626433
	0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, // 832795) * r * r 
	0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, // - 0.987305 /(2.*
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, // 3.14159265358979
	0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, // 3238462643383279
	0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, // 5)) * ((x < 0.) 
	0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // ? -r : r);.retur
	0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, // n (y < 0.) ? -an
	0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // gle : angle;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, // loat asin_approx
	0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, // _divPI( float v)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, // .{.float x = abs
	0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, // (v);.if(1. - x <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, // = 0.000061035156
	0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, // 25).return (v >=
	0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, //  0.) ? 0.5 : -0.
	0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, // 5;.float res = (
	0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, // (-0.155972/3.141
	0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, // 5926535897932384
	0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, // 626433832795) * 
	0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, // x + (1.56467/3.1
	0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, // 4159265358979323
	0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, // 84626433832795) 
	0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, // ) * sqrt(1. - x)
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, // ;.return (v >= 0
	0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, // .) ? 0.5 - res :
	0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, //  -0.5 + res;.}.v
	0x65, 0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, // ec2 ray_to_equir
	0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x20, 0x76, // ectangular_uv( v
	0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // ec3 ray).{.retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, // n vec2(.0.5 + at
	0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, // an2_approx_div2P
	0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, // I(ray.y, ray.x),
	0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, // .acos_approx_div
	0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // PI(ray.z));.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, // oat InvsRGB( flo
	0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, // at color).{.if (
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, // color <= 0.04045
	0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // ).return color *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, //  (1.0/12.92);.el
	0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, // se.return pow(co
	0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, // lor * (1.0/1.055
	0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, // ) + (0.055/1.055
	0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ), 2.4);.}.float
	0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, //  InvRec709( floa
	0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, // t color).{.if (c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, // olor <= 0.081).r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, // eturn color * (1
	0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, // .0/4.5);.else.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, // turn pow(color *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, //  (1.0/1.099) + (
	0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, // 0.099/1.099), 1.
	0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0/0.45);.}.float
	0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  InvGamma( float
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  color).{.return
	0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, //  InvsRGB(color);
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, // .}.vec3 InvGamma
	0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // ( vec3 color).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, // return vec3(InvG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, // amma(color.x),In
	0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, // vGamma(color.y),
	0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, // InvGamma(color.z
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, // ));.}.vec3 InvTo
	0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // neMap( vec3 colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, // r).{.float inv_2
	0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x66, // bh = 0.5/0.25;.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, // loat bh = 4.0*0.
	0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 25 - 2.0;.return
	0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, //  (color - 1.0 + 
	0x73, 0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // sqrt(color*(colo
	0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, // r + bh) + 1.0))*
	0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // inv_2bh;.}.float
	0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, //  sRGB( float f).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, // {.float s;.if (f
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, //  <= 0.0031308).s
	0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, //  = 12.92 * f;.el
	0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, // se.s = 1.055 * p
	0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, // ow(f, 1.0/2.4) -
	0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, //  0.055;.return s
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, // ;.}.float Rec709
	0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // ( float f).{.flo
	0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, // at s;.if (f <= 0
	0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, // .018).s = 4.5 * 
	0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, // f;.else.s = 1.09
	0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, // 9 * pow(f, 0.45)
	0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  - 0.099;.return
	0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, //  s;.}.float FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // mma( float color
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, // ).{.return sRGB(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, // color);.}.vec2 F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, // BGamma( vec2 col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // or).{.return vec
	0x32, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // 2(FBGamma(color.
	0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // x),FBGamma(color
	0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, // .y));.}.vec3 FBG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // amma( vec3 color
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // ).{.return vec3(
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, // FBGamma(color.x)
	0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, // ,FBGamma(color.y
	0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // ),FBGamma(color.
	0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, // z));.}.vec3 FBGa
	0x6d, 0x6d, 0x61, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // mma22( vec3 colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, // r).{.return vec3
	0x28, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, // (pow(color.x, 1.
	0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // 0/2.2),pow(color
	0x2e, 0x79, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, // .y, 1.0/2.2),pow
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, // (color.z, 1.0/2.
	0x32, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, // 2));.}.float FBT
	0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, // oneMap( float l)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, // .{.return l * ((
	0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, // l*0.25 + 1.0) / 
	0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // (l + 1.0));.}.ve
	0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, // c2 FBToneMap( ve
	0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // c2 color).{.floa
	0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, // t l = dot(color,
	0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, // vec2(0.176204+0.
	0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, // 0108109*0.5,0.81
	0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, // 2985+0.0108109*0
	0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, // .5));.return col
	0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, // or * ((l*0.25 + 
	0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // 1.0) / (l + 1.0)
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, // );.}.vec3 FBTone
	0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // Map( vec3 color)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // .{.float l = dot
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, // (color,vec3(0.17
	0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, // 6204,0.812985,0.
	0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // 0108109));.retur
	0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, // n color * ((l*0.
	0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, // 25 + 1.0) / (l +
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, //  1.0));.}.vec4 A
	0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // dditive( vec4 cB
	0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // ase, vec4 cBlend
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, // , float percent)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, // .{.return cBase 
	0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, // + cBlend*percent
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, // ;.}.vec3 Screen 
	0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, // ( vec3 cBase, ve
	0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // c3 cBlend).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // urn 1.0 - (1.0 -
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, //  cBase) * (1.0 -
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, //  cBlend);.}.vec4
	0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, //  Screen ( vec4 c
	0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // Base, vec4 cBlen
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, // d).{.return 1.0 
	0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, // - (1.0 - cBase) 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // * (1.0 - cBlend)
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, // ;.}.vec3 ScreenH
	0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // DR ( vec3 cBase,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, //  vec3 cBlend).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // return max(1.0 -
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, //  (1.0 - cBase) *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, //  (1.0 - cBlend),
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, //  vec3(0.,0.,0.))
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, // ;.}.vec4 ScreenH
	0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // DR ( vec4 cBase,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, //  vec4 cBlend).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // return max(1.0 -
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, //  (1.0 - cBase) *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, //  (1.0 - cBlend),
	0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, //  vec4(0.,0.,0.,0
	0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, // .));.}.vec4 Mult
	0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, // iply ( vec4 cBas
	0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, // e, vec4 cBlend, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, // float percent).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, // .return cBase * 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, // cBlend*percent;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, // }.vec4 Overlay (
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, //  vec4 cBase, vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, // 4 cBlend).{.vec4
	0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, //  cNew = step(0.5
	0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, // , cBase);.cNew =
	0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, //  mix(cBase*cBlen
	0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, // d*2.0, 1.0-2.0*(
	0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, // 1.0-cBase)*(1.0-
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, // cBlend), cNew);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // return cNew;.}.v
	0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, // ec4 OverlayHDR (
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, //  vec4 cBase, vec
	0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, // 4 cBlend).{.vec4
	0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, //  cNew = step(0.5
	0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, // , cBase);.cNew =
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, //  max(mix(cBase*c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, // Blend*2.0, 1.0-2
	0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, // .0*(1.0-cBase)*(
	0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, // 1.0-cBlend), cNe
	0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, // w), vec4(0.,0.,0
	0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, // .,0.));.return c
	0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, // New;.}.vec3 cos_
	0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // hemisphere_sampl
	0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // e( vec2 t).{.flo
	0x61, 0x74, 0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, // at phi = t.y * (
	0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, // 2.0*3.1415926535
	0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, // 8979323846264338
	0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, // 32795);.float co
	0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, // sTheta = sqrt(1.
	0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 0 - t.x);.float 
	0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // sinTheta = sqrt(
	0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, // t.x);.float sp,c
	0x70, 0x3b, 0x0a, 0x7b, 0x73, 0x70, 0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, // p;.{sp=sin(phi);
	0x63, 0x70, 0x3d, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, 0x3b, 0x0a, 0x72, // cp=cos(phi);};.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, // eturn vec3(cp * 
	0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, // sinTheta, cosThe
	0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, // ta, sp * sinThet
	0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, // a);.}.vec3 rotat
	0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, // e_to_vector_uppe
	0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x76, 0x65, 0x63, // r( vec3 vec, vec
	0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, // 3 normal).{.if(n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, // ormal.y > -0.999
	0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, // 99).{.float h = 
	0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // 1.0/(1.0+normal.
	0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, // y);.float hz = h
	0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // *normal.z;.float
	0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, //  hzx = hz*normal
	0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // .x;.return vec3(
	0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // .vec.x * (normal
	0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, // .y+hz*normal.z) 
	0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // + vec.y * normal
	0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, // .x - vec.z * hzx
	0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // ,.vec.y * normal
	0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, // .y - vec.x * nor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, // mal.x - vec.z * 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, // normal.z,.vec.y 
	0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, // * normal.z - vec
	0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, // .x * hzx + vec.z
	0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, //  * (normal.y+h*n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // ormal.x*normal.x
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // ));.}.else retur
	0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // n -vec;.}.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, // m vec4 vColor_In
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // tensity;.uniform
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x52, 0x65, 0x73, 0x5f, 0x41, 0x6c, 0x70, 0x68, 0x61, //  vec4 vRes_Alpha
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // _time;.uniform v
	0x65, 0x63, 0x34, 0x20, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x54, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, // ec4 alphaTestVal
	0x75, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, // ue;.uniform samp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, // ler2D tex_sprite
	0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x68, 0x61, 0x73, 0x68, 0x32, 0x32, 0x28, 0x20, 0x76, // ;.vec2 hash22( v
	0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, // ec2 uv).{.vec3 p
	0x33, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x75, 0x76, 0x2e, 0x78, 0x79, 0x78, // 3 = fract(uv.xyx
	0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x2e, 0x31, 0x30, 0x33, 0x31, 0x2c, 0x20, 0x2e, //  * vec3(.1031, .
	0x31, 0x30, 0x33, 0x30, 0x2c, 0x20, 0x2e, 0x30, 0x39, 0x37, 0x33, 0x29, 0x29, 0x3b, 0x0a, 0x70, // 1030, .0973));.p
	0x33, 0x20, 0x2b, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x70, 0x33, 0x2c, 0x20, 0x70, 0x33, 0x2e, // 3 += dot(p3, p3.
	0x79, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x33, 0x33, 0x2e, 0x33, 0x33, 0x29, 0x3b, 0x0a, 0x72, 0x65, // yzx + 33.33);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x28, 0x70, 0x33, 0x2e, 0x78, // turn fract((p3.x
	0x78, 0x20, 0x2b, 0x20, 0x70, 0x33, 0x2e, 0x79, 0x7a, 0x29, 0x2a, 0x70, 0x33, 0x2e, 0x7a, 0x79, // x + p3.yz)*p3.zy
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x72, 0x69, 0x61, 0x6e, // );.}.float trian
	0x67, 0x75, 0x6c, 0x61, 0x72, 0x50, 0x44, 0x46, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // gularPDF( float 
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x20, 0x3d, 0x20, 0x32, // r).{.float p = 2
	0x2e, 0x2a, 0x72, 0x3b, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x62, 0x20, 0x3d, 0x20, 0x28, 0x70, // .*r;.bool b = (p
	0x20, 0x3e, 0x20, 0x31, 0x2e, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x62, 0x29, 0x0a, 0x70, //  > 1.);.if (b).p
	0x20, 0x3d, 0x20, 0x32, 0x2e, 0x2d, 0x70, 0x3b, 0x0a, 0x70, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x2d, //  = 2.-p;.p = 1.-
	0x73, 0x71, 0x72, 0x74, 0x28, 0x70, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // sqrt(p);.return 
	0x62, 0x20, 0x3f, 0x20, 0x70, 0x20, 0x3a, 0x20, 0x2d, 0x70, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x6f, // b ? p : -p;.}.vo
	0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x67, 0x6c, 0x5f, 0x46, // id main().{.gl_F
	0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // ragColor = vec4(
	0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, // InvGamma(vColor_
	0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, // Intensity.xyz * 
	0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, // vColor_Intensity
	0x2e, 0x77, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,             // .w), 1.0);.}..
};
static const uint8_t fs_sprite_notex_noclip_dx11[781] =
{
	0x46, 0x53, 0x48, 0x0b, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x10, 0x76, // FSH............v
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, // Color_Intensity.
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdc, 0x02, 0x00, 0x00, 0x44, 0x58, 0x42, // .............DXB
	0x43, 0x2c, 0x98, 0xcd, 0x8b, 0xcb, 0xa7, 0x2c, 0x74, 0xb2, 0xad, 0x15, 0xf7, 0x42, 0x9a, 0xce, // C,.....,t....B..
	0x4b, 0x01, 0x00, 0x00, 0x00, 0xdc, 0x02, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, // K............,..
	0x00, 0x9c, 0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x4e, 0x68, 0x00, 0x00, // .........ISGNh..
	0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........P......
	0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, // ................
	0x00, 0x5c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // ................
	0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, // ................
	0x00, 0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, // .SV_POSITION.TEX
	0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0xab, 0xab, 0xab, 0x4f, 0x53, 0x47, 0x4e, 0x2c, 0x00, 0x00, // COORD....OSGN,..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ......... ......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, // ................
	0x00, 0x53, 0x56, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x00, 0xab, 0xab, 0x53, 0x48, 0x45, // .SV_TARGET...SHE
	0x58, 0x04, 0x02, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x6a, 0x28, 0x00, // X....P.......j(.
	0x01, 0x59, 0x00, 0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // .Y...F. ........
	0x00, 0x65, 0x00, 0x00, 0x03, 0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, // .e.... ......h..
	0x02, 0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, // .....8...r......
	0x00, 0xf6, 0x8f, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, // ... .........F. 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0f, 0x32, 0x00, 0x10, // .........2...2..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, // .....F........@.
	0x00, 0x6e, 0xa7, 0x72, 0x3f, 0x6e, 0xa7, 0x72, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .n.r?n.r?.......
	0x00, 0x02, 0x40, 0x00, 0x00, 0x19, 0x89, 0x55, 0x3d, 0x19, 0x89, 0x55, 0x3d, 0x00, 0x00, 0x00, // ..@....U=..U=...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x05, 0x32, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, // ...../...2......
	0x00, 0x46, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0x32, 0x00, 0x10, // .F.......8...2..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, // .....F........@.
	0x00, 0x9a, 0x99, 0x19, 0x40, 0x9a, 0x99, 0x19, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....@...@.......
	0x00, 0x19, 0x00, 0x00, 0x05, 0x32, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, // .....2.......F..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0xc2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, // .....8..........
	0x00, 0x06, 0x04, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, // ..........@.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x91, 0x83, 0x9e, 0x3d, 0x91, 0x83, 0x9e, 0x3d, 0x1d, 0x00, 0x00, // ........=...=...
	0x0a, 0xb2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xe6, 0xae, 0x25, // ..........@....%
	0x3d, 0xe6, 0xae, 0x25, 0x3d, 0x00, 0x00, 0x00, 0x00, 0xe6, 0xae, 0x25, 0x3d, 0x46, 0x08, 0x10, // =..%=......%=F..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x32, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, // .....7...2 .....
	0x00, 0x46, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x01, 0x00, 0x00, // .F..............
	0x00, 0x46, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, // .F.......2......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, // .....*........@.
	0x00, 0x6e, 0xa7, 0x72, 0x3f, 0x01, 0x40, 0x00, 0x00, 0x19, 0x89, 0x55, 0x3d, 0x2f, 0x00, 0x00, // .n.r?.@....U=/..
	0x05, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x38, 0x00, 0x00, 0x0a, 0x32, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x00, 0x10, // .8...2..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x9a, 0x99, 0x19, 0x40, 0x91, 0x83, 0x9e, // ......@.....@...
	0x3d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x05, 0x12, 0x00, 0x10, // =...............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, // .............7..
	0x09, 0x42, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, // .B ......:......
	0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, // .6.... .......@.
	0x00, 0x00, 0x00, 0x80, 0x3f, 0x3e, 0x00, 0x00, 0x01, 0x00, 0x00, 0x10, 0x00,                   // ....?>.......
};
static const uint8_t fs_sprite_notex_noclip_spv[1725] =
{
	0x46, 0x53, 0x48, 0x0b, 0xb9, 0x00, 0x8f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x10, 0x76, // FSH............v
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, // Color_Intensity.
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8c, 0x06, 0x00, 0x00, 0x03, 0x02, 0x23, // ...............#
	0x07, 0x00, 0x00, 0x01, 0x00, 0x0b, 0x00, 0x08, 0x00, 0x1c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30, 0x00, 0x00, 0x00, // .GLSL.std.450...
	0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x06, // ................
	0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, // .........main...
	0x00, 0x8f, 0x00, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, // ................
	0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, // ................
	0x00, 0x05, 0x00, 0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, // ................
	0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x64, 0x00, 0x00, // .main........d..
	0x00, 0x55, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00, // .UniformBlock...
	0x00, 0x06, 0x00, 0x08, 0x00, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0x43, 0x6f, // .....d.......vCo
	0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x00, 0x00, 0x00, // lor_Intensity...
	0x00, 0x05, 0x00, 0x03, 0x00, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, // .....f..........
	0x00, 0x8f, 0x00, 0x00, 0x00, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, // .....bgfx_FragDa
	0x74, 0x61, 0x30, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ta0..H...d......
	0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00, 0x64, 0x00, 0x00, // .#.......G...d..
	0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x66, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, // .....G...f..."..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x66, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, // .....G...f...!..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x8f, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, // .....G..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x21, 0x00, 0x03, // .............!..
	0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00, 0x06, 0x00, 0x00, // ................
	0x00, 0x20, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, // . ..............
	0x00, 0x04, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x14, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, // ................
	0x00, 0x03, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x35, 0x00, 0x00, // .....+.......5..
	0x00, 0xe6, 0xae, 0x25, 0x3d, 0x14, 0x00, 0x02, 0x00, 0x36, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, // ...%=....6...+..
	0x00, 0x06, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x91, 0x83, 0x9e, 0x3d, 0x2b, 0x00, 0x04, // .....;......=+..
	0x00, 0x06, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x6e, 0xa7, 0x72, 0x3f, 0x2b, 0x00, 0x04, // .....@...n.r?+..
	0x00, 0x06, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x19, 0x89, 0x55, 0x3d, 0x2b, 0x00, 0x04, // .....B.....U=+..
	0x00, 0x06, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x9a, 0x99, 0x19, 0x40, 0x15, 0x00, 0x04, // .....D......@...
	0x00, 0x4e, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, // .N... .......+..
	0x00, 0x4e, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x03, // .N...O..........
	0x00, 0x64, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x65, 0x00, 0x00, // .d....... ...e..
	0x00, 0x02, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x65, 0x00, 0x00, // .....d...;...e..
	0x00, 0x66, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, 0x67, 0x00, 0x00, // .f...........g..
	0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x67, 0x00, 0x00, // . .......+...g..
	0x00, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x69, 0x00, 0x00, // .h....... ...i..
	0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x4e, 0x00, 0x00, // .........+...N..
	0x00, 0x6d, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x6e, 0x00, 0x00, // .m....... ...n..
	0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, // .........+......
	0x00, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x20, 0x00, 0x04, 0x00, 0x8e, 0x00, 0x00, // .t......? ......
	0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x8e, 0x00, 0x00, // .........;......
	0x00, 0x8f, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, // .........6......
	0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, // ................
	0x00, 0x05, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x69, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, // .....A...i......
	0x00, 0x66, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, // .f...h...=......
	0x00, 0xb3, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x14, 0x00, 0x00, // .........O......
	0x00, 0xb4, 0x00, 0x00, 0x00, 0xb3, 0x00, 0x00, 0x00, 0xb3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x6e, 0x00, 0x00, // .........A...n..
	0x00, 0xb5, 0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, // .....f...h...m..
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0xb6, 0x00, 0x00, 0x00, 0xb5, 0x00, 0x00, // .=..............
	0x00, 0x8e, 0x00, 0x05, 0x00, 0x14, 0x00, 0x00, 0x00, 0xb7, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, // ................
	0x00, 0xb6, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xc7, 0x00, 0x00, // .....Q..........
	0x00, 0xb7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xe5, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0x4f, 0x00, 0x00, 0x00, 0xd9, 0x00, 0x00, // .........O......
	0x00, 0xf8, 0x00, 0x02, 0x00, 0xd9, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x36, 0x00, 0x00, // .............6..
	0x00, 0xdb, 0x00, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x35, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, // .........5......
	0x00, 0xe4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xdb, 0x00, 0x00, // ................
	0x00, 0xdc, 0x00, 0x00, 0x00, 0xdf, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xdf, 0x00, 0x00, // ................
	0x00, 0x85, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xe1, 0x00, 0x00, 0x00, 0xc7, 0x00, 0x00, // ................
	0x00, 0x40, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xe2, 0x00, 0x00, // .@..............
	0x00, 0xe1, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x06, 0x00, 0x00, // .....B..........
	0x00, 0xe3, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xe2, 0x00, 0x00, // ................
	0x00, 0x44, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, // .D..............
	0x00, 0xdc, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xde, 0x00, 0x00, // ................
	0x00, 0xc7, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xe5, 0x00, 0x00, // .....;..........
	0x00, 0xf8, 0x00, 0x02, 0x00, 0xe4, 0x00, 0x00, 0x00, 0xff, 0x00, 0x01, 0x00, 0xf8, 0x00, 0x02, // ................
	0x00, 0xe5, 0x00, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x06, 0x00, 0x00, 0x00, 0x19, 0x01, 0x00, // ................
	0x00, 0xe3, 0x00, 0x00, 0x00, 0xdf, 0x00, 0x00, 0x00, 0xde, 0x00, 0x00, 0x00, 0xdc, 0x00, 0x00, // ................
	0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xca, 0x00, 0x00, 0x00, 0xb7, 0x00, 0x00, // .Q..............
	0x00, 0x01, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0xfb, 0x00, 0x03, 0x00, 0x4f, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, // .....O..........
	0x00, 0xf0, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x36, 0x00, 0x00, 0x00, 0xf2, 0x00, 0x00, // .........6......
	0x00, 0xca, 0x00, 0x00, 0x00, 0x35, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xfb, 0x00, 0x00, // .....5..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xf2, 0x00, 0x00, 0x00, 0xf3, 0x00, 0x00, // ................
	0x00, 0xf6, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xf6, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, // ................
	0x00, 0x06, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0xca, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, // .............@..
	0x00, 0x81, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, // ................
	0x00, 0x42, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x06, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x00, // .B..............
	0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, // .............D..
	0x00, 0xf9, 0x00, 0x02, 0x00, 0xfc, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xf3, 0x00, 0x00, // ................
	0x00, 0x85, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xf5, 0x00, 0x00, 0x00, 0xca, 0x00, 0x00, // ................
	0x00, 0x3b, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xfc, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, // .;..............
	0x00, 0xfb, 0x00, 0x00, 0x00, 0xff, 0x00, 0x01, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xfc, 0x00, 0x00, // ................
	0x00, 0xf5, 0x00, 0x07, 0x00, 0x06, 0x00, 0x00, 0x00, 0x1a, 0x01, 0x00, 0x00, 0xfa, 0x00, 0x00, // ................
	0x00, 0xf6, 0x00, 0x00, 0x00, 0xf5, 0x00, 0x00, 0x00, 0xf3, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, // .............Q..
	0x00, 0x06, 0x00, 0x00, 0x00, 0xcd, 0x00, 0x00, 0x00, 0xb7, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // ................
	0x00, 0xf7, 0x00, 0x03, 0x00, 0x13, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, // ................
	0x00, 0x4f, 0x00, 0x00, 0x00, 0x07, 0x01, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x07, 0x01, 0x00, // .O..............
	0x00, 0xbc, 0x00, 0x05, 0x00, 0x36, 0x00, 0x00, 0x00, 0x09, 0x01, 0x00, 0x00, 0xcd, 0x00, 0x00, // .....6..........
	0x00, 0x35, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x12, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // .5..............
	0x00, 0xfa, 0x00, 0x04, 0x00, 0x09, 0x01, 0x00, 0x00, 0x0a, 0x01, 0x00, 0x00, 0x0d, 0x01, 0x00, // ................
	0x00, 0xf8, 0x00, 0x02, 0x00, 0x0d, 0x01, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, // ................
	0x00, 0x0f, 0x01, 0x00, 0x00, 0xcd, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, // .........@......
	0x00, 0x06, 0x00, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00, 0x0f, 0x01, 0x00, 0x00, 0x42, 0x00, 0x00, // .............B..
	0x00, 0x0c, 0x00, 0x07, 0x00, 0x06, 0x00, 0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x1a, 0x00, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, // .........D......
	0x00, 0x13, 0x01, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x0a, 0x01, 0x00, 0x00, 0x85, 0x00, 0x05, // ................
	0x00, 0x06, 0x00, 0x00, 0x00, 0x0c, 0x01, 0x00, 0x00, 0xcd, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, // .............;..
	0x00, 0xf9, 0x00, 0x02, 0x00, 0x13, 0x01, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x12, 0x01, 0x00, // ................
	0x00, 0xff, 0x00, 0x01, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x13, 0x01, 0x00, 0x00, 0xf5, 0x00, 0x07, // ................
	0x00, 0x06, 0x00, 0x00, 0x00, 0x1b, 0x01, 0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x0d, 0x01, 0x00, // ................
	0x00, 0x0c, 0x01, 0x00, 0x00, 0x0a, 0x01, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x08, 0x00, 0x00, // .........P......
	0x00, 0xbc, 0x00, 0x00, 0x00, 0x19, 0x01, 0x00, 0x00, 0x1a, 0x01, 0x00, 0x00, 0x1b, 0x01, 0x00, // ................
	0x00, 0x74, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x8f, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x00, // .t...>..........
	0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00,                   // .....8.......
};
static const bgfx::EmbeddedShader fs_sprite_notex_noclip = BGFX_EMBEDDED_SHADER(fs_sprite_notex_noclip);

// Raytraced motion blur Shaders

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of fragment shader from fs_pp_motionblur.sc to fs_pp_motionblur with options: NOSTEREO
static const uint8_t fs_pp_motionblur_mtl[3575] =
{
	0x46, 0x53, 0x48, 0x0b, 0x6f, 0x1e, 0x3e, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x16, 0x74, // FSH.o.><.......t
	0x65, 0x78, 0x5f, 0x66, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x53, 0x61, // ex_fb_filteredSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, // mpler...........
	0x74, 0x65, 0x78, 0x5f, 0x66, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x54, // tex_fb_filteredT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // exture..........
	0x10, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // .tex_bloomSample
	0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x74, 0x65, 0x78, 0x5f, // r...........tex_
	0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, // bloomTexture....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, // .......tex_depth
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Sampler.........
	0x00, 0x10, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x54, 0x65, 0x78, 0x74, 0x75, // ..tex_depthTextu
	0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x77, 0x5f, 0x68, // re...........w_h
	0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x01, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, // _height.........
	0x00, 0x0a, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x49, 0x6e, 0x76, 0x14, 0x01, 0xc0, 0x00, // ..matProjInv....
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x02, 0x00, 0x00, // .......balls....
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x14, 0x01, // .......matProj..
	0x80, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, 0x66, 0x62, 0x5f, // .........tex_fb_
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // filtered........
	0x00, 0x00, 0x09, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x10, 0x00, 0x00, 0x00, // ...tex_bloom....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, // .......tex_depth
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa5, 0x0c, 0x00, 0x00, 0x23, 0x69, // ..............#i
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, // nclude <metal_st
	0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, // dlib>.#include <
	0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, // simd/simd.h>..us
	0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, // ing namespace me
	0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, // tal;..struct _Gl
	0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // obal.{.    float
	0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, 0x38, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 4 balls[8];.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, // float4x4 matProj
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x6d, // ;.    float4x4 m
	0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x49, 0x6e, 0x76, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // atProjInv;.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, // loat4 w_h_height
	0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x66, // ;.};..constant f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x38, 0x34, 0x35, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, // loat4 _845 = {};
	0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, // ..struct xlatMtl
	0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // Main_out.{.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, // loat4 bgfx_FragD
	0x61, 0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, // ata0 [[color(0)]
	0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, // ];.};..struct xl
	0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, // atMtlMain_in.{. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, //    float2 v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, // oord0 [[user(loc
	0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, // n0)]];.};..fragm
	0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, // ent xlatMtlMain_
	0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, // out xlatMtlMain(
	0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, // xlatMtlMain_in i
	0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, // n [[stage_in]], 
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, // constant _Global
	0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, // & _mtl_u [[buffe
	0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, // r(0)]], texture2
	0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x66, 0x62, 0x5f, // d<float> tex_fb_
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, // filtered [[textu
	0x72, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // re(0)]], texture
	0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, // 2d<float> tex_bl
	0x6f, 0x6f, 0x6d, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x31, 0x29, // oom [[texture(1)
	0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, // ]], texture2d<fl
	0x6f, 0x61, 0x74, 0x3e, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x20, 0x5b, // oat> tex_depth [
	0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x34, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, // [texture(4)]], s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x66, 0x62, 0x5f, 0x66, 0x69, // ampler tex_fb_fi
	0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, // lteredSampler [[
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, // sampler(0)]], sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x53, // mpler tex_bloomS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ampler [[sampler
	0x28, 0x31, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, // (1)]], sampler t
	0x65, 0x78, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, // ex_depthSampler 
	0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x34, 0x29, 0x5d, 0x5d, 0x29, 0x0a, // [[sampler(4)]]).
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, // {.    xlatMtlMai
	0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, // n_out out = {};.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x38, 0x33, 0x37, 0x3b, //     float4 _837;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, // .    do.    {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x34, 0x39, 0x31, 0x20, 0x3d, //       int _491 =
	0x20, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, //  int(_mtl_u.w_h_
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // height.w);.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x35, 0x31, 0x30, 0x20, 0x3d, //    float4 _510 =
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x49, //  _mtl_u.matProjI
	0x6e, 0x76, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x28, 0x69, 0x6e, 0x2e, // nv * float4((in.
	0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x78, 0x20, 0x2a, 0x20, // v_texcoord0.x * 
	0x32, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, // 2.0) - 1.0, 1.0 
	0x2d, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, // - (in.v_texcoord
	0x30, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x5f, // 0.y * 2.0), tex_
	0x64, 0x65, 0x70, 0x74, 0x68, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, // depth.sample(tex
	0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, // _depthSampler, i
	0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2c, 0x20, 0x6c, // n.v_texcoord0, l
	0x65, 0x76, 0x65, 0x6c, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, // evel(0.0)).x, 1.
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 0);.        floa
	0x74, 0x33, 0x20, 0x5f, 0x35, 0x31, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x35, 0x31, 0x30, 0x2e, 0x78, // t3 _516 = _510.x
	0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x35, 0x31, 0x30, // yz / float3(_510
	0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // .w);.        flo
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x38, 0x31, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // at4 _810;.      
	0x20, 0x20, 0x5f, 0x38, 0x31, 0x30, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x5f, 0x35, 0x31, 0x36, 0x2e, //   _810.x = _516.
	0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, 0x31, 0x30, 0x2e, // x;.        _810.
	0x79, 0x20, 0x3d, 0x20, 0x5f, 0x35, 0x31, 0x36, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // y = _516.y;.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x35, 0x32, 0x32, 0x20, 0x3d, //     float _522 =
	0x20, 0x5f, 0x35, 0x31, 0x36, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _516.z;.       
	0x20, 0x5f, 0x38, 0x31, 0x30, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x5f, 0x35, 0x32, 0x32, 0x3b, 0x0a, //  _810.z = _522;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x35, 0x32, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, // 525 = fast::norm
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x38, 0x31, 0x30, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, // alize(_810.xyz);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // .        float _
	0x35, 0x33, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x62, 0x61, 0x6c, // 536 = _mtl_u.bal
	0x6c, 0x73, 0x5b, 0x30, 0x5d, 0x2e, 0x77, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // ls[0].w * _mtl_u
	0x2e, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, 0x30, 0x5d, 0x2e, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, // .balls[0].w;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x37, 0x33, 0x35, //      float4 _735
	0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x66, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, //  = tex_fb_filter
	0x65, 0x64, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x66, 0x62, // ed.sample(tex_fb
	0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // _filteredSampler
	0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, // , in.v_texcoord0
	0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, // , level(0.0));. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x35, //        float3 _5
	0x34, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x37, 0x33, 0x35, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, // 40 = _735.xyz;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x35, 0x34, //        float _54
	0x33, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x35, 0x32, 0x35, 0x2c, 0x20, 0x5f, 0x6d, // 3 = dot(_525, _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, // tl_u.balls[0].xy
	0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // z);.        floa
	0x74, 0x20, 0x5f, 0x35, 0x35, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x35, 0x34, 0x33, 0x20, 0x2a, // t _553 = (_543 *
	0x20, 0x5f, 0x35, 0x34, 0x33, 0x29, 0x20, 0x2d, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x6d, //  _543) - (dot(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, // tl_u.balls[0].xy
	0x7a, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, // z, _mtl_u.balls[
	0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x35, 0x33, 0x36, 0x29, 0x3b, // 0].xyz) - _536);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // .        float3 
	0x5f, 0x38, 0x33, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, // _839;.        if
	0x20, 0x28, 0x5f, 0x35, 0x35, 0x33, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, //  (_553 < 0.0).  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, 0x33, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x35, 0x34, 0x30, 0x3b, //     _839 = _540;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .        }.     
	0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    else.        
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, // {.            if
	0x20, 0x28, 0x5f, 0x35, 0x32, 0x32, 0x20, 0x3e, 0x20, 0x28, 0x28, 0x5f, 0x35, 0x34, 0x33, 0x20, //  (_522 > ((_543 
	0x2d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x5f, 0x35, 0x35, 0x33, 0x29, 0x29, 0x20, 0x2a, 0x20, // - sqrt(_553)) * 
	0x5f, 0x35, 0x32, 0x35, 0x2e, 0x7a, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _525.z)).       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, 0x33, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x6c, //        _837 = fl
	0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x37, 0x33, 0x35, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x31, // oat4(_735.xyz, 1
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .0);.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //      break;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, 0x33, 0x39, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, //       _839 = tex
	0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, // _bloom.sample(te
	0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // x_bloomSampler, 
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2c, 0x20, // in.v_texcoord0, 
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // level(0.0)).xyz;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .        }.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x38, 0x33, 0x35, 0x3b, 0x0a, //    float3 _835;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, 0x33, 0x35, 0x20, 0x3d, 0x20, 0x5f, //         _835 = _
	0x35, 0x34, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // 540;.        flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x38, 0x34, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // at3 _841;.      
	0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x38, 0x33, 0x34, 0x20, //   for (int _834 
	0x3d, 0x20, 0x31, 0x3b, 0x20, 0x5f, 0x38, 0x33, 0x34, 0x20, 0x3c, 0x20, 0x5f, 0x34, 0x39, 0x31, // = 1; _834 < _491
	0x3b, 0x20, 0x5f, 0x38, 0x33, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x38, 0x34, 0x31, 0x2c, 0x20, 0x5f, // ; _835 = _841, _
	0x38, 0x33, 0x34, 0x2b, 0x2b, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, // 834++).        {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // .            flo
	0x61, 0x74, 0x20, 0x5f, 0x35, 0x39, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, // at _592 = float(
	0x5f, 0x38, 0x33, 0x34, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, // _834) / _mtl_u.w
	0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, // _h_height.w;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, //          float3 
	0x5f, 0x37, 0x35, 0x31, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // _751 = mix(_mtl_
	0x75, 0x2e, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, // u.balls[1].xyz, 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, 0x30, 0x5d, 0x2e, // _mtl_u.balls[0].
	0x78, 0x79, 0x7a, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x35, 0x39, 0x32, // xyz, float3(_592
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ));.            
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x36, 0x30, 0x30, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // float _600 = dot
	0x28, 0x5f, 0x35, 0x32, 0x35, 0x2c, 0x20, 0x5f, 0x37, 0x35, 0x31, 0x29, 0x3b, 0x0a, 0x20, 0x20, // (_525, _751);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //           float 
	0x5f, 0x36, 0x31, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x36, 0x30, 0x30, 0x20, 0x2a, 0x20, 0x5f, // _610 = (_600 * _
	0x36, 0x30, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x37, 0x35, 0x31, // 600) - (dot(_751
	0x2c, 0x20, 0x5f, 0x37, 0x35, 0x31, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x35, 0x33, 0x36, 0x29, 0x3b, // , _751) - _536);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, // .            if 
	0x28, 0x5f, 0x36, 0x31, 0x30, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, // (_610 < 0.0).   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, 0x34, 0x31, 0x20, //            _841 
	0x3d, 0x20, 0x5f, 0x38, 0x33, 0x35, 0x20, 0x2b, 0x20, 0x5f, 0x38, 0x33, 0x39, 0x3b, 0x0a, 0x20, // = _835 + _839;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, //            }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, //          else.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //           {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //             floa
	0x74, 0x33, 0x20, 0x5f, 0x36, 0x32, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x35, 0x32, 0x35, 0x20, // t3 _625 = (_525 
	0x2a, 0x20, 0x28, 0x5f, 0x36, 0x30, 0x30, 0x20, 0x2d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x5f, // * (_600 - sqrt(_
	0x36, 0x31, 0x30, 0x29, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x37, 0x35, 0x31, 0x3b, 0x0a, 0x20, // 610))) - _751;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x36, 0x33, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, // loat4 _635 = _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x20, 0x2a, 0x20, 0x66, 0x6c, // l_u.matProj * fl
	0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x62, 0x61, 0x6c, 0x6c, // oat4(_mtl_u.ball
	0x73, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x5f, 0x36, 0x32, 0x35, 0x2c, // s[1].xyz + _625,
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  1.0);.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x36, //        float4 _6
	0x34, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x50, // 45 = _mtl_u.matP
	0x72, 0x6f, 0x6a, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x6d, 0x74, // roj * float4(_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, // l_u.balls[0].xyz
	0x20, 0x2b, 0x20, 0x5f, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, //  + _625, 1.0);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x36, 0x35, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x36, 0x33, // loat2 _651 = _63
	0x35, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x36, // 5.xy / float2(_6
	0x33, 0x35, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 35.w);.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x36, //        float2 _6
	0x36, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x36, 0x34, 0x35, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, 0x66, // 61 = _645.xy / f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x36, 0x34, 0x35, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, // loat2(_645.w);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //                _
	0x38, 0x34, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x38, 0x33, 0x35, 0x20, 0x2b, 0x20, 0x6d, 0x69, 0x78, // 841 = _835 + mix
	0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // (tex_bloom.sampl
	0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x53, 0x61, 0x6d, 0x70, 0x6c, // e(tex_bloomSampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x29, // er, (float2(0.5)
	0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x36, 0x35, 0x31, 0x2e, //  + (float2(_651.
	0x78, 0x2c, 0x20, 0x2d, 0x5f, 0x36, 0x35, 0x31, 0x2e, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, // x, -_651.y) * 0.
	0x35, 0x29, 0x29, 0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, // 5)), level(0.0))
	0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x66, 0x62, 0x5f, 0x66, 0x69, 0x6c, // .xyz, tex_fb_fil
	0x74, 0x65, 0x72, 0x65, 0x64, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, // tered.sample(tex
	0x5f, 0x66, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x53, 0x61, 0x6d, 0x70, // _fb_filteredSamp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, // ler, (float2(0.5
	0x29, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x36, 0x36, 0x31, // ) + (float2(_661
	0x2e, 0x78, 0x2c, 0x20, 0x2d, 0x5f, 0x36, 0x36, 0x31, 0x2e, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x30, // .x, -_661.y) * 0
	0x2e, 0x35, 0x29, 0x29, 0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x30, 0x2e, 0x30, 0x29, // .5)), level(0.0)
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x35, // ).xyz, float3(_5
	0x39, 0x32, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 92));.          
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, //   }.        }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x38, 0x33, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, //       _837 = flo
	0x61, 0x74, 0x34, 0x28, 0x5f, 0x38, 0x33, 0x35, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // at4(_835 / float
	0x33, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, // 3(_mtl_u.w_h_hei
	0x67, 0x68, 0x74, 0x2e, 0x77, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, // ght.w), 1.0);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, //       break;.   
	0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, //  } while(false);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, // .    out.bgfx_Fr
	0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x38, 0x33, 0x37, 0x3b, 0x0a, // agData0 = _837;.
	0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, //     return out;.
	0x7d, 0x0a, 0x0a, 0x00, 0x00, 0x10, 0x01,                                                       // }......
};
static const uint8_t fs_pp_motionblur_essl[8152] =
{
	0x46, 0x53, 0x48, 0x0b, 0x6f, 0x1e, 0x3e, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc5, 0x1f, // FSH.o.><........
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, // s.#define attrib
	0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, // ute in.#define v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, // arying in.precis
	0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3b, // ion highp float;
	0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // .precision highp
	0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, //  int;.#define sh
	0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adow2D(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //  _coord) texture
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // (_sampler, _coor
	0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, // d).#define shado
	0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // w2DProj(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // , _coord) textur
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // eProj(_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x6f, 0x75, 0x74, 0x20, 0x6d, 0x65, 0x64, 0x69, // _coord).out medi
	0x75, 0x6d, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, // ump vec4 bgfx_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // agColor;.varying
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, //  vec2 v_texcoord
	0x30, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, // 0;.vec3 instMul(
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, // vec3 _vec, mat3 
	0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, // _mtx) { return (
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, //  (_vec) * (_mtx)
	0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, //  ); }.vec3 instM
	0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, // ul(mat3 _mtx, ve
	0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // c3 _vec) { retur
	0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, // n ( (_mtx) * (_v
	0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, // ec) ); }.vec4 in
	0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, // stMul(vec4 _vec,
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, //  mat4 _mtx) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, // turn ( (_vec) * 
	0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // (_mtx) ); }.vec4
	0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, //  instMul(mat4 _m
	0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, // tx, vec4 _vec) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, //  return ( (_mtx)
	0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, //  * (_vec) ); }.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // loat rcp(float _
	0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, // a) { return 1.0/
	0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, // _a; }.vec2 rcp(v
	0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ec2 _a) { return
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, //  vec2(1.0)/_a; }
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // .vec3 rcp(vec3 _
	0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, // a) { return vec3
	0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, // (1.0)/_a; }.vec4
	0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, //  rcp(vec4 _a) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, // return vec4(1.0)
	0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, // /_a; }.vec2 vec2
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, // _splat(float _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, //  { return vec2(_
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // x, _x); }.vec3 v
	0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ec3_splat(float 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _x) { return vec
	0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // 3(_x, _x, _x); }
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // .vec4 vec4_splat
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // (float _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // urn vec4(_x, _x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, //  _x, _x); }.uvec
	0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, // 2 uvec2_splat(ui
	0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // nt _x) { return 
	0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // uvec2(_x, _x); }
	0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, // .uvec3 uvec3_spl
	0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // at(uint _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // turn uvec3(_x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, // x, _x); }.uvec4 
	0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec4_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, //  _x) { return uv
	0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, // ec4(_x, _x, _x, 
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, // _x); }.mat4 mtxF
	0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, // romRows(vec4 _0,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, //  vec4 _1, vec4 _
	0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 2, vec4 _3).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, // turn transpose(m
	0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, // at4(_0, _1, _2, 
	0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, // _3) );.}.mat4 mt
	0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // xFromCols(vec4 _
	0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // 0, vec4 _1, vec4
	0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, //  _2, vec4 _3).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, // return mat4(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, // _1, _2, _3);.}.m
	0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, // at3 mtxFromRows(
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, // vec3 _0, vec3 _1
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // , vec3 _2).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, // urn transpose(ma
	0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, // t3(_0, _1, _2) )
	0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, // ;.}.mat3 mtxFrom
	0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, // Cols(vec3 _0, ve
	0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, // c3 _1, vec3 _2).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, // {.return mat3(_0
	0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, // , _1, _2);.}.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, // form vec4 u_view
	0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // Rect;.uniform ve
	0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, // c4 u_viewTexel;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, // uniform mat4 u_v
	0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, // iew;.uniform mat
	0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // 4 u_invView;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, // form mat4 u_proj
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // _invProj;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, // m mat4 u_viewPro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, // u_invViewProj;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, // niform mat4 u_mo
	0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // del[32];.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, //  mat4 u_modelVie
	0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // w;.uniform mat4 
	0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, // u_modelViewProj;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, // .uniform vec4 u_
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // alphaRef4;.float
	0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, //  sqr( float v).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // .return v*v;.}.v
	0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, // ec2 sqr( vec2 v)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, // .{.return v*v;.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // .vec3 sqr( vec3 
	0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, // v).{.return v*v;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x20, // .}.vec3 mul_w1( 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, // vec3 v, mat4 m).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, // {.return v.x*m[0
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, // ].xyz + (v.y*m[1
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, // ].xyz + (v.z*m[2
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, // ].xyz + m[3].xyz
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, // ));.}.float acos
	0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, // _approx_divPI( f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // loat v).{.float 
	0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, // x = abs(v);.if(1
	0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, // . - x <= 0.00006
	0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // 103515625).retur
	0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, // n (v >= 0.) ? 0.
	0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, //  : 1.;.float res
	0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, //  = ((-0.155972/3
	0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, // .141592653589793
	0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, // 2384626433832795
	0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, // ) * x + (1.56467
	0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, // /3.1415926535897
	0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, // 9323846264338327
	0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, // 95) ) * sqrt(1. 
	0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, // - x);.return (v 
	0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, // >= 0.) ? res : 1
	0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // . - res;.}.float
	0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, //  atan2_approx_di
	0x76, 0x32, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x66, // v2PI( float y, f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // loat x).{.float 
	0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, // abs_y = abs(y);.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, // float abs_x = ab
	0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, // s(x);.if(abs_x <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, // = 0.000061035156
	0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, // 25 && abs_y <= 0
	0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, // .00006103515625)
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // .return 0.;.floa
	0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, // t r = (abs_x - a
	0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, // bs_y) / (abs_x +
	0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, //  abs_y);.float a
	0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, // ngle = ((x < 0.)
	0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, //  ? (3./8.) : (1.
	0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, // /8.)).+ (0.21186
	0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, // 8 /(2.*3.1415926
	0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, // 5358979323846264
	0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, // 33832795) * r * 
	0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, // r - 0.987305 /(2
	0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, // .*3.141592653589
	0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, // 7932384626433832
	0x37, 0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, // 795)) * ((x < 0.
	0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // ) ? -r : r);.ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, // urn (y < 0.) ? -
	0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, // angle : angle;.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, // .float asin_appr
	0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ox_divPI( float 
	0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, // v).{.float x = a
	0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, // bs(v);.if(1. - x
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, //  <= 0.0000610351
	0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, // 5625).return (v 
	0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, // >= 0.) ? 0.5 : -
	0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, // 0.5;.float res =
	0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, //  ((-0.155972/3.1
	0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, // 4159265358979323
	0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, // 84626433832795) 
	0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, // * x + (1.56467/3
	0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, // .141592653589793
	0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, // 2384626433832795
	0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, // ) ) * sqrt(1. - 
	0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, // x);.return (v >=
	0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, //  0.) ? 0.5 - res
	0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, //  : -0.5 + res;.}
	0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, // .vec2 ray_to_equ
	0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, // irectangular_uv(
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, //  vec3 ray).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, // urn vec2(.0.5 + 
	0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, // atan2_approx_div
	0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, // 2PI(ray.y, ray.x
	0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, // ),.acos_approx_d
	0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // ivPI(ray.z));.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, // float InvsRGB( f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, // loat color).{.if
	0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, //  (color <= 0.040
	0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // 45).return color
	0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, //  * (1.0/12.92);.
	0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, // else.return pow(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, // color * (1.0/1.0
	0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, // 55) + (0.055/1.0
	0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // 55), 2.4);.}.flo
	0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, // at InvRec709( fl
	0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, // oat color).{.if 
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, // (color <= 0.081)
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, // .return color * 
	0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, // (1.0/4.5);.else.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // return pow(color
	0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, //  * (1.0/1.099) +
	0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, //  (0.099/1.099), 
	0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // 1.0/0.45);.}.flo
	0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, // at InvGamma( flo
	0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // at color).{.retu
	0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // rn InvsRGB(color
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // );.}.vec3 InvGam
	0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // ma( vec3 color).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, // {.return vec3(In
	0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, // vGamma(color.x),
	0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, // InvGamma(color.y
	0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // ),InvGamma(color
	0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, // .z));.}.vec3 Inv
	0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, // ToneMap( vec3 co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, // lor).{.float inv
	0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, // _2bh = 0.5/0.25;
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, // .float bh = 4.0*
	0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 0.25 - 2.0;.retu
	0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, // rn (color - 1.0 
	0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, // + sqrt(color*(co
	0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // lor + bh) + 1.0)
	0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // )*inv_2bh;.}.flo
	0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, // at sRGB( float f
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, // ).{.float s;.if 
	0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, // (f <= 0.0031308)
	0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, // .s = 12.92 * f;.
	0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, // else.s = 1.055 *
	0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, //  pow(f, 1.0/2.4)
	0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  - 0.055;.return
	0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, //  s;.}.float Rec7
	0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, // 09( float f).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, // loat s;.if (f <=
	0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, //  0.018).s = 4.5 
	0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, // * f;.else.s = 1.
	0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, // 099 * pow(f, 0.4
	0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 5) - 0.099;.retu
	0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, // rn s;.}.float FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, // Gamma( float col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, // or).{.return sRG
	0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, // B(color);.}.vec2
	0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, //  FBGamma( vec2 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // olor).{.return v
	0x65, 0x63, 0x32, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // ec2(FBGamma(colo
	0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, // r.x),FBGamma(col
	0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, // or.y));.}.vec3 F
	0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, // BGamma( vec3 col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // or).{.return vec
	0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // 3(FBGamma(color.
	0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // x),FBGamma(color
	0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // .y),FBGamma(colo
	0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, // r.z));.}.vec3 FB
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, // Gamma22( vec3 co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, // lor).{.return ve
	0x63, 0x33, 0x28, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, 0x20, // c3(pow(color.x, 
	0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, // 1.0/2.2),pow(col
	0x6f, 0x72, 0x2e, 0x79, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, // or.y, 1.0/2.2),p
	0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, // ow(color.z, 1.0/
	0x32, 0x2e, 0x32, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, // 2.2));.}.float F
	0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // BToneMap( float 
	0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, // l).{.return l * 
	0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, // ((l*0.25 + 1.0) 
	0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // / (l + 1.0));.}.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, // vec2 FBToneMap( 
	0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, // vec2 color).{.fl
	0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // oat l = dot(colo
	0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, // r,vec2(0.176204+
	0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, // 0.0108109*0.5,0.
	0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, // 812985+0.0108109
	0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, // *0.5));.return c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, // olor * ((l*0.25 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, // + 1.0) / (l + 1.
	0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, // 0));.}.vec3 FBTo
	0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // neMap( vec3 colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, // r).{.float l = d
	0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, // ot(color,vec3(0.
	0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, // 176204,0.812985,
	0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // 0.0108109));.ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, // urn color * ((l*
	0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, // 0.25 + 1.0) / (l
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, //  + 1.0));.}.vec4
	0x20, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, //  Additive( vec4 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, // cBase, vec4 cBle
	0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, // nd, float percen
	0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, // t).{.return cBas
	0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, // e + cBlend*perce
	0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, // nt;.}.vec3 Scree
	0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, // n ( vec3 cBase, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // vec3 cBlend).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, // eturn 1.0 - (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, //  - cBase) * (1.0
	0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, //  - cBlend);.}.ve
	0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, // c4 Screen ( vec4
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, //  cBase, vec4 cBl
	0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, // end).{.return 1.
	0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // 0 - (1.0 - cBase
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // ) * (1.0 - cBlen
	0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, // d);.}.vec3 Scree
	0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, // nHDR ( vec3 cBas
	0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, // e, vec3 cBlend).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, // {.return max(1.0
	0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, //  - (1.0 - cBase)
	0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, //  * (1.0 - cBlend
	0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, // ), vec3(0.,0.,0.
	0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, // ));.}.vec4 Scree
	0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, // nHDR ( vec4 cBas
	0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, // e, vec4 cBlend).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, // {.return max(1.0
	0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, //  - (1.0 - cBase)
	0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, //  * (1.0 - cBlend
	0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, // ), vec4(0.,0.,0.
	0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, // ,0.));.}.vec4 Mu
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // ltiply ( vec4 cB
	0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // ase, vec4 cBlend
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, // , float percent)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, // .{.return cBase 
	0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, // * cBlend*percent
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, // ;.}.vec4 Overlay
	0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, //  ( vec4 cBase, v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, // ec4 cBlend).{.ve
	0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, // c4 cNew = step(0
	0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, // .5, cBase);.cNew
	0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, //  = mix(cBase*cBl
	0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, // end*2.0, 1.0-2.0
	0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, // *(1.0-cBase)*(1.
	0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, // 0-cBlend), cNew)
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, // ;.return cNew;.}
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, // .vec4 OverlayHDR
	0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, //  ( vec4 cBase, v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, // ec4 cBlend).{.ve
	0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, // c4 cNew = step(0
	0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, // .5, cBase);.cNew
	0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, //  = max(mix(cBase
	0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, // *cBlend*2.0, 1.0
	0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, // -2.0*(1.0-cBase)
	0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, // *(1.0-cBlend), c
	0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, // New), vec4(0.,0.
	0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ,0.,0.));.return
	0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, //  cNew;.}.vec3 co
	0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, // s_hemisphere_sam
	0x70, 0x6c, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x66, // ple( vec2 t).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, // loat phi = t.y *
	0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, //  (2.0*3.14159265
	0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, // 3589793238462643
	0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 3832795);.float 
	0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, // cosTheta = sqrt(
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // 1.0 - t.x);.floa
	0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, // t sinTheta = sqr
	0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, // t(t.x);.float sp
	0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x7b, 0x73, 0x70, 0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, 0x69, // ,cp;.{sp=sin(phi
	0x29, 0x3b, 0x63, 0x70, 0x3d, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, 0x3b, // );cp=cos(phi);};
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, // .return vec3(cp 
	0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, // * sinTheta, cosT
	0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, // heta, sp * sinTh
	0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, // eta);.}.vec3 rot
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, // ate_to_vector_up
	0x70, 0x65, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x76, // per( vec3 vec, v
	0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, // ec3 normal).{.if
	0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, // (normal.y > -0.9
	0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, // 9999).{.float h 
	0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // = 1.0/(1.0+norma
	0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, // l.y);.float hz =
	0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, //  h*normal.z;.flo
	0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, // at hzx = hz*norm
	0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // al.x;.return vec
	0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, // 3(.vec.x * (norm
	0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, // al.y+hz*normal.z
	0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // ) + vec.y * norm
	0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, // al.x - vec.z * h
	0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // zx,.vec.y * norm
	0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, // al.y - vec.x * n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, // ormal.x - vec.z 
	0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, // * normal.z,.vec.
	0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, // y * normal.z - v
	0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, // ec.x * hzx + vec
	0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, // .z * (normal.y+h
	0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // *normal.x*normal
	0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, // .x));.}.else ret
	0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, // urn -vec;.}.unif
	0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, 0x38, // orm vec4 balls[8
	0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // ];.uniform mat4 
	0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // matProj;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x49, 0x6e, 0x76, //  mat4 matProjInv
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x77, // ;.uniform vec4 w
	0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // _h_height;.unifo
	0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, // rm sampler2D tex
	0x5f, 0x66, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x3b, 0x0a, 0x75, 0x6e, // _fb_filtered;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, // iform sampler2D 
	0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // tex_bloom;.unifo
	0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, // rm sampler2D tex
	0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, // _depth;.void mai
	0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x6e, 0x74, 0x20, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, // n().{.int nSampl
	0x65, 0x73, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x74, 0x28, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, // es = int((w_h_he
	0x69, 0x67, 0x68, 0x74, 0x2e, 0x77, 0x29, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, // ight.w));.vec2 s
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x55, 0x56, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x76, // creenUV = vec2(v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, // _texcoord0.x, 1.
	0x20, 0x2d, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x79, //  - v_texcoord0.y
	0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x44, // );.float screenD
	0x65, 0x70, 0x74, 0x68, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, // epth = textureLo
	0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x2c, 0x20, 0x73, 0x63, 0x72, // d(tex_depth, scr
	0x65, 0x65, 0x6e, 0x55, 0x56, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x20, 0x2a, 0x20, // eenUV, 0.0).x * 
	0x32, 0x2e, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x72, // 2. - 1.;.vec4 pr
	0x6f, 0x6a, 0x50, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x76, 0x5f, 0x74, // ojPos = vec4(v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x20, // excoord0.x * 2. 
	0x2d, 0x20, 0x31, 0x2e, 0x2c, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, // - 1., 1. - v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x2c, 0x20, 0x73, // coord0.y * 2., s
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x44, 0x65, 0x70, 0x74, 0x68, 0x2c, 0x20, 0x31, 0x2e, 0x29, 0x3b, // creenDepth, 1.);
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x20, 0x3d, // .vec4 pixelPos =
	0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x49, 0x6e, 0x76, 0x29, 0x20, //  ( (matProjInv) 
	0x2a, 0x20, 0x28, 0x70, 0x72, 0x6f, 0x6a, 0x50, 0x6f, 0x73, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x70, // * (projPos) );.p
	0x69, 0x78, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x70, 0x69, // ixelPos.xyz = pi
	0x78, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x70, 0x69, 0x78, // xelPos.xyz / pix
	0x65, 0x6c, 0x50, 0x6f, 0x73, 0x2e, 0x77, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, // elPos.w;.vec3 ra
	0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, // yDirection = nor
	0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x2e, // malize(pixelPos.
	0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // xyz);.vec3 ball_
	0x70, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, 0x30, 0x5d, 0x2e, 0x78, // pos = balls[0].x
	0x79, 0x7a, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x62, 0x61, // yz;.vec3 prev_ba
	0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, 0x31, // ll_pos = balls[1
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x61, 0x6c, // ].xyz;.float bal
	0x6c, 0x5f, 0x72, 0x32, 0x20, 0x3d, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, 0x30, 0x5d, 0x2e, // l_r2 = balls[0].
	0x77, 0x20, 0x2a, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, 0x30, 0x5d, 0x2e, 0x77, 0x3b, 0x0a, // w * balls[0].w;.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, // vec3 color = tex
	0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x66, 0x62, 0x5f, 0x66, // tureLod(tex_fb_f
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x2c, 0x20, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x55, // iltered, screenU
	0x56, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x76, 0x65, 0x63, // V, 0.0).rgb;.vec
	0x33, 0x20, 0x6e, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, // 3 noIntersectCol
	0x6f, 0x72, 0x3b, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x20, 0x3d, 0x20, // or;.{.float b = 
	0x64, 0x6f, 0x74, 0x28, 0x72, 0x61, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, // dot(rayDirection
	0x2c, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, // , ball_pos);.flo
	0x61, 0x74, 0x20, 0x63, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // at c = dot(ball_
	0x70, 0x6f, 0x73, 0x2c, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x29, 0x20, 0x2d, // pos, ball_pos) -
	0x20, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x72, 0x32, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //  ball_r2;.float 
	0x64, 0x65, 0x74, 0x20, 0x3d, 0x20, 0x62, 0x20, 0x2a, 0x20, 0x62, 0x20, 0x2d, 0x20, 0x63, 0x3b, // det = b * b - c;
	0x0a, 0x69, 0x66, 0x20, 0x28, 0x64, 0x65, 0x74, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, // .if (det < 0.0) 
	0x7b, 0x0a, 0x6e, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, // {.noIntersectCol
	0x6f, 0x72, 0x20, 0x3d, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x20, 0x65, 0x6c, // or = color;.} el
	0x73, 0x65, 0x20, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, // se {.float inter
	0x73, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x5f, 0x7a, 0x20, 0x3d, 0x20, 0x28, 0x62, 0x20, // sect_pos_z = (b 
	0x2d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x64, 0x65, 0x74, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x72, // - sqrt(det)) * r
	0x61, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x7a, 0x3b, 0x0a, 0x69, // ayDirection.z;.i
	0x66, 0x20, 0x28, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x2e, 0x7a, 0x20, 0x3e, 0x20, // f (pixelPos.z > 
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x5f, 0x7a, 0x29, // intersect_pos_z)
	0x0a, 0x7b, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, // .{.bgfx_FragColo
	0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, // r = vec4(color, 
	0x31, 0x2e, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x3b, 0x0a, 0x7d, 0x0a, 0x6e, // 1.);.return;.}.n
	0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // oIntersectColor 
	0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, // = textureLod(tex
	0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x2c, 0x20, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x55, 0x56, // _bloom, screenUV
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x7d, 0x0a, // , 0.0).rgb;.}.}.
	0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, 0x31, 0x3b, 0x20, // for (int i = 1; 
	0x69, 0x20, 0x3c, 0x20, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x3b, 0x20, 0x69, 0x2b, // i < nSamples; i+
	0x2b, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x69, 0x78, 0x5f, 0x70, // +).{.float mix_p
	0x6f, 0x73, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x69, 0x29, 0x20, 0x2f, 0x20, // os = float(i) / 
	0x28, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x77, 0x29, 0x3b, 0x0a, // (w_h_height.w);.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // vec3 sample_ball
	0x5f, 0x70, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x70, 0x72, 0x65, 0x76, 0x5f, // _pos = mix(prev_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, // ball_pos, ball_p
	0x6f, 0x73, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x5f, 0x70, 0x6f, 0x73, 0x29, 0x3b, 0x0a, 0x66, 0x6c, // os, mix_pos);.fl
	0x6f, 0x61, 0x74, 0x20, 0x62, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x72, 0x61, 0x79, 0x44, // oat b = dot(rayD
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // irection, sample
	0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // _ball_pos);.floa
	0x74, 0x20, 0x63, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // t c = dot(sample
	0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, // _ball_pos, sampl
	0x65, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x29, 0x20, 0x2d, 0x20, 0x62, 0x61, // e_ball_pos) - ba
	0x6c, 0x6c, 0x5f, 0x72, 0x32, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x65, 0x74, // ll_r2;.float det
	0x20, 0x3d, 0x20, 0x62, 0x20, 0x2a, 0x20, 0x62, 0x20, 0x2d, 0x20, 0x63, 0x3b, 0x0a, 0x69, 0x66, //  = b * b - c;.if
	0x20, 0x28, 0x64, 0x65, 0x74, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7b, 0x0a, 0x63, //  (det < 0.0) {.c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x6e, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x73, // olor += noInters
	0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, // ectColor;.} else
	0x20, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, //  {.vec3 intersec
	0x74, 0x5f, 0x6f, 0x66, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x62, 0x20, 0x2d, 0x20, 0x73, 0x71, 0x72, // t_ofs = (b - sqr
	0x74, 0x28, 0x64, 0x65, 0x74, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x61, 0x79, 0x44, 0x69, 0x72, // t(det)) * rayDir
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x2d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, // ection - sample_
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, // ball_pos;.vec4 p
	0x72, 0x65, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, // rev_proj = ( (ma
	0x74, 0x50, 0x72, 0x6f, 0x6a, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x70, // tProj) * (vec4(p
	0x72, 0x65, 0x76, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x20, 0x2b, 0x20, 0x69, // rev_ball_pos + i
	0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x5f, 0x6f, 0x66, 0x73, 0x2c, 0x20, 0x31, 0x2e, // ntersect_ofs, 1.
	0x30, 0x29, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x75, 0x72, 0x5f, // 0)) );.vec4 cur_
	0x70, 0x72, 0x6f, 0x6a, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, // proj = ( (matPro
	0x6a, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // j) * (vec4(ball_
	0x70, 0x6f, 0x73, 0x20, 0x2b, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x5f, // pos + intersect_
	0x6f, 0x66, 0x73, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x70, 0x72, // ofs, 1.0)) );.pr
	0x65, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x3d, 0x20, 0x70, 0x72, // ev_proj.xy /= pr
	0x65, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x77, 0x3b, 0x0a, 0x63, 0x75, 0x72, 0x5f, 0x70, // ev_proj.w;.cur_p
	0x72, 0x6f, 0x6a, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x3d, 0x20, 0x63, 0x75, 0x72, 0x5f, 0x70, 0x72, // roj.xy /= cur_pr
	0x6f, 0x6a, 0x2e, 0x77, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x72, 0x65, 0x76, 0x5f, // oj.w;.vec3 prev_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // sample = texture
	0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x2c, 0x20, 0x76, // Lod(tex_bloom, v
	0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, // ec2_splat(0.5) +
	0x20, 0x30, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x6a, //  0.5 * prev_proj
	0x2e, 0x78, 0x79, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x76, // .xy, 0.0).rgb;.v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x75, 0x72, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x20, 0x3d, // ec3 cur_sample =
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, //  textureLod(tex_
	0x66, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x2c, 0x20, 0x76, 0x65, 0x63, // fb_filtered, vec
	0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x30, // 2_splat(0.5) + 0
	0x2e, 0x35, 0x20, 0x2a, 0x20, 0x63, 0x75, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x78, 0x79, // .5 * cur_proj.xy
	0x20, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, //  , 0.0).rgb;.col
	0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x73, // or += mix(prev_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2c, 0x20, 0x63, 0x75, 0x72, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // ample, cur_sampl
	0x65, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x5f, 0x70, 0x6f, 0x73, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x7d, // e, mix_pos);.}.}
	0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // .bgfx_FragColor 
	0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2f, 0x20, 0x28, // = vec4(color / (
	0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x77, 0x29, 0x2c, 0x20, 0x31, // w_h_height.w), 1
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,                                                 // .0);.}..
};
static const uint8_t fs_pp_motionblur_glsl[8520] =
{
	0x46, 0x53, 0x48, 0x0b, 0x6f, 0x1e, 0x3e, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x35, 0x21, // FSH.o.><......5!
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x6f, // ..#version 440.o
	0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, // ut vec4 bgfx_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // gColor;.#define 
	0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x62, 0x67, 0x66, // gl_FragColor bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x0a, 0x23, 0x64, 0x65, 0x66, // x_FragColor.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x20, 0x20, // ine texture2D   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, //        texture.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // Lod       textur
	0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, // eLod.#define tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ture2DGrad      
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, // textureGrad.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, // ine texture2DPro
	0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, // jLod   texturePr
	0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // ojLod.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, // xture2DProjGrad 
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, //  textureProjGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // CubeLod     text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, // ureLod.#define t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, // extureCubeGrad  
	0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, //   textureGrad.#d
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, // efine texture3D 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //          texture
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, 0x65, 0x78, 0x74, // 2DLodOffset text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, // ureLodOffset.#de
	0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, // fine attribute i
	0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // n.#define varyin
	0x67, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, // g in.#define bgf
	0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // xShadow2D(_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, // er, _coord)     
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // vec4_splat(textu
	0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // re(_sampler, _co
	0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, // ord) ).#define b
	0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, // gfxShadow2DProj(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, // ) vec4_splat(tex
	0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // tureProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x76, 0x61, 0x72, // r, _coord) ).var
	0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // ying vec2 v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, // oord0;.vec3 inst
	0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, // Mul(vec3 _vec, m
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // at3 _mtx) { retu
	0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, // rn ( (_vec) * (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, // mtx) ); }.vec3 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, // nstMul(mat3 _mtx
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, // , vec3 _vec) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, // eturn ( (_mtx) *
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, //  (_vec) ); }.vec
	0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // 4 instMul(vec4 _
	0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, // vec, mat4 _mtx) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, // { return ( (_vec
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // ) * (_mtx) ); }.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, // vec4 instMul(mat
	0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, // 4 _mtx, vec4 _ve
	0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, // c) { return ( (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, // mtx) * (_vec) );
	0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, //  }.float rcp(flo
	0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // at _a) { return 
	0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, // 1.0/_a; }.vec2 r
	0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // cp(vec2 _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, // turn vec2(1.0)/_
	0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, // a; }.vec3 rcp(ve
	0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c3 _a) { return 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, // vec3(1.0)/_a; }.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, // vec4 rcp(vec4 _a
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // ) { return vec4(
	0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // 1.0)/_a; }.vec2 
	0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // vec2_splat(float
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, //  _x) { return ve
	0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, // c2(_x, _x); }.ve
	0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, // c3 vec3_splat(fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // oat _x) { return
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, //  vec3(_x, _x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, // ); }.vec4 vec4_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // plat(float _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, //  return vec4(_x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, //  _x, _x, _x); }.
	0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, // uvec2 uvec2_spla
	0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // t(uint _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // urn uvec2(_x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, // ); }.uvec3 uvec3
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // _splat(uint _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, // { return uvec3(_
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, // x, _x, _x); }.uv
	0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // ec4 uvec4_splat(
	0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // uint _x) { retur
	0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, // n uvec4(_x, _x, 
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, // _x, _x); }.mat4 
	0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, // mtxFromRows(vec4
	0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, //  _0, vec4 _1, ve
	0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, // c4 _2, vec4 _3).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, // {.return transpo
	0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, // se(mat4(_0, _1, 
	0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, // _2, _3) );.}.mat
	0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, // 4 mtxFromCols(ve
	0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, // c4 _0, vec4 _1, 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, // vec4 _2, vec4 _3
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, // ).{.return mat4(
	0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, // _0, _1, _2, _3);
	0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, // .}.mat3 mtxFromR
	0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, // ows(vec3 _0, vec
	0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, // 3 _1, vec3 _2).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, // .return transpos
	0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, // e(mat3(_0, _1, _
	0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, // 2) );.}.mat3 mtx
	0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, // FromCols(vec3 _0
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // , vec3 _1, vec3 
	0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, // _2).{.return mat
	0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, // 3(_0, _1, _2);.}
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, // .uniform vec4 u_
	0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // viewRect;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, // m vec4 u_viewTex
	0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // el;.uniform mat4
	0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, //  u_view;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, //  mat4 u_invView;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // proj;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, // t4 u_invProj;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // iform mat4 u_vie
	0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // wProj;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, // at4 u_invViewPro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // u_model[32];.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, // form mat4 u_mode
	0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // lView;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, // at4 u_modelViewP
	0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, // roj;.uniform vec
	0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, // 4 u_alphaRef4;.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // loat sqr( float 
	0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, // v).{.return v*v;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, // .}.vec2 sqr( vec
	0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, // 2 v).{.return v*
	0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, // v;.}.vec3 sqr( v
	0x65, 0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // ec3 v).{.return 
	0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, // v*v;.}.vec3 mul_
	0x77, 0x31, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, // w1( vec3 v, mat4
	0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, //  m).{.return v.x
	0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, // *m[0].xyz + (v.y
	0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, // *m[1].xyz + (v.z
	0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, // *m[2].xyz + m[3]
	0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // .xyz));.}.float 
	0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, // acos_approx_divP
	0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, // I( float v).{.fl
	0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, // oat x = abs(v);.
	0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, // if(1. - x <= 0.0
	0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, // 0006103515625).r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, // eturn (v >= 0.) 
	0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ? 0. : 1.;.float
	0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, //  res = ((-0.1559
	0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, // 72/3.14159265358
	0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, // 9793238462643383
	0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, // 2795) * x + (1.5
	0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, // 6467/3.141592653
	0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, // 5897932384626433
	0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, // 832795) ) * sqrt
	0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // (1. - x);.return
	0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, //  (v >= 0.) ? res
	0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, //  : 1. - res;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, // loat atan2_appro
	0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // x_div2PI( float 
	0x79, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, // y, float x).{.fl
	0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, // oat abs_y = abs(
	0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, // y);.float abs_x 
	0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, // = abs(x);.if(abs
	0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, // _x <= 0.00006103
	0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, // 515625 && abs_y 
	0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, // <= 0.00006103515
	0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, // 625).return 0.;.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, // float r = (abs_x
	0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, //  - abs_y) / (abs
	0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, // _x + abs_y);.flo
	0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, // at angle = ((x <
	0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, //  0.) ? (3./8.) :
	0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, //  (1./8.)).+ (0.2
	0x31, 0x31, 0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, // 11868 /(2.*3.141
	0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, // 5926535897932384
	0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, // 626433832795) * 
	0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, // r * r - 0.987305
	0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, //  /(2.*3.14159265
	0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, // 3589793238462643
	0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, // 3832795)) * ((x 
	0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, // < 0.) ? -r : r);
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, // .return (y < 0.)
	0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, //  ? -angle : angl
	0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, // e;.}.float asin_
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, // approx_divPI( fl
	0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, // oat v).{.float x
	0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, //  = abs(v);.if(1.
	0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, //  - x <= 0.000061
	0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 03515625).return
	0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, //  (v >= 0.) ? 0.5
	0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, //  : -0.5;.float r
	0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, // es = ((-0.155972
	0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, // /3.1415926535897
	0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, // 9323846264338327
	0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, // 95) * x + (1.564
	0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, // 67/3.14159265358
	0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, // 9793238462643383
	0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, // 2795) ) * sqrt(1
	0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, // . - x);.return (
	0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, // v >= 0.) ? 0.5 -
	0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, //  res : -0.5 + re
	0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, // s;.}.vec2 ray_to
	0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, // _equirectangular
	0x5f, 0x75, 0x76, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, // _uv( vec3 ray).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, // .return vec2(.0.
	0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, // 5 + atan2_approx
	0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, // _div2PI(ray.y, r
	0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, // ay.x),.acos_appr
	0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, // ox_divPI(ray.z))
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, // ;.}.float InvsRG
	0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // B( float color).
	0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, // {.if (color <= 0
	0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, // .04045).return c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, // olor * (1.0/12.9
	0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // 2);.else.return 
	0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, // pow(color * (1.0
	0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, // /1.055) + (0.055
	0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, // /1.055), 2.4);.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, // .float InvRec709
	0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, // ( float color).{
	0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, // .if (color <= 0.
	0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // 081).return colo
	0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, // r * (1.0/4.5);.e
	0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, // lse.return pow(c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, // olor * (1.0/1.09
	0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, // 9) + (0.099/1.09
	0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, // 9), 1.0/0.45);.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, // .float InvGamma(
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, //  float color).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, // return InvsRGB(c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, // olor);.}.vec3 In
	0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, // vGamma( vec3 col
	0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // or).{.return vec
	0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // 3(InvGamma(color
	0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, // .x),InvGamma(col
	0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, // or.y),InvGamma(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // olor.z));.}.vec3
	0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, //  InvToneMap( vec
	0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 3 color).{.float
	0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, //  inv_2bh = 0.5/0
	0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, // .25;.float bh = 
	0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, // 4.0*0.25 - 2.0;.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, // return (color - 
	0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // 1.0 + sqrt(color
	0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, // *(color + bh) + 
	0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, // 1.0))*inv_2bh;.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, // .float sRGB( flo
	0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, // at f).{.float s;
	0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, // .if (f <= 0.0031
	0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, // 308).s = 12.92 *
	0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, //  f;.else.s = 1.0
	0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, // 55 * pow(f, 1.0/
	0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, // 2.4) - 0.055;.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // turn s;.}.float 
	0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, // Rec709( float f)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, // .{.float s;.if (
	0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, // f <= 0.018).s = 
	0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, // 4.5 * f;.else.s 
	0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, // = 1.099 * pow(f,
	0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, //  0.45) - 0.099;.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // return s;.}.floa
	0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // t FBGamma( float
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  color).{.return
	0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, //  sRGB(color);.}.
	0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, // vec2 FBGamma( ve
	0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // c2 color).{.retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, // rn vec2(FBGamma(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, // color.x),FBGamma
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // (color.y));.}.ve
	0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, // c3 FBGamma( vec3
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  color).{.return
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, //  vec3(FBGamma(co
	0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, // lor.x),FBGamma(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, // olor.y),FBGamma(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // color.z));.}.vec
	0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, // 3 FBGamma22( vec
	0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // 3 color).{.retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // n vec3(pow(color
	0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, // .x, 1.0/2.2),pow
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, // (color.y, 1.0/2.
	0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x2c, 0x20, // 2),pow(color.z, 
	0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // 1.0/2.2));.}.flo
	0x61, 0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x66, 0x6c, // at FBToneMap( fl
	0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // oat l).{.return 
	0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, // l * ((l*0.25 + 1
	0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, // .0) / (l + 1.0))
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, // ;.}.vec2 FBToneM
	0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, // ap( vec2 color).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, // {.float l = dot(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, // color,vec2(0.176
	0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, // 204+0.0108109*0.
	0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, // 5,0.812985+0.010
	0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 8109*0.5));.retu
	0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, // rn color * ((l*0
	0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, // .25 + 1.0) / (l 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // + 1.0));.}.vec3 
	0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // FBToneMap( vec3 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, // color).{.float l
	0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, //  = dot(color,vec
	0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, // 3(0.176204,0.812
	0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, // 985,0.0108109));
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, // .return color * 
	0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, // ((l*0.25 + 1.0) 
	0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // / (l + 1.0));.}.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x20, 0x76, // vec4 Additive( v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // ec4 cBase, vec4 
	0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, // cBlend, float pe
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // rcent).{.return 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, // cBase + cBlend*p
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, // ercent;.}.vec3 S
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, // creen ( vec3 cBa
	0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // se, vec3 cBlend)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // .{.return 1.0 - 
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, // (1.0 - cBase) * 
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, // (1.0 - cBlend);.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, // }.vec4 Screen ( 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // vec4 cBase, vec4
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  cBlend).{.retur
	0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, // n 1.0 - (1.0 - c
	0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, // Base) * (1.0 - c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, // Blend);.}.vec3 S
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // creenHDR ( vec3 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, // cBase, vec3 cBle
	0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, // nd).{.return max
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, // (1.0 - (1.0 - cB
	0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, // ase) * (1.0 - cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, // lend), vec3(0.,0
	0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, // .,0.));.}.vec4 S
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // creenHDR ( vec4 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, // cBase, vec4 cBle
	0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, // nd).{.return max
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, // (1.0 - (1.0 - cB
	0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, // ase) * (1.0 - cB
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, // lend), vec4(0.,0
	0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // .,0.,0.));.}.vec
	0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, // 4 Multiply ( vec
	0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // 4 cBase, vec4 cB
	0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, // lend, float perc
	0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, // ent).{.return cB
	0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, // ase * cBlend*per
	0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, // cent;.}.vec4 Ove
	0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, // rlay ( vec4 cBas
	0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, // e, vec4 cBlend).
	0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, // {.vec4 cNew = st
	0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, // ep(0.5, cBase);.
	0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, // cNew = mix(cBase
	0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, // *cBlend*2.0, 1.0
	0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, // -2.0*(1.0-cBase)
	0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, // *(1.0-cBlend), c
	0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, // New);.return cNe
	0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, // w;.}.vec4 Overla
	0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, // yHDR ( vec4 cBas
	0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, // e, vec4 cBlend).
	0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, // {.vec4 cNew = st
	0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, // ep(0.5, cBase);.
	0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, // cNew = max(mix(c
	0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, // Base*cBlend*2.0,
	0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, //  1.0-2.0*(1.0-cB
	0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // ase)*(1.0-cBlend
	0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, // ), cNew), vec4(0
	0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, // .,0.,0.,0.));.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // turn cNew;.}.vec
	0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, // 3 cos_hemisphere
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, // _sample( vec2 t)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, // .{.float phi = t
	0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, // .y * (2.0*3.1415
	0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, // 9265358979323846
	0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x66, 0x6c, // 26433832795);.fl
	0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, // oat cosTheta = s
	0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, // qrt(1.0 - t.x);.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, // float sinTheta =
	0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, //  sqrt(t.x);.floa
	0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x7b, 0x73, 0x70, 0x3d, 0x73, 0x69, 0x6e, // t sp,cp;.{sp=sin
	0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x63, 0x70, 0x3d, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, // (phi);cp=cos(phi
	0x29, 0x3b, 0x7d, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, // );};.return vec3
	0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, // (cp * sinTheta, 
	0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, // cosTheta, sp * s
	0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // inTheta);.}.vec3
	0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, //  rotate_to_vecto
	0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, // r_upper( vec3 ve
	0x63, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, // c, vec3 normal).
	0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, // {.if(normal.y > 
	0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // -0.99999).{.floa
	0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, // t h = 1.0/(1.0+n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ormal.y);.float 
	0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, // hz = h*normal.z;
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, // .float hzx = hz*
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // normal.x;.return
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, //  vec3(.vec.x * (
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, // normal.y+hz*norm
	0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, // al.z) + vec.y * 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, // normal.x - vec.z
	0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, //  * hzx,.vec.y * 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, // normal.y - vec.x
	0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, //  * normal.x - ve
	0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, // c.z * normal.z,.
	0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, // vec.y * normal.z
	0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, //  - vec.x * hzx +
	0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, //  vec.z * (normal
	0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, // .y+h*normal.x*no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, // rmal.x));.}.else
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, //  return -vec;.}.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x61, 0x6c, // uniform vec4 bal
	0x6c, 0x73, 0x5b, 0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // ls[8];.uniform m
	0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // at4 matProj;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, // form mat4 matPro
	0x6a, 0x49, 0x6e, 0x76, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // jInv;.uniform ve
	0x63, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x3b, 0x0a, 0x75, // c4 w_h_height;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // niform sampler2D
	0x20, 0x74, 0x65, 0x78, 0x5f, 0x66, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, //  tex_fb_filtered
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ;.uniform sample
	0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x3b, 0x0a, 0x75, // r2D tex_bloom;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // niform sampler2D
	0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, //  tex_depth;.void
	0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x6e, 0x74, 0x20, 0x6e, 0x53, //  main().{.int nS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x74, 0x28, 0x28, 0x77, 0x5f, // amples = int((w_
	0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x77, 0x29, 0x29, 0x3b, 0x0a, 0x76, 0x65, // h_height.w));.ve
	0x63, 0x32, 0x20, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x55, 0x56, 0x20, 0x3d, 0x20, 0x76, 0x65, // c2 screenUV = ve
	0x63, 0x32, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x78, // c2(v_texcoord0.x
	0x2c, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // , 1. - v_texcoor
	0x64, 0x30, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x63, 0x72, // d0.y);.float scr
	0x65, 0x65, 0x6e, 0x44, 0x65, 0x70, 0x74, 0x68, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // eenDepth = textu
	0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x2c, // reLod(tex_depth,
	0x20, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x55, 0x56, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, //  screenUV, 0.0).
	0x78, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x76, 0x65, 0x63, // x * 2. - 1.;.vec
	0x34, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x50, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, // 4 projPos = vec4
	0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x78, 0x20, 0x2a, // (v_texcoord0.x *
	0x20, 0x32, 0x2e, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x2c, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x76, //  2. - 1., 1. - v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x32, // _texcoord0.y * 2
	0x2e, 0x2c, 0x20, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x44, 0x65, 0x70, 0x74, 0x68, 0x2c, 0x20, // ., screenDepth, 
	0x31, 0x2e, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x50, // 1.);.vec4 pixelP
	0x6f, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x49, // os = ( (matProjI
	0x6e, 0x76, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x70, 0x72, 0x6f, 0x6a, 0x50, 0x6f, 0x73, 0x29, 0x20, // nv) * (projPos) 
	0x29, 0x3b, 0x0a, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x20, // );.pixelPos.xyz 
	0x3d, 0x20, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, // = pixelPos.xyz /
	0x20, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x2e, 0x77, 0x3b, 0x0a, 0x76, 0x65, 0x63, //  pixelPos.w;.vec
	0x33, 0x20, 0x72, 0x61, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, // 3 rayDirection =
	0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x70, 0x69, 0x78, 0x65, 0x6c, //  normalize(pixel
	0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, // Pos.xyz);.vec3 b
	0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, // all_pos = balls[
	0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x72, 0x65, // 0].xyz;.vec3 pre
	0x76, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x62, 0x61, 0x6c, // v_ball_pos = bal
	0x6c, 0x73, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ls[1].xyz;.float
	0x20, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x72, 0x32, 0x20, 0x3d, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x73, //  ball_r2 = balls
	0x5b, 0x30, 0x5d, 0x2e, 0x77, 0x20, 0x2a, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, 0x30, 0x5d, // [0].w * balls[0]
	0x2e, 0x77, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, // .w;.vec3 color =
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, //  textureLod(tex_
	0x66, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x2c, 0x20, 0x73, 0x63, 0x72, // fb_filtered, scr
	0x65, 0x65, 0x6e, 0x55, 0x56, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x3b, // eenUV, 0.0).rgb;
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, // .vec3 noIntersec
	0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // tColor;.{.float 
	0x62, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x72, 0x61, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, // b = dot(rayDirec
	0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x29, 0x3b, // tion, ball_pos);
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x62, // .float c = dot(b
	0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, // all_pos, ball_po
	0x73, 0x29, 0x20, 0x2d, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x72, 0x32, 0x3b, 0x0a, 0x66, 0x6c, // s) - ball_r2;.fl
	0x6f, 0x61, 0x74, 0x20, 0x64, 0x65, 0x74, 0x20, 0x3d, 0x20, 0x62, 0x20, 0x2a, 0x20, 0x62, 0x20, // oat det = b * b 
	0x2d, 0x20, 0x63, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x64, 0x65, 0x74, 0x20, 0x3c, 0x20, 0x30, // - c;.if (det < 0
	0x2e, 0x30, 0x29, 0x20, 0x7b, 0x0a, 0x6e, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, // .0) {.noIntersec
	0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, // tColor = color;.
	0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, // } else {.float i
	0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x5f, 0x7a, 0x20, 0x3d, // ntersect_pos_z =
	0x20, 0x28, 0x62, 0x20, 0x2d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x64, 0x65, 0x74, 0x29, 0x29, //  (b - sqrt(det))
	0x20, 0x2a, 0x20, 0x72, 0x61, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, //  * rayDirection.
	0x7a, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x2e, // z;.if (pixelPos.
	0x7a, 0x20, 0x3e, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x6f, // z > intersect_po
	0x73, 0x5f, 0x7a, 0x29, 0x0a, 0x7b, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, // s_z).{.gl_FragCo
	0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // lor = vec4(color
	0x2c, 0x20, 0x31, 0x2e, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x3b, 0x0a, 0x7d, // , 1.);.return;.}
	0x0a, 0x6e, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6f, // .noIntersectColo
	0x72, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, // r = textureLod(t
	0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x2c, 0x20, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, // ex_bloom, screen
	0x55, 0x56, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, // UV, 0.0).rgb;.}.
	0x7d, 0x0a, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, 0x31, // }.for (int i = 1
	0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x3b, 0x20, // ; i < nSamples; 
	0x69, 0x2b, 0x2b, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x69, 0x78, // i++).{.float mix
	0x5f, 0x70, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x69, 0x29, 0x20, // _pos = float(i) 
	0x2f, 0x20, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x77, 0x29, // / (w_h_height.w)
	0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x61, // ;.vec3 sample_ba
	0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x70, 0x72, 0x65, // ll_pos = mix(pre
	0x76, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x62, 0x61, 0x6c, 0x6c, // v_ball_pos, ball
	0x5f, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x5f, 0x70, 0x6f, 0x73, 0x29, 0x3b, 0x0a, // _pos, mix_pos);.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x72, 0x61, // float b = dot(ra
	0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, // yDirection, samp
	0x6c, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x29, 0x3b, 0x0a, 0x66, 0x6c, // le_ball_pos);.fl
	0x6f, 0x61, 0x74, 0x20, 0x63, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x73, 0x61, 0x6d, 0x70, // oat c = dot(samp
	0x6c, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x73, 0x61, 0x6d, // le_ball_pos, sam
	0x70, 0x6c, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x29, 0x20, 0x2d, 0x20, // ple_ball_pos) - 
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x72, 0x32, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, // ball_r2;.float d
	0x65, 0x74, 0x20, 0x3d, 0x20, 0x62, 0x20, 0x2a, 0x20, 0x62, 0x20, 0x2d, 0x20, 0x63, 0x3b, 0x0a, // et = b * b - c;.
	0x69, 0x66, 0x20, 0x28, 0x64, 0x65, 0x74, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7b, // if (det < 0.0) {
	0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x6e, 0x6f, 0x49, 0x6e, 0x74, 0x65, // .color += noInte
	0x72, 0x73, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x20, 0x65, 0x6c, // rsectColor;.} el
	0x73, 0x65, 0x20, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, // se {.vec3 inters
	0x65, 0x63, 0x74, 0x5f, 0x6f, 0x66, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x62, 0x20, 0x2d, 0x20, 0x73, // ect_ofs = (b - s
	0x71, 0x72, 0x74, 0x28, 0x64, 0x65, 0x74, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x61, 0x79, 0x44, // qrt(det)) * rayD
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x2d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, // irection - sampl
	0x65, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x34, // e_ball_pos;.vec4
	0x20, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, //  prev_proj = ( (
	0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, // matProj) * (vec4
	0x28, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x20, 0x2b, // (prev_ball_pos +
	0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x5f, 0x6f, 0x66, 0x73, 0x2c, 0x20, //  intersect_ofs, 
	0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x75, // 1.0)) );.vec4 cu
	0x72, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x50, // r_proj = ( (matP
	0x72, 0x6f, 0x6a, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x62, 0x61, 0x6c, // roj) * (vec4(bal
	0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x20, 0x2b, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, // l_pos + intersec
	0x74, 0x5f, 0x6f, 0x66, 0x73, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x3b, 0x0a, // t_ofs, 1.0)) );.
	0x70, 0x72, 0x65, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x3d, 0x20, // prev_proj.xy /= 
	0x70, 0x72, 0x65, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x77, 0x3b, 0x0a, 0x63, 0x75, 0x72, // prev_proj.w;.cur
	0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x3d, 0x20, 0x63, 0x75, 0x72, 0x5f, // _proj.xy /= cur_
	0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x77, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x72, 0x65, // proj.w;.vec3 pre
	0x76, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // v_sample = textu
	0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x2c, // reLod(tex_bloom,
	0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x35, 0x29, //  vec2_splat(0.5)
	0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x70, 0x72, //  + 0.5 * prev_pr
	0x6f, 0x6a, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x3b, // oj.xy, 0.0).rgb;
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x75, 0x72, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // .vec3 cur_sample
	0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, //  = textureLod(te
	0x78, 0x5f, 0x66, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x2c, 0x20, 0x76, // x_fb_filtered, v
	0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, // ec2_splat(0.5) +
	0x20, 0x30, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x63, 0x75, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, //  0.5 * cur_proj.
	0x78, 0x79, 0x20, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x63, // xy , 0.0).rgb;.c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x70, 0x72, 0x65, 0x76, // olor += mix(prev
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2c, 0x20, 0x63, 0x75, 0x72, 0x5f, 0x73, 0x61, 0x6d, // _sample, cur_sam
	0x70, 0x6c, 0x65, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x5f, 0x70, 0x6f, 0x73, 0x29, 0x3b, 0x0a, 0x7d, // ple, mix_pos);.}
	0x0a, 0x7d, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // .}.gl_FragColor 
	0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2f, 0x20, 0x28, // = vec4(color / (
	0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x77, 0x29, 0x2c, 0x20, 0x31, // w_h_height.w), 1
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,                                                 // .0);.}..
};
static const uint8_t fs_pp_motionblur_dx11[2806] =
{
	0x46, 0x53, 0x48, 0x0b, 0x6f, 0x1e, 0x3e, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x05, 0x62, // FSH.o.><.......b
	0x61, 0x6c, 0x6c, 0x73, 0x12, 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x6d, // alls...........m
	0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x14, 0x00, 0x80, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, // atProj..........
	0x0a, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x49, 0x6e, 0x76, 0x14, 0x00, 0xc0, 0x00, 0x04, // .matProjInv.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, // ......w_h_height
	0x12, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, 0x66, // ...........tex_f
	0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x30, 0x01, 0x00, 0x00, 0x01, 0x00, // b_filtered0.....
	0x00, 0x00, 0x00, 0x00, 0x09, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x30, 0x01, // .....tex_bloom0.
	0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x65, 0x70, // .........tex_dep
	0x74, 0x68, 0x30, 0x01, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, // th0..........tex
	0x5f, 0x66, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x30, 0x01, 0x00, 0x00, // _fb_filtered0...
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, // .......tex_bloom
	0x30, 0x01, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x74, 0x65, 0x78, 0x5f, 0x64, // 0..........tex_d
	0x65, 0x70, 0x74, 0x68, 0x30, 0x01, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x0a, // epth0...........
	0x00, 0x00, 0x44, 0x58, 0x42, 0x43, 0xc1, 0xf7, 0x9d, 0xe4, 0x39, 0x6f, 0xee, 0x2d, 0x93, 0xaf, // ..DXBC....9o.-..
	0x64, 0xcf, 0x47, 0x53, 0x4a, 0x1b, 0x01, 0x00, 0x00, 0x00, 0x10, 0x0a, 0x00, 0x00, 0x03, 0x00, // d.GSJ...........
	0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0x49, 0x53, // ..,...........IS
	0x47, 0x4e, 0x50, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x38, 0x00, // GNP...........8.
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ......D.........
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x53, 0x56, // ..............SV
	0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, // _POSITION.TEXCOO
	0x52, 0x44, 0x00, 0xab, 0xab, 0xab, 0x4f, 0x53, 0x47, 0x4e, 0x2c, 0x00, 0x00, 0x00, 0x01, 0x00, // RD....OSGN,.....
	0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ...... .........
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x53, 0x56, // ..............SV
	0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x00, 0xab, 0xab, 0x53, 0x48, 0x45, 0x58, 0x50, 0x09, // _TARGET...SHEXP.
	0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x54, 0x02, 0x00, 0x00, 0x6a, 0x08, 0x00, 0x01, 0x59, 0x00, // ..P...T...j...Y.
	0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x5a, 0x00, // ..F. .........Z.
	0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, // ...`......Z....`
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x04, 0x00, // ......Z....`....
	0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, // ..X....p......UU
	0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x55, 0x55, // ..X....p......UU
	0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x55, 0x55, // ..X....p......UU
	0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x32, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x65, 0x00, // ..b...2.......e.
	0x00, 0x03, 0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x02, 0x08, 0x00, // ... ......h.....
	0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x12, 0x00, // ..H.......CU....
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x7e, // ......F.......F~
	0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x40, // .......`.......@
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, // ......2...".....
	0x00, 0x00, 0x0a, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, // ...........@....
	0x00, 0x40, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0xbf, 0x32, 0x00, 0x00, 0x0a, 0x42, 0x00, // .@.@......2...B.
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x10, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x01, 0x00, // ..........A.....
	0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, // ...@.....@.@....
	0x80, 0x3f, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xa6, 0x0a, // .?8.............
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, // ......F. .......
	0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x8e, // ..2...........F.
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x00, 0x00, //  .........V.....
	0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0xf2, 0x00, // ..F.......2.....
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, // ......F. .......
	0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, // ..........F.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, // ..............F.
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, // ......F. .......
	0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, // ......r.......F.
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, // ................
	0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, // ..........F.....
	0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x82, 0x00, // ..F.......D.....
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, // ......:.......8.
	0x00, 0x07, 0xb2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x46, 0x08, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, // ..F.......H.....
	0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x10, // ..CU..r.......F.
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, // ......F~.......`
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, // .......@........
	0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x03, 0x10, 0x00, 0x00, 0x00, // ..........F.....
	0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, // ..F. ...........
	0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, // ..........F. ...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ......F. .......
	0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x12, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, 0x80, // ..2...........:.
	0x20, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x80, //  .A...........:.
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x02, 0x00, //  ...............
	0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x12, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, // ..2...........:.
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, // ......:.........
	0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x22, 0x00, // ..A.......1...".
	0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, // ...............@
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, // ................
	0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0xe2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x09, // ..6.............
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x01, 0x4b, 0x00, 0x00, 0x05, 0x12, 0x00, // ..........K.....
	0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, // ..........:.....
	0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, 0x00, // ......A.......8.
	0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, // ..........:.....
	0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x42, 0x00, // ..:.......1...B.
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, // ......:.......*.
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, // ..........*.....
	0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x72, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, // ..6...r ......F.
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x20, 0x10, 0x00, 0x00, 0x00, // ......6.... ....
	0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x3e, 0x00, 0x00, 0x01, 0x15, 0x00, // ...@.....?>.....
	0x00, 0x01, 0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0xe2, 0x00, // ..H.......CU....
	0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x36, 0x79, // ......F.......6y
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, // .......`.......@
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, 0x1b, 0x00, 0x00, 0x06, 0x42, 0x00, // ..............B.
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, // ......:. .......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x82, // ......r.......F.
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x80, 0x41, 0x00, //  .........F. .A.
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x72, 0x00, // ..........6...r.
	0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x36, 0x00, // ......F.......6.
	0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x01, 0x00, // ...........@....
	0x00, 0x00, 0x30, 0x00, 0x00, 0x01, 0x21, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x02, 0x00, // ..0...!.........
	0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, // ..:.......*.....
	0x00, 0x00, 0x03, 0x00, 0x04, 0x03, 0x0a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, 0x00, // ..............+.
	0x00, 0x05, 0x12, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, // ..........:.....
	0x00, 0x00, 0x0e, 0x00, 0x00, 0x08, 0x12, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, // ................
	0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, // ......:. .......
	0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x06, 0x00, // ..2...r.........
	0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x82, // ......F.......F.
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, //  ...............
	0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x03, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, // ......F.......F.
	0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x04, 0x00, // ................
	0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x05, 0x00, // ..F.......F.....
	0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x82, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x3a, 0x80, // ..2...........:.
	0x20, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x80, //  .A...........:.
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x04, 0x00, //  .........:.....
	0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x82, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x3a, 0x00, // ..2...........:.
	0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, // ......:.......:.
	0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x82, 0x00, // ..A.......1.....
	0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x40, // ......:........@
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, 0x05, 0x00, // ..........:.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x96, 0x07, // ......r.........
	0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x12, 0x00, // ......F.........
	0x00, 0x01, 0x4b, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x3a, 0x00, // ..K...........:.
	0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, // ................
	0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x80, 0x41, 0x00, // ..:.......:...A.
	0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x05, 0x00, // ......2...r.....
	0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x03, 0x10, 0x00, 0x00, 0x00, // ..........F.....
	0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, // ..F...A.........
	0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x05, 0x00, // ..r.......F.....
	0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, // ..F. .........8.
	0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x06, 0x00, // ..r.......V.....
	0x00, 0x00, 0x46, 0x83, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x32, 0x00, // ..F. .........2.
	0x00, 0x0a, 0xb2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x8c, 0x20, 0x00, 0x00, 0x00, // ..........F. ...
	0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x08, // ..............F.
	0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x06, 0x00, // ......2...r.....
	0x00, 0x00, 0x46, 0x83, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0xa6, 0x0a, // ..F. ...........
	0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x03, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, // ......F.........
	0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x06, 0x00, // ..r.......F.....
	0x00, 0x00, 0x46, 0x83, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, // ..F. ...........
	0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x05, 0x00, // ..r.......F.....
	0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, // ..F. .........8.
	0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x05, 0x00, // ..r.......V.....
	0x00, 0x00, 0x46, 0x83, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x32, 0x00, // ..F. .........2.
	0x00, 0x0a, 0xb2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x8c, 0x20, 0x00, 0x00, 0x00, // ..........F. ...
	0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x08, // ..............F.
	0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x05, 0x00, // ......2...r.....
	0x00, 0x00, 0x46, 0x83, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0xa6, 0x0a, // ..F. ...........
	0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x03, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, // ......F.........
	0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x05, 0x00, // ..r.......F.....
	0x00, 0x00, 0x46, 0x83, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x0e, 0x00, // ..F. ...........
	0x00, 0x07, 0x32, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x06, 0x00, // ..2.......F.....
	0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, 0x32, 0x00, // ..............2.
	0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xa6, 0x0a, // ......F.........
	0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0f, 0xc2, 0x00, 0x10, 0x00, 0x05, 0x00, // ......2.........
	0x00, 0x00, 0x06, 0x04, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, // ...........@....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0xbf, 0x02, 0x40, // .........?.....@
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, // .............?..
	0x00, 0x3f, 0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, // .?H.......CU..r.
	0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x7e, // ..............F~
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, // .......`.......@
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0f, 0x32, 0x00, 0x10, 0x00, 0x05, 0x00, // ......2...2.....
	0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, // ..F........@....
	0x00, 0x3f, 0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, // .?.............@
	0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .....?...?......
	0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, // ..H.......CU..r.
	0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x7e, // ......F.......F~
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, // .......`.......@
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x05, 0x00, // ..........r.....
	0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, // ..F...A.......F.
	0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x05, 0x00, // ......2...r.....
	0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x05, 0x00, // ..........F.....
	0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x72, 0x00, // ..F...........r.
	0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, // ......F.......F.
	0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, 0x1e, 0x00, 0x00, 0x07, 0x82, 0x00, // ................
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, // ......:........@
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x01, 0x0e, 0x00, 0x00, 0x08, 0x72, 0x20, // ..............r 
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf6, 0x8f, // ......F.........
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x20, //  .........6.... 
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x3e, 0x00, // .......@.....?>.
	0x00, 0x01, 0x00, 0x00, 0x10, 0x01,                                                             // ......
};
static const uint8_t fs_pp_motionblur_spv[5288] =
{
	0x46, 0x53, 0x48, 0x0b, 0x6f, 0x1e, 0x3e, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x0a, 0x77, // FSH.o.><.......w
	0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x01, 0x00, 0x01, 0x01, 0x00, 0x00, // _h_height.......
	0x00, 0x00, 0x00, 0x0a, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x49, 0x6e, 0x76, 0x14, 0x01, // ....matProjInv..
	0xc0, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x02, // .........balls..
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, // .........matProj
	0x14, 0x01, 0x80, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, 0x66, // ...........tex_f
	0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x30, 0x00, 0x02, 0x00, 0x00, 0x00, // b_filtered0.....
	0x00, 0x02, 0x22, 0x00, 0x09, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x30, 0x00, // .."..tex_bloom0.
	0x03, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0x09, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x65, 0x70, // ......"..tex_dep
	0x74, 0x68, 0x30, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0x04, 0x14, 0x00, 0x00, // th0.......".....
	0x03, 0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x0b, 0x00, 0x08, 0x00, 0x4e, 0x03, 0x00, 0x00, // ..#.........N...
	0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x06, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30, // ....GLSL.std.450
	0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x0f, 0x00, 0x07, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, // ............main
	0x00, 0x00, 0x00, 0x00, 0x8e, 0x01, 0x00, 0x00, 0x99, 0x01, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, // ................
	0x04, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x05, 0x00, 0x00, 0x00, // ................
	0xf4, 0x01, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, // ............main
	0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, // ......../...tex_
	0x66, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, // fb_filteredSampl
	0x65, 0x72, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x32, 0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, // er......2...tex_
	0x66, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x75, // fb_filteredTextu
	0x72, 0x65, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00, 0x36, 0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, // re......6...tex_
	0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x00, // bloomSampler....
	0x05, 0x00, 0x07, 0x00, 0x38, 0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, // ....8...tex_bloo
	0x6d, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00, // mTexture........
	0x3c, 0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x53, 0x61, 0x6d, // <...tex_depthSam
	0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00, 0x3e, 0x00, 0x00, 0x00, // pler........>...
	0x74, 0x65, 0x78, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // tex_depthTexture
	0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x69, 0x00, 0x00, 0x00, 0x55, 0x6e, 0x69, 0x66, // ........i...Unif
	0x6f, 0x72, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x05, 0x00, // ormBlock........
	0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x00, 0x00, 0x00, // i.......balls...
	0x06, 0x00, 0x05, 0x00, 0x69, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x50, // ....i.......matP
	0x72, 0x6f, 0x6a, 0x00, 0x06, 0x00, 0x06, 0x00, 0x69, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // roj.....i.......
	0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x49, 0x6e, 0x76, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, // matProjInv......
	0x69, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, // i.......w_h_heig
	0x68, 0x74, 0x00, 0x00, 0x05, 0x00, 0x03, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ht......k.......
	0x05, 0x00, 0x05, 0x00, 0x8e, 0x01, 0x00, 0x00, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, // ........v_texcoo
	0x72, 0x64, 0x30, 0x00, 0x05, 0x00, 0x06, 0x00, 0x99, 0x01, 0x00, 0x00, 0x62, 0x67, 0x66, 0x78, // rd0.........bgfx
	0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // _FragData0..G...
	0x2f, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // /...".......G...
	0x2f, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // /...!.......G...
	0x32, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // 2...".......G...
	0x32, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // 2...!.......G...
	0x36, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // 6...".......G...
	0x36, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // 6...!.......G...
	0x38, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // 8...".......G...
	0x38, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // 8...!.......G...
	0x3c, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // <...".......G...
	0x3c, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // <...!.......G...
	0x3e, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // >...".......G...
	0x3e, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // >...!.......G...
	0x67, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, // g...........H...
	0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // i.......#.......
	0x48, 0x00, 0x04, 0x00, 0x69, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // H...i...........
	0x48, 0x00, 0x05, 0x00, 0x69, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, // H...i.......#...
	0x80, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x69, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ....H...i.......
	0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, 0x69, 0x00, 0x00, 0x00, // ........H...i...
	0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x69, 0x00, 0x00, 0x00, // ........H...i...
	0x02, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, // ....#.......H...
	0x69, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, // i...............
	0x48, 0x00, 0x05, 0x00, 0x69, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, // H...i.......#...
	0x00, 0x01, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00, 0x69, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ....G...i.......
	0x47, 0x00, 0x04, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // G...k...".......
	0x47, 0x00, 0x04, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // G...k...!.......
	0x47, 0x00, 0x04, 0x00, 0x8e, 0x01, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // G...............
	0x47, 0x00, 0x04, 0x00, 0x99, 0x01, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // G...............
	0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x21, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, // ........!.......
	0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00, // ................
	0x07, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x19, 0x00, 0x09, 0x00, 0x08, 0x00, 0x00, 0x00, // .... ...........
	0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, // ................
	0x0b, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, // ................
	0x0e, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, // ................
	0x15, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, // ............ ...
	0x2e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, // ............;...
	0x2e, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, // ..../....... ...
	0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, // 1...........;...
	0x31, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, // 1...2.......;...
	0x2e, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, // ....6.......;...
	0x31, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, // 1...8.......;...
	0x2e, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, // ....<.......;...
	0x31, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, // 1...>...........
	0x41, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, // A... .......+...
	0x41, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, // A...B.......+...
	0x41, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x03, 0x00, // A...F...........
	0x4a, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, // J.......+.......
	0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, 0x65, 0x00, 0x00, 0x00, // `...........e...
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x65, 0x00, 0x00, 0x00, //  .......+...e...
	0x66, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x67, 0x00, 0x00, 0x00, // f...........g...
	0x0e, 0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 0x18, 0x00, 0x04, 0x00, 0x68, 0x00, 0x00, 0x00, // ....f.......h...
	0x0e, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x06, 0x00, 0x69, 0x00, 0x00, 0x00, // ............i...
	0x67, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, // g...h...h.......
	0x20, 0x00, 0x04, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x69, 0x00, 0x00, 0x00, //  ...j.......i...
	0x3b, 0x00, 0x04, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ;...j...k.......
	0x2b, 0x00, 0x04, 0x00, 0x41, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // +...A...l.......
	0x2b, 0x00, 0x04, 0x00, 0x65, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // +...e...m.......
	0x20, 0x00, 0x04, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, //  ...n...........
	0x2b, 0x00, 0x04, 0x00, 0x65, 0x00, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // +...e...{.......
	0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, // +..............@
	0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // +..............?
	0x2b, 0x00, 0x04, 0x00, 0x41, 0x00, 0x00, 0x00, 0x8d, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // +...A...........
	0x20, 0x00, 0x04, 0x00, 0x8e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, //  ...........h...
	0x20, 0x00, 0x04, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, //  ...............
	0x14, 0x00, 0x02, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, // ........+.......
	0x51, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x20, 0x00, 0x04, 0x00, 0x8d, 0x01, 0x00, 0x00, // Q......? .......
	0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x8d, 0x01, 0x00, 0x00, // ........;.......
	0x8e, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x98, 0x01, 0x00, 0x00, // ........ .......
	0x03, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x98, 0x01, 0x00, 0x00, // ........;.......
	0x99, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, // ........,.......
	0x40, 0x03, 0x00, 0x00, 0x51, 0x01, 0x00, 0x00, 0x51, 0x01, 0x00, 0x00, 0x01, 0x00, 0x03, 0x00, // @...Q...Q.......
	0x0e, 0x00, 0x00, 0x00, 0x4d, 0x03, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, // ....M...6.......
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, // ................
	0x05, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, // ....=.......0...
	0x2f, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, // /...=.......3...
	0x32, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00, // 2...=.......7...
	0x36, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, // 6...=.......9...
	0x38, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x00, 0x00, // 8...=.......=...
	0x3c, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, // <...=.......?...
	0x3e, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x8f, 0x01, 0x00, 0x00, // >...=...........
	0x8e, 0x01, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xc7, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0xfb, 0x00, 0x03, 0x00, 0x7b, 0x00, 0x00, 0x00, 0xe7, 0x01, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, // ....{...........
	0xe7, 0x01, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x6e, 0x00, 0x00, 0x00, 0xe9, 0x01, 0x00, 0x00, // ....A...n.......
	0x6b, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, // k...l...m...=...
	0x07, 0x00, 0x00, 0x00, 0xea, 0x01, 0x00, 0x00, 0xe9, 0x01, 0x00, 0x00, 0x6e, 0x00, 0x04, 0x00, // ............n...
	0x41, 0x00, 0x00, 0x00, 0xeb, 0x01, 0x00, 0x00, 0xea, 0x01, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, // A...........V...
	0x4a, 0x00, 0x00, 0x00, 0xd2, 0x02, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x00, 0x00, // J.......?...=...
	0x58, 0x00, 0x07, 0x00, 0x0e, 0x00, 0x00, 0x00, 0xd5, 0x02, 0x00, 0x00, 0xd2, 0x02, 0x00, 0x00, // X...............
	0x8f, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // ........`...Q...
	0x07, 0x00, 0x00, 0x00, 0xf0, 0x01, 0x00, 0x00, 0xd5, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf2, 0x01, 0x00, 0x00, 0x8f, 0x01, 0x00, 0x00, // Q...............
	0x00, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf3, 0x01, 0x00, 0x00, // ................
	0xf2, 0x01, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, // ................
	0xf4, 0x01, 0x00, 0x00, 0xf3, 0x01, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // ............Q...
	0x07, 0x00, 0x00, 0x00, 0xf6, 0x01, 0x00, 0x00, 0x8f, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf7, 0x01, 0x00, 0x00, 0xf6, 0x01, 0x00, 0x00, // ................
	0x80, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf8, 0x01, 0x00, 0x00, // ................
	0x82, 0x00, 0x00, 0x00, 0xf7, 0x01, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0e, 0x00, 0x00, 0x00, // ........P.......
	0xfa, 0x01, 0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, 0xf8, 0x01, 0x00, 0x00, 0xf0, 0x01, 0x00, 0x00, // ................
	0x82, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x8e, 0x00, 0x00, 0x00, 0xfc, 0x01, 0x00, 0x00, // ....A...........
	0x6b, 0x00, 0x00, 0x00, 0x8d, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x68, 0x00, 0x00, 0x00, // k.......=...h...
	0xfd, 0x01, 0x00, 0x00, 0xfc, 0x01, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x0e, 0x00, 0x00, 0x00, // ................
	0xfe, 0x01, 0x00, 0x00, 0xfa, 0x01, 0x00, 0x00, 0xfd, 0x01, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, // ............O...
	0x15, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0xfe, 0x01, 0x00, 0x00, 0xfe, 0x01, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // ............Q...
	0x07, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0xfe, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ................
	0x50, 0x00, 0x06, 0x00, 0x15, 0x00, 0x00, 0x00, 0x03, 0x02, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, // P...............
	0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00, // ................
	0x04, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x03, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // ............Q...
	0x07, 0x00, 0x00, 0x00, 0x06, 0x02, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x52, 0x00, 0x06, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x2a, 0x03, 0x00, 0x00, 0x06, 0x02, 0x00, 0x00, // R.......*.......
	0x4d, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, // M.......Q.......
	0x08, 0x02, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x52, 0x00, 0x06, 0x00, // ............R...
	0x0e, 0x00, 0x00, 0x00, 0x2c, 0x03, 0x00, 0x00, 0x08, 0x02, 0x00, 0x00, 0x2a, 0x03, 0x00, 0x00, // ....,.......*...
	0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0a, 0x02, 0x00, 0x00, // ....Q...........
	0x04, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x52, 0x00, 0x06, 0x00, 0x0e, 0x00, 0x00, 0x00, // ........R.......
	0x2e, 0x03, 0x00, 0x00, 0x0a, 0x02, 0x00, 0x00, 0x2c, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ........,.......
	0x4f, 0x00, 0x08, 0x00, 0x15, 0x00, 0x00, 0x00, 0x0c, 0x02, 0x00, 0x00, 0x2e, 0x03, 0x00, 0x00, // O...............
	0x2e, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x0c, 0x00, 0x06, 0x00, 0x15, 0x00, 0x00, 0x00, 0x0d, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x45, 0x00, 0x00, 0x00, 0x0c, 0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0xa4, 0x00, 0x00, 0x00, // E.......A.......
	0x0e, 0x02, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, // ....k...F...F...
	0x3d, 0x00, 0x04, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x0f, 0x02, 0x00, 0x00, 0x0e, 0x02, 0x00, 0x00, // =...............
	0x4f, 0x00, 0x08, 0x00, 0x15, 0x00, 0x00, 0x00, 0x10, 0x02, 0x00, 0x00, 0x0f, 0x02, 0x00, 0x00, // O...............
	0x0f, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x41, 0x00, 0x06, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x11, 0x02, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, // A...........k...
	0x46, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0e, 0x00, 0x00, 0x00, // F...B...=.......
	0x12, 0x02, 0x00, 0x00, 0x11, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x15, 0x00, 0x00, 0x00, // ........O.......
	0x13, 0x02, 0x00, 0x00, 0x12, 0x02, 0x00, 0x00, 0x12, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, 0x6e, 0x00, 0x00, 0x00, // ........A...n...
	0x14, 0x02, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, // ....k...F...F...
	0x6d, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x15, 0x02, 0x00, 0x00, // m...=...........
	0x14, 0x02, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x16, 0x02, 0x00, 0x00, // ....A...n.......
	0x6b, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00, // k...F...F...m...
	0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x17, 0x02, 0x00, 0x00, 0x16, 0x02, 0x00, 0x00, // =...............
	0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x18, 0x02, 0x00, 0x00, 0x15, 0x02, 0x00, 0x00, // ................
	0x17, 0x02, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xdc, 0x02, 0x00, 0x00, // ....V...J.......
	0x33, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x58, 0x00, 0x07, 0x00, 0x0e, 0x00, 0x00, 0x00, // 3...0...X.......
	0xdf, 0x02, 0x00, 0x00, 0xdc, 0x02, 0x00, 0x00, 0x8f, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x60, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x15, 0x00, 0x00, 0x00, 0x1c, 0x02, 0x00, 0x00, // `...O...........
	0xdf, 0x02, 0x00, 0x00, 0xdf, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x02, 0x00, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1f, 0x02, 0x00, 0x00, // ................
	0x0d, 0x02, 0x00, 0x00, 0x10, 0x02, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, // ................
	0x22, 0x02, 0x00, 0x00, 0x10, 0x02, 0x00, 0x00, 0x10, 0x02, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, // "...............
	0x07, 0x00, 0x00, 0x00, 0x24, 0x02, 0x00, 0x00, 0x22, 0x02, 0x00, 0x00, 0x18, 0x02, 0x00, 0x00, // ....$...".......
	0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x27, 0x02, 0x00, 0x00, 0x1f, 0x02, 0x00, 0x00, // ........'.......
	0x1f, 0x02, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x29, 0x02, 0x00, 0x00, // ............)...
	0x27, 0x02, 0x00, 0x00, 0x24, 0x02, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0xcb, 0x00, 0x00, 0x00, // '...$...........
	0x2b, 0x02, 0x00, 0x00, 0x29, 0x02, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, // +...)...`.......
	0x45, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x2b, 0x02, 0x00, 0x00, // E...........+...
	0x2c, 0x02, 0x00, 0x00, 0x2e, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x2c, 0x02, 0x00, 0x00, // ,...........,...
	0xf9, 0x00, 0x02, 0x00, 0x45, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x2e, 0x02, 0x00, 0x00, // ....E...........
	0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x31, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ........1.......
	0x1f, 0x00, 0x00, 0x00, 0x29, 0x02, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, // ....)...........
	0x32, 0x02, 0x00, 0x00, 0x1f, 0x02, 0x00, 0x00, 0x31, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // 2.......1...Q...
	0x07, 0x00, 0x00, 0x00, 0x34, 0x02, 0x00, 0x00, 0x0d, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ....4...........
	0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x35, 0x02, 0x00, 0x00, 0x32, 0x02, 0x00, 0x00, // ........5...2...
	0x34, 0x02, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x39, 0x02, 0x00, 0x00, // 4...........9...
	0x0a, 0x02, 0x00, 0x00, 0x35, 0x02, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x40, 0x02, 0x00, 0x00, // ....5.......@...
	0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x39, 0x02, 0x00, 0x00, 0x3a, 0x02, 0x00, 0x00, // ........9...:...
	0x40, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x3a, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // @.......:...Q...
	0x07, 0x00, 0x00, 0x00, 0x3c, 0x02, 0x00, 0x00, 0xdf, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....<...........
	0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3d, 0x02, 0x00, 0x00, 0xdf, 0x02, 0x00, 0x00, // Q.......=.......
	0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3e, 0x02, 0x00, 0x00, // ....Q.......>...
	0xdf, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0e, 0x00, 0x00, 0x00, // ........P.......
	0x3f, 0x02, 0x00, 0x00, 0x3c, 0x02, 0x00, 0x00, 0x3d, 0x02, 0x00, 0x00, 0x3e, 0x02, 0x00, 0x00, // ?...<...=...>...
	0x82, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xc7, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, // ................
	0x40, 0x02, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xe6, 0x02, 0x00, 0x00, // @...V...J.......
	0x39, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00, 0x58, 0x00, 0x07, 0x00, 0x0e, 0x00, 0x00, 0x00, // 9...7...X.......
	0xe9, 0x02, 0x00, 0x00, 0xe6, 0x02, 0x00, 0x00, 0x8f, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x60, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x15, 0x00, 0x00, 0x00, 0x44, 0x02, 0x00, 0x00, // `...O.......D...
	0xe9, 0x02, 0x00, 0x00, 0xe9, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x02, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x45, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, // ........E.......
	0x45, 0x02, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x15, 0x00, 0x00, 0x00, 0x47, 0x03, 0x00, 0x00, // E...........G...
	0x1c, 0x02, 0x00, 0x00, 0x2c, 0x02, 0x00, 0x00, 0x44, 0x02, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, // ....,...D...@...
	0xf9, 0x00, 0x02, 0x00, 0x46, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x46, 0x02, 0x00, 0x00, // ....F.......F...
	0xf5, 0x00, 0x07, 0x00, 0x15, 0x00, 0x00, 0x00, 0x43, 0x03, 0x00, 0x00, 0x1c, 0x02, 0x00, 0x00, // ........C.......
	0x45, 0x02, 0x00, 0x00, 0x49, 0x03, 0x00, 0x00, 0xba, 0x02, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, // E...I...........
	0x41, 0x00, 0x00, 0x00, 0x42, 0x03, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x45, 0x02, 0x00, 0x00, // A...B...B...E...
	0xbc, 0x02, 0x00, 0x00, 0xba, 0x02, 0x00, 0x00, 0xb1, 0x00, 0x05, 0x00, 0xcb, 0x00, 0x00, 0x00, // ................
	0x4a, 0x02, 0x00, 0x00, 0x42, 0x03, 0x00, 0x00, 0xeb, 0x01, 0x00, 0x00, 0xf6, 0x00, 0x04, 0x00, // J...B...........
	0xbd, 0x02, 0x00, 0x00, 0xba, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, // ................
	0x4a, 0x02, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, 0xbd, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, // J...K...........
	0x4b, 0x02, 0x00, 0x00, 0x6f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4d, 0x02, 0x00, 0x00, // K...o.......M...
	0x42, 0x03, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x4e, 0x02, 0x00, 0x00, // B...A...n...N...
	0x6b, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, // k...l...m...=...
	0x07, 0x00, 0x00, 0x00, 0x4f, 0x02, 0x00, 0x00, 0x4e, 0x02, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, // ....O...N.......
	0x07, 0x00, 0x00, 0x00, 0x50, 0x02, 0x00, 0x00, 0x4d, 0x02, 0x00, 0x00, 0x4f, 0x02, 0x00, 0x00, // ....P...M...O...
	0x50, 0x00, 0x06, 0x00, 0x15, 0x00, 0x00, 0x00, 0x52, 0x02, 0x00, 0x00, 0x50, 0x02, 0x00, 0x00, // P.......R...P...
	0x50, 0x02, 0x00, 0x00, 0x50, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x15, 0x00, 0x00, 0x00, // P...P...........
	0xef, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x13, 0x02, 0x00, 0x00, // ................
	0x10, 0x02, 0x00, 0x00, 0x52, 0x02, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, // ....R...........
	0x58, 0x02, 0x00, 0x00, 0x0d, 0x02, 0x00, 0x00, 0xef, 0x02, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, // X...............
	0x07, 0x00, 0x00, 0x00, 0x5b, 0x02, 0x00, 0x00, 0xef, 0x02, 0x00, 0x00, 0xef, 0x02, 0x00, 0x00, // ....[...........
	0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5d, 0x02, 0x00, 0x00, 0x5b, 0x02, 0x00, 0x00, // ........]...[...
	0x18, 0x02, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, // ............`...
	0x58, 0x02, 0x00, 0x00, 0x58, 0x02, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, // X...X...........
	0x62, 0x02, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0x5d, 0x02, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, // b...`...].......
	0xcb, 0x00, 0x00, 0x00, 0x64, 0x02, 0x00, 0x00, 0x62, 0x02, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, // ....d...b...`...
	0xf7, 0x00, 0x03, 0x00, 0xb9, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, // ................
	0x64, 0x02, 0x00, 0x00, 0x65, 0x02, 0x00, 0x00, 0x69, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, // d...e...i.......
	0x65, 0x02, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00, 0x68, 0x02, 0x00, 0x00, // e...........h...
	0x43, 0x03, 0x00, 0x00, 0x47, 0x03, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xb9, 0x02, 0x00, 0x00, // C...G...........
	0xf8, 0x00, 0x02, 0x00, 0x69, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, // ....i...........
	0x6c, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x62, 0x02, 0x00, 0x00, // l...........b...
	0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6d, 0x02, 0x00, 0x00, 0x58, 0x02, 0x00, 0x00, // ........m...X...
	0x6c, 0x02, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00, 0x6f, 0x02, 0x00, 0x00, // l...........o...
	0x0d, 0x02, 0x00, 0x00, 0x6d, 0x02, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00, // ....m...........
	0x71, 0x02, 0x00, 0x00, 0x6f, 0x02, 0x00, 0x00, 0xef, 0x02, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, // q...o...........
	0x15, 0x00, 0x00, 0x00, 0x74, 0x02, 0x00, 0x00, 0x13, 0x02, 0x00, 0x00, 0x71, 0x02, 0x00, 0x00, // ....t.......q...
	0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x75, 0x02, 0x00, 0x00, 0x74, 0x02, 0x00, 0x00, // Q.......u...t...
	0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x76, 0x02, 0x00, 0x00, // ....Q.......v...
	0x74, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, // t.......Q.......
	0x77, 0x02, 0x00, 0x00, 0x74, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, // w...t.......P...
	0x0e, 0x00, 0x00, 0x00, 0x78, 0x02, 0x00, 0x00, 0x75, 0x02, 0x00, 0x00, 0x76, 0x02, 0x00, 0x00, // ....x...u...v...
	0x77, 0x02, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x8e, 0x00, 0x00, 0x00, // w.......A.......
	0x79, 0x02, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, // y...k...B...=...
	0x68, 0x00, 0x00, 0x00, 0x7a, 0x02, 0x00, 0x00, 0x79, 0x02, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, // h...z...y.......
	0x0e, 0x00, 0x00, 0x00, 0x7b, 0x02, 0x00, 0x00, 0x78, 0x02, 0x00, 0x00, 0x7a, 0x02, 0x00, 0x00, // ....{...x...z...
	0x81, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00, 0x7e, 0x02, 0x00, 0x00, 0x10, 0x02, 0x00, 0x00, // ........~.......
	0x71, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7f, 0x02, 0x00, 0x00, // q...Q...........
	0x7e, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, // ~.......Q.......
	0x80, 0x02, 0x00, 0x00, 0x7e, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // ....~.......Q...
	0x07, 0x00, 0x00, 0x00, 0x81, 0x02, 0x00, 0x00, 0x7e, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ........~.......
	0x50, 0x00, 0x07, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x82, 0x02, 0x00, 0x00, 0x7f, 0x02, 0x00, 0x00, // P...............
	0x80, 0x02, 0x00, 0x00, 0x81, 0x02, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, // ............A...
	0x8e, 0x00, 0x00, 0x00, 0x83, 0x02, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, // ........k...B...
	0x3d, 0x00, 0x04, 0x00, 0x68, 0x00, 0x00, 0x00, 0x84, 0x02, 0x00, 0x00, 0x83, 0x02, 0x00, 0x00, // =...h...........
	0x90, 0x00, 0x05, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x85, 0x02, 0x00, 0x00, 0x82, 0x02, 0x00, 0x00, // ................
	0x84, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x87, 0x02, 0x00, 0x00, // ....Q...........
	0x7b, 0x02, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, // {.......O.......
	0x89, 0x02, 0x00, 0x00, 0x7b, 0x02, 0x00, 0x00, 0x7b, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....{...{.......
	0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x8a, 0x02, 0x00, 0x00, // ....P...........
	0x87, 0x02, 0x00, 0x00, 0x87, 0x02, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, // ................
	0x8b, 0x02, 0x00, 0x00, 0x89, 0x02, 0x00, 0x00, 0x8a, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // ............Q...
	0x07, 0x00, 0x00, 0x00, 0x8d, 0x02, 0x00, 0x00, 0x8b, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8f, 0x02, 0x00, 0x00, 0x8b, 0x02, 0x00, 0x00, // Q...............
	0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x91, 0x02, 0x00, 0x00, // ....Q...........
	0x85, 0x02, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, // ........O.......
	0x93, 0x02, 0x00, 0x00, 0x85, 0x02, 0x00, 0x00, 0x85, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x94, 0x02, 0x00, 0x00, // ....P...........
	0x91, 0x02, 0x00, 0x00, 0x91, 0x02, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, // ................
	0x95, 0x02, 0x00, 0x00, 0x93, 0x02, 0x00, 0x00, 0x94, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // ............Q...
	0x07, 0x00, 0x00, 0x00, 0x97, 0x02, 0x00, 0x00, 0x95, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x99, 0x02, 0x00, 0x00, 0x95, 0x02, 0x00, 0x00, // Q...............
	0x01, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9f, 0x02, 0x00, 0x00, // ................
	0x8f, 0x02, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xa0, 0x02, 0x00, 0x00, // ....P...........
	0x8d, 0x02, 0x00, 0x00, 0x9f, 0x02, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, // ................
	0xa1, 0x02, 0x00, 0x00, 0xa0, 0x02, 0x00, 0x00, 0x51, 0x01, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, // ........Q.......
	0x0b, 0x00, 0x00, 0x00, 0xa2, 0x02, 0x00, 0x00, 0x40, 0x03, 0x00, 0x00, 0xa1, 0x02, 0x00, 0x00, // ........@.......
	0x56, 0x00, 0x05, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xfa, 0x02, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, // V...J.......9...
	0x37, 0x00, 0x00, 0x00, 0x58, 0x00, 0x07, 0x00, 0x0e, 0x00, 0x00, 0x00, 0xfd, 0x02, 0x00, 0x00, // 7...X...........
	0xfa, 0x02, 0x00, 0x00, 0xa2, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, // ............`...
	0x4f, 0x00, 0x08, 0x00, 0x15, 0x00, 0x00, 0x00, 0xa5, 0x02, 0x00, 0x00, 0xfd, 0x02, 0x00, 0x00, // O...............
	0xfd, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xab, 0x02, 0x00, 0x00, 0x99, 0x02, 0x00, 0x00, // ................
	0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xac, 0x02, 0x00, 0x00, 0x97, 0x02, 0x00, 0x00, // P...............
	0xab, 0x02, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xad, 0x02, 0x00, 0x00, // ................
	0xac, 0x02, 0x00, 0x00, 0x51, 0x01, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, // ....Q...........
	0xae, 0x02, 0x00, 0x00, 0x40, 0x03, 0x00, 0x00, 0xad, 0x02, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, // ....@.......V...
	0x4a, 0x00, 0x00, 0x00, 0x08, 0x03, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, // J.......3...0...
	0x58, 0x00, 0x07, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x0b, 0x03, 0x00, 0x00, 0x08, 0x03, 0x00, 0x00, // X...............
	0xae, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, // ........`...O...
	0x15, 0x00, 0x00, 0x00, 0xb1, 0x02, 0x00, 0x00, 0x0b, 0x03, 0x00, 0x00, 0x0b, 0x03, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, // ............P...
	0x15, 0x00, 0x00, 0x00, 0xb3, 0x02, 0x00, 0x00, 0x50, 0x02, 0x00, 0x00, 0x50, 0x02, 0x00, 0x00, // ........P...P...
	0x50, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x15, 0x00, 0x00, 0x00, 0x11, 0x03, 0x00, 0x00, // P...............
	0x01, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0xa5, 0x02, 0x00, 0x00, 0xb1, 0x02, 0x00, 0x00, // ................
	0xb3, 0x02, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00, 0xb8, 0x02, 0x00, 0x00, // ................
	0x43, 0x03, 0x00, 0x00, 0x11, 0x03, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xb9, 0x02, 0x00, 0x00, // C...............
	0xf8, 0x00, 0x02, 0x00, 0xb9, 0x02, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x15, 0x00, 0x00, 0x00, // ................
	0x49, 0x03, 0x00, 0x00, 0x68, 0x02, 0x00, 0x00, 0x65, 0x02, 0x00, 0x00, 0xb8, 0x02, 0x00, 0x00, // I...h...e.......
	0x69, 0x02, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xba, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, // i...............
	0xba, 0x02, 0x00, 0x00, 0x80, 0x00, 0x05, 0x00, 0x41, 0x00, 0x00, 0x00, 0xbc, 0x02, 0x00, 0x00, // ........A.......
	0x42, 0x03, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x46, 0x02, 0x00, 0x00, // B...B.......F...
	0xf8, 0x00, 0x02, 0x00, 0xbd, 0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x6e, 0x00, 0x00, 0x00, // ........A...n...
	0xbf, 0x02, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00, // ....k...l...m...
	0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc0, 0x02, 0x00, 0x00, 0xbf, 0x02, 0x00, 0x00, // =...............
	0x50, 0x00, 0x06, 0x00, 0x15, 0x00, 0x00, 0x00, 0xc1, 0x02, 0x00, 0x00, 0xc0, 0x02, 0x00, 0x00, // P...............
	0xc0, 0x02, 0x00, 0x00, 0xc0, 0x02, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00, // ................
	0xc2, 0x02, 0x00, 0x00, 0x43, 0x03, 0x00, 0x00, 0xc1, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // ....C.......Q...
	0x07, 0x00, 0x00, 0x00, 0xc3, 0x02, 0x00, 0x00, 0xc2, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc4, 0x02, 0x00, 0x00, 0xc2, 0x02, 0x00, 0x00, // Q...............
	0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc5, 0x02, 0x00, 0x00, // ....Q...........
	0xc2, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0e, 0x00, 0x00, 0x00, // ........P.......
	0xc6, 0x02, 0x00, 0x00, 0xc3, 0x02, 0x00, 0x00, 0xc4, 0x02, 0x00, 0x00, 0xc5, 0x02, 0x00, 0x00, // ................
	0x82, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xc7, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, // ................
	0xc7, 0x02, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x45, 0x03, 0x00, 0x00, // ............E...
	0x3f, 0x02, 0x00, 0x00, 0x3a, 0x02, 0x00, 0x00, 0xc6, 0x02, 0x00, 0x00, 0xbd, 0x02, 0x00, 0x00, // ?...:...........
	0x3e, 0x00, 0x03, 0x00, 0x99, 0x01, 0x00, 0x00, 0x45, 0x03, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, // >.......E.......
	0x38, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x01,                                                 // 8.......
};
static const bgfx::EmbeddedShader fs_pp_motionblur = BGFX_EMBEDDED_SHADER(fs_pp_motionblur);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Build of fragment shader from fs_pp_motionblur.sc to fs_pp_motionblur_st with options: STEREO
static const uint8_t fs_pp_motionblur_st_mtl[4246] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4a, 0x63, 0xcf, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x16, 0x74, // FSH.Jc._.......t
	0x65, 0x78, 0x5f, 0x66, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x53, 0x61, // ex_fb_filteredSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, // mpler...........
	0x74, 0x65, 0x78, 0x5f, 0x66, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x54, // tex_fb_filteredT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // exture..........
	0x10, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // .tex_bloomSample
	0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x74, 0x65, 0x78, 0x5f, // r...........tex_
	0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, // bloomTexture....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, // .......tex_depth
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Sampler.........
	0x00, 0x10, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x54, 0x65, 0x78, 0x74, 0x75, // ..tex_depthTextu
	0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x77, 0x5f, 0x68, // re...........w_h
	0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x01, 0x80, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, // _height.........
	0x00, 0x0a, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x49, 0x6e, 0x76, 0x14, 0x02, 0x00, 0x01, // ..matProjInv....
	0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x02, 0x00, 0x00, // .......balls....
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x14, 0x02, // .......matProj..
	0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, 0x66, 0x62, 0x5f, // .........tex_fb_
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // filtered........
	0x00, 0x00, 0x09, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x10, 0x00, 0x00, 0x00, // ...tex_bloom....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, // .......tex_depth
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x0f, 0x00, 0x00, 0x23, 0x69, // ..........D...#i
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, // nclude <metal_st
	0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, // dlib>.#include <
	0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, // simd/simd.h>..us
	0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, // ing namespace me
	0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, // tal;..struct _Gl
	0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // obal.{.    float
	0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, 0x38, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 4 balls[8];.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, // float4x4 matProj
	0x5b, 0x32, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, // [2];.    float4x
	0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x49, 0x6e, 0x76, 0x5b, 0x32, 0x5d, 0x3b, // 4 matProjInv[2];
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, // .    float4 w_h_
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x73, // height;.};..cons
	0x74, 0x61, 0x6e, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x39, 0x36, 0x33, 0x20, // tant float _963 
	0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x66, // = {};.constant f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x39, 0x37, 0x35, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, // loat4 _975 = {};
	0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, // ..struct xlatMtl
	0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // Main_out.{.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, // loat4 bgfx_FragD
	0x61, 0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, // ata0 [[color(0)]
	0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, // ];.};..struct xl
	0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, // atMtlMain_in.{. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x20, 0x5b, //    float v_eye [
	0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, // [user(locn0)]];.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, //     float2 v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, // coord0 [[user(lo
	0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, // cn1)]];.};..frag
	0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, // ment xlatMtlMain
	0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, // _out xlatMtlMain
	0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, // (xlatMtlMain_in 
	0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, // in [[stage_in]],
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, //  constant _Globa
	0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, // l& _mtl_u [[buff
	0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // er(0)]], texture
	0x32, 0x64, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, // 2d_array<float> 
	0x74, 0x65, 0x78, 0x5f, 0x66, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x20, // tex_fb_filtered 
	0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, // [[texture(0)]], 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x3c, // texture2d_array<
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, // float> tex_bloom
	0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x2c, //  [[texture(1)]],
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, //  texture2d_array
	0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x65, 0x70, 0x74, // <float> tex_dept
	0x68, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x34, 0x29, 0x5d, 0x5d, // h [[texture(4)]]
	0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x66, 0x62, // , sampler tex_fb
	0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // _filteredSampler
	0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, //  [[sampler(0)]],
	0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, //  sampler tex_blo
	0x6f, 0x6d, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, // omSampler [[samp
	0x6c, 0x65, 0x72, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ler(1)]], sample
	0x72, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x53, 0x61, 0x6d, 0x70, 0x6c, // r tex_depthSampl
	0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x34, 0x29, 0x5d, // er [[sampler(4)]
	0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, // ]).{.    xlatMtl
	0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, // Main_out out = {
	0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x39, // };.    float4 _9
	0x36, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, // 67;.    do.    {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x35, 0x35, // .        int _55
	0x33, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, // 3 = int(_mtl_u.w
	0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, // _h_height.w);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x35, 0x36, //       float3 _56
	0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, // 0 = float3(in.v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, // texcoord0, in.v_
	0x65, 0x79, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // eye);.        fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x35, 0x37, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // oat4 _579 = _mtl
	0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x49, 0x6e, 0x76, 0x5b, 0x69, 0x6e, // _u.matProjInv[in
	0x74, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x5d, 0x20, 0x2a, 0x20, 0x66, // t(in.v_eye)] * f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // loat4((in.v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x29, 0x20, 0x2d, // oord0.x * 2.0) -
	0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x69, 0x6e, 0x2e, //  1.0, 1.0 - (in.
	0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x79, 0x20, 0x2a, 0x20, // v_texcoord0.y * 
	0x32, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x2e, // 2.0), tex_depth.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, // sample(tex_depth
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x35, 0x36, 0x30, 0x2e, 0x78, 0x79, // Sampler, _560.xy
	0x2c, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x72, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x35, 0x36, 0x30, // , uint(rint(_560
	0x2e, 0x7a, 0x29, 0x29, 0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x30, 0x2e, 0x30, 0x29, // .z)), level(0.0)
	0x29, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // ).x, 1.0);.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x35, 0x38, 0x35, 0x20, 0x3d, //    float3 _585 =
	0x20, 0x5f, 0x35, 0x37, 0x39, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, //  _579.xyz / floa
	0x74, 0x33, 0x28, 0x5f, 0x35, 0x37, 0x39, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // t3(_579.w);.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x39, 0x33, 0x31, 0x3b, //     float4 _931;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x39, 0x33, 0x31, 0x2e, 0x78, 0x20, // .        _931.x 
	0x3d, 0x20, 0x5f, 0x35, 0x38, 0x35, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // = _585.x;.      
	0x20, 0x20, 0x5f, 0x39, 0x33, 0x31, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x5f, 0x35, 0x38, 0x35, 0x2e, //   _931.y = _585.
	0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // y;.        float
	0x20, 0x5f, 0x35, 0x39, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x35, 0x38, 0x35, 0x2e, 0x7a, 0x3b, 0x0a, //  _591 = _585.z;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x39, 0x33, 0x31, 0x2e, 0x7a, 0x20, 0x3d, //         _931.z =
	0x20, 0x5f, 0x35, 0x39, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //  _591;.        f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x35, 0x39, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, // loat3 _594 = fas
	0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x39, 0x33, // t::normalize(_93
	0x31, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1.xyz);.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x36, 0x30, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, // float _605 = _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, 0x30, 0x5d, 0x2e, 0x77, 0x20, 0x2a, // l_u.balls[0].w *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, 0x30, 0x5d, //  _mtl_u.balls[0]
	0x2e, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // .w;.        floa
	0x74, 0x33, 0x20, 0x5f, 0x36, 0x31, 0x31, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // t3 _611 = float3
	0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2c, // (in.v_texcoord0,
	0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  in.v_eye);.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x38, 0x34, 0x36, 0x20, //     float4 _846 
	0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x66, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, // = tex_fb_filtere
	0x64, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x66, 0x62, 0x5f, // d.sample(tex_fb_
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // filteredSampler,
	0x20, 0x5f, 0x36, 0x31, 0x31, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x72, //  _611.xy, uint(r
	0x69, 0x6e, 0x74, 0x28, 0x5f, 0x36, 0x31, 0x31, 0x2e, 0x7a, 0x29, 0x29, 0x2c, 0x20, 0x6c, 0x65, // int(_611.z)), le
	0x76, 0x65, 0x6c, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // vel(0.0));.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x36, 0x31, 0x34, 0x20, 0x3d, //    float3 _614 =
	0x20, 0x5f, 0x38, 0x34, 0x36, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //  _846.xyz;.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x36, 0x31, 0x37, 0x20, 0x3d, 0x20, //    float _617 = 
	0x64, 0x6f, 0x74, 0x28, 0x5f, 0x35, 0x39, 0x34, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // dot(_594, _mtl_u
	0x2e, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, // .balls[0].xyz);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x36, //         float _6
	0x32, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x36, 0x31, 0x37, 0x20, 0x2a, 0x20, 0x5f, 0x36, 0x31, // 27 = (_617 * _61
	0x37, 0x29, 0x20, 0x2d, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 7) - (dot(_mtl_u
	0x2e, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, // .balls[0].xyz, _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, 0x30, 0x5d, 0x2e, 0x78, // mtl_u.balls[0].x
	0x79, 0x7a, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x36, 0x30, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // yz) - _605);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x39, 0x36, 0x39, //      float3 _969
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x36, // ;.        if (_6
	0x32, 0x37, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 27 < 0.0).      
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   {.            
	0x5f, 0x39, 0x36, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x36, 0x31, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, // _969 = _614;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, //      }.        e
	0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, // lse.        {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x35, //           if (_5
	0x39, 0x31, 0x20, 0x3e, 0x20, 0x28, 0x28, 0x5f, 0x36, 0x31, 0x37, 0x20, 0x2d, 0x20, 0x73, 0x71, // 91 > ((_617 - sq
	0x72, 0x74, 0x28, 0x5f, 0x36, 0x32, 0x37, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x35, 0x39, 0x34, // rt(_627)) * _594
	0x2e, 0x7a, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .z)).           
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  {.             
	0x20, 0x20, 0x20, 0x5f, 0x39, 0x36, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, //    _967 = float4
	0x28, 0x5f, 0x38, 0x34, 0x36, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, // (_846.xyz, 1.0);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  break;.        
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     }.          
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x36, 0x35, 0x36, 0x20, 0x3d, 0x20, //   float3 _656 = 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // float3(in.v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, // oord0, in.v_eye)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x39, // ;.            _9
	0x36, 0x39, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x2e, 0x73, // 69 = tex_bloom.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x53, // ample(tex_bloomS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x36, 0x35, 0x36, 0x2e, 0x78, 0x79, 0x2c, // ampler, _656.xy,
	0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x72, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x36, 0x35, 0x36, 0x2e, //  uint(rint(_656.
	0x7a, 0x29, 0x29, 0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, // z)), level(0.0))
	0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, // .xyz;.        }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x39, 0x36, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x39, 0x36, // 965;.        _96
	0x35, 0x20, 0x3d, 0x20, 0x5f, 0x36, 0x31, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 5 = _614;.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x39, 0x37, 0x31, 0x3b, 0x0a, 0x20, //   float3 _971;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, //        for (int 
	0x5f, 0x39, 0x36, 0x34, 0x20, 0x3d, 0x20, 0x31, 0x3b, 0x20, 0x5f, 0x39, 0x36, 0x34, 0x20, 0x3c, // _964 = 1; _964 <
	0x20, 0x5f, 0x35, 0x35, 0x33, 0x3b, 0x20, 0x5f, 0x39, 0x36, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x39, //  _553; _965 = _9
	0x37, 0x31, 0x2c, 0x20, 0x5f, 0x39, 0x36, 0x34, 0x2b, 0x2b, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // 71, _964++).    
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x36, 0x37, 0x31, 0x20, 0x3d, 0x20, 0x66, //   float _671 = f
	0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x39, 0x36, 0x34, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, // loat(_964) / _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x77, // l_u.w_h_height.w
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // ;.            fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x38, 0x36, 0x32, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, // oat3 _862 = mix(
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, 0x31, 0x5d, 0x2e, // _mtl_u.balls[1].
	0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x62, 0x61, 0x6c, 0x6c, // xyz, _mtl_u.ball
	0x73, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // s[0].xyz, float3
	0x28, 0x5f, 0x36, 0x37, 0x31, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // (_671));.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x36, 0x37, 0x39, 0x20, //      float _679 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x35, 0x39, 0x34, 0x2c, 0x20, 0x5f, 0x38, 0x36, 0x32, // = dot(_594, _862
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // );.            f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x36, 0x38, 0x39, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x36, 0x37, // loat _689 = (_67
	0x39, 0x20, 0x2a, 0x20, 0x5f, 0x36, 0x37, 0x39, 0x29, 0x20, 0x2d, 0x20, 0x28, 0x64, 0x6f, 0x74, // 9 * _679) - (dot
	0x28, 0x5f, 0x38, 0x36, 0x32, 0x2c, 0x20, 0x5f, 0x38, 0x36, 0x32, 0x29, 0x20, 0x2d, 0x20, 0x5f, // (_862, _862) - _
	0x36, 0x30, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 605);.          
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x36, 0x38, 0x39, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, //   if (_689 < 0.0
	0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, // ).            {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x5f, 0x39, 0x37, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x39, 0x36, 0x35, 0x20, 0x2b, 0x20, 0x5f, 0x39, // _971 = _965 + _9
	0x36, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 69;.            
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, // }.            el
	0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, // se.            {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x37, 0x30, 0x34, 0x20, 0x3d, 0x20, 0x28, //  float3 _704 = (
	0x5f, 0x35, 0x39, 0x34, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x36, 0x37, 0x39, 0x20, 0x2d, 0x20, 0x73, // _594 * (_679 - s
	0x71, 0x72, 0x74, 0x28, 0x5f, 0x36, 0x38, 0x39, 0x29, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x38, // qrt(_689))) - _8
	0x36, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 62;.            
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x37, 0x31, 0x37, 0x20, //     float4 _717 
	0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, // = _mtl_u.matProj
	0x5b, 0x69, 0x6e, 0x74, 0x28, 0x72, 0x69, 0x6e, 0x74, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x65, // [int(rint(in.v_e
	0x79, 0x65, 0x29, 0x29, 0x5d, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, // ye))] * float4(_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, 0x31, 0x5d, 0x2e, 0x78, // mtl_u.balls[1].x
	0x79, 0x7a, 0x20, 0x2b, 0x20, 0x5f, 0x37, 0x30, 0x34, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, // yz + _704, 1.0);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x37, 0x33, 0x30, 0x20, 0x3d, 0x20, 0x5f, //  float4 _730 = _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x69, 0x6e, // mtl_u.matProj[in
	0x74, 0x28, 0x72, 0x69, 0x6e, 0x74, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, // t(rint(in.v_eye)
	0x29, 0x5d, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // )] * float4(_mtl
	0x5f, 0x75, 0x2e, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // _u.balls[0].xyz 
	0x2b, 0x20, 0x5f, 0x37, 0x30, 0x34, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, // + _704, 1.0);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x37, 0x33, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x37, 0x31, 0x37, // oat2 _736 = _717
	0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x37, 0x31, // .xy / float2(_71
	0x37, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 7.w);.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x37, 0x33, 0x38, //       float _738
	0x20, 0x3d, 0x20, 0x5f, 0x37, 0x33, 0x36, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //  = _736.x;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x32, 0x20, 0x5f, 0x37, 0x34, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x37, 0x33, 0x30, 0x2e, 0x78, 0x79, // 2 _746 = _730.xy
	0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x37, 0x33, 0x30, 0x2e, 0x77, //  / float2(_730.w
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x37, 0x34, 0x38, 0x20, 0x3d, 0x20, //    float _748 = 
	0x5f, 0x37, 0x34, 0x36, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _746.x;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x37, 0x37, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x66, 0x6c, // 772 = float3((fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, // oat2(0.5) + (flo
	0x61, 0x74, 0x32, 0x28, 0x5f, 0x37, 0x33, 0x38, 0x2c, 0x20, 0x5f, 0x39, 0x36, 0x33, 0x29, 0x20, // at2(_738, _963) 
	0x2a, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, // * 0.5)).x, (floa
	0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // t2(0.5) + (float
	0x32, 0x28, 0x5f, 0x37, 0x33, 0x38, 0x2c, 0x20, 0x2d, 0x5f, 0x37, 0x33, 0x36, 0x2e, 0x79, 0x29, // 2(_738, -_736.y)
	0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, //  * 0.5)).y, in.v
	0x5f, 0x65, 0x79, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _eye);.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x37, //        float3 _7
	0x39, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x66, 0x6c, 0x6f, // 97 = float3((flo
	0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, // at2(0.5) + (floa
	0x74, 0x32, 0x28, 0x5f, 0x37, 0x34, 0x38, 0x2c, 0x20, 0x5f, 0x39, 0x36, 0x33, 0x29, 0x20, 0x2a, // t2(_748, _963) *
	0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  0.5)).x, (float
	0x32, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // 2(0.5) + (float2
	0x28, 0x5f, 0x37, 0x34, 0x38, 0x2c, 0x20, 0x2d, 0x5f, 0x37, 0x34, 0x36, 0x2e, 0x79, 0x29, 0x20, // (_748, -_746.y) 
	0x2a, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, // * 0.5)).y, in.v_
	0x65, 0x79, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // eye);.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x39, 0x37, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x39, 0x36, //       _971 = _96
	0x35, 0x20, 0x2b, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, // 5 + mix(tex_bloo
	0x6d, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, // m.sample(tex_blo
	0x6f, 0x6d, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x37, 0x37, 0x32, 0x2e, // omSampler, _772.
	0x78, 0x79, 0x2c, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x72, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x37, // xy, uint(rint(_7
	0x37, 0x32, 0x2e, 0x7a, 0x29, 0x29, 0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x30, 0x2e, // 72.z)), level(0.
	0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x66, 0x62, 0x5f, // 0)).xyz, tex_fb_
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // filtered.sample(
	0x74, 0x65, 0x78, 0x5f, 0x66, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x53, // tex_fb_filteredS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x37, 0x39, 0x37, 0x2e, 0x78, 0x79, 0x2c, // ampler, _797.xy,
	0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x72, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x37, 0x39, 0x37, 0x2e, //  uint(rint(_797.
	0x7a, 0x29, 0x29, 0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, // z)), level(0.0))
	0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x36, 0x37, // .xyz, float3(_67
	0x31, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1));.           
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, //  }.        }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x39, 0x36, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, //      _967 = floa
	0x74, 0x34, 0x28, 0x5f, 0x39, 0x36, 0x35, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // t4(_965 / float3
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, // (_mtl_u.w_h_heig
	0x68, 0x74, 0x2e, 0x77, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // ht.w), 1.0);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //      break;.    
	0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, // } while(false);.
	0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, //     out.bgfx_Fra
	0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x39, 0x36, 0x37, 0x3b, 0x0a, 0x20, // gData0 = _967;. 
	0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, //    return out;.}
	0x0a, 0x0a, 0x00, 0x00, 0x90, 0x01,                                                             // ......
};
static const uint8_t fs_pp_motionblur_st_essl[8876] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4a, 0x63, 0xcf, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x99, 0x22, // FSH.Jc._......."
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x32, 0x30, 0x20, 0x65, // ..#version 320 e
	0x73, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x47, 0x4c, 0x5f, // s.#extension GL_
	0x45, 0x58, 0x54, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // EXT_shader_textu
	0x72, 0x65, 0x5f, 0x6c, 0x6f, 0x64, 0x20, 0x3a, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x0a, // re_lod : enable.
	0x23, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x47, 0x4c, 0x5f, 0x45, 0x58, // #extension GL_EX
	0x54, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x20, // T_texture_array 
	0x3a, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, // : enable.#define
	0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, //  attribute in.#d
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, // efine varying in
	0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // .precision highp
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3b, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, //  float;.precisio
	0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x70, 0x72, 0x65, // n highp int;.pre
	0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x73, 0x61, 0x6d, // cision highp sam
	0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x3b, 0x0a, 0x23, 0x64, 0x65, // pler2DArray;.#de
	0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x4c, 0x6f, // fine texture2DLo
	0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // d      texture2D
	0x4c, 0x6f, 0x64, 0x45, 0x58, 0x54, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, // LodEXT.#define t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, // exture2DGrad    
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x45, 0x58, //  texture2DGradEX
	0x54, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // T.#define textur
	0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // e2DProjLod  text
	0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x45, 0x58, 0x54, 0x0a, // ure2DProjLodEXT.
	0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, // #define texture2
	0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // DProjGrad textur
	0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x45, 0x58, 0x54, 0x0a, 0x23, // e2DProjGradEXT.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, // define textureCu
	0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // beLod    texture
	0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x45, 0x58, 0x54, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, // CubeLodEXT.#defi
	0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, // ne textureCubeGr
	0x61, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, // ad   textureCube
	0x47, 0x72, 0x61, 0x64, 0x45, 0x58, 0x54, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // GradEXT.#define 
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // shadow2D(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // r, _coord) textu
	0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // re(_sampler, _co
	0x6f, 0x72, 0x64, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x73, 0x68, 0x61, // ord).#define sha
	0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // dow2DProj(_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x74, 0x65, 0x78, 0x74, // er, _coord) text
	0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ureProj(_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x6f, 0x75, 0x74, 0x20, 0x6d, 0x65, // , _coord).out me
	0x64, 0x69, 0x75, 0x6d, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, // diump vec4 bgfx_
	0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, // FragColor;.varyi
	0x6e, 0x67, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x3b, 0x0a, // ng float v_eye;.
	0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, // varying vec2 v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, // excoord0;.vec3 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, // nstMul(vec3 _vec
	0x2c, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // , mat3 _mtx) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, // eturn ( (_vec) *
	0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, //  (_mtx) ); }.vec
	0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, // 3 instMul(mat3 _
	0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, // mtx, vec3 _vec) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, // { return ( (_mtx
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // ) * (_vec) ); }.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, // vec4 instMul(vec
	0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, // 4 _vec, mat4 _mt
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, // x) { return ( (_
	0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, // vec) * (_mtx) );
	0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, //  }.vec4 instMul(
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // mat4 _mtx, vec4 
	0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, // _vec) { return (
	0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, //  (_mtx) * (_vec)
	0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, //  ); }.float rcp(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // float _a) { retu
	0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, // rn 1.0/_a; }.vec
	0x32, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, // 2 rcp(vec2 _a) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, //  return vec2(1.0
	0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, // )/_a; }.vec3 rcp
	0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // (vec3 _a) { retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, // rn vec3(1.0)/_a;
	0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, //  }.vec4 rcp(vec4
	0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, //  _a) { return ve
	0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, // c4(1.0)/_a; }.ve
	0x63, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, // c2 vec2_splat(fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // oat _x) { return
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, //  vec2(_x, _x); }
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // .vec3 vec3_splat
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // (float _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // urn vec3(_x, _x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, //  _x); }.vec4 vec
	0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, // 4_splat(float _x
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // ) { return vec4(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // _x, _x, _x, _x);
	0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, //  }.uvec2 uvec2_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // plat(uint _x) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, // return uvec2(_x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, //  _x); }.uvec3 uv
	0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, // ec3_splat(uint _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, // x) { return uvec
	0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // 3(_x, _x, _x); }
	0x0a, 0x75, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, // .uvec4 uvec4_spl
	0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // at(uint _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // turn uvec4(_x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, // x, _x, _x); }.ma
	0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, // t4 mtxFromRows(v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, // ec4 _0, vec4 _1,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, //  vec4 _2, vec4 _
	0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, // 3).{.return tran
	0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, // spose(mat4(_0, _
	0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // 1, _2, _3) );.}.
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, // mat4 mtxFromCols
	0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // (vec4 _0, vec4 _
	0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // 1, vec4 _2, vec4
	0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, //  _3).{.return ma
	0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, // t4(_0, _1, _2, _
	0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, // 3);.}.mat3 mtxFr
	0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, // omRows(vec3 _0, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, // vec3 _1, vec3 _2
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, // ).{.return trans
	0x70, 0x6f, 0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, // pose(mat3(_0, _1
	0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, // , _2) );.}.mat3 
	0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, // mtxFromCols(vec3
	0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, //  _0, vec3 _1, ve
	0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c3 _2).{.return 
	0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, // mat3(_0, _1, _2)
	0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, // ;.}.uniform vec4
	0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, //  u_viewRect;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, // form vec4 u_view
	0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // Texel;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // at4 u_view;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, // orm mat4 u_invVi
	0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // ew;.uniform mat4
	0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, //  u_proj;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, //  mat4 u_invProj;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // viewProj;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, // m mat4 u_invView
	0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // Proj;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, // t4 u_model[32];.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, // uniform mat4 u_m
	0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // odelView;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, // m mat4 u_modelVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // ewProj;.uniform 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, // vec4 u_alphaRef4
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x66, 0x6c, 0x6f, // ;.float sqr( flo
	0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // at v).{.return v
	0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, // *v;.}.vec2 sqr( 
	0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // vec2 v).{.return
	0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x71, 0x72, //  v*v;.}.vec3 sqr
	0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // ( vec3 v).{.retu
	0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, // rn v*v;.}.vec3 m
	0x75, 0x6c, 0x5f, 0x77, 0x31, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, 0x6d, // ul_w1( vec3 v, m
	0x61, 0x74, 0x34, 0x20, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // at4 m).{.return 
	0x76, 0x2e, 0x78, 0x2a, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, // v.x*m[0].xyz + (
	0x76, 0x2e, 0x79, 0x2a, 0x6d, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, // v.y*m[1].xyz + (
	0x76, 0x2e, 0x7a, 0x2a, 0x6d, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x6d, // v.z*m[2].xyz + m
	0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // [3].xyz));.}.flo
	0x61, 0x74, 0x20, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, // at acos_approx_d
	0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, // ivPI( float v).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, // .float x = abs(v
	0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, // );.if(1. - x <= 
	0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, // 0.00006103515625
	0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, // ).return (v >= 0
	0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, // .) ? 0. : 1.;.fl
	0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, // oat res = ((-0.1
	0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, // 55972/3.14159265
	0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, // 3589793238462643
	0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, // 3832795) * x + (
	0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, // 1.56467/3.141592
	0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, // 6535897932384626
	0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, // 433832795) ) * s
	0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // qrt(1. - x);.ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, // urn (v >= 0.) ? 
	0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, // res : 1. - res;.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, // }.float atan2_ap
	0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, // prox_div2PI( flo
	0x61, 0x74, 0x20, 0x79, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, // at y, float x).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, 0x61, // .float abs_y = a
	0x62, 0x73, 0x28, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, // bs(y);.float abs
	0x5f, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, // _x = abs(x);.if(
	0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, // abs_x <= 0.00006
	0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, // 103515625 && abs
	0x5f, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, // _y <= 0.00006103
	0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, // 515625).return 0
	0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, // .;.float r = (ab
	0x73, 0x5f, 0x78, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, // s_x - abs_y) / (
	0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, 0x0a, // abs_x + abs_y);.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, // float angle = ((
	0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, // x < 0.) ? (3./8.
	0x29, 0x20, 0x3a, 0x20, 0x28, 0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, // ) : (1./8.)).+ (
	0x30, 0x2e, 0x32, 0x31, 0x31, 0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, // 0.211868 /(2.*3.
	0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, // 1415926535897932
	0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, // 384626433832795)
	0x20, 0x2a, 0x20, 0x72, 0x20, 0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, //  * r * r - 0.987
	0x33, 0x30, 0x35, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // 305 /(2.*3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, // 6433832795)) * (
	0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, // (x < 0.) ? -r : 
	0x72, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, // r);.return (y < 
	0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, // 0.) ? -angle : a
	0x6e, 0x67, 0x6c, 0x65, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, // ngle;.}.float as
	0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, // in_approx_divPI(
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, //  float v).{.floa
	0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, // t x = abs(v);.if
	0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, // (1. - x <= 0.000
	0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, // 06103515625).ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, // urn (v >= 0.) ? 
	0x30, 0x2e, 0x35, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // 0.5 : -0.5;.floa
	0x74, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, // t res = ((-0.155
	0x39, 0x37, 0x32, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, // 972/3.1415926535
	0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, // 8979323846264338
	0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, // 32795) * x + (1.
	0x35, 0x36, 0x34, 0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, // 56467/3.14159265
	0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, // 3589793238462643
	0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, // 3832795) ) * sqr
	0x74, 0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // t(1. - x);.retur
	0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, // n (v >= 0.) ? 0.
	0x35, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, // 5 - res : -0.5 +
	0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, 0x79, //  res;.}.vec2 ray
	0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, // _to_equirectangu
	0x6c, 0x61, 0x72, 0x5f, 0x75, 0x76, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, // lar_uv( vec3 ray
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // ).{.return vec2(
	0x0a, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, // .0.5 + atan2_app
	0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, // rox_div2PI(ray.y
	0x2c, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, // , ray.x),.acos_a
	0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, // pprox_divPI(ray.
	0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, // z));.}.float Inv
	0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // sRGB( float colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, // r).{.if (color <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // = 0.04045).retur
	0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, // n color * (1.0/1
	0x32, 0x2e, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, // 2.92);.else.retu
	0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, // rn pow(color * (
	0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, // 1.0/1.055) + (0.
	0x30, 0x35, 0x35, 0x2f, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, // 055/1.055), 2.4)
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, // ;.}.float InvRec
	0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // 709( float color
	0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, // ).{.if (color <=
	0x20, 0x30, 0x2e, 0x30, 0x38, 0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, //  0.081).return c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, // olor * (1.0/4.5)
	0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, // ;.else.return po
	0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, // w(color * (1.0/1
	0x2e, 0x30, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, // .099) + (0.099/1
	0x2e, 0x30, 0x39, 0x39, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, // .099), 1.0/0.45)
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, // ;.}.float InvGam
	0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, // ma( float color)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, // .{.return InvsRG
	0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // B(color);.}.vec3
	0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, //  InvGamma( vec3 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // color).{.return 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, // vec3(InvGamma(co
	0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, // lor.x),InvGamma(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, // color.y),InvGamm
	0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // a(color.z));.}.v
	0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, // ec3 InvToneMap( 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, // vec3 color).{.fl
	0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, // oat inv_2bh = 0.
	0x35, 0x2f, 0x30, 0x2e, 0x32, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, // 5/0.25;.float bh
	0x20, 0x3d, 0x20, 0x34, 0x2e, 0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, //  = 4.0*0.25 - 2.
	0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // 0;.return (color
	0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, //  - 1.0 + sqrt(co
	0x6c, 0x6f, 0x72, 0x2a, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, // lor*(color + bh)
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, //  + 1.0))*inv_2bh
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, // ;.}.float sRGB( 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float f).{.float
	0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, //  s;.if (f <= 0.0
	0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, // 031308).s = 12.9
	0x32, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, // 2 * f;.else.s = 
	0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, // 1.055 * pow(f, 1
	0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, // .0/2.4) - 0.055;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // .return s;.}.flo
	0x61, 0x74, 0x20, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // at Rec709( float
	0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, //  f).{.float s;.i
	0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, // f (f <= 0.018).s
	0x20, 0x3d, 0x20, 0x34, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, //  = 4.5 * f;.else
	0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, // .s = 1.099 * pow
	0x28, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, // (f, 0.45) - 0.09
	0x39, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // 9;.return s;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, // loat FBGamma( fl
	0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // oat color).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, // urn sRGB(color);
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, // .}.vec2 FBGamma(
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, //  vec2 color).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, // eturn vec2(FBGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, // ma(color.x),FBGa
	0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, // mma(color.y));.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, // .vec3 FBGamma( v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // ec3 color).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, // urn vec3(FBGamma
	0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, // (color.x),FBGamm
	0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, // a(color.y),FBGam
	0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // ma(color.z));.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x32, 0x32, 0x28, 0x20, // vec3 FBGamma22( 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // vec3 color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, // turn vec3(pow(co
	0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, // lor.x, 1.0/2.2),
	0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x2c, 0x20, 0x31, 0x2e, 0x30, // pow(color.y, 1.0
	0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, // /2.2),pow(color.
	0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // z, 1.0/2.2));.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, // float FBToneMap(
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  float l).{.retu
	0x72, 0x6e, 0x20, 0x6c, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, // rn l * ((l*0.25 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, // + 1.0) / (l + 1.
	0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, // 0));.}.vec2 FBTo
	0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // neMap( vec2 colo
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, // r).{.float l = d
	0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, // ot(color,vec2(0.
	0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, // 176204+0.0108109
	0x2a, 0x30, 0x2e, 0x35, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, // *0.5,0.812985+0.
	0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, // 0108109*0.5));.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, // eturn color * ((
	0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, // l*0.25 + 1.0) / 
	0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // (l + 1.0));.}.ve
	0x63, 0x33, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, // c3 FBToneMap( ve
	0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // c3 color).{.floa
	0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, // t l = dot(color,
	0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, // vec3(0.176204,0.
	0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, // 812985,0.0108109
	0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // ));.return color
	0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, //  * ((l*0.25 + 1.
	0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, // 0) / (l + 1.0));
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, // .}.vec4 Additive
	0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, // ( vec4 cBase, ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // c4 cBlend, float
	0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  percent).{.retu
	0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // rn cBase + cBlen
	0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // d*percent;.}.vec
	0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // 3 Screen ( vec3 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, // cBase, vec3 cBle
	0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, // nd).{.return 1.0
	0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, //  - (1.0 - cBase)
	0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, //  * (1.0 - cBlend
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, // );.}.vec4 Screen
	0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, //  ( vec4 cBase, v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // ec4 cBlend).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // turn 1.0 - (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // - cBase) * (1.0 
	0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // - cBlend);.}.vec
	0x33, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, // 3 ScreenHDR ( ve
	0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // c3 cBase, vec3 c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // Blend).{.return 
	0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // max(1.0 - (1.0 -
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, //  cBase) * (1.0 -
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, //  cBlend), vec3(0
	0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // .,0.,0.));.}.vec
	0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, // 4 ScreenHDR ( ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // c4 cBase, vec4 c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // Blend).{.return 
	0x6d, 0x61, 0x78, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // max(1.0 - (1.0 -
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, //  cBase) * (1.0 -
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, //  cBlend), vec4(0
	0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // .,0.,0.,0.));.}.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, 0x20, // vec4 Multiply ( 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // vec4 cBase, vec4
	0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, //  cBlend, float p
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ercent).{.return
	0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, //  cBase * cBlend*
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // percent;.}.vec4 
	0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // Overlay ( vec4 c
	0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // Base, vec4 cBlen
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, // d).{.vec4 cNew =
	0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, //  step(0.5, cBase
	0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, // );.cNew = mix(cB
	0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, // ase*cBlend*2.0, 
	0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, // 1.0-2.0*(1.0-cBa
	0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, // se)*(1.0-cBlend)
	0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // , cNew);.return 
	0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, // cNew;.}.vec4 Ove
	0x72, 0x6c, 0x61, 0x79, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // rlayHDR ( vec4 c
	0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, // Base, vec4 cBlen
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, // d).{.vec4 cNew =
	0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, //  step(0.5, cBase
	0x29, 0x3b, 0x0a, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, // );.cNew = max(mi
	0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, // x(cBase*cBlend*2
	0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, // .0, 1.0-2.0*(1.0
	0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, // -cBase)*(1.0-cBl
	0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, // end), cNew), vec
	0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, // 4(0.,0.,0.,0.));
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, // .return cNew;.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, // vec3 cos_hemisph
	0x65, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, // ere_sample( vec2
	0x20, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x68, 0x69, 0x20, //  t).{.float phi 
	0x3d, 0x20, 0x74, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, 0x31, // = t.y * (2.0*3.1
	0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, // 4159265358979323
	0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x3b, // 84626433832795);
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, // .float cosTheta 
	0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, // = sqrt(1.0 - t.x
	0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, // );.float sinThet
	0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, // a = sqrt(t.x);.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x7b, 0x73, 0x70, 0x3d, // loat sp,cp;.{sp=
	0x73, 0x69, 0x6e, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, 0x63, 0x70, 0x3d, 0x63, 0x6f, 0x73, 0x28, // sin(phi);cp=cos(
	0x70, 0x68, 0x69, 0x29, 0x3b, 0x7d, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // phi);};.return v
	0x65, 0x63, 0x33, 0x28, 0x63, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, // ec3(cp * sinThet
	0x61, 0x2c, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, // a, cosTheta, sp 
	0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // * sinTheta);.}.v
	0x65, 0x63, 0x33, 0x20, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, // ec3 rotate_to_ve
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, // ctor_upper( vec3
	0x20, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, //  vec, vec3 norma
	0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, // l).{.if(normal.y
	0x20, 0x3e, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, 0x66, //  > -0.99999).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, // loat h = 1.0/(1.
	0x30, 0x2b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, // 0+normal.y);.flo
	0x61, 0x74, 0x20, 0x68, 0x7a, 0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // at hz = h*normal
	0x2e, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, 0x20, // .z;.float hzx = 
	0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, 0x74, // hz*normal.x;.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, // urn vec3(.vec.x 
	0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, 0x6e, // * (normal.y+hz*n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x79, // ormal.z) + vec.y
	0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, //  * normal.x - ve
	0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, // c.z * hzx,.vec.y
	0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, 0x65, //  * normal.y - ve
	0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, // c.x * normal.x -
	0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, //  vec.z * normal.
	0x7a, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // z,.vec.y * norma
	0x6c, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, 0x7a, // l.z - vec.x * hz
	0x78, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, // x + vec.z * (nor
	0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // mal.y+h*normal.x
	0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x65, // *normal.x));.}.e
	0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, 0x3b, // lse return -vec;
	0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // .}.uniform vec4 
	0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, 0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // balls[8];.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x32, // m mat4 matProj[2
	0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // ];.uniform mat4 
	0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x49, 0x6e, 0x76, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, 0x75, // matProjInv[2];.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, // niform vec4 w_h_
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // height;.uniform 
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x74, // sampler2DArray t
	0x65, 0x78, 0x5f, 0x66, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x3b, 0x0a, // ex_fb_filtered;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, // uniform sampler2
	0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, // DArray tex_bloom
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ;.uniform sample
	0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x65, 0x70, // r2DArray tex_dep
	0x74, 0x68, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, // th;.void main().
	0x7b, 0x0a, 0x69, 0x6e, 0x74, 0x20, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x20, 0x3d, // {.int nSamples =
	0x20, 0x69, 0x6e, 0x74, 0x28, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, //  int((w_h_height
	0x2e, 0x77, 0x29, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x63, 0x72, 0x65, 0x65, // .w));.vec2 scree
	0x6e, 0x55, 0x56, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, // nUV = vec2(v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x76, // coord0.x, 1. - v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, // _texcoord0.y);.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x44, 0x65, 0x70, 0x74, 0x68, // loat screenDepth
	0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, //  = texture2DArra
	0x79, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x2c, 0x20, // yLod(tex_depth, 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x55, 0x56, 0x29, 0x2e, // vec3((screenUV).
	0x78, 0x2c, 0x20, 0x28, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x55, 0x56, 0x29, 0x2e, 0x79, 0x2c, // x, (screenUV).y,
	0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x20, //  v_eye), 0.0).x 
	0x2a, 0x20, 0x32, 0x2e, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // * 2. - 1.;.vec4 
	0x70, 0x72, 0x6f, 0x6a, 0x50, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x76, // projPos = vec4(v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x32, // _texcoord0.x * 2
	0x2e, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x2c, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x76, 0x5f, 0x74, // . - 1., 1. - v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x2c, // excoord0.y * 2.,
	0x20, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x44, 0x65, 0x70, 0x74, 0x68, 0x2c, 0x20, 0x31, 0x2e, //  screenDepth, 1.
	0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x50, 0x6f, 0x73, // );.vec4 pixelPos
	0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x49, 0x6e, 0x76, //  = ( (matProjInv
	0x5b, 0x69, 0x6e, 0x74, 0x28, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x5d, 0x29, 0x20, 0x2a, 0x20, // [int(v_eye)]) * 
	0x28, 0x70, 0x72, 0x6f, 0x6a, 0x50, 0x6f, 0x73, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x70, 0x69, 0x78, // (projPos) );.pix
	0x65, 0x6c, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x70, 0x69, 0x78, 0x65, // elPos.xyz = pixe
	0x6c, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x70, 0x69, 0x78, 0x65, 0x6c, // lPos.xyz / pixel
	0x50, 0x6f, 0x73, 0x2e, 0x77, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x44, // Pos.w;.vec3 rayD
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // irection = norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, // lize(pixelPos.xy
	0x7a, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, // z);.vec3 ball_po
	0x73, 0x20, 0x3d, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, // s = balls[0].xyz
	0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // ;.vec3 prev_ball
	0x5f, 0x70, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, 0x31, 0x5d, 0x2e, // _pos = balls[1].
	0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // xyz;.float ball_
	0x72, 0x32, 0x20, 0x3d, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, 0x30, 0x5d, 0x2e, 0x77, 0x20, // r2 = balls[0].w 
	0x2a, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, 0x30, 0x5d, 0x2e, 0x77, 0x3b, 0x0a, 0x76, 0x65, // * balls[0].w;.ve
	0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // c3 color = textu
	0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, // re2DArrayLod(tex
	0x5f, 0x66, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x2c, 0x20, 0x76, 0x65, // _fb_filtered, ve
	0x63, 0x33, 0x28, 0x28, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x55, 0x56, 0x29, 0x2e, 0x78, 0x2c, // c3((screenUV).x,
	0x20, 0x28, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x55, 0x56, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x76, //  (screenUV).y, v
	0x5f, 0x65, 0x79, 0x65, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x3b, // _eye), 0.0).rgb;
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, // .vec3 noIntersec
	0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // tColor;.{.float 
	0x62, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x72, 0x61, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, // b = dot(rayDirec
	0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x29, 0x3b, // tion, ball_pos);
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x62, // .float c = dot(b
	0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, // all_pos, ball_po
	0x73, 0x29, 0x20, 0x2d, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x72, 0x32, 0x3b, 0x0a, 0x66, 0x6c, // s) - ball_r2;.fl
	0x6f, 0x61, 0x74, 0x20, 0x64, 0x65, 0x74, 0x20, 0x3d, 0x20, 0x62, 0x20, 0x2a, 0x20, 0x62, 0x20, // oat det = b * b 
	0x2d, 0x20, 0x63, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x64, 0x65, 0x74, 0x20, 0x3c, 0x20, 0x30, // - c;.if (det < 0
	0x2e, 0x30, 0x29, 0x20, 0x7b, 0x0a, 0x6e, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, // .0) {.noIntersec
	0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, // tColor = color;.
	0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, // } else {.float i
	0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x5f, 0x7a, 0x20, 0x3d, // ntersect_pos_z =
	0x20, 0x28, 0x62, 0x20, 0x2d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x64, 0x65, 0x74, 0x29, 0x29, //  (b - sqrt(det))
	0x20, 0x2a, 0x20, 0x72, 0x61, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, //  * rayDirection.
	0x7a, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x2e, // z;.if (pixelPos.
	0x7a, 0x20, 0x3e, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x6f, // z > intersect_po
	0x73, 0x5f, 0x7a, 0x29, 0x0a, 0x7b, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, // s_z).{.bgfx_Frag
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x63, 0x6f, 0x6c, // Color = vec4(col
	0x6f, 0x72, 0x2c, 0x20, 0x31, 0x2e, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x3b, // or, 1.);.return;
	0x0a, 0x7d, 0x0a, 0x6e, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x43, 0x6f, // .}.noIntersectCo
	0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, // lor = texture2DA
	0x72, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, // rrayLod(tex_bloo
	0x6d, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x55, // m, vec3((screenU
	0x56, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x55, 0x56, 0x29, // V).x, (screenUV)
	0x2e, 0x79, 0x2c, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, // .y, v_eye), 0.0)
	0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x7d, 0x0a, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, // .rgb;.}.}.for (i
	0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, 0x31, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x6e, 0x53, // nt i = 1; i < nS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x3b, 0x20, 0x69, 0x2b, 0x2b, 0x29, 0x0a, 0x7b, 0x0a, 0x66, // amples; i++).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x69, 0x78, 0x5f, 0x70, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x66, // loat mix_pos = f
	0x6c, 0x6f, 0x61, 0x74, 0x28, 0x69, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x68, // loat(i) / (w_h_h
	0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, // eight.w);.vec3 s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x20, 0x3d, // ample_ball_pos =
	0x20, 0x6d, 0x69, 0x78, 0x28, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, //  mix(prev_ball_p
	0x6f, 0x73, 0x2c, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x6d, 0x69, // os, ball_pos, mi
	0x78, 0x5f, 0x70, 0x6f, 0x73, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x20, // x_pos);.float b 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x72, 0x61, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, // = dot(rayDirecti
	0x6f, 0x6e, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // on, sample_ball_
	0x70, 0x6f, 0x73, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x20, 0x3d, 0x20, // pos);.float c = 
	0x64, 0x6f, 0x74, 0x28, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // dot(sample_ball_
	0x70, 0x6f, 0x73, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x6c, // pos, sample_ball
	0x5f, 0x70, 0x6f, 0x73, 0x29, 0x20, 0x2d, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x72, 0x32, 0x3b, // _pos) - ball_r2;
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x65, 0x74, 0x20, 0x3d, 0x20, 0x62, 0x20, 0x2a, // .float det = b *
	0x20, 0x62, 0x20, 0x2d, 0x20, 0x63, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x64, 0x65, 0x74, 0x20, //  b - c;.if (det 
	0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7b, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, // < 0.0) {.color +
	0x3d, 0x20, 0x6e, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, // = noIntersectCol
	0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x76, 0x65, 0x63, // or;.} else {.vec
	0x33, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x5f, 0x6f, 0x66, 0x73, 0x20, // 3 intersect_ofs 
	0x3d, 0x20, 0x28, 0x62, 0x20, 0x2d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x64, 0x65, 0x74, 0x29, // = (b - sqrt(det)
	0x29, 0x20, 0x2a, 0x20, 0x72, 0x61, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, // ) * rayDirection
	0x20, 0x2d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, //  - sample_ball_p
	0x6f, 0x73, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x70, 0x72, // os;.vec4 prev_pr
	0x6f, 0x6a, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x5b, // oj = ( (matProj[
	0x69, 0x6e, 0x74, 0x28, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x28, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, // int(round(v_eye)
	0x29, 0x5d, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x70, 0x72, 0x65, 0x76, // )]) * (vec4(prev
	0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x20, 0x2b, 0x20, 0x69, 0x6e, 0x74, 0x65, // _ball_pos + inte
	0x72, 0x73, 0x65, 0x63, 0x74, 0x5f, 0x6f, 0x66, 0x73, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, // rsect_ofs, 1.0))
	0x20, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x75, 0x72, 0x5f, 0x70, 0x72, 0x6f, //  );.vec4 cur_pro
	0x6a, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x69, // j = ( (matProj[i
	0x6e, 0x74, 0x28, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x28, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x29, // nt(round(v_eye))
	0x5d, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x5f, // ]) * (vec4(ball_
	0x70, 0x6f, 0x73, 0x20, 0x2b, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x5f, // pos + intersect_
	0x6f, 0x66, 0x73, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x70, 0x72, // ofs, 1.0)) );.pr
	0x65, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x3d, 0x20, 0x70, 0x72, // ev_proj.xy /= pr
	0x65, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x77, 0x3b, 0x0a, 0x63, 0x75, 0x72, 0x5f, 0x70, // ev_proj.w;.cur_p
	0x72, 0x6f, 0x6a, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x3d, 0x20, 0x63, 0x75, 0x72, 0x5f, 0x70, 0x72, // roj.xy /= cur_pr
	0x6f, 0x6a, 0x2e, 0x77, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x72, 0x65, 0x76, 0x5f, // oj.w;.vec3 prev_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // sample = texture
	0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, // 2DArrayLod(tex_b
	0x6c, 0x6f, 0x6f, 0x6d, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x76, 0x65, 0x63, 0x32, // loom, vec3((vec2
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, // _splat(0.5) + 0.
	0x35, 0x20, 0x2a, 0x20, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x78, 0x79, // 5 * prev_proj.xy
	0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // ).x, (vec2_splat
	0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x72, // (0.5) + 0.5 * pr
	0x65, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x76, // ev_proj.xy).y, v
	0x5f, 0x65, 0x79, 0x65, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x3b, // _eye), 0.0).rgb;
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x75, 0x72, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // .vec3 cur_sample
	0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, //  = texture2DArra
	0x79, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x66, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74, // yLod(tex_fb_filt
	0x65, 0x72, 0x65, 0x64, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x76, 0x65, 0x63, 0x32, // ered, vec3((vec2
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, // _splat(0.5) + 0.
	0x35, 0x20, 0x2a, 0x20, 0x63, 0x75, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x78, 0x79, 0x20, // 5 * cur_proj.xy 
	0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // ).x, (vec2_splat
	0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x63, 0x75, // (0.5) + 0.5 * cu
	0x72, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x78, 0x79, 0x20, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x76, // r_proj.xy ).y, v
	0x5f, 0x65, 0x79, 0x65, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x3b, // _eye), 0.0).rgb;
	0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x70, 0x72, // .color += mix(pr
	0x65, 0x76, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2c, 0x20, 0x63, 0x75, 0x72, 0x5f, 0x73, // ev_sample, cur_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x5f, 0x70, 0x6f, 0x73, 0x29, 0x3b, // ample, mix_pos);
	0x0a, 0x7d, 0x0a, 0x7d, 0x0a, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, // .}.}.bgfx_FragCo
	0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // lor = vec4(color
	0x20, 0x2f, 0x20, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x77, //  / (w_h_height.w
	0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,                         // ), 1.0);.}..
};
static const uint8_t fs_pp_motionblur_st_glsl[8899] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4a, 0x63, 0xcf, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0x22, // FSH.Jc._......."
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x23, // ..#version 440.#
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x47, 0x4c, 0x5f, 0x45, 0x58, 0x54, // extension GL_EXT
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x20, 0x3a, // _texture_array :
	0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x0a, 0x6f, 0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, //  enable.out vec4
	0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, //  bgfx_FragColor;
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, // .#define gl_Frag
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, // Color bgfx_FragC
	0x6f, 0x6c, 0x6f, 0x72, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, // olor.#define tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ture2D          
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // texture.#define 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, // texture2DLod    
	0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, //    textureLod.#d
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, // efine texture2DG
	0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // rad      texture
	0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, // Grad.#define tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, // ture2DProjLod   
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, // textureProjLod.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // ProjGrad  textur
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, // eProjGrad.#defin
	0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, // e textureCubeLod
	0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, //      textureLod.
	0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, // #define textureC
	0x75, 0x62, 0x65, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // ubeGrad    textu
	0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, // reGrad.#define t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // exture3D        
	0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, //   texture.#defin
	0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, // e texture2DLodOf
	0x66, 0x73, 0x65, 0x74, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, // fset textureLodO
	0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, // ffset.#define at
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, // tribute in.#defi
	0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x64, // ne varying in.#d
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, // efine bgfxShadow
	0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // 2D(_sampler, _co
	0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, // ord)     vec4_sp
	0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, // lat(texture(_sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, // pler, _coord) ).
	0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, // #define bgfxShad
	0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ow2DProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, // r, _coord) vec4_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, // splat(texturePro
	0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // j(_sampler, _coo
	0x72, 0x64, 0x29, 0x20, 0x29, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6c, // rd) ).varying fl
	0x6f, 0x61, 0x74, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, // oat v_eye;.varyi
	0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, // ng vec2 v_texcoo
	0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, // rd0;.vec3 instMu
	0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, // l(vec3 _vec, mat
	0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 3 _mtx) { return
	0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, //  ( (_vec) * (_mt
	0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, // x) ); }.vec3 ins
	0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, // tMul(mat3 _mtx, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // vec3 _vec) { ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, // urn ( (_mtx) * (
	0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // _vec) ); }.vec4 
	0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, // instMul(vec4 _ve
	0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, // c, mat4 _mtx) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, // return ( (_vec) 
	0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, // * (_mtx) ); }.ve
	0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, // c4 instMul(mat4 
	0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, // _mtx, vec4 _vec)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, //  { return ( (_mt
	0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, // x) * (_vec) ); }
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // .float rcp(float
	0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, //  _a) { return 1.
	0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x63, 0x70, // 0/_a; }.vec2 rcp
	0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // (vec2 _a) { retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, // rn vec2(1.0)/_a;
	0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, //  }.vec3 rcp(vec3
	0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, //  _a) { return ve
	0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, // c3(1.0)/_a; }.ve
	0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, 0x29, 0x20, // c4 rcp(vec4 _a) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, // { return vec4(1.
	0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x65, // 0)/_a; }.vec2 ve
	0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // c2_splat(float _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, // x) { return vec2
	0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // (_x, _x); }.vec3
	0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, //  vec3_splat(floa
	0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // t _x) { return v
	0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // ec3(_x, _x, _x);
	0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, //  }.vec4 vec4_spl
	0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // at(float _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // eturn vec4(_x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, // x, _x, _x); }.uv
	0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // ec2 uvec2_splat(
	0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // uint _x) { retur
	0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // n uvec2(_x, _x);
	0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, //  }.uvec3 uvec3_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // plat(uint _x) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, // return uvec3(_x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, //  _x, _x); }.uvec
	0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, // 4 uvec4_splat(ui
	0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // nt _x) { return 
	0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // uvec4(_x, _x, _x
	0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, // , _x); }.mat4 mt
	0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // xFromRows(vec4 _
	0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // 0, vec4 _1, vec4
	0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, //  _2, vec4 _3).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, // return transpose
	0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, // (mat4(_0, _1, _2
	0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, // , _3) );.}.mat4 
	0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, // mtxFromCols(vec4
	0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, //  _0, vec4 _1, ve
	0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, // c4 _2, vec4 _3).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, // {.return mat4(_0
	0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, // , _1, _2, _3);.}
	0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, // .mat3 mtxFromRow
	0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // s(vec3 _0, vec3 
	0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // _1, vec3 _2).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, // eturn transpose(
	0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, // mat3(_0, _1, _2)
	0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, //  );.}.mat3 mtxFr
	0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, // omCols(vec3 _0, 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, // vec3 _1, vec3 _2
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, // ).{.return mat3(
	0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, // _0, _1, _2);.}.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, // niform vec4 u_vi
	0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // ewRect;.uniform 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, // vec4 u_viewTexel
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, // ;.uniform mat4 u
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // _view;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, // at4 u_invView;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, // niform mat4 u_pr
	0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // oj;.uniform mat4
	0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, //  u_invProj;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, // orm mat4 u_viewP
	0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, // roj;.uniform mat
	0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, // 4 u_invViewProj;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // model[32];.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, // rm mat4 u_modelV
	0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, // iew;.uniform mat
	0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, // 4 u_modelViewPro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // j;.uniform vec4 
	0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, // u_alphaRef4;.flo
	0x61, 0x74, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, // at sqr( float v)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, 0x0a, 0x7d, // .{.return v*v;.}
	0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, // .vec2 sqr( vec2 
	0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, 0x76, 0x3b, // v).{.return v*v;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x71, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, // .}.vec3 sqr( vec
	0x33, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2a, // 3 v).{.return v*
	0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6d, 0x75, 0x6c, 0x5f, 0x77, 0x31, // v;.}.vec3 mul_w1
	0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, // ( vec3 v, mat4 m
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x2e, 0x78, 0x2a, 0x6d, // ).{.return v.x*m
	0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x79, 0x2a, 0x6d, // [0].xyz + (v.y*m
	0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x2e, 0x7a, 0x2a, 0x6d, // [1].xyz + (v.z*m
	0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x6d, 0x5b, 0x33, 0x5d, 0x2e, 0x78, // [2].xyz + m[3].x
	0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x63, // yz));.}.float ac
	0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, // os_approx_divPI(
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, //  float v).{.floa
	0x74, 0x20, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, // t x = abs(v);.if
	0x28, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, // (1. - x <= 0.000
	0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, // 06103515625).ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, // urn (v >= 0.) ? 
	0x30, 0x2e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, // 0. : 1.;.float r
	0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, // es = ((-0.155972
	0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, // /3.1415926535897
	0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, // 9323846264338327
	0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, // 95) * x + (1.564
	0x36, 0x37, 0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, // 67/3.14159265358
	0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, // 9793238462643383
	0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, // 2795) ) * sqrt(1
	0x2e, 0x20, 0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, // . - x);.return (
	0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3a, // v >= 0.) ? res :
	0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, //  1. - res;.}.flo
	0x61, 0x74, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, // at atan2_approx_
	0x64, 0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x2c, // div2PI( float y,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, //  float x).{.floa
	0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x79, 0x29, // t abs_y = abs(y)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x3d, 0x20, // ;.float abs_x = 
	0x61, 0x62, 0x73, 0x28, 0x78, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, // abs(x);.if(abs_x
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, //  <= 0.0000610351
	0x35, 0x36, 0x32, 0x35, 0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x20, 0x3c, 0x3d, // 5625 && abs_y <=
	0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, //  0.0000610351562
	0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e, 0x3b, 0x0a, 0x66, 0x6c, // 5).return 0.;.fl
	0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, 0x20, 0x2d, // oat r = (abs_x -
	0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x61, 0x62, 0x73, 0x5f, 0x78, //  abs_y) / (abs_x
	0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x5f, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  + abs_y);.float
	0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, 0x30, //  angle = ((x < 0
	0x2e, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x33, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x20, 0x3a, 0x20, 0x28, // .) ? (3./8.) : (
	0x31, 0x2e, 0x2f, 0x38, 0x2e, 0x29, 0x29, 0x0a, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, // 1./8.)).+ (0.211
	0x38, 0x36, 0x38, 0x20, 0x2f, 0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, // 868 /(2.*3.14159
	0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, // 2653589793238462
	0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x20, // 6433832795) * r 
	0x2a, 0x20, 0x72, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x39, 0x38, 0x37, 0x33, 0x30, 0x35, 0x20, 0x2f, // * r - 0.987305 /
	0x28, 0x32, 0x2e, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, // (2.*3.1415926535
	0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, // 8979323846264338
	0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x78, 0x20, 0x3c, 0x20, // 32795)) * ((x < 
	0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x2d, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x29, 0x3b, 0x0a, 0x72, // 0.) ? -r : r);.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x79, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, // eturn (y < 0.) ?
	0x20, 0x2d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3a, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x3b, //  -angle : angle;
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x5f, 0x61, 0x70, // .}.float asin_ap
	0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, // prox_divPI( floa
	0x74, 0x20, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x20, 0x3d, // t v).{.float x =
	0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x29, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x31, 0x2e, 0x20, 0x2d, //  abs(v);.if(1. -
	0x20, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x36, 0x31, 0x30, 0x33, //  x <= 0.00006103
	0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, // 515625).return (
	0x76, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x3a, // v >= 0.) ? 0.5 :
	0x20, 0x2d, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x73, //  -0.5;.float res
	0x20, 0x3d, 0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x39, 0x37, 0x32, 0x2f, 0x33, //  = ((-0.155972/3
	0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, // .141592653589793
	0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, // 2384626433832795
	0x29, 0x20, 0x2a, 0x20, 0x78, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x36, 0x34, 0x36, 0x37, // ) * x + (1.56467
	0x2f, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, // /3.1415926535897
	0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, 0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, // 9323846264338327
	0x39, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x20, // 95) ) * sqrt(1. 
	0x2d, 0x20, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x20, // - x);.return (v 
	0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2d, 0x20, 0x72, // >= 0.) ? 0.5 - r
	0x65, 0x73, 0x20, 0x3a, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x72, 0x65, 0x73, 0x3b, // es : -0.5 + res;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x65, // .}.vec2 ray_to_e
	0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, // quirectangular_u
	0x76, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // v( vec3 ray).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x0a, 0x30, 0x2e, 0x35, 0x20, // eturn vec2(.0.5 
	0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x5f, 0x64, // + atan2_approx_d
	0x69, 0x76, 0x32, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x61, 0x79, // iv2PI(ray.y, ray
	0x2e, 0x78, 0x29, 0x2c, 0x0a, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, // .x),.acos_approx
	0x5f, 0x64, 0x69, 0x76, 0x50, 0x49, 0x28, 0x72, 0x61, 0x79, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, // _divPI(ray.z));.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, // }.float InvsRGB(
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, //  float color).{.
	0x69, 0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, // if (color <= 0.0
	0x34, 0x30, 0x34, 0x35, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, // 4045).return col
	0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x29, // or * (1.0/12.92)
	0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, // ;.else.return po
	0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, // w(color * (1.0/1
	0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x2f, 0x31, // .055) + (0.055/1
	0x2e, 0x30, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x32, 0x2e, 0x34, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // .055), 2.4);.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x52, 0x65, 0x63, 0x37, 0x30, 0x39, 0x28, 0x20, // loat InvRec709( 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x69, // float color).{.i
	0x66, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x38, // f (color <= 0.08
	0x31, 0x29, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // 1).return color 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x34, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x65, 0x6c, 0x73, // * (1.0/4.5);.els
	0x65, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, // e.return pow(col
	0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, // or * (1.0/1.099)
	0x20, 0x2b, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x2f, 0x31, 0x2e, 0x30, 0x39, 0x39, 0x29, //  + (0.099/1.099)
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // , 1.0/0.45);.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, // loat InvGamma( f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // loat color).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x73, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, // turn InvsRGB(col
	0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, 0x6e, 0x76, 0x47, // or);.}.vec3 InvG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // amma( vec3 color
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // ).{.return vec3(
	0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, // InvGamma(color.x
	0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // ),InvGamma(color
	0x2e, 0x79, 0x29, 0x2c, 0x49, 0x6e, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, // .y),InvGamma(col
	0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x49, // or.z));.}.vec3 I
	0x6e, 0x76, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // nvToneMap( vec3 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, // color).{.float i
	0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x2f, 0x30, 0x2e, 0x32, // nv_2bh = 0.5/0.2
	0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x68, 0x20, 0x3d, 0x20, 0x34, 0x2e, // 5;.float bh = 4.
	0x30, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, // 0*0.25 - 2.0;.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2d, 0x20, 0x31, 0x2e, // turn (color - 1.
	0x30, 0x20, 0x2b, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0x28, // 0 + sqrt(color*(
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x20, 0x62, 0x68, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, // color + bh) + 1.
	0x30, 0x29, 0x29, 0x2a, 0x69, 0x6e, 0x76, 0x5f, 0x32, 0x62, 0x68, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // 0))*inv_2bh;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x52, 0x47, 0x42, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // loat sRGB( float
	0x20, 0x66, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, //  f).{.float s;.i
	0x66, 0x20, 0x28, 0x66, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, // f (f <= 0.003130
	0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, // 8).s = 12.92 * f
	0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, // ;.else.s = 1.055
	0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, //  * pow(f, 1.0/2.
	0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 4) - 0.055;.retu
	0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65, // rn s;.}.float Re
	0x63, 0x37, 0x30, 0x39, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x29, 0x0a, 0x7b, // c709( float f).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x66, 0x20, // .float s;.if (f 
	0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x38, 0x29, 0x0a, 0x73, 0x20, 0x3d, 0x20, 0x34, 0x2e, // <= 0.018).s = 4.
	0x35, 0x20, 0x2a, 0x20, 0x66, 0x3b, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x73, 0x20, 0x3d, 0x20, // 5 * f;.else.s = 
	0x31, 0x2e, 0x30, 0x39, 0x39, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x2c, 0x20, 0x30, // 1.099 * pow(f, 0
	0x2e, 0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x39, 0x3b, 0x0a, 0x72, 0x65, // .45) - 0.099;.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // turn s;.}.float 
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, // FBGamma( float c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, // olor).{.return s
	0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // RGB(color);.}.ve
	0x63, 0x32, 0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, // c2 FBGamma( vec2
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  color).{.return
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, //  vec2(FBGamma(co
	0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, // lor.x),FBGamma(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // olor.y));.}.vec3
	0x20, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, //  FBGamma( vec3 c
	0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // olor).{.return v
	0x65, 0x63, 0x33, 0x28, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // ec3(FBGamma(colo
	0x72, 0x2e, 0x78, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, 0x6c, // r.x),FBGamma(col
	0x6f, 0x72, 0x2e, 0x79, 0x29, 0x2c, 0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x63, 0x6f, // or.y),FBGamma(co
	0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // lor.z));.}.vec3 
	0x46, 0x42, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x32, 0x32, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // FBGamma22( vec3 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // color).{.return 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, // vec3(pow(color.x
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, // , 1.0/2.2),pow(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, // olor.y, 1.0/2.2)
	0x2c, 0x70, 0x6f, 0x77, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, // ,pow(color.z, 1.
	0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0/2.2));.}.float
	0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, //  FBToneMap( floa
	0x74, 0x20, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x20, // t l).{.return l 
	0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, // * ((l*0.25 + 1.0
	0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, // ) / (l + 1.0));.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x46, 0x42, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, // }.vec2 FBToneMap
	0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, // ( vec2 color).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, // float l = dot(co
	0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, // lor,vec2(0.17620
	0x34, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x2c, // 4+0.0108109*0.5,
	0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, 0x35, 0x2b, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, // 0.812985+0.01081
	0x30, 0x39, 0x2a, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 09*0.5));.return
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x6c, 0x2a, 0x30, 0x2e, 0x32, //  color * ((l*0.2
	0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x6c, 0x20, 0x2b, 0x20, // 5 + 1.0) / (l + 
	0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x46, 0x42, // 1.0));.}.vec3 FB
	0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, // ToneMap( vec3 co
	0x6c, 0x6f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, // lor).{.float l =
	0x20, 0x64, 0x6f, 0x74, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x76, 0x65, 0x63, 0x33, 0x28, //  dot(color,vec3(
	0x30, 0x2e, 0x31, 0x37, 0x36, 0x32, 0x30, 0x34, 0x2c, 0x30, 0x2e, 0x38, 0x31, 0x32, 0x39, 0x38, // 0.176204,0.81298
	0x35, 0x2c, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x38, 0x31, 0x30, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x72, // 5,0.0108109));.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, 0x28, 0x28, // eturn color * ((
	0x6c, 0x2a, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, // l*0.25 + 1.0) / 
	0x28, 0x6c, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // (l + 1.0));.}.ve
	0x63, 0x34, 0x20, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, // c4 Additive( vec
	0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // 4 cBase, vec4 cB
	0x6c, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, // lend, float perc
	0x65, 0x6e, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, // ent).{.return cB
	0x61, 0x73, 0x65, 0x20, 0x2b, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, // ase + cBlend*per
	0x63, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, // cent;.}.vec3 Scr
	0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, // een ( vec3 cBase
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, // , vec3 cBlend).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, // .return 1.0 - (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, // .0 - cBase) * (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // .0 - cBlend);.}.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x28, 0x20, 0x76, 0x65, // vec4 Screen ( ve
	0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, // c4 cBase, vec4 c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // Blend).{.return 
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, // 1.0 - (1.0 - cBa
	0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, // se) * (1.0 - cBl
	0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x53, 0x63, 0x72, // end);.}.vec3 Scr
	0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, // eenHDR ( vec3 cB
	0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // ase, vec3 cBlend
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, // ).{.return max(1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, // .0 - (1.0 - cBas
	0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, // e) * (1.0 - cBle
	0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, // nd), vec3(0.,0.,
	0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x53, 0x63, 0x72, // 0.));.}.vec4 Scr
	0x65, 0x65, 0x6e, 0x48, 0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, // eenHDR ( vec4 cB
	0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, // ase, vec4 cBlend
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x31, // ).{.return max(1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x61, 0x73, // .0 - (1.0 - cBas
	0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x63, 0x42, 0x6c, 0x65, // e) * (1.0 - cBle
	0x6e, 0x64, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, // nd), vec4(0.,0.,
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // 0.,0.));.}.vec4 
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // Multiply ( vec4 
	0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, // cBase, vec4 cBle
	0x6e, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, // nd, float percen
	0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x42, 0x61, 0x73, // t).{.return cBas
	0x65, 0x20, 0x2a, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x70, 0x65, 0x72, 0x63, 0x65, // e * cBlend*perce
	0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, // nt;.}.vec4 Overl
	0x61, 0x79, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // ay ( vec4 cBase,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, //  vec4 cBlend).{.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, // vec4 cNew = step
	0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, // (0.5, cBase);.cN
	0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2a, 0x63, // ew = mix(cBase*c
	0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2d, 0x32, // Blend*2.0, 1.0-2
	0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x2a, 0x28, // .0*(1.0-cBase)*(
	0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, 0x20, 0x63, 0x4e, 0x65, // 1.0-cBlend), cNe
	0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, // w);.return cNew;
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x48, // .}.vec4 OverlayH
	0x44, 0x52, 0x20, 0x28, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x2c, // DR ( vec4 cBase,
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, //  vec4 cBlend).{.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, // vec4 cNew = step
	0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x63, 0x42, 0x61, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x63, 0x4e, // (0.5, cBase);.cN
	0x65, 0x77, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x63, 0x42, 0x61, // ew = max(mix(cBa
	0x73, 0x65, 0x2a, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x2a, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, // se*cBlend*2.0, 1
	0x2e, 0x30, 0x2d, 0x32, 0x2e, 0x30, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x61, 0x73, // .0-2.0*(1.0-cBas
	0x65, 0x29, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x2d, 0x63, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x2c, // e)*(1.0-cBlend),
	0x20, 0x63, 0x4e, 0x65, 0x77, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2e, 0x2c, //  cNew), vec4(0.,
	0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x2c, 0x30, 0x2e, 0x29, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 0.,0.,0.));.retu
	0x72, 0x6e, 0x20, 0x63, 0x4e, 0x65, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // rn cNew;.}.vec3 
	0x63, 0x6f, 0x73, 0x5f, 0x68, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, // cos_hemisphere_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x29, 0x0a, 0x7b, // ample( vec2 t).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x74, 0x2e, 0x79, // .float phi = t.y
	0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x2a, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, //  * (2.0*3.141592
	0x36, 0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x39, 0x33, 0x32, 0x33, 0x38, 0x34, 0x36, 0x32, 0x36, // 6535897932384626
	0x34, 0x33, 0x33, 0x38, 0x33, 0x32, 0x37, 0x39, 0x35, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // 433832795);.floa
	0x74, 0x20, 0x63, 0x6f, 0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, // t cosTheta = sqr
	0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, // t(1.0 - t.x);.fl
	0x6f, 0x61, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x73, // oat sinTheta = s
	0x71, 0x72, 0x74, 0x28, 0x74, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // qrt(t.x);.float 
	0x73, 0x70, 0x2c, 0x63, 0x70, 0x3b, 0x0a, 0x7b, 0x73, 0x70, 0x3d, 0x73, 0x69, 0x6e, 0x28, 0x70, // sp,cp;.{sp=sin(p
	0x68, 0x69, 0x29, 0x3b, 0x63, 0x70, 0x3d, 0x63, 0x6f, 0x73, 0x28, 0x70, 0x68, 0x69, 0x29, 0x3b, // hi);cp=cos(phi);
	0x7d, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x63, // };.return vec3(c
	0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x63, 0x6f, // p * sinTheta, co
	0x73, 0x54, 0x68, 0x65, 0x74, 0x61, 0x2c, 0x20, 0x73, 0x70, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, // sTheta, sp * sin
	0x54, 0x68, 0x65, 0x74, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, // Theta);.}.vec3 r
	0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, // otate_to_vector_
	0x75, 0x70, 0x70, 0x65, 0x72, 0x28, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x2c, // upper( vec3 vec,
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, //  vec3 normal).{.
	0x69, 0x66, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x2d, 0x30, // if(normal.y > -0
	0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // .99999).{.float 
	0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x31, 0x2e, 0x30, 0x2b, 0x6e, 0x6f, 0x72, // h = 1.0/(1.0+nor
	0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, // mal.y);.float hz
	0x20, 0x3d, 0x20, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x3b, 0x0a, 0x66, //  = h*normal.z;.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x3d, 0x20, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, // loat hzx = hz*no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // rmal.x;.return v
	0x65, 0x63, 0x33, 0x28, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, // ec3(.vec.x * (no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2b, 0x68, 0x7a, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // rmal.y+hz*normal
	0x2e, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, // .z) + vec.y * no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, // rmal.x - vec.z *
	0x20, 0x68, 0x7a, 0x78, 0x2c, 0x0a, 0x76, 0x65, 0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, //  hzx,.vec.y * no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, // rmal.y - vec.x *
	0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x2e, //  normal.x - vec.
	0x7a, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x0a, 0x76, 0x65, // z * normal.z,.ve
	0x63, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2d, // c.y * normal.z -
	0x20, 0x76, 0x65, 0x63, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x68, 0x7a, 0x78, 0x20, 0x2b, 0x20, 0x76, //  vec.x * hzx + v
	0x65, 0x63, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, // ec.z * (normal.y
	0x2b, 0x68, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2a, 0x6e, 0x6f, 0x72, 0x6d, // +h*normal.x*norm
	0x61, 0x6c, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x72, // al.x));.}.else r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x2d, 0x76, 0x65, 0x63, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, // eturn -vec;.}.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x73, // iform vec4 balls
	0x5b, 0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, // [8];.uniform mat
	0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, // 4 matProj[2];.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x74, 0x50, 0x72, // iform mat4 matPr
	0x6f, 0x6a, 0x49, 0x6e, 0x76, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // ojInv[2];.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, // m vec4 w_h_heigh
	0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, // t;.uniform sampl
	0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x66, 0x62, // er2DArray tex_fb
	0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // _filtered;.unifo
	0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, // rm sampler2DArra
	0x79, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // y tex_bloom;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, // form sampler2DAr
	0x72, 0x61, 0x79, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x3b, 0x0a, 0x76, // ray tex_depth;.v
	0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x69, 0x6e, 0x74, // oid main().{.int
	0x20, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x74, 0x28, //  nSamples = int(
	0x28, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x77, 0x29, 0x29, 0x3b, // (w_h_height.w));
	0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x55, 0x56, 0x20, 0x3d, // .vec2 screenUV =
	0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, //  vec2(v_texcoord
	0x30, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // 0.x, 1. - v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // oord0.y);.float 
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x44, 0x65, 0x70, 0x74, 0x68, 0x20, 0x3d, 0x20, 0x74, 0x65, // screenDepth = te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x64, 0x28, // xture2DArrayLod(
	0x74, 0x65, 0x78, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // tex_depth, vec3(
	0x28, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x55, 0x56, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x73, // (screenUV).x, (s
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x55, 0x56, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x76, 0x5f, 0x65, 0x79, // creenUV).y, v_ey
	0x65, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x20, // e), 0.0).x * 2. 
	0x2d, 0x20, 0x31, 0x2e, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x50, // - 1.;.vec4 projP
	0x6f, 0x73, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // os = vec4(v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x20, 0x2d, 0x20, 0x31, // oord0.x * 2. - 1
	0x2e, 0x2c, 0x20, 0x31, 0x2e, 0x20, 0x2d, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, // ., 1. - v_texcoo
	0x72, 0x64, 0x30, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x2c, 0x20, 0x73, 0x63, 0x72, 0x65, // rd0.y * 2., scre
	0x65, 0x6e, 0x44, 0x65, 0x70, 0x74, 0x68, 0x2c, 0x20, 0x31, 0x2e, 0x29, 0x3b, 0x0a, 0x76, 0x65, // enDepth, 1.);.ve
	0x63, 0x34, 0x20, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x20, // c4 pixelPos = ( 
	0x28, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x49, 0x6e, 0x76, 0x5b, 0x69, 0x6e, 0x74, 0x28, // (matProjInv[int(
	0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x5d, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x70, 0x72, 0x6f, 0x6a, // v_eye)]) * (proj
	0x50, 0x6f, 0x73, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x50, 0x6f, 0x73, // Pos) );.pixelPos
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x2e, // .xyz = pixelPos.
	0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x2e, 0x77, // xyz / pixelPos.w
	0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x61, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, // ;.vec3 rayDirect
	0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // ion = normalize(
	0x70, 0x69, 0x78, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x76, // pixelPos.xyz);.v
	0x65, 0x63, 0x33, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x62, // ec3 ball_pos = b
	0x61, 0x6c, 0x6c, 0x73, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x76, 0x65, 0x63, // alls[0].xyz;.vec
	0x33, 0x20, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x20, // 3 prev_ball_pos 
	0x3d, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, // = balls[1].xyz;.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x72, 0x32, 0x20, 0x3d, 0x20, // float ball_r2 = 
	0x62, 0x61, 0x6c, 0x6c, 0x73, 0x5b, 0x30, 0x5d, 0x2e, 0x77, 0x20, 0x2a, 0x20, 0x62, 0x61, 0x6c, // balls[0].w * bal
	0x6c, 0x73, 0x5b, 0x30, 0x5d, 0x2e, 0x77, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, // ls[0].w;.vec3 co
	0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, // lor = texture2DA
	0x72, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x66, 0x62, 0x5f, 0x66, // rrayLod(tex_fb_f
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x73, // iltered, vec3((s
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x55, 0x56, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x73, 0x63, 0x72, // creenUV).x, (scr
	0x65, 0x65, 0x6e, 0x55, 0x56, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, // eenUV).y, v_eye)
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, // , 0.0).rgb;.vec3
	0x20, 0x6e, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6f, //  noIntersectColo
	0x72, 0x3b, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x20, 0x3d, 0x20, 0x64, // r;.{.float b = d
	0x6f, 0x74, 0x28, 0x72, 0x61, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2c, // ot(rayDirection,
	0x20, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, //  ball_pos);.floa
	0x74, 0x20, 0x63, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, // t c = dot(ball_p
	0x6f, 0x73, 0x2c, 0x20, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x29, 0x20, 0x2d, 0x20, // os, ball_pos) - 
	0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x72, 0x32, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, // ball_r2;.float d
	0x65, 0x74, 0x20, 0x3d, 0x20, 0x62, 0x20, 0x2a, 0x20, 0x62, 0x20, 0x2d, 0x20, 0x63, 0x3b, 0x0a, // et = b * b - c;.
	0x69, 0x66, 0x20, 0x28, 0x64, 0x65, 0x74, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7b, // if (det < 0.0) {
	0x0a, 0x6e, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6f, // .noIntersectColo
	0x72, 0x20, 0x3d, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x20, 0x65, 0x6c, 0x73, // r = color;.} els
	0x65, 0x20, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, // e {.float inters
	0x65, 0x63, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x5f, 0x7a, 0x20, 0x3d, 0x20, 0x28, 0x62, 0x20, 0x2d, // ect_pos_z = (b -
	0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x64, 0x65, 0x74, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x61, //  sqrt(det)) * ra
	0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x7a, 0x3b, 0x0a, 0x69, 0x66, // yDirection.z;.if
	0x20, 0x28, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x69, //  (pixelPos.z > i
	0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x5f, 0x7a, 0x29, 0x0a, // ntersect_pos_z).
	0x7b, 0x0a, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, // {.gl_FragColor =
	0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x31, 0x2e, 0x29, //  vec4(color, 1.)
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x3b, 0x0a, 0x7d, 0x0a, 0x6e, 0x6f, 0x49, 0x6e, // ;.return;.}.noIn
	0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x74, // tersectColor = t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x64, // exture2DArrayLod
	0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // (tex_bloom, vec3
	0x28, 0x28, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x55, 0x56, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, // ((screenUV).x, (
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x55, 0x56, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x76, 0x5f, 0x65, // screenUV).y, v_e
	0x79, 0x65, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, // ye), 0.0).rgb;.}
	0x0a, 0x7d, 0x0a, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, // .}.for (int i = 
	0x31, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x3b, // 1; i < nSamples;
	0x20, 0x69, 0x2b, 0x2b, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x69, //  i++).{.float mi
	0x78, 0x5f, 0x70, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x69, 0x29, // x_pos = float(i)
	0x20, 0x2f, 0x20, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x77, //  / (w_h_height.w
	0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, // );.vec3 sample_b
	0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x70, 0x72, // all_pos = mix(pr
	0x65, 0x76, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x62, 0x61, 0x6c, // ev_ball_pos, bal
	0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x5f, 0x70, 0x6f, 0x73, 0x29, 0x3b, // l_pos, mix_pos);
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x72, // .float b = dot(r
	0x61, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x73, 0x61, 0x6d, // ayDirection, sam
	0x70, 0x6c, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x29, 0x3b, 0x0a, 0x66, // ple_ball_pos);.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x73, 0x61, 0x6d, // loat c = dot(sam
	0x70, 0x6c, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x2c, 0x20, 0x73, 0x61, // ple_ball_pos, sa
	0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x29, 0x20, 0x2d, // mple_ball_pos) -
	0x20, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x72, 0x32, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //  ball_r2;.float 
	0x64, 0x65, 0x74, 0x20, 0x3d, 0x20, 0x62, 0x20, 0x2a, 0x20, 0x62, 0x20, 0x2d, 0x20, 0x63, 0x3b, // det = b * b - c;
	0x0a, 0x69, 0x66, 0x20, 0x28, 0x64, 0x65, 0x74, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, // .if (det < 0.0) 
	0x7b, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x6e, 0x6f, 0x49, 0x6e, 0x74, // {.color += noInt
	0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x20, 0x65, // ersectColor;.} e
	0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, // lse {.vec3 inter
	0x73, 0x65, 0x63, 0x74, 0x5f, 0x6f, 0x66, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x62, 0x20, 0x2d, 0x20, // sect_ofs = (b - 
	0x73, 0x71, 0x72, 0x74, 0x28, 0x64, 0x65, 0x74, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x72, 0x61, 0x79, // sqrt(det)) * ray
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x2d, 0x20, 0x73, 0x61, 0x6d, 0x70, // Direction - samp
	0x6c, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x3b, 0x0a, 0x76, 0x65, 0x63, // le_ball_pos;.vec
	0x34, 0x20, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x20, 0x3d, 0x20, 0x28, 0x20, // 4 prev_proj = ( 
	0x28, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x69, 0x6e, 0x74, 0x28, 0x72, 0x6f, 0x75, // (matProj[int(rou
	0x6e, 0x64, 0x28, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x29, 0x5d, 0x29, 0x20, 0x2a, 0x20, 0x28, // nd(v_eye))]) * (
	0x76, 0x65, 0x63, 0x34, 0x28, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, // vec4(prev_ball_p
	0x6f, 0x73, 0x20, 0x2b, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x5f, 0x6f, // os + intersect_o
	0x66, 0x73, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, // fs, 1.0)) );.vec
	0x34, 0x20, 0x63, 0x75, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, // 4 cur_proj = ( (
	0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x5b, 0x69, 0x6e, 0x74, 0x28, 0x72, 0x6f, 0x75, 0x6e, // matProj[int(roun
	0x64, 0x28, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x29, 0x5d, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, // d(v_eye))]) * (v
	0x65, 0x63, 0x34, 0x28, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x20, 0x2b, 0x20, 0x69, // ec4(ball_pos + i
	0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x5f, 0x6f, 0x66, 0x73, 0x2c, 0x20, 0x31, 0x2e, // ntersect_ofs, 1.
	0x30, 0x29, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x6a, // 0)) );.prev_proj
	0x2e, 0x78, 0x79, 0x20, 0x2f, 0x3d, 0x20, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x6a, // .xy /= prev_proj
	0x2e, 0x77, 0x3b, 0x0a, 0x63, 0x75, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x78, 0x79, 0x20, // .w;.cur_proj.xy 
	0x2f, 0x3d, 0x20, 0x63, 0x75, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x77, 0x3b, 0x0a, 0x76, // /= cur_proj.w;.v
	0x65, 0x63, 0x33, 0x20, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x20, // ec3 prev_sample 
	0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, // = texture2DArray
	0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x2c, 0x20, 0x76, // Lod(tex_bloom, v
	0x65, 0x63, 0x33, 0x28, 0x28, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // ec3((vec2_splat(
	0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x72, 0x65, // 0.5) + 0.5 * pre
	0x76, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x76, // v_proj.xy).x, (v
	0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, // ec2_splat(0.5) +
	0x20, 0x30, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x6a, //  0.5 * prev_proj
	0x2e, 0x78, 0x79, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x2c, 0x20, // .xy).y, v_eye), 
	0x30, 0x2e, 0x30, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, // 0.0).rgb;.vec3 c
	0x75, 0x72, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, // ur_sample = text
	0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x64, 0x28, 0x74, 0x65, // ure2DArrayLod(te
	0x78, 0x5f, 0x66, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x2c, 0x20, 0x76, // x_fb_filtered, v
	0x65, 0x63, 0x33, 0x28, 0x28, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // ec3((vec2_splat(
	0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x63, 0x75, 0x72, // 0.5) + 0.5 * cur
	0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x78, 0x79, 0x20, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x28, 0x76, // _proj.xy ).x, (v
	0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, // ec2_splat(0.5) +
	0x20, 0x30, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x63, 0x75, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, //  0.5 * cur_proj.
	0x78, 0x79, 0x20, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x76, 0x5f, 0x65, 0x79, 0x65, 0x29, 0x2c, 0x20, // xy ).y, v_eye), 
	0x30, 0x2e, 0x30, 0x29, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // 0.0).rgb;.color 
	0x2b, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x73, 0x61, 0x6d, 0x70, // += mix(prev_samp
	0x6c, 0x65, 0x2c, 0x20, 0x63, 0x75, 0x72, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2c, 0x20, // le, cur_sample, 
	0x6d, 0x69, 0x78, 0x5f, 0x70, 0x6f, 0x73, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x7d, 0x0a, 0x67, 0x6c, // mix_pos);.}.}.gl
	0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, // _FragColor = vec
	0x34, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2f, 0x20, 0x28, 0x77, 0x5f, 0x68, 0x5f, 0x68, // 4(color / (w_h_h
	0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x77, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // eight.w), 1.0);.
	0x7d, 0x0a, 0x00,                                                                               // }..
};
static const uint8_t fs_pp_motionblur_st_dx11[3094] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4a, 0x63, 0xcf, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x05, 0x62, // FSH.Jc._.......b
	0x61, 0x6c, 0x6c, 0x73, 0x12, 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x6d, // alls...........m
	0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x14, 0x02, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, // atProj..........
	0x0a, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x49, 0x6e, 0x76, 0x14, 0x02, 0x00, 0x01, 0x08, // .matProjInv.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x77, 0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, // ......w_h_height
	0x12, 0x00, 0x80, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, 0x66, // ...........tex_f
	0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x30, 0x01, 0x00, 0x00, 0x01, 0x00, // b_filtered0.....
	0x00, 0x00, 0x00, 0x00, 0x09, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x30, 0x01, // .....tex_bloom0.
	0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x65, 0x70, // .........tex_dep
	0x74, 0x68, 0x30, 0x01, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, // th0..........tex
	0x5f, 0x66, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x30, 0x01, 0x00, 0x00, // _fb_filtered0...
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, // .......tex_bloom
	0x30, 0x01, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x74, 0x65, 0x78, 0x5f, 0x64, // 0..........tex_d
	0x65, 0x70, 0x74, 0x68, 0x30, 0x01, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x0b, // epth0.........0.
	0x00, 0x00, 0x44, 0x58, 0x42, 0x43, 0xc2, 0xed, 0x68, 0xdd, 0xf6, 0xb4, 0xbc, 0x34, 0xc5, 0xff, // ..DXBC..h....4..
	0x2e, 0xd5, 0xd4, 0x02, 0x81, 0xe9, 0x01, 0x00, 0x00, 0x00, 0x30, 0x0b, 0x00, 0x00, 0x03, 0x00, // ..........0.....
	0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x9c, 0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00, 0x49, 0x53, // ..,...........IS
	0x47, 0x4e, 0x68, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x50, 0x00, // GNh...........P.
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x5c, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, // ................
	0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, // ......SV_POSITIO
	0x4e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0xab, 0xab, 0xab, 0x4f, 0x53, // N.TEXCOORD....OS
	0x47, 0x4e, 0x2c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, // GN,........... .
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x00, // ......SV_TARGET.
	0xab, 0xab, 0x53, 0x48, 0x45, 0x58, 0x58, 0x0a, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x96, 0x02, // ..SHEXX...P.....
	0x00, 0x00, 0x6a, 0x08, 0x00, 0x01, 0x59, 0x08, 0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, // ..j...Y...F. ...
	0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, // ......Z....`....
	0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x5a, 0x00, // ..Z....`......Z.
	0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x58, 0x40, 0x00, 0x04, 0x00, 0x70, // ...`......X@...p
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x58, 0x40, 0x00, 0x04, 0x00, 0x70, // ......UU..X@...p
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x58, 0x40, 0x00, 0x04, 0x00, 0x70, // ......UU..X@...p
	0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x12, 0x10, // ......UU..b.....
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x62, 0x10, 0x10, 0x00, 0x01, 0x00, // ......b...b.....
	0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, // ..e.... ......h.
	0x00, 0x02, 0x0a, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0x02, 0x02, 0x00, 0x80, 0x43, 0x55, // ......H.......CU
	0x15, 0x00, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x14, 0x10, 0x00, 0x01, 0x00, // ................
	0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x04, 0x00, // ..F~.......`....
	0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x22, 0x00, // ...@......2...".
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, // ...............@
	0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0xbf, 0x32, 0x00, // .....@.@......2.
	0x00, 0x0a, 0x42, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x10, 0x10, 0x80, 0x41, 0x00, // ..B.......*...A.
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x01, 0x40, // .......@.....@.@
	0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x1b, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, // .....?..........
	0x00, 0x00, 0x0a, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x07, 0x82, 0x00, // ..........).....
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, // ......:........@
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, // ......8.........
	0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x06, 0x00, 0x00, // ..........F. ...
	0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, // ......:.......2.
	0x00, 0x0c, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x06, 0x00, 0x00, // ..........F. ...
	0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x05, // ......:.......V.
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, // ......F.......2.
	0x00, 0x0c, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x06, 0x00, 0x00, // ..........F. ...
	0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, // ......:.........
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // ......F.........
	0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, // ..........F.....
	0x00, 0x00, 0x46, 0x8e, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x3a, 0x00, // ..F. .........:.
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, // ..........r.....
	0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, // ..F.............
	0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, // ..............F.
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x00, // ......F.......D.
	0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, // ..........:.....
	0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0xb2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0x0f, // ..8.............
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x08, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, // ......F.......H.
	0x00, 0x8d, 0x02, 0x02, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, // ......CU..r.....
	0x00, 0x00, 0x96, 0x14, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, // ..........F~....
	0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, // ...`.......@....
	0x00, 0x00, 0x10, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x03, // ..............F.
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ......F. .......
	0x00, 0x00, 0x10, 0x00, 0x00, 0x09, 0x12, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x82, // ..............F.
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, //  .........F. ...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x12, 0x00, 0x10, 0x00, 0x02, 0x00, // ......2.........
	0x00, 0x00, 0x3a, 0x80, 0x20, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ..:. .A.........
	0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, // ..:. ...........
	0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x12, 0x00, 0x10, 0x00, 0x02, 0x00, // ......2.........
	0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, // ..:.......:.....
	0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x31, 0x00, // ......A.......1.
	0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x02, 0x00, // ..".............
	0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 0x1a, 0x00, // ...@............
	0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0xe2, 0x00, 0x10, 0x00, 0x02, 0x00, // ......6.........
	0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x01, 0x4b, 0x00, // ..............K.
	0x00, 0x05, 0x12, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x02, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, // ..............:.
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x02, 0x00, // ..........A.....
	0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, // ..8...........:.
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, // ......:.......1.
	0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, // ..B.......:.....
	0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 0x2a, 0x00, // ..*...........*.
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x72, 0x20, 0x10, 0x00, 0x00, 0x00, // ......6...r ....
	0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x20, // ..F.......6.... 
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x3e, 0x00, // .......@.....?>.
	0x00, 0x01, 0x15, 0x00, 0x00, 0x01, 0x48, 0x00, 0x00, 0x8d, 0x02, 0x02, 0x00, 0x80, 0x43, 0x55, // ......H.......CU
	0x15, 0x00, 0xe2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x96, 0x14, 0x10, 0x00, 0x01, 0x00, // ................
	0x00, 0x00, 0x36, 0x79, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x01, 0x00, // ..6y.......`....
	0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, 0x1b, 0x00, // ...@............
	0x00, 0x06, 0x42, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, // ..B.......:. ...
	0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, // ..........r.....
	0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x82, // ..F. .........F.
	0x20, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x40, 0x00, //  .A...........@.
	0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x10, 0x10, 0x00, 0x01, 0x00, // ................
	0x00, 0x00, 0x1b, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, // ..............:.
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, // ......).........
	0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x02, 0x00, // ..:........@....
	0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x42, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a, 0x10, // ..6...B.........
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x42, 0x00, 0x10, 0x00, 0x05, 0x00, // ......6...B.....
	0x00, 0x00, 0x0a, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x72, 0x00, // ..........6...r.
	0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x36, 0x00, // ......F.......6.
	0x00, 0x05, 0x12, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x01, 0x00, // ...........@....
	0x00, 0x00, 0x30, 0x00, 0x00, 0x01, 0x21, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, // ..0...!.........
	0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, // ..........*.....
	0x00, 0x00, 0x03, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2b, 0x00, // ......:.......+.
	0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x02, 0x00, // ................
	0x00, 0x00, 0x0e, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, // ..............:.
	0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, // ......:. .......
	0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf6, 0x0f, // ..2...r.........
	0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x82, // ......F.......F.
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, //  ...............
	0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x03, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, // ......F.......F.
	0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x05, 0x00, // ................
	0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x07, 0x00, // ..F.......F.....
	0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x82, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x3a, 0x80, // ..2...........:.
	0x20, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x80, //  .A...........:.
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x05, 0x00, //  .........:.....
	0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x82, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x3a, 0x00, // ..2...........:.
	0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x3a, 0x00, // ......:.......:.
	0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x82, 0x00, // ..A.......1.....
	0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, 0x40, // ......:........@
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, 0x06, 0x00, // ..........:.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x96, 0x07, // ......r.........
	0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x12, 0x00, // ......F.........
	0x00, 0x01, 0x4b, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x3a, 0x00, // ..K...........:.
	0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x04, 0x00, // ................
	0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x80, 0x41, 0x00, // ..:.......:...A.
	0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x07, 0x00, // ......2...r.....
	0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x03, 0x10, 0x00, 0x00, 0x00, // ..........F.....
	0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, // ..F...A.........
	0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x07, 0x00, // ..r.......F.....
	0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, // ..F. .........8.
	0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x08, 0x00, // ..r.......V.....
	0x00, 0x00, 0x46, 0x83, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x3a, 0x00, // ..F. .........:.
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0xb2, 0x00, 0x10, 0x00, 0x08, 0x00, // ......2.........
	0x00, 0x00, 0x46, 0x8c, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, // ..F. .........:.
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x08, // ..............F.
	0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x72, 0x00, 0x10, 0x00, 0x08, 0x00, // ......2...r.....
	0x00, 0x00, 0x46, 0x83, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x3a, 0x00, // ..F. .........:.
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x03, // ..............F.
	0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x08, 0x00, // ..........r.....
	0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x83, 0x20, 0x06, 0x00, 0x00, // ..F.......F. ...
	0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // ......:.........
	0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x07, 0x00, // ..r.......F.....
	0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, // ..F. .........8.
	0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x07, 0x00, // ..r.......V.....
	0x00, 0x00, 0x46, 0x83, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x3a, 0x00, // ..F. .........:.
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0xb2, 0x00, 0x10, 0x00, 0x07, 0x00, // ......2.........
	0x00, 0x00, 0x46, 0x8c, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, // ..F. .........:.
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x08, // ..............F.
	0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0x72, 0x00, 0x10, 0x00, 0x07, 0x00, // ......2...r.....
	0x00, 0x00, 0x46, 0x83, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x3a, 0x00, // ..F. .........:.
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x03, // ..............F.
	0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x07, 0x00, // ..........r.....
	0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x83, 0x20, 0x06, 0x00, 0x00, // ..F.......F. ...
	0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0e, 0x00, // ......:.........
	0x00, 0x07, 0x32, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x08, 0x00, // ..2.......F.....
	0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, 0x32, 0x00, // ..............2.
	0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa6, 0x0a, // ......F.........
	0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0f, 0x32, 0x00, 0x10, 0x00, 0x04, 0x00, // ......2...2.....
	0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, // ..F........@....
	0x00, 0x3f, 0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, // .?.............@
	0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .....?...?......
	0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0x02, 0x02, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0xb2, 0x00, // ..H.......CU....
	0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x7b, // ......F.......F{
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, // .......`.......@
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0f, 0x32, 0x00, 0x10, 0x00, 0x05, 0x00, // ......2...2.....
	0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, // ..F........@....
	0x00, 0x3f, 0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, // .?.............@
	0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .....?...?......
	0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0x02, 0x02, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0xb2, 0x00, // ..H.......CU....
	0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x7b, // ......F.......F{
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, // .......`.......@
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xb2, 0x00, 0x10, 0x00, 0x05, 0x00, // ................
	0x00, 0x00, 0x46, 0x0c, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x0c, // ..F...A.......F.
	0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xb2, 0x00, 0x10, 0x00, 0x04, 0x00, // ......2.........
	0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x0c, 0x10, 0x00, 0x05, 0x00, // ..........F.....
	0x00, 0x00, 0x46, 0x0c, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x72, 0x00, // ..F...........r.
	0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x03, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, // ......F.......F.
	0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, 0x1e, 0x00, 0x00, 0x07, 0x12, 0x00, // ................
	0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, // ...............@
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x01, 0x0e, 0x00, 0x00, 0x08, 0x72, 0x20, // ..............r 
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0xf6, 0x8f, // ......F.........
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x20, //  .........6.... 
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x3e, 0x00, // .......@.....?>.
	0x00, 0x01, 0x00, 0x00, 0x90, 0x01,                                                             // ......
};
static const uint8_t fs_pp_motionblur_st_spv[6012] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4a, 0x63, 0xcf, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x0a, 0x77, // FSH.Jc._.......w
	0x5f, 0x68, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x01, 0x80, 0x01, 0x01, 0x00, 0x00, // _h_height.......
	0x00, 0x00, 0x00, 0x0a, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x49, 0x6e, 0x76, 0x14, 0x02, // ....matProjInv..
	0x00, 0x01, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x02, // .........balls..
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, // .........matProj
	0x14, 0x02, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x74, 0x65, 0x78, 0x5f, 0x66, // ...........tex_f
	0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x30, 0x00, 0x02, 0x00, 0x00, 0x00, // b_filtered0.....
	0x00, 0x03, 0x22, 0x00, 0x09, 0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x30, 0x00, // .."..tex_bloom0.
	0x03, 0x00, 0x00, 0x00, 0x00, 0x03, 0x22, 0x00, 0x09, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x65, 0x70, // ......"..tex_dep
	0x74, 0x68, 0x30, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x03, 0x22, 0x00, 0xd8, 0x16, 0x00, 0x00, // th0.......".....
	0x03, 0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x0b, 0x00, 0x08, 0x00, 0xd0, 0x03, 0x00, 0x00, // ..#.............
	0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x06, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30, // ....GLSL.std.450
	0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x0f, 0x00, 0x08, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, // ............main
	0x00, 0x00, 0x00, 0x00, 0xc4, 0x01, 0x00, 0x00, 0xc8, 0x01, 0x00, 0x00, 0xd5, 0x01, 0x00, 0x00, // ................
	0x10, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, // ................
	0x05, 0x00, 0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, // ................
	0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x30, 0x00, 0x00, 0x00, // main........0...
	0x74, 0x65, 0x78, 0x5f, 0x66, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x53, // tex_fb_filteredS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x33, 0x00, 0x00, 0x00, // ampler......3...
	0x74, 0x65, 0x78, 0x5f, 0x66, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x54, // tex_fb_filteredT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00, 0x37, 0x00, 0x00, 0x00, // exture......7...
	0x74, 0x65, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // tex_bloomSampler
	0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00, 0x39, 0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, // ........9...tex_
	0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x00, // bloomTexture....
	0x05, 0x00, 0x07, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x65, 0x70, 0x74, // ....=...tex_dept
	0x68, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00, // hSampler........
	0x3f, 0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x54, 0x65, 0x78, // ?...tex_depthTex
	0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x6d, 0x00, 0x00, 0x00, // ture........m...
	0x55, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00, 0x00, // UniformBlock....
	0x06, 0x00, 0x05, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x62, 0x61, 0x6c, 0x6c, // ....m.......ball
	0x73, 0x00, 0x00, 0x00, 0x06, 0x00, 0x05, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // s.......m.......
	0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x00, 0x06, 0x00, 0x06, 0x00, 0x6d, 0x00, 0x00, 0x00, // matProj.....m...
	0x02, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x49, 0x6e, 0x76, 0x00, 0x00, // ....matProjInv..
	0x06, 0x00, 0x06, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x77, 0x5f, 0x68, 0x5f, // ....m.......w_h_
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x00, 0x00, 0x05, 0x00, 0x03, 0x00, 0x6f, 0x00, 0x00, 0x00, // height......o...
	0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0xc4, 0x01, 0x00, 0x00, 0x76, 0x5f, 0x65, 0x79, // ............v_ey
	0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0xc8, 0x01, 0x00, 0x00, 0x76, 0x5f, 0x74, 0x65, // e...........v_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x05, 0x00, 0x06, 0x00, 0xd5, 0x01, 0x00, 0x00, // xcoord0.........
	0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x00, 0x00, // bgfx_FragData0..
	0x47, 0x00, 0x04, 0x00, 0x30, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // G...0...".......
	0x47, 0x00, 0x04, 0x00, 0x30, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, // G...0...!.......
	0x47, 0x00, 0x04, 0x00, 0x33, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // G...3...".......
	0x47, 0x00, 0x04, 0x00, 0x33, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // G...3...!.......
	0x47, 0x00, 0x04, 0x00, 0x37, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // G...7...".......
	0x47, 0x00, 0x04, 0x00, 0x37, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, // G...7...!.......
	0x47, 0x00, 0x04, 0x00, 0x39, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // G...9...".......
	0x47, 0x00, 0x04, 0x00, 0x39, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // G...9...!.......
	0x47, 0x00, 0x04, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // G...=...".......
	0x47, 0x00, 0x04, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, // G...=...!.......
	0x47, 0x00, 0x04, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // G...?...".......
	0x47, 0x00, 0x04, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, // G...?...!.......
	0x47, 0x00, 0x04, 0x00, 0x68, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, // G...h...........
	0x47, 0x00, 0x04, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // G...k.......@...
	0x47, 0x00, 0x04, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // G...l.......@...
	0x48, 0x00, 0x05, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, // H...m.......#...
	0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ....H...m.......
	0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ....H...m.......
	0x23, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x6d, 0x00, 0x00, 0x00, // #.......H...m...
	0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, // ............H...
	0x6d, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, // m...........H...
	0x6d, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // m.......#.......
	0x48, 0x00, 0x05, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, // H...m...........
	0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ....H...m.......
	0x23, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00, 0x6d, 0x00, 0x00, 0x00, // #.......G...m...
	0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x6f, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, // ....G...o..."...
	0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x6f, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, // ....G...o...!...
	0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xc4, 0x01, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, // ....G...........
	0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xc8, 0x01, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, // ....G...........
	0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xd5, 0x01, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, // ....G...........
	0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x21, 0x00, 0x03, 0x00, // ............!...
	0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00, // ................
	0x16, 0x00, 0x03, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x19, 0x00, 0x09, 0x00, // ........ .......
	0x08, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x17, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ................
	0x17, 0x00, 0x04, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // ................
	0x17, 0x00, 0x04, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x20, 0x00, 0x04, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, //  .../...........
	0x3b, 0x00, 0x04, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ;.../...0.......
	0x20, 0x00, 0x04, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, //  ...2...........
	0x3b, 0x00, 0x04, 0x00, 0x32, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ;...2...3.......
	0x3b, 0x00, 0x04, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ;.../...7.......
	0x3b, 0x00, 0x04, 0x00, 0x32, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ;...2...9.......
	0x3b, 0x00, 0x04, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ;.../...=.......
	0x3b, 0x00, 0x04, 0x00, 0x32, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ;...2...?.......
	0x15, 0x00, 0x04, 0x00, 0x42, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ....B... .......
	0x2b, 0x00, 0x04, 0x00, 0x42, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // +...B...C.......
	0x2b, 0x00, 0x04, 0x00, 0x42, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // +...B...G.......
	0x1b, 0x00, 0x03, 0x00, 0x4b, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, // ....K.......+...
	0x07, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, // ....a...........
	0x66, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, // f... .......+...
	0x66, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x00, // f...g...........
	0x68, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x00, 0x18, 0x00, 0x04, 0x00, // h.......g.......
	0x69, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, // i...........+...
	0x66, 0x00, 0x00, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x00, // f...j...........
	0x6b, 0x00, 0x00, 0x00, 0x69, 0x00, 0x00, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x00, // k...i...j.......
	0x6c, 0x00, 0x00, 0x00, 0x69, 0x00, 0x00, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x06, 0x00, // l...i...j.......
	0x6d, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, // m...h...k...l...
	0x0e, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // .... ...n.......
	0x6d, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x6f, 0x00, 0x00, 0x00, // m...;...n...o...
	0x02, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x42, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, // ....+...B...p...
	0x03, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x66, 0x00, 0x00, 0x00, 0x71, 0x00, 0x00, 0x00, // ....+...f...q...
	0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x72, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // .... ...r.......
	0x07, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x66, 0x00, 0x00, 0x00, 0x79, 0x00, 0x00, 0x00, // ....+...f...y...
	0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8a, 0x00, 0x00, 0x00, // ....+...........
	0x00, 0x00, 0x00, 0x40, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, // ...@+...........
	0x00, 0x00, 0x80, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x42, 0x00, 0x00, 0x00, 0x96, 0x00, 0x00, 0x00, // ...?+...B.......
	0x02, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x99, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // .... ...........
	0x69, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0xae, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // i... ...........
	0x0e, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0xda, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, // ............+...
	0x07, 0x00, 0x00, 0x00, 0x6b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x20, 0x00, 0x04, 0x00, // ....k......? ...
	0xc3, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, // ............;...
	0xc3, 0x01, 0x00, 0x00, 0xc4, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, // ............ ...
	0xc7, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, // ............;...
	0xc7, 0x01, 0x00, 0x00, 0xc8, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, // ............ ...
	0xd4, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, // ............;...
	0xd4, 0x01, 0x00, 0x00, 0xd5, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x05, 0x00, // ............,...
	0x1b, 0x00, 0x00, 0x00, 0xc1, 0x03, 0x00, 0x00, 0x6b, 0x01, 0x00, 0x00, 0x6b, 0x01, 0x00, 0x00, // ........k...k...
	0x01, 0x00, 0x03, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc3, 0x03, 0x00, 0x00, 0x01, 0x00, 0x03, 0x00, // ................
	0x0e, 0x00, 0x00, 0x00, 0xcf, 0x03, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, // ........6.......
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, // ................
	0x05, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, // ....=.......1...
	0x30, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, // 0...=.......4...
	0x33, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, // 3...=.......8...
	0x37, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x00, 0x00, // 7...=.......:...
	0x39, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, // 9...=.......>...
	0x3d, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // =...=.......@...
	0x3f, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc5, 0x01, 0x00, 0x00, // ?...=...........
	0xc4, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x1b, 0x00, 0x00, 0x00, 0xc9, 0x01, 0x00, 0x00, // ....=...........
	0xc8, 0x01, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x36, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........6.......
	0xfb, 0x00, 0x03, 0x00, 0x79, 0x00, 0x00, 0x00, 0x25, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, // ....y...%.......
	0x25, 0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x72, 0x00, 0x00, 0x00, 0x27, 0x02, 0x00, 0x00, // %...A...r...'...
	0x6f, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x71, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, // o...p...q...=...
	0x07, 0x00, 0x00, 0x00, 0x28, 0x02, 0x00, 0x00, 0x27, 0x02, 0x00, 0x00, 0x6e, 0x00, 0x04, 0x00, // ....(...'...n...
	0x42, 0x00, 0x00, 0x00, 0x29, 0x02, 0x00, 0x00, 0x28, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // B...)...(...Q...
	0x07, 0x00, 0x00, 0x00, 0x2c, 0x02, 0x00, 0x00, 0xc9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....,...........
	0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2e, 0x02, 0x00, 0x00, 0xc9, 0x01, 0x00, 0x00, // Q...............
	0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x30, 0x02, 0x00, 0x00, // ....P.......0...
	0x2c, 0x02, 0x00, 0x00, 0x2e, 0x02, 0x00, 0x00, 0xc5, 0x01, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, // ,...........V...
	0x4b, 0x00, 0x00, 0x00, 0x41, 0x03, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, // K...A...@...>...
	0x58, 0x00, 0x07, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x44, 0x03, 0x00, 0x00, 0x41, 0x03, 0x00, 0x00, // X.......D...A...
	0x30, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // 0.......a...Q...
	0x07, 0x00, 0x00, 0x00, 0x33, 0x02, 0x00, 0x00, 0x44, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....3...D.......
	0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x35, 0x02, 0x00, 0x00, 0xc9, 0x01, 0x00, 0x00, // Q.......5.......
	0x00, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x36, 0x02, 0x00, 0x00, // ............6...
	0x35, 0x02, 0x00, 0x00, 0x8a, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, // 5...............
	0x37, 0x02, 0x00, 0x00, 0x36, 0x02, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // 7...6.......Q...
	0x07, 0x00, 0x00, 0x00, 0x39, 0x02, 0x00, 0x00, 0xc9, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ....9...........
	0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3a, 0x02, 0x00, 0x00, 0x39, 0x02, 0x00, 0x00, // ........:...9...
	0x8a, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3b, 0x02, 0x00, 0x00, // ............;...
	0x8c, 0x00, 0x00, 0x00, 0x3a, 0x02, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0e, 0x00, 0x00, 0x00, // ....:...P.......
	0x3d, 0x02, 0x00, 0x00, 0x37, 0x02, 0x00, 0x00, 0x3b, 0x02, 0x00, 0x00, 0x33, 0x02, 0x00, 0x00, // =...7...;...3...
	0x8c, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x04, 0x00, 0x42, 0x00, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, // ....n...B...@...
	0xc5, 0x01, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x99, 0x00, 0x00, 0x00, 0x41, 0x02, 0x00, 0x00, // ....A.......A...
	0x6f, 0x00, 0x00, 0x00, 0x96, 0x00, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, // o.......@...=...
	0x69, 0x00, 0x00, 0x00, 0x42, 0x02, 0x00, 0x00, 0x41, 0x02, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, // i...B...A.......
	0x0e, 0x00, 0x00, 0x00, 0x43, 0x02, 0x00, 0x00, 0x3d, 0x02, 0x00, 0x00, 0x42, 0x02, 0x00, 0x00, // ....C...=...B...
	0x4f, 0x00, 0x08, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x45, 0x02, 0x00, 0x00, 0x43, 0x02, 0x00, 0x00, // O.......E...C...
	0x43, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // C...............
	0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x47, 0x02, 0x00, 0x00, 0x43, 0x02, 0x00, 0x00, // Q.......G...C...
	0x03, 0x00, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x48, 0x02, 0x00, 0x00, // ....P.......H...
	0x47, 0x02, 0x00, 0x00, 0x47, 0x02, 0x00, 0x00, 0x47, 0x02, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, // G...G...G.......
	0x0b, 0x00, 0x00, 0x00, 0x49, 0x02, 0x00, 0x00, 0x45, 0x02, 0x00, 0x00, 0x48, 0x02, 0x00, 0x00, // ....I...E...H...
	0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, 0x49, 0x02, 0x00, 0x00, // Q.......K...I...
	0x00, 0x00, 0x00, 0x00, 0x52, 0x00, 0x06, 0x00, 0x0e, 0x00, 0x00, 0x00, 0xa3, 0x03, 0x00, 0x00, // ....R...........
	0x4b, 0x02, 0x00, 0x00, 0xcf, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // K...........Q...
	0x07, 0x00, 0x00, 0x00, 0x4d, 0x02, 0x00, 0x00, 0x49, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ....M...I.......
	0x52, 0x00, 0x06, 0x00, 0x0e, 0x00, 0x00, 0x00, 0xa5, 0x03, 0x00, 0x00, 0x4d, 0x02, 0x00, 0x00, // R...........M...
	0xa3, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, // ........Q.......
	0x4f, 0x02, 0x00, 0x00, 0x49, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x52, 0x00, 0x06, 0x00, // O...I.......R...
	0x0e, 0x00, 0x00, 0x00, 0xa7, 0x03, 0x00, 0x00, 0x4f, 0x02, 0x00, 0x00, 0xa5, 0x03, 0x00, 0x00, // ........O.......
	0x02, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x51, 0x02, 0x00, 0x00, // ....O.......Q...
	0xa7, 0x03, 0x00, 0x00, 0xa7, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x52, 0x02, 0x00, 0x00, // ............R...
	0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x51, 0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, // ....E...Q...A...
	0xae, 0x00, 0x00, 0x00, 0x53, 0x02, 0x00, 0x00, 0x6f, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, // ....S...o...G...
	0x47, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x54, 0x02, 0x00, 0x00, // G...=.......T...
	0x53, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x55, 0x02, 0x00, 0x00, // S...O.......U...
	0x54, 0x02, 0x00, 0x00, 0x54, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // T...T...........
	0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0xae, 0x00, 0x00, 0x00, 0x56, 0x02, 0x00, 0x00, // ....A.......V...
	0x6f, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, // o...G...C...=...
	0x0e, 0x00, 0x00, 0x00, 0x57, 0x02, 0x00, 0x00, 0x56, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, // ....W...V...O...
	0x0b, 0x00, 0x00, 0x00, 0x58, 0x02, 0x00, 0x00, 0x57, 0x02, 0x00, 0x00, 0x57, 0x02, 0x00, 0x00, // ....X...W...W...
	0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, // ............A...
	0x72, 0x00, 0x00, 0x00, 0x59, 0x02, 0x00, 0x00, 0x6f, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, // r...Y...o...G...
	0x47, 0x00, 0x00, 0x00, 0x71, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, // G...q...=.......
	0x5a, 0x02, 0x00, 0x00, 0x59, 0x02, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, 0x72, 0x00, 0x00, 0x00, // Z...Y...A...r...
	0x5b, 0x02, 0x00, 0x00, 0x6f, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, // [...o...G...G...
	0x71, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5c, 0x02, 0x00, 0x00, // q...=...........
	0x5b, 0x02, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5d, 0x02, 0x00, 0x00, // [...........]...
	0x5a, 0x02, 0x00, 0x00, 0x5c, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, // Z.......Q.......
	0x5f, 0x02, 0x00, 0x00, 0xc9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // _...........Q...
	0x07, 0x00, 0x00, 0x00, 0x61, 0x02, 0x00, 0x00, 0xc9, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ....a...........
	0x50, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x63, 0x02, 0x00, 0x00, 0x5f, 0x02, 0x00, 0x00, // P.......c..._...
	0x61, 0x02, 0x00, 0x00, 0xc5, 0x01, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x4b, 0x00, 0x00, 0x00, // a.......V...K...
	0x4b, 0x03, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x58, 0x00, 0x07, 0x00, // K...4...1...X...
	0x0e, 0x00, 0x00, 0x00, 0x4e, 0x03, 0x00, 0x00, 0x4b, 0x03, 0x00, 0x00, 0x63, 0x02, 0x00, 0x00, // ....N...K...c...
	0x02, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x0b, 0x00, 0x00, 0x00, // ....a...O.......
	0x66, 0x02, 0x00, 0x00, 0x4e, 0x03, 0x00, 0x00, 0x4e, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // f...N...N.......
	0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, // ................
	0x69, 0x02, 0x00, 0x00, 0x52, 0x02, 0x00, 0x00, 0x55, 0x02, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, // i...R...U.......
	0x07, 0x00, 0x00, 0x00, 0x6c, 0x02, 0x00, 0x00, 0x55, 0x02, 0x00, 0x00, 0x55, 0x02, 0x00, 0x00, // ....l...U...U...
	0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6e, 0x02, 0x00, 0x00, 0x6c, 0x02, 0x00, 0x00, // ........n...l...
	0x5d, 0x02, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x71, 0x02, 0x00, 0x00, // ]...........q...
	0x69, 0x02, 0x00, 0x00, 0x69, 0x02, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, // i...i...........
	0x73, 0x02, 0x00, 0x00, 0x71, 0x02, 0x00, 0x00, 0x6e, 0x02, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, // s...q...n.......
	0xda, 0x00, 0x00, 0x00, 0x75, 0x02, 0x00, 0x00, 0x73, 0x02, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, // ....u...s...a...
	0xf7, 0x00, 0x03, 0x00, 0x94, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, // ................
	0x75, 0x02, 0x00, 0x00, 0x76, 0x02, 0x00, 0x00, 0x78, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, // u...v...x.......
	0x76, 0x02, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x94, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, // v...............
	0x78, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7b, 0x02, 0x00, 0x00, // x...........{...
	0x01, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x73, 0x02, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, // ........s.......
	0x07, 0x00, 0x00, 0x00, 0x7c, 0x02, 0x00, 0x00, 0x69, 0x02, 0x00, 0x00, 0x7b, 0x02, 0x00, 0x00, // ....|...i...{...
	0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7e, 0x02, 0x00, 0x00, 0x52, 0x02, 0x00, 0x00, // Q.......~...R...
	0x02, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7f, 0x02, 0x00, 0x00, // ................
	0x7c, 0x02, 0x00, 0x00, 0x7e, 0x02, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00, 0xda, 0x00, 0x00, 0x00, // |...~...........
	0x83, 0x02, 0x00, 0x00, 0x4f, 0x02, 0x00, 0x00, 0x7f, 0x02, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, // ....O...........
	0x8a, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x83, 0x02, 0x00, 0x00, // ................
	0x84, 0x02, 0x00, 0x00, 0x8a, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x84, 0x02, 0x00, 0x00, // ................
	0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x86, 0x02, 0x00, 0x00, 0x4e, 0x03, 0x00, 0x00, // Q...........N...
	0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x87, 0x02, 0x00, 0x00, // ....Q...........
	0x4e, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, // N.......Q.......
	0x88, 0x02, 0x00, 0x00, 0x4e, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, // ....N.......P...
	0x0e, 0x00, 0x00, 0x00, 0x89, 0x02, 0x00, 0x00, 0x86, 0x02, 0x00, 0x00, 0x87, 0x02, 0x00, 0x00, // ................
	0x88, 0x02, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x36, 0x03, 0x00, 0x00, // ............6...
	0xf8, 0x00, 0x02, 0x00, 0x8a, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, // ........Q.......
	0x8c, 0x02, 0x00, 0x00, 0xc9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // ............Q...
	0x07, 0x00, 0x00, 0x00, 0x8e, 0x02, 0x00, 0x00, 0xc9, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x50, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x90, 0x02, 0x00, 0x00, 0x8c, 0x02, 0x00, 0x00, // P...............
	0x8e, 0x02, 0x00, 0x00, 0xc5, 0x01, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x4b, 0x00, 0x00, 0x00, // ........V...K...
	0x55, 0x03, 0x00, 0x00, 0x3a, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x58, 0x00, 0x07, 0x00, // U...:...8...X...
	0x0e, 0x00, 0x00, 0x00, 0x58, 0x03, 0x00, 0x00, 0x55, 0x03, 0x00, 0x00, 0x90, 0x02, 0x00, 0x00, // ....X...U.......
	0x02, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x0b, 0x00, 0x00, 0x00, // ....a...O.......
	0x93, 0x02, 0x00, 0x00, 0x58, 0x03, 0x00, 0x00, 0x58, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....X...X.......
	0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x94, 0x02, 0x00, 0x00, // ................
	0xf8, 0x00, 0x02, 0x00, 0x94, 0x02, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, // ................
	0xc9, 0x03, 0x00, 0x00, 0x66, 0x02, 0x00, 0x00, 0x76, 0x02, 0x00, 0x00, 0x93, 0x02, 0x00, 0x00, // ....f...v.......
	0x8a, 0x02, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x95, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, // ................
	0x95, 0x02, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xc5, 0x03, 0x00, 0x00, // ................
	0x66, 0x02, 0x00, 0x00, 0x94, 0x02, 0x00, 0x00, 0xcb, 0x03, 0x00, 0x00, 0x29, 0x03, 0x00, 0x00, // f...........)...
	0xf5, 0x00, 0x07, 0x00, 0x42, 0x00, 0x00, 0x00, 0xc4, 0x03, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, // ....B.......C...
	0x94, 0x02, 0x00, 0x00, 0x2b, 0x03, 0x00, 0x00, 0x29, 0x03, 0x00, 0x00, 0xb1, 0x00, 0x05, 0x00, // ....+...).......
	0xda, 0x00, 0x00, 0x00, 0x99, 0x02, 0x00, 0x00, 0xc4, 0x03, 0x00, 0x00, 0x29, 0x02, 0x00, 0x00, // ............)...
	0xf6, 0x00, 0x04, 0x00, 0x2c, 0x03, 0x00, 0x00, 0x29, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....,...).......
	0xfa, 0x00, 0x04, 0x00, 0x99, 0x02, 0x00, 0x00, 0x9a, 0x02, 0x00, 0x00, 0x2c, 0x03, 0x00, 0x00, // ............,...
	0xf8, 0x00, 0x02, 0x00, 0x9a, 0x02, 0x00, 0x00, 0x6f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, // ........o.......
	0x9c, 0x02, 0x00, 0x00, 0xc4, 0x03, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x72, 0x00, 0x00, 0x00, // ........A...r...
	0x9d, 0x02, 0x00, 0x00, 0x6f, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x71, 0x00, 0x00, 0x00, // ....o...p...q...
	0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9e, 0x02, 0x00, 0x00, 0x9d, 0x02, 0x00, 0x00, // =...............
	0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9f, 0x02, 0x00, 0x00, 0x9c, 0x02, 0x00, 0x00, // ................
	0x9e, 0x02, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xa1, 0x02, 0x00, 0x00, // ....P...........
	0x9f, 0x02, 0x00, 0x00, 0x9f, 0x02, 0x00, 0x00, 0x9f, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, // ................
	0x0b, 0x00, 0x00, 0x00, 0x5e, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, // ....^...........
	0x58, 0x02, 0x00, 0x00, 0x55, 0x02, 0x00, 0x00, 0xa1, 0x02, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, // X...U...........
	0x07, 0x00, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0x52, 0x02, 0x00, 0x00, 0x5e, 0x03, 0x00, 0x00, // ........R...^...
	0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xaa, 0x02, 0x00, 0x00, 0x5e, 0x03, 0x00, 0x00, // ............^...
	0x5e, 0x03, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xac, 0x02, 0x00, 0x00, // ^...............
	0xaa, 0x02, 0x00, 0x00, 0x5d, 0x02, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, // ....]...........
	0xaf, 0x02, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, // ................
	0x07, 0x00, 0x00, 0x00, 0xb1, 0x02, 0x00, 0x00, 0xaf, 0x02, 0x00, 0x00, 0xac, 0x02, 0x00, 0x00, // ................
	0xb8, 0x00, 0x05, 0x00, 0xda, 0x00, 0x00, 0x00, 0xb3, 0x02, 0x00, 0x00, 0xb1, 0x02, 0x00, 0x00, // ................
	0x61, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x28, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // a.......(.......
	0xfa, 0x00, 0x04, 0x00, 0xb3, 0x02, 0x00, 0x00, 0xb4, 0x02, 0x00, 0x00, 0xb8, 0x02, 0x00, 0x00, // ................
	0xf8, 0x00, 0x02, 0x00, 0xb4, 0x02, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, // ................
	0xb7, 0x02, 0x00, 0x00, 0xc5, 0x03, 0x00, 0x00, 0xc9, 0x03, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, // ................
	0x28, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xb8, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, // (...............
	0x07, 0x00, 0x00, 0x00, 0xbb, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, // ................
	0xb1, 0x02, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbc, 0x02, 0x00, 0x00, // ................
	0xa7, 0x02, 0x00, 0x00, 0xbb, 0x02, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, // ................
	0xbe, 0x02, 0x00, 0x00, 0x52, 0x02, 0x00, 0x00, 0xbc, 0x02, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, // ....R...........
	0x0b, 0x00, 0x00, 0x00, 0xc0, 0x02, 0x00, 0x00, 0xbe, 0x02, 0x00, 0x00, 0x5e, 0x03, 0x00, 0x00, // ............^...
	0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xc3, 0x02, 0x00, 0x00, 0x58, 0x02, 0x00, 0x00, // ............X...
	0xc0, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc4, 0x02, 0x00, 0x00, // ....Q...........
	0xc3, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, // ........Q.......
	0xc5, 0x02, 0x00, 0x00, 0xc3, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // ............Q...
	0x07, 0x00, 0x00, 0x00, 0xc6, 0x02, 0x00, 0x00, 0xc3, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x50, 0x00, 0x07, 0x00, 0x0e, 0x00, 0x00, 0x00, 0xc7, 0x02, 0x00, 0x00, 0xc4, 0x02, 0x00, 0x00, // P...............
	0xc5, 0x02, 0x00, 0x00, 0xc6, 0x02, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, // ................
	0x07, 0x00, 0x00, 0x00, 0xc9, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0xc5, 0x01, 0x00, 0x00, 0x6e, 0x00, 0x04, 0x00, 0x42, 0x00, 0x00, 0x00, 0xca, 0x02, 0x00, 0x00, // ....n...B.......
	0xc9, 0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x99, 0x00, 0x00, 0x00, 0xcb, 0x02, 0x00, 0x00, // ....A...........
	0x6f, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0xca, 0x02, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, // o...C.......=...
	0x69, 0x00, 0x00, 0x00, 0xcc, 0x02, 0x00, 0x00, 0xcb, 0x02, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, // i...............
	0x0e, 0x00, 0x00, 0x00, 0xcd, 0x02, 0x00, 0x00, 0xc7, 0x02, 0x00, 0x00, 0xcc, 0x02, 0x00, 0x00, // ................
	0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xd0, 0x02, 0x00, 0x00, 0x55, 0x02, 0x00, 0x00, // ............U...
	0xc0, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd1, 0x02, 0x00, 0x00, // ....Q...........
	0xd0, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, // ........Q.......
	0xd2, 0x02, 0x00, 0x00, 0xd0, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // ............Q...
	0x07, 0x00, 0x00, 0x00, 0xd3, 0x02, 0x00, 0x00, 0xd0, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x50, 0x00, 0x07, 0x00, 0x0e, 0x00, 0x00, 0x00, 0xd4, 0x02, 0x00, 0x00, 0xd1, 0x02, 0x00, 0x00, // P...............
	0xd2, 0x02, 0x00, 0x00, 0xd3, 0x02, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, // ................
	0x07, 0x00, 0x00, 0x00, 0xd6, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0xc5, 0x01, 0x00, 0x00, 0x6e, 0x00, 0x04, 0x00, 0x42, 0x00, 0x00, 0x00, 0xd7, 0x02, 0x00, 0x00, // ....n...B.......
	0xd6, 0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x99, 0x00, 0x00, 0x00, 0xd8, 0x02, 0x00, 0x00, // ....A...........
	0x6f, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0xd7, 0x02, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, // o...C.......=...
	0x69, 0x00, 0x00, 0x00, 0xd9, 0x02, 0x00, 0x00, 0xd8, 0x02, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, // i...............
	0x0e, 0x00, 0x00, 0x00, 0xda, 0x02, 0x00, 0x00, 0xd4, 0x02, 0x00, 0x00, 0xd9, 0x02, 0x00, 0x00, // ................
	0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xdc, 0x02, 0x00, 0x00, 0xcd, 0x02, 0x00, 0x00, // Q...............
	0x03, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x00, 0x1b, 0x00, 0x00, 0x00, 0xde, 0x02, 0x00, 0x00, // ....O...........
	0xcd, 0x02, 0x00, 0x00, 0xcd, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x50, 0x00, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00, 0xdf, 0x02, 0x00, 0x00, 0xdc, 0x02, 0x00, 0x00, // P...............
	0xdc, 0x02, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00, 0xe0, 0x02, 0x00, 0x00, // ................
	0xde, 0x02, 0x00, 0x00, 0xdf, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, // ........Q.......
	0xe2, 0x02, 0x00, 0x00, 0xe0, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // ............Q...
	0x07, 0x00, 0x00, 0x00, 0xe4, 0x02, 0x00, 0x00, 0xe0, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe6, 0x02, 0x00, 0x00, 0xda, 0x02, 0x00, 0x00, // Q...............
	0x03, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x00, 0x1b, 0x00, 0x00, 0x00, 0xe8, 0x02, 0x00, 0x00, // ....O...........
	0xda, 0x02, 0x00, 0x00, 0xda, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x50, 0x00, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00, 0xe9, 0x02, 0x00, 0x00, 0xe6, 0x02, 0x00, 0x00, // P...............
	0xe6, 0x02, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00, 0xea, 0x02, 0x00, 0x00, // ................
	0xe8, 0x02, 0x00, 0x00, 0xe9, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, // ........Q.......
	0xec, 0x02, 0x00, 0x00, 0xea, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // ............Q...
	0x07, 0x00, 0x00, 0x00, 0xee, 0x02, 0x00, 0x00, 0xea, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x50, 0x00, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00, 0xf5, 0x02, 0x00, 0x00, 0xe2, 0x02, 0x00, 0x00, // P...............
	0xc3, 0x03, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00, 0xf6, 0x02, 0x00, 0x00, // ................
	0xf5, 0x02, 0x00, 0x00, 0x6b, 0x01, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00, // ....k...........
	0xf7, 0x02, 0x00, 0x00, 0xc1, 0x03, 0x00, 0x00, 0xf6, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // ............Q...
	0x07, 0x00, 0x00, 0x00, 0xf8, 0x02, 0x00, 0x00, 0xf7, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xfe, 0x02, 0x00, 0x00, 0xe4, 0x02, 0x00, 0x00, // ................
	0x50, 0x00, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00, 0xff, 0x02, 0x00, 0x00, 0xe2, 0x02, 0x00, 0x00, // P...............
	0xfe, 0x02, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // ................
	0xff, 0x02, 0x00, 0x00, 0x6b, 0x01, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00, // ....k...........
	0x01, 0x03, 0x00, 0x00, 0xc1, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // ............Q...
	0x07, 0x00, 0x00, 0x00, 0x02, 0x03, 0x00, 0x00, 0x01, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x50, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x04, 0x03, 0x00, 0x00, 0xf8, 0x02, 0x00, 0x00, // P...............
	0x02, 0x03, 0x00, 0x00, 0xc5, 0x01, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x4b, 0x00, 0x00, 0x00, // ........V...K...
	0x6d, 0x03, 0x00, 0x00, 0x3a, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x58, 0x00, 0x07, 0x00, // m...:...8...X...
	0x0e, 0x00, 0x00, 0x00, 0x70, 0x03, 0x00, 0x00, 0x6d, 0x03, 0x00, 0x00, 0x04, 0x03, 0x00, 0x00, // ....p...m.......
	0x02, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x0b, 0x00, 0x00, 0x00, // ....a...O.......
	0x07, 0x03, 0x00, 0x00, 0x70, 0x03, 0x00, 0x00, 0x70, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....p...p.......
	0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00, // ........P.......
	0x0e, 0x03, 0x00, 0x00, 0xec, 0x02, 0x00, 0x00, 0xc3, 0x03, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, // ................
	0x1b, 0x00, 0x00, 0x00, 0x0f, 0x03, 0x00, 0x00, 0x0e, 0x03, 0x00, 0x00, 0x6b, 0x01, 0x00, 0x00, // ............k...
	0x81, 0x00, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x10, 0x03, 0x00, 0x00, 0xc1, 0x03, 0x00, 0x00, // ................
	0x0f, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x11, 0x03, 0x00, 0x00, // ....Q...........
	0x10, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, // ................
	0x17, 0x03, 0x00, 0x00, 0xee, 0x02, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00, // ........P.......
	0x18, 0x03, 0x00, 0x00, 0xec, 0x02, 0x00, 0x00, 0x17, 0x03, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, // ................
	0x1b, 0x00, 0x00, 0x00, 0x19, 0x03, 0x00, 0x00, 0x18, 0x03, 0x00, 0x00, 0x6b, 0x01, 0x00, 0x00, // ............k...
	0x81, 0x00, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x00, 0x00, 0xc1, 0x03, 0x00, 0x00, // ................
	0x19, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1b, 0x03, 0x00, 0x00, // ....Q...........
	0x1a, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x00, 0x00, // ........P.......
	0x1d, 0x03, 0x00, 0x00, 0x11, 0x03, 0x00, 0x00, 0x1b, 0x03, 0x00, 0x00, 0xc5, 0x01, 0x00, 0x00, // ................
	0x56, 0x00, 0x05, 0x00, 0x4b, 0x00, 0x00, 0x00, 0x7f, 0x03, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, // V...K.......4...
	0x31, 0x00, 0x00, 0x00, 0x58, 0x00, 0x07, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x82, 0x03, 0x00, 0x00, // 1...X...........
	0x7f, 0x03, 0x00, 0x00, 0x1d, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, // ............a...
	0x4f, 0x00, 0x08, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x20, 0x03, 0x00, 0x00, 0x82, 0x03, 0x00, 0x00, // O....... .......
	0x82, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x50, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x22, 0x03, 0x00, 0x00, 0x9f, 0x02, 0x00, 0x00, // P.......".......
	0x9f, 0x02, 0x00, 0x00, 0x9f, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x0b, 0x00, 0x00, 0x00, // ................
	0x88, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x07, 0x03, 0x00, 0x00, // ................
	0x20, 0x03, 0x00, 0x00, 0x22, 0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, //  ..."...........
	0x27, 0x03, 0x00, 0x00, 0xc5, 0x03, 0x00, 0x00, 0x88, 0x03, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, // '...............
	0x28, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x28, 0x03, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, // (.......(.......
	0x0b, 0x00, 0x00, 0x00, 0xcb, 0x03, 0x00, 0x00, 0xb7, 0x02, 0x00, 0x00, 0xb4, 0x02, 0x00, 0x00, // ................
	0x27, 0x03, 0x00, 0x00, 0xb8, 0x02, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x29, 0x03, 0x00, 0x00, // '...........)...
	0xf8, 0x00, 0x02, 0x00, 0x29, 0x03, 0x00, 0x00, 0x80, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, // ....).......B...
	0x2b, 0x03, 0x00, 0x00, 0xc4, 0x03, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, // +.......C.......
	0x95, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x2c, 0x03, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, // ........,...A...
	0x72, 0x00, 0x00, 0x00, 0x2e, 0x03, 0x00, 0x00, 0x6f, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, // r.......o...p...
	0x71, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2f, 0x03, 0x00, 0x00, // q...=......./...
	0x2e, 0x03, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x30, 0x03, 0x00, 0x00, // ....P.......0...
	0x2f, 0x03, 0x00, 0x00, 0x2f, 0x03, 0x00, 0x00, 0x2f, 0x03, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, // /.../.../.......
	0x0b, 0x00, 0x00, 0x00, 0x31, 0x03, 0x00, 0x00, 0xc5, 0x03, 0x00, 0x00, 0x30, 0x03, 0x00, 0x00, // ....1.......0...
	0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x32, 0x03, 0x00, 0x00, 0x31, 0x03, 0x00, 0x00, // Q.......2...1...
	0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x33, 0x03, 0x00, 0x00, // ....Q.......3...
	0x31, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, // 1.......Q.......
	0x34, 0x03, 0x00, 0x00, 0x31, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, // 4...1.......P...
	0x0e, 0x00, 0x00, 0x00, 0x35, 0x03, 0x00, 0x00, 0x32, 0x03, 0x00, 0x00, 0x33, 0x03, 0x00, 0x00, // ....5...2...3...
	0x34, 0x03, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x36, 0x03, 0x00, 0x00, // 4...........6...
	0xf8, 0x00, 0x02, 0x00, 0x36, 0x03, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x0e, 0x00, 0x00, 0x00, // ....6...........
	0xc7, 0x03, 0x00, 0x00, 0x89, 0x02, 0x00, 0x00, 0x84, 0x02, 0x00, 0x00, 0x35, 0x03, 0x00, 0x00, // ............5...
	0x2c, 0x03, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0xd5, 0x01, 0x00, 0x00, 0xc7, 0x03, 0x00, 0x00, // ,...>...........
	0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00, 0x00, 0x00, 0x90, 0x01,                         // ....8.......
};
static const bgfx::EmbeddedShader fs_pp_motionblur_st = BGFX_EMBEDDED_SHADER(fs_pp_motionblur_st);

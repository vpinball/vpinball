POLE - portable library for structured storage

POLE is a portable C++ library to create and read structured storage. With a
structured storage, you can store files inside another file, or you can even
create complex directory tree, if you want to. The structured storage created by
POLE is compatible with Microsoft structured storage, also sometimes called as
OLE Compound Document, which are used among others in Microsoft Office. However,
POLE has the advantage that it's portable (i.e you can read or write a
structured storage in any supported platform), you don't need to rely on Windows
library. 

Download
==========

0.3 and up is available at: http://www.dimin.net/

Source code is available at http://developer.berlios.de/projects/pole/. 
Please always use the latest stable version.

Install
========

To compile POLE, you need a C++ compiler, with standard C++ library which
supports STL (Standard Template Library). On Linux and other Unices, g++ will do
the job.

POLE is just a library, you have to integrate it as part of your
application/project. Since it consists of one source file and one header file,
it doesn't make much sense to compile POLE as separate library (either static or
dynamic). Simply add these files to your project and you're done.

The source tarball of POLE demonstrates the use of POLE to build poledump, a
small utility to extract any stream inside a structured storage. If you use g++
as the compiler, you can compile poledump using the following command:

g++ -o poledump pole.cpp poledump.cpp

You may use poledump like the example below:

poledump budget.xls Workbook result.xls

The above command will extract a stream named Workbook inside Excel document
(budget.xls) and save it as result.xls. File result.xls will still be recognized
as a valid workbook (in raw format). Launch Microsoft Excel, open this file, and
convince yourself.

Copyright and License
=====================

POLE - Portable C++ library to access OLE Storage 
Copyright (C) 2002-2005 Ariya Hidayat. All rights reserved.
Copyright (C) 2009 Dmitry Fedorov, Center for Bio-Image Informatics. All rights reserved.
Copyright (C) 2010 Michel Boudinot. All rights reserved.
Copyright (c) 2013 Stephen Baum. All rights reserved.

Redistribution and use in source and binary forms, with or without 
modification, are permitted provided that the following conditions 
are met:
* Redistributions of source code must retain the above copyright notice, 
  this list of conditions and the following disclaimer.
* Redistributions in binary form must reproduce the above copyright notice, 
  this list of conditions and the following disclaimer in the documentation 
  and/or other materials provided with the distribution.
* Neither the name of the authors nor the names of its contributors may be 
  used to endorse or promote products derived from this software without 
  specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE 
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
THE POSSIBILITY OF SUCH DAMAGE.

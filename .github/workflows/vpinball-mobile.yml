name: vpinball-mobile
on:
  push:

env:
  VERSION_START_SHA: ea558e7417f6f06fe567d34f0e33792a141b8e64

defaults:
  run:
    shell: bash

jobs:
  version:
    name: Version
    runs-on: ubuntu-24.04
    outputs:
      revision: ${{ steps.version.outputs.revision }}
      version_short: ${{ steps.version.outputs.version_short }}
      version_full: ${{ steps.version.outputs.version_full }}
      version_ios: ${{ steps.version.outputs.version_ios }}
      sha7: ${{ steps.version.outputs.sha7 }}
      tag: ${{ steps.version.outputs.tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: version
        run: |
          REVISION=$(git rev-list ${{ env.VERSION_START_SHA }}..HEAD --count)
          VERSION_MAJOR=$(grep -Eo "VP_VERSION_MAJOR\s+[0-9]+" src/core/vpversion.h | grep -Eo "[0-9]+")
          VERSION_MINOR=$(grep -Eo "VP_VERSION_MINOR\s+[0-9]+" src/core/vpversion.h | grep -Eo "[0-9]+")
          VERSION_REV=$(grep -Eo "VP_VERSION_REV\s+[0-9]+" src/core/vpversion.h | grep -Eo "[0-9]+")
          VERSION_NUMERIC=$((VERSION_MAJOR * 10000 + VERSION_MINOR * 100 + VERSION_REV))
          VERSION_SHORT="${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_REV}"
          VERSION_FULL="${VERSION_SHORT}.${REVISION}"
          VERSION_IOS="${VERSION_NUMERIC}.0.${REVISION}"
          SHA7="${GITHUB_SHA::7}"
          TAG="${VERSION_SHORT}-${REVISION}-${SHA7}"
          echo "revision=${REVISION}" >> $GITHUB_OUTPUT
          echo "version_short=${VERSION_SHORT}" >> $GITHUB_OUTPUT
          echo "version_full=${VERSION_FULL}" >> $GITHUB_OUTPUT
          echo "version_ios=${VERSION_IOS}" >> $GITHUB_OUTPUT
          echo "sha7=${SHA7}" >> $GITHUB_OUTPUT
          echo "tag=${TAG}" >> $GITHUB_OUTPUT

  build-ios:
    name: Build VPinballX_BGFX-ios-${{ matrix.config }}
    runs-on: macos-15
    needs: [ version ]
    strategy:
      fail-fast: false
      matrix:
        config: [ Release ]
    steps:
      - run: |
          brew install bison autoconf automake libtool
          echo "$(brew --prefix bison)/bin" >> $GITHUB_PATH
      - uses: actions/checkout@v4
      - name: Calculate timestamp
        run: |
          echo "TIMESTAMP=$(date +%s)" >> $GITHUB_ENV
      - uses: actions/cache/restore@v4
        with:
          path: standalone/ios-arm64/external/cache
          key: BGFX-ios-arm64-${{ matrix.config }}-external-${{ env.TIMESTAMP }}
          restore-keys: |
             BGFX-ios-arm64-${{ matrix.config }}-external-
      - name: Build deps
        run: |
          cd standalone/ios-arm64
          BUILD_TYPE=${{ matrix.config }} ./external.sh
      - uses: actions/cache/save@v4
        if: ${{ !cancelled() }}
        with:
          path: standalone/ios-arm64/external/cache
          key: BGFX-ios-arm64-${{ matrix.config }}-external-${{ env.TIMESTAMP }}
      - name: Build libvpinball
        run: |
          perl -i -pe"s/9999/${{ needs.version.outputs.revision }}/g" src/core/git_version.h
          perl -i -pe"s/unknown/${{ needs.version.outputs.sha7 }}/g" src/core/git_version.h
          NUM_PROCS=$(sysctl -n hw.ncpu)
          cp standalone/cmake/CMakeLists_bgfx_lib.txt CMakeLists.txt
          cmake \
                -DPLATFORM=ios \
                -DARCH=arm64 \
                -DBUILD_FRAMEWORKS=ON \
                -DCMAKE_BUILD_TYPE=${{ matrix.config }} \
                -B build/ios-arm64
          cmake --build build/ios-arm64 -- -j${NUM_PROCS}
      - name: Build app
        run: |
          MARKETING_VERSION="${{ needs.version.outputs.version_ios }}"
          CURRENT_PROJECT_VERSION="${{ needs.version.outputs.version_full }}"
          cd standalone/ios
          perl -i -pe "s/MARKETING_VERSION = [0-9.]+/MARKETING_VERSION = $MARKETING_VERSION/g" "VPinball.xcodeproj/project.pbxproj"
          perl -i -pe "s/CURRENT_PROJECT_VERSION = [0-9.]+/CURRENT_PROJECT_VERSION = $CURRENT_PROJECT_VERSION/g" "VPinball.xcodeproj/project.pbxproj"
          fastlane build_unsigned_ipa
      - name: Copy ipa
        run: |
          mkdir tmp
          cp standalone/ios/fastlane/VPinballX.ipa tmp/VPinballX_BGFX-${{ needs.version.outputs.tag }}.ipa
      - uses: actions/upload-artifact@v4
        with:
          name: VPinballX_BGFX-${{ needs.version.outputs.tag }}-${{ matrix.config }}-ios
          path: tmp

  build-android:
    name: Build VPinballX_BGFX-android-${{ matrix.config }}
    runs-on: ubuntu-24.04
    needs: [ version ]
    strategy:
      fail-fast: false
      matrix:
        config: [ Release ]
    steps:
      - run: |
          sudo apt install bison
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: actions/checkout@v4
      - name: Calculate timestamp
        run: |
          echo "TIMESTAMP=$(date +%s)" >> $GITHUB_ENV
      - uses: actions/cache/restore@v4
        with:
          path: standalone/android-arm64-v8a/external/cache
          key: BGFX-android-arm64-v8a-${{ matrix.config }}-external-${{ env.TIMESTAMP }}
          restore-keys: |
             BGFX-android-arm64-v8a-${{ matrix.config }}-external-
      - name: Build deps
        run: |
          cd standalone/android-arm64-v8a
          BUILD_TYPE=${{ matrix.config }} ./external.sh
      - uses: actions/cache/save@v4
        if: ${{ !cancelled() }}
        with:
          path: standalone/android-arm64-v8a/external/cache
          key: BGFX-android-arm64-v8a-${{ matrix.config }}-external-${{ env.TIMESTAMP }}
      - name: Build libvpinball
        run: |
          perl -i -pe"s/9999/${{ needs.version.outputs.revision }}/g" src/core/git_version.h
          perl -i -pe"s/unknown/${{ needs.version.outputs.sha7 }}/g" src/core/git_version.h
          NUM_PROCS=$(nproc)
          cp standalone/cmake/CMakeLists_bgfx_lib.txt CMakeLists.txt
          cmake \
                -DPLATFORM=android \
                -DARCH=arm64-v8a \
                -DCMAKE_BUILD_TYPE=${{ matrix.config }} \
                -B build/android-arm64-v8a
          cmake --build build/android-arm64-v8a -- -j${NUM_PROCS}
      - name: Build app
        if: github.repository == 'vpinball/vpinball'
        env:
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: |
          cd standalone/android
          echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > app/vpinball.jks
          ./gradlew assemble${{ matrix.config }} bundle${{ matrix.config }} -PversionName="${{ needs.version.outputs.version_full }}" -Psha7="${{ needs.version.outputs.sha7 }}"
      - name: Build app (fork)
        if: github.repository != 'vpinball/vpinball'
        run: |
          export ANDROID_KEYSTORE_PASSWORD=vpinball
          export ANDROID_KEY_ALIAS=vpinball
          export ANDROID_KEY_PASSWORD=vpinball
          cd standalone/android
          keytool -genkey -v -keystore app/vpinball.jks \
                -keyalg RSA -keysize 2048 -validity 10000 \
                -storepass "$ANDROID_KEYSTORE_PASSWORD" \
                -keypass "$ANDROID_KEY_PASSWORD" \
                -alias "$ANDROID_KEY_ALIAS" \
                -dname "CN=VPinball Android, O=VPinball, C=XX"
          ./gradlew assemble${{ matrix.config }} bundle${{ matrix.config }} -PversionName="${{ needs.version.outputs.version_full }}" -Psha7="${{ needs.version.outputs.sha7 }}"
      - name: Copy apk/aab
        run: |
          CONFIG_LC=$(echo "${{ matrix.config }}" | tr '[:upper:]' '[:lower:]')
          mkdir tmp
          cp standalone/android/app/build/outputs/apk/${CONFIG_LC}/*.apk tmp
          if [ "${{ github.repository }}" == "vpinball/vpinball" ]; then
             cp standalone/android/app/build/outputs/bundle/${CONFIG_LC}/*.aab tmp
          fi
      - uses: actions/upload-artifact@v4
        with:
          name: VPinballX_BGFX-${{ needs.version.outputs.tag }}-${{ matrix.config }}-android
          path: tmp
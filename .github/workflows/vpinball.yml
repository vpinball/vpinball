name: vpinball
on:
  push:

env:
  VERSION_START_SHA: ea558e7417f6f06fe567d34f0e33792a141b8e64
#  UPX_ARTIFACT: 345209471

defaults:
  run:
    shell: bash

jobs:
  dxsdk:
    name: DirectX SDK
    runs-on: windows-latest
    steps:
      - id: cache
        uses: actions/cache@v3
        with:
          path: DXSDK
          key: cache-dxsdk
      - name: Create Cache
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          curl -sL https://download.microsoft.com/download/a/e/7/ae743f1f-632b-4809-87a9-aa1bb3458e31/DXSDK_Jun10.exe -o DXSDK_Jun10.exe
          7z x DXSDK_Jun10.exe DXSDK/Include -otmp
          7z x DXSDK_Jun10.exe DXSDK/Lib -otmp
          mv tmp/DXSDK DXSDK
          rm -fR DXSDK_Jun10.exe tmp
          ls -Ra DXSDK

  version:
    name: Version
    runs-on: ubuntu-latest
    outputs:
      revision: ${{ steps.version.outputs.revision }}
      sha7: ${{ steps.version.outputs.sha7 }}
      tag: ${{ steps.version.outputs.tag }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: version
        run: |
          VERSION_MAJOR=$(grep -Eo "VP_VERSION_MAJOR\s+[0-9]+" vpversion.h | grep -Eo "[0-9]+")
          VERSION_MINOR=$(grep -Eo "VP_VERSION_MINOR\s+[0-9]+" vpversion.h | grep -Eo "[0-9]+")
          VERSION_REV=$(grep -Eo "VP_VERSION_REV\s+[0-9]+" vpversion.h | grep -Eo "[0-9]+")
          REVISION=$(git rev-list ${{ env.VERSION_START_SHA }}..HEAD --count)
          SHA7="${GITHUB_SHA::7}"
          TAG="${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_REV}-${REVISION}-${SHA7}"
          echo "revision=${REVISION}" >> $GITHUB_OUTPUT
          echo "sha7=${SHA7}" >> $GITHUB_OUTPUT
          echo "tag=${TAG}" >> $GITHUB_OUTPUT

  build:
    name: Build VPinballX-${{ matrix.config }}-${{ matrix.platform }}
    runs-on: windows-2019
    needs: [ dxsdk, version ]
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: win-x64
            platform-name: x64
            bass: x64/Bass64.dll
            free-image: x64/FreeImage64.dll
            sci-lexer-vp: x64/SciLexerVP64.dll
            config: Release
          - platform: win-x64
            platform-name: x64
            bass: x64/Bass64.dll
            free-image: x64/FreeImage64.dll
            sci-lexer-vp: x64/SciLexerVP64.dll
            config: Debug
          - platform: win-x86
            platform-name: Win32
            bass: Bass.dll
            free-image: FreeImage.dll
            sci-lexer-vp: SciLexerVP.dll
            config: Release
          - platform: win-x86
            platform-name: Win32
            bass: Bass.dll
            free-image: FreeImage.dll
            sci-lexer-vp: SciLexerVP.dll
            config: Debug
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: DXSDK
          key: cache-dxsdk
      - run: |
          sed -i "s/0/${{ needs.version.outputs.revision }}/g" git_version.h
          sed -i "s/unknown/${{ needs.version.outputs.sha7 }}/g" git_version.h
      - name: Build
        run: |
          export DXSDK_DIR="${GITHUB_WORKSPACE}/DXSDK"
          # cmake can't find fxc.exe so copy one into the a directory in the path
          cp "/c/Program Files (x86)/Windows Kits/10/bin/10.0.19041.0/x86/fxc.exe" /mingw64/bin
          cp cmake/CMakeLists_${{ matrix.platform}}.txt CMakeLists.txt
          cmake -T v141_xp -G "Visual Studio 16 2019" -A ${{ matrix.platform-name }} -B build
          cmake --build build --config ${{ matrix.config }}
#      - name: Compress
#        if: matrix.config == 'Release'
#        run: |
#          curl -sL -H "Authorization: Token ${{ secrets.GH_PAT }}" https://api.github.com/repos/upx/upx/actions/artifacts/${{ env.UPX_ARTIFACT }}/zip -o upx.zip
#          7z x upx.zip -oupx
#          rm upx.zip
#          ./upx/upx.exe --best --lzma build/${{ matrix.config }}/VPinballX.exe
      - run: |
          mkdir tmp 
          cp build/${{ matrix.config }}/VPinballX.* tmp
          cp dll/${{ matrix.bass }} tmp
          cp dll/${{ matrix.free-image }} tmp
          cp dll/${{ matrix.sci-lexer-vp }} tmp
          mkdir tmp/docs
          cp txt/Changelog_Scripts.txt tmp/docs
          cp txt/Changelog.txt tmp/docs
          cp txt/CommandLineParameters.txt tmp/docs
          cp txt/CommandReference.txt tmp/docs
          cp txt/Hotkeys.txt tmp/docs
          cp "txt/JP's VPX7 Physics Materials.mat" tmp/docs
          cp "txt/JP's VPX7 Physics.pdf" tmp/docs
          cp "txt/JP's VPX7 script addons vbs.txt" tmp/docs
          cp "txt/JP's VPX7 Table physics.vpp" tmp/docs
          cp txt/layoutGuideline.txt tmp/docs
          cp txt/license.txt tmp/docs
          cp "txt/New Plunger Documentation.pdf" tmp/docs
          cp txt/PhysicValues.txt tmp/docs
          cp txt/RegistryKeys.txt tmp/docs
          cp txt/Scripts.txt tmp/docs
          cp -r scripts tmp
          cp -r tables tmp
      - uses: actions/upload-artifact@v3
        with:
          name: VPinballX-${{ needs.version.outputs.tag }}-${{ matrix.config }}-${{ matrix.platform }}
          path: tmp

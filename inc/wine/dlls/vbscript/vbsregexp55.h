/*** Autogenerated by WIDL 7.10 from dlls/vbscript/vbsregexp55.idl - Do not edit ***/

#ifdef _WIN32
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif
#include <rpc.h>
#include <rpcndr.h>
#endif

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __vbsregexp55_h__
#define __vbsregexp55_h__

/* Forward declarations */

#ifndef __IRegExp_FWD_DEFINED__
#define __IRegExp_FWD_DEFINED__
typedef interface IRegExp IRegExp;
#ifdef __cplusplus
interface IRegExp;
#endif /* __cplusplus */
#endif

#ifndef __IRegExp2_FWD_DEFINED__
#define __IRegExp2_FWD_DEFINED__
typedef interface IRegExp2 IRegExp2;
#ifdef __cplusplus
interface IRegExp2;
#endif /* __cplusplus */
#endif

#ifndef __IMatch_FWD_DEFINED__
#define __IMatch_FWD_DEFINED__
typedef interface IMatch IMatch;
#ifdef __cplusplus
interface IMatch;
#endif /* __cplusplus */
#endif

#ifndef __IMatch2_FWD_DEFINED__
#define __IMatch2_FWD_DEFINED__
typedef interface IMatch2 IMatch2;
#ifdef __cplusplus
interface IMatch2;
#endif /* __cplusplus */
#endif

#ifndef __IMatchCollection_FWD_DEFINED__
#define __IMatchCollection_FWD_DEFINED__
typedef interface IMatchCollection IMatchCollection;
#ifdef __cplusplus
interface IMatchCollection;
#endif /* __cplusplus */
#endif

#ifndef __IMatchCollection2_FWD_DEFINED__
#define __IMatchCollection2_FWD_DEFINED__
typedef interface IMatchCollection2 IMatchCollection2;
#ifdef __cplusplus
interface IMatchCollection2;
#endif /* __cplusplus */
#endif

#ifndef __ISubMatches_FWD_DEFINED__
#define __ISubMatches_FWD_DEFINED__
typedef interface ISubMatches ISubMatches;
#ifdef __cplusplus
interface ISubMatches;
#endif /* __cplusplus */
#endif

#ifndef __RegExp_FWD_DEFINED__
#define __RegExp_FWD_DEFINED__
#ifdef __cplusplus
typedef class RegExp RegExp;
#else
typedef struct RegExp RegExp;
#endif /* defined __cplusplus */
#endif /* defined __RegExp_FWD_DEFINED__ */

#ifndef __Match_FWD_DEFINED__
#define __Match_FWD_DEFINED__
#ifdef __cplusplus
typedef class Match Match;
#else
typedef struct Match Match;
#endif /* defined __cplusplus */
#endif /* defined __Match_FWD_DEFINED__ */

#ifndef __MatchCollection_FWD_DEFINED__
#define __MatchCollection_FWD_DEFINED__
#ifdef __cplusplus
typedef class MatchCollection MatchCollection;
#else
typedef struct MatchCollection MatchCollection;
#endif /* defined __cplusplus */
#endif /* defined __MatchCollection_FWD_DEFINED__ */

#ifndef __SubMatches_FWD_DEFINED__
#define __SubMatches_FWD_DEFINED__
#ifdef __cplusplus
typedef class SubMatches SubMatches;
#else
typedef struct SubMatches SubMatches;
#endif /* defined __cplusplus */
#endif /* defined __SubMatches_FWD_DEFINED__ */

/* Headers for imported files */

#include <oaidl.h>

#ifdef __cplusplus
extern "C" {
#endif

#ifndef __VBScript_RegExp_55_LIBRARY_DEFINED__
#define __VBScript_RegExp_55_LIBRARY_DEFINED__

DEFINE_GUID(LIBID_VBScript_RegExp_55, 0x3f4daca7, 0x160d, 0x11d2, 0xa8,0xe9, 0x00,0x10,0x4b,0x36,0x5c,0x9f);

/*****************************************************************************
 * IRegExp interface
 */
#ifndef __IRegExp_INTERFACE_DEFINED__
#define __IRegExp_INTERFACE_DEFINED__

DEFINE_GUID(IID_IRegExp, 0x3f4daca0, 0x160d, 0x11d2, 0xa8,0xe9, 0x00,0x10,0x4b,0x36,0x5c,0x9f);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("3f4daca0-160d-11d2-a8e9-00104b365c9f")
IRegExp : public IDispatch
{
    virtual HRESULT STDMETHODCALLTYPE get_Pattern(
        BSTR *pPattern) = 0;

    virtual HRESULT STDMETHODCALLTYPE put_Pattern(
        BSTR pPattern) = 0;

    virtual HRESULT STDMETHODCALLTYPE get_IgnoreCase(
        VARIANT_BOOL *pIgnoreCase) = 0;

    virtual HRESULT STDMETHODCALLTYPE put_IgnoreCase(
        VARIANT_BOOL pIgnoreCase) = 0;

    virtual HRESULT STDMETHODCALLTYPE get_Global(
        VARIANT_BOOL *pGlobal) = 0;

    virtual HRESULT STDMETHODCALLTYPE put_Global(
        VARIANT_BOOL pGlobal) = 0;

    virtual HRESULT STDMETHODCALLTYPE Execute(
        BSTR sourceString,
        IDispatch **ppMatches) = 0;

    virtual HRESULT STDMETHODCALLTYPE Test(
        BSTR sourceString,
        VARIANT_BOOL *pMatch) = 0;

    virtual HRESULT STDMETHODCALLTYPE Replace(
        BSTR sourceString,
        BSTR replaceString,
        BSTR *pDestString) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IRegExp, 0x3f4daca0, 0x160d, 0x11d2, 0xa8,0xe9, 0x00,0x10,0x4b,0x36,0x5c,0x9f)
#endif
#else
typedef struct IRegExpVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IRegExp *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IRegExp *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IRegExp *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        IRegExp *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        IRegExp *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        IRegExp *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        IRegExp *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** IRegExp methods ***/
    HRESULT (STDMETHODCALLTYPE *get_Pattern)(
        IRegExp *This,
        BSTR *pPattern);

    HRESULT (STDMETHODCALLTYPE *put_Pattern)(
        IRegExp *This,
        BSTR pPattern);

    HRESULT (STDMETHODCALLTYPE *get_IgnoreCase)(
        IRegExp *This,
        VARIANT_BOOL *pIgnoreCase);

    HRESULT (STDMETHODCALLTYPE *put_IgnoreCase)(
        IRegExp *This,
        VARIANT_BOOL pIgnoreCase);

    HRESULT (STDMETHODCALLTYPE *get_Global)(
        IRegExp *This,
        VARIANT_BOOL *pGlobal);

    HRESULT (STDMETHODCALLTYPE *put_Global)(
        IRegExp *This,
        VARIANT_BOOL pGlobal);

    HRESULT (STDMETHODCALLTYPE *Execute)(
        IRegExp *This,
        BSTR sourceString,
        IDispatch **ppMatches);

    HRESULT (STDMETHODCALLTYPE *Test)(
        IRegExp *This,
        BSTR sourceString,
        VARIANT_BOOL *pMatch);

    HRESULT (STDMETHODCALLTYPE *Replace)(
        IRegExp *This,
        BSTR sourceString,
        BSTR replaceString,
        BSTR *pDestString);

    END_INTERFACE
} IRegExpVtbl;

interface IRegExp {
    CONST_VTBL IRegExpVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IRegExp_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IRegExp_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IRegExp_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define IRegExp_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define IRegExp_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define IRegExp_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define IRegExp_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** IRegExp methods ***/
#define IRegExp_get_Pattern(This,pPattern) (This)->lpVtbl->get_Pattern(This,pPattern)
#define IRegExp_put_Pattern(This,pPattern) (This)->lpVtbl->put_Pattern(This,pPattern)
#define IRegExp_get_IgnoreCase(This,pIgnoreCase) (This)->lpVtbl->get_IgnoreCase(This,pIgnoreCase)
#define IRegExp_put_IgnoreCase(This,pIgnoreCase) (This)->lpVtbl->put_IgnoreCase(This,pIgnoreCase)
#define IRegExp_get_Global(This,pGlobal) (This)->lpVtbl->get_Global(This,pGlobal)
#define IRegExp_put_Global(This,pGlobal) (This)->lpVtbl->put_Global(This,pGlobal)
#define IRegExp_Execute(This,sourceString,ppMatches) (This)->lpVtbl->Execute(This,sourceString,ppMatches)
#define IRegExp_Test(This,sourceString,pMatch) (This)->lpVtbl->Test(This,sourceString,pMatch)
#define IRegExp_Replace(This,sourceString,replaceString,pDestString) (This)->lpVtbl->Replace(This,sourceString,replaceString,pDestString)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IRegExp_QueryInterface(IRegExp* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IRegExp_AddRef(IRegExp* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IRegExp_Release(IRegExp* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static FORCEINLINE HRESULT IRegExp_GetTypeInfoCount(IRegExp* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static FORCEINLINE HRESULT IRegExp_GetTypeInfo(IRegExp* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static FORCEINLINE HRESULT IRegExp_GetIDsOfNames(IRegExp* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static FORCEINLINE HRESULT IRegExp_Invoke(IRegExp* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** IRegExp methods ***/
static FORCEINLINE HRESULT IRegExp_get_Pattern(IRegExp* This,BSTR *pPattern) {
    return This->lpVtbl->get_Pattern(This,pPattern);
}
static FORCEINLINE HRESULT IRegExp_put_Pattern(IRegExp* This,BSTR pPattern) {
    return This->lpVtbl->put_Pattern(This,pPattern);
}
static FORCEINLINE HRESULT IRegExp_get_IgnoreCase(IRegExp* This,VARIANT_BOOL *pIgnoreCase) {
    return This->lpVtbl->get_IgnoreCase(This,pIgnoreCase);
}
static FORCEINLINE HRESULT IRegExp_put_IgnoreCase(IRegExp* This,VARIANT_BOOL pIgnoreCase) {
    return This->lpVtbl->put_IgnoreCase(This,pIgnoreCase);
}
static FORCEINLINE HRESULT IRegExp_get_Global(IRegExp* This,VARIANT_BOOL *pGlobal) {
    return This->lpVtbl->get_Global(This,pGlobal);
}
static FORCEINLINE HRESULT IRegExp_put_Global(IRegExp* This,VARIANT_BOOL pGlobal) {
    return This->lpVtbl->put_Global(This,pGlobal);
}
static FORCEINLINE HRESULT IRegExp_Execute(IRegExp* This,BSTR sourceString,IDispatch **ppMatches) {
    return This->lpVtbl->Execute(This,sourceString,ppMatches);
}
static FORCEINLINE HRESULT IRegExp_Test(IRegExp* This,BSTR sourceString,VARIANT_BOOL *pMatch) {
    return This->lpVtbl->Test(This,sourceString,pMatch);
}
static FORCEINLINE HRESULT IRegExp_Replace(IRegExp* This,BSTR sourceString,BSTR replaceString,BSTR *pDestString) {
    return This->lpVtbl->Replace(This,sourceString,replaceString,pDestString);
}
#endif
#endif

#endif


#endif  /* __IRegExp_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IRegExp2 interface
 */
#ifndef __IRegExp2_INTERFACE_DEFINED__
#define __IRegExp2_INTERFACE_DEFINED__

DEFINE_GUID(IID_IRegExp2, 0x3f4dacb0, 0x160d, 0x11d2, 0xa8,0xe9, 0x00,0x10,0x4b,0x36,0x5c,0x9f);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("3f4dacb0-160d-11d2-a8e9-00104b365c9f")
IRegExp2 : public IDispatch
{
    virtual HRESULT STDMETHODCALLTYPE get_Pattern(
        BSTR *pPattern) = 0;

    virtual HRESULT STDMETHODCALLTYPE put_Pattern(
        BSTR pPattern) = 0;

    virtual HRESULT STDMETHODCALLTYPE get_IgnoreCase(
        VARIANT_BOOL *pIgnoreCase) = 0;

    virtual HRESULT STDMETHODCALLTYPE put_IgnoreCase(
        VARIANT_BOOL pIgnoreCase) = 0;

    virtual HRESULT STDMETHODCALLTYPE get_Global(
        VARIANT_BOOL *pGlobal) = 0;

    virtual HRESULT STDMETHODCALLTYPE put_Global(
        VARIANT_BOOL pGlobal) = 0;

    virtual HRESULT STDMETHODCALLTYPE get_Multiline(
        VARIANT_BOOL *pMultiline) = 0;

    virtual HRESULT STDMETHODCALLTYPE put_Multiline(
        VARIANT_BOOL pMultiline) = 0;

    virtual HRESULT STDMETHODCALLTYPE Execute(
        BSTR sourceString,
        IDispatch **ppMatches) = 0;

    virtual HRESULT STDMETHODCALLTYPE Test(
        BSTR sourceString,
        VARIANT_BOOL *pMatch) = 0;

    virtual HRESULT STDMETHODCALLTYPE Replace(
        BSTR sourceString,
        VARIANT replaceVar,
        BSTR *pDestString) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IRegExp2, 0x3f4dacb0, 0x160d, 0x11d2, 0xa8,0xe9, 0x00,0x10,0x4b,0x36,0x5c,0x9f)
#endif
#else
typedef struct IRegExp2Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IRegExp2 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IRegExp2 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IRegExp2 *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        IRegExp2 *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        IRegExp2 *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        IRegExp2 *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        IRegExp2 *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** IRegExp2 methods ***/
    HRESULT (STDMETHODCALLTYPE *get_Pattern)(
        IRegExp2 *This,
        BSTR *pPattern);

    HRESULT (STDMETHODCALLTYPE *put_Pattern)(
        IRegExp2 *This,
        BSTR pPattern);

    HRESULT (STDMETHODCALLTYPE *get_IgnoreCase)(
        IRegExp2 *This,
        VARIANT_BOOL *pIgnoreCase);

    HRESULT (STDMETHODCALLTYPE *put_IgnoreCase)(
        IRegExp2 *This,
        VARIANT_BOOL pIgnoreCase);

    HRESULT (STDMETHODCALLTYPE *get_Global)(
        IRegExp2 *This,
        VARIANT_BOOL *pGlobal);

    HRESULT (STDMETHODCALLTYPE *put_Global)(
        IRegExp2 *This,
        VARIANT_BOOL pGlobal);

    HRESULT (STDMETHODCALLTYPE *get_Multiline)(
        IRegExp2 *This,
        VARIANT_BOOL *pMultiline);

    HRESULT (STDMETHODCALLTYPE *put_Multiline)(
        IRegExp2 *This,
        VARIANT_BOOL pMultiline);

    HRESULT (STDMETHODCALLTYPE *Execute)(
        IRegExp2 *This,
        BSTR sourceString,
        IDispatch **ppMatches);

    HRESULT (STDMETHODCALLTYPE *Test)(
        IRegExp2 *This,
        BSTR sourceString,
        VARIANT_BOOL *pMatch);

    HRESULT (STDMETHODCALLTYPE *Replace)(
        IRegExp2 *This,
        BSTR sourceString,
        VARIANT replaceVar,
        BSTR *pDestString);

    END_INTERFACE
} IRegExp2Vtbl;

interface IRegExp2 {
    CONST_VTBL IRegExp2Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IRegExp2_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IRegExp2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IRegExp2_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define IRegExp2_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define IRegExp2_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define IRegExp2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define IRegExp2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** IRegExp2 methods ***/
#define IRegExp2_get_Pattern(This,pPattern) (This)->lpVtbl->get_Pattern(This,pPattern)
#define IRegExp2_put_Pattern(This,pPattern) (This)->lpVtbl->put_Pattern(This,pPattern)
#define IRegExp2_get_IgnoreCase(This,pIgnoreCase) (This)->lpVtbl->get_IgnoreCase(This,pIgnoreCase)
#define IRegExp2_put_IgnoreCase(This,pIgnoreCase) (This)->lpVtbl->put_IgnoreCase(This,pIgnoreCase)
#define IRegExp2_get_Global(This,pGlobal) (This)->lpVtbl->get_Global(This,pGlobal)
#define IRegExp2_put_Global(This,pGlobal) (This)->lpVtbl->put_Global(This,pGlobal)
#define IRegExp2_get_Multiline(This,pMultiline) (This)->lpVtbl->get_Multiline(This,pMultiline)
#define IRegExp2_put_Multiline(This,pMultiline) (This)->lpVtbl->put_Multiline(This,pMultiline)
#define IRegExp2_Execute(This,sourceString,ppMatches) (This)->lpVtbl->Execute(This,sourceString,ppMatches)
#define IRegExp2_Test(This,sourceString,pMatch) (This)->lpVtbl->Test(This,sourceString,pMatch)
#define IRegExp2_Replace(This,sourceString,replaceVar,pDestString) (This)->lpVtbl->Replace(This,sourceString,replaceVar,pDestString)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IRegExp2_QueryInterface(IRegExp2* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IRegExp2_AddRef(IRegExp2* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IRegExp2_Release(IRegExp2* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static FORCEINLINE HRESULT IRegExp2_GetTypeInfoCount(IRegExp2* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static FORCEINLINE HRESULT IRegExp2_GetTypeInfo(IRegExp2* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static FORCEINLINE HRESULT IRegExp2_GetIDsOfNames(IRegExp2* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static FORCEINLINE HRESULT IRegExp2_Invoke(IRegExp2* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** IRegExp2 methods ***/
static FORCEINLINE HRESULT IRegExp2_get_Pattern(IRegExp2* This,BSTR *pPattern) {
    return This->lpVtbl->get_Pattern(This,pPattern);
}
static FORCEINLINE HRESULT IRegExp2_put_Pattern(IRegExp2* This,BSTR pPattern) {
    return This->lpVtbl->put_Pattern(This,pPattern);
}
static FORCEINLINE HRESULT IRegExp2_get_IgnoreCase(IRegExp2* This,VARIANT_BOOL *pIgnoreCase) {
    return This->lpVtbl->get_IgnoreCase(This,pIgnoreCase);
}
static FORCEINLINE HRESULT IRegExp2_put_IgnoreCase(IRegExp2* This,VARIANT_BOOL pIgnoreCase) {
    return This->lpVtbl->put_IgnoreCase(This,pIgnoreCase);
}
static FORCEINLINE HRESULT IRegExp2_get_Global(IRegExp2* This,VARIANT_BOOL *pGlobal) {
    return This->lpVtbl->get_Global(This,pGlobal);
}
static FORCEINLINE HRESULT IRegExp2_put_Global(IRegExp2* This,VARIANT_BOOL pGlobal) {
    return This->lpVtbl->put_Global(This,pGlobal);
}
static FORCEINLINE HRESULT IRegExp2_get_Multiline(IRegExp2* This,VARIANT_BOOL *pMultiline) {
    return This->lpVtbl->get_Multiline(This,pMultiline);
}
static FORCEINLINE HRESULT IRegExp2_put_Multiline(IRegExp2* This,VARIANT_BOOL pMultiline) {
    return This->lpVtbl->put_Multiline(This,pMultiline);
}
static FORCEINLINE HRESULT IRegExp2_Execute(IRegExp2* This,BSTR sourceString,IDispatch **ppMatches) {
    return This->lpVtbl->Execute(This,sourceString,ppMatches);
}
static FORCEINLINE HRESULT IRegExp2_Test(IRegExp2* This,BSTR sourceString,VARIANT_BOOL *pMatch) {
    return This->lpVtbl->Test(This,sourceString,pMatch);
}
static FORCEINLINE HRESULT IRegExp2_Replace(IRegExp2* This,BSTR sourceString,VARIANT replaceVar,BSTR *pDestString) {
    return This->lpVtbl->Replace(This,sourceString,replaceVar,pDestString);
}
#endif
#endif

#endif


#endif  /* __IRegExp2_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IMatch interface
 */
#ifndef __IMatch_INTERFACE_DEFINED__
#define __IMatch_INTERFACE_DEFINED__

DEFINE_GUID(IID_IMatch, 0x3f4daca1, 0x160d, 0x11d2, 0xa8,0xe9, 0x00,0x10,0x4b,0x36,0x5c,0x9f);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("3f4daca1-160d-11d2-a8e9-00104b365c9f")
IMatch : public IDispatch
{
    virtual HRESULT STDMETHODCALLTYPE get_Value(
        BSTR *pValue) = 0;

    virtual HRESULT STDMETHODCALLTYPE get_FirstIndex(
        LONG *pFirstIndex) = 0;

    virtual HRESULT STDMETHODCALLTYPE get_Length(
        LONG *pLength) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IMatch, 0x3f4daca1, 0x160d, 0x11d2, 0xa8,0xe9, 0x00,0x10,0x4b,0x36,0x5c,0x9f)
#endif
#else
typedef struct IMatchVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IMatch *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IMatch *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IMatch *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        IMatch *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        IMatch *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        IMatch *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        IMatch *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** IMatch methods ***/
    HRESULT (STDMETHODCALLTYPE *get_Value)(
        IMatch *This,
        BSTR *pValue);

    HRESULT (STDMETHODCALLTYPE *get_FirstIndex)(
        IMatch *This,
        LONG *pFirstIndex);

    HRESULT (STDMETHODCALLTYPE *get_Length)(
        IMatch *This,
        LONG *pLength);

    END_INTERFACE
} IMatchVtbl;

interface IMatch {
    CONST_VTBL IMatchVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IMatch_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IMatch_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IMatch_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define IMatch_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define IMatch_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define IMatch_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define IMatch_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** IMatch methods ***/
#define IMatch_get_Value(This,pValue) (This)->lpVtbl->get_Value(This,pValue)
#define IMatch_get_FirstIndex(This,pFirstIndex) (This)->lpVtbl->get_FirstIndex(This,pFirstIndex)
#define IMatch_get_Length(This,pLength) (This)->lpVtbl->get_Length(This,pLength)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IMatch_QueryInterface(IMatch* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IMatch_AddRef(IMatch* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IMatch_Release(IMatch* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static FORCEINLINE HRESULT IMatch_GetTypeInfoCount(IMatch* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static FORCEINLINE HRESULT IMatch_GetTypeInfo(IMatch* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static FORCEINLINE HRESULT IMatch_GetIDsOfNames(IMatch* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static FORCEINLINE HRESULT IMatch_Invoke(IMatch* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** IMatch methods ***/
static FORCEINLINE HRESULT IMatch_get_Value(IMatch* This,BSTR *pValue) {
    return This->lpVtbl->get_Value(This,pValue);
}
static FORCEINLINE HRESULT IMatch_get_FirstIndex(IMatch* This,LONG *pFirstIndex) {
    return This->lpVtbl->get_FirstIndex(This,pFirstIndex);
}
static FORCEINLINE HRESULT IMatch_get_Length(IMatch* This,LONG *pLength) {
    return This->lpVtbl->get_Length(This,pLength);
}
#endif
#endif

#endif


#endif  /* __IMatch_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IMatch2 interface
 */
#ifndef __IMatch2_INTERFACE_DEFINED__
#define __IMatch2_INTERFACE_DEFINED__

DEFINE_GUID(IID_IMatch2, 0x3f4dacb1, 0x160d, 0x11d2, 0xa8,0xe9, 0x00,0x10,0x4b,0x36,0x5c,0x9f);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("3f4dacb1-160d-11d2-a8e9-00104b365c9f")
IMatch2 : public IDispatch
{
    virtual HRESULT STDMETHODCALLTYPE get_Value(
        BSTR *pValue) = 0;

    virtual HRESULT STDMETHODCALLTYPE get_FirstIndex(
        LONG *pFirstIndex) = 0;

    virtual HRESULT STDMETHODCALLTYPE get_Length(
        LONG *pLength) = 0;

    virtual HRESULT STDMETHODCALLTYPE get_SubMatches(
        IDispatch **ppSubMatches) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IMatch2, 0x3f4dacb1, 0x160d, 0x11d2, 0xa8,0xe9, 0x00,0x10,0x4b,0x36,0x5c,0x9f)
#endif
#else
typedef struct IMatch2Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IMatch2 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IMatch2 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IMatch2 *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        IMatch2 *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        IMatch2 *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        IMatch2 *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        IMatch2 *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** IMatch2 methods ***/
    HRESULT (STDMETHODCALLTYPE *get_Value)(
        IMatch2 *This,
        BSTR *pValue);

    HRESULT (STDMETHODCALLTYPE *get_FirstIndex)(
        IMatch2 *This,
        LONG *pFirstIndex);

    HRESULT (STDMETHODCALLTYPE *get_Length)(
        IMatch2 *This,
        LONG *pLength);

    HRESULT (STDMETHODCALLTYPE *get_SubMatches)(
        IMatch2 *This,
        IDispatch **ppSubMatches);

    END_INTERFACE
} IMatch2Vtbl;

interface IMatch2 {
    CONST_VTBL IMatch2Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IMatch2_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IMatch2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IMatch2_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define IMatch2_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define IMatch2_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define IMatch2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define IMatch2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** IMatch2 methods ***/
#define IMatch2_get_Value(This,pValue) (This)->lpVtbl->get_Value(This,pValue)
#define IMatch2_get_FirstIndex(This,pFirstIndex) (This)->lpVtbl->get_FirstIndex(This,pFirstIndex)
#define IMatch2_get_Length(This,pLength) (This)->lpVtbl->get_Length(This,pLength)
#define IMatch2_get_SubMatches(This,ppSubMatches) (This)->lpVtbl->get_SubMatches(This,ppSubMatches)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IMatch2_QueryInterface(IMatch2* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IMatch2_AddRef(IMatch2* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IMatch2_Release(IMatch2* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static FORCEINLINE HRESULT IMatch2_GetTypeInfoCount(IMatch2* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static FORCEINLINE HRESULT IMatch2_GetTypeInfo(IMatch2* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static FORCEINLINE HRESULT IMatch2_GetIDsOfNames(IMatch2* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static FORCEINLINE HRESULT IMatch2_Invoke(IMatch2* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** IMatch2 methods ***/
static FORCEINLINE HRESULT IMatch2_get_Value(IMatch2* This,BSTR *pValue) {
    return This->lpVtbl->get_Value(This,pValue);
}
static FORCEINLINE HRESULT IMatch2_get_FirstIndex(IMatch2* This,LONG *pFirstIndex) {
    return This->lpVtbl->get_FirstIndex(This,pFirstIndex);
}
static FORCEINLINE HRESULT IMatch2_get_Length(IMatch2* This,LONG *pLength) {
    return This->lpVtbl->get_Length(This,pLength);
}
static FORCEINLINE HRESULT IMatch2_get_SubMatches(IMatch2* This,IDispatch **ppSubMatches) {
    return This->lpVtbl->get_SubMatches(This,ppSubMatches);
}
#endif
#endif

#endif


#endif  /* __IMatch2_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IMatchCollection interface
 */
#ifndef __IMatchCollection_INTERFACE_DEFINED__
#define __IMatchCollection_INTERFACE_DEFINED__

DEFINE_GUID(IID_IMatchCollection, 0x3f4daca2, 0x160d, 0x11d2, 0xa8,0xe9, 0x00,0x10,0x4b,0x36,0x5c,0x9f);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("3f4daca2-160d-11d2-a8e9-00104b365c9f")
IMatchCollection : public IDispatch
{
    virtual HRESULT STDMETHODCALLTYPE get_Item(
        LONG index,
        IDispatch **ppMatch) = 0;

    virtual HRESULT STDMETHODCALLTYPE get_Count(
        LONG *pCount) = 0;

    virtual HRESULT STDMETHODCALLTYPE get__NewEnum(
        IUnknown **ppEnum) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IMatchCollection, 0x3f4daca2, 0x160d, 0x11d2, 0xa8,0xe9, 0x00,0x10,0x4b,0x36,0x5c,0x9f)
#endif
#else
typedef struct IMatchCollectionVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IMatchCollection *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IMatchCollection *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IMatchCollection *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        IMatchCollection *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        IMatchCollection *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        IMatchCollection *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        IMatchCollection *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** IMatchCollection methods ***/
    HRESULT (STDMETHODCALLTYPE *get_Item)(
        IMatchCollection *This,
        LONG index,
        IDispatch **ppMatch);

    HRESULT (STDMETHODCALLTYPE *get_Count)(
        IMatchCollection *This,
        LONG *pCount);

    HRESULT (STDMETHODCALLTYPE *get__NewEnum)(
        IMatchCollection *This,
        IUnknown **ppEnum);

    END_INTERFACE
} IMatchCollectionVtbl;

interface IMatchCollection {
    CONST_VTBL IMatchCollectionVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IMatchCollection_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IMatchCollection_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IMatchCollection_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define IMatchCollection_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define IMatchCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define IMatchCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define IMatchCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** IMatchCollection methods ***/
#define IMatchCollection_get_Item(This,index,ppMatch) (This)->lpVtbl->get_Item(This,index,ppMatch)
#define IMatchCollection_get_Count(This,pCount) (This)->lpVtbl->get_Count(This,pCount)
#define IMatchCollection_get__NewEnum(This,ppEnum) (This)->lpVtbl->get__NewEnum(This,ppEnum)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IMatchCollection_QueryInterface(IMatchCollection* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IMatchCollection_AddRef(IMatchCollection* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IMatchCollection_Release(IMatchCollection* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static FORCEINLINE HRESULT IMatchCollection_GetTypeInfoCount(IMatchCollection* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static FORCEINLINE HRESULT IMatchCollection_GetTypeInfo(IMatchCollection* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static FORCEINLINE HRESULT IMatchCollection_GetIDsOfNames(IMatchCollection* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static FORCEINLINE HRESULT IMatchCollection_Invoke(IMatchCollection* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** IMatchCollection methods ***/
static FORCEINLINE HRESULT IMatchCollection_get_Item(IMatchCollection* This,LONG index,IDispatch **ppMatch) {
    return This->lpVtbl->get_Item(This,index,ppMatch);
}
static FORCEINLINE HRESULT IMatchCollection_get_Count(IMatchCollection* This,LONG *pCount) {
    return This->lpVtbl->get_Count(This,pCount);
}
static FORCEINLINE HRESULT IMatchCollection_get__NewEnum(IMatchCollection* This,IUnknown **ppEnum) {
    return This->lpVtbl->get__NewEnum(This,ppEnum);
}
#endif
#endif

#endif


#endif  /* __IMatchCollection_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IMatchCollection2 interface
 */
#ifndef __IMatchCollection2_INTERFACE_DEFINED__
#define __IMatchCollection2_INTERFACE_DEFINED__

DEFINE_GUID(IID_IMatchCollection2, 0x3f4dacb2, 0x160d, 0x11d2, 0xa8,0xe9, 0x00,0x10,0x4b,0x36,0x5c,0x9f);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("3f4dacb2-160d-11d2-a8e9-00104b365c9f")
IMatchCollection2 : public IDispatch
{
    virtual HRESULT STDMETHODCALLTYPE get_Item(
        LONG index,
        IDispatch **ppMatch) = 0;

    virtual HRESULT STDMETHODCALLTYPE get_Count(
        LONG *pCount) = 0;

    virtual HRESULT STDMETHODCALLTYPE get__NewEnum(
        IUnknown **ppEnum) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IMatchCollection2, 0x3f4dacb2, 0x160d, 0x11d2, 0xa8,0xe9, 0x00,0x10,0x4b,0x36,0x5c,0x9f)
#endif
#else
typedef struct IMatchCollection2Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IMatchCollection2 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IMatchCollection2 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IMatchCollection2 *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        IMatchCollection2 *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        IMatchCollection2 *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        IMatchCollection2 *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        IMatchCollection2 *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** IMatchCollection2 methods ***/
    HRESULT (STDMETHODCALLTYPE *get_Item)(
        IMatchCollection2 *This,
        LONG index,
        IDispatch **ppMatch);

    HRESULT (STDMETHODCALLTYPE *get_Count)(
        IMatchCollection2 *This,
        LONG *pCount);

    HRESULT (STDMETHODCALLTYPE *get__NewEnum)(
        IMatchCollection2 *This,
        IUnknown **ppEnum);

    END_INTERFACE
} IMatchCollection2Vtbl;

interface IMatchCollection2 {
    CONST_VTBL IMatchCollection2Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IMatchCollection2_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IMatchCollection2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IMatchCollection2_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define IMatchCollection2_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define IMatchCollection2_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define IMatchCollection2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define IMatchCollection2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** IMatchCollection2 methods ***/
#define IMatchCollection2_get_Item(This,index,ppMatch) (This)->lpVtbl->get_Item(This,index,ppMatch)
#define IMatchCollection2_get_Count(This,pCount) (This)->lpVtbl->get_Count(This,pCount)
#define IMatchCollection2_get__NewEnum(This,ppEnum) (This)->lpVtbl->get__NewEnum(This,ppEnum)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IMatchCollection2_QueryInterface(IMatchCollection2* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IMatchCollection2_AddRef(IMatchCollection2* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IMatchCollection2_Release(IMatchCollection2* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static FORCEINLINE HRESULT IMatchCollection2_GetTypeInfoCount(IMatchCollection2* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static FORCEINLINE HRESULT IMatchCollection2_GetTypeInfo(IMatchCollection2* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static FORCEINLINE HRESULT IMatchCollection2_GetIDsOfNames(IMatchCollection2* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static FORCEINLINE HRESULT IMatchCollection2_Invoke(IMatchCollection2* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** IMatchCollection2 methods ***/
static FORCEINLINE HRESULT IMatchCollection2_get_Item(IMatchCollection2* This,LONG index,IDispatch **ppMatch) {
    return This->lpVtbl->get_Item(This,index,ppMatch);
}
static FORCEINLINE HRESULT IMatchCollection2_get_Count(IMatchCollection2* This,LONG *pCount) {
    return This->lpVtbl->get_Count(This,pCount);
}
static FORCEINLINE HRESULT IMatchCollection2_get__NewEnum(IMatchCollection2* This,IUnknown **ppEnum) {
    return This->lpVtbl->get__NewEnum(This,ppEnum);
}
#endif
#endif

#endif


#endif  /* __IMatchCollection2_INTERFACE_DEFINED__ */

/*****************************************************************************
 * ISubMatches interface
 */
#ifndef __ISubMatches_INTERFACE_DEFINED__
#define __ISubMatches_INTERFACE_DEFINED__

DEFINE_GUID(IID_ISubMatches, 0x3f4dacb3, 0x160d, 0x11d2, 0xa8,0xe9, 0x00,0x10,0x4b,0x36,0x5c,0x9f);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("3f4dacb3-160d-11d2-a8e9-00104b365c9f")
ISubMatches : public IDispatch
{
    virtual HRESULT STDMETHODCALLTYPE get_Item(
        LONG index,
        VARIANT *pSubMatch) = 0;

    virtual HRESULT STDMETHODCALLTYPE get_Count(
        LONG *pCount) = 0;

    virtual HRESULT STDMETHODCALLTYPE get__NewEnum(
        IUnknown **ppEnum) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ISubMatches, 0x3f4dacb3, 0x160d, 0x11d2, 0xa8,0xe9, 0x00,0x10,0x4b,0x36,0x5c,0x9f)
#endif
#else
typedef struct ISubMatchesVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ISubMatches *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ISubMatches *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ISubMatches *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        ISubMatches *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        ISubMatches *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        ISubMatches *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        ISubMatches *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** ISubMatches methods ***/
    HRESULT (STDMETHODCALLTYPE *get_Item)(
        ISubMatches *This,
        LONG index,
        VARIANT *pSubMatch);

    HRESULT (STDMETHODCALLTYPE *get_Count)(
        ISubMatches *This,
        LONG *pCount);

    HRESULT (STDMETHODCALLTYPE *get__NewEnum)(
        ISubMatches *This,
        IUnknown **ppEnum);

    END_INTERFACE
} ISubMatchesVtbl;

interface ISubMatches {
    CONST_VTBL ISubMatchesVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ISubMatches_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ISubMatches_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ISubMatches_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define ISubMatches_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define ISubMatches_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define ISubMatches_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define ISubMatches_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** ISubMatches methods ***/
#define ISubMatches_get_Item(This,index,pSubMatch) (This)->lpVtbl->get_Item(This,index,pSubMatch)
#define ISubMatches_get_Count(This,pCount) (This)->lpVtbl->get_Count(This,pCount)
#define ISubMatches_get__NewEnum(This,ppEnum) (This)->lpVtbl->get__NewEnum(This,ppEnum)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT ISubMatches_QueryInterface(ISubMatches* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG ISubMatches_AddRef(ISubMatches* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG ISubMatches_Release(ISubMatches* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static FORCEINLINE HRESULT ISubMatches_GetTypeInfoCount(ISubMatches* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static FORCEINLINE HRESULT ISubMatches_GetTypeInfo(ISubMatches* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static FORCEINLINE HRESULT ISubMatches_GetIDsOfNames(ISubMatches* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static FORCEINLINE HRESULT ISubMatches_Invoke(ISubMatches* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** ISubMatches methods ***/
static FORCEINLINE HRESULT ISubMatches_get_Item(ISubMatches* This,LONG index,VARIANT *pSubMatch) {
    return This->lpVtbl->get_Item(This,index,pSubMatch);
}
static FORCEINLINE HRESULT ISubMatches_get_Count(ISubMatches* This,LONG *pCount) {
    return This->lpVtbl->get_Count(This,pCount);
}
static FORCEINLINE HRESULT ISubMatches_get__NewEnum(ISubMatches* This,IUnknown **ppEnum) {
    return This->lpVtbl->get__NewEnum(This,ppEnum);
}
#endif
#endif

#endif


#endif  /* __ISubMatches_INTERFACE_DEFINED__ */

/*****************************************************************************
 * RegExp coclass
 */

DEFINE_GUID(CLSID_RegExp, 0x3f4daca4, 0x160d, 0x11d2, 0xa8,0xe9, 0x00,0x10,0x4b,0x36,0x5c,0x9f);

#ifdef __cplusplus
class DECLSPEC_UUID("3f4daca4-160d-11d2-a8e9-00104b365c9f") RegExp;
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(RegExp, 0x3f4daca4, 0x160d, 0x11d2, 0xa8,0xe9, 0x00,0x10,0x4b,0x36,0x5c,0x9f)
#endif
#endif

/*****************************************************************************
 * Match coclass
 */

DEFINE_GUID(CLSID_Match, 0x3f4daca5, 0x160d, 0x11d2, 0xa8,0xe9, 0x00,0x10,0x4b,0x36,0x5c,0x9f);

#ifdef __cplusplus
class DECLSPEC_UUID("3f4daca5-160d-11d2-a8e9-00104b365c9f") Match;
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(Match, 0x3f4daca5, 0x160d, 0x11d2, 0xa8,0xe9, 0x00,0x10,0x4b,0x36,0x5c,0x9f)
#endif
#endif

/*****************************************************************************
 * MatchCollection coclass
 */

DEFINE_GUID(CLSID_MatchCollection, 0x3f4daca6, 0x160d, 0x11d2, 0xa8,0xe9, 0x00,0x10,0x4b,0x36,0x5c,0x9f);

#ifdef __cplusplus
class DECLSPEC_UUID("3f4daca6-160d-11d2-a8e9-00104b365c9f") MatchCollection;
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(MatchCollection, 0x3f4daca6, 0x160d, 0x11d2, 0xa8,0xe9, 0x00,0x10,0x4b,0x36,0x5c,0x9f)
#endif
#endif

/*****************************************************************************
 * SubMatches coclass
 */

DEFINE_GUID(CLSID_SubMatches, 0x3f4dacc0, 0x160d, 0x11d2, 0xa8,0xe9, 0x00,0x10,0x4b,0x36,0x5c,0x9f);

#ifdef __cplusplus
class DECLSPEC_UUID("3f4dacc0-160d-11d2-a8e9-00104b365c9f") SubMatches;
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(SubMatches, 0x3f4dacc0, 0x160d, 0x11d2, 0xa8,0xe9, 0x00,0x10,0x4b,0x36,0x5c,0x9f)
#endif
#endif

#endif /* __VBScript_RegExp_55_LIBRARY_DEFINED__ */
/* Begin additional prototypes for all interfaces */

ULONG           __RPC_USER BSTR_UserSize     (ULONG *, ULONG, BSTR *);
unsigned char * __RPC_USER BSTR_UserMarshal  (ULONG *, unsigned char *, BSTR *);
unsigned char * __RPC_USER BSTR_UserUnmarshal(ULONG *, unsigned char *, BSTR *);
void            __RPC_USER BSTR_UserFree     (ULONG *, BSTR *);
ULONG           __RPC_USER VARIANT_UserSize     (ULONG *, ULONG, VARIANT *);
unsigned char * __RPC_USER VARIANT_UserMarshal  (ULONG *, unsigned char *, VARIANT *);
unsigned char * __RPC_USER VARIANT_UserUnmarshal(ULONG *, unsigned char *, VARIANT *);
void            __RPC_USER VARIANT_UserFree     (ULONG *, VARIANT *);

/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __vbsregexp55_h__ */
